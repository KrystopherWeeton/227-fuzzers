; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/mem_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/mem_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.932" = type { %"class.std::__1::__function::__policy_func.936" }
%"class.std::__1::__function::__policy_func.936" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.937", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.937" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::function.938" = type { %"class.std::__1::__function::__policy_func.942" }
%"class.std::__1::__function::__policy_func.942" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.943", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.943" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.951" }
%"struct.std::__1::__split_buffer" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.spvtools::opt::Instruction"*** }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::function.955" = type { %"class.std::__1::__function::__policy_func.959" }
%"class.std::__1::__function::__policy_func.959" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.960", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.960" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1028" = type { %"class.std::__1::__function::__policy_func.1032" }
%"class.std::__1::__function::__policy_func.1032" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1033", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1033" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.962" = type { %"class.std::__1::__function::__policy_func.966" }
%"class.std::__1::__function::__policy_func.966" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.967", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.967" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::__tree_node.1144" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.1039" = type { i8 }
%"class.std::__1::tuple.1050" = type { %"struct.std::__1::__tuple_impl.1051" }
%"struct.std::__1::__tuple_impl.1051" = type { %"class.std::__1::__tuple_leaf.1052" }
%"class.std::__1::__tuple_leaf.1052" = type { i32* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i32, i32 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::unordered_set.971" = type { %"class.std::__1::__hash_table.972" }
%"class.std::__1::__hash_table.972" = type <{ %"class.std::__1::unique_ptr.973", %"class.std::__1::__compressed_pair.983", %"class.std::__1::__compressed_pair.988", %"class.std::__1::__compressed_pair.992", [4 x i8] }>
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975", %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"struct.std::__1::__hash_node_base.976"** }
%"struct.std::__1::__hash_node_base.976" = type { %"struct.std::__1::__hash_node_base.976"* }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.std::__1::__bucket_list_deallocator.978" }
%"class.std::__1::__bucket_list_deallocator.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::__hash_node_base.976" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::UptrVectorIterator" = type { %"class.std::__1::vector.38"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr.40"* }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::__1::queue.999" = type { %"class.std::__1::deque.1000" }
%"class.std::__1::deque.1000" = type { %"class.std::__1::__deque_base.1001" }
%"class.std::__1::__deque_base.1001" = type { %"struct.std::__1::__split_buffer.1002", i64, %"class.std::__1::__compressed_pair.1008" }
%"struct.std::__1::__split_buffer.1002" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.spvtools::opt::BasicBlock"*** }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::function.1015" = type { %"class.std::__1::__function::__policy_func.1019" }
%"class.std::__1::__function::__policy_func.1019" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1020", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1020" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1023" }
%"struct.std::__1::pair.1023" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple.1085" = type { %"struct.std::__1::__tuple_impl.1086" }
%"struct.std::__1::__tuple_impl.1086" = type { %"class.std::__1::__tuple_leaf.1087" }
%"class.std::__1::__tuple_leaf.1087" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125", %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.std::__1::__hash_node.1048"* }
%"struct.std::__1::__hash_node.1048" = type <{ %"struct.std::__1::__hash_node_base.915", i64, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.std::__1::__hash_node_destructor.1127" }
%"class.std::__1::__hash_node_destructor.1127" = type <{ %"class.std::__1::allocator.925"*, i8, [7 x i8] }>
%"class.std::__1::allocator.925" = type { i8 }
%"struct.std::__1::__split_buffer.1135" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.947", %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.std::__1::allocator.949"* }
%"class.std::__1::allocator.949" = type { i8 }
%"struct.std::__1::__split_buffer.1171" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1004", %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.std::__1::allocator.1006"* }
%"class.std::__1::allocator.1006" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1183" = type { %class.anon.1014 }
%class.anon.1014 = type { %"class.std::__1::unordered_set.971"*, %"class.std::__1::unordered_set.971"*, %"class.std::__1::queue.999"*, %"class.spvtools::opt::MemPass"* }

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS5_11InstructionEE3$_0FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass24HasOnlyNamesAndDecoratesEjE3$_1FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass8HasLoadsEjE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass9AddStoresEjPNS_5queueIPNS5_11InstructionENS_5dequeIS9_NS_9allocatorIS9_EEEEEEE3$_3FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass7DCEInstEPNS5_11InstructionERKNS_8functionIFvS8_EEEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass20HasOnlySupportedRefsEjE3$_5FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass11RemoveBlockEPNS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEE3$_6FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_8FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass16IsBaseTargetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::MemPass"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -20
  %6 = icmp ult i32 %5, 13
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = trunc i32 %5 to i13
  %9 = lshr i13 -3841, %8
  %10 = and i13 %9, 1
  %11 = icmp ne i13 %10, 0
  ret i1 %11

12:                                               ; preds = %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.932", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %87 [
    i32 21, label %88
    i32 22, label %88
    i32 20, label %88
    i32 23, label %88
    i32 24, label %88
    i32 25, label %88
    i32 26, label %88
    i32 27, label %88
    i32 32, label %88
    i32 28, label %6
    i32 30, label %43
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 104) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DefUseManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 64
  %24 = getelementptr inbounds i8, i8* %16, i64 96
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %17, %"class.spvtools::opt::Module"* %15) #13
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6
  %27 = ptrtoint i8* %16 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %26 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %26 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %33, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %29) #13
  br label %34

34:                                               ; preds = %32, %13
  %35 = load i32, i32* %9, align 8
  %36 = or i32 %35, 1
  store i32 %36, i32* %9, align 8
  br label %37

37:                                               ; preds = %6, %34
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 1) #13
  %41 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %39, i32 %40) #13
  %42 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::Instruction"* %41)
  br label %88

43:                                               ; preds = %2
  %44 = bitcast %"class.std::__1::function.932"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #13
  %45 = ptrtoint %"class.spvtools::opt::MemPass"* %0 to i64
  %46 = getelementptr inbounds %"class.std::__1::function.932", %"class.std::__1::function.932"* %3, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.932", %"class.std::__1::function.932"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS9_11InstructionEE3$_0S4_EEEEbPKNS0_16__policy_storageES3_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %46, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS5_11InstructionEE3$_0FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %47, align 8
  %48 = bitcast %"class.std::__1::function.932"* %3 to i64*
  store i64 %45, i64* %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %50 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %52 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %51, align 8
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %50, %52
  br i1 %53, label %77, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.std::__1::function.932", %"class.std::__1::function.932"* %3, i64 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %71, %54
  %57 = phi %"struct.spvtools::opt::Operand"* [ %50, %54 ], [ %72, %71 ]
  %58 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %59) #13
  br i1 %60, label %61, label %71

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %57, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %62, align 8
  %64 = icmp eq %"class.std::__1::vector.3"* %63, null
  %65 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %63, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %57, i64 0, i32 1, i32 2
  %67 = select i1 %64, i32** %66, i32** %65
  %68 = load i32*, i32** %67, align 8
  %69 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %46, align 8
  %70 = call zeroext i1 %69(%"union.std::__1::__function::__policy_storage"* nonnull %55, i32* %68) #13
  br i1 %70, label %71, label %74

71:                                               ; preds = %61, %56
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %57, i64 1
  %73 = icmp eq %"struct.spvtools::opt::Operand"* %72, %52
  br i1 %73, label %74, label %56

74:                                               ; preds = %71, %61
  %75 = phi i1 [ true, %71 ], [ false, %61 ]
  %76 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  br label %77

77:                                               ; preds = %74, %43
  %78 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS5_11InstructionEE3$_0FbPKjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %43 ], [ %76, %74 ]
  %79 = phi i1 [ true, %43 ], [ %75, %74 ]
  %80 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %78, i64 0, i32 1
  %81 = load void (i8*)*, void (i8*)** %80, align 8
  %82 = icmp eq void (i8*)* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::function.932", %"class.std::__1::function.932"* %3, i64 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void %81(i8* %85) #13
  br label %86

86:                                               ; preds = %77, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #13
  br label %88

87:                                               ; preds = %2
  br label %88

88:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %87, %37, %86
  %89 = phi i1 [ %79, %86 ], [ %42, %37 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ false, %87 ]
  ret i1 %89
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass19IsNonPtrAccessChainE6SpvOp_(%"class.spvtools::opt::MemPass"* nocapture readnone, i32) local_unnamed_addr #4 align 2 {
  %3 = add i32 %1, -65
  %4 = icmp ult i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7MemPass5IsPtrEj(%"class.spvtools::opt::MemPass"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #13
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.62"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %22 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #13
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  br label %34

34:                                               ; preds = %59, %33
  %35 = phi %"class.spvtools::opt::IRContext"* [ %4, %33 ], [ %54, %59 ]
  %36 = phi i32 [ %1, %33 ], [ %53, %59 ]
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %36) #13
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %84 [
    i32 83, label %42
    i32 59, label %133
  ]

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = select i1 %48, i32 1, i32 2
  %50 = xor i1 %48, true
  %51 = zext i1 %50 to i32
  %52 = select i1 %45, i32 %51, i32 %49
  %53 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 %52) #13
  %54 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %42, %81
  br label %34

60:                                               ; preds = %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = tail call i8* @_Znwm(i64 104) #12
  %64 = bitcast i8* %63 to %"class.spvtools::opt::analysis::DefUseManager"*
  %65 = getelementptr inbounds i8, i8* %63, i64 32
  %66 = bitcast i8* %65 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %63, i64 48
  %68 = getelementptr inbounds i8, i8* %63, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #13
  %69 = bitcast i8* %68 to i8**
  store i8* %67, i8** %69, align 8
  %70 = getelementptr inbounds i8, i8* %63, i64 64
  %71 = getelementptr inbounds i8, i8* %63, i64 96
  %72 = bitcast i8* %71 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %72, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %64, %"class.spvtools::opt::Module"* %62) #13
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 6
  %74 = ptrtoint i8* %63 to i64
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.62"* %73 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %76, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %60
  %80 = bitcast %"class.std::__1::unique_ptr.62"* %73 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %80, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %76) #13
  br label %81

81:                                               ; preds = %79, %60
  %82 = load i32, i32* %55, align 8
  %83 = or i32 %82, 1
  store i32 %83, i32* %55, align 8
  br label %59

84:                                               ; preds = %34
  %85 = add i32 %41, -65
  %86 = icmp ult i32 %85, 2
  br i1 %86, label %133, label %87

87:                                               ; preds = %84
  %88 = icmp eq i32 %41, 55
  br i1 %88, label %89, label %133

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 0) #13
  br label %95

95:                                               ; preds = %89, %93
  %96 = phi i32 [ %94, %93 ], [ 0, %89 ]
  %97 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 11
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %126

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %103, align 8
  %105 = tail call i8* @_Znwm(i64 104) #12
  %106 = bitcast i8* %105 to %"class.spvtools::opt::analysis::DefUseManager"*
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %105, i64 48
  %110 = getelementptr inbounds i8, i8* %105, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #13
  %111 = bitcast i8* %110 to i8**
  store i8* %109, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %105, i64 64
  %113 = getelementptr inbounds i8, i8* %105, i64 96
  %114 = bitcast i8* %113 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %114, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %106, %"class.spvtools::opt::Module"* %104) #13
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 6
  %116 = ptrtoint i8* %105 to i64
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %115, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.62"* %115 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %118, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %102
  %122 = bitcast %"class.std::__1::unique_ptr.62"* %115 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %122, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %118) #13
  br label %123

123:                                              ; preds = %121, %102
  %124 = load i32, i32* %98, align 8
  %125 = or i32 %124, 1
  store i32 %125, i32* %98, align 8
  br label %126

126:                                              ; preds = %95, %123
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %97, i64 0, i32 6, i32 0, i32 0, i32 0
  %128 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %127, align 8
  %129 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %128, i32 %96) #13
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 2
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 32
  br label %133

133:                                              ; preds = %34, %87, %84, %126
  %134 = phi i1 [ %132, %126 ], [ true, %84 ], [ false, %87 ], [ true, %34 ]
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  store i32 %1, i32* %2, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #13
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  %34 = load i32, i32* %2, align 4
  br label %35

35:                                               ; preds = %3, %31
  %36 = phi i32 [ %1, %3 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %37, align 8
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %38, i32 %36) #13
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %43 [
    i32 46, label %42
    i32 59, label %47
    i32 55, label %47
  ]

42:                                               ; preds = %35
  store i32 0, i32* %2, align 4
  br label %113

43:                                               ; preds = %35
  %44 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction14GetBaseAddressEv(%"class.spvtools::opt::Instruction"* %39) #13
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  br label %47

47:                                               ; preds = %35, %35, %43
  %48 = phi i32 [ %46, %43 ], [ %41, %35 ], [ %41, %35 ]
  %49 = phi %"class.spvtools::opt::Instruction"* [ %44, %43 ], [ %39, %35 ], [ %39, %35 ]
  %50 = icmp eq i32 %48, 59
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = zext i8 %57 to i32
  %59 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %58) #13
  br label %60

60:                                               ; preds = %55, %51, %47
  %61 = phi i32 [ 0, %47 ], [ %59, %55 ], [ 0, %51 ]
  store i32 %61, i32* %2, align 4
  %62 = load i32, i32* %40, align 8
  %63 = icmp eq i32 %62, 83
  br i1 %63, label %64, label %113

64:                                               ; preds = %60, %106
  %65 = phi %"class.spvtools::opt::Instruction"* [ %109, %106 ], [ %39, %60 ]
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 3
  %67 = load i8, i8* %66, align 4, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 4
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 1, i32 2
  %73 = xor i1 %71, true
  %74 = zext i1 %73 to i32
  %75 = select i1 %68, i32 %74, i32 %72
  %76 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %65, i32 %75) #13
  %77 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 11
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %106

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %83, align 8
  %85 = tail call i8* @_Znwm(i64 104) #12
  %86 = bitcast i8* %85 to %"class.spvtools::opt::analysis::DefUseManager"*
  %87 = getelementptr inbounds i8, i8* %85, i64 32
  %88 = bitcast i8* %87 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %85, i64 48
  %90 = getelementptr inbounds i8, i8* %85, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #13
  %91 = bitcast i8* %90 to i8**
  store i8* %89, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 64
  %93 = getelementptr inbounds i8, i8* %85, i64 96
  %94 = bitcast i8* %93 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %94, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %86, %"class.spvtools::opt::Module"* %84) #13
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6
  %96 = ptrtoint i8* %85 to i64
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.62"* %95 to i64*
  store i64 %96, i64* %99, align 8
  %100 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %82
  %102 = bitcast %"class.std::__1::unique_ptr.62"* %95 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %102, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %98) #13
  br label %103

103:                                              ; preds = %101, %82
  %104 = load i32, i32* %78, align 8
  %105 = or i32 %104, 1
  store i32 %105, i32* %78, align 8
  br label %106

106:                                              ; preds = %64, %103
  %107 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6, i32 0, i32 0, i32 0
  %108 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %107, align 8
  %109 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %108, i32 %76) #13
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 83
  br i1 %112, label %64, label %113

113:                                              ; preds = %106, %60, %42
  %114 = phi %"class.spvtools::opt::Instruction"* [ %39, %42 ], [ %39, %60 ], [ %109, %106 ]
  ret %"class.spvtools::opt::Instruction"* %114
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction14GetBaseAddressEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEPNS0_11InstructionEPj(%"class.spvtools::opt::MemPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 1, i32 2
  %11 = xor i1 %9, true
  %12 = zext i1 %11 to i32
  %13 = select i1 %6, i32 %12, i32 %10
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #13
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %0, i32 %14, i32* %2)
  ret %"class.spvtools::opt::Instruction"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass24HasOnlyNamesAndDecoratesEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.938", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #13
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::function.938"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #13
  %38 = ptrtoint %"class.spvtools::opt::MemPass"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_7MemPass24HasOnlyNamesAndDecoratesEjE3$_1S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass24HasOnlyNamesAndDecoratesEjE3$_1FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.938"* %3 to i64*
  store i64 %38, i64* %41, align 8
  %42 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1, %"class.std::__1::function.938"* nonnull dereferenceable(32) %3) #13
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %45 = load void (i8*)*, void (i8*)** %44, align 8
  %46 = icmp eq void (i8*)* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void %45(i8* %49) #13
  br label %50

50:                                               ; preds = %34, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #13
  ret i1 %42
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.938"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass12KillAllInstsEPNS0_10BasicBlockEb(%"class.spvtools::opt::MemPass"* nocapture readnone, %"class.spvtools::opt::BasicBlock"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  tail call void @_ZN8spvtools3opt10BasicBlock12KillAllInstsEb(%"class.spvtools::opt::BasicBlock"* %1, i1 zeroext %2) #13
  ret void
}

declare void @_ZN8spvtools3opt10BasicBlock12KillAllInstsEb(%"class.spvtools::opt::BasicBlock"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass8HasLoadsEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.938", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #13
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::function.938"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #13
  %38 = ptrtoint %"class.spvtools::opt::MemPass"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_7MemPass8HasLoadsEjE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass8HasLoadsEjE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.938"* %3 to i64*
  store i64 %38, i64* %41, align 8
  %42 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1, %"class.std::__1::function.938"* nonnull dereferenceable(32) %3) #13
  %43 = xor i1 %42, true
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #13
  br label %51

51:                                               ; preds = %34, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #13
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt7MemPass9IsLiveVarEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #13
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.62"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.62"* %22 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #13
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %1) #13
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 59
  br i1 %39, label %40, label %95

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 0) #13
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi i32 [ %45, %44 ], [ 0, %40 ]
  %48 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 11
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %77

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %54, align 8
  %56 = tail call i8* @_Znwm(i64 104) #12
  %57 = bitcast i8* %56 to %"class.spvtools::opt::analysis::DefUseManager"*
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 48
  %61 = getelementptr inbounds i8, i8* %56, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %62 = bitcast i8* %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 64
  %64 = getelementptr inbounds i8, i8* %56, i64 96
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %65, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %57, %"class.spvtools::opt::Module"* %55) #13
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 6
  %67 = ptrtoint i8* %56 to i64
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %66, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %68, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.62"* %66 to i64*
  store i64 %67, i64* %70, align 8
  %71 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %69, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %53
  %73 = bitcast %"class.std::__1::unique_ptr.62"* %66 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %73, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %69) #13
  br label %74

74:                                               ; preds = %72, %53
  %75 = load i32, i32* %49, align 8
  %76 = or i32 %75, 1
  store i32 %76, i32* %49, align 8
  br label %77

77:                                               ; preds = %46, %74
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %48, i64 0, i32 6, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %78, align 8
  %80 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %79, i32 %47) #13
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 3
  %82 = load i8, i8* %81, align 4, !range !2
  %83 = icmp eq i8 %82, 0
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 4
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = select i1 %86, i32 1, i32 2
  %88 = xor i1 %86, true
  %89 = zext i1 %88 to i32
  %90 = select i1 %83, i32 %89, i32 %87
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %80, i32 %90) #13
  %92 = icmp eq i32 %91, 7
  br i1 %92, label %93, label %95

93:                                               ; preds = %77
  %94 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass8HasLoadsEj(%"class.spvtools::opt::MemPass"* %0, i32 %1)
  br label %95

95:                                               ; preds = %93, %77, %33
  %96 = phi i1 [ true, %33 ], [ %94, %93 ], [ true, %77 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass9AddStoresEjPNSt3__15queueIPNS0_11InstructionENS2_5dequeIS5_NS2_9allocatorIS5_EEEEEE(%"class.spvtools::opt::MemPass"*, i32, %"class.std::__1::queue"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::function.955", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #13
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #13
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = bitcast %"class.std::__1::function.955"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass9AddStoresEjPNS_5queueIS5_NS_5dequeIS5_NS_9allocatorIS5_EEEEEEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass9AddStoresEjPNS_5queueIPNS5_11InstructionENS_5dequeIS9_NS_9allocatorIS9_EEEEEEE3$_3FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.955"* %4 to %"class.spvtools::opt::MemPass"**
  store %"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::MemPass"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast [8 x i8]* %42 to %"class.std::__1::queue"**
  store %"class.std::__1::queue"* %2, %"class.std::__1::queue"** %43, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %1, %"class.std::__1::function.955"* nonnull dereferenceable(32) %4) #13
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #13
  br label %51

51:                                               ; preds = %35, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #13
  ret void
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.955"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass7DCEInstEPNS0_11InstructionERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.955"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::function.1028", align 8
  %5 = alloca %"class.std::__1::queue", align 8
  %6 = alloca %"class.std::__1::set.158", align 8
  %7 = alloca %"class.std::__1::function.962", align 8
  %8 = alloca i32, align 4
  %9 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %10 = bitcast %"class.std::__1::queue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 48, i1 false) #13
  %16 = bitcast %"class.spvtools::opt::Instruction"**** %13 to i64*
  %17 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %18 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %18) #13
  %19 = load i64, i64* %15, align 8
  %20 = load i64, i64* %14, align 8
  %21 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %22 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %23 = add i64 %20, %19
  %24 = icmp eq %"class.spvtools::opt::Instruction"*** %22, %21
  br i1 %24, label %32, label %25

25:                                               ; preds = %3
  %26 = lshr i64 %23, 9
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, i64 %26
  %28 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %27, align 8
  %29 = and i64 %23, 511
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %28, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"** %30 to i64*
  br label %32

32:                                               ; preds = %3, %25
  %33 = phi i64* [ %31, %25 ], [ null, %3 ]
  store i64 %9, i64* %33, align 8
  %34 = load i64, i64* %15, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %15, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %294, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::set.158"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %6, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8*
  %43 = bitcast %"class.std::__1::function.962"* %7 to i8*
  %44 = ptrtoint %"class.std::__1::set.158"* %6 to i64
  %45 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 2
  %47 = bitcast %"class.std::__1::function.962"* %7 to i64*
  %48 = bitcast %"class.std::__1::function.1028"* %4 to i8*
  %49 = ptrtoint %"class.std::__1::function.962"* %7 to i64
  %50 = getelementptr inbounds %"class.std::__1::function.1028", %"class.std::__1::function.1028"* %4, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::function.1028", %"class.std::__1::function.1028"* %4, i64 0, i32 0, i32 2
  %52 = bitcast %"class.std::__1::function.1028"* %4 to i64*
  %53 = getelementptr inbounds %"class.std::__1::function.1028", %"class.std::__1::function.1028"* %4, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::function.1028", %"class.std::__1::function.1028"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %7, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast i32* %8 to i8*
  %57 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %2, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %61 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0
  %62 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i8***
  %63 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %6, i64 0, i32 0
  %64 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node.1144"**
  %65 = bitcast i64* %14 to <2 x i64>*
  %66 = bitcast i64* %14 to <2 x i64>*
  br label %67

67:                                               ; preds = %37, %291
  %68 = phi i64 [ %35, %37 ], [ %292, %291 ]
  %69 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %70 = load i64, i64* %14, align 8
  %71 = lshr i64 %70, 9
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, i64 %71
  %73 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, align 8
  %74 = and i64 %70, 511
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %73, i64 %74
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 248
  %80 = bitcast %"class.spvtools::opt::Instruction"*** %69 to i8**
  br i1 %79, label %81, label %91

81:                                               ; preds = %67
  %82 = add i64 %68, -1
  store i64 %82, i64* %15, align 8
  %83 = add i64 %70, 1
  store i64 %83, i64* %14, align 8
  %84 = icmp ult i64 %83, 1024
  br i1 %84, label %291, label %85

85:                                               ; preds = %81
  %86 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %86) #12
  %87 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %87, i64 1
  store %"class.spvtools::opt::Instruction"*** %88, %"class.spvtools::opt::Instruction"**** %12, align 8
  %89 = load i64, i64* %14, align 8
  %90 = add i64 %89, -512
  store i64 %90, i64* %14, align 8
  br label %289

91:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #13
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass7DCEInstEPNS8_11InstructionERKNS_8functionIFvSB_EEEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %45, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass7DCEInstEPNS5_11InstructionERKNS_8functionIFvS8_EEEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %46, align 8
  store i64 %44, i64* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %50, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %51, align 8
  store i64 %49, i64* %52, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 6, i32 0, i32 0
  %93 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 6, i32 0, i32 1
  %95 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %94, align 8
  %96 = icmp eq %"struct.spvtools::opt::Operand"* %93, %95
  br i1 %96, label %117, label %97

97:                                               ; preds = %91, %112
  %98 = phi %"struct.spvtools::opt::Operand"* [ %113, %112 ], [ %93, %91 ]
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %100) #13
  br i1 %101, label %102, label %112

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %103, align 8
  %105 = icmp eq %"class.std::__1::vector.3"* %104, null
  %106 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %104, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 0, i32 1, i32 2
  %108 = select i1 %105, i32** %107, i32** %106
  %109 = load i32*, i32** %108, align 8
  %110 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %50, align 8
  %111 = call zeroext i1 %110(%"union.std::__1::__function::__policy_storage"* nonnull %53, i32* %109) #13
  br i1 %111, label %112, label %115

112:                                              ; preds = %102, %97
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %98, i64 1
  %114 = icmp eq %"struct.spvtools::opt::Operand"* %113, %95
  br i1 %114, label %115, label %97

115:                                              ; preds = %112, %102
  %116 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  br label %117

117:                                              ; preds = %115, %91
  %118 = phi %"struct.std::__1::__function::__policy"* [ %116, %115 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %91 ]
  %119 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %118, i64 0, i32 1
  %120 = load void (i8*)*, void (i8*)** %119, align 8
  %121 = icmp eq void (i8*)* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = load i8*, i8** %54, align 8
  call void %120(i8* %123) #13
  br label %124

124:                                              ; preds = %117, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #13
  %125 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %46, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %125, i64 0, i32 1
  %127 = load void (i8*)*, void (i8*)** %126, align 8
  %128 = icmp eq void (i8*)* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %124
  %130 = load i8*, i8** %55, align 8
  call void %127(i8* %130) #13
  br label %131

131:                                              ; preds = %124, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #13
  store i32 0, i32* %8, align 4
  %132 = load i32, i32* %77, align 8
  %133 = icmp eq i32 %132, 61
  br i1 %133, label %134, label %147

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 3
  %136 = load i8, i8* %135, align 4, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 4
  %139 = load i8, i8* %138, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  %141 = select i1 %140, i32 1, i32 2
  %142 = xor i1 %140, true
  %143 = zext i1 %142 to i32
  %144 = select i1 %137, i32 %143, i32 %141
  %145 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %76, i32 %144) #13
  %146 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %0, i32 %145, i32* nonnull %8) #13
  br label %147

147:                                              ; preds = %134, %131
  %148 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %57, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %148, i64 0, i32 2
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %147
  %153 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %58, align 8
  call void %153(%"union.std::__1::__function::__policy_storage"* %59, %"class.spvtools::opt::Instruction"* %76) #13
  br label %154

154:                                              ; preds = %152, %147
  %155 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %60, align 8
  %156 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %155, %"class.spvtools::opt::Instruction"* %76) #13
  %157 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %158 = icmp eq %"class.std::__1::__tree_end_node"* %157, %41
  br i1 %158, label %159, label %162

159:                                              ; preds = %269, %154
  %160 = load i32, i32* %8, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %275, label %272

162:                                              ; preds = %154, %269
  %163 = phi %"class.std::__1::__tree_end_node"* [ %270, %269 ], [ %157, %154 ]
  %164 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_node.1144"*
  %165 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %164, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = call zeroext i1 @_ZNK8spvtools3opt7MemPass24HasOnlyNamesAndDecoratesEj(%"class.spvtools::opt::MemPass"* %0, i32 %166)
  br i1 %167, label %168, label %241

168:                                              ; preds = %162
  %169 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %60, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %169, i64 0, i32 11
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %198

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %169, i64 0, i32 4, i32 0, i32 0, i32 0
  %176 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %175, align 8
  %177 = call i8* @_Znwm(i64 104) #12
  %178 = bitcast i8* %177 to %"class.spvtools::opt::analysis::DefUseManager"*
  %179 = getelementptr inbounds i8, i8* %177, i64 32
  %180 = bitcast i8* %179 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %180, align 4
  %181 = getelementptr inbounds i8, i8* %177, i64 48
  %182 = getelementptr inbounds i8, i8* %177, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 16, i1 false) #13
  %183 = bitcast i8* %182 to i8**
  store i8* %181, i8** %183, align 8
  %184 = getelementptr inbounds i8, i8* %177, i64 64
  %185 = getelementptr inbounds i8, i8* %177, i64 96
  %186 = bitcast i8* %185 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %186, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %178, %"class.spvtools::opt::Module"* %176) #13
  %187 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %169, i64 0, i32 6
  %188 = ptrtoint i8* %177 to i64
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %187, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %189, align 8
  %191 = bitcast %"class.std::__1::unique_ptr.62"* %187 to i64*
  store i64 %188, i64* %191, align 8
  %192 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %190, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %174
  %194 = bitcast %"class.std::__1::unique_ptr.62"* %187 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %194, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %190) #13
  br label %195

195:                                              ; preds = %193, %174
  %196 = load i32, i32* %170, align 8
  %197 = or i32 %196, 1
  store i32 %197, i32* %170, align 8
  br label %198

198:                                              ; preds = %168, %195
  %199 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %169, i64 0, i32 6, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %199, align 8
  %201 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %200, i32 %166) #13
  %202 = ptrtoint %"class.spvtools::opt::Instruction"* %201 to i64
  %203 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %60, align 8
  %204 = call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %203, %"class.spvtools::opt::Instruction"* %201)
  br i1 %204, label %205, label %241

205:                                              ; preds = %198
  %206 = load i64, i64* %16, align 8
  %207 = load i64, i64* %17, align 8
  %208 = sub i64 %206, %207
  %209 = icmp eq i64 %208, 0
  %210 = shl i64 %208, 6
  %211 = add i64 %210, -1
  %212 = select i1 %209, i64 0, i64 %211
  %213 = load i64, i64* %14, align 8
  %214 = load i64, i64* %15, align 8
  %215 = add i64 %214, %213
  %216 = icmp eq i64 %212, %215
  %217 = inttoptr i64 %207 to %"class.spvtools::opt::Instruction"***
  %218 = inttoptr i64 %206 to %"class.spvtools::opt::Instruction"***
  br i1 %216, label %219, label %225

219:                                              ; preds = %205
  call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %61) #13
  %220 = load i64, i64* %15, align 8
  %221 = load i64, i64* %14, align 8
  %222 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %223 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %224 = add i64 %221, %220
  br label %225

225:                                              ; preds = %219, %205
  %226 = phi i64 [ %224, %219 ], [ %215, %205 ]
  %227 = phi %"class.spvtools::opt::Instruction"*** [ %223, %219 ], [ %218, %205 ]
  %228 = phi %"class.spvtools::opt::Instruction"*** [ %222, %219 ], [ %217, %205 ]
  %229 = icmp eq %"class.spvtools::opt::Instruction"*** %227, %228
  br i1 %229, label %237, label %230

230:                                              ; preds = %225
  %231 = lshr i64 %226, 9
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %228, i64 %231
  %233 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %232, align 8
  %234 = and i64 %226, 511
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, i64 %234
  %236 = bitcast %"class.spvtools::opt::Instruction"** %235 to i64*
  br label %237

237:                                              ; preds = %225, %230
  %238 = phi i64* [ %236, %230 ], [ null, %225 ]
  store i64 %202, i64* %238, align 8
  %239 = load i64, i64* %15, align 8
  %240 = add i64 %239, 1
  store i64 %240, i64* %15, align 8
  br label %241

241:                                              ; preds = %198, %237, %162
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 1, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node_base"* %243, null
  br i1 %244, label %245, label %253

245:                                              ; preds = %241
  %246 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_node_base"*
  %247 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 2
  %248 = bitcast %"class.std::__1::__tree_end_node"* %247 to %"class.std::__1::__tree_end_node"**
  %249 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 0, i32 0
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, %246
  br i1 %252, label %269, label %260

253:                                              ; preds = %241, %253
  %254 = phi %"class.std::__1::__tree_node_base"* [ %256, %253 ], [ %243, %241 ]
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %253

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0
  br label %269

260:                                              ; preds = %245, %260
  %261 = phi %"class.std::__1::__tree_end_node"** [ %264, %260 ], [ %248, %245 ]
  %262 = bitcast %"class.std::__1::__tree_end_node"** %261 to %"class.std::__1::__tree_node_base"**
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %263, i64 0, i32 2
  %265 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 0, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, %263
  br i1 %268, label %269, label %260

269:                                              ; preds = %260, %245, %258
  %270 = phi %"class.std::__1::__tree_end_node"* [ %259, %258 ], [ %249, %245 ], [ %265, %260 ]
  %271 = icmp eq %"class.std::__1::__tree_end_node"* %270, %41
  br i1 %271, label %159, label %162

272:                                              ; preds = %159
  %273 = call zeroext i1 @_ZNK8spvtools3opt7MemPass9IsLiveVarEj(%"class.spvtools::opt::MemPass"* %0, i32 %160)
  br i1 %273, label %275, label %274

274:                                              ; preds = %272
  call void @_ZN8spvtools3opt7MemPass9AddStoresEjPNSt3__15queueIPNS0_11InstructionENS2_5dequeIS5_NS2_9allocatorIS5_EEEEEE(%"class.spvtools::opt::MemPass"* %0, i32 %160, %"class.std::__1::queue"* nonnull %5)
  br label %275

275:                                              ; preds = %159, %274, %272
  %276 = load <2 x i64>, <2 x i64>* %65, align 8
  %277 = add <2 x i64> %276, <i64 1, i64 -1>
  store <2 x i64> %277, <2 x i64>* %66, align 8
  %278 = extractelement <2 x i64> %277, i32 0
  %279 = icmp ult i64 %278, 1024
  br i1 %279, label %287, label %280

280:                                              ; preds = %275
  %281 = load i8**, i8*** %62, align 8
  %282 = load i8*, i8** %281, align 8
  call void @_ZdlPv(i8* %282) #12
  %283 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %284 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %283, i64 1
  store %"class.spvtools::opt::Instruction"*** %284, %"class.spvtools::opt::Instruction"**** %12, align 8
  %285 = load i64, i64* %14, align 8
  %286 = add i64 %285, -512
  store i64 %286, i64* %14, align 8
  br label %287

287:                                              ; preds = %275, %280
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #13
  %288 = load %"class.std::__1::__tree_node.1144"*, %"class.std::__1::__tree_node.1144"** %64, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* nonnull %63, %"class.std::__1::__tree_node.1144"* %288) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  br label %289

289:                                              ; preds = %287, %85
  %290 = load i64, i64* %15, align 8
  br label %291

291:                                              ; preds = %289, %81
  %292 = phi i64 [ %290, %289 ], [ %82, %81 ]
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %67

294:                                              ; preds = %291, %32
  %295 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %296 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %297 = ptrtoint %"class.spvtools::opt::Instruction"*** %296 to i64
  %298 = ptrtoint %"class.spvtools::opt::Instruction"*** %295 to i64
  store i64 0, i64* %15, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 3
  %301 = icmp ugt i64 %300, 2
  br i1 %301, label %302, label %315

302:                                              ; preds = %294, %302
  %303 = phi %"class.spvtools::opt::Instruction"*** [ %307, %302 ], [ %295, %294 ]
  %304 = bitcast %"class.spvtools::opt::Instruction"*** %303 to i8**
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #12
  %306 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %306, i64 1
  store %"class.spvtools::opt::Instruction"*** %307, %"class.spvtools::opt::Instruction"**** %12, align 8
  %308 = load i64, i64* %16, align 8
  %309 = ptrtoint %"class.spvtools::opt::Instruction"*** %307 to i64
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 3
  %312 = icmp ugt i64 %311, 2
  br i1 %312, label %302, label %313

313:                                              ; preds = %302
  %314 = inttoptr i64 %308 to %"class.spvtools::opt::Instruction"***
  br label %315

315:                                              ; preds = %313, %294
  %316 = phi %"class.spvtools::opt::Instruction"*** [ %296, %294 ], [ %314, %313 ]
  %317 = phi %"class.spvtools::opt::Instruction"*** [ %295, %294 ], [ %307, %313 ]
  %318 = phi i64 [ %300, %294 ], [ %311, %313 ]
  switch i64 %318, label %322 [
    i64 1, label %320
    i64 2, label %319
  ]

319:                                              ; preds = %315
  br label %320

320:                                              ; preds = %315, %319
  %321 = phi i64 [ 512, %319 ], [ 256, %315 ]
  store i64 %321, i64* %14, align 8
  br label %322

322:                                              ; preds = %320, %315
  %323 = icmp eq %"class.spvtools::opt::Instruction"*** %317, %316
  br i1 %323, label %342, label %324

324:                                              ; preds = %322, %324
  %325 = phi %"class.spvtools::opt::Instruction"*** [ %328, %324 ], [ %317, %322 ]
  %326 = bitcast %"class.spvtools::opt::Instruction"*** %325 to i8**
  %327 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %327) #12
  %328 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %325, i64 1
  %329 = icmp eq %"class.spvtools::opt::Instruction"*** %328, %316
  br i1 %329, label %330, label %324

330:                                              ; preds = %324
  %331 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %332 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %333 = icmp eq %"class.spvtools::opt::Instruction"*** %332, %331
  br i1 %333, label %342, label %334

334:                                              ; preds = %330
  %335 = ptrtoint %"class.spvtools::opt::Instruction"*** %331 to i64
  %336 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %332, i64 -1
  %337 = ptrtoint %"class.spvtools::opt::Instruction"*** %336 to i64
  %338 = sub i64 %337, %335
  %339 = lshr i64 %338, 3
  %340 = xor i64 %339, -1
  %341 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %332, i64 %340
  store %"class.spvtools::opt::Instruction"*** %341, %"class.spvtools::opt::Instruction"**** %13, align 8
  br label %342

342:                                              ; preds = %334, %330, %322
  %343 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  %344 = icmp eq %"class.spvtools::opt::Instruction"*** %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %342
  %346 = bitcast %"class.spvtools::opt::Instruction"*** %343 to i8*
  call void @_ZdlPv(i8* %346) #12
  br label %347

347:                                              ; preds = %342, %345
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1039", align 1
  %5 = alloca %"class.std::__1::tuple.1050", align 8
  %6 = alloca %"class.std::__1::tuple.1039", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #13
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #13
  %24 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %4) #13
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.230"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #13, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.230"* %26 to %"struct.std::__1::__hash_node_base.915"***
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.915"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.915"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.915"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.915"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.915"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #13
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #13
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.1050"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"class.std::__1::tuple.1050", %"class.std::__1::tuple.1050"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #13
  %108 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1050"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %6) #13
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.230"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #13, !range !3
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to %"struct.std::__1::__hash_node_base.915"***
  %129 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.915"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.915"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.915"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.915"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.915"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.915"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #13
  %167 = icmp ne %"struct.std::__1::__hash_node_base.915"* %166, null
  ret i1 %167
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPassC2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.spvtools::opt::MemPass"* %0 to %"class.spvtools::opt::Pass"*
  tail call void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"* %2) #13
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.929"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_set.910"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.929"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set.910"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.269"* %13 to i32*
  %15 = bitcast %"class.std::__1::unordered_map.249"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %14, align 4
  ret void
}

declare void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7MemPass20HasOnlySupportedRefsEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.938", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #13
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::function.938"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #13
  %38 = ptrtoint %"class.spvtools::opt::MemPass"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass20HasOnlySupportedRefsEjE3$_5S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass20HasOnlySupportedRefsEjE3$_5FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.938"* %3 to i64*
  store i64 %38, i64* %41, align 8
  %42 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEjRKNSt3__18functionIFbPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1, %"class.std::__1::function.938"* nonnull dereferenceable(32) %3) #13
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %45 = load void (i8*)*, void (i8*)** %44, align 8
  %46 = icmp eq void (i8*)* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void %45(i8* %49) #13
  br label %50

50:                                               ; preds = %34, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #13
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple.1050", align 8
  %4 = alloca %"class.std::__1::tuple.1039", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::vector", align 8
  store i32 %1, i32* %5, align 4
  %7 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.254"* %27, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.254"* %31, null
  br i1 %32, label %64, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base.254"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.254"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %64

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.254"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.254"* %58, null
  br i1 %59, label %64, label %35

60:                                               ; preds = %51
  %61 = bitcast %"struct.std::__1::__hash_node_base.254"* %52 to %"struct.std::__1::pair"*
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  br label %194

64:                                               ; preds = %48, %56, %22, %2, %29
  %65 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %66 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %67, align 8
  %69 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %68) #13
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 5, i32 0, i32 2
  %73 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %73, i64 0, i32 2
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %194

77:                                               ; preds = %71
  %78 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #13
  %79 = getelementptr inbounds i8, i8* %78, i64 37
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 5, i32 0, i32 1, i32 0
  %81 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 5, i32 0, i32 0
  tail call void %81(%"union.std::__1::__function::__policy_storage"* %82, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %78) #13
  tail call void @_ZdlPv(i8* nonnull %78) #12
  br label %194

83:                                               ; preds = %64
  %84 = tail call i8* @_Znwm(i64 112) #12
  %85 = bitcast i8* %84 to %"class.spvtools::opt::Instruction"*
  %86 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %65, align 8
  %87 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %85, %"class.spvtools::opt::IRContext"* %86, i32 1, i32 %1, i32 %69, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %89 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %88, align 8
  %90 = icmp eq %"struct.spvtools::opt::Operand"* %89, null
  br i1 %90, label %121, label %91

91:                                               ; preds = %83
  %92 = bitcast %"struct.spvtools::opt::Operand"* %89 to i8*
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %94 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %93, align 8
  %95 = icmp eq %"struct.spvtools::opt::Operand"* %94, %89
  br i1 %95, label %119, label %96

96:                                               ; preds = %91, %114
  %97 = phi %"struct.spvtools::opt::Operand"* [ %98, %114 ], [ %94, %91 ]
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 -1
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %100, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %100, align 8
  %102 = icmp eq %"class.std::__1::vector.3"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %101, i64 0, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = icmp eq i32* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i32* %105 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %101, i64 0, i32 0, i32 1
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = bitcast i32* %105 to i8*
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %107, %103
  %113 = bitcast %"class.std::__1::vector.3"* %101 to i8*
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %112, %96
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %98, %89
  br i1 %115, label %116, label %96

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %6 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %91
  %120 = phi i8* [ %118, %116 ], [ %92, %91 ]
  store %"struct.spvtools::opt::Operand"* %89, %"struct.spvtools::opt::Operand"** %93, align 8
  call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %83, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #13
  %122 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %65, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 11
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %151

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 4, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %128, align 8
  %130 = call i8* @_Znwm(i64 104) #12
  %131 = bitcast i8* %130 to %"class.spvtools::opt::analysis::DefUseManager"*
  %132 = getelementptr inbounds i8, i8* %130, i64 32
  %133 = bitcast i8* %132 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %130, i64 48
  %135 = getelementptr inbounds i8, i8* %130, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #13
  %136 = bitcast i8* %135 to i8**
  store i8* %134, i8** %136, align 8
  %137 = getelementptr inbounds i8, i8* %130, i64 64
  %138 = getelementptr inbounds i8, i8* %130, i64 96
  %139 = bitcast i8* %138 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %139, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %131, %"class.spvtools::opt::Module"* %129) #13
  %140 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 6
  %141 = ptrtoint i8* %130 to i64
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %140, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %142, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.62"* %140 to i64*
  store i64 %141, i64* %144, align 8
  %145 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %143, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %127
  %147 = bitcast %"class.std::__1::unique_ptr.62"* %140 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %147, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %143) #13
  br label %148

148:                                              ; preds = %146, %127
  %149 = load i32, i32* %123, align 8
  %150 = or i32 %149, 1
  store i32 %150, i32* %123, align 8
  br label %151

151:                                              ; preds = %121, %148
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 6, i32 0, i32 0, i32 0
  %153 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %152, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %153, %"class.spvtools::opt::Instruction"* nonnull %85) #13
  %154 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %65, align 8
  %155 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %154, i64 0, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %155, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %156, i64 0, i32 14, i32 0, i32 1
  %158 = getelementptr inbounds i8, i8* %84, i64 8
  %159 = bitcast i8* %158 to %"class.spvtools::opt::Instruction"**
  %160 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %159, align 8
  %161 = icmp eq %"class.spvtools::opt::Instruction"* %160, null
  br i1 %161, label %174, label %162

162:                                              ; preds = %151
  %163 = getelementptr inbounds i8, i8* %84, i64 16
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %160, i64 0, i32 0, i32 2
  %167 = bitcast %"class.spvtools::opt::Instruction"** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i8* %158 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %163 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %171 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %170, align 8
  %172 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %171, i64 0, i32 1
  %173 = bitcast %"class.spvtools::opt::Instruction"** %172 to i64*
  store i64 %169, i64* %173, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #13
  br label %174

174:                                              ; preds = %151, %162
  store %"class.spvtools::opt::Instruction"* %157, %"class.spvtools::opt::Instruction"** %159, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %156, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds i8, i8* %84, i64 16
  %179 = bitcast i8* %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = bitcast %"class.spvtools::opt::Instruction"** %175 to i8**
  store i8* %84, i8** %180, align 8
  %181 = bitcast i8* %178 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %182 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %181, align 8
  %183 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %182, i64 0, i32 1
  %184 = bitcast %"class.spvtools::opt::Instruction"** %183 to i8**
  store i8* %84, i8** %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %7, i64 0, i32 0
  %186 = bitcast %"class.std::__1::tuple.1050"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #13
  %187 = getelementptr inbounds %"class.std::__1::tuple.1050", %"class.std::__1::tuple.1050"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %188) #13
  %189 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %185, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1050"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %4) #13
  %190 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %189, 0
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %190, i64 2
  %192 = bitcast %"struct.std::__1::__hash_node_base.254"* %191 to %"struct.std::__1::pair"*
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %192, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %188) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #13
  store i32 %69, i32* %193, align 4
  br label %194

194:                                              ; preds = %77, %71, %174, %60
  %195 = phi i32 [ %63, %60 ], [ %69, %174 ], [ 0, %71 ], [ 0, %77 ]
  ret i32 %195
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %257, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %59, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"* %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.915"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.915"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %59

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.915"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %257, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.915"* %57, null
  br i1 %58, label %59, label %34

59:                                               ; preds = %47, %55, %21, %5, %28
  %60 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2
  %61 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %112, label %64

64:                                               ; preds = %59
  %65 = tail call i64 @llvm.ctpop.i64(i64 %62) #13, !range !3
  %66 = icmp ugt i64 %65, 1
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = add i64 %62, 4294967295
  %69 = and i64 %68, %7
  br label %74

70:                                               ; preds = %64
  %71 = icmp ugt i64 %62, %7
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = urem i64 %7, %62
  br label %74

74:                                               ; preds = %72, %70, %67
  %75 = phi i64 [ %69, %67 ], [ %73, %72 ], [ %7, %70 ]
  %76 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %77, i64 %75
  %79 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.915"* %79, null
  br i1 %80, label %112, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %79, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.915"* %83, null
  br i1 %84, label %112, label %85

85:                                               ; preds = %81
  %86 = add i64 %62, -1
  br label %87

87:                                               ; preds = %108, %85
  %88 = phi %"struct.std::__1::__hash_node_base.915"* [ %83, %85 ], [ %110, %108 ]
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base.915"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, %7
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  br i1 %66, label %96, label %94

94:                                               ; preds = %93
  %95 = and i64 %91, %86
  br label %100

96:                                               ; preds = %93
  %97 = icmp ult i64 %91, %62
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %91, %62
  br label %100

100:                                              ; preds = %98, %96, %94
  %101 = phi i64 [ %95, %94 ], [ %99, %98 ], [ %91, %96 ]
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %108, label %112

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %88, i64 2
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, %1
  br i1 %107, label %257, label %108

108:                                              ; preds = %103, %100
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %88, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.915"* %110, null
  br i1 %111, label %112, label %87

112:                                              ; preds = %100, %108, %74, %59, %81
  %113 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %114 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %113, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 11
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %143

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %120, align 8
  %122 = tail call i8* @_Znwm(i64 104) #12
  %123 = bitcast i8* %122 to %"class.spvtools::opt::analysis::DefUseManager"*
  %124 = getelementptr inbounds i8, i8* %122, i64 32
  %125 = bitcast i8* %124 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %125, align 4
  %126 = getelementptr inbounds i8, i8* %122, i64 48
  %127 = getelementptr inbounds i8, i8* %122, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #13
  %128 = bitcast i8* %127 to i8**
  store i8* %126, i8** %128, align 8
  %129 = getelementptr inbounds i8, i8* %122, i64 64
  %130 = getelementptr inbounds i8, i8* %122, i64 96
  %131 = bitcast i8* %130 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %131, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %123, %"class.spvtools::opt::Module"* %121) #13
  %132 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 6
  %133 = ptrtoint i8* %122 to i64
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %132, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %134, align 8
  %136 = bitcast %"class.std::__1::unique_ptr.62"* %132 to i64*
  store i64 %133, i64* %136, align 8
  %137 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %135, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %119
  %139 = bitcast %"class.std::__1::unique_ptr.62"* %132 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %139, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %135) #13
  br label %140

140:                                              ; preds = %138, %119
  %141 = load i32, i32* %115, align 8
  %142 = or i32 %141, 1
  store i32 %142, i32* %115, align 8
  br label %143

143:                                              ; preds = %112, %140
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 6, i32 0, i32 0, i32 0
  %145 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %144, align 8
  %146 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %145, i32 %1) #13
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 59
  br i1 %149, label %150, label %257

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 3
  %152 = load i8, i8* %151, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %146, i32 0) #13
  br label %156

156:                                              ; preds = %150, %154
  %157 = phi i32 [ %155, %154 ], [ 0, %150 ]
  %158 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %113, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %158, i64 0, i32 11
  %160 = load i32, i32* %159, align 8
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %187

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %158, i64 0, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %164, align 8
  %166 = tail call i8* @_Znwm(i64 104) #12
  %167 = bitcast i8* %166 to %"class.spvtools::opt::analysis::DefUseManager"*
  %168 = getelementptr inbounds i8, i8* %166, i64 32
  %169 = bitcast i8* %168 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %169, align 4
  %170 = getelementptr inbounds i8, i8* %166, i64 48
  %171 = getelementptr inbounds i8, i8* %166, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 16, i1 false) #13
  %172 = bitcast i8* %171 to i8**
  store i8* %170, i8** %172, align 8
  %173 = getelementptr inbounds i8, i8* %166, i64 64
  %174 = getelementptr inbounds i8, i8* %166, i64 96
  %175 = bitcast i8* %174 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %175, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %167, %"class.spvtools::opt::Module"* %165) #13
  %176 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %158, i64 0, i32 6
  %177 = ptrtoint i8* %166 to i64
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %176, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %178, align 8
  %180 = bitcast %"class.std::__1::unique_ptr.62"* %176 to i64*
  store i64 %177, i64* %180, align 8
  %181 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %179, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %163
  %183 = bitcast %"class.std::__1::unique_ptr.62"* %176 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %183, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %179) #13
  br label %184

184:                                              ; preds = %182, %163
  %185 = load i32, i32* %159, align 8
  %186 = or i32 %185, 1
  store i32 %186, i32* %159, align 8
  br label %187

187:                                              ; preds = %156, %184
  %188 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %158, i64 0, i32 6, i32 0, i32 0, i32 0
  %189 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %188, align 8
  %190 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %189, i32 %157) #13
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 3
  %192 = load i8, i8* %191, align 4, !range !2
  %193 = icmp eq i8 %192, 0
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 4
  %195 = load i8, i8* %194, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  %197 = select i1 %196, i32 1, i32 2
  %198 = xor i1 %196, true
  %199 = zext i1 %198 to i32
  %200 = select i1 %193, i32 %199, i32 %197
  %201 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %190, i32 %200) #13
  %202 = icmp eq i32 %201, 7
  br i1 %202, label %206, label %203

203:                                              ; preds = %187
  %204 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0
  %205 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %204, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  br label %257

206:                                              ; preds = %187
  %207 = load i8, i8* %191, align 4, !range !2
  %208 = icmp eq i8 %207, 0
  %209 = load i8, i8* %194, align 1, !range !2
  %210 = icmp eq i8 %209, 0
  %211 = select i1 %210, i32 1, i32 2
  %212 = xor i1 %210, true
  %213 = zext i1 %212 to i32
  %214 = select i1 %208, i32 %213, i32 %211
  %215 = add nuw nsw i32 %214, 1
  %216 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %190, i32 %215) #13
  %217 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %113, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %217, i64 0, i32 11
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %246

222:                                              ; preds = %206
  %223 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %217, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %223, align 8
  %225 = tail call i8* @_Znwm(i64 104) #12
  %226 = bitcast i8* %225 to %"class.spvtools::opt::analysis::DefUseManager"*
  %227 = getelementptr inbounds i8, i8* %225, i64 32
  %228 = bitcast i8* %227 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %228, align 4
  %229 = getelementptr inbounds i8, i8* %225, i64 48
  %230 = getelementptr inbounds i8, i8* %225, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 16, i1 false) #13
  %231 = bitcast i8* %230 to i8**
  store i8* %229, i8** %231, align 8
  %232 = getelementptr inbounds i8, i8* %225, i64 64
  %233 = getelementptr inbounds i8, i8* %225, i64 96
  %234 = bitcast i8* %233 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %234, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %226, %"class.spvtools::opt::Module"* %224) #13
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %217, i64 0, i32 6
  %236 = ptrtoint i8* %225 to i64
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %235, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %237, align 8
  %239 = bitcast %"class.std::__1::unique_ptr.62"* %235 to i64*
  store i64 %236, i64* %239, align 8
  %240 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %238, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %222
  %242 = bitcast %"class.std::__1::unique_ptr.62"* %235 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %242, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %238) #13
  br label %243

243:                                              ; preds = %241, %222
  %244 = load i32, i32* %218, align 8
  %245 = or i32 %244, 1
  store i32 %245, i32* %218, align 8
  br label %246

246:                                              ; preds = %206, %243
  %247 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %217, i64 0, i32 6, i32 0, i32 0, i32 0
  %248 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %247, align 8
  %249 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %248, i32 %216) #13
  %250 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::Instruction"* %249)
  br i1 %250, label %254, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %6, i64 0, i32 0
  %253 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %252, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  br label %257

254:                                              ; preds = %246
  %255 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %60, i64 0, i32 0
  %256 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %255, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  br label %257

257:                                              ; preds = %50, %103, %143, %251, %254, %203, %2
  %258 = phi i1 [ false, %2 ], [ false, %143 ], [ false, %203 ], [ true, %254 ], [ false, %251 ], [ true, %103 ], [ false, %50 ]
  ret i1 %258
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass17RemovePhiOperandsEPNS0_11InstructionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_set.971"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 48
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %54, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %23 = bitcast %"struct.spvtools::opt::Operand"** %9 to i64*
  %24 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  %28 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %33 = bitcast i32** %31 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %35 = bitcast %"class.std::__1::unique_ptr.0"* %34 to i64*
  %36 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %32 to i32*
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %44 to i64*
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %21, %559
  %50 = phi i64 [ %16, %21 ], [ %563, %559 ]
  %51 = phi i32 [ 0, %21 ], [ %560, %559 ]
  %52 = phi i32 [ 0, %21 ], [ %561, %559 ]
  %53 = zext i32 %52 to i64
  br label %90

54:                                               ; preds = %559, %117, %3
  %55 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %56 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %55, align 8
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %56, %"class.spvtools::opt::Instruction"* %1) #13
  call void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #13
  %57 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %55, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %57, %"class.spvtools::opt::Instruction"* %1) #13
  %58 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %8, align 8
  %59 = icmp eq %"struct.spvtools::opt::Operand"* %58, null
  br i1 %59, label %89, label %60

60:                                               ; preds = %54
  %61 = bitcast %"struct.spvtools::opt::Operand"* %58 to i8*
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %58
  br i1 %63, label %87, label %64

64:                                               ; preds = %60, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %58
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %4 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %60
  %88 = phi i8* [ %86, %84 ], [ %61, %60 ]
  store %"struct.spvtools::opt::Operand"* %58, %"struct.spvtools::opt::Operand"** %9, align 8
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %54, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void

90:                                               ; preds = %49, %117
  %91 = phi i64 [ %50, %49 ], [ %120, %117 ]
  %92 = phi i64 [ %53, %49 ], [ %118, %117 ]
  %93 = inttoptr i64 %91 to %"struct.spvtools::opt::Operand"*
  %94 = icmp ult i64 %92, 2
  br i1 %94, label %95, label %125

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %93, i64 %92
  %97 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %97, %98
  br i1 %99, label %116, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 0
  %102 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %96, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %93, i64 %92, i32 1
  %106 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %104, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1, i32 1
  store i64 0, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1, i32 2
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1, i32 3, i64 0
  %110 = bitcast i32** %108 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %109, %"struct.std::__1::aligned_storage<4, 4>::type"** %110, align 8
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 0, i32 1, i32 4
  %112 = bitcast %"class.std::__1::unique_ptr.0"* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %104, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %105) #13
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %97, i64 1
  %115 = ptrtoint %"struct.spvtools::opt::Operand"* %114 to i64
  store i64 %115, i64* %23, align 8
  br label %117

116:                                              ; preds = %95
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* dereferenceable(48) %96) #13
  br label %117

117:                                              ; preds = %100, %116
  %118 = add nuw nsw i64 %92, 1
  %119 = load i64, i64* %13, align 8
  %120 = load i64, i64* %15, align 8
  %121 = sub i64 %119, %120
  %122 = sdiv exact i64 %121, 48
  %123 = and i64 %122, 4294967295
  %124 = icmp ult i64 %118, %123
  br i1 %124, label %90, label %54

125:                                              ; preds = %90
  %126 = trunc i64 %92 to i32
  %127 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %127, i64 0, i32 11
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 16
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %148

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %127, i64 0, i32 4, i32 0, i32 0, i32 0
  %134 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %133, align 8
  %135 = call i8* @_Znwm(i64 400) #12
  %136 = bitcast i8* %135 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %136, %"class.spvtools::opt::Module"* %134) #13
  %137 = ptrtoint i8* %135 to i64
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %127, i64 0, i32 15
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.273"* %138 to i64*
  store i64 %137, i64* %141, align 8
  %142 = icmp eq %"class.spvtools::opt::CFG"* %140, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %132
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %140) #13
  %144 = bitcast %"class.spvtools::opt::CFG"* %140 to i8*
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %143, %132
  %146 = load i32, i32* %128, align 8
  %147 = or i32 %146, 16
  store i32 %147, i32* %128, align 8
  br label %148

148:                                              ; preds = %125, %145
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %127, i64 0, i32 15, i32 0, i32 0, i32 0
  %150 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %149, align 8
  %151 = add nuw i32 %126, 1
  %152 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %151) #13
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %150, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %205, label %157

157:                                              ; preds = %148
  %158 = call i64 @llvm.ctpop.i64(i64 %155) #13, !range !3
  %159 = icmp ugt i64 %158, 1
  br i1 %159, label %163, label %160

160:                                              ; preds = %157
  %161 = add i64 %155, 4294967295
  %162 = and i64 %161, %153
  br label %167

163:                                              ; preds = %157
  %164 = icmp ugt i64 %155, %153
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = urem i64 %153, %155
  br label %167

167:                                              ; preds = %165, %163, %160
  %168 = phi i64 [ %162, %160 ], [ %166, %165 ], [ %153, %163 ]
  %169 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %150, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %170, i64 %168
  %172 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %171, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.333"* %172, null
  br i1 %173, label %205, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %172, i64 0, i32 0
  %176 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base.333"* %176, null
  br i1 %177, label %205, label %178

178:                                              ; preds = %174
  %179 = add i64 %155, -1
  br label %180

180:                                              ; preds = %201, %178
  %181 = phi %"struct.std::__1::__hash_node_base.333"* [ %176, %178 ], [ %203, %201 ]
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %181, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.333"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, %153
  br i1 %185, label %196, label %186

186:                                              ; preds = %180
  br i1 %159, label %189, label %187

187:                                              ; preds = %186
  %188 = and i64 %184, %179
  br label %193

189:                                              ; preds = %186
  %190 = icmp ult i64 %184, %155
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = urem i64 %184, %155
  br label %193

193:                                              ; preds = %191, %189, %187
  %194 = phi i64 [ %188, %187 ], [ %192, %191 ], [ %184, %189 ]
  %195 = icmp eq i64 %194, %168
  br i1 %195, label %201, label %205

196:                                              ; preds = %180
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %181, i64 2
  %198 = bitcast %"struct.std::__1::__hash_node_base.333"* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, %152
  br i1 %200, label %206, label %201

201:                                              ; preds = %196, %193
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %181, i64 0, i32 0
  %203 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %202, align 8
  %204 = icmp eq %"struct.std::__1::__hash_node_base.333"* %203, null
  br i1 %204, label %205, label %180

205:                                              ; preds = %174, %167, %148, %201, %193
  call void @abort() #14
  unreachable

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %181, i64 3
  %208 = bitcast %"struct.std::__1::__hash_node_base.333"* %207 to %"class.spvtools::opt::BasicBlock"**
  %209 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %208, align 8
  %210 = ptrtoint %"class.spvtools::opt::BasicBlock"* %209 to i64
  %211 = lshr i64 %210, 32
  %212 = shl i64 %210, 3
  %213 = and i64 %212, 4294967288
  %214 = add nuw nsw i64 %213, 8
  %215 = xor i64 %214, %211
  %216 = mul i64 %215, -7070675565921424023
  %217 = lshr i64 %216, 47
  %218 = xor i64 %216, %211
  %219 = xor i64 %218, %217
  %220 = mul i64 %219, -7070675565921424023
  %221 = lshr i64 %220, 47
  %222 = xor i64 %221, %220
  %223 = mul i64 %222, -7070675565921424023
  %224 = load i64, i64* %25, align 8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %559, label %226

226:                                              ; preds = %206
  %227 = call i64 @llvm.ctpop.i64(i64 %224) #13, !range !3
  %228 = icmp ugt i64 %227, 1
  br i1 %228, label %232, label %229

229:                                              ; preds = %226
  %230 = add i64 %224, -1
  %231 = and i64 %223, %230
  br label %236

232:                                              ; preds = %226
  %233 = icmp ult i64 %223, %224
  br i1 %233, label %236, label %234

234:                                              ; preds = %232
  %235 = urem i64 %223, %224
  br label %236

236:                                              ; preds = %234, %232, %229
  %237 = phi i64 [ %231, %229 ], [ %235, %234 ], [ %223, %232 ]
  %238 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %26, align 8
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %238, i64 %237
  %240 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %239, align 8
  %241 = icmp eq %"struct.std::__1::__hash_node_base.976"* %240, null
  br i1 %241, label %559, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %240, i64 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.976"* %244, null
  br i1 %245, label %559, label %246

246:                                              ; preds = %242
  %247 = add i64 %224, -1
  br label %248

248:                                              ; preds = %269, %246
  %249 = phi %"struct.std::__1::__hash_node_base.976"* [ %244, %246 ], [ %271, %269 ]
  %250 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %249, i64 1
  %251 = bitcast %"struct.std::__1::__hash_node_base.976"* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = icmp eq i64 %223, %252
  br i1 %253, label %264, label %254

254:                                              ; preds = %248
  br i1 %228, label %257, label %255

255:                                              ; preds = %254
  %256 = and i64 %252, %247
  br label %261

257:                                              ; preds = %254
  %258 = icmp ult i64 %252, %224
  br i1 %258, label %261, label %259

259:                                              ; preds = %257
  %260 = urem i64 %252, %224
  br label %261

261:                                              ; preds = %259, %257, %255
  %262 = phi i64 [ %256, %255 ], [ %260, %259 ], [ %252, %257 ]
  %263 = icmp eq i64 %262, %237
  br i1 %263, label %269, label %559

264:                                              ; preds = %248
  %265 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %249, i64 2
  %266 = bitcast %"struct.std::__1::__hash_node_base.976"* %265 to %"class.spvtools::opt::BasicBlock"**
  %267 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %266, align 8
  %268 = icmp eq %"class.spvtools::opt::BasicBlock"* %267, %209
  br i1 %268, label %273, label %269

269:                                              ; preds = %264, %261
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %249, i64 0, i32 0
  %271 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %270, align 8
  %272 = icmp eq %"struct.std::__1::__hash_node_base.976"* %271, null
  br i1 %272, label %559, label %248

273:                                              ; preds = %264
  %274 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %126) #13
  %275 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %276 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %275, i64 0, i32 11
  %277 = load i32, i32* %276, align 8
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %304

280:                                              ; preds = %273
  %281 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %275, i64 0, i32 4, i32 0, i32 0, i32 0
  %282 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %281, align 8
  %283 = call i8* @_Znwm(i64 104) #12
  %284 = bitcast i8* %283 to %"class.spvtools::opt::analysis::DefUseManager"*
  %285 = getelementptr inbounds i8, i8* %283, i64 32
  %286 = bitcast i8* %285 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %283, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %286, align 4
  %287 = getelementptr inbounds i8, i8* %283, i64 48
  %288 = getelementptr inbounds i8, i8* %283, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %287, i8 0, i64 16, i1 false) #13
  %289 = bitcast i8* %288 to i8**
  store i8* %287, i8** %289, align 8
  %290 = getelementptr inbounds i8, i8* %283, i64 64
  %291 = getelementptr inbounds i8, i8* %283, i64 96
  %292 = bitcast i8* %291 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %292, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %284, %"class.spvtools::opt::Module"* %282) #13
  %293 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %275, i64 0, i32 6
  %294 = ptrtoint i8* %283 to i64
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %293, i64 0, i32 0, i32 0, i32 0
  %296 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %295, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.62"* %293 to i64*
  store i64 %294, i64* %297, align 8
  %298 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %296, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %280
  %300 = bitcast %"class.std::__1::unique_ptr.62"* %293 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %300, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %296) #13
  br label %301

301:                                              ; preds = %299, %280
  %302 = load i32, i32* %276, align 8
  %303 = or i32 %302, 1
  store i32 %303, i32* %276, align 8
  br label %304

304:                                              ; preds = %273, %301
  %305 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %275, i64 0, i32 6, i32 0, i32 0, i32 0
  %306 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %305, align 8
  %307 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %306, i32 %274) #13
  %308 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %309 = ptrtoint %"class.spvtools::opt::Instruction"* %307 to i64
  %310 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %308, i64 0, i32 11
  %311 = load i32, i32* %310, align 8
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %304
  call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %308) #13
  br label %315

315:                                              ; preds = %314, %304
  %316 = lshr i64 %309, 32
  %317 = shl i64 %309, 3
  %318 = and i64 %317, 4294967288
  %319 = add nuw nsw i64 %318, 8
  %320 = xor i64 %319, %316
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %316
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  %329 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %308, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %510, label %332

332:                                              ; preds = %315
  %333 = call i64 @llvm.ctpop.i64(i64 %330) #13, !range !3
  %334 = icmp ugt i64 %333, 1
  br i1 %334, label %338, label %335

335:                                              ; preds = %332
  %336 = add i64 %330, -1
  %337 = and i64 %336, %328
  br label %342

338:                                              ; preds = %332
  %339 = icmp ult i64 %328, %330
  br i1 %339, label %342, label %340

340:                                              ; preds = %338
  %341 = urem i64 %328, %330
  br label %342

342:                                              ; preds = %340, %338, %335
  %343 = phi i64 [ %337, %335 ], [ %341, %340 ], [ %328, %338 ]
  %344 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %308, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %345, i64 %343
  %347 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %346, align 8
  %348 = icmp eq %"struct.std::__1::__hash_node_base.178"* %347, null
  br i1 %348, label %510, label %349

349:                                              ; preds = %342
  %350 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %347, i64 0, i32 0
  %351 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %350, align 8
  %352 = icmp eq %"struct.std::__1::__hash_node_base.178"* %351, null
  br i1 %352, label %510, label %353

353:                                              ; preds = %349
  %354 = add i64 %330, -1
  br label %355

355:                                              ; preds = %376, %353
  %356 = phi %"struct.std::__1::__hash_node_base.178"* [ %351, %353 ], [ %378, %376 ]
  %357 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %356, i64 1
  %358 = bitcast %"struct.std::__1::__hash_node_base.178"* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = icmp eq i64 %359, %328
  br i1 %360, label %371, label %361

361:                                              ; preds = %355
  br i1 %334, label %364, label %362

362:                                              ; preds = %361
  %363 = and i64 %359, %354
  br label %368

364:                                              ; preds = %361
  %365 = icmp ult i64 %359, %330
  br i1 %365, label %368, label %366

366:                                              ; preds = %364
  %367 = urem i64 %359, %330
  br label %368

368:                                              ; preds = %366, %364, %362
  %369 = phi i64 [ %363, %362 ], [ %367, %366 ], [ %359, %364 ]
  %370 = icmp eq i64 %369, %343
  br i1 %370, label %376, label %510

371:                                              ; preds = %355
  %372 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %356, i64 2
  %373 = bitcast %"struct.std::__1::__hash_node_base.178"* %372 to %"class.spvtools::opt::Instruction"**
  %374 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %373, align 8
  %375 = icmp eq %"class.spvtools::opt::Instruction"* %374, %307
  br i1 %375, label %380, label %376

376:                                              ; preds = %371, %368
  %377 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %356, i64 0, i32 0
  %378 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %377, align 8
  %379 = icmp eq %"struct.std::__1::__hash_node_base.178"* %378, null
  br i1 %379, label %510, label %355

380:                                              ; preds = %371
  %381 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %356, i64 3
  %382 = bitcast %"struct.std::__1::__hash_node_base.178"* %381 to %"class.spvtools::opt::BasicBlock"**
  %383 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %382, align 8
  %384 = icmp eq %"class.spvtools::opt::BasicBlock"* %383, null
  br i1 %384, label %510, label %385

385:                                              ; preds = %380
  %386 = ptrtoint %"class.spvtools::opt::BasicBlock"* %383 to i64
  %387 = lshr i64 %386, 32
  %388 = shl i64 %386, 3
  %389 = and i64 %388, 4294967288
  %390 = add nuw nsw i64 %389, 8
  %391 = xor i64 %390, %387
  %392 = mul i64 %391, -7070675565921424023
  %393 = lshr i64 %392, 47
  %394 = xor i64 %392, %387
  %395 = xor i64 %394, %393
  %396 = mul i64 %395, -7070675565921424023
  %397 = lshr i64 %396, 47
  %398 = xor i64 %397, %396
  %399 = mul i64 %398, -7070675565921424023
  %400 = load i64, i64* %25, align 8
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %449, label %402

402:                                              ; preds = %385
  %403 = call i64 @llvm.ctpop.i64(i64 %400) #13, !range !3
  %404 = icmp ugt i64 %403, 1
  br i1 %404, label %408, label %405

405:                                              ; preds = %402
  %406 = add i64 %400, -1
  %407 = and i64 %406, %399
  br label %412

408:                                              ; preds = %402
  %409 = icmp ult i64 %399, %400
  br i1 %409, label %412, label %410

410:                                              ; preds = %408
  %411 = urem i64 %399, %400
  br label %412

412:                                              ; preds = %410, %408, %405
  %413 = phi i64 [ %407, %405 ], [ %411, %410 ], [ %399, %408 ]
  %414 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %26, align 8
  %415 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %414, i64 %413
  %416 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %415, align 8
  %417 = icmp eq %"struct.std::__1::__hash_node_base.976"* %416, null
  br i1 %417, label %449, label %418

418:                                              ; preds = %412
  %419 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %416, i64 0, i32 0
  %420 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %419, align 8
  %421 = icmp eq %"struct.std::__1::__hash_node_base.976"* %420, null
  br i1 %421, label %449, label %422

422:                                              ; preds = %418
  %423 = add i64 %400, -1
  br label %424

424:                                              ; preds = %445, %422
  %425 = phi %"struct.std::__1::__hash_node_base.976"* [ %420, %422 ], [ %447, %445 ]
  %426 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %425, i64 1
  %427 = bitcast %"struct.std::__1::__hash_node_base.976"* %426 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = icmp eq i64 %399, %428
  br i1 %429, label %440, label %430

430:                                              ; preds = %424
  br i1 %404, label %433, label %431

431:                                              ; preds = %430
  %432 = and i64 %428, %423
  br label %437

433:                                              ; preds = %430
  %434 = icmp ult i64 %428, %400
  br i1 %434, label %437, label %435

435:                                              ; preds = %433
  %436 = urem i64 %428, %400
  br label %437

437:                                              ; preds = %435, %433, %431
  %438 = phi i64 [ %432, %431 ], [ %436, %435 ], [ %428, %433 ]
  %439 = icmp eq i64 %438, %413
  br i1 %439, label %445, label %449

440:                                              ; preds = %424
  %441 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %425, i64 2
  %442 = bitcast %"struct.std::__1::__hash_node_base.976"* %441 to %"class.spvtools::opt::BasicBlock"**
  %443 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %442, align 8
  %444 = icmp eq %"class.spvtools::opt::BasicBlock"* %443, %383
  br i1 %444, label %510, label %445

445:                                              ; preds = %440, %437
  %446 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %425, i64 0, i32 0
  %447 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %446, align 8
  %448 = icmp eq %"struct.std::__1::__hash_node_base.976"* %447, null
  br i1 %448, label %449, label %424

449:                                              ; preds = %437, %445, %412, %385, %418
  %450 = icmp eq i32 %51, 0
  br i1 %450, label %451, label %460

451:                                              ; preds = %449
  %452 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %307, i64 0, i32 3
  %453 = load i8, i8* %452, align 4, !range !2
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %457, label %455

455:                                              ; preds = %451
  %456 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %307, i32 0) #13
  br label %457

457:                                              ; preds = %451, %455
  %458 = phi i32 [ %456, %455 ], [ 0, %451 ]
  %459 = call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %0, i32 %458)
  br label %460

460:                                              ; preds = %449, %457
  %461 = phi i32 [ %51, %449 ], [ %459, %457 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %32, %"struct.std::__1::aligned_storage<4, 4>::type"** %33, align 8
  store i64 0, i64* %35, align 8
  store i64 1, i64* %30, align 8
  store i32 %461, i32* %36, align 8
  store i32 1, i32* %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  store i64 0, i64* %40, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  store i64 0, i64* %45, align 8
  %462 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %38, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #13
  %463 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %464 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %465 = icmp ult %"struct.spvtools::opt::Operand"* %463, %464
  br i1 %465, label %466, label %480

466:                                              ; preds = %460
  %467 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 0
  %468 = load i32, i32* %37, align 8
  store i32 %468, i32* %467, align 8
  %469 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 1
  %470 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %469, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %470, align 8
  %471 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 1, i32 1
  store i64 0, i64* %471, align 8
  %472 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 1, i32 2
  %473 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 1, i32 3, i64 0
  %474 = bitcast i32** %472 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %473, %"struct.std::__1::aligned_storage<4, 4>::type"** %474, align 8
  %475 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 0, i32 1, i32 4
  %476 = bitcast %"class.std::__1::unique_ptr.0"* %475 to i64*
  store i64 0, i64* %476, align 8
  %477 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %469, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %38) #13
  %478 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %463, i64 1
  %479 = ptrtoint %"struct.spvtools::opt::Operand"* %478 to i64
  store i64 %479, i64* %23, align 8
  br label %481

480:                                              ; preds = %460
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #13
  br label %481

481:                                              ; preds = %466, %480
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %482 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %47, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %47, align 8
  %483 = icmp eq %"class.std::__1::vector.3"* %482, null
  br i1 %483, label %495, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %482, i64 0, i32 0, i32 0
  %486 = load i32*, i32** %485, align 8
  %487 = icmp eq i32* %486, null
  br i1 %487, label %493, label %488

488:                                              ; preds = %484
  %489 = ptrtoint i32* %486 to i64
  %490 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %482, i64 0, i32 0, i32 1
  %491 = bitcast i32** %490 to i64*
  store i64 %489, i64* %491, align 8
  %492 = bitcast i32* %486 to i8*
  call void @_ZdlPv(i8* %492) #12
  br label %493

493:                                              ; preds = %488, %484
  %494 = bitcast %"class.std::__1::vector.3"* %482 to i8*
  call void @_ZdlPv(i8* %494) #12
  br label %495

495:                                              ; preds = %481, %493
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %496 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %48, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %48, align 8
  %497 = icmp eq %"class.std::__1::vector.3"* %496, null
  br i1 %497, label %509, label %498

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %496, i64 0, i32 0, i32 0
  %500 = load i32*, i32** %499, align 8
  %501 = icmp eq i32* %500, null
  br i1 %501, label %507, label %502

502:                                              ; preds = %498
  %503 = ptrtoint i32* %500 to i64
  %504 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %496, i64 0, i32 0, i32 1
  %505 = bitcast i32** %504 to i64*
  store i64 %503, i64* %505, align 8
  %506 = bitcast i32* %500 to i8*
  call void @_ZdlPv(i8* %506) #12
  br label %507

507:                                              ; preds = %502, %498
  %508 = bitcast %"class.std::__1::vector.3"* %496 to i8*
  call void @_ZdlPv(i8* %508) #12
  br label %509

509:                                              ; preds = %495, %507
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  br label %534

510:                                              ; preds = %368, %376, %440, %342, %315, %349, %380
  %511 = and i64 %92, 4294967295
  %512 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %513 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %512, i64 %511
  %514 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %515 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %516 = icmp eq %"struct.spvtools::opt::Operand"* %514, %515
  br i1 %516, label %533, label %517

517:                                              ; preds = %510
  %518 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 0
  %519 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %513, i64 0, i32 0
  %520 = load i32, i32* %519, align 8
  store i32 %520, i32* %518, align 8
  %521 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1
  %522 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %512, i64 %511, i32 1
  %523 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %521, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %523, align 8
  %524 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 1
  store i64 0, i64* %524, align 8
  %525 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 2
  %526 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 3, i64 0
  %527 = bitcast i32** %525 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %526, %"struct.std::__1::aligned_storage<4, 4>::type"** %527, align 8
  %528 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 0, i32 1, i32 4
  %529 = bitcast %"class.std::__1::unique_ptr.0"* %528 to i64*
  store i64 0, i64* %529, align 8
  %530 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %521, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %522) #13
  %531 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %514, i64 1
  %532 = ptrtoint %"struct.spvtools::opt::Operand"* %531 to i64
  store i64 %532, i64* %23, align 8
  br label %534

533:                                              ; preds = %510
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* dereferenceable(48) %513) #13
  br label %534

534:                                              ; preds = %533, %517, %509
  %535 = phi i32 [ %461, %509 ], [ %51, %517 ], [ %51, %533 ]
  %536 = zext i32 %151 to i64
  %537 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %538 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %537, i64 %536
  %539 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %540 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %541 = icmp eq %"struct.spvtools::opt::Operand"* %539, %540
  br i1 %541, label %558, label %542

542:                                              ; preds = %534
  %543 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 0
  %544 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %538, i64 0, i32 0
  %545 = load i32, i32* %544, align 8
  store i32 %545, i32* %543, align 8
  %546 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 1
  %547 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %537, i64 %536, i32 1
  %548 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %546, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %548, align 8
  %549 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 1, i32 1
  store i64 0, i64* %549, align 8
  %550 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 1, i32 2
  %551 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 1, i32 3, i64 0
  %552 = bitcast i32** %550 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %551, %"struct.std::__1::aligned_storage<4, 4>::type"** %552, align 8
  %553 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 0, i32 1, i32 4
  %554 = bitcast %"class.std::__1::unique_ptr.0"* %553 to i64*
  store i64 0, i64* %554, align 8
  %555 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %546, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %547) #13
  %556 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %539, i64 1
  %557 = ptrtoint %"struct.spvtools::opt::Operand"* %556 to i64
  store i64 %557, i64* %23, align 8
  br label %559

558:                                              ; preds = %534
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* dereferenceable(48) %538) #13
  br label %559

559:                                              ; preds = %269, %261, %242, %206, %236, %558, %542
  %560 = phi i32 [ %535, %542 ], [ %535, %558 ], [ %51, %236 ], [ %51, %206 ], [ %51, %242 ], [ %51, %261 ], [ %51, %269 ]
  %561 = add i32 %126, 2
  %562 = load i64, i64* %13, align 8
  %563 = load i64, i64* %15, align 8
  %564 = sub i64 %562, %563
  %565 = sdiv exact i64 %564, 48
  %566 = trunc i64 %565 to i32
  %567 = icmp ult i32 %561, %566
  br i1 %567, label %49, label %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass11RemoveBlockEPNS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::UptrVectorIterator"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.938", align 8
  %4 = alloca %"class.std::__1::function.955", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %1, i64 0, i32 1, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %9 = bitcast %"class.std::__1::function.955"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass11RemoveBlockEPNS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass11RemoveBlockEPNS5_18UptrVectorIteratorINS5_10BasicBlockELb0EEEE3$_6FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = bitcast %"class.std::__1::function.955"* %4 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %8, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast [8 x i8]* %13 to %"class.spvtools::opt::MemPass"**
  store %"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::MemPass"** %14, align 8
  %15 = bitcast %"class.std::__1::function.938"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #13
  %16 = ptrtoint %"class.std::__1::function.955"* %4 to i64
  %17 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %18, align 8
  %19 = bitcast %"class.std::__1::function.938"* %3 to i64*
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = icmp eq %"class.spvtools::opt::Instruction"* %22, null
  %27 = or i1 %26, %25
  br i1 %27, label %44, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %33, %28
  %31 = phi %"class.spvtools::opt::Instruction"* [ %39, %33 ], [ %22, %28 ]
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 1
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %35, i64 0, i32 0, i32 3
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, %"class.spvtools::opt::Instruction"* %35, %"class.spvtools::opt::Instruction"* null
  %40 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %17, align 8
  %41 = call zeroext i1 %40(%"union.std::__1::__function::__policy_storage"* nonnull %29, %"class.spvtools::opt::Instruction"* nonnull %31) #13
  br i1 %41, label %30, label %42

42:                                               ; preds = %30, %33
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  br label %44

44:                                               ; preds = %42, %2
  %45 = phi %"struct.std::__1::__function::__policy"* [ %43, %42 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %2 ]
  %46 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %45, i64 0, i32 1
  %47 = load void (i8*)*, void (i8*)** %46, align 8
  %48 = icmp eq void (i8*)* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void %47(i8* %51) #13
  br label %52

52:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #13
  %53 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %53, i64 0, i32 1
  %55 = load void (i8*)*, void (i8*)** %54, align 8
  %56 = icmp eq void (i8*)* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void %55(i8* %59) #13
  br label %60

60:                                               ; preds = %52, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %20, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 2
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %62, align 8
  %64 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %63, %"class.spvtools::opt::Instruction"* %61) #13
  %65 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %1, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %1, i64 0, i32 0
  %67 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %66, align 8
  %68 = bitcast %"class.std::__1::vector.38"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::__wrap_iter"* %65 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %71, %69
  %73 = ashr exact i64 %72, 3
  %74 = inttoptr i64 %71 to %"class.std::__1::unique_ptr.40"*
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %74, i64 1
  %76 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %67, i64 0, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.40"* %75, %77
  br i1 %78, label %98, label %79

79:                                               ; preds = %60, %91
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %93, %91 ], [ %74, %60 ]
  %81 = phi %"class.std::__1::unique_ptr.40"* [ %92, %91 ], [ %75, %60 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  store i64 %84, i64* %87, align 8
  %88 = icmp eq %"class.spvtools::opt::BasicBlock"* %86, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %80 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %90, %"class.spvtools::opt::BasicBlock"* nonnull %86) #13
  br label %91

91:                                               ; preds = %89, %79
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %81, i64 1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %94 = icmp eq %"class.std::__1::unique_ptr.40"* %92, %77
  br i1 %94, label %95, label %79

95:                                               ; preds = %91
  %96 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %76, align 8
  %97 = icmp eq %"class.std::__1::unique_ptr.40"* %96, %93
  br i1 %97, label %111, label %98

98:                                               ; preds = %95, %60
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %93, %95 ], [ %74, %60 ]
  %100 = phi %"class.std::__1::unique_ptr.40"* [ %96, %95 ], [ %75, %60 ]
  br label %101

101:                                              ; preds = %109, %98
  %102 = phi %"class.std::__1::unique_ptr.40"* [ %103, %109 ], [ %100, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %102, i64 -1
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %104, align 8
  %106 = icmp eq %"class.spvtools::opt::BasicBlock"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %108, %"class.spvtools::opt::BasicBlock"* nonnull %105) #13
  br label %109

109:                                              ; preds = %107, %101
  %110 = icmp eq %"class.std::__1::unique_ptr.40"* %103, %99
  br i1 %110, label %111, label %101

111:                                              ; preds = %109, %95
  %112 = phi %"class.std::__1::unique_ptr.40"* [ %93, %95 ], [ %99, %109 ]
  store %"class.std::__1::unique_ptr.40"* %112, %"class.std::__1::unique_ptr.40"** %76, align 8
  %113 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %66, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %115, i64 %73
  store %"class.std::__1::unique_ptr.40"* %116, %"class.std::__1::unique_ptr.40"** %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function.938", align 8
  %4 = alloca %"class.std::__1::unordered_set.971", align 8
  %5 = alloca %"class.std::__1::unordered_set.971", align 8
  %6 = alloca %"class.std::__1::queue.999", align 8
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca %"class.std::__1::function.1015", align 8
  %9 = alloca %"class.std::__1::function.1015", align 8
  %10 = alloca %"class.std::__1::function.955", align 8
  %11 = alloca %"class.spvtools::opt::UptrVectorIterator", align 8
  %12 = bitcast %"class.std::__1::unordered_set.971"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0, i32 4, i64 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.992"* %17 to i32*
  %19 = bitcast i8* %16 to i32*
  store i32 -1431655766, i32* %19, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %18, align 8
  %20 = bitcast %"class.std::__1::unordered_set.971"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %5, i64 0, i32 0, i32 4, i64 0
  %24 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %5, i64 0, i32 0, i32 3
  %25 = bitcast %"class.std::__1::__compressed_pair.992"* %24 to i32*
  %26 = bitcast i8* %23 to i32*
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 8
  %27 = bitcast %"class.std::__1::queue.999"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 48, i1 false) #13
  %33 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.40"** %34 to i64**
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %4, i64 0, i32 0
  %40 = call { %"struct.std::__1::__hash_node_base.976"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.972"* nonnull %39, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = load i64*, i64** %35, align 8
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.spvtools::opt::BasicBlock"**** %30 to i64*
  %44 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %6, i64 0, i32 0
  call void @_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1000"* nonnull %44) #13
  %45 = load i64, i64* %32, align 8
  %46 = load i64, i64* %31, align 8
  %47 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %48 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %30, align 8
  %49 = add i64 %46, %45
  %50 = icmp eq %"class.spvtools::opt::BasicBlock"*** %48, %47
  br i1 %50, label %58, label %51

51:                                               ; preds = %2
  %52 = lshr i64 %49, 9
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %47, i64 %52
  %54 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, align 8
  %55 = and i64 %49, 511
  %56 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %54, i64 %55
  %57 = bitcast %"class.spvtools::opt::BasicBlock"** %56 to i64*
  br label %58

58:                                               ; preds = %2, %51
  %59 = phi i64* [ %57, %51 ], [ null, %2 ]
  store i64 %42, i64* %59, align 8
  %60 = load i64, i64* %32, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %32, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %125, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.std::__1::function.1015"* %8 to i8*
  %65 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %8, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %8, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %8, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::function.1015"* %9 to i8*
  %69 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %9, i64 0, i32 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %9, i64 0, i32 0, i32 2
  %71 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %9, i64 0, i32 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %63, %122
  %73 = phi i64 [ %61, %63 ], [ %123, %122 ]
  %74 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %75 = load i64, i64* %31, align 8
  %76 = lshr i64 %75, 9
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %74, i64 %76
  %78 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %77, align 8
  %79 = and i64 %75, 511
  %80 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %78, i64 %79
  %81 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %80, align 8
  %82 = add i64 %73, -1
  store i64 %82, i64* %32, align 8
  %83 = add i64 %75, 1
  store i64 %83, i64* %31, align 8
  %84 = icmp ult i64 %83, 1024
  br i1 %84, label %92, label %85

85:                                               ; preds = %72
  %86 = bitcast %"class.spvtools::opt::BasicBlock"*** %74 to i8**
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #12
  %88 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %88, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %89, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %90 = load i64, i64* %31, align 8
  %91 = add i64 %90, -512
  store i64 %91, i64* %31, align 8
  br label %92

92:                                               ; preds = %72, %85
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #13
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS7_8FunctionEE3$_7S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %65, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %66, align 8
  %93 = call i8* @_Znwm(i64 32) #12, !noalias !4
  %94 = bitcast i8* %93 to %"class.std::__1::unordered_set.971"**
  store %"class.std::__1::unordered_set.971"* %4, %"class.std::__1::unordered_set.971"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to %"class.std::__1::unordered_set.971"**
  store %"class.std::__1::unordered_set.971"* %5, %"class.std::__1::unordered_set.971"** %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to %"class.std::__1::queue.999"**
  store %"class.std::__1::queue.999"* %6, %"class.std::__1::queue.999"** %98, align 8
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  %100 = bitcast i8* %99 to %"class.spvtools::opt::MemPass"**
  store %"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::MemPass"** %100, align 8
  store i8* %93, i8** %67, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %81, %"class.std::__1::function.1015"* nonnull dereferenceable(32) %8) #13
  %101 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %66, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %101, i64 0, i32 1
  %103 = load void (i8*)*, void (i8*)** %102, align 8
  %104 = icmp eq void (i8*)* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %92
  %106 = load i8*, i8** %67, align 8
  call void %103(i8* %106) #13
  br label %107

107:                                              ; preds = %92, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #13
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS7_8FunctionEE3$_7S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %69, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %70, align 8
  %108 = call i8* @_Znwm(i64 32) #12, !noalias !9
  %109 = bitcast i8* %108 to %"class.std::__1::unordered_set.971"**
  store %"class.std::__1::unordered_set.971"* %4, %"class.std::__1::unordered_set.971"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 8
  %111 = bitcast i8* %110 to %"class.std::__1::unordered_set.971"**
  store %"class.std::__1::unordered_set.971"* %5, %"class.std::__1::unordered_set.971"** %111, align 8
  %112 = getelementptr inbounds i8, i8* %108, i64 16
  %113 = bitcast i8* %112 to %"class.std::__1::queue.999"**
  store %"class.std::__1::queue.999"* %6, %"class.std::__1::queue.999"** %113, align 8
  %114 = getelementptr inbounds i8, i8* %108, i64 24
  %115 = bitcast i8* %114 to %"class.spvtools::opt::MemPass"**
  store %"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::MemPass"** %115, align 8
  store i8* %108, i8** %71, align 8
  call void @_ZN8spvtools3opt10BasicBlock24ForMergeAndContinueLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %81, %"class.std::__1::function.1015"* nonnull dereferenceable(32) %9) #13
  %116 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %70, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %116, i64 0, i32 1
  %118 = load void (i8*)*, void (i8*)** %117, align 8
  %119 = icmp eq void (i8*)* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %107
  %121 = load i8*, i8** %71, align 8
  call void %118(i8* %121) #13
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #13
  %123 = load i64, i64* %32, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %72

125:                                              ; preds = %122, %58
  %126 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3
  %127 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %130 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %129, align 8
  %131 = icmp eq %"class.std::__1::unique_ptr.40"* %128, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = ptrtoint %"class.std::__1::unique_ptr.40"* %128 to i64
  br label %153

134:                                              ; preds = %125
  %135 = bitcast %"class.std::__1::function.955"* %10 to i8*
  %136 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %10, i64 0, i32 0, i32 1, i32 0
  %137 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %10, i64 0, i32 0, i32 2
  %138 = bitcast %"class.std::__1::function.955"* %10 to %"class.std::__1::unordered_set.971"**
  %139 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %10, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast [8 x i8]* %139 to %"class.spvtools::opt::MemPass"**
  %141 = bitcast %"class.std::__1::function.938"* %3 to i8*
  %142 = ptrtoint %"class.std::__1::function.955"* %10 to i64
  %143 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 1, i32 0
  %144 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 2
  %145 = bitcast %"class.std::__1::function.938"* %3 to i64*
  %146 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %3, i64 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %10, i64 0, i32 0, i32 0, i32 0
  br label %162

149:                                              ; preds = %270
  %150 = bitcast %"class.std::__1::vector.38"* %126 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %129, align 8
  br label %153

153:                                              ; preds = %132, %149
  %154 = phi %"class.std::__1::unique_ptr.40"* [ %152, %149 ], [ %128, %132 ]
  %155 = phi i64 [ %151, %149 ], [ %133, %132 ]
  %156 = bitcast %"class.spvtools::opt::UptrVectorIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #13
  %157 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %11, i64 0, i32 0
  %158 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator", %"class.spvtools::opt::UptrVectorIterator"* %11, i64 0, i32 1, i32 0
  store %"class.std::__1::vector.38"* %126, %"class.std::__1::vector.38"** %157, align 8
  %159 = bitcast %"class.std::__1::unique_ptr.40"** %158 to i64*
  store i64 %155, i64* %159, align 8
  %160 = inttoptr i64 %155 to %"class.std::__1::unique_ptr.40"*
  %161 = icmp eq %"class.std::__1::unique_ptr.40"* %154, %160
  br i1 %161, label %273, label %393

162:                                              ; preds = %134, %270
  %163 = phi %"class.std::__1::unique_ptr.40"* [ %128, %134 ], [ %271, %270 ]
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %164, align 8
  %166 = ptrtoint %"class.spvtools::opt::BasicBlock"* %165 to i64
  %167 = lshr i64 %166, 32
  %168 = shl i64 %166, 3
  %169 = and i64 %168, 4294967288
  %170 = add nuw nsw i64 %169, 8
  %171 = xor i64 %170, %167
  %172 = mul i64 %171, -7070675565921424023
  %173 = lshr i64 %172, 47
  %174 = xor i64 %172, %167
  %175 = xor i64 %174, %173
  %176 = mul i64 %175, -7070675565921424023
  %177 = lshr i64 %176, 47
  %178 = xor i64 %177, %176
  %179 = mul i64 %178, -7070675565921424023
  %180 = load i64, i64* %14, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %270, label %182

182:                                              ; preds = %162
  %183 = call i64 @llvm.ctpop.i64(i64 %180) #13, !range !3
  %184 = icmp ugt i64 %183, 1
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = add i64 %180, -1
  %187 = and i64 %179, %186
  br label %192

188:                                              ; preds = %182
  %189 = icmp ult i64 %179, %180
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = urem i64 %179, %180
  br label %192

192:                                              ; preds = %190, %188, %185
  %193 = phi i64 [ %187, %185 ], [ %191, %190 ], [ %179, %188 ]
  %194 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %13, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %194, i64 %193
  %196 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.976"* %196, null
  br i1 %197, label %270, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %196, i64 0, i32 0
  %200 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %199, align 8
  %201 = icmp eq %"struct.std::__1::__hash_node_base.976"* %200, null
  br i1 %201, label %270, label %202

202:                                              ; preds = %198
  %203 = add i64 %180, -1
  br label %204

204:                                              ; preds = %225, %202
  %205 = phi %"struct.std::__1::__hash_node_base.976"* [ %200, %202 ], [ %227, %225 ]
  %206 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %205, i64 1
  %207 = bitcast %"struct.std::__1::__hash_node_base.976"* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %179, %208
  br i1 %209, label %220, label %210

210:                                              ; preds = %204
  br i1 %184, label %213, label %211

211:                                              ; preds = %210
  %212 = and i64 %208, %203
  br label %217

213:                                              ; preds = %210
  %214 = icmp ult i64 %208, %180
  br i1 %214, label %217, label %215

215:                                              ; preds = %213
  %216 = urem i64 %208, %180
  br label %217

217:                                              ; preds = %215, %213, %211
  %218 = phi i64 [ %212, %211 ], [ %216, %215 ], [ %208, %213 ]
  %219 = icmp eq i64 %218, %193
  br i1 %219, label %225, label %270

220:                                              ; preds = %204
  %221 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %205, i64 2
  %222 = bitcast %"struct.std::__1::__hash_node_base.976"* %221 to %"class.spvtools::opt::BasicBlock"**
  %223 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %222, align 8
  %224 = icmp eq %"class.spvtools::opt::BasicBlock"* %223, %165
  br i1 %224, label %229, label %225

225:                                              ; preds = %220, %217
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %205, i64 0, i32 0
  %227 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %226, align 8
  %228 = icmp eq %"struct.std::__1::__hash_node_base.976"* %227, null
  br i1 %228, label %270, label %204

229:                                              ; preds = %220
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #13
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass23RemoveUnreachableBlocksEPNS3_8FunctionEE3$_8S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %136, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_8FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %137, align 8
  store %"class.std::__1::unordered_set.971"* %4, %"class.std::__1::unordered_set.971"** %138, align 8
  store %"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::MemPass"** %140, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %143, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %144, align 8
  store i64 %142, i64* %145, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %165, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %231 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 0, i32 3
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp ne i8 %233, 0
  %235 = icmp eq %"class.spvtools::opt::Instruction"* %231, null
  %236 = or i1 %235, %234
  br i1 %236, label %255, label %237

237:                                              ; preds = %229, %246
  %238 = phi %"class.spvtools::opt::Instruction"* [ %250, %246 ], [ %231, %229 ]
  %239 = icmp eq %"class.spvtools::opt::Instruction"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %238, i64 0, i32 0, i32 1
  %242 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %241, align 8
  %243 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %238, i64 0, i32 2
  %244 = load i32, i32* %243, align 8
  %245 = icmp eq i32 %244, 245
  br i1 %245, label %246, label %253

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %242, i64 0, i32 0, i32 3
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  %250 = select i1 %249, %"class.spvtools::opt::Instruction"* %242, %"class.spvtools::opt::Instruction"* null
  %251 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %143, align 8
  %252 = call zeroext i1 %251(%"union.std::__1::__function::__policy_storage"* nonnull %146, %"class.spvtools::opt::Instruction"* nonnull %238) #13
  br i1 %252, label %237, label %253

253:                                              ; preds = %237, %240, %246
  %254 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %144, align 8
  br label %255

255:                                              ; preds = %253, %229
  %256 = phi %"struct.std::__1::__function::__policy"* [ %254, %253 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %229 ]
  %257 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %256, i64 0, i32 1
  %258 = load void (i8*)*, void (i8*)** %257, align 8
  %259 = icmp eq void (i8*)* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %255
  %261 = load i8*, i8** %147, align 8
  call void %258(i8* %261) #13
  br label %262

262:                                              ; preds = %255, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #13
  %263 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %137, align 8
  %264 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %263, i64 0, i32 1
  %265 = load void (i8*)*, void (i8*)** %264, align 8
  %266 = icmp eq void (i8*)* %265, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %262
  %268 = load i8*, i8** %148, align 8
  call void %265(i8* %268) #13
  br label %269

269:                                              ; preds = %262, %267
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #13
  br label %270

270:                                              ; preds = %217, %225, %198, %162, %192, %269
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %163, i64 1
  %272 = icmp eq %"class.std::__1::unique_ptr.40"* %271, %130
  br i1 %272, label %149, label %162

273:                                              ; preds = %469, %153
  %274 = phi i8 [ 0, %153 ], [ %473, %469 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #13
  %275 = and i8 %274, 1
  %276 = icmp ne i8 %275, 0
  %277 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %278 = load i64, i64* %31, align 8
  %279 = lshr i64 %278, 9
  %280 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %277, i64 %279
  %281 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %30, align 8
  %282 = icmp eq %"class.spvtools::opt::BasicBlock"*** %281, %277
  %283 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %281 to i64
  %284 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %277 to i64
  br i1 %282, label %297, label %285

285:                                              ; preds = %273
  %286 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %280, align 8
  %287 = and i64 %278, 511
  %288 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %286, i64 %287
  %289 = load i64, i64* %32, align 8
  %290 = add i64 %289, %278
  %291 = lshr i64 %290, 9
  %292 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %277, i64 %291
  %293 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %292, align 8
  %294 = and i64 %290, 511
  %295 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %293, i64 %294
  %296 = icmp eq %"class.spvtools::opt::BasicBlock"** %295, %288
  br i1 %296, label %297, label %301

297:                                              ; preds = %314, %273, %285
  store i64 0, i64* %32, align 8
  %298 = sub i64 %283, %284
  %299 = ashr exact i64 %298, 3
  %300 = icmp ugt i64 %299, 2
  br i1 %300, label %319, label %332

301:                                              ; preds = %285, %314
  %302 = phi %"class.spvtools::opt::BasicBlock"** [ %317, %314 ], [ %288, %285 ]
  %303 = phi %"class.spvtools::opt::BasicBlock"*** [ %316, %314 ], [ %280, %285 ]
  %304 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %302, i64 1
  %305 = ptrtoint %"class.spvtools::opt::BasicBlock"** %304 to i64
  %306 = bitcast %"class.spvtools::opt::BasicBlock"*** %303 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = sub i64 %305, %307
  %309 = icmp eq i64 %308, 4096
  br i1 %309, label %310, label %314

310:                                              ; preds = %301
  %311 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %303, i64 1
  %312 = bitcast %"class.spvtools::opt::BasicBlock"*** %311 to i64*
  %313 = load i64, i64* %312, align 8
  br label %314

314:                                              ; preds = %310, %301
  %315 = phi i64 [ %313, %310 ], [ %305, %301 ]
  %316 = phi %"class.spvtools::opt::BasicBlock"*** [ %311, %310 ], [ %303, %301 ]
  %317 = inttoptr i64 %315 to %"class.spvtools::opt::BasicBlock"**
  %318 = icmp eq %"class.spvtools::opt::BasicBlock"** %295, %317
  br i1 %318, label %297, label %301

319:                                              ; preds = %297, %319
  %320 = phi %"class.spvtools::opt::BasicBlock"*** [ %324, %319 ], [ %277, %297 ]
  %321 = bitcast %"class.spvtools::opt::BasicBlock"*** %320 to i8**
  %322 = load i8*, i8** %321, align 8
  call void @_ZdlPv(i8* %322) #12
  %323 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %324 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %323, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %324, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %325 = load i64, i64* %43, align 8
  %326 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %324 to i64
  %327 = sub i64 %325, %326
  %328 = ashr exact i64 %327, 3
  %329 = icmp ugt i64 %328, 2
  br i1 %329, label %319, label %330

330:                                              ; preds = %319
  %331 = inttoptr i64 %325 to %"class.spvtools::opt::BasicBlock"***
  br label %332

332:                                              ; preds = %330, %297
  %333 = phi %"class.spvtools::opt::BasicBlock"*** [ %281, %297 ], [ %331, %330 ]
  %334 = phi %"class.spvtools::opt::BasicBlock"*** [ %277, %297 ], [ %324, %330 ]
  %335 = phi i64 [ %299, %297 ], [ %328, %330 ]
  switch i64 %335, label %339 [
    i64 1, label %337
    i64 2, label %336
  ]

336:                                              ; preds = %332
  br label %337

337:                                              ; preds = %332, %336
  %338 = phi i64 [ 512, %336 ], [ 256, %332 ]
  store i64 %338, i64* %31, align 8
  br label %339

339:                                              ; preds = %337, %332
  %340 = icmp eq %"class.spvtools::opt::BasicBlock"*** %334, %333
  br i1 %340, label %359, label %341

341:                                              ; preds = %339, %341
  %342 = phi %"class.spvtools::opt::BasicBlock"*** [ %345, %341 ], [ %334, %339 ]
  %343 = bitcast %"class.spvtools::opt::BasicBlock"*** %342 to i8**
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #12
  %345 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %342, i64 1
  %346 = icmp eq %"class.spvtools::opt::BasicBlock"*** %345, %333
  br i1 %346, label %347, label %341

347:                                              ; preds = %341
  %348 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %29, align 8
  %349 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %30, align 8
  %350 = icmp eq %"class.spvtools::opt::BasicBlock"*** %349, %348
  br i1 %350, label %359, label %351

351:                                              ; preds = %347
  %352 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %348 to i64
  %353 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %349, i64 -1
  %354 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %353 to i64
  %355 = sub i64 %354, %352
  %356 = lshr i64 %355, 3
  %357 = xor i64 %356, -1
  %358 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %349, i64 %357
  store %"class.spvtools::opt::BasicBlock"*** %358, %"class.spvtools::opt::BasicBlock"**** %30, align 8
  br label %359

359:                                              ; preds = %351, %347, %339
  %360 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %28, align 8
  %361 = icmp eq %"class.spvtools::opt::BasicBlock"*** %360, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %359
  %363 = bitcast %"class.spvtools::opt::BasicBlock"*** %360 to i8*
  call void @_ZdlPv(i8* %363) #12
  br label %364

364:                                              ; preds = %359, %362
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #13
  %365 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %22, align 8
  %366 = icmp eq %"struct.std::__1::__hash_node_base.976"* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %364, %367
  %368 = phi %"struct.std::__1::__hash_node_base.976"* [ %370, %367 ], [ %365, %364 ]
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %368, i64 0, i32 0
  %370 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %369, align 8
  %371 = bitcast %"struct.std::__1::__hash_node_base.976"* %368 to i8*
  call void @_ZdlPv(i8* %371) #12
  %372 = icmp eq %"struct.std::__1::__hash_node_base.976"* %370, null
  br i1 %372, label %373, label %367

373:                                              ; preds = %367, %364
  %374 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.976"** null, %"struct.std::__1::__hash_node_base.976"*** %21, align 8
  %375 = icmp eq %"struct.std::__1::__hash_node_base.976"** %374, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %373
  %377 = bitcast %"struct.std::__1::__hash_node_base.976"** %374 to i8*
  call void @_ZdlPv(i8* %377) #12
  br label %378

378:                                              ; preds = %373, %376
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #13
  %379 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %15, align 8
  %380 = icmp eq %"struct.std::__1::__hash_node_base.976"* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %378, %381
  %382 = phi %"struct.std::__1::__hash_node_base.976"* [ %384, %381 ], [ %379, %378 ]
  %383 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %382, i64 0, i32 0
  %384 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %383, align 8
  %385 = bitcast %"struct.std::__1::__hash_node_base.976"* %382 to i8*
  call void @_ZdlPv(i8* %385) #12
  %386 = icmp eq %"struct.std::__1::__hash_node_base.976"* %384, null
  br i1 %386, label %387, label %381

387:                                              ; preds = %381, %378
  %388 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.976"** null, %"struct.std::__1::__hash_node_base.976"*** %13, align 8
  %389 = icmp eq %"struct.std::__1::__hash_node_base.976"** %388, null
  br i1 %389, label %392, label %390

390:                                              ; preds = %387
  %391 = bitcast %"struct.std::__1::__hash_node_base.976"** %388 to i8*
  call void @_ZdlPv(i8* %391) #12
  br label %392

392:                                              ; preds = %387, %390
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #13
  ret i1 %276

393:                                              ; preds = %153, %469
  %394 = phi %"class.std::__1::vector.38"* [ %471, %469 ], [ %126, %153 ]
  %395 = phi %"class.std::__1::unique_ptr.40"* [ %472, %469 ], [ %154, %153 ]
  %396 = phi %"class.std::__1::unique_ptr.40"* [ %470, %469 ], [ %160, %153 ]
  %397 = phi i8 [ %473, %469 ], [ 0, %153 ]
  %398 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %396, i64 0, i32 0, i32 0, i32 0
  %399 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %398, align 8
  %400 = ptrtoint %"class.spvtools::opt::BasicBlock"* %399 to i64
  %401 = lshr i64 %400, 32
  %402 = shl i64 %400, 3
  %403 = and i64 %402, 4294967288
  %404 = add nuw nsw i64 %403, 8
  %405 = xor i64 %404, %401
  %406 = mul i64 %405, -7070675565921424023
  %407 = lshr i64 %406, 47
  %408 = xor i64 %406, %401
  %409 = xor i64 %408, %407
  %410 = mul i64 %409, -7070675565921424023
  %411 = lshr i64 %410, 47
  %412 = xor i64 %411, %410
  %413 = mul i64 %412, -7070675565921424023
  %414 = load i64, i64* %14, align 8
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %463, label %416

416:                                              ; preds = %393
  %417 = call i64 @llvm.ctpop.i64(i64 %414) #13, !range !3
  %418 = icmp ugt i64 %417, 1
  br i1 %418, label %422, label %419

419:                                              ; preds = %416
  %420 = add i64 %414, -1
  %421 = and i64 %413, %420
  br label %426

422:                                              ; preds = %416
  %423 = icmp ult i64 %413, %414
  br i1 %423, label %426, label %424

424:                                              ; preds = %422
  %425 = urem i64 %413, %414
  br label %426

426:                                              ; preds = %424, %422, %419
  %427 = phi i64 [ %421, %419 ], [ %425, %424 ], [ %413, %422 ]
  %428 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %13, align 8
  %429 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %428, i64 %427
  %430 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %429, align 8
  %431 = icmp eq %"struct.std::__1::__hash_node_base.976"* %430, null
  br i1 %431, label %463, label %432

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %430, i64 0, i32 0
  %434 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %433, align 8
  %435 = icmp eq %"struct.std::__1::__hash_node_base.976"* %434, null
  br i1 %435, label %463, label %436

436:                                              ; preds = %432
  %437 = add i64 %414, -1
  br label %438

438:                                              ; preds = %459, %436
  %439 = phi %"struct.std::__1::__hash_node_base.976"* [ %434, %436 ], [ %461, %459 ]
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %439, i64 1
  %441 = bitcast %"struct.std::__1::__hash_node_base.976"* %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = icmp eq i64 %413, %442
  br i1 %443, label %454, label %444

444:                                              ; preds = %438
  br i1 %418, label %447, label %445

445:                                              ; preds = %444
  %446 = and i64 %442, %437
  br label %451

447:                                              ; preds = %444
  %448 = icmp ult i64 %442, %414
  br i1 %448, label %451, label %449

449:                                              ; preds = %447
  %450 = urem i64 %442, %414
  br label %451

451:                                              ; preds = %449, %447, %445
  %452 = phi i64 [ %446, %445 ], [ %450, %449 ], [ %442, %447 ]
  %453 = icmp eq i64 %452, %427
  br i1 %453, label %459, label %463

454:                                              ; preds = %438
  %455 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %439, i64 2
  %456 = bitcast %"struct.std::__1::__hash_node_base.976"* %455 to %"class.spvtools::opt::BasicBlock"**
  %457 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %456, align 8
  %458 = icmp eq %"class.spvtools::opt::BasicBlock"* %457, %399
  br i1 %458, label %467, label %459

459:                                              ; preds = %454, %451
  %460 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %439, i64 0, i32 0
  %461 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %460, align 8
  %462 = icmp eq %"struct.std::__1::__hash_node_base.976"* %461, null
  br i1 %462, label %463, label %438

463:                                              ; preds = %459, %451, %426, %393, %432
  call void @_ZN8spvtools3opt7MemPass11RemoveBlockEPNS0_18UptrVectorIteratorINS0_10BasicBlockELb0EEE(%"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::UptrVectorIterator"* nonnull %11)
  %464 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %129, align 8
  %465 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %157, align 8
  %466 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %158, align 8
  br label %469

467:                                              ; preds = %454
  %468 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %396, i64 1
  store %"class.std::__1::unique_ptr.40"* %468, %"class.std::__1::unique_ptr.40"** %158, align 8
  br label %469

469:                                              ; preds = %467, %463
  %470 = phi %"class.std::__1::unique_ptr.40"* [ %466, %463 ], [ %468, %467 ]
  %471 = phi %"class.std::__1::vector.38"* [ %465, %463 ], [ %394, %467 ]
  %472 = phi %"class.std::__1::unique_ptr.40"* [ %464, %463 ], [ %395, %467 ]
  %473 = phi i8 [ 1, %463 ], [ %397, %467 ]
  %474 = icmp ne %"class.std::__1::vector.38"* %471, %126
  %475 = icmp ne %"class.std::__1::unique_ptr.40"* %470, %472
  %476 = or i1 %474, %475
  br i1 %476, label %393, label %273
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1015"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt10BasicBlock24ForMergeAndContinueLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1015"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt7MemPass10CFGCleanupEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"* %0, %"class.spvtools::opt::Function"* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt7MemPass17CollectTargetVarsEPNS0_8FunctionE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.915"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base.915"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  %17 = icmp eq %"struct.std::__1::__hash_node_base.915"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %9, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = add i64 %20, -1
  %25 = and i64 %20, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = sub i64 %20, %25
  br label %41

29:                                               ; preds = %41, %22
  %30 = phi i64 [ 0, %22 ], [ %55, %41 ]
  %31 = icmp eq i64 %25, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %29, %32
  %33 = phi i64 [ %37, %32 ], [ %30, %29 ]
  %34 = phi i64 [ %38, %32 ], [ %25, %29 ]
  %35 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, i64 %33
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %36, align 8
  %37 = add nuw i64 %33, 1
  %38 = add i64 %34, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %32, !llvm.loop !14

40:                                               ; preds = %29, %32, %18
  store i64 0, i64* %5, align 8
  br label %58

41:                                               ; preds = %41, %27
  %42 = phi i64 [ 0, %27 ], [ %55, %41 ]
  %43 = phi i64 [ %28, %27 ], [ %56, %41 ]
  %44 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %45, align 8
  %46 = or i64 %42, 1
  %47 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %48, align 8
  %49 = or i64 %42, 2
  %50 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %51, align 8
  %52 = or i64 %42, 3
  %53 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %54, align 8
  %55 = add nuw i64 %42, 4
  %56 = add i64 %43, -4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %29, label %41

58:                                               ; preds = %2, %40
  %59 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %113, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.915"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"struct.std::__1::__hash_node_base.915"* [ %70, %67 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %68, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %69, align 8
  %71 = bitcast %"struct.std::__1::__hash_node_base.915"* %68 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  %72 = icmp eq %"struct.std::__1::__hash_node_base.915"* %70, null
  br i1 %72, label %73, label %67

73:                                               ; preds = %67, %63
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %64, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = add i64 %75, -1
  %80 = and i64 %75, 3
  %81 = icmp ult i64 %79, 3
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = sub i64 %75, %80
  br label %96

84:                                               ; preds = %96, %77
  %85 = phi i64 [ 0, %77 ], [ %110, %96 ]
  %86 = icmp eq i64 %80, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %84, %87
  %88 = phi i64 [ %92, %87 ], [ %85, %84 ]
  %89 = phi i64 [ %93, %87 ], [ %80, %84 ]
  %90 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %90, i64 %88
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %91, align 8
  %92 = add nuw i64 %88, 1
  %93 = add i64 %89, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %87, !llvm.loop !16

95:                                               ; preds = %84, %87, %73
  store i64 0, i64* %60, align 8
  br label %113

96:                                               ; preds = %96, %82
  %97 = phi i64 [ 0, %82 ], [ %110, %96 ]
  %98 = phi i64 [ %83, %82 ], [ %111, %96 ]
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %101 = or i64 %97, 1
  %102 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %102, i64 %101
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %103, align 8
  %104 = or i64 %97, 2
  %105 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %105, i64 %104
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %107 = or i64 %97, 3
  %108 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %108, i64 %107
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %109, align 8
  %110 = add nuw i64 %97, 4
  %111 = add i64 %98, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %84, label %96

113:                                              ; preds = %58, %95
  %114 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %167, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.254"* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %117, %121
  %122 = phi %"struct.std::__1::__hash_node_base.254"* [ %124, %121 ], [ %119, %117 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %122, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.254"* %122 to i8*
  tail call void @_ZdlPv(i8* %125) #12
  %126 = icmp eq %"struct.std::__1::__hash_node_base.254"* %124, null
  br i1 %126, label %127, label %121

127:                                              ; preds = %121, %117
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %118, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = add i64 %129, -1
  %134 = and i64 %129, 3
  %135 = icmp ult i64 %133, 3
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = sub i64 %129, %134
  br label %150

138:                                              ; preds = %150, %131
  %139 = phi i64 [ 0, %131 ], [ %164, %150 ]
  %140 = icmp eq i64 %134, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %146, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %147, %141 ], [ %134, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %132, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %144, i64 %142
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %145, align 8
  %146 = add nuw i64 %142, 1
  %147 = add i64 %143, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %141, !llvm.loop !17

149:                                              ; preds = %138, %141, %127
  store i64 0, i64* %114, align 8
  br label %167

150:                                              ; preds = %150, %136
  %151 = phi i64 [ 0, %136 ], [ %164, %150 ]
  %152 = phi i64 [ %137, %136 ], [ %165, %150 ]
  %153 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %132, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %153, i64 %151
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %154, align 8
  %155 = or i64 %151, 1
  %156 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %132, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %157, align 8
  %158 = or i64 %151, 2
  %159 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %132, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %159, i64 %158
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %160, align 8
  %161 = or i64 %151, 3
  %162 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %132, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %162, i64 %161
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %163, align 8
  %164 = add nuw i64 %151, 4
  %165 = add i64 %152, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %138, label %150

167:                                              ; preds = %113, %149
  %168 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %169 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %171 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %170, align 8
  %172 = icmp eq %"class.std::__1::unique_ptr.40"* %169, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %167
  %174 = bitcast i32* %3 to i8*
  %175 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %59, i64 0, i32 0
  %176 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %4, i64 0, i32 0
  br label %178

177:                                              ; preds = %188, %167
  ret void

178:                                              ; preds = %173, %188
  %179 = phi %"class.std::__1::unique_ptr.40"* [ %169, %173 ], [ %189, %188 ]
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %180, align 8
  %182 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %181, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %183 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %181, i64 0, i32 2, i32 0, i32 1
  %184 = bitcast %"class.spvtools::opt::Instruction"** %182 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = inttoptr i64 %185 to %"class.spvtools::opt::Instruction"*
  %187 = icmp eq %"class.spvtools::opt::Instruction"* %183, %186
  br i1 %187, label %188, label %191

188:                                              ; preds = %220, %178
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %179, i64 1
  %190 = icmp eq %"class.std::__1::unique_ptr.40"* %189, %171
  br i1 %190, label %177, label %178

191:                                              ; preds = %178, %220
  %192 = phi %"class.spvtools::opt::Instruction"* [ %225, %220 ], [ %186, %178 ]
  %193 = phi i64 [ %224, %220 ], [ %185, %178 ]
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 2
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %195, -61
  %197 = icmp ult i32 %196, 2
  br i1 %197, label %198, label %220

198:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #13
  store i32 -1431655766, i32* %3, align 4
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 3
  %200 = load i8, i8* %199, align 4, !range !2
  %201 = icmp eq i8 %200, 0
  %202 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 4
  %203 = load i8, i8* %202, align 1, !range !2
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 1, i32 2
  %206 = xor i1 %204, true
  %207 = zext i1 %206 to i32
  %208 = select i1 %201, i32 %207, i32 %205
  %209 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %192, i32 %208) #13
  %210 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt7MemPass6GetPtrEjPj(%"class.spvtools::opt::MemPass"* %0, i32 %209, i32* nonnull %3) #13
  %211 = load i32, i32* %3, align 4
  %212 = call zeroext i1 @_ZN8spvtools3opt7MemPass11IsTargetVarEj(%"class.spvtools::opt::MemPass"* %0, i32 %211)
  br i1 %212, label %213, label %219

213:                                              ; preds = %198
  %214 = load i32, i32* %3, align 4
  %215 = call zeroext i1 @_ZN8spvtools3opt7MemPass20HasOnlySupportedRefsEj(%"class.spvtools::opt::MemPass"* %0, i32 %214)
  br i1 %215, label %219, label %216

216:                                              ; preds = %213
  %217 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %175, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  %218 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"* %176, i32* nonnull dereferenceable(4) %3) #13
  br label %219

219:                                              ; preds = %213, %198, %216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #13
  br label %220

220:                                              ; preds = %219, %191
  %221 = inttoptr i64 %193 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %222 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %221, i64 0, i32 1
  %223 = bitcast %"class.spvtools::opt::Instruction"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = inttoptr i64 %224 to %"class.spvtools::opt::Instruction"*
  %226 = icmp eq %"class.spvtools::opt::Instruction"* %183, %225
  br i1 %226, label %188, label %191
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #13
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #1 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.962"**
  %4 = load %"class.std::__1::function.962"*, %"class.std::__1::function.962"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.962", %"class.std::__1::function.962"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #13
  ret i1 true
}

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1039"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #12, !noalias !18
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !18
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !18
  store i32 %62, i32* %61, align 8, !noalias !18
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13, !noalias !18
  store i32 1065353216, i32* %65, align 4, !noalias !18
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !18
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !18
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #13
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #13, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.226"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.230"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.230"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !21

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.230"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.230"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.230"* %36, %"struct.std::__1::__hash_node_base.230"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.230"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.230"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.230"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.230"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.230"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.230"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.230"* %82, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.230"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.230"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.230"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.230"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.230"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.230"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.230"* %80, %"struct.std::__1::__hash_node_base.230"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.230"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.230"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.230"** null, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.230"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.230"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1050"* dereferenceable(8), %"class.std::__1::tuple.1039"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #12, !noalias !22
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1050", %"class.std::__1::tuple.1050"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !22
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !22
  store i32 %62, i32* %61, align 8, !noalias !22
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13, !noalias !22
  store i32 1065353216, i32* %65, align 4, !noalias !22
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !22
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !22
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #13
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #13, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #13
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #13
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #13
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #13
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #13
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #13
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #13
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #13
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #13
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #13
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #13
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #13
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1085", align 8
  %3 = alloca %"class.std::__1::tuple.1039", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.938", align 8
  %6 = alloca %"class.std::__1::function.955", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !25

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.955"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.955"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.938"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.955"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.938"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.938", %"class.std::__1::function.938"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1085"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1085", %"class.std::__1::tuple.1085"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #13
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #13
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1085"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %3) #13
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #13
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #13
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #13
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #13
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #13
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #1 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1085", align 8
  %4 = alloca %"class.std::__1::tuple.1039", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1085"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.std::__1::tuple.1085", %"class.std::__1::tuple.1085"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1085"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %4) #13
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1085"* dereferenceable(8), %"class.std::__1::tuple.1039"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !26
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1085"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !26
  %75 = load i64, i64* %74, align 8, !noalias !26
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !26
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !26
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !26
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !26
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !29

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #1 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.955"**
  %4 = load %"class.std::__1::function.955"*, %"class.std::__1::function.955"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #1 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.955"**
  %4 = load %"class.std::__1::function.955"*, %"class.std::__1::function.955"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #13
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #13
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1050"* dereferenceable(8), %"class.std::__1::tuple.1039"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !30
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1050", %"class.std::__1::tuple.1050"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !30
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !30
  store i32 %62, i32* %61, align 4, !noalias !30
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !30
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !30
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !30
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !33

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !34
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !34
  store i32 %58, i32* %57, align 4, !noalias !34
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !34
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !34
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1123", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.915"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.915"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.915"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1123"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1123"* nonnull sret %3, %"class.std::__1::__hash_table.911"* %0, %"struct.std::__1::__hash_node_base.915"* nonnull %33) #13
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1123", %"class.std::__1::unique_ptr.1123"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1048"*, %"struct.std::__1::__hash_node.1048"** %59, align 8
  store %"struct.std::__1::__hash_node.1048"* null, %"struct.std::__1::__hash_node.1048"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1048"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1048"* %60 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1123"* noalias sret, %"class.std::__1::__hash_table.911"*, %"struct.std::__1::__hash_node_base.915"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.915"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.915"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.915"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.922"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.915"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.915"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.915"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.915"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.915"* %25, %"struct.std::__1::__hash_node_base.915"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.915"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.915"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1123"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1123", %"class.std::__1::unique_ptr.1123"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.925"** %98 to %"class.std::__1::__compressed_pair.922"**
  store %"class.std::__1::__compressed_pair.922"* %30, %"class.std::__1::__compressed_pair.922"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1123", %"class.std::__1::unique_ptr.1123"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPKjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS9_11InstructionEE3$_0S4_EEEEbPKNS0_16__policy_storageES3_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #1 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::MemPass"**
  %4 = load %"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::MemPass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #13
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #13
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %2, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = load i32, i32* %1, align 4
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %38) #13
  %40 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass12IsTargetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::MemPass"* %4, %"class.spvtools::opt::Instruction"* %39) #13
  ret i1 %40
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_7MemPass24HasOnlyNamesAndDecoratesEjE3$_1S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %6 [
    i32 5, label %5
    i32 332, label %5
    i32 71, label %5
  ]

5:                                                ; preds = %2, %2, %2
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_7MemPass8HasLoadsEjE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::MemPass"**
  %4 = load %"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::MemPass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %20 [
    i32 83, label %7
    i32 66, label %7
    i32 65, label %7
    i32 62, label %19
    i32 5, label %19
    i32 332, label %19
    i32 71, label %19
  ]

7:                                                ; preds = %2, %2, %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %14) #13
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %15, %11 ], [ 0, %7 ]
  %18 = tail call zeroext i1 @_ZNK8spvtools3opt7MemPass8HasLoadsEj(%"class.spvtools::opt::MemPass"* %4, i32 %17) #13
  br i1 %18, label %20, label %19

19:                                               ; preds = %16, %2, %2, %2, %2
  br label %20

20:                                               ; preds = %2, %16, %19
  %21 = phi i1 [ true, %19 ], [ false, %16 ], [ false, %2 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %3 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1135", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::Instruction"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 1
  store %"class.spvtools::opt::Instruction"*** %14, %"class.spvtools::opt::Instruction"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::Instruction"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::Instruction"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::Instruction"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::Instruction"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::Instruction"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::Instruction"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %36
  store %"class.spvtools::opt::Instruction"*** %44, %"class.spvtools::opt::Instruction"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %43, i64 %32
  store %"class.spvtools::opt::Instruction"*** %45, %"class.spvtools::opt::Instruction"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::Instruction"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::Instruction"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.spvtools::opt::Instruction"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::Instruction"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::Instruction"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::Instruction"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::Instruction"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::Instruction"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !38

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::Instruction"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::Instruction"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::Instruction"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::Instruction"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::Instruction"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::Instruction"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::Instruction"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::Instruction"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::Instruction"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::Instruction"*** %70 to i64
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::Instruction"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::Instruction"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, i64 1
  store %"class.spvtools::opt::Instruction"*** %161, %"class.spvtools::opt::Instruction"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::Instruction"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::Instruction"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::Instruction"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::Instruction"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %192, i64 1
  store %"class.spvtools::opt::Instruction"*** %195, %"class.spvtools::opt::Instruction"**** %167, align 8
  %196 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %197 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::Instruction"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::Instruction"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::Instruction"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::Instruction"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::Instruction"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::Instruction"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::Instruction"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::Instruction"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %212, i64 %215
  store %"class.spvtools::opt::Instruction"*** %223, %"class.spvtools::opt::Instruction"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %222, i64 %211
  store %"class.spvtools::opt::Instruction"*** %224, %"class.spvtools::opt::Instruction"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::Instruction"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"class.spvtools::opt::Instruction"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::Instruction"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::Instruction"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::Instruction"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::Instruction"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::Instruction"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !39

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::Instruction"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::Instruction"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::Instruction"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::Instruction"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::Instruction"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::Instruction"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::Instruction"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::Instruction"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::Instruction"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::Instruction"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::Instruction"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::Instruction"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::Instruction"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::Instruction"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::Instruction"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::Instruction"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::Instruction"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::Instruction"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::Instruction"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::Instruction"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::Instruction"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::Instruction"*** %247 to i64
  %323 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::Instruction"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::Instruction"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::Instruction"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %335, i64 1
  store %"class.spvtools::opt::Instruction"*** %336, %"class.spvtools::opt::Instruction"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::Instruction"*** null, %"class.spvtools::opt::Instruction"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.949"** %342 to %"class.std::__1::__compressed_pair.946"**
  store %"class.std::__1::__compressed_pair.946"* %346, %"class.std::__1::__compressed_pair.946"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"class.spvtools::opt::Instruction"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %171
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %345
  store %"class.spvtools::opt::Instruction"*** %357, %"class.spvtools::opt::Instruction"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::Instruction"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::Instruction"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::Instruction"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %356, i64 %370
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::Instruction"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"class.spvtools::opt::Instruction"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::Instruction"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::Instruction"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %395 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::Instruction"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::Instruction"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::Instruction"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::Instruction"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::Instruction"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::Instruction"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %406, i64 1
  store %"class.spvtools::opt::Instruction"*** %408, %"class.spvtools::opt::Instruction"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::Instruction"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::Instruction"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::Instruction"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1135"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::Instruction"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::Instruction"***
  %442 = icmp eq %"class.spvtools::opt::Instruction"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::Instruction"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 %448
  store %"class.spvtools::opt::Instruction"*** %449, %"class.spvtools::opt::Instruction"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::Instruction"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1135"* nonnull %4, %"class.spvtools::opt::Instruction"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::Instruction"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::Instruction"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::Instruction"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::Instruction"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %26
  store %"class.spvtools::opt::Instruction"*** %34, %"class.spvtools::opt::Instruction"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %22
  store %"class.spvtools::opt::Instruction"*** %35, %"class.spvtools::opt::Instruction"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::Instruction"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::Instruction"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.spvtools::opt::Instruction"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::Instruction"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::Instruction"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::Instruction"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::Instruction"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::Instruction"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !40

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::Instruction"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::Instruction"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::Instruction"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::Instruction"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::Instruction"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::Instruction"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::Instruction"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::Instruction"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::Instruction"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::Instruction"*** %60 to i64
  %136 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::Instruction"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::Instruction"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %152, i64 1
  store %"class.spvtools::opt::Instruction"*** %153, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !41

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1135"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1135", %"struct.std::__1::__split_buffer.1135"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1135"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !42

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass9AddStoresEjPNS_5queueIS5_NS_5dequeIS5_NS_9allocatorIS5_EEEEEEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::MemPass"**
  %5 = load %"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::MemPass"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -65
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %24

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %17) #13
  br label %19

19:                                               ; preds = %14, %10
  %20 = phi i32 [ %18, %14 ], [ 0, %10 ]
  %21 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %22 = bitcast [8 x i8]* %21 to %"class.std::__1::queue"**
  %23 = load %"class.std::__1::queue"*, %"class.std::__1::queue"** %22, align 8
  tail call void @_ZN8spvtools3opt7MemPass9AddStoresEjPNSt3__15queueIPNS0_11InstructionENS2_5dequeIS5_NS2_9allocatorIS5_EEEEEE(%"class.spvtools::opt::MemPass"* %5, i32 %20, %"class.std::__1::queue"* %23) #13
  br label %72

24:                                               ; preds = %2
  %25 = icmp eq i32 %7, 62
  br i1 %25, label %26, label %72

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %28 = bitcast [8 x i8]* %27 to %"class.std::__1::queue"**
  %29 = load %"class.std::__1::queue"*, %"class.std::__1::queue"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %29, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.spvtools::opt::Instruction"**** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.spvtools::opt::Instruction"**** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = icmp eq i64 %36, 0
  %38 = shl i64 %36, 6
  %39 = add i64 %38, -1
  %40 = select i1 %37, i64 0, i64 %39
  %41 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %29, i64 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %29, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %42
  %46 = icmp eq i64 %40, %45
  %47 = inttoptr i64 %35 to %"class.spvtools::opt::Instruction"***
  %48 = inttoptr i64 %32 to %"class.spvtools::opt::Instruction"***
  br i1 %46, label %49, label %56

49:                                               ; preds = %26
  %50 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %29, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %50) #13
  %51 = load i64, i64* %43, align 8
  %52 = load i64, i64* %41, align 8
  %53 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %33, align 8
  %54 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %30, align 8
  %55 = add i64 %52, %51
  br label %56

56:                                               ; preds = %49, %26
  %57 = phi i64 [ %55, %49 ], [ %45, %26 ]
  %58 = phi %"class.spvtools::opt::Instruction"*** [ %54, %49 ], [ %48, %26 ]
  %59 = phi %"class.spvtools::opt::Instruction"*** [ %53, %49 ], [ %47, %26 ]
  %60 = icmp eq %"class.spvtools::opt::Instruction"*** %58, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = lshr i64 %57, 9
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %59, i64 %62
  %64 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %63, align 8
  %65 = and i64 %57, 511
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, i64 %65
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  br label %68

68:                                               ; preds = %61, %56
  %69 = phi i64* [ %67, %61 ], [ null, %56 ]
  store i64 %3, i64* %69, align 8
  %70 = load i64, i64* %43, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %43, align 8
  br label %72

72:                                               ; preds = %19, %24, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node.1144"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1144"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1144"* %1 to %"class.std::__1::__tree_node.1144"**
  %6 = load %"class.std::__1::__tree_node.1144"*, %"class.std::__1::__tree_node.1144"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1144"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1144"**
  %9 = load %"class.std::__1::__tree_node.1144"*, %"class.std::__1::__tree_node.1144"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node.1144"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1144"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass7DCEInstEPNS8_11InstructionERKNS_8functionIFvSB_EEEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #1 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::set.158"**
  %4 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node.1144"**
  %7 = load %"class.std::__1::__tree_node.1144"*, %"class.std::__1::__tree_node.1144"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.1144"* %7, null
  br i1 %8, label %38, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i32, i32* %1, align 4
  br label %12

12:                                               ; preds = %34, %9
  %13 = phi %"class.std::__1::__tree_node.1144"* [ %37, %34 ], [ %7, %9 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %10, %9 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %11, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult i32 %16, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.1144", %"class.std::__1::__tree_node.1144"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node.1144"*
  br label %12

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %22
  %41 = phi %"class.std::__1::__tree_end_node"* [ %5, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node.1144"**
  %44 = load %"class.std::__1::__tree_node.1144"*, %"class.std::__1::__tree_node.1144"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.1144"* %44, null
  br i1 %45, label %46, label %71

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 32) #12, !noalias !43
  %48 = getelementptr inbounds i8, i8* %47, i64 28
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %1, align 4, !noalias !43
  store i32 %50, i32* %49, align 4, !noalias !43
  %51 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds i8, i8* %47, i64 16
  %53 = bitcast i8* %52 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %53, align 8
  %54 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %4, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %46
  %61 = ptrtoint %"class.std::__1::__tree_node_base"* %58 to i64
  %62 = bitcast %"class.std::__1::set.158"* %4 to i64*
  store i64 %61, i64* %62, align 8
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %64

64:                                               ; preds = %60, %46
  %65 = phi %"class.std::__1::__tree_node_base"* [ %51, %46 ], [ %63, %60 ]
  %66 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"* %65) #13
  %68 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %40, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass20HasOnlySupportedRefsEjE3$_5S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #13
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 29
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %10 [
    i32 62, label %9
    i32 61, label %9
    i32 5, label %9
    i32 332, label %9
    i32 71, label %9
  ]

9:                                                ; preds = %6, %6, %6, %6, %6
  br label %10

10:                                               ; preds = %2, %6, %9
  %11 = phi i1 [ true, %2 ], [ true, %9 ], [ false, %6 ]
  ret i1 %11
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #13
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #13
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #13
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #14
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #13
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass11RemoveBlockEPNS3_18UptrVectorIteratorINS3_10BasicBlockELb0EEEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"* %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %10 = bitcast [8 x i8]* %9 to %"class.spvtools::opt::Pass"**
  %11 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %11, i64 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %13, %"class.spvtools::opt::Instruction"* %1) #13
  br label %15

15:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #13
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #13
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #13
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.976"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.972"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.976"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.976"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.976"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.976"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.976"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !46
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !46
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !46
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !46
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.976"**
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %75, align 8, !noalias !46
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.972"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.976"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.976"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.976"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.976"* %118, %"struct.std::__1::__hash_node_base.976"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.976"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.976"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.976"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.976"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.976"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.976"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.976"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.976"*, i8 } undef, %"struct.std::__1::__hash_node_base.976"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.976"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.976"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.972"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.972"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.972"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.972"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.972"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.976"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.976"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.978", %"class.std::__1::__bucket_list_deallocator.978"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !49

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.976"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.976"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.976"* %36, %"struct.std::__1::__hash_node_base.976"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.976"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.976"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.976"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.976"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.976"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.976"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.976"* %82, %"struct.std::__1::__hash_node_base.976"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.976"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.976"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.976"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.976"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.976"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.976"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.976"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.976"* %80, %"struct.std::__1::__hash_node_base.976"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.976"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.976"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.976"** null, %"struct.std::__1::__hash_node_base.976"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.976"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.976"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.978", %"class.std::__1::__bucket_list_deallocator.978"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1000"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %3 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1171", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::BasicBlock"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %14, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::BasicBlock"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::BasicBlock"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::BasicBlock"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::BasicBlock"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %36
  store %"class.spvtools::opt::BasicBlock"*** %44, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %43, i64 %32
  store %"class.spvtools::opt::BasicBlock"*** %45, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::BasicBlock"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::BasicBlock"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.1000"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.spvtools::opt::BasicBlock"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::BasicBlock"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::BasicBlock"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::BasicBlock"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !50

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::BasicBlock"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::BasicBlock"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::BasicBlock"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::BasicBlock"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::BasicBlock"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::BasicBlock"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::BasicBlock"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %70 to i64
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::BasicBlock"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::BasicBlock"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %160, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %161, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::BasicBlock"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::BasicBlock"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.1000"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::BasicBlock"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::BasicBlock"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.1002"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.1002"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::BasicBlock"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %192, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %195, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %196 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %197 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::BasicBlock"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::BasicBlock"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::BasicBlock"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::BasicBlock"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %212, i64 %215
  store %"class.spvtools::opt::BasicBlock"*** %223, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %222, i64 %211
  store %"class.spvtools::opt::BasicBlock"*** %224, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::BasicBlock"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"class.spvtools::opt::BasicBlock"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::BasicBlock"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::BasicBlock"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::BasicBlock"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !51

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::BasicBlock"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::BasicBlock"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::BasicBlock"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::BasicBlock"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::BasicBlock"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::BasicBlock"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::BasicBlock"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::BasicBlock"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::BasicBlock"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::BasicBlock"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::BasicBlock"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::BasicBlock"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::BasicBlock"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::BasicBlock"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::BasicBlock"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::BasicBlock"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::BasicBlock"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::BasicBlock"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::BasicBlock"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %247 to i64
  %323 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::BasicBlock"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::BasicBlock"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::BasicBlock"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %335, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %336, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.1000", %"class.std::__1::deque.1000"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::BasicBlock"*** null, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1006"** %342 to %"class.std::__1::__compressed_pair.1003"**
  store %"class.std::__1::__compressed_pair.1003"* %346, %"class.std::__1::__compressed_pair.1003"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"class.spvtools::opt::BasicBlock"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %171
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %345
  store %"class.spvtools::opt::BasicBlock"*** %357, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %356, i64 %370
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"class.spvtools::opt::BasicBlock"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %395 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::BasicBlock"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::BasicBlock"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::BasicBlock"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::BasicBlock"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %406, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %408, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::BasicBlock"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::BasicBlock"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::BasicBlock"***
  %442 = icmp eq %"class.spvtools::opt::BasicBlock"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 %448
  store %"class.spvtools::opt::BasicBlock"*** %449, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::BasicBlock"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1171"* nonnull %4, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::BasicBlock"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.1002"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::BasicBlock"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %26
  store %"class.spvtools::opt::BasicBlock"*** %34, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %35, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::BasicBlock"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1002"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.spvtools::opt::BasicBlock"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::BasicBlock"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::BasicBlock"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::BasicBlock"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !52

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::BasicBlock"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::BasicBlock"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::BasicBlock"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::BasicBlock"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::BasicBlock"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::BasicBlock"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::BasicBlock"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %60 to i64
  %136 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::BasicBlock"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::BasicBlock"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::BasicBlock"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %152, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %153, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.1002"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1002", %"struct.std::__1::__split_buffer.1002"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1002"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !53

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1171"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1171"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !54

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS7_8FunctionEE3$_7S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #1 align 2 {
  %3 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1183"**
  %5 = load %"class.std::__1::__function::__default_alloc_func.1183"*, %"class.std::__1::__function::__default_alloc_func.1183"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1183", %"class.std::__1::__function::__default_alloc_func.1183"* %5, i64 0, i32 0, i32 3
  %7 = bitcast %"class.spvtools::opt::MemPass"** %6 to %"class.spvtools::opt::Pass"**
  %8 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %7, align 8
  %9 = bitcast %"class.spvtools::opt::BasicBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %3, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %8, i64 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 400) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %20, %"class.spvtools::opt::Module"* %18) #13
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 15
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.273"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"class.spvtools::opt::CFG"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %16
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %24) #13
  %28 = bitcast %"class.spvtools::opt::CFG"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %16
  %30 = load i32, i32* %12, align 8
  %31 = or i32 %30, 16
  store i32 %31, i32* %12, align 8
  br label %32

32:                                               ; preds = %29, %2
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 15, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %33, align 8
  %35 = zext i32 %1 to i64
  %36 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %34, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %87, label %39

39:                                               ; preds = %32
  %40 = tail call i64 @llvm.ctpop.i64(i64 %37) #13, !range !3
  %41 = icmp ugt i64 %40, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = add i64 %37, 4294967295
  %44 = and i64 %43, %35
  br label %49

45:                                               ; preds = %39
  %46 = icmp ugt i64 %37, %35
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %35, %37
  br label %49

49:                                               ; preds = %47, %45, %42
  %50 = phi i64 [ %44, %42 ], [ %48, %47 ], [ %35, %45 ]
  %51 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %34, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %50
  %54 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.333"* %54, null
  br i1 %55, label %87, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %54, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.333"* %58, null
  br i1 %59, label %87, label %60

60:                                               ; preds = %56
  %61 = add i64 %37, -1
  br label %62

62:                                               ; preds = %83, %60
  %63 = phi %"struct.std::__1::__hash_node_base.333"* [ %58, %60 ], [ %85, %83 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %63, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base.333"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %35
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  br i1 %41, label %71, label %69

69:                                               ; preds = %68
  %70 = and i64 %66, %61
  br label %75

71:                                               ; preds = %68
  %72 = icmp ult i64 %66, %37
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %66, %37
  br label %75

75:                                               ; preds = %73, %71, %69
  %76 = phi i64 [ %70, %69 ], [ %74, %73 ], [ %66, %71 ]
  %77 = icmp eq i64 %76, %50
  br i1 %77, label %83, label %87

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %63, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.333"* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %1
  br i1 %82, label %88, label %83

83:                                               ; preds = %78, %75
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %63, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.333"* %85, null
  br i1 %86, label %87, label %62

87:                                               ; preds = %83, %75, %56, %49, %32
  tail call void @abort() #14
  unreachable

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %63, i64 3
  %90 = bitcast %"struct.std::__1::__hash_node_base.333"* %89 to %"class.spvtools::opt::BasicBlock"**
  %91 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %90, align 8
  store %"class.spvtools::opt::BasicBlock"* %91, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %92 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1183", %"class.std::__1::__function::__default_alloc_func.1183"* %5, i64 0, i32 0, i32 1
  %93 = load %"class.std::__1::unordered_set.971"*, %"class.std::__1::unordered_set.971"** %92, align 8
  %94 = ptrtoint %"class.spvtools::opt::BasicBlock"* %91 to i64
  %95 = lshr i64 %94, 32
  %96 = shl i64 %94, 3
  %97 = and i64 %96, 4294967288
  %98 = add nuw nsw i64 %97, 8
  %99 = xor i64 %98, %95
  %100 = mul i64 %99, -7070675565921424023
  %101 = lshr i64 %100, 47
  %102 = xor i64 %100, %95
  %103 = xor i64 %102, %101
  %104 = mul i64 %103, -7070675565921424023
  %105 = lshr i64 %104, 47
  %106 = xor i64 %105, %104
  %107 = mul i64 %106, -7070675565921424023
  %108 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %159, label %111

111:                                              ; preds = %88
  %112 = tail call i64 @llvm.ctpop.i64(i64 %109) #13, !range !3
  %113 = icmp ugt i64 %112, 1
  br i1 %113, label %117, label %114

114:                                              ; preds = %111
  %115 = add i64 %109, -1
  %116 = and i64 %107, %115
  br label %121

117:                                              ; preds = %111
  %118 = icmp ult i64 %107, %109
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %107, %109
  br label %121

121:                                              ; preds = %119, %117, %114
  %122 = phi i64 [ %116, %114 ], [ %120, %119 ], [ %107, %117 ]
  %123 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.976"* %126, null
  br i1 %127, label %159, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %126, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.976"* %130, null
  br i1 %131, label %159, label %132

132:                                              ; preds = %128
  %133 = add i64 %109, -1
  br label %134

134:                                              ; preds = %155, %132
  %135 = phi %"struct.std::__1::__hash_node_base.976"* [ %130, %132 ], [ %157, %155 ]
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %135, i64 1
  %137 = bitcast %"struct.std::__1::__hash_node_base.976"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %107, %138
  br i1 %139, label %150, label %140

140:                                              ; preds = %134
  br i1 %113, label %143, label %141

141:                                              ; preds = %140
  %142 = and i64 %138, %133
  br label %147

143:                                              ; preds = %140
  %144 = icmp ult i64 %138, %109
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %138, %109
  br label %147

147:                                              ; preds = %145, %143, %141
  %148 = phi i64 [ %142, %141 ], [ %146, %145 ], [ %138, %143 ]
  %149 = icmp eq i64 %148, %122
  br i1 %149, label %155, label %159

150:                                              ; preds = %134
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %135, i64 2
  %152 = bitcast %"struct.std::__1::__hash_node_base.976"* %151 to %"class.spvtools::opt::BasicBlock"**
  %153 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %152, align 8
  %154 = icmp eq %"class.spvtools::opt::BasicBlock"* %153, %91
  br i1 %154, label %213, label %155

155:                                              ; preds = %150, %147
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %135, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.976"* %157, null
  br i1 %158, label %159, label %134

159:                                              ; preds = %155, %147, %128, %121, %88
  %160 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1183", %"class.std::__1::__function::__default_alloc_func.1183"* %5, i64 0, i32 0, i32 0
  %161 = load %"class.std::__1::unordered_set.971"*, %"class.std::__1::unordered_set.971"** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %161, i64 0, i32 0
  %163 = call { %"struct.std::__1::__hash_node_base.976"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.972"* %162, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3) #13
  %164 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1183", %"class.std::__1::__function::__default_alloc_func.1183"* %5, i64 0, i32 0, i32 2
  %165 = load %"class.std::__1::queue.999"*, %"class.std::__1::queue.999"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %165, i64 0, i32 0, i32 0, i32 0, i32 2
  %167 = bitcast %"class.spvtools::opt::BasicBlock"**** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %165, i64 0, i32 0, i32 0, i32 0, i32 1
  %170 = bitcast %"class.spvtools::opt::BasicBlock"**** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %168, %171
  %173 = icmp eq i64 %172, 0
  %174 = shl i64 %172, 6
  %175 = add i64 %174, -1
  %176 = select i1 %173, i64 0, i64 %175
  %177 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %165, i64 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %165, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, %178
  %182 = icmp eq i64 %176, %181
  %183 = inttoptr i64 %171 to %"class.spvtools::opt::BasicBlock"***
  %184 = inttoptr i64 %168 to %"class.spvtools::opt::BasicBlock"***
  br i1 %182, label %185, label %192

185:                                              ; preds = %159
  %186 = getelementptr inbounds %"class.std::__1::queue.999", %"class.std::__1::queue.999"* %165, i64 0, i32 0
  call void @_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1000"* %186) #13
  %187 = load i64, i64* %179, align 8
  %188 = load i64, i64* %177, align 8
  %189 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %169, align 8
  %190 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %166, align 8
  %191 = add i64 %188, %187
  br label %192

192:                                              ; preds = %185, %159
  %193 = phi i64 [ %191, %185 ], [ %181, %159 ]
  %194 = phi %"class.spvtools::opt::BasicBlock"*** [ %190, %185 ], [ %184, %159 ]
  %195 = phi %"class.spvtools::opt::BasicBlock"*** [ %189, %185 ], [ %183, %159 ]
  %196 = icmp eq %"class.spvtools::opt::BasicBlock"*** %194, %195
  br i1 %196, label %204, label %197

197:                                              ; preds = %192
  %198 = lshr i64 %193, 9
  %199 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %195, i64 %198
  %200 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %199, align 8
  %201 = and i64 %193, 511
  %202 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %200, i64 %201
  %203 = bitcast %"class.spvtools::opt::BasicBlock"** %202 to i64*
  br label %204

204:                                              ; preds = %197, %192
  %205 = phi i64* [ %203, %197 ], [ null, %192 ]
  %206 = bitcast %"class.spvtools::opt::BasicBlock"** %3 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %205, align 8
  %208 = load i64, i64* %179, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %179, align 8
  %210 = load %"class.std::__1::unordered_set.971"*, %"class.std::__1::unordered_set.971"** %92, align 8
  %211 = getelementptr inbounds %"class.std::__1::unordered_set.971", %"class.std::__1::unordered_set.971"* %210, i64 0, i32 0
  %212 = call { %"struct.std::__1::__hash_node_base.976"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.972"* %211, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3) #13
  br label %213

213:                                              ; preds = %150, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.976"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.972"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.976"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.976"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.976"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.976"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.976"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !55
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !55
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !55
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !55
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.976"**
  store %"struct.std::__1::__hash_node_base.976"* null, %"struct.std::__1::__hash_node_base.976"** %75, align 8, !noalias !55
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.972"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.976"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.972", %"class.std::__1::__hash_table.972"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.976"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.976"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.976"* %118, %"struct.std::__1::__hash_node_base.976"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.976"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976", %"struct.std::__1::__hash_node_base.976"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.976"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.976"**, %"struct.std::__1::__hash_node_base.976"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.976"*, %"struct.std::__1::__hash_node_base.976"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.976"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.976"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.976"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.976"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.976"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.976"*, i8 } undef, %"struct.std::__1::__hash_node_base.976"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.976"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.976"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEPvPKv"(i8* nocapture readonly) #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !58
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEEvPv"(i8*) #1 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_7MemPass23RemoveUnreachableBlocksEPNS3_8FunctionEE3$_8S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #1 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::MemPass"**
  %5 = load %"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::MemPass"** %4, align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_set.971"**
  %7 = load %"class.std::__1::unordered_set.971"*, %"class.std::__1::unordered_set.971"** %6, align 8
  tail call void @_ZN8spvtools3opt7MemPass17RemovePhiOperandsEPNS0_11InstructionERKNSt3__113unordered_setIPNS0_10BasicBlockENS4_4hashIS7_EENS4_8equal_toIS7_EENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MemPass"* %5, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::unordered_set.971"* dereferenceable(40) %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !15}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!21 = distinct !{!21, !15}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!25 = distinct !{!25, !15}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!29 = distinct !{!29, !15}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!33 = distinct !{!33, !15}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !15}
!38 = distinct !{!38, !15}
!39 = distinct !{!39, !15}
!40 = distinct !{!40, !15}
!41 = distinct !{!41, !15}
!42 = distinct !{!42, !15}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!49 = distinct !{!49, !15}
!50 = distinct !{!50, !15}
!51 = distinct !{!51, !15}
!52 = distinct !{!52, !15}
!53 = distinct !{!53, !15}
!54 = distinct !{!54, !15}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!61 = distinct !{!61, !62, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt7MemPass23RemoveUnreachableBlocksEPNS5_8FunctionEE3$_7FvjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
