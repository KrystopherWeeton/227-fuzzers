; ModuleID = '../../third_party/icu/source/common/appendable.cpp'
source_filename = "../../third_party/icu/source/common/appendable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::Appendable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }

@_ZTVN6icu_6910AppendableE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6910AppendableE to i8*), i8* bitcast (void (%"class.icu_69::Appendable"*)* @_ZN6icu_6910AppendableD2Ev to i8*), i8* bitcast (void (%"class.icu_69::Appendable"*)* @_ZN6icu_6910AppendableD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8 (%"class.icu_69::Appendable"*, i32)* @_ZN6icu_6910Appendable15appendCodePointEi to i8*), i8* bitcast (i8 (%"class.icu_69::Appendable"*, i16*, i32)* @_ZN6icu_6910Appendable12appendStringEPKDsi to i8*), i8* bitcast (i8 (%"class.icu_69::Appendable"*, i32)* @_ZN6icu_6910Appendable21reserveAppendCapacityEi to i8*), i8* bitcast (i16* (%"class.icu_69::Appendable"*, i32, i32, i16*, i32, i32*)* @_ZN6icu_6910Appendable15getAppendBufferEiiPDsiPi to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6910AppendableE = hidden constant [22 x i8] c"N6icu_6910AppendableE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6910AppendableE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTSN6icu_6910AppendableE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8

@_ZN6icu_6910AppendableD1Ev = hidden unnamed_addr alias void (%"class.icu_69::Appendable"*), void (%"class.icu_69::Appendable"*)* @_ZN6icu_6910AppendableD2Ev

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6910AppendableD2Ev(%"class.icu_69::Appendable"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::Appendable", %"class.icu_69::Appendable"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #7
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6910AppendableD0Ev(%"class.icu_69::Appendable"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6910Appendable15appendCodePointEi(%"class.icu_69::Appendable"*, i32) unnamed_addr #1 align 2 {
  %3 = icmp slt i32 %1, 65536
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i16
  %6 = bitcast %"class.icu_69::Appendable"* %0 to i8 (%"class.icu_69::Appendable"*, i16)***
  %7 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %6, align 8
  %8 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %7, i64 3
  %9 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %8, align 8
  %10 = tail call signext i8 %9(%"class.icu_69::Appendable"* %0, i16 zeroext %5) #7
  br label %31

11:                                               ; preds = %2
  %12 = lshr i32 %1, 10
  %13 = trunc i32 %12 to i16
  %14 = add i16 %13, -10304
  %15 = bitcast %"class.icu_69::Appendable"* %0 to i8 (%"class.icu_69::Appendable"*, i16)***
  %16 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %15, align 8
  %17 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %16, i64 3
  %18 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %17, align 8
  %19 = tail call signext i8 %18(%"class.icu_69::Appendable"* %0, i16 zeroext %14) #7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %11
  %22 = trunc i32 %1 to i16
  %23 = and i16 %22, 1023
  %24 = or i16 %23, -9216
  %25 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %15, align 8
  %26 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %25, i64 3
  %27 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %26, align 8
  %28 = tail call signext i8 %27(%"class.icu_69::Appendable"* %0, i16 zeroext %24) #7
  %29 = icmp ne i8 %28, 0
  %30 = zext i1 %29 to i8
  br label %31

31:                                               ; preds = %21, %11, %4
  %32 = phi i8 [ %10, %4 ], [ 0, %11 ], [ %30, %21 ]
  ret i8 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6910Appendable12appendStringEPKDsi(%"class.icu_69::Appendable"*, i16* readonly, i32) unnamed_addr #1 align 2 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %3
  %6 = bitcast %"class.icu_69::Appendable"* %0 to i8 (%"class.icu_69::Appendable"*, i16)***
  br label %7

7:                                                ; preds = %5, %11
  %8 = phi i16* [ %12, %11 ], [ %1, %5 ]
  %9 = load i16, i16* %8, align 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds i16, i16* %8, i64 1
  %13 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %6, align 8
  %14 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %13, i64 3
  %15 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %14, align 8
  %16 = tail call signext i8 %15(%"class.icu_69::Appendable"* %0, i16 zeroext %9) #7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %35, label %7

18:                                               ; preds = %3
  %19 = icmp eq i32 %2, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds i16, i16* %1, i64 %21
  %23 = bitcast %"class.icu_69::Appendable"* %0 to i8 (%"class.icu_69::Appendable"*, i16)***
  br label %24

24:                                               ; preds = %33, %20
  %25 = phi i16* [ %1, %20 ], [ %26, %33 ]
  %26 = getelementptr inbounds i16, i16* %25, i64 1
  %27 = load i16, i16* %25, align 2
  %28 = load i8 (%"class.icu_69::Appendable"*, i16)**, i8 (%"class.icu_69::Appendable"*, i16)*** %23, align 8
  %29 = getelementptr inbounds i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %28, i64 3
  %30 = load i8 (%"class.icu_69::Appendable"*, i16)*, i8 (%"class.icu_69::Appendable"*, i16)** %29, align 8
  %31 = tail call signext i8 %30(%"class.icu_69::Appendable"* %0, i16 zeroext %27) #7
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %24
  %34 = icmp ult i16* %26, %22
  br i1 %34, label %24, label %35

35:                                               ; preds = %24, %33, %11, %7, %18
  %36 = phi i8 [ 1, %18 ], [ 0, %11 ], [ 1, %7 ], [ 0, %24 ], [ 1, %33 ]
  ret i8 %36
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN6icu_6910Appendable21reserveAppendCapacityEi(%"class.icu_69::Appendable"* nocapture readnone, i32) unnamed_addr #4 align 2 {
  ret i8 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i16* @_ZN6icu_6910Appendable15getAppendBufferEiiPDsiPi(%"class.icu_69::Appendable"* nocapture readnone, i32, i32, i16* readnone, i32, i32* nocapture) unnamed_addr #5 align 2 {
  %7 = icmp slt i32 %1, 1
  %8 = icmp slt i32 %4, %1
  %9 = or i1 %7, %8
  %10 = select i1 %9, i32 0, i32 %4
  %11 = select i1 %9, i16* null, i16* %3
  store i32 %10, i32* %5, align 4
  ret i16* %11
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
