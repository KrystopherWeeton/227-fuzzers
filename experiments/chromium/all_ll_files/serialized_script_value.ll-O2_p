; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/serialization/serialized_script_value.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/serialization/serialized_script_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SerializedScriptValueFactory" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.240" }
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.20", i32, [4 x i8], %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.154", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.195", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.134", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.54" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { i64 }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { float }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.137", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.146" }
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163" }
%"class.WTF::VectorBufferBase.163" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.264" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.194 }
%class.scoped_refptr.194 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i64, %"class.WTF::Vector", %"class.WTF::Vector.2", %"class.WTF::Vector.207", %"class.WTF::Vector.225", %class.scoped_refptr.236, %"class.WTF::HashMap", %"class.WTF::Vector.249", %"class.WTF::Vector", %"class.WTF::Vector.254", %"class.WTF::HashMap.259", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [8 x i8] }
%"class.WTF::VectorBufferBase.4" = type { %class.scoped_refptr.5*, i32, i32 }
%class.scoped_refptr.5 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.6", i8, %class.scoped_refptr.8, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.199" }
%"class.WTF::ThreadSafeRefCounted.6" = type { %"class.base::RefCountedThreadSafe.7" }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.8 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.9", %"class.WTF::Vector.14" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { i8*, i32, i32 }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.std::__1::unique_ptr.17"*, i32, i32 }
%"class.std::__1::unique_ptr.17" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.210 }
%class.scoped_refptr.210 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.228", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.228" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.236 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.237", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.246 }
%"class.WTF::RefCounted.237" = type { %"class.base::RefCounted.238" }
%"class.base::RefCounted.238" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.245 }
%union.anon.245 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.246 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %class.scoped_refptr.844 }
%class.scoped_refptr.844 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.845", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.847", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.845" = type { %"class.base::RefCountedThreadSafe.846" }
%"class.base::RefCountedThreadSafe.846" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.847" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.442", i32 }
%"class.mojo::ScopedHandleBase.442" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251" }
%"class.WTF::VectorBufferBase.251" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.263" = type { i8**, %"class.std::__1::unique_ptr.834" }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"struct.blink::SerializedScriptValue::SerializeOptions" = type { %"class.blink::Transferables"*, %"class.WTF::Vector.690"*, i32, i32 }
%"class.blink::Transferables" = type { %"class.blink::HeapVector", %"class.blink::HeapVector.275", %"class.blink::HeapVector.284", %"class.blink::HeapVector.617", %"class.blink::HeapVector.625", %"class.blink::HeapVector.633", %"class.blink::HeapVector.650", %"class.blink::HeapVector.673", %"class.blink::HeapHashMap" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.269" }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::HeapVector.275" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"class.blink::Member.281"*, i32, i32 }
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::ImageBitmap"* }
%"class.blink::ImageBitmap" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.5, i8, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::HeapVector.284" = type { %"class.WTF::Vector.287" }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"class.blink::Member.290"*, i32, i32 }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ImageBitmapSource", %"class.blink::CanvasRenderingContextHost", %"class.blink::CanvasResourceDispatcherClient", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], i32, %"class.blink::Member.420", %"class.blink::WeakMember", i32, %"class.blink::IntSize", i8, i8, i8, i8, %"class.std::__1::unique_ptr.423", %struct.SkIRect, i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.306" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.294" }
%"class.blink::HeapVector.294" = type { %"class.WTF::Vector.297" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299", [32 x i8] }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair.300"*, i32, i32 }
%"struct.std::__1::pair.300" = type { %"class.WTF::AtomicString", %"class.blink::Member.301" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::HeapVector.303"* }
%"class.blink::HeapVector.303" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.WTF::Vector.309"* }
%"class.WTF::Vector.309" = type opaque
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.313", i32 }>
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.324", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.360", i8, i32, i32, i32, %"class.WTF::Vector.384", i8, i8, i64, i64, %"class.base::RepeatingCallback.395", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.416" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.317", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.317" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.318" }
%"struct.std::__1::atomic.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__atomic_base.320" }
%"struct.std::__1::__atomic_base.320" = type { %"struct.std::__1::__cxx_atomic_impl.321" }
%"struct.std::__1::__cxx_atomic_impl.321" = type { %"struct.std::__1::__cxx_atomic_base_impl.322" }
%"struct.std::__1::__cxx_atomic_base_impl.322" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.323 }
%class.scoped_refptr.323 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.324" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.351", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.334, [384 x i64], %class.sk_sp.335, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.336", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.342" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.334 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.335 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.348, %class.SkPixmap, %class.sk_sp.350 }
%class.sk_sp.348 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.349, i32, i32 }
%class.sk_sp.349 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.318" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.350 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.363, %"class.std::__1::unique_ptr.364" }
%class.scoped_refptr.363 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.367", %struct.SkRect }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.379 }
%class.scoped_refptr.379 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.380", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.380" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %class.scoped_refptr.387*, i32, i32 }
%class.scoped_refptr.387 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.388", %"class.base::PlatformThreadRef", %class.scoped_refptr.390, %"struct.gpu::SyncToken", %"class.base::WeakPtr.392", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted.388" = type { %"class.base::RefCountedThreadSafe.389" }
%"class.base::RefCountedThreadSafe.389" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%class.scoped_refptr.390 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.391" }>
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.392" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.395" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.396" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.410" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { %"struct.std::__1::pair.412"*, %"struct.std::__1::pair.412"*, %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::pair.412" = type { i32, i32 }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414", %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::pair.412"* }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.349, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.416" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.729", i32, i8, [3 x i8], %"class.blink::HeapVector.731", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.750", %"class.blink::Member.756", %"class.blink::Member.758", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.692" }
%"class.blink::HeapHashMap.692" = type { %"class.WTF::HashMap.695" }
%"class.WTF::HashMap.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ %"struct.WTF::KeyValuePair.698"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.698" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.704" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"class.blink::WeakMember.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.703" = type opaque
%"class.blink::Supplementable.704" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.705" }
%"class.blink::HeapHashMap.705" = type { %"class.WTF::HashMap.708" }
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.711" = type { i8*, %"class.blink::Member.840" }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.842" }
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.236, %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.718", %"class.blink::Member.724", i32, [4 x i8], %"class.WTF::HashSet.725", i32, i32 }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.422" }
%"class.WTF::HashSet.725" = type { %"class.WTF::HashTable.726" }
%"class.WTF::HashTable.726" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.731" = type { %"class.WTF::Vector.734" }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"class.blink::Member.737"*, i32, i32 }
%"class.blink::Member.737" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.743", i32, i32 }
%"class.blink::HeapHashMap.743" = type { %"class.WTF::HashMap.746" }
%"class.WTF::HashMap.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"struct.WTF::KeyValuePair.749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.749" = type opaque
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote", %"class.mojo::Remote.590", %"class.mojo::Receiver", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap.599", %"class.viz::FrameTokenGenerator", %class.scoped_refptr.387, %"class.util::IdType.604", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.606", %"class.base::WeakPtrFactory.612" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.584" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.426, %"class.std::__1::unique_ptr.535", %"class.mojo::ScopedHandleBase.442", [4 x i8], %class.scoped_refptr.428, i32 }>
%class.scoped_refptr.426 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.428, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.442", [4 x i8], %"class.absl::optional.501", %"class.absl::optional.506", %"class.absl::optional.459", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.526", i8, [7 x i8], %class.scoped_refptr.428, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.427" }>
%"class.base::RefCountedThreadSafe.427" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.441" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.441" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.442", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.428, %"class.std::__1::unique_ptr.443", %"class.absl::optional.453", %"struct.std::__1::atomic.195", i8, i8, i8, i8, i32, i32, %"class.absl::optional.459", %"class.std::__1::unique_ptr.464", i8, i64, %class.scoped_refptr.497, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.499", %"class.base::WeakPtrFactory.500" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.428, i8, %"class.mojo::ScopedHandleBase.446", %class.scoped_refptr.447, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.448", i8*, %"class.base::WeakPtrFactory.449" }
%"class.mojo::ScopedHandleBase.446" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.447 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.448" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.449" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.453" = type { %"class.absl::optional_internal::optional_data.454" }
%"class.absl::optional_internal::optional_data.454" = type { %"class.absl::optional_internal::optional_data_base.455" }
%"class.absl::optional_internal::optional_data_base.455" = type { %"class.absl::optional_internal::optional_data_dtor_base.456" }
%"class.absl::optional_internal::optional_data_dtor_base.456" = type { i8, %union.anon.457 }
%union.anon.457 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.458", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.458" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.467", i8, i64, %class.scoped_refptr.468, %class.scoped_refptr.493 }
%"class.base::RepeatingCallback.467" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.468 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.469", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.471", %"class.std::__1::map.482", i8, [7 x i8] }>
%"class.base::RefCounted.469" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.471" = type { %"class.std::__1::__tree.472" }
%"class.std::__1::__tree.472" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.std::__1::map.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%class.scoped_refptr.493 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.497 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.691", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.428, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.240", [4 x i8] }>
%"class.base::RefCountedThreadSafe.691" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.499" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.500" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.501" = type { %"class.absl::optional_internal::optional_data.502" }
%"class.absl::optional_internal::optional_data.502" = type { %"class.absl::optional_internal::optional_data_base.503" }
%"class.absl::optional_internal::optional_data_base.503" = type { %"class.absl::optional_internal::optional_data_dtor_base.504" }
%"class.absl::optional_internal::optional_data_dtor_base.504" = type { i8, %union.anon.505 }
%union.anon.505 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.506" = type { %"class.absl::optional_internal::optional_data.507" }
%"class.absl::optional_internal::optional_data.507" = type { %"class.absl::optional_internal::optional_data_base.508" }
%"class.absl::optional_internal::optional_data_base.508" = type { %"class.absl::optional_internal::optional_data_dtor_base.509" }
%"class.absl::optional_internal::optional_data_dtor_base.509" = type { i8, [7 x i8], %union.anon.510 }
%union.anon.510 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.459" = type { %"class.absl::optional_internal::optional_data.460" }
%"class.absl::optional_internal::optional_data.460" = type { %"class.absl::optional_internal::optional_data_base.461" }
%"class.absl::optional_internal::optional_data_base.461" = type { %"class.absl::optional_internal::optional_data_dtor_base.462" }
%"class.absl::optional_internal::optional_data_dtor_base.462" = type { i8, %union.anon.463 }
%union.anon.463 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.511 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.511 = type { %"class.std::__1::map.514" }
%"class.std::__1::map.514" = type { %"class.std::__1::__tree.515" }
%"class.std::__1::__tree.515" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.525"*, i64 }
%"class.std::__1::unique_ptr.525" = type opaque
%"class.std::__1::map.526" = type { %"class.std::__1::__tree.527" }
%"class.std::__1::__tree.527" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.538", %"class.absl::optional.539", %"class.absl::optional.544", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.551", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.559", %"class.std::__1::map.570", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.579", i8, %class.scoped_refptr.428, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.580" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.538" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.539" = type { %"class.absl::optional_internal::optional_data.540" }
%"class.absl::optional_internal::optional_data.540" = type { %"class.absl::optional_internal::optional_data_base.541" }
%"class.absl::optional_internal::optional_data_base.541" = type { %"class.absl::optional_internal::optional_data_dtor_base.542" }
%"class.absl::optional_internal::optional_data_dtor_base.542" = type { i8, %union.anon.543 }
%union.anon.543 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.544" = type { %"class.absl::optional_internal::optional_data.545" }
%"class.absl::optional_internal::optional_data.545" = type { %"class.absl::optional_internal::optional_data_base.546" }
%"class.absl::optional_internal::optional_data_base.546" = type { %"class.absl::optional_internal::optional_data_dtor_base.547" }
%"class.absl::optional_internal::optional_data_dtor_base.547" = type { i8, %union.anon.548 }
%union.anon.548 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.428, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.549" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.549" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.554", %class.scoped_refptr.555 }
%"class.base::RepeatingCallback.554" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.555 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.427", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.559" = type { %"class.std::__1::__tree.560" }
%"class.std::__1::__tree.560" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.std::__1::map.570" = type { %"class.std::__1::__tree.571" }
%"class.std::__1::__tree.571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"class.base::OnceCallback.579" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.580" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.428 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.590" = type { %"class.mojo::internal::InterfacePtrState.591" }
%"class.mojo::internal::InterfacePtrState.591" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.592" }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.426, %"class.std::__1::unique_ptr.535", %"class.base::WeakPtrFactory.598" }
%"class.base::WeakPtrFactory.598" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.util::IdType.604" = type { %"class.base::StrongAlias.605" }
%"class.base::StrongAlias.605" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.612" = type { %"class.base::internal::WeakPtrFactoryBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.blink::HeapVector.617" = type { %"class.WTF::Vector.620" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::Member.623"*, i32, i32 }
%"class.blink::Member.623" = type opaque
%"class.blink::HeapVector.625" = type { %"class.WTF::Vector.628" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"class.blink::Member.631"*, i32, i32 }
%"class.blink::Member.631" = type opaque
%"class.blink::HeapVector.633" = type { %"class.WTF::Vector.636" }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"class.blink::Member.639"*, i32, i32 }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type { %"class.blink::ScriptWrappable", i8, %"class.base::StrongAlias.641", i8, %"class.blink::Member.642", %"class.blink::Member.644", %"class.blink::TraceWrapperV8Reference.646", %"class.std::__1::unique_ptr.211" }
%"class.base::StrongAlias.641" = type { i8 }
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::ReadableStreamController"* }
%"class.blink::ReadableStreamController" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::ReadableStreamGenericReader"* }
%"class.blink::ReadableStreamGenericReader" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.658", %"class.blink::Member.639" }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::StreamPromiseResolver"* }
%"class.blink::StreamPromiseResolver" = type opaque
%"class.blink::TraceWrapperV8Reference.646" = type { %"class.v8::TracedReference.647" }
%"class.v8::TracedReference.647" = type { %"class.v8::BasicTracedReference.648" }
%"class.v8::BasicTracedReference.648" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.650" = type { %"class.WTF::Vector.653" }
%"class.WTF::Vector.653" = type { %"class.WTF::VectorBuffer.654" }
%"class.WTF::VectorBuffer.654" = type { %"class.WTF::VectorBufferBase.655" }
%"class.WTF::VectorBufferBase.655" = type { %"class.blink::Member.656"*, i32, i32 }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::WritableStream"* }
%"class.blink::WritableStream" = type { %"class.blink::ScriptWrappable", i8, i8, %"class.blink::Member.658", %"class.blink::Member.658", %"class.blink::Member.658", %"class.blink::Member.660", %"class.blink::TraceWrapperV8Reference.646", %"class.blink::Member.662", %"class.blink::Member.664", %"class.blink::HeapDeque", %"class.std::__1::unique_ptr.217" }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::WritableStream::PendingAbortRequest"* }
%"class.blink::WritableStream::PendingAbortRequest" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::WritableStreamDefaultController"* }
%"class.blink::WritableStreamDefaultController" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::WritableStreamDefaultWriter"* }
%"class.blink::WritableStreamDefaultWriter" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.668" }
%"class.WTF::Deque.668" = type { %"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::StreamPromiseResolver>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::Member.658"*, i32, i32 }
%"class.blink::HeapVector.673" = type { %"class.WTF::Vector.676" }
%"class.WTF::Vector.676" = type { %"class.WTF::VectorBuffer.677" }
%"class.WTF::VectorBuffer.677" = type { %"class.WTF::VectorBufferBase.678" }
%"class.WTF::VectorBufferBase.678" = type { %"class.blink::Member.679"*, i32, i32 }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::TransformStream"* }
%"class.blink::TransformStream" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.658", %"class.blink::Member.639", %"class.blink::Member.681", %"class.blink::Member.656" }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::TransformStreamDefaultController"* }
%"class.blink::TransformStreamDefaultController" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.686" }
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type opaque
%"class.WTF::Vector.690" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.646" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::SharedBuffer::Iterator" = type { i32, %"class.base::span", %"class.WTF::SharedBuffer"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.761", i8* }
%"class.WTF::StringAppend.761" = type { i8*, %"class.WTF::String" }
%"class.blink::HeapHashSet.762" = type { %"class.WTF::HashSet.765" }
%"class.WTF::HashSet.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"class.blink::Member.281"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.865" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HeapHashSet.768" = type { %"class.WTF::HashSet.771" }
%"class.WTF::HashSet.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ %"class.blink::Member.290"*, i32, i32, i32, [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.777, %"class.blink::Member.793", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.777 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.778", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.778" = type { %"class.base::RefCounted.779" }
%"class.base::RefCounted.779" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.780" }
%"class.blink::PersistentBase.780" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.792" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.783" }
%"class.blink::HeapHashMap.783" = type { %"class.WTF::HashMap.786" }
%"class.WTF::HashMap.786" = type { %"class.WTF::HashTable.787" }
%"class.WTF::HashTable.787" = type <{ %"struct.WTF::KeyValuePair.789"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.789" = type { %"class.blink::WeakMember.790", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.792" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.795" }
%"class.blink::Persistent.795" = type { %"class.blink::PersistentBase.796" }
%"class.blink::PersistentBase.796" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.792" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.797" }
%"class.base::StrongAlias.797" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.800", i8, i8, %class.scoped_refptr.390, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.798" }
%"class.blink::WeakMember.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase.442", %"class.base::UnguessableToken", i64 }
%"class.blink::MessagePortDescriptorPair" = type { %"class.blink::MessagePortDescriptor", %"class.blink::MessagePortDescriptor" }
%"class.blink::HeapHashSet.815" = type { %"class.WTF::HashSet.818" }
%"class.WTF::HashSet.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::HeapVector.806" = type { %"class.WTF::Vector.809" }
%"class.WTF::Vector.809" = type { %"class.WTF::VectorBuffer.810" }
%"class.WTF::VectorBuffer.810" = type { %"class.WTF::VectorBufferBase.811" }
%"class.WTF::VectorBufferBase.811" = type { %"class.blink::Member.812"*, i32, i32 }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::DOMSharedArrayBuffer"* }
%"class.blink::DOMSharedArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"struct.blink::SerializedScriptValue::DeserializeOptions" = type { %"class.blink::HeapVector.617"*, %"class.WTF::Vector.690"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr, %"class.blink::HeapVector", %"class.blink::HeapVector.275" }
%class.scoped_refptr = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::HeapVector.824" = type { %"class.WTF::Vector.827" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.828" }
%"class.WTF::VectorBuffer.828" = type { %"class.WTF::VectorBufferBase.829" }
%"class.WTF::VectorBufferBase.829" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.646", %class.scoped_refptr.830 }
%class.scoped_refptr.830 = type { %"class.blink::DOMWrapperWorld"* }
%"class.WTF::StringAppend.832" = type { %"class.WTF::StringAppend.833", i8* }
%"class.WTF::StringAppend.833" = type { %"class.WTF::StringAppend", i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.WTF::StringTypeAdapter.866" = type { %"class.WTF::StringTypeAdapter.867" }
%"class.WTF::StringTypeAdapter.867" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.896" = type { i8 }
%"class.blink::HeapHashTableBacking.915" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEjj = comdat any

$_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF12SharedBuffer8IteratoreqERKS1_ = comdat any

$_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_ = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink19ArrayBufferContentsENS_18PartitionAllocatorEE4SwapEPS2_S5_S5_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS6_NS_16VectorBufferBaseIS4_S5_E11OffsetRangeESA_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink17StaticBitmapImageEEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21SerializedScriptValue6StreamEEEmm = comdat any

$_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19ArrayBufferContentsEEEmm = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_20DOMSharedArrayBufferERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_29UnpackedSerializedScriptValueEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_29UnpackedSerializedScriptValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_29UnpackedSerializedScriptValueEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv = comdat any

$_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_18DOMArrayBufferBaseEEEEET_S6_S6_S6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [29 x i8] c"SerializedScriptValue buffer\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"ImageBitmap at index \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c" is already detached.\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"OffscreenCanvas at index \00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c" has an associated context.\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Value at index \00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c" is an untransferable \00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"'undefined'\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"'null'\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c" value.\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c" does not have a transferable type.\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"ArrayBuffer at index \00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"SharedArrayBuffer at index \00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c" is not transferable.\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c" could not be transferred.\00", align 1
@_ZN5blink28SerializedScriptValueFactory9instance_E = external local_unnamed_addr global %"class.blink::SerializedScriptValueFactory"*, align 8
@_ZTVN5blink28SerializedScriptValueFactoryE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.15 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.19 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.23 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.25 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.30 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.31 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.33 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.34 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_11ImageBitmapEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [351 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::ImageBitmap>, blink::Member<blink::ImageBitmap>, WTF::IdentityExtractor, WTF::MemberHash<blink::ImageBitmap>, WTF::HashTraits<blink::Member<blink::ImageBitmap> >, WTF::HashTraits<blink::Member<blink::ImageBitmap> >, blink::HeapAllocator> >]\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.37 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink17StaticBitmapImageEEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::StaticBitmapImage>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15OffscreenCanvasEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [371 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::OffscreenCanvas>, blink::Member<blink::OffscreenCanvas>, WTF::IdentityExtractor, WTF::MemberHash<blink::OffscreenCanvas>, WTF::HashTraits<blink::Member<blink::OffscreenCanvas> >, WTF::HashTraits<blink::Member<blink::OffscreenCanvas> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SerializedScriptValue6StreamEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SerializedScriptValue::Stream]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ArrayBufferContentsEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ArrayBufferContents]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_18DOMArrayBufferBaseEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [386 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::DOMArrayBufferBase>, blink::Member<blink::DOMArrayBufferBase>, WTF::IdentityExtractor, WTF::MemberHash<blink::DOMArrayBufferBase>, WTF::HashTraits<blink::Member<blink::DOMArrayBufferBase> >, WTF::HashTraits<blink::Member<blink::DOMArrayBufferBase> >, blink::HeapAllocator> >]\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29UnpackedSerializedScriptValueEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::UnpackedSerializedScriptValue]\00", align 1
@_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_29UnpackedSerializedScriptValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_29UnpackedSerializedScriptValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.40 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.41 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18DOMArrayBufferBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::DOMArrayBufferBase>, WTF::VectorTraits<blink::Member<blink::DOMArrayBufferBase> > >]\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1

@_ZN5blink21SerializedScriptValueC1Ev = hidden unnamed_addr alias void (%"class.blink::SerializedScriptValue"*), void (%"class.blink::SerializedScriptValue"*)* @_ZN5blink21SerializedScriptValueC2Ev
@_ZN5blink21SerializedScriptValueC1ENSt3__110unique_ptrIA_hNS0_13BufferDeleterEEEm = hidden unnamed_addr alias void (%"class.blink::SerializedScriptValue"*, i8*, i64), void (%"class.blink::SerializedScriptValue"*, i8*, i64)* @_ZN5blink21SerializedScriptValueC2ENSt3__110unique_ptrIA_hNS0_13BufferDeleterEEEm
@_ZN5blink21SerializedScriptValueD1Ev = hidden unnamed_addr alias void (%"class.blink::SerializedScriptValue"*), void (%"class.blink::SerializedScriptValue"*)* @_ZN5blink21SerializedScriptValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = load %"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E, align 8
  %6 = icmp eq %"class.blink::SerializedScriptValueFactory"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 8) #14
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink28SerializedScriptValueFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i8* %8, i8** bitcast (%"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E to i8**), align 8
  %10 = bitcast i8* %8 to %"class.blink::SerializedScriptValueFactory"*
  br label %11

11:                                               ; preds = %4, %7
  %12 = phi %"class.blink::SerializedScriptValueFactory"* [ %5, %4 ], [ %10, %7 ]
  %13 = bitcast %"class.blink::SerializedScriptValueFactory"* %12 to %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)***
  %14 = load %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)**, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)** %14, i64 1
  %16 = load %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)** %15, align 8
  %17 = tail call %"class.blink::SerializedScriptValue"* %16(%"class.blink::SerializedScriptValueFactory"* %12, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"struct.blink::SerializedScriptValue::SerializeOptions"* dereferenceable(24) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  ret %"class.blink::SerializedScriptValue"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue29SerializeAndSwallowExceptionsEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = alloca %"struct.blink::SerializedScriptValue::SerializeOptions", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #14
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %4, i64 0, i32 2
  %15 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false)
  store i32 1, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %4, i64 0, i32 3
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %18 = load %"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E, align 8
  %19 = icmp eq %"class.blink::SerializedScriptValueFactory"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = tail call noalias i8* @malloc(i64 8) #14
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink28SerializedScriptValueFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store i8* %21, i8** bitcast (%"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E to i8**), align 8
  %23 = bitcast i8* %21 to %"class.blink::SerializedScriptValueFactory"*
  br label %24

24:                                               ; preds = %2, %20
  %25 = phi %"class.blink::SerializedScriptValueFactory"* [ %18, %2 ], [ %23, %20 ]
  %26 = bitcast %"class.blink::SerializedScriptValueFactory"* %25 to %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)***
  %27 = load %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)**, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)** %27, i64 1
  %29 = load %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)*, %"class.blink::SerializedScriptValue"* (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"*, %"class.blink::ExceptionState"*)** %28, align 8
  %30 = call %"class.blink::SerializedScriptValue"* %29(%"class.blink::SerializedScriptValueFactory"* %25, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"struct.blink::SerializedScriptValue::SerializeOptions"* nonnull dereferenceable(24) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %17) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %24
  %35 = ptrtoint %"class.blink::SerializedScriptValue"* %30 to i64
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  br label %87

36:                                               ; preds = %24
  %37 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  store i8 -1, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 17, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 -1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 13, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  store i8 48, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %37, i64 5
  store i8 0, i8* %42, align 1
  %43 = ptrtoint i8* %37 to i64
  %44 = call noalias i8* @malloc(i64 240) #14
  %45 = bitcast i8* %44 to i32*
  store i32 1, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 %43, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %44, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 6, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 24
  %51 = getelementptr inbounds i8, i8* %44, i64 40
  %52 = bitcast i8* %50 to i8**
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %44, i64 32
  %54 = bitcast i8* %53 to i32*
  store i32 1, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %44, i64 36
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %44, i64 56
  %58 = getelementptr inbounds i8, i8* %44, i64 72
  %59 = bitcast i8* %57 to i8**
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %44, i64 64
  %61 = bitcast i8* %60 to i32*
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %44, i64 68
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %44, i64 80
  %65 = getelementptr inbounds i8, i8* %44, i64 144
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #14
  %66 = getelementptr inbounds i8, i8* %44, i64 160
  %67 = getelementptr inbounds i8, i8* %44, i64 176
  %68 = bitcast i8* %66 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 60, i1 false) #14
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds i8, i8* %44, i64 168
  %70 = bitcast i8* %69 to i32*
  store i32 1, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %44, i64 172
  %72 = bitcast i8* %71 to i32*
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %44, i64 192
  %74 = getelementptr inbounds i8, i8* %44, i64 232
  store i8 0, i8* %74, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 36, i1 false) #14
  %75 = ptrtoint i8* %44 to i64
  %76 = icmp eq %"class.blink::SerializedScriptValue"* %30, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %36
  %78 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN5blink21SerializedScriptValueD2Ev(%"class.blink::SerializedScriptValue"* nonnull %30) #14
  %82 = bitcast %"class.blink::SerializedScriptValue"* %30 to i8*
  call void @free(i8* %82) #14
  br label %83

83:                                               ; preds = %36, %77, %81
  %84 = load i32, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %83
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %17) #14
  br label %87

87:                                               ; preds = %34, %83, %86
  %88 = phi i64 [ %35, %34 ], [ %75, %83 ], [ %75, %86 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %89 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %94 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  %95 = bitcast %"class.v8::Isolate"* %94 to %"class.v8::internal::Isolate"*
  %96 = load i64, i64* %90, align 8
  %97 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %95, i64 %96) #14
  %98 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %94) #14
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  %100 = bitcast i64* %97 to %"class.v8::Value"*
  %101 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %94, %"class.v8::Value"* %100) #14
  br label %102

102:                                              ; preds = %99, %92, %87
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #14
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #14
  %119 = inttoptr i64 %88 to %"class.blink::SerializedScriptValue"*
  ret %"class.blink::SerializedScriptValue"* %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9NullValueEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  store i8 -1, i8* %1, align 1
  %2 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 17, i8* %2, align 1
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 -1, i8* %3, align 1
  %4 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 13, i8* %4, align 1
  %5 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 48, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 0, i8* %6, align 1
  %7 = ptrtoint i8* %1 to i64
  %8 = tail call noalias i8* @malloc(i64 240) #14
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 6, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = getelementptr inbounds i8, i8* %8, i64 40
  %16 = bitcast i8* %14 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 36
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %8, i64 56
  %22 = getelementptr inbounds i8, i8* %8, i64 72
  %23 = bitcast i8* %21 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 64
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 68
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %8, i64 80
  %29 = getelementptr inbounds i8, i8* %8, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #14
  %30 = getelementptr inbounds i8, i8* %8, i64 160
  %31 = getelementptr inbounds i8, i8* %8, i64 176
  %32 = bitcast i8* %30 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 60, i1 false) #14
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %8, i64 168
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %8, i64 172
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %8, i64 192
  %38 = getelementptr inbounds i8, i8* %8, i64 232
  store i8 0, i8* %38, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 36, i1 false) #14
  %39 = bitcast i8* %8 to %"class.blink::SerializedScriptValue"*
  ret %"class.blink::SerializedScriptValue"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 240) #14
  %2 = bitcast i8* %1 to %"class.blink::SerializedScriptValue"*
  %3 = bitcast i8* %1 to i32*
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = getelementptr inbounds i8, i8* %1, i64 24
  %6 = getelementptr inbounds i8, i8* %1, i64 40
  %7 = bitcast i8* %5 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #14
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 32
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 36
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %1, i64 56
  %13 = getelementptr inbounds i8, i8* %1, i64 72
  %14 = bitcast i8* %12 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %1, i64 64
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 68
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %1, i64 80
  %20 = getelementptr inbounds i8, i8* %1, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #14
  %21 = getelementptr inbounds i8, i8* %1, i64 160
  %22 = getelementptr inbounds i8, i8* %1, i64 176
  %23 = bitcast i8* %21 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 60, i1 false) #14
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 168
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 172
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %1, i64 192
  %29 = getelementptr inbounds i8, i8* %1, i64 232
  store i8 0, i8* %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 36, i1 false) #14
  ret %"class.blink::SerializedScriptValue"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = shl nuw nsw i64 %8, 1
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i64 [ %9, %5 ], [ 0, %1 ]
  %12 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  %13 = ptrtoint i8* %12 to i64
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast i8* %12 to i16*
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call i32 @_ZNK3WTF10StringImpl6CopyToEPDsjj(%"class.WTF::StringImpl"* nonnull %14, i16* %17, i32 0, i32 %19) #14
  br label %21

21:                                               ; preds = %10, %16
  %22 = tail call noalias i8* @malloc(i64 240) #14
  %23 = bitcast i8* %22 to %"class.blink::SerializedScriptValue"*
  %24 = bitcast i8* %22 to i32*
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %13, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %11, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 24
  %30 = getelementptr inbounds i8, i8* %22, i64 40
  %31 = bitcast i8* %29 to i8**
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %22, i64 32
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %22, i64 36
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %22, i64 56
  %37 = getelementptr inbounds i8, i8* %22, i64 72
  %38 = bitcast i8* %36 to i8**
  store i8* %37, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %22, i64 64
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %22, i64 68
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %22, i64 80
  %44 = getelementptr inbounds i8, i8* %22, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #14
  %45 = getelementptr inbounds i8, i8* %22, i64 160
  %46 = getelementptr inbounds i8, i8* %22, i64 176
  %47 = bitcast i8* %45 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 60, i1 false) #14
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %22, i64 168
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %22, i64 172
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %22, i64 192
  %53 = getelementptr inbounds i8, i8* %22, i64 232
  store i8 0, i8* %53, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 36, i1 false) #14
  ret %"class.blink::SerializedScriptValue"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink21SerializedScriptValue14AllocateBufferEm(i64) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEPKcm(i8* readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = tail call noalias i8* @malloc(i64 240) #14
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = getelementptr inbounds i8, i8* %5, i64 24
  %9 = getelementptr inbounds i8, i8* %5, i64 40
  %10 = bitcast i8* %8 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #14
  store i8* %9, i8** %10, align 8
  br label %203

11:                                               ; preds = %2
  %12 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  %13 = ptrtoint i8* %12 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %193, label %16

16:                                               ; preds = %11
  %17 = icmp ult i64 %1, 32
  br i1 %17, label %104, label %18

18:                                               ; preds = %16
  %19 = getelementptr i8, i8* %12, i64 %1
  %20 = icmp ult i8* %12, %14
  %21 = icmp ugt i8* %19, %0
  %22 = and i1 %20, %21
  br i1 %22, label %104, label %23

23:                                               ; preds = %18
  %24 = and i64 %1, -32
  %25 = getelementptr i8, i8* %12, i64 %24
  %26 = getelementptr i8, i8* %0, i64 %24
  %27 = add i64 %24, -32
  %28 = lshr exact i64 %27, 5
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 3
  %31 = icmp ult i64 %27, 96
  br i1 %31, label %83, label %32

32:                                               ; preds = %23
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %80, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %81, %34 ]
  %37 = getelementptr i8, i8* %12, i64 %35
  %38 = getelementptr i8, i8* %0, i64 %35
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1, !alias.scope !2
  %41 = getelementptr i8, i8* %38, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1, !alias.scope !2
  %44 = bitcast i8* %37 to <16 x i8>*
  store <16 x i8> %40, <16 x i8>* %44, align 1, !alias.scope !5, !noalias !2
  %45 = getelementptr i8, i8* %37, i64 16
  %46 = bitcast i8* %45 to <16 x i8>*
  store <16 x i8> %43, <16 x i8>* %46, align 1, !alias.scope !5, !noalias !2
  %47 = or i64 %35, 32
  %48 = getelementptr i8, i8* %12, i64 %47
  %49 = getelementptr i8, i8* %0, i64 %47
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !2
  %52 = getelementptr i8, i8* %49, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !2
  %55 = bitcast i8* %48 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !5, !noalias !2
  %56 = getelementptr i8, i8* %48, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1, !alias.scope !5, !noalias !2
  %58 = or i64 %35, 64
  %59 = getelementptr i8, i8* %12, i64 %58
  %60 = getelementptr i8, i8* %0, i64 %58
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !2
  %63 = getelementptr i8, i8* %60, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !2
  %66 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !5, !noalias !2
  %67 = getelementptr i8, i8* %59, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1, !alias.scope !5, !noalias !2
  %69 = or i64 %35, 96
  %70 = getelementptr i8, i8* %12, i64 %69
  %71 = getelementptr i8, i8* %0, i64 %69
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !2
  %74 = getelementptr i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !2
  %77 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !5, !noalias !2
  %78 = getelementptr i8, i8* %70, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !5, !noalias !2
  %80 = add i64 %35, 128
  %81 = add i64 %36, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %34, !llvm.loop !7

83:                                               ; preds = %34, %23
  %84 = phi i64 [ 0, %23 ], [ %80, %34 ]
  %85 = icmp eq i64 %30, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %99, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %100, %86 ], [ %30, %83 ]
  %89 = getelementptr i8, i8* %12, i64 %87
  %90 = getelementptr i8, i8* %0, i64 %87
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !2
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !2
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !5, !noalias !2
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !5, !noalias !2
  %99 = add i64 %87, 32
  %100 = add i64 %88, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %86, !llvm.loop !9

102:                                              ; preds = %86, %83
  %103 = icmp eq i64 %24, %1
  br i1 %103, label %114, label %104

104:                                              ; preds = %102, %18, %16
  %105 = phi i8* [ %12, %18 ], [ %12, %16 ], [ %25, %102 ]
  %106 = phi i8* [ %0, %18 ], [ %0, %16 ], [ %26, %102 ]
  br label %107

107:                                              ; preds = %104, %107
  %108 = phi i8* [ %112, %107 ], [ %105, %104 ]
  %109 = phi i8* [ %111, %107 ], [ %106, %104 ]
  %110 = load i8, i8* %109, align 1
  store i8 %110, i8* %108, align 1
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = getelementptr inbounds i8, i8* %108, i64 1
  %113 = icmp eq i8* %111, %14
  br i1 %113, label %114, label %107, !llvm.loop !11

114:                                              ; preds = %107, %102
  %115 = and i64 %1, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %193

117:                                              ; preds = %114
  %118 = icmp ult i64 %1, 4
  br i1 %118, label %126, label %119

119:                                              ; preds = %117
  %120 = load i8, i8* %12, align 1
  %121 = icmp eq i8 %120, -1
  br i1 %121, label %122, label %126

122:                                              ; preds = %119
  %123 = getelementptr inbounds i8, i8* %12, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp ugt i8 %124, 34
  br i1 %125, label %126, label %193

126:                                              ; preds = %122, %119, %117
  %127 = bitcast i8* %12 to i16*
  %128 = lshr i64 %1, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %193, label %130

130:                                              ; preds = %126
  %131 = icmp ult i64 %1, 32
  br i1 %131, label %184, label %132

132:                                              ; preds = %130
  %133 = and i64 %128, 9223372036854775792
  %134 = add nsw i64 %133, -16
  %135 = lshr exact i64 %134, 4
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 1
  %138 = icmp eq i64 %134, 0
  br i1 %138, label %168, label %139

139:                                              ; preds = %132
  %140 = sub nuw nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %165, %141 ]
  %143 = phi i64 [ %140, %139 ], [ %166, %141 ]
  %144 = getelementptr inbounds i16, i16* %127, i64 %142
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2
  %147 = getelementptr inbounds i16, i16* %144, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2
  %150 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %146)
  %151 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %149)
  %152 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %152, align 2
  %153 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %153, align 2
  %154 = or i64 %142, 16
  %155 = getelementptr inbounds i16, i16* %127, i64 %154
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2
  %158 = getelementptr inbounds i16, i16* %155, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2
  %161 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %157)
  %162 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %160)
  %163 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %163, align 2
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %164, align 2
  %165 = add i64 %142, 32
  %166 = add i64 %143, -2
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %141, !llvm.loop !12

168:                                              ; preds = %141, %132
  %169 = phi i64 [ 0, %132 ], [ %165, %141 ]
  %170 = icmp eq i64 %137, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds i16, i16* %127, i64 %169
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2
  %175 = getelementptr inbounds i16, i16* %172, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2
  %178 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %174)
  %179 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %177)
  %180 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %180, align 2
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %181, align 2
  br label %182

182:                                              ; preds = %168, %171
  %183 = icmp eq i64 %128, %133
  br i1 %183, label %193, label %184

184:                                              ; preds = %182, %130
  %185 = phi i64 [ 0, %130 ], [ %133, %182 ]
  br label %186

186:                                              ; preds = %184, %186
  %187 = phi i64 [ %191, %186 ], [ %185, %184 ]
  %188 = getelementptr inbounds i16, i16* %127, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = tail call i16 @llvm.bswap.i16(i16 %189) #14
  store i16 %190, i16* %188, align 2
  %191 = add nuw nsw i64 %187, 1
  %192 = icmp eq i64 %191, %128
  br i1 %192, label %193, label %186, !llvm.loop !13

193:                                              ; preds = %186, %182, %11, %126, %122, %114
  %194 = tail call noalias i8* @malloc(i64 240) #14
  %195 = bitcast i8* %194 to i32*
  store i32 1, i32* %195, align 4
  %196 = getelementptr inbounds i8, i8* %194, i64 8
  %197 = bitcast i8* %196 to i64*
  store i64 %13, i64* %197, align 8
  %198 = getelementptr inbounds i8, i8* %194, i64 16
  %199 = bitcast i8* %198 to i64*
  store i64 %1, i64* %199, align 8
  %200 = getelementptr inbounds i8, i8* %194, i64 24
  %201 = getelementptr inbounds i8, i8* %194, i64 40
  %202 = bitcast i8* %200 to i8**
  store i8* %201, i8** %202, align 8
  br label %203

203:                                              ; preds = %193, %4
  %204 = phi i8* [ %194, %193 ], [ %5, %4 ]
  %205 = getelementptr inbounds i8, i8* %204, i64 32
  %206 = bitcast i8* %205 to i32*
  store i32 1, i32* %206, align 8
  %207 = getelementptr inbounds i8, i8* %204, i64 36
  %208 = bitcast i8* %207 to i32*
  store i32 0, i32* %208, align 4
  %209 = getelementptr inbounds i8, i8* %204, i64 56
  %210 = getelementptr inbounds i8, i8* %204, i64 72
  %211 = bitcast i8* %209 to i8**
  store i8* %210, i8** %211, align 8
  %212 = getelementptr inbounds i8, i8* %204, i64 64
  %213 = bitcast i8* %212 to i32*
  store i32 1, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %204, i64 68
  %215 = bitcast i8* %214 to i32*
  store i32 0, i32* %215, align 4
  %216 = getelementptr inbounds i8, i8* %204, i64 80
  %217 = getelementptr inbounds i8, i8* %204, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false) #14
  %218 = getelementptr inbounds i8, i8* %204, i64 160
  %219 = getelementptr inbounds i8, i8* %204, i64 176
  %220 = bitcast i8* %218 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 60, i1 false) #14
  store i8* %219, i8** %220, align 8
  %221 = getelementptr inbounds i8, i8* %204, i64 168
  %222 = bitcast i8* %221 to i32*
  store i32 1, i32* %222, align 8
  %223 = getelementptr inbounds i8, i8* %204, i64 172
  %224 = bitcast i8* %223 to i32*
  store i32 0, i32* %224, align 4
  %225 = getelementptr inbounds i8, i8* %204, i64 192
  %226 = getelementptr inbounds i8, i8* %204, i64 232
  store i8 0, i8* %226, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 36, i1 false) #14
  %227 = bitcast i8* %204 to %"class.blink::SerializedScriptValue"*
  ret %"class.blink::SerializedScriptValue"* %227
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateE13scoped_refptrIKN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %3 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %0, null
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = tail call noalias i8* @malloc(i64 240) #14
  %7 = bitcast i8* %6 to %"class.blink::SerializedScriptValue"*
  %8 = bitcast i8* %6 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = getelementptr inbounds i8, i8* %6, i64 40
  %12 = bitcast i8* %10 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #14
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 32
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 36
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %6, i64 56
  %18 = getelementptr inbounds i8, i8* %6, i64 72
  %19 = bitcast i8* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 64
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 68
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %6, i64 80
  %25 = getelementptr inbounds i8, i8* %6, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #14
  %26 = getelementptr inbounds i8, i8* %6, i64 160
  %27 = getelementptr inbounds i8, i8* %6, i64 176
  %28 = bitcast i8* %26 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 60, i1 false) #14
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %6, i64 168
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %6, i64 172
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %6, i64 192
  %34 = getelementptr inbounds i8, i8* %6, i64 232
  store i8 0, i8* %34, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 36, i1 false) #14
  br label %279

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast %"class.WTF::SharedBuffer::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  call void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %2, %"class.WTF::SharedBuffer"* nonnull %0) #14
  %41 = bitcast %"class.WTF::SharedBuffer::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  call void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %3, %"class.WTF::SharedBuffer"* nonnull %0) #14
  %42 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %2, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %3) #14
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %2, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %2, i64 0, i32 1, i32 0, i32 0
  br label %126

46:                                               ; preds = %234, %35
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #14
  %47 = load i64, i64* %36, align 8
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %239

50:                                               ; preds = %46
  %51 = icmp ult i64 %47, 4
  br i1 %51, label %59, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %38, align 1
  %54 = icmp eq i8 %53, -1
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = getelementptr inbounds i8, i8* %38, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp ugt i8 %57, 34
  br i1 %58, label %59, label %239

59:                                               ; preds = %55, %52, %50
  %60 = bitcast i8* %38 to i16*
  %61 = lshr i64 %47, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %239, label %63

63:                                               ; preds = %59
  %64 = icmp ult i64 %47, 32
  br i1 %64, label %117, label %65

65:                                               ; preds = %63
  %66 = and i64 %61, 9223372036854775792
  %67 = add nsw i64 %66, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %67, 0
  br i1 %71, label %101, label %72

72:                                               ; preds = %65
  %73 = sub nuw nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %98, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %99, %74 ]
  %77 = getelementptr inbounds i16, i16* %60, i64 %75
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2
  %80 = getelementptr inbounds i16, i16* %77, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2
  %83 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %79)
  %84 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %82)
  %85 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %85, align 2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %86, align 2
  %87 = or i64 %75, 16
  %88 = getelementptr inbounds i16, i16* %60, i64 %87
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2
  %91 = getelementptr inbounds i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2
  %94 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %90)
  %95 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %93)
  %96 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %96, align 2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %97, align 2
  %98 = add i64 %75, 32
  %99 = add i64 %76, -2
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %74, !llvm.loop !15

101:                                              ; preds = %74, %65
  %102 = phi i64 [ 0, %65 ], [ %98, %74 ]
  %103 = icmp eq i64 %70, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds i16, i16* %60, i64 %102
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2
  %108 = getelementptr inbounds i16, i16* %105, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2
  %111 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %107)
  %112 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %110)
  %113 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %113, align 2
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %114, align 2
  br label %115

115:                                              ; preds = %101, %104
  %116 = icmp eq i64 %61, %66
  br i1 %116, label %239, label %117

117:                                              ; preds = %115, %63
  %118 = phi i64 [ 0, %63 ], [ %66, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi i64 [ %124, %119 ], [ %118, %117 ]
  %121 = getelementptr inbounds i16, i16* %60, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = call i16 @llvm.bswap.i16(i16 %122) #14
  store i16 %123, i16* %121, align 2
  %124 = add nuw nsw i64 %120, 1
  %125 = icmp eq i64 %124, %61
  br i1 %125, label %239, label %119, !llvm.loop !16

126:                                              ; preds = %43, %234
  %127 = phi i64 [ 0, %43 ], [ %236, %234 ]
  %128 = load i8*, i8** %44, align 8
  %129 = load i64, i64* %45, align 8
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %234, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds i8, i8* %38, i64 %127
  %134 = icmp ult i64 %129, 32
  br i1 %134, label %222, label %135

135:                                              ; preds = %132
  %136 = add i64 %127, %129
  %137 = getelementptr i8, i8* %38, i64 %136
  %138 = icmp ult i8* %133, %130
  %139 = icmp ult i8* %128, %137
  %140 = and i1 %138, %139
  br i1 %140, label %222, label %141

141:                                              ; preds = %135
  %142 = and i64 %129, -32
  %143 = getelementptr i8, i8* %133, i64 %142
  %144 = getelementptr i8, i8* %128, i64 %142
  %145 = add i64 %142, -32
  %146 = lshr exact i64 %145, 5
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp ult i64 %145, 96
  br i1 %149, label %201, label %150

150:                                              ; preds = %141
  %151 = sub nsw i64 %147, %148
  br label %152

152:                                              ; preds = %152, %150
  %153 = phi i64 [ 0, %150 ], [ %198, %152 ]
  %154 = phi i64 [ %151, %150 ], [ %199, %152 ]
  %155 = getelementptr i8, i8* %133, i64 %153
  %156 = getelementptr i8, i8* %128, i64 %153
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1, !alias.scope !17
  %159 = getelementptr i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !17
  %162 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !20, !noalias !17
  %163 = getelementptr i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !20, !noalias !17
  %165 = or i64 %153, 32
  %166 = getelementptr i8, i8* %133, i64 %165
  %167 = getelementptr i8, i8* %128, i64 %165
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !17
  %170 = getelementptr i8, i8* %167, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !17
  %173 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %169, <16 x i8>* %173, align 1, !alias.scope !20, !noalias !17
  %174 = getelementptr i8, i8* %166, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %172, <16 x i8>* %175, align 1, !alias.scope !20, !noalias !17
  %176 = or i64 %153, 64
  %177 = getelementptr i8, i8* %133, i64 %176
  %178 = getelementptr i8, i8* %128, i64 %176
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 1, !alias.scope !17
  %181 = getelementptr i8, i8* %178, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !17
  %184 = bitcast i8* %177 to <16 x i8>*
  store <16 x i8> %180, <16 x i8>* %184, align 1, !alias.scope !20, !noalias !17
  %185 = getelementptr i8, i8* %177, i64 16
  %186 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %186, align 1, !alias.scope !20, !noalias !17
  %187 = or i64 %153, 96
  %188 = getelementptr i8, i8* %133, i64 %187
  %189 = getelementptr i8, i8* %128, i64 %187
  %190 = bitcast i8* %189 to <16 x i8>*
  %191 = load <16 x i8>, <16 x i8>* %190, align 1, !alias.scope !17
  %192 = getelementptr i8, i8* %189, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !17
  %195 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %195, align 1, !alias.scope !20, !noalias !17
  %196 = getelementptr i8, i8* %188, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %197, align 1, !alias.scope !20, !noalias !17
  %198 = add i64 %153, 128
  %199 = add i64 %154, -4
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %152, !llvm.loop !22

201:                                              ; preds = %152, %141
  %202 = phi i64 [ 0, %141 ], [ %198, %152 ]
  %203 = icmp eq i64 %148, 0
  br i1 %203, label %220, label %204

204:                                              ; preds = %201, %204
  %205 = phi i64 [ %217, %204 ], [ %202, %201 ]
  %206 = phi i64 [ %218, %204 ], [ %148, %201 ]
  %207 = getelementptr i8, i8* %133, i64 %205
  %208 = getelementptr i8, i8* %128, i64 %205
  %209 = bitcast i8* %208 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !17
  %211 = getelementptr i8, i8* %208, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !17
  %214 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !20, !noalias !17
  %215 = getelementptr i8, i8* %207, i64 16
  %216 = bitcast i8* %215 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %216, align 1, !alias.scope !20, !noalias !17
  %217 = add i64 %205, 32
  %218 = add i64 %206, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %204, !llvm.loop !23

220:                                              ; preds = %204, %201
  %221 = icmp eq i64 %129, %142
  br i1 %221, label %232, label %222

222:                                              ; preds = %220, %135, %132
  %223 = phi i8* [ %133, %135 ], [ %133, %132 ], [ %143, %220 ]
  %224 = phi i8* [ %128, %135 ], [ %128, %132 ], [ %144, %220 ]
  br label %225

225:                                              ; preds = %222, %225
  %226 = phi i8* [ %230, %225 ], [ %223, %222 ]
  %227 = phi i8* [ %229, %225 ], [ %224, %222 ]
  %228 = load i8, i8* %227, align 1
  store i8 %228, i8* %226, align 1
  %229 = getelementptr inbounds i8, i8* %227, i64 1
  %230 = getelementptr inbounds i8, i8* %226, i64 1
  %231 = icmp eq i8* %229, %130
  br i1 %231, label %232, label %225, !llvm.loop !24

232:                                              ; preds = %225, %220
  %233 = load i64, i64* %45, align 8
  br label %234

234:                                              ; preds = %232, %126
  %235 = phi i64 [ %233, %232 ], [ 0, %126 ]
  %236 = add i64 %235, %127
  %237 = call dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"* nonnull %2) #14
  %238 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %2, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %3) #14
  br i1 %238, label %46, label %126

239:                                              ; preds = %119, %115, %46, %55, %59
  %240 = call noalias i8* @malloc(i64 240) #14
  %241 = bitcast i8* %240 to %"class.blink::SerializedScriptValue"*
  %242 = load i64, i64* %36, align 8
  %243 = bitcast i8* %240 to i32*
  store i32 1, i32* %243, align 4
  %244 = getelementptr inbounds i8, i8* %240, i64 8
  %245 = bitcast i8* %244 to i64*
  store i64 %39, i64* %245, align 8
  %246 = getelementptr inbounds i8, i8* %240, i64 16
  %247 = bitcast i8* %246 to i64*
  store i64 %242, i64* %247, align 8
  %248 = getelementptr inbounds i8, i8* %240, i64 24
  %249 = getelementptr inbounds i8, i8* %240, i64 40
  %250 = bitcast i8* %248 to i8**
  store i8* %249, i8** %250, align 8
  %251 = getelementptr inbounds i8, i8* %240, i64 32
  %252 = bitcast i8* %251 to i32*
  store i32 1, i32* %252, align 8
  %253 = getelementptr inbounds i8, i8* %240, i64 36
  %254 = bitcast i8* %253 to i32*
  store i32 0, i32* %254, align 4
  %255 = getelementptr inbounds i8, i8* %240, i64 56
  %256 = getelementptr inbounds i8, i8* %240, i64 72
  %257 = bitcast i8* %255 to i8**
  store i8* %256, i8** %257, align 8
  %258 = getelementptr inbounds i8, i8* %240, i64 64
  %259 = bitcast i8* %258 to i32*
  store i32 1, i32* %259, align 8
  %260 = getelementptr inbounds i8, i8* %240, i64 68
  %261 = bitcast i8* %260 to i32*
  store i32 0, i32* %261, align 4
  %262 = getelementptr inbounds i8, i8* %240, i64 80
  %263 = getelementptr inbounds i8, i8* %240, i64 144
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 16, i1 false) #14
  %264 = getelementptr inbounds i8, i8* %240, i64 160
  %265 = getelementptr inbounds i8, i8* %240, i64 176
  %266 = bitcast i8* %264 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 60, i1 false) #14
  store i8* %265, i8** %266, align 8
  %267 = getelementptr inbounds i8, i8* %240, i64 168
  %268 = bitcast i8* %267 to i32*
  store i32 1, i32* %268, align 8
  %269 = getelementptr inbounds i8, i8* %240, i64 172
  %270 = bitcast i8* %269 to i32*
  store i32 0, i32* %270, align 4
  %271 = getelementptr inbounds i8, i8* %240, i64 192
  %272 = getelementptr inbounds i8, i8* %240, i64 232
  store i8 0, i8* %272, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 36, i1 false) #14
  %273 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %273) #14
  %274 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %239
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %0) #14
  %278 = bitcast %"class.WTF::SharedBuffer"* %0 to i8*
  call void @free(i8* %278) #14
  br label %279

279:                                              ; preds = %5, %239, %277
  %280 = phi %"class.blink::SerializedScriptValue"* [ %7, %5 ], [ %241, %239 ], [ %241, %277 ]
  ret %"class.blink::SerializedScriptValue"* %280
}

declare void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValueC2Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector"* %4 to i8**
  %7 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i8* %5, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 1, i64 0
  %12 = bitcast %"class.WTF::Vector.2"* %10 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 10
  %17 = bitcast %"class.WTF::Vector.249"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #14
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11
  %19 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 1, i64 0
  %20 = bitcast %"class.WTF::Vector"* %18 to i8**
  %21 = bitcast %"class.WTF::Vector.207"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 60, i1 false)
  store i8* %19, i8** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 12
  %25 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 14
  store i8 0, i8* %25, align 8
  %26 = bitcast %"class.WTF::Vector.254"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValueC2ENSt3__110unique_ptrIA_hNS0_13BufferDeleterEEEm(%"class.blink::SerializedScriptValue"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 3
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %11 = bitcast %"class.WTF::Vector"* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 1, i64 0
  %16 = bitcast %"class.WTF::Vector.2"* %14 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %20 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 10
  %21 = bitcast %"class.WTF::Vector.249"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #14
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11
  %23 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 1, i64 0
  %24 = bitcast %"class.WTF::Vector"* %22 to i8**
  %25 = bitcast %"class.WTF::Vector.207"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 60, i1 false)
  store i8* %23, i8** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 12
  %29 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 14
  store i8 0, i8* %29, align 8
  %30 = bitcast %"class.WTF::Vector.254"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue27SetImageBitmapContentsArrayEN3WTF6VectorI13scoped_refptrINS_17StaticBitmapImageEELj1ENS1_18PartitionAllocatorEEE(%"class.blink::SerializedScriptValue"*, %"class.WTF::Vector.2"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %1, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS6_NS_16VectorBufferBaseIS4_S5_E11OffsetRangeESA_(%"class.WTF::VectorBuffer.3"* %3, %"class.WTF::VectorBuffer.3"* dereferenceable(24) %4, i64 0, i64 0) #14
  ret void
}

declare i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValueD2Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !25
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #14
  %7 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 0, %8
  %10 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %6, i64 %9) #14
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 13, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.263"*, %"struct.WTF::KeyValuePair.263"** %12, align 8
  %14 = icmp eq %"struct.WTF::KeyValuePair.263"* %13, null
  br i1 %14, label %40, label %15, !prof !26

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 13, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  br label %21

21:                                               ; preds = %35, %19
  %22 = phi i64 [ 0, %19 ], [ %36, %35 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.263", %"struct.WTF::KeyValuePair.263"* %13, i64 %22, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = icmp eq i8** %24, inttoptr (i64 -1 to i8**)
  br i1 %25, label %35, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.263", %"struct.WTF::KeyValuePair.263"* %13, i64 %22, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.blink::SerializedScriptValue::Attachment"*, %"class.blink::SerializedScriptValue::Attachment"** %27, align 8
  store %"class.blink::SerializedScriptValue::Attachment"* null, %"class.blink::SerializedScriptValue::Attachment"** %27, align 8
  %29 = icmp eq %"class.blink::SerializedScriptValue::Attachment"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::SerializedScriptValue::Attachment"* %28 to void (%"class.blink::SerializedScriptValue::Attachment"*)***
  %32 = load void (%"class.blink::SerializedScriptValue::Attachment"*)**, void (%"class.blink::SerializedScriptValue::Attachment"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::SerializedScriptValue::Attachment"*)*, void (%"class.blink::SerializedScriptValue::Attachment"*)** %32, i64 1
  %34 = load void (%"class.blink::SerializedScriptValue::Attachment"*)*, void (%"class.blink::SerializedScriptValue::Attachment"*)** %33, align 8
  tail call void %34(%"class.blink::SerializedScriptValue::Attachment"* nonnull %28) #14
  br label %35

35:                                               ; preds = %30, %26, %21
  %36 = add nuw nsw i64 %22, 1
  %37 = icmp eq i64 %36, %20
  br i1 %37, label %38, label %21

38:                                               ; preds = %35, %15
  %39 = bitcast %"struct.WTF::KeyValuePair.263"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #14
  store %"struct.WTF::KeyValuePair.263"* null, %"struct.WTF::KeyValuePair.263"** %12, align 8
  br label %40

40:                                               ; preds = %11, %38
  %41 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 12
  %42 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.mojo::PendingRemote"*, %"class.mojo::PendingRemote"** %42, align 8
  %44 = icmp eq %"class.mojo::PendingRemote"* %43, null
  br i1 %44, label %63, label %45, !prof !26

45:                                               ; preds = %40
  %46 = bitcast %"class.mojo::PendingRemote"* %43 to i8*
  %47 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %61, label %50, !prof !27

50:                                               ; preds = %45
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %43, i64 %51
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi %"class.mojo::PendingRemote"* [ %56, %53 ], [ %43, %50 ]
  %55 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %54, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %55) #14
  %56 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %54, i64 1
  %57 = icmp eq %"class.mojo::PendingRemote"* %56, %52
  br i1 %57, label %58, label %53

58:                                               ; preds = %53
  store i32 0, i32* %47, align 4
  %59 = bitcast %"class.WTF::Vector.254"* %41 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %45
  %62 = phi i8* [ %60, %58 ], [ %46, %45 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #14
  store %"class.mojo::PendingRemote"* null, %"class.mojo::PendingRemote"** %42, align 8
  br label %63

63:                                               ; preds = %40, %61
  %64 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11
  %65 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 0
  br i1 %67, label %78, label %69, !prof !27

69:                                               ; preds = %63
  %70 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %68, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %70, i64 %71
  br label %73

73:                                               ; preds = %73, %69
  %74 = phi %"class.blink::ArrayBufferContents"* [ %75, %73 ], [ %70, %69 ]
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %74) #14
  %75 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %74, i64 1
  %76 = icmp eq %"class.blink::ArrayBufferContents"* %75, %72
  br i1 %76, label %77, label %73

77:                                               ; preds = %73
  store i32 0, i32* %65, align 4
  br label %78

78:                                               ; preds = %77, %63
  %79 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %68, align 8
  %80 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 1, i64 0
  %81 = bitcast i8* %80 to %"class.blink::ArrayBufferContents"*
  %82 = icmp eq %"class.blink::ArrayBufferContents"* %79, %81
  br i1 %82, label %85, label %83, !prof !26

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %84, %"class.blink::ArrayBufferContents"* %79) #14
  br label %85

85:                                               ; preds = %78, %83
  store %"class.blink::ArrayBufferContents"* null, %"class.blink::ArrayBufferContents"** %68, align 8
  %86 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 10
  %87 = getelementptr inbounds %"class.WTF::Vector.249", %"class.WTF::Vector.249"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %87, align 8
  %89 = icmp eq %"class.mojo::ScopedHandleBase"* %88, null
  br i1 %89, label %113, label %90, !prof !26

90:                                               ; preds = %85
  %91 = bitcast %"class.mojo::ScopedHandleBase"* %88 to i8*
  %92 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %111, label %95, !prof !27

95:                                               ; preds = %90
  %96 = zext i32 %93 to i64
  %97 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %88, i64 %96
  br label %98

98:                                               ; preds = %105, %95
  %99 = phi %"class.mojo::ScopedHandleBase"* [ %106, %105 ], [ %88, %95 ]
  %100 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %99, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  %104 = tail call i32 @MojoClose(i32 %101) #14
  br label %105

105:                                              ; preds = %103, %98
  %106 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %99, i64 1
  %107 = icmp eq %"class.mojo::ScopedHandleBase"* %106, %97
  br i1 %107, label %108, label %98

108:                                              ; preds = %105
  store i32 0, i32* %92, align 4
  %109 = bitcast %"class.WTF::Vector.249"* %86 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %90
  %112 = phi i8* [ %110, %108 ], [ %91, %90 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %112) #14
  store %"class.mojo::ScopedHandleBase"* null, %"class.mojo::ScopedHandleBase"** %87, align 8
  br label %113

113:                                              ; preds = %85, %111
  %114 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 9, i32 0, i32 0
  %115 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %114, align 8
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, null
  br i1 %116, label %120, label %117, !prof !26

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 9, i32 0, i32 1
  %119 = load i32, i32* %118, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"* nonnull %115, i32 %119) #14
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %114, align 8
  br label %120

120:                                              ; preds = %113, %117
  %121 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 8, i32 0
  %122 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %121, align 8
  %123 = icmp eq %"class.blink::SecurityOrigin"* %122, null
  br i1 %123, label %131, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %122, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %125) #14
  %126 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %122) #14
  %130 = bitcast %"class.blink::SecurityOrigin"* %122 to i8*
  tail call void @free(i8* %130) #14
  br label %131

131:                                              ; preds = %120, %124, %129
  %132 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 7
  %133 = getelementptr inbounds %"class.WTF::Vector.225", %"class.WTF::Vector.225"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.v8::CompiledWasmModule"*, %"class.v8::CompiledWasmModule"** %133, align 8
  %135 = icmp eq %"class.v8::CompiledWasmModule"* %134, null
  br i1 %135, label %176, label %136, !prof !26

136:                                              ; preds = %131
  %137 = bitcast %"class.v8::CompiledWasmModule"* %134 to i8*
  %138 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %174, label %141, !prof !27

141:                                              ; preds = %136
  %142 = zext i32 %139 to i64
  %143 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %134, i64 %142
  br label %144

144:                                              ; preds = %168, %141
  %145 = phi %"class.v8::CompiledWasmModule"* [ %169, %168 ], [ %134, %141 ]
  %146 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %145, i64 0, i32 1
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  tail call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %151, %144
  %155 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %145, i64 0, i32 0, i32 1
  %156 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %155, align 8
  %157 = icmp eq %"class.std::__1::__shared_weak_count"* %156, null
  br i1 %157, label %168, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0, i32 1
  %160 = atomicrmw add i64* %159, i64 -1 acq_rel
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0
  %164 = bitcast %"class.std::__1::__shared_weak_count"* %156 to void (%"class.std::__1::__shared_count"*)***
  %165 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %165, i64 2
  %167 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %166, align 8
  tail call void %167(%"class.std::__1::__shared_count"* %163) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %156) #14
  br label %168

168:                                              ; preds = %162, %158, %154
  %169 = getelementptr inbounds %"class.v8::CompiledWasmModule", %"class.v8::CompiledWasmModule"* %145, i64 1
  %170 = icmp eq %"class.v8::CompiledWasmModule"* %169, %143
  br i1 %170, label %171, label %144

171:                                              ; preds = %168
  store i32 0, i32* %138, align 4
  %172 = bitcast %"class.WTF::Vector.225"* %132 to i8**
  %173 = load i8*, i8** %172, align 8
  br label %174

174:                                              ; preds = %171, %136
  %175 = phi i8* [ %173, %171 ], [ %137, %136 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %175) #14
  store %"class.v8::CompiledWasmModule"* null, %"class.v8::CompiledWasmModule"** %133, align 8
  br label %176

176:                                              ; preds = %131, %174
  %177 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %178 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %178, align 8
  %180 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %179, null
  br i1 %180, label %217, label %181, !prof !26

181:                                              ; preds = %176
  %182 = bitcast %"class.blink::SerializedScriptValue::Stream"* %179 to i8*
  %183 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %215, label %186, !prof !27

186:                                              ; preds = %181
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %179, i64 %187
  br label %189

189:                                              ; preds = %208, %186
  %190 = phi %"class.blink::SerializedScriptValue::Stream"* [ %210, %208 ], [ %179, %186 ]
  %191 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %190, i64 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %191, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %191, align 8
  %193 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %189
  %195 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %192 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %196 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %196, i64 1
  %198 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %197, align 8
  tail call void %198(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %192) #14
  br label %199

199:                                              ; preds = %194, %189
  %200 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %190, i64 0, i32 1, i32 0, i32 0, i32 0
  %201 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %200, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %200, align 8
  %202 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %201 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %205 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %205, i64 1
  %207 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %206, align 8
  tail call void %207(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %201) #14
  br label %208

208:                                              ; preds = %203, %199
  %209 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %190, i64 0, i32 0
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %209) #14
  %210 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %190, i64 1
  %211 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %210, %188
  br i1 %211, label %212, label %189

212:                                              ; preds = %208
  store i32 0, i32* %183, align 4
  %213 = bitcast %"class.WTF::Vector.207"* %177 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %212, %181
  %216 = phi i8* [ %214, %212 ], [ %182, %181 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %216) #14
  store %"class.blink::SerializedScriptValue::Stream"* null, %"class.blink::SerializedScriptValue::Stream"** %178, align 8
  br label %217

217:                                              ; preds = %176, %215
  %218 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5
  %219 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %218, i64 0, i32 0, i32 0, i32 0
  br i1 %221, label %248, label %223, !prof !27

223:                                              ; preds = %217
  %224 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %222, align 8
  %225 = zext i32 %220 to i64
  %226 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %224, i64 %225
  br label %227

227:                                              ; preds = %244, %223
  %228 = phi %class.scoped_refptr.5* [ %245, %244 ], [ %224, %223 ]
  %229 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %228, i64 0, i32 0
  %230 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %229, align 8
  %231 = icmp eq %"class.blink::StaticBitmapImage"* %230, null
  br i1 %231, label %244, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %230, i64 0, i32 0, i32 1, i32 0
  %234 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw sub i32* %234, i32 1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %244

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %233, i64 -2
  %239 = bitcast %"class.base::RefCountedThreadSafe.7"* %238 to %"class.blink::Image"*
  %240 = bitcast %"class.base::RefCountedThreadSafe.7"* %238 to void (%"class.blink::Image"*)***
  %241 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %241, i64 1
  %243 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %242, align 8
  tail call void %243(%"class.blink::Image"* nonnull %239) #14
  br label %244

244:                                              ; preds = %237, %232, %227
  %245 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %228, i64 1
  %246 = icmp eq %class.scoped_refptr.5* %245, %226
  br i1 %246, label %247, label %227

247:                                              ; preds = %244
  store i32 0, i32* %219, align 4
  br label %248

248:                                              ; preds = %247, %217
  %249 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %222, align 8
  %250 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 1, i64 0
  %251 = bitcast i8* %250 to %class.scoped_refptr.5*
  %252 = icmp eq %class.scoped_refptr.5* %249, %251
  br i1 %252, label %255, label %253, !prof !26

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %218, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.3"* %254, %class.scoped_refptr.5* %249) #14
  br label %255

255:                                              ; preds = %248, %253
  store %class.scoped_refptr.5* null, %class.scoped_refptr.5** %222, align 8
  %256 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4
  %257 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %256, i64 0, i32 0, i32 0, i32 0
  br i1 %259, label %270, label %261, !prof !27

261:                                              ; preds = %255
  %262 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %260, align 8
  %263 = zext i32 %258 to i64
  %264 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %262, i64 %263
  br label %265

265:                                              ; preds = %265, %261
  %266 = phi %"class.blink::ArrayBufferContents"* [ %267, %265 ], [ %262, %261 ]
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %266) #14
  %267 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %266, i64 1
  %268 = icmp eq %"class.blink::ArrayBufferContents"* %267, %264
  br i1 %268, label %269, label %265

269:                                              ; preds = %265
  store i32 0, i32* %257, align 4
  br label %270

270:                                              ; preds = %269, %255
  %271 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %260, align 8
  %272 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %273 = bitcast i8* %272 to %"class.blink::ArrayBufferContents"*
  %274 = icmp eq %"class.blink::ArrayBufferContents"* %271, %273
  br i1 %274, label %277, label %275, !prof !26

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %256, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %276, %"class.blink::ArrayBufferContents"* %271) #14
  br label %277

277:                                              ; preds = %270, %275
  store %"class.blink::ArrayBufferContents"* null, %"class.blink::ArrayBufferContents"** %260, align 8
  %278 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  store i8* null, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %282, label %281

281:                                              ; preds = %277
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %279) #14
  br label %282

282:                                              ; preds = %277, %281
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue14UndefinedValueEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #14
  store i8 -1, i8* %1, align 1
  %2 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 17, i8* %2, align 1
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 -1, i8* %3, align 1
  %4 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 13, i8* %4, align 1
  %5 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 95, i8* %5, align 1
  %6 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 0, i8* %6, align 1
  %7 = ptrtoint i8* %1 to i64
  %8 = tail call noalias i8* @malloc(i64 240) #14
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 6, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = getelementptr inbounds i8, i8* %8, i64 40
  %16 = bitcast i8* %14 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 36
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %8, i64 56
  %22 = getelementptr inbounds i8, i8* %8, i64 72
  %23 = bitcast i8* %21 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 64
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 68
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %8, i64 80
  %29 = getelementptr inbounds i8, i8* %8, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #14
  %30 = getelementptr inbounds i8, i8* %8, i64 160
  %31 = getelementptr inbounds i8, i8* %8, i64 176
  %32 = bitcast i8* %30 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 60, i1 false) #14
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %8, i64 168
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %8, i64 172
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %8, i64 192
  %38 = getelementptr inbounds i8, i8* %8, i64 232
  store i8 0, i8* %38, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 36, i1 false) #14
  %39 = bitcast i8* %8 to %"class.blink::SerializedScriptValue"*
  ret %"class.blink::SerializedScriptValue"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink21SerializedScriptValue12ToWireStringEv(%"class.blink::SerializedScriptValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i16*, align 8
  %3 = bitcast i16** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  %7 = and i64 %6, -2
  %8 = icmp ult i64 %7, 4294967296
  br i1 %8, label %10, label %9, !prof !26

9:                                                ; preds = %1
  tail call void @llvm.trap() #14
  unreachable

10:                                               ; preds = %1
  %11 = trunc i64 %7 to i32
  %12 = lshr exact i32 %11, 1
  %13 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %12, i16** nonnull dereferenceable(8) %2) #14
  %14 = bitcast i16** %2 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load i64, i64* %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %15, i8* align 1 %17, i64 %18, i1 false)
  %19 = and i64 %6, 4294967294
  %20 = load i64, i64* %4, align 8
  %21 = icmp ult i64 %20, %19
  br i1 %21, label %22, label %27

22:                                               ; preds = %10
  %23 = load i8*, i8** %14, align 8
  %24 = add nuw nsw i64 %7, 4294967295
  %25 = and i64 %24, 4294967295
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  store i8 0, i8* %26, align 1
  br label %27

27:                                               ; preds = %10, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue27TransferImageBitmapContentsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_11ImageBitmapEEELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.2"* noalias sret, %"class.v8::Isolate"* nocapture readnone, %"class.blink::HeapVector.275"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.blink::HeapHashSet.762", align 8
  %9 = alloca %class.scoped_refptr.5, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %14 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %15 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %16 = bitcast i8* %15 to i64*
  store i64 -6148914691236517206, i64* %16, align 8
  store i8* %13, i8** %14, align 8
  store i32 1, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %17 = getelementptr inbounds %"class.blink::HeapVector.275", %"class.blink::HeapVector.275"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HeapVector.275", %"class.blink::HeapVector.275"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %356, label %21

21:                                               ; preds = %4, %234
  %22 = phi i32 [ %235, %234 ], [ 0, %4 ]
  %23 = tail call dereferenceable(8) %"class.blink::Member.281"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.278"* %17, i32 %22) #14
  %24 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ImageBitmap", %"class.blink::ImageBitmap"* %25, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !25
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %234, label %29

29:                                               ; preds = %21
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #14
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #14
  store i8* %33, i8** %34, align 8
  %37 = urem i32 %22, 10
  %38 = udiv i32 %22, 10
  %39 = trunc i32 %37 to i8
  %40 = or i8 %39, 48
  store i8 %40, i8* %33, align 1
  %41 = icmp ugt i32 %22, 9
  br i1 %41, label %42, label %57

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %43, i8** %34, align 8
  %44 = urem i32 %38, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 2
  %47 = icmp ugt i32 %22, 99
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = udiv i32 %22, 100
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %50, i8** %34, align 8
  %51 = urem i32 %49, 10
  %52 = trunc i32 %51 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %50, align 1
  %54 = icmp ugt i32 %22, 999
  br i1 %54, label %59, label %68

55:                                               ; preds = %42
  %56 = ptrtoint i8* %43 to i64
  br label %71

57:                                               ; preds = %29
  %58 = ptrtoint i8* %33 to i64
  br label %71

59:                                               ; preds = %48, %59
  %60 = phi i32 [ %62, %59 ], [ %49, %48 ]
  %61 = load i8*, i8** %34, align 8
  %62 = udiv i32 %60, 10
  %63 = getelementptr inbounds i8, i8* %61, i64 -1
  store i8* %63, i8** %34, align 8
  %64 = urem i32 %62, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %60, 99
  br i1 %67, label %59, label %68

68:                                               ; preds = %59, %48
  %69 = bitcast i8** %34 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %68, %55, %57
  %72 = phi i64 [ %58, %57 ], [ %70, %68 ], [ %56, %55 ]
  %73 = ptrtoint i8* %36 to i64
  %74 = sub i64 %73, %72
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %35, align 8
  %76 = inttoptr i64 %72 to i8*
  %77 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %76, i32 %75) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #14
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %154, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #14
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !27

93:                                               ; preds = %86
  call void @llvm.trap() #14
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %94, %79
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = load atomic i32, i32* %80 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %111

101:                                              ; preds = %96
  %102 = zext i32 %97 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #14
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !27

108:                                              ; preds = %101
  call void @llvm.trap() #14
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %84, align 4
  br label %111

111:                                              ; preds = %109, %96
  %112 = phi i32 [ %110, %109 ], [ %97, %96 ]
  %113 = load atomic i32, i32* %80 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = add i32 %112, -1
  store i32 %117, i32* %84, align 4
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i32 [ %117, %116 ], [ %112, %111 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #14
  br label %122

122:                                              ; preds = %118, %121
  %123 = load atomic i32, i32* %80 monotonic, align 4, !noalias !28
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = load i32, i32* %84, align 4
  br i1 %125, label %127, label %137

127:                                              ; preds = %122
  %128 = zext i32 %126 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #14
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !27

134:                                              ; preds = %127
  call void @llvm.trap() #14, !noalias !28
  unreachable

135:                                              ; preds = %127
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %84, align 4, !noalias !28
  br label %137

137:                                              ; preds = %122, %135
  %138 = phi i32 [ %136, %135 ], [ %126, %122 ]
  %139 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.1 to i64), i64* %139, align 8, !alias.scope !28
  %140 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %140, align 8, !alias.scope !28
  %141 = load atomic i32, i32* %80 monotonic, align 4, !noalias !28
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %158

144:                                              ; preds = %137
  %145 = zext i32 %138 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #14
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !27

151:                                              ; preds = %144
  call void @llvm.trap() #14, !noalias !28
  unreachable

152:                                              ; preds = %144
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %84, align 4, !noalias !28
  br label %158

154:                                              ; preds = %71
  %155 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.1 to i64), i64* %155, align 8, !alias.scope !28
  %156 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %156, align 8, !alias.scope !28
  %157 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %157, align 8, !alias.scope !28
  br label %170

158:                                              ; preds = %152, %137
  %159 = phi i32 [ %153, %152 ], [ %138, %137 ]
  %160 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %160, align 8, !alias.scope !28
  %161 = load atomic i32, i32* %80 monotonic, align 4, !noalias !28
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = add i32 %159, -1
  store i32 %165, i32* %84, align 4, !noalias !28
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i32 [ %165, %164 ], [ %159, %158 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #14, !noalias !28
  br label %170

170:                                              ; preds = %154, %166, %169
  %171 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %172, align 8
  %173 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %174 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %173, align 8
  %175 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %174, align 8
  call void %175(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #14
  br label %191

191:                                              ; preds = %170, %187, %190
  %192 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #14
  br label %208

208:                                              ; preds = %191, %204, %207
  br i1 %78, label %355, label %209

209:                                              ; preds = %208
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #14
  %222 = load i32, i32* %214, align 4
  br label %223

223:                                              ; preds = %218, %221
  %224 = phi i32 [ %219, %218 ], [ %222, %221 ]
  %225 = load atomic i32, i32* %210 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %223
  %229 = add i32 %224, -1
  store i32 %229, i32* %214, align 4
  br label %230

230:                                              ; preds = %228, %223
  %231 = phi i32 [ %229, %228 ], [ %224, %223 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %355

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #14
  br label %355

234:                                              ; preds = %21
  %235 = add nuw i32 %22, 1
  %236 = load i32, i32* %18, align 4
  %237 = icmp ult i32 %235, %236
  br i1 %237, label %21, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.blink::HeapHashSet.762"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %239) #14
  %240 = getelementptr inbounds %"class.blink::HeapHashSet.762", %"class.blink::HeapHashSet.762"* %8, i64 0, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.blink::HeapHashSet.762", %"class.blink::HeapHashSet.762"* %8, i64 0, i32 0, i32 0, i32 1
  %242 = bitcast %"class.blink::HeapHashSet.762"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 0, i64 20, i1 false) #14
  %243 = icmp eq i32 %236, 0
  br i1 %243, label %248, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.blink::HeapHashSet.762", %"class.blink::HeapHashSet.762"* %8, i64 0, i32 0, i32 0
  %246 = bitcast %class.scoped_refptr.5* %9 to i8*
  %247 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %9, i64 0, i32 0
  br label %249

248:                                              ; preds = %351, %238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %239) #14
  br label %356

249:                                              ; preds = %244, %351
  %250 = phi i32 [ 0, %244 ], [ %352, %351 ]
  %251 = call dereferenceable(8) %"class.blink::Member.281"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.278"* %17, i32 %250) #14
  %252 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %252, align 8
  %254 = ptrtoint %"class.blink::ImageBitmap"* %253 to i64
  %255 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %240, align 8
  %256 = icmp eq %"class.blink::Member.281"* %255, null
  br i1 %256, label %317, label %257

257:                                              ; preds = %249
  %258 = load i32, i32* %241, align 8
  %259 = add i32 %258, -1
  %260 = zext i32 %259 to i64
  %261 = shl i64 %254, 32
  %262 = xor i64 %261, -1
  %263 = add i64 %262, %254
  %264 = lshr i64 %263, 22
  %265 = xor i64 %264, %263
  %266 = shl i64 %265, 13
  %267 = xor i64 %266, -1
  %268 = add i64 %265, %267
  %269 = lshr i64 %268, 8
  %270 = xor i64 %269, %268
  %271 = mul i64 %270, 9
  %272 = lshr i64 %271, 15
  %273 = xor i64 %272, %271
  %274 = shl i64 %273, 27
  %275 = xor i64 %274, -1
  %276 = add i64 %273, %275
  %277 = lshr i64 %276, 31
  %278 = xor i64 %277, %276
  %279 = trunc i64 %278 to i32
  %280 = and i32 %259, %279
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %255, i64 %281
  %283 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %282, i64 0, i32 0, i32 0
  %284 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %283, align 8
  %285 = icmp eq %"class.blink::ImageBitmap"* %284, %253
  br i1 %285, label %314, label %286

286:                                              ; preds = %257
  %287 = xor i32 %279, -1
  %288 = lshr i32 %279, 23
  %289 = add i32 %288, %287
  %290 = shl i32 %289, 12
  %291 = xor i32 %290, %289
  %292 = lshr i32 %291, 7
  %293 = xor i32 %292, %291
  %294 = shl i32 %293, 2
  %295 = xor i32 %294, %293
  %296 = lshr i32 %295, 20
  %297 = xor i32 %296, %295
  %298 = or i32 %297, 1
  %299 = zext i32 %298 to i64
  br label %300

300:                                              ; preds = %305, %286
  %301 = phi %"class.blink::ImageBitmap"* [ %284, %286 ], [ %312, %305 ]
  %302 = phi i64 [ %281, %286 ], [ %309, %305 ]
  %303 = phi i64 [ 0, %286 ], [ %307, %305 ]
  %304 = icmp eq %"class.blink::ImageBitmap"* %301, null
  br i1 %304, label %317, label %305

305:                                              ; preds = %300
  %306 = icmp eq i64 %303, 0
  %307 = select i1 %306, i64 %299, i64 %303
  %308 = add i64 %307, %302
  %309 = and i64 %308, %260
  %310 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %255, i64 %309
  %311 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %310, i64 0, i32 0, i32 0
  %312 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %311, align 8
  %313 = icmp eq %"class.blink::ImageBitmap"* %312, %253
  br i1 %313, label %314, label %300

314:                                              ; preds = %305, %257
  %315 = phi %"class.blink::Member.281"* [ %282, %257 ], [ %310, %305 ]
  %316 = icmp eq %"class.blink::Member.281"* %315, null
  br i1 %316, label %317, label %351

317:                                              ; preds = %300, %314, %249
  %318 = call dereferenceable(8) %"class.blink::Member.281"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.278"* %17, i32 %250) #14
  %319 = call { %"class.blink::Member.281"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.766"* nonnull %245, %"class.blink::Member.281"* dereferenceable(8) %318, %"class.blink::Member.281"* dereferenceable(8) %318) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #14
  %320 = call dereferenceable(8) %"class.blink::Member.281"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.278"* %17, i32 %250) #14
  %321 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %320, i64 0, i32 0, i32 0
  %322 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %321, align 8
  %323 = call %"class.blink::StaticBitmapImage"* @_ZN5blink11ImageBitmap8TransferEv(%"class.blink::ImageBitmap"* %322) #14
  store %"class.blink::StaticBitmapImage"* %323, %"class.blink::StaticBitmapImage"** %247, align 8
  %324 = load i32, i32* %12, align 4
  %325 = load i32, i32* %11, align 8
  %326 = icmp eq i32 %324, %325
  br i1 %326, label %335, label %327, !prof !27

327:                                              ; preds = %317
  %328 = ptrtoint %"class.blink::StaticBitmapImage"* %323 to i64
  %329 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %10, align 8
  %330 = zext i32 %324 to i64
  %331 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %329, i64 %330
  %332 = bitcast %class.scoped_refptr.5* %331 to i64*
  store i64 %328, i64* %332, align 8
  store %"class.blink::StaticBitmapImage"* null, %"class.blink::StaticBitmapImage"** %247, align 8
  %333 = load i32, i32* %12, align 4
  %334 = add i32 %333, 1
  store i32 %334, i32* %12, align 4
  br label %350

335:                                              ; preds = %317
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.2"* %0, %class.scoped_refptr.5* nonnull dereferenceable(8) %9) #14
  %336 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %247, align 8
  %337 = icmp eq %"class.blink::StaticBitmapImage"* %336, null
  br i1 %337, label %350, label %338

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %336, i64 0, i32 0, i32 1, i32 0
  %340 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = atomicrmw sub i32* %340, i32 1 acq_rel
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %350

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %339, i64 -2
  %345 = bitcast %"class.base::RefCountedThreadSafe.7"* %344 to %"class.blink::Image"*
  %346 = bitcast %"class.base::RefCountedThreadSafe.7"* %344 to void (%"class.blink::Image"*)***
  %347 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %347, i64 1
  %349 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %348, align 8
  call void %349(%"class.blink::Image"* nonnull %345) #14
  br label %350

350:                                              ; preds = %327, %335, %338, %343
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #14
  br label %351

351:                                              ; preds = %314, %350
  %352 = add nuw i32 %250, 1
  %353 = load i32, i32* %18, align 4
  %354 = icmp ult i32 %352, %353
  br i1 %354, label %249, label %248

355:                                              ; preds = %208, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  br label %356

356:                                              ; preds = %355, %4, %248
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.865"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #14
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i8* %8) #14
  %9 = bitcast %"class.WTF::StringTypeAdapter.865"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #14
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %2, i8* %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #14
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #14
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !27

41:                                               ; preds = %34
  call void @llvm.trap() #14
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #14
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #14
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #14
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !27

77:                                               ; preds = %70
  call void @llvm.trap() #14
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #14
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::StaticBitmapImage"* @_ZN5blink11ImageBitmap8TransferEv(%"class.blink::ImageBitmap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue20TransferImageBitmapsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_11ImageBitmapEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"* nocapture readnone, %"class.blink::HeapVector.275"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.2", align 8
  %6 = bitcast %"class.WTF::Vector.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  call void @_ZN5blink21SerializedScriptValue27TransferImageBitmapContentsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_11ImageBitmapEEELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector.2"* nonnull sret %5, %"class.v8::Isolate"* undef, %"class.blink::HeapVector.275"* dereferenceable(16) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS6_NS_16VectorBufferBaseIS4_S5_E11OffsetRangeESA_(%"class.WTF::VectorBuffer.3"* %7, %"class.WTF::VectorBuffer.3"* nonnull dereferenceable(24) %8, i64 0, i64 0) #14
  %9 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %11, label %38, label %13, !prof !27

13:                                               ; preds = %4
  %14 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %12, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %14, i64 %15
  br label %17

17:                                               ; preds = %34, %13
  %18 = phi %class.scoped_refptr.5* [ %35, %34 ], [ %14, %13 ]
  %19 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %18, i64 0, i32 0
  %20 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %19, align 8
  %21 = icmp eq %"class.blink::StaticBitmapImage"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %20, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.7"* %28 to %"class.blink::Image"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.7"* %28 to void (%"class.blink::Image"*)***
  %31 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %31, i64 1
  %33 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %32, align 8
  call void %33(%"class.blink::Image"* nonnull %29) #14
  br label %34

34:                                               ; preds = %27, %22, %17
  %35 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %18, i64 1
  %36 = icmp eq %class.scoped_refptr.5* %35, %16
  br i1 %36, label %37, label %17

37:                                               ; preds = %34
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %4
  %39 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %12, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %5, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr.5*
  %42 = icmp eq %class.scoped_refptr.5* %39, %41
  br i1 %42, label %44, label %43, !prof !26

43:                                               ; preds = %38
  call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.3"* nonnull %8, %class.scoped_refptr.5* %39) #14
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue23TransferOffscreenCanvasEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_15OffscreenCanvasEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"* nocapture readnone, %"class.v8::Isolate"* nocapture readnone, %"class.blink::HeapVector.284"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.blink::HeapHashSet.768", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.blink::OffscreenCanvas"*, align 8
  %13 = getelementptr inbounds %"class.blink::HeapVector.284", %"class.blink::HeapVector.284"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HeapVector.284", %"class.blink::HeapVector.284"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %536, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.blink::HeapHashSet.768"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.blink::HeapHashSet.768", %"class.blink::HeapHashSet.768"* %7, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::HeapHashSet.768", %"class.blink::HeapHashSet.768"* %7, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::HeapHashSet.768"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 20, i1 false) #14
  %22 = bitcast %"class.blink::OffscreenCanvas"** %12 to i8*
  %23 = bitcast %"class.blink::OffscreenCanvas"** %12 to i64*
  %24 = getelementptr inbounds %"class.blink::HeapHashSet.768", %"class.blink::HeapHashSet.768"* %7, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %17, %528
  %26 = phi i32 [ 0, %17 ], [ %529, %528 ]
  %27 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %28 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %28, align 8
  %30 = ptrtoint %"class.blink::OffscreenCanvas"* %29 to i64
  %31 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %19, align 8
  %32 = icmp eq %"class.blink::Member.290"* %31, null
  br i1 %32, label %93, label %33

33:                                               ; preds = %25
  %34 = load i32, i32* %20, align 8
  %35 = add i32 %34, -1
  %36 = zext i32 %35 to i64
  %37 = shl i64 %30, 32
  %38 = xor i64 %37, -1
  %39 = add i64 %38, %30
  %40 = lshr i64 %39, 22
  %41 = xor i64 %40, %39
  %42 = shl i64 %41, 13
  %43 = xor i64 %42, -1
  %44 = add i64 %41, %43
  %45 = lshr i64 %44, 8
  %46 = xor i64 %45, %44
  %47 = mul i64 %46, 9
  %48 = lshr i64 %47, 15
  %49 = xor i64 %48, %47
  %50 = shl i64 %49, 27
  %51 = xor i64 %50, -1
  %52 = add i64 %49, %51
  %53 = lshr i64 %52, 31
  %54 = xor i64 %53, %52
  %55 = trunc i64 %54 to i32
  %56 = and i32 %35, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %31, i64 %57
  %59 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %59, align 8
  %61 = icmp eq %"class.blink::OffscreenCanvas"* %60, %29
  br i1 %61, label %90, label %62

62:                                               ; preds = %33
  %63 = xor i32 %55, -1
  %64 = lshr i32 %55, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %76

76:                                               ; preds = %81, %62
  %77 = phi %"class.blink::OffscreenCanvas"* [ %60, %62 ], [ %88, %81 ]
  %78 = phi i64 [ %57, %62 ], [ %85, %81 ]
  %79 = phi i64 [ 0, %62 ], [ %83, %81 ]
  %80 = icmp eq %"class.blink::OffscreenCanvas"* %77, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %76
  %82 = icmp eq i64 %79, 0
  %83 = select i1 %82, i64 %75, i64 %79
  %84 = add i64 %83, %78
  %85 = and i64 %84, %36
  %86 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %31, i64 %85
  %87 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %87, align 8
  %89 = icmp eq %"class.blink::OffscreenCanvas"* %88, %29
  br i1 %89, label %90, label %76

90:                                               ; preds = %81, %33
  %91 = phi %"class.blink::Member.290"* [ %58, %33 ], [ %86, %81 ]
  %92 = icmp eq %"class.blink::Member.290"* %91, null
  br i1 %92, label %93, label %528

93:                                               ; preds = %76, %90, %25
  %94 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %95 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %96, i64 0, i32 11
  %98 = load i8, i8* %97, align 4, !range !25
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %305, label %100

100:                                              ; preds = %93
  %101 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #14
  %102 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #14
  %103 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #14
  %104 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %106 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %107 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 32, i1 false) #14
  store i8* %104, i8** %105, align 8
  %108 = urem i32 %26, 10
  %109 = trunc i32 %108 to i8
  %110 = or i8 %109, 48
  store i8 %110, i8* %104, align 1
  %111 = icmp ugt i32 %26, 9
  br i1 %111, label %112, label %128

112:                                              ; preds = %100
  %113 = udiv i32 %26, 10
  %114 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %114, i8** %105, align 8
  %115 = urem i32 %113, 10
  %116 = trunc i32 %115 to i8
  %117 = or i8 %116, 48
  store i8 %117, i8* %114, align 2
  %118 = icmp ugt i32 %26, 99
  br i1 %118, label %119, label %126

119:                                              ; preds = %112
  %120 = udiv i32 %26, 100
  %121 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %121, i8** %105, align 8
  %122 = urem i32 %120, 10
  %123 = trunc i32 %122 to i8
  %124 = or i8 %123, 48
  store i8 %124, i8* %121, align 1
  %125 = icmp ugt i32 %26, 999
  br i1 %125, label %130, label %139

126:                                              ; preds = %112
  %127 = ptrtoint i8* %114 to i64
  br label %142

128:                                              ; preds = %100
  %129 = ptrtoint i8* %104 to i64
  br label %142

130:                                              ; preds = %119, %130
  %131 = phi i32 [ %133, %130 ], [ %120, %119 ]
  %132 = load i8*, i8** %105, align 8
  %133 = udiv i32 %131, 10
  %134 = getelementptr inbounds i8, i8* %132, i64 -1
  store i8* %134, i8** %105, align 8
  %135 = urem i32 %133, 10
  %136 = trunc i32 %135 to i8
  %137 = or i8 %136, 48
  store i8 %137, i8* %134, align 1
  %138 = icmp ugt i32 %131, 99
  br i1 %138, label %130, label %139

139:                                              ; preds = %130, %119
  %140 = bitcast i8** %105 to i64*
  %141 = load i64, i64* %140, align 8
  br label %142

142:                                              ; preds = %139, %126, %128
  %143 = phi i64 [ %129, %128 ], [ %141, %139 ], [ %127, %126 ]
  %144 = ptrtoint i8* %107 to i64
  %145 = sub i64 %144, %143
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %106, align 8
  %147 = inttoptr i64 %143 to i8*
  %148 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %147, i32 %146) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #14
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %225, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #14
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !27

164:                                              ; preds = %157
  call void @llvm.trap() #14
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %165, %150
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = load atomic i32, i32* %151 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %167
  %173 = zext i32 %168 to i33
  %174 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %173, i33 1) #14
  %175 = extractvalue { i33, i1 } %174, 1
  %176 = extractvalue { i33, i1 } %174, 0
  %177 = icmp slt i33 %176, 0
  %178 = or i1 %175, %177
  br i1 %178, label %179, label %180, !prof !27

179:                                              ; preds = %172
  call void @llvm.trap() #14
  unreachable

180:                                              ; preds = %172
  %181 = trunc i33 %176 to i32
  store i32 %181, i32* %155, align 4
  br label %182

182:                                              ; preds = %180, %167
  %183 = phi i32 [ %181, %180 ], [ %168, %167 ]
  %184 = load atomic i32, i32* %151 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = add i32 %183, -1
  store i32 %188, i32* %155, align 4
  br label %189

189:                                              ; preds = %187, %182
  %190 = phi i32 [ %188, %187 ], [ %183, %182 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14
  br label %193

193:                                              ; preds = %189, %192
  %194 = load atomic i32, i32* %151 monotonic, align 4, !noalias !31
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = load i32, i32* %155, align 4
  br i1 %196, label %198, label %208

198:                                              ; preds = %193
  %199 = zext i32 %197 to i33
  %200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #14
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !27

205:                                              ; preds = %198
  call void @llvm.trap() #14, !noalias !31
  unreachable

206:                                              ; preds = %198
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %155, align 4, !noalias !31
  br label %208

208:                                              ; preds = %193, %206
  %209 = phi i32 [ %207, %206 ], [ %197, %193 ]
  %210 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.3 to i64), i64* %210, align 8, !alias.scope !31
  %211 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %211, align 8, !alias.scope !31
  %212 = load atomic i32, i32* %151 monotonic, align 4, !noalias !31
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %229

215:                                              ; preds = %208
  %216 = zext i32 %209 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #14
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !27

222:                                              ; preds = %215
  call void @llvm.trap() #14, !noalias !31
  unreachable

223:                                              ; preds = %215
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %155, align 4, !noalias !31
  br label %229

225:                                              ; preds = %142
  %226 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.3 to i64), i64* %226, align 8, !alias.scope !31
  %227 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8, !alias.scope !31
  %228 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %228, align 8, !alias.scope !31
  br label %241

229:                                              ; preds = %223, %208
  %230 = phi i32 [ %224, %223 ], [ %209, %208 ]
  %231 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %231, align 8, !alias.scope !31
  %232 = load atomic i32, i32* %151 monotonic, align 4, !noalias !31
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %229
  %236 = add i32 %230, -1
  store i32 %236, i32* %155, align 4, !noalias !31
  br label %237

237:                                              ; preds = %235, %229
  %238 = phi i32 [ %236, %235 ], [ %230, %229 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14, !noalias !31
  br label %241

241:                                              ; preds = %225, %237, %240
  %242 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %243, align 8
  %244 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %245 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %244, align 8
  %246 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %245, align 8
  call void %246(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #14
  br label %262

262:                                              ; preds = %241, %258, %261
  %263 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #14
  br label %279

279:                                              ; preds = %262, %275, %278
  br i1 %149, label %532, label %280

280:                                              ; preds = %279
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14
  %293 = load i32, i32* %285, align 4
  br label %294

294:                                              ; preds = %289, %292
  %295 = phi i32 [ %290, %289 ], [ %293, %292 ]
  %296 = load atomic i32, i32* %281 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %294
  %300 = add i32 %295, -1
  store i32 %300, i32* %285, align 4
  br label %301

301:                                              ; preds = %299, %294
  %302 = phi i32 [ %300, %299 ], [ %295, %294 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %532

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14
  br label %532

305:                                              ; preds = %93
  %306 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %307 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %306, i64 0, i32 0, i32 0
  %308 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::OffscreenCanvas", %"class.blink::OffscreenCanvas"* %308, i64 0, i32 7, i32 0, i32 0
  %310 = load %"class.blink::CanvasRenderingContext"*, %"class.blink::CanvasRenderingContext"** %309, align 8
  %311 = icmp eq %"class.blink::CanvasRenderingContext"* %310, null
  br i1 %311, label %517, label %312

312:                                              ; preds = %305
  %313 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #14
  %314 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #14
  %315 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %315) #14
  %316 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %317 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %318 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %319 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %315, i8 -86, i64 32, i1 false) #14
  store i8* %316, i8** %317, align 8
  %320 = urem i32 %26, 10
  %321 = udiv i32 %26, 10
  %322 = trunc i32 %320 to i8
  %323 = or i8 %322, 48
  store i8 %323, i8* %316, align 1
  %324 = icmp ugt i32 %26, 9
  br i1 %324, label %325, label %340

325:                                              ; preds = %312
  %326 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %326, i8** %317, align 8
  %327 = urem i32 %321, 10
  %328 = trunc i32 %327 to i8
  %329 = or i8 %328, 48
  store i8 %329, i8* %326, align 2
  %330 = icmp ugt i32 %26, 99
  br i1 %330, label %331, label %338

331:                                              ; preds = %325
  %332 = udiv i32 %26, 100
  %333 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %333, i8** %317, align 8
  %334 = urem i32 %332, 10
  %335 = trunc i32 %334 to i8
  %336 = or i8 %335, 48
  store i8 %336, i8* %333, align 1
  %337 = icmp ugt i32 %26, 999
  br i1 %337, label %342, label %351

338:                                              ; preds = %325
  %339 = ptrtoint i8* %326 to i64
  br label %354

340:                                              ; preds = %312
  %341 = ptrtoint i8* %316 to i64
  br label %354

342:                                              ; preds = %331, %342
  %343 = phi i32 [ %345, %342 ], [ %332, %331 ]
  %344 = load i8*, i8** %317, align 8
  %345 = udiv i32 %343, 10
  %346 = getelementptr inbounds i8, i8* %344, i64 -1
  store i8* %346, i8** %317, align 8
  %347 = urem i32 %345, 10
  %348 = trunc i32 %347 to i8
  %349 = or i8 %348, 48
  store i8 %349, i8* %346, align 1
  %350 = icmp ugt i32 %343, 99
  br i1 %350, label %342, label %351

351:                                              ; preds = %342, %331
  %352 = bitcast i8** %317 to i64*
  %353 = load i64, i64* %352, align 8
  br label %354

354:                                              ; preds = %351, %338, %340
  %355 = phi i64 [ %341, %340 ], [ %353, %351 ], [ %339, %338 ]
  %356 = ptrtoint i8* %319 to i64
  %357 = sub i64 %356, %355
  %358 = trunc i64 %357 to i32
  store i32 %358, i32* %318, align 8
  %359 = inttoptr i64 %355 to i8*
  %360 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %359, i32 %358) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %315) #14
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %437, label %362

362:                                              ; preds = %354
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %379

369:                                              ; preds = %362
  %370 = zext i32 %368 to i33
  %371 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %370, i33 1) #14
  %372 = extractvalue { i33, i1 } %371, 1
  %373 = extractvalue { i33, i1 } %371, 0
  %374 = icmp slt i33 %373, 0
  %375 = or i1 %372, %374
  br i1 %375, label %376, label %377, !prof !27

376:                                              ; preds = %369
  call void @llvm.trap() #14
  unreachable

377:                                              ; preds = %369
  %378 = trunc i33 %373 to i32
  store i32 %378, i32* %367, align 4
  br label %379

379:                                              ; preds = %377, %362
  %380 = phi i32 [ %378, %377 ], [ %368, %362 ]
  %381 = load atomic i32, i32* %363 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %394

384:                                              ; preds = %379
  %385 = zext i32 %380 to i33
  %386 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %385, i33 1) #14
  %387 = extractvalue { i33, i1 } %386, 1
  %388 = extractvalue { i33, i1 } %386, 0
  %389 = icmp slt i33 %388, 0
  %390 = or i1 %387, %389
  br i1 %390, label %391, label %392, !prof !27

391:                                              ; preds = %384
  call void @llvm.trap() #14
  unreachable

392:                                              ; preds = %384
  %393 = trunc i33 %388 to i32
  store i32 %393, i32* %367, align 4
  br label %394

394:                                              ; preds = %392, %379
  %395 = phi i32 [ %393, %392 ], [ %380, %379 ]
  %396 = load atomic i32, i32* %363 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = add i32 %395, -1
  store i32 %400, i32* %367, align 4
  br label %401

401:                                              ; preds = %399, %394
  %402 = phi i32 [ %400, %399 ], [ %395, %394 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #14
  br label %405

405:                                              ; preds = %401, %404
  %406 = load atomic i32, i32* %363 monotonic, align 4, !noalias !34
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = load i32, i32* %367, align 4
  br i1 %408, label %410, label %420

410:                                              ; preds = %405
  %411 = zext i32 %409 to i33
  %412 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %411, i33 1) #14
  %413 = extractvalue { i33, i1 } %412, 1
  %414 = extractvalue { i33, i1 } %412, 0
  %415 = icmp slt i33 %414, 0
  %416 = or i1 %413, %415
  br i1 %416, label %417, label %418, !prof !27

417:                                              ; preds = %410
  call void @llvm.trap() #14, !noalias !34
  unreachable

418:                                              ; preds = %410
  %419 = trunc i33 %414 to i32
  store i32 %419, i32* %367, align 4, !noalias !34
  br label %420

420:                                              ; preds = %405, %418
  %421 = phi i32 [ %419, %418 ], [ %409, %405 ]
  %422 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.3 to i64), i64* %422, align 8, !alias.scope !34
  %423 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %423, align 8, !alias.scope !34
  %424 = load atomic i32, i32* %363 monotonic, align 4, !noalias !34
  %425 = and i32 %424, 2
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %441

427:                                              ; preds = %420
  %428 = zext i32 %421 to i33
  %429 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %428, i33 1) #14
  %430 = extractvalue { i33, i1 } %429, 1
  %431 = extractvalue { i33, i1 } %429, 0
  %432 = icmp slt i33 %431, 0
  %433 = or i1 %430, %432
  br i1 %433, label %434, label %435, !prof !27

434:                                              ; preds = %427
  call void @llvm.trap() #14, !noalias !34
  unreachable

435:                                              ; preds = %427
  %436 = trunc i33 %431 to i32
  store i32 %436, i32* %367, align 4, !noalias !34
  br label %441

437:                                              ; preds = %354
  %438 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([26 x i8]* @.str.3 to i64), i64* %438, align 8, !alias.scope !34
  %439 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %439, align 8, !alias.scope !34
  %440 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8** %440, align 8, !alias.scope !34
  br label %453

441:                                              ; preds = %435, %420
  %442 = phi i32 [ %436, %435 ], [ %421, %420 ]
  %443 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8** %443, align 8, !alias.scope !34
  %444 = load atomic i32, i32* %363 monotonic, align 4, !noalias !34
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %449

447:                                              ; preds = %441
  %448 = add i32 %442, -1
  store i32 %448, i32* %367, align 4, !noalias !34
  br label %449

449:                                              ; preds = %447, %441
  %450 = phi i32 [ %448, %447 ], [ %442, %441 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #14, !noalias !34
  br label %453

453:                                              ; preds = %437, %449, %452
  %454 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %11)
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8
  %456 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %457 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %456, align 8
  %458 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %457, align 8
  call void %458(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %10) #14
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %474, label %461

461:                                              ; preds = %453
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #14
  br label %474

474:                                              ; preds = %453, %470, %473
  %475 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %475, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %477, label %491, label %478

478:                                              ; preds = %474
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  br i1 %482, label %485, label %487

485:                                              ; preds = %478
  %486 = add i32 %484, -1
  store i32 %486, i32* %483, align 4
  br label %487

487:                                              ; preds = %485, %478
  %488 = phi i32 [ %486, %485 ], [ %484, %478 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %476) #14
  br label %491

491:                                              ; preds = %474, %487, %490
  br i1 %361, label %532, label %492

492:                                              ; preds = %491
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = and i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %498 = load i32, i32* %497, align 4
  br i1 %496, label %499, label %501

499:                                              ; preds = %492
  %500 = add i32 %498, -1
  store i32 %500, i32* %497, align 4
  br label %501

501:                                              ; preds = %499, %492
  %502 = phi i32 [ %500, %499 ], [ %498, %492 ]
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %501
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #14
  %505 = load i32, i32* %497, align 4
  br label %506

506:                                              ; preds = %501, %504
  %507 = phi i32 [ %502, %501 ], [ %505, %504 ]
  %508 = load atomic i32, i32* %493 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  %512 = add i32 %507, -1
  store i32 %512, i32* %497, align 4
  br label %513

513:                                              ; preds = %511, %506
  %514 = phi i32 [ %512, %511 ], [ %507, %506 ]
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %532

516:                                              ; preds = %513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #14
  br label %532

517:                                              ; preds = %305
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %518 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %519 = bitcast %"class.blink::Member.290"* %518 to i64*
  %520 = load i64, i64* %519, align 8
  store i64 %520, i64* %23, align 8
  %521 = call { %"class.blink::Member.290"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.772"* nonnull %24, %"class.blink::OffscreenCanvas"** nonnull dereferenceable(8) %12, %"class.blink::OffscreenCanvas"** nonnull dereferenceable(8) %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  %522 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %523 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %522, i64 0, i32 0, i32 0
  %524 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %523, align 8
  call void @_ZN5blink15OffscreenCanvas11SetNeuteredEv(%"class.blink::OffscreenCanvas"* %524) #14
  %525 = call dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"* %13, i32 %26) #14
  %526 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %525, i64 0, i32 0, i32 0
  %527 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %526, align 8
  call void @_ZN5blink15OffscreenCanvas14RecordTransferEv(%"class.blink::OffscreenCanvas"* %527) #14
  br label %528

528:                                              ; preds = %90, %517
  %529 = add nuw i32 %26, 1
  %530 = load i32, i32* %14, align 4
  %531 = icmp ult i32 %529, %530
  br i1 %531, label %25, label %535

532:                                              ; preds = %516, %513, %491, %304, %301, %279
  %533 = phi i8* [ %102, %279 ], [ %102, %301 ], [ %102, %304 ], [ %314, %491 ], [ %314, %513 ], [ %314, %516 ]
  %534 = phi i8* [ %101, %279 ], [ %101, %301 ], [ %101, %304 ], [ %313, %491 ], [ %313, %513 ], [ %313, %516 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %533) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #14
  br label %535

535:                                              ; preds = %528, %532
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  br label %536

536:                                              ; preds = %4, %535
  ret void
}

declare void @_ZN5blink15OffscreenCanvas11SetNeuteredEv(%"class.blink::OffscreenCanvas"*) local_unnamed_addr #2

declare void @_ZN5blink15OffscreenCanvas14RecordTransferEv(%"class.blink::OffscreenCanvas"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue23TransferReadableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14ReadableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.633"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #14
  %6 = getelementptr inbounds %"class.blink::HeapVector.633", %"class.blink::HeapVector.633"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.639"*, %"class.blink::Member.639"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.633", %"class.blink::HeapVector.633"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.639", %"class.blink::Member.639"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  br label %17

17:                                               ; preds = %40, %13
  %18 = phi %"class.blink::Member.639"* [ %7, %13 ], [ %43, %40 ]
  %19 = getelementptr inbounds %"class.blink::Member.639", %"class.blink::Member.639"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %19, align 8
  %21 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %5) #14
  tail call void @_ZN5blink14ReadableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::ReadableStream"* %20, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %21, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  %22 = load i32, i32* %14, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %17
  %25 = tail call %"class.blink::ReadableStreamTransferringOptimizer"* @_ZN5blink14ReadableStream25TakeTransferringOptimizerEv(%"class.blink::ReadableStream"* %20) #14
  %26 = ptrtoint %"class.blink::ReadableStreamTransferringOptimizer"* %25 to i64
  %27 = load i32, i32* %16, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %15, i32 %28) #14
  %30 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %29, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.211"* %30 to i64*
  store i64 %26, i64* %33, align 8
  %34 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %24
  %36 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %32 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %37 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %37, i64 1
  %39 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %38, align 8
  tail call void %39(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %32) #14
  br label %40

40:                                               ; preds = %17, %24, %35
  %41 = load i32, i32* %14, align 8
  %42 = icmp ne i32 %41, 0
  %43 = getelementptr inbounds %"class.blink::Member.639", %"class.blink::Member.639"* %18, i64 1
  %44 = icmp eq %"class.blink::Member.639"* %43, %11
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %17

46:                                               ; preds = %40, %4
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue22TransferReadableStreamEPNS_11ScriptStateEPNS_16ExecutionContextEPNS_14ReadableStreamERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.blink::ReadableStream"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %2)
  tail call void @_ZN5blink14ReadableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::ReadableStream"* %3, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %6, %"class.blink::ExceptionState"* dereferenceable(72) %4) #14
  %7 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %5
  %11 = tail call %"class.blink::ReadableStreamTransferringOptimizer"* @_ZN5blink14ReadableStream25TakeTransferringOptimizerEv(%"class.blink::ReadableStream"* %3) #14
  %12 = ptrtoint %"class.blink::ReadableStreamTransferringOptimizer"* %11 to i64
  %13 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -1
  %17 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %13, i32 %16) #14
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %17, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.211"* %18 to i64*
  store i64 %12, i64* %21, align 8
  %22 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %10
  %24 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %20 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %25 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %25, i64 1
  %27 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %26, align 8
  tail call void %27(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %20) #14
  br label %28

28:                                               ; preds = %5, %10, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MessagePortDescriptor", align 8
  %4 = alloca %"class.blink::MessagePortDescriptorPair", align 8
  %5 = alloca %"class.blink::MessagePortDescriptor", align 8
  %6 = alloca %"class.blink::SerializedScriptValue::Stream", align 8
  %7 = alloca %"class.blink::MessagePortDescriptor", align 8
  %8 = bitcast %"class.blink::MessagePortDescriptorPair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 64, i1 false)
  call void @_ZN5blink25MessagePortDescriptorPairC1Ev(%"class.blink::MessagePortDescriptorPair"* nonnull %4) #14
  %9 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 168) #14
  %10 = bitcast i8* %9 to %"class.blink::MessagePort"*
  call void @_ZN5blink11MessagePortC1ERNS_16ExecutionContextE(%"class.blink::MessagePort"* %10, %"class.blink::ExecutionContext"* dereferenceable(376) %1) #14
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = getelementptr inbounds i8, i8* %9, i64 80
  %16 = bitcast i8* %15 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %16) #14
  %17 = getelementptr inbounds %"class.blink::MessagePortDescriptorPair", %"class.blink::MessagePortDescriptorPair"* %4, i64 0, i32 0
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %5, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %17) #14
  call void @_ZN5blink11MessagePort8EntangleENS_21MessagePortDescriptorE(%"class.blink::MessagePort"* %10, %"class.blink::MessagePortDescriptor"* nonnull %5) #14
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %5) #14
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %19 = bitcast %"class.blink::SerializedScriptValue::Stream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.blink::MessagePortDescriptorPair", %"class.blink::MessagePortDescriptorPair"* %4, i64 0, i32 1
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %7, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %20) #14
  %21 = bitcast %"class.blink::MessagePortDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 0, i32 0
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %3, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %7) #14
  call void @_ZN5blink18MessagePortChannelC1ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel"* nonnull %22, %"class.blink::MessagePortDescriptor"* nonnull %3) #14
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %3) #14
  %23 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.211"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21)
  %25 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %48, label %30, !prof !27

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %18, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %31, align 8
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %32, i64 %33, i32 0
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %34, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %22) #14
  %35 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %32, i64 %33, i32 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %23, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr.211"* %23 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %36, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.211"* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %32, i64 %33, i32 2
  %41 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 0, i32 2
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.217"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %42, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.217"* %40 to i64*
  store i64 %44, i64* %45, align 8
  %46 = load i32, i32* %25, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %25, align 4
  br label %49

48:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.207"* %18, %"class.blink::SerializedScriptValue::Stream"* nonnull dereferenceable(24) %6) #14
  br label %49

49:                                               ; preds = %30, %48
  %50 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %50, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %50, align 8
  %52 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %51 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %55 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %55, i64 1
  %57 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %56, align 8
  call void %57(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %51) #14
  br label %58

58:                                               ; preds = %53, %49
  %59 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %59, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %59, align 8
  %61 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %60 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %64 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %64, i64 1
  %66 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %65, align 8
  call void %66(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %60) #14
  br label %67

67:                                               ; preds = %58, %62
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %22) #14
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  call void @_ZN5blink25MessagePortDescriptorPairD1Ev(%"class.blink::MessagePortDescriptorPair"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #14
  ret %"class.blink::MessagePort"* %10
}

declare void @_ZN5blink14ReadableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::ReadableStream"*, %"class.blink::ScriptState"*, %"class.blink::MessagePort"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::ReadableStreamTransferringOptimizer"* @_ZN5blink14ReadableStream25TakeTransferringOptimizerEv(%"class.blink::ReadableStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue23TransferWritableStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_14WritableStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.650"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #14
  %6 = getelementptr inbounds %"class.blink::HeapVector.650", %"class.blink::HeapVector.650"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.656"*, %"class.blink::Member.656"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.650", %"class.blink::HeapVector.650"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.656", %"class.blink::Member.656"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  br label %17

17:                                               ; preds = %40, %13
  %18 = phi %"class.blink::Member.656"* [ %7, %13 ], [ %43, %40 ]
  %19 = getelementptr inbounds %"class.blink::Member.656", %"class.blink::Member.656"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::WritableStream"*, %"class.blink::WritableStream"** %19, align 8
  %21 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %5) #14
  tail call void @_ZN5blink14WritableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::WritableStream"* %20, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %21, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  %22 = load i32, i32* %14, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %17
  %25 = tail call %"class.blink::WritableStreamTransferringOptimizer"* @_ZN5blink14WritableStream25TakeTransferringOptimizerEv(%"class.blink::WritableStream"* %20) #14
  %26 = ptrtoint %"class.blink::WritableStreamTransferringOptimizer"* %25 to i64
  %27 = load i32, i32* %16, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %15, i32 %28) #14
  %30 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %29, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.217"* %30 to i64*
  store i64 %26, i64* %33, align 8
  %34 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %24
  %36 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %32 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %37 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %37, i64 1
  %39 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %38, align 8
  tail call void %39(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %32) #14
  br label %40

40:                                               ; preds = %17, %24, %35
  %41 = load i32, i32* %14, align 8
  %42 = icmp ne i32 %41, 0
  %43 = getelementptr inbounds %"class.blink::Member.656", %"class.blink::Member.656"* %18, i64 1
  %44 = icmp eq %"class.blink::Member.656"* %43, %11
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %17

46:                                               ; preds = %40, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue22TransferWritableStreamEPNS_11ScriptStateEPNS_16ExecutionContextEPNS_14WritableStreamERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.blink::WritableStream"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %2)
  tail call void @_ZN5blink14WritableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::WritableStream"* %3, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %6, %"class.blink::ExceptionState"* dereferenceable(72) %4) #14
  %7 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %5
  %11 = tail call %"class.blink::WritableStreamTransferringOptimizer"* @_ZN5blink14WritableStream25TakeTransferringOptimizerEv(%"class.blink::WritableStream"* %3) #14
  %12 = ptrtoint %"class.blink::WritableStreamTransferringOptimizer"* %11 to i64
  %13 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -1
  %17 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %13, i32 %16) #14
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %17, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.217"* %18 to i64*
  store i64 %12, i64* %21, align 8
  %22 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %10
  %24 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %20 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %25 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %25, i64 1
  %27 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %26, align 8
  tail call void %27(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %20) #14
  br label %28

28:                                               ; preds = %5, %10, %23
  ret void
}

declare void @_ZN5blink14WritableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::WritableStream"*, %"class.blink::ScriptState"*, %"class.blink::MessagePort"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::WritableStreamTransferringOptimizer"* @_ZN5blink14WritableStream25TakeTransferringOptimizerEv(%"class.blink::WritableStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue24TransferTransformStreamsEPNS_11ScriptStateERKNS_10HeapVectorINS_6MemberINS_15TransformStreamEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.blink::ScriptState"*, %"class.blink::HeapVector.673"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #14
  %6 = getelementptr inbounds %"class.blink::HeapVector.673", %"class.blink::HeapVector.673"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.679"*, %"class.blink::Member.679"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.673", %"class.blink::HeapVector.673"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.679", %"class.blink::Member.679"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %73, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  br label %17

17:                                               ; preds = %67, %13
  %18 = phi %"class.blink::Member.679"* [ %7, %13 ], [ %70, %67 ]
  %19 = getelementptr inbounds %"class.blink::Member.679", %"class.blink::Member.679"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::TransformStream"*, %"class.blink::TransformStream"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TransformStream", %"class.blink::TransformStream"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ReadableStream"*, %"class.blink::ReadableStream"** %21, align 8
  %23 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %5) #14
  tail call void @_ZN5blink14ReadableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::ReadableStream"* %22, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %23, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  %24 = load i32, i32* %14, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %73

26:                                               ; preds = %17
  %27 = tail call %"class.blink::ReadableStreamTransferringOptimizer"* @_ZN5blink14ReadableStream25TakeTransferringOptimizerEv(%"class.blink::ReadableStream"* %22) #14
  %28 = ptrtoint %"class.blink::ReadableStreamTransferringOptimizer"* %27 to i64
  %29 = load i32, i32* %16, align 4
  %30 = add i32 %29, -1
  %31 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %15, i32 %30) #14
  %32 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %31, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.211"* %32 to i64*
  store i64 %28, i64* %35, align 8
  %36 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %34, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %34 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %39 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %39, i64 1
  %41 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %40, align 8
  tail call void %41(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %34) #14
  br label %42

42:                                               ; preds = %26, %37
  %43 = load i32, i32* %14, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %73

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::TransformStream", %"class.blink::TransformStream"* %20, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::WritableStream"*, %"class.blink::WritableStream"** %46, align 8
  %48 = tail call %"class.blink::MessagePort"* @_ZN5blink21SerializedScriptValue16AddStreamChannelEPNS_16ExecutionContextE(%"class.blink::SerializedScriptValue"* %0, %"class.blink::ExecutionContext"* %5) #14
  tail call void @_ZN5blink14WritableStream9SerializeEPNS_11ScriptStateEPNS_11MessagePortERNS_14ExceptionStateE(%"class.blink::WritableStream"* %47, %"class.blink::ScriptState"* %1, %"class.blink::MessagePort"* %48, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  %49 = load i32, i32* %14, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %73

51:                                               ; preds = %45
  %52 = tail call %"class.blink::WritableStreamTransferringOptimizer"* @_ZN5blink14WritableStream25TakeTransferringOptimizerEv(%"class.blink::WritableStream"* %47) #14
  %53 = ptrtoint %"class.blink::WritableStreamTransferringOptimizer"* %52 to i64
  %54 = load i32, i32* %16, align 4
  %55 = add i32 %54, -1
  %56 = tail call dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"* %15, i32 %55) #14
  %57 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %56, i64 0, i32 2
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.217"* %57 to i64*
  store i64 %53, i64* %60, align 8
  %61 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %59, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %51
  %63 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %59 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %64 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %64, i64 1
  %66 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %65, align 8
  tail call void %66(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %59) #14
  br label %67

67:                                               ; preds = %51, %62
  %68 = load i32, i32* %14, align 8
  %69 = icmp ne i32 %68, 0
  %70 = getelementptr inbounds %"class.blink::Member.679", %"class.blink::Member.679"* %18, i64 1
  %71 = icmp eq %"class.blink::Member.679"* %70, %11
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %17

73:                                               ; preds = %17, %45, %42, %67, %4
  ret void
}

declare void @_ZN5blink25MessagePortDescriptorPairC1Ev(%"class.blink::MessagePortDescriptorPair"*) unnamed_addr #2

declare void @_ZN5blink11MessagePort8EntangleENS_21MessagePortDescriptorE(%"class.blink::MessagePort"*, %"class.blink::MessagePortDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink25MessagePortDescriptorPairD1Ev(%"class.blink::MessagePortDescriptorPair"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue20TransferArrayBuffersEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_18DOMArrayBufferBaseEEELj0EEERNS_14ExceptionStateE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"class.blink::HeapVector"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN5blink21SerializedScriptValue27TransferArrayBufferContentsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_18DOMArrayBufferBaseEEELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.blink::HeapVector"* dereferenceable(16) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer"* %7, %"class.WTF::VectorBuffer"* nonnull dereferenceable(32) %8, i64 0, i64 0) #14
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %11, label %22, label %13, !prof !27

13:                                               ; preds = %4
  %14 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %12, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %14, i64 %15
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi %"class.blink::ArrayBufferContents"* [ %19, %17 ], [ %14, %13 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %18) #14
  %19 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %18, i64 1
  %20 = icmp eq %"class.blink::ArrayBufferContents"* %19, %16
  br i1 %20, label %21, label %17

21:                                               ; preds = %17
  store i32 0, i32* %9, align 4
  br label %22

22:                                               ; preds = %21, %4
  %23 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %12, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"class.blink::ArrayBufferContents"*
  %26 = icmp eq %"class.blink::ArrayBufferContents"* %23, %25
  br i1 %26, label %28, label %27, !prof !26

27:                                               ; preds = %22
  call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %8, %"class.blink::ArrayBufferContents"* %23) #14
  br label %28

28:                                               ; preds = %22, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue27TransferArrayBufferContentsEPN2v87IsolateERKNS_10HeapVectorINS_6MemberINS_18DOMArrayBufferBaseEEELj0EEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::HeapVector"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.blink::HeapHashSet.815", align 8
  %12 = alloca %"class.blink::DOMArrayBufferBase"*, align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend", align 8
  %17 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 1, i64 0
  %22 = bitcast %"class.WTF::Vector"* %8 to i8**
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  store i8* %21, i8** %22, align 8
  store i32 1, i32* %19, align 8
  store i32 0, i32* %20, align 4
  %24 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = bitcast i8* %21 to %"class.blink::ArrayBufferContents"*
  br i1 %26, label %28, label %33

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %30 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %32, align 4
  br label %836

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %36 = zext i32 %25 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  br label %38

38:                                               ; preds = %33, %255
  %39 = phi %"class.blink::Member"* [ %35, %33 ], [ %256, %255 ]
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %41, i64 0, i32 2
  %43 = load i8, i8* %42, align 8, !range !25
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %255, label %45

45:                                               ; preds = %38
  %46 = ptrtoint %"class.blink::Member"* %39 to i64
  %47 = ptrtoint %"class.blink::Member"* %35 to i64
  %48 = sub i64 %46, %47
  %49 = lshr exact i64 %48, 3
  %50 = trunc i64 %49 to i32
  %51 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  %52 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #14
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %56 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %57 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false) #14
  store i8* %54, i8** %55, align 8
  %58 = urem i32 %50, 10
  %59 = udiv i32 %50, 10
  %60 = trunc i32 %58 to i8
  %61 = or i8 %60, 48
  store i8 %61, i8* %54, align 1
  %62 = icmp ugt i32 %50, 9
  br i1 %62, label %63, label %78

63:                                               ; preds = %45
  %64 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %64, i8** %55, align 8
  %65 = urem i32 %59, 10
  %66 = trunc i32 %65 to i8
  %67 = or i8 %66, 48
  store i8 %67, i8* %64, align 2
  %68 = icmp ugt i32 %50, 99
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = udiv i32 %50, 100
  %71 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %71, i8** %55, align 8
  %72 = urem i32 %70, 10
  %73 = trunc i32 %72 to i8
  %74 = or i8 %73, 48
  store i8 %74, i8* %71, align 1
  %75 = icmp ugt i32 %50, 999
  br i1 %75, label %80, label %89

76:                                               ; preds = %63
  %77 = ptrtoint i8* %64 to i64
  br label %92

78:                                               ; preds = %45
  %79 = ptrtoint i8* %54 to i64
  br label %92

80:                                               ; preds = %69, %80
  %81 = phi i32 [ %83, %80 ], [ %70, %69 ]
  %82 = load i8*, i8** %55, align 8
  %83 = udiv i32 %81, 10
  %84 = getelementptr inbounds i8, i8* %82, i64 -1
  store i8* %84, i8** %55, align 8
  %85 = urem i32 %83, 10
  %86 = trunc i32 %85 to i8
  %87 = or i8 %86, 48
  store i8 %87, i8* %84, align 1
  %88 = icmp ugt i32 %81, 99
  br i1 %88, label %80, label %89

89:                                               ; preds = %80, %69
  %90 = bitcast i8** %55 to i64*
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %89, %76, %78
  %93 = phi i64 [ %79, %78 ], [ %91, %89 ], [ %77, %76 ]
  %94 = ptrtoint i8* %57 to i64
  %95 = sub i64 %94, %93
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %56, align 8
  %97 = inttoptr i64 %93 to i8*
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %97, i32 %96) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #14
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %175, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %117

107:                                              ; preds = %100
  %108 = zext i32 %106 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #14
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !27

114:                                              ; preds = %107
  call void @llvm.trap() #14
  unreachable

115:                                              ; preds = %107
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %105, align 4
  br label %117

117:                                              ; preds = %115, %100
  %118 = phi i32 [ %116, %115 ], [ %106, %100 ]
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %132

122:                                              ; preds = %117
  %123 = zext i32 %118 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #14
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !27

129:                                              ; preds = %122
  call void @llvm.trap() #14
  unreachable

130:                                              ; preds = %122
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %105, align 4
  br label %132

132:                                              ; preds = %130, %117
  %133 = phi i32 [ %131, %130 ], [ %118, %117 ]
  %134 = load atomic i32, i32* %101 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = add i32 %133, -1
  store i32 %138, i32* %105, align 4
  br label %139

139:                                              ; preds = %137, %132
  %140 = phi i32 [ %138, %137 ], [ %133, %132 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  br label %143

143:                                              ; preds = %139, %142
  %144 = load atomic i32, i32* %101 monotonic, align 4, !noalias !37
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = load i32, i32* %105, align 4
  br i1 %146, label %148, label %158

148:                                              ; preds = %143
  %149 = zext i32 %147 to i33
  %150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #14
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !27

155:                                              ; preds = %148
  call void @llvm.trap() #14, !noalias !37
  unreachable

156:                                              ; preds = %148
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %105, align 4, !noalias !37
  br label %158

158:                                              ; preds = %143, %156
  %159 = phi i32 [ %157, %156 ], [ %147, %143 ]
  %160 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.11 to i64), i64* %160, align 8, !alias.scope !37
  %161 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %161, align 8, !alias.scope !37
  %162 = load atomic i32, i32* %101 monotonic, align 4, !noalias !37
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %179

165:                                              ; preds = %158
  %166 = zext i32 %159 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #14
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !27

172:                                              ; preds = %165
  call void @llvm.trap() #14, !noalias !37
  unreachable

173:                                              ; preds = %165
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %105, align 4, !noalias !37
  br label %179

175:                                              ; preds = %92
  %176 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.11 to i64), i64* %176, align 8, !alias.scope !37
  %177 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8, !alias.scope !37
  %178 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %178, align 8, !alias.scope !37
  br label %191

179:                                              ; preds = %173, %158
  %180 = phi i32 [ %174, %173 ], [ %159, %158 ]
  %181 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %181, align 8, !alias.scope !37
  %182 = load atomic i32, i32* %101 monotonic, align 4, !noalias !37
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  %186 = add i32 %180, -1
  store i32 %186, i32* %105, align 4, !noalias !37
  br label %187

187:                                              ; preds = %185, %179
  %188 = phi i32 [ %186, %185 ], [ %180, %179 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14, !noalias !37
  br label %191

191:                                              ; preds = %175, %187, %190
  %192 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %193, align 8
  %194 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %195 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %194, align 8
  %196 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %195, align 8
  call void %196(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %9) #14
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #14
  br label %212

212:                                              ; preds = %191, %208, %211
  %213 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #14
  br label %229

229:                                              ; preds = %212, %225, %228
  br i1 %99, label %258, label %230

230:                                              ; preds = %229
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  %243 = load i32, i32* %235, align 4
  br label %244

244:                                              ; preds = %239, %242
  %245 = phi i32 [ %240, %239 ], [ %243, %242 ]
  %246 = load atomic i32, i32* %231 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = add i32 %245, -1
  store i32 %250, i32* %235, align 4
  br label %251

251:                                              ; preds = %249, %244
  %252 = phi i32 [ %250, %249 ], [ %245, %244 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  br label %258

255:                                              ; preds = %38
  %256 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 1
  %257 = icmp eq %"class.blink::Member"* %256, %37
  br i1 %257, label %263, label %38

258:                                              ; preds = %229, %251, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  %259 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %260 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %259, i8** %260, align 8
  %261 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %261, align 8
  %262 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %262, align 4
  br label %836

263:                                              ; preds = %255
  %264 = icmp ugt i32 %25, 1
  br i1 %264, label %265, label %268

265:                                              ; preds = %263
  call void @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* nonnull %8, i32 %25) #14
  %266 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %18, align 8
  %267 = load i32, i32* %20, align 4
  br label %268

268:                                              ; preds = %265, %263
  %269 = phi i32 [ %267, %265 ], [ 0, %263 ]
  %270 = phi %"class.blink::ArrayBufferContents"* [ %266, %265 ], [ %27, %263 ]
  %271 = zext i32 %269 to i64
  %272 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %270, i64 %271
  %273 = icmp eq i32 %269, %25
  br i1 %273, label %284, label %274

274:                                              ; preds = %268
  %275 = zext i32 %25 to i64
  %276 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %270, i64 %275
  %277 = bitcast %"class.blink::ArrayBufferContents"* %272 to i8*
  %278 = ptrtoint %"class.blink::ArrayBufferContents"* %272 to i64
  %279 = getelementptr %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %276, i64 -1, i32 0, i32 0
  %280 = ptrtoint %"class.v8::BackingStore"** %279 to i64
  %281 = add i64 %280, 16
  %282 = sub i64 %281, %278
  %283 = and i64 %282, -16
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 %283, i1 false) #14
  br label %284

284:                                              ; preds = %268, %274
  store i32 %25, i32* %20, align 4
  %285 = bitcast %"class.blink::HeapHashSet.815"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #14
  %286 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %11, i64 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %11, i64 0, i32 0, i32 0, i32 1
  %288 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %11, i64 0, i32 0, i32 0, i32 2
  %289 = bitcast %"class.blink::HeapHashSet.815"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 0, i64 20, i1 false) #14
  %290 = load i32, i32* %24, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %822, label %292

292:                                              ; preds = %284
  %293 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %294 = bitcast %"class.blink::DOMArrayBufferBase"** %12 to i8*
  %295 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %11, i64 0, i32 0, i32 0
  %296 = bitcast %"class.blink::HeapVector"* %2 to i64*
  %297 = bitcast %"class.blink::DOMArrayBufferBase"** %12 to %"class.blink::DOMArrayBuffer"**
  br label %298

298:                                              ; preds = %820, %292
  %299 = phi i32 [ %290, %292 ], [ %814, %820 ]
  %300 = phi %"class.blink::Member"* [ %293, %292 ], [ %815, %820 ]
  %301 = phi %"class.blink::Member"* [ null, %292 ], [ %821, %820 ]
  %302 = phi %"class.blink::Member"* [ %293, %292 ], [ %816, %820 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #14
  store %"class.blink::DOMArrayBufferBase"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMArrayBufferBase"*), %"class.blink::DOMArrayBufferBase"** %12, align 8
  %303 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %302, i64 0, i32 0, i32 0
  %304 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %303, align 8
  store %"class.blink::DOMArrayBufferBase"* %304, %"class.blink::DOMArrayBufferBase"** %12, align 8
  %305 = ptrtoint %"class.blink::DOMArrayBufferBase"* %304 to i64
  %306 = icmp eq %"class.blink::Member"* %301, null
  br i1 %306, label %368, label %307

307:                                              ; preds = %298
  %308 = load i32, i32* %287, align 8
  %309 = add i32 %308, -1
  %310 = zext i32 %309 to i64
  %311 = shl i64 %305, 32
  %312 = xor i64 %311, -1
  %313 = add i64 %312, %305
  %314 = lshr i64 %313, 22
  %315 = xor i64 %314, %313
  %316 = shl i64 %315, 13
  %317 = xor i64 %316, -1
  %318 = add i64 %315, %317
  %319 = lshr i64 %318, 8
  %320 = xor i64 %319, %318
  %321 = mul i64 %320, 9
  %322 = lshr i64 %321, 15
  %323 = xor i64 %322, %321
  %324 = shl i64 %323, 27
  %325 = xor i64 %324, -1
  %326 = add i64 %323, %325
  %327 = lshr i64 %326, 31
  %328 = xor i64 %327, %326
  %329 = trunc i64 %328 to i32
  %330 = and i32 %309, %329
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %301, i64 %331
  %333 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %332, i64 0, i32 0, i32 0
  %334 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %333, align 8
  %335 = icmp eq %"class.blink::DOMArrayBufferBase"* %334, %304
  br i1 %335, label %364, label %336

336:                                              ; preds = %307
  %337 = xor i32 %329, -1
  %338 = lshr i32 %329, 23
  %339 = add i32 %338, %337
  %340 = shl i32 %339, 12
  %341 = xor i32 %340, %339
  %342 = lshr i32 %341, 7
  %343 = xor i32 %342, %341
  %344 = shl i32 %343, 2
  %345 = xor i32 %344, %343
  %346 = lshr i32 %345, 20
  %347 = xor i32 %346, %345
  %348 = or i32 %347, 1
  %349 = zext i32 %348 to i64
  br label %350

350:                                              ; preds = %355, %336
  %351 = phi %"class.blink::DOMArrayBufferBase"* [ %334, %336 ], [ %362, %355 ]
  %352 = phi i64 [ %331, %336 ], [ %359, %355 ]
  %353 = phi i64 [ 0, %336 ], [ %357, %355 ]
  %354 = icmp eq %"class.blink::DOMArrayBufferBase"* %351, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %350
  %356 = icmp eq i64 %353, 0
  %357 = select i1 %356, i64 %349, i64 %353
  %358 = add i64 %357, %352
  %359 = and i64 %358, %310
  %360 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %301, i64 %359
  %361 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %360, i64 0, i32 0, i32 0
  %362 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %361, align 8
  %363 = icmp eq %"class.blink::DOMArrayBufferBase"* %362, %304
  br i1 %363, label %364, label %350

364:                                              ; preds = %355, %307
  %365 = phi %"class.blink::Member"* [ %332, %307 ], [ %360, %355 ]
  %366 = icmp eq %"class.blink::Member"* %365, null
  br i1 %366, label %368, label %367

367:                                              ; preds = %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  br label %813

368:                                              ; preds = %350, %364, %298
  %369 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.819"* nonnull %295, %"class.blink::DOMArrayBufferBase"** nonnull dereferenceable(8) %12, %"class.blink::DOMArrayBufferBase"** nonnull dereferenceable(8) %12) #14
  %370 = load i64, i64* %296, align 8
  %371 = ptrtoint %"class.blink::Member"* %302 to i64
  %372 = sub i64 %371, %370
  %373 = lshr exact i64 %372, 3
  %374 = trunc i64 %373 to i32
  %375 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %12, align 8
  %376 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %375, i64 0, i32 1, i32 0, i32 0
  %377 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %376, align 8
  %378 = icmp eq %"class.v8::BackingStore"* %377, null
  %379 = bitcast %"class.blink::DOMArrayBufferBase"* %375 to %"class.blink::DOMArrayBuffer"*
  br i1 %378, label %595, label %380

380:                                              ; preds = %368
  %381 = call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %377) #14
  br i1 %381, label %384, label %382

382:                                              ; preds = %380
  %383 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %297, align 8
  br label %595

384:                                              ; preds = %380
  %385 = trunc i64 %373 to i32
  %386 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #14
  %387 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #14
  %388 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %388) #14
  %389 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %390 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %391 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %392 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 -86, i64 32, i1 false) #14
  store i8* %389, i8** %390, align 8
  %393 = urem i32 %385, 10
  %394 = udiv i32 %385, 10
  %395 = trunc i32 %393 to i8
  %396 = or i8 %395, 48
  store i8 %396, i8* %389, align 1
  %397 = icmp ugt i32 %385, 9
  br i1 %397, label %398, label %413

398:                                              ; preds = %384
  %399 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %399, i8** %390, align 8
  %400 = urem i32 %394, 10
  %401 = trunc i32 %400 to i8
  %402 = or i8 %401, 48
  store i8 %402, i8* %399, align 2
  %403 = icmp ugt i32 %385, 99
  br i1 %403, label %404, label %411

404:                                              ; preds = %398
  %405 = udiv i32 %385, 100
  %406 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %406, i8** %390, align 8
  %407 = urem i32 %405, 10
  %408 = trunc i32 %407 to i8
  %409 = or i8 %408, 48
  store i8 %409, i8* %406, align 1
  %410 = icmp ugt i32 %385, 999
  br i1 %410, label %415, label %424

411:                                              ; preds = %398
  %412 = ptrtoint i8* %399 to i64
  br label %427

413:                                              ; preds = %384
  %414 = ptrtoint i8* %389 to i64
  br label %427

415:                                              ; preds = %404, %415
  %416 = phi i32 [ %418, %415 ], [ %405, %404 ]
  %417 = load i8*, i8** %390, align 8
  %418 = udiv i32 %416, 10
  %419 = getelementptr inbounds i8, i8* %417, i64 -1
  store i8* %419, i8** %390, align 8
  %420 = urem i32 %418, 10
  %421 = trunc i32 %420 to i8
  %422 = or i8 %421, 48
  store i8 %422, i8* %419, align 1
  %423 = icmp ugt i32 %416, 99
  br i1 %423, label %415, label %424

424:                                              ; preds = %415, %404
  %425 = bitcast i8** %390 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %424, %411, %413
  %428 = phi i64 [ %414, %413 ], [ %426, %424 ], [ %412, %411 ]
  %429 = ptrtoint i8* %392 to i64
  %430 = sub i64 %429, %428
  %431 = trunc i64 %430 to i32
  store i32 %431, i32* %391, align 8
  %432 = inttoptr i64 %428 to i8*
  %433 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %432, i32 %431) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %388) #14
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %510, label %435

435:                                              ; preds = %427
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %452

442:                                              ; preds = %435
  %443 = zext i32 %441 to i33
  %444 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %443, i33 1) #14
  %445 = extractvalue { i33, i1 } %444, 1
  %446 = extractvalue { i33, i1 } %444, 0
  %447 = icmp slt i33 %446, 0
  %448 = or i1 %445, %447
  br i1 %448, label %449, label %450, !prof !27

449:                                              ; preds = %442
  call void @llvm.trap() #14
  unreachable

450:                                              ; preds = %442
  %451 = trunc i33 %446 to i32
  store i32 %451, i32* %440, align 4
  br label %452

452:                                              ; preds = %450, %435
  %453 = phi i32 [ %451, %450 ], [ %441, %435 ]
  %454 = load atomic i32, i32* %436 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %467

457:                                              ; preds = %452
  %458 = zext i32 %453 to i33
  %459 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %458, i33 1) #14
  %460 = extractvalue { i33, i1 } %459, 1
  %461 = extractvalue { i33, i1 } %459, 0
  %462 = icmp slt i33 %461, 0
  %463 = or i1 %460, %462
  br i1 %463, label %464, label %465, !prof !27

464:                                              ; preds = %457
  call void @llvm.trap() #14
  unreachable

465:                                              ; preds = %457
  %466 = trunc i33 %461 to i32
  store i32 %466, i32* %440, align 4
  br label %467

467:                                              ; preds = %465, %452
  %468 = phi i32 [ %466, %465 ], [ %453, %452 ]
  %469 = load atomic i32, i32* %436 monotonic, align 4
  %470 = and i32 %469, 2
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %474

472:                                              ; preds = %467
  %473 = add i32 %468, -1
  store i32 %473, i32* %440, align 4
  br label %474

474:                                              ; preds = %472, %467
  %475 = phi i32 [ %473, %472 ], [ %468, %467 ]
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %478

477:                                              ; preds = %474
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #14
  br label %478

478:                                              ; preds = %474, %477
  %479 = load atomic i32, i32* %436 monotonic, align 4, !noalias !40
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = load i32, i32* %440, align 4
  br i1 %481, label %483, label %493

483:                                              ; preds = %478
  %484 = zext i32 %482 to i33
  %485 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %484, i33 1) #14
  %486 = extractvalue { i33, i1 } %485, 1
  %487 = extractvalue { i33, i1 } %485, 0
  %488 = icmp slt i33 %487, 0
  %489 = or i1 %486, %488
  br i1 %489, label %490, label %491, !prof !27

490:                                              ; preds = %483
  call void @llvm.trap() #14, !noalias !40
  unreachable

491:                                              ; preds = %483
  %492 = trunc i33 %487 to i32
  store i32 %492, i32* %440, align 4, !noalias !40
  br label %493

493:                                              ; preds = %478, %491
  %494 = phi i32 [ %492, %491 ], [ %482, %478 ]
  %495 = bitcast %"class.WTF::StringAppend"* %14 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.12 to i64), i64* %495, align 8, !alias.scope !40
  %496 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %433, %"class.WTF::StringImpl"** %496, align 8, !alias.scope !40
  %497 = load atomic i32, i32* %436 monotonic, align 4, !noalias !40
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %514

500:                                              ; preds = %493
  %501 = zext i32 %494 to i33
  %502 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %501, i33 1) #14
  %503 = extractvalue { i33, i1 } %502, 1
  %504 = extractvalue { i33, i1 } %502, 0
  %505 = icmp slt i33 %504, 0
  %506 = or i1 %503, %505
  br i1 %506, label %507, label %508, !prof !27

507:                                              ; preds = %500
  call void @llvm.trap() #14, !noalias !40
  unreachable

508:                                              ; preds = %500
  %509 = trunc i33 %504 to i32
  store i32 %509, i32* %440, align 4, !noalias !40
  br label %514

510:                                              ; preds = %427
  %511 = bitcast %"class.WTF::StringAppend"* %14 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.12 to i64), i64* %511, align 8, !alias.scope !40
  %512 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %512, align 8, !alias.scope !40
  %513 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i8** %513, align 8, !alias.scope !40
  br label %526

514:                                              ; preds = %508, %493
  %515 = phi i32 [ %509, %508 ], [ %494, %493 ]
  %516 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i8** %516, align 8, !alias.scope !40
  %517 = load atomic i32, i32* %436 monotonic, align 4, !noalias !40
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %522

520:                                              ; preds = %514
  %521 = add i32 %515, -1
  store i32 %521, i32* %440, align 4, !noalias !40
  br label %522

522:                                              ; preds = %520, %514
  %523 = phi i32 [ %521, %520 ], [ %515, %514 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #14, !noalias !40
  br label %526

526:                                              ; preds = %510, %522, %525
  %527 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %14)
  %528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %527, %"class.WTF::StringImpl"** %528, align 8
  %529 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %530 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %529, align 8
  %531 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %530, align 8
  call void %531(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %13) #14
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  %533 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %533, label %547, label %534

534:                                              ; preds = %526
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %540 = load i32, i32* %539, align 4
  br i1 %538, label %541, label %543

541:                                              ; preds = %534
  %542 = add i32 %540, -1
  store i32 %542, i32* %539, align 4
  br label %543

543:                                              ; preds = %541, %534
  %544 = phi i32 [ %542, %541 ], [ %540, %534 ]
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %547

546:                                              ; preds = %543
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %532) #14
  br label %547

547:                                              ; preds = %526, %543, %546
  %548 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %564, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %549) #14
  br label %564

564:                                              ; preds = %547, %560, %563
  br i1 %434, label %590, label %565

565:                                              ; preds = %564
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %579

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #14
  %578 = load i32, i32* %570, align 4
  br label %579

579:                                              ; preds = %574, %577
  %580 = phi i32 [ %575, %574 ], [ %578, %577 ]
  %581 = load atomic i32, i32* %566 monotonic, align 4
  %582 = and i32 %581, 2
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %586

584:                                              ; preds = %579
  %585 = add i32 %580, -1
  store i32 %585, i32* %570, align 4
  br label %586

586:                                              ; preds = %584, %579
  %587 = phi i32 [ %585, %584 ], [ %580, %579 ]
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %586
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #14
  br label %590

590:                                              ; preds = %589, %586, %564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #14
  %591 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %592 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %591, i8** %592, align 8
  %593 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %593, align 8
  %594 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %594, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  br label %829

595:                                              ; preds = %382, %368
  %596 = phi %"class.blink::DOMArrayBuffer"* [ %383, %382 ], [ %379, %368 ]
  %597 = call dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 %374)
  %598 = call zeroext i1 @_ZN5blink14DOMArrayBuffer8TransferEPN2v87IsolateERNS_19ArrayBufferContentsE(%"class.blink::DOMArrayBuffer"* %596, %"class.v8::Isolate"* %1, %"class.blink::ArrayBufferContents"* dereferenceable(16) %597) #14
  br i1 %598, label %810, label %599

599:                                              ; preds = %595
  %600 = trunc i64 %373 to i32
  %601 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %601) #14
  %602 = bitcast %"class.WTF::StringAppend"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %602) #14
  %603 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %603) #14
  %604 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %605 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %606 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %607 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %603, i8 -86, i64 32, i1 false) #14
  store i8* %604, i8** %605, align 8
  %608 = urem i32 %600, 10
  %609 = udiv i32 %600, 10
  %610 = trunc i32 %608 to i8
  %611 = or i8 %610, 48
  store i8 %611, i8* %604, align 1
  %612 = icmp ugt i32 %600, 9
  br i1 %612, label %613, label %628

613:                                              ; preds = %599
  %614 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %614, i8** %605, align 8
  %615 = urem i32 %609, 10
  %616 = trunc i32 %615 to i8
  %617 = or i8 %616, 48
  store i8 %617, i8* %614, align 2
  %618 = icmp ugt i32 %600, 99
  br i1 %618, label %619, label %626

619:                                              ; preds = %613
  %620 = udiv i32 %600, 100
  %621 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %621, i8** %605, align 8
  %622 = urem i32 %620, 10
  %623 = trunc i32 %622 to i8
  %624 = or i8 %623, 48
  store i8 %624, i8* %621, align 1
  %625 = icmp ugt i32 %600, 999
  br i1 %625, label %630, label %639

626:                                              ; preds = %613
  %627 = ptrtoint i8* %614 to i64
  br label %642

628:                                              ; preds = %599
  %629 = ptrtoint i8* %604 to i64
  br label %642

630:                                              ; preds = %619, %630
  %631 = phi i32 [ %633, %630 ], [ %620, %619 ]
  %632 = load i8*, i8** %605, align 8
  %633 = udiv i32 %631, 10
  %634 = getelementptr inbounds i8, i8* %632, i64 -1
  store i8* %634, i8** %605, align 8
  %635 = urem i32 %633, 10
  %636 = trunc i32 %635 to i8
  %637 = or i8 %636, 48
  store i8 %637, i8* %634, align 1
  %638 = icmp ugt i32 %631, 99
  br i1 %638, label %630, label %639

639:                                              ; preds = %630, %619
  %640 = bitcast i8** %605 to i64*
  %641 = load i64, i64* %640, align 8
  br label %642

642:                                              ; preds = %639, %626, %628
  %643 = phi i64 [ %629, %628 ], [ %641, %639 ], [ %627, %626 ]
  %644 = ptrtoint i8* %607 to i64
  %645 = sub i64 %644, %643
  %646 = trunc i64 %645 to i32
  store i32 %646, i32* %606, align 8
  %647 = inttoptr i64 %643 to i8*
  %648 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %647, i32 %646) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %603) #14
  %649 = icmp eq %"class.WTF::StringImpl"* %648, null
  br i1 %649, label %725, label %650

650:                                              ; preds = %642
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load atomic i32, i32* %651 monotonic, align 4
  %653 = and i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 0
  %656 = load i32, i32* %655, align 4
  br i1 %654, label %657, label %667

657:                                              ; preds = %650
  %658 = zext i32 %656 to i33
  %659 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %658, i33 1) #14
  %660 = extractvalue { i33, i1 } %659, 1
  %661 = extractvalue { i33, i1 } %659, 0
  %662 = icmp slt i33 %661, 0
  %663 = or i1 %660, %662
  br i1 %663, label %664, label %665, !prof !27

664:                                              ; preds = %657
  call void @llvm.trap() #14
  unreachable

665:                                              ; preds = %657
  %666 = trunc i33 %661 to i32
  store i32 %666, i32* %655, align 4
  br label %667

667:                                              ; preds = %665, %650
  %668 = phi i32 [ %666, %665 ], [ %656, %650 ]
  %669 = load atomic i32, i32* %651 monotonic, align 4
  %670 = and i32 %669, 2
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %682

672:                                              ; preds = %667
  %673 = zext i32 %668 to i33
  %674 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %673, i33 1) #14
  %675 = extractvalue { i33, i1 } %674, 1
  %676 = extractvalue { i33, i1 } %674, 0
  %677 = icmp slt i33 %676, 0
  %678 = or i1 %675, %677
  br i1 %678, label %679, label %680, !prof !27

679:                                              ; preds = %672
  call void @llvm.trap() #14
  unreachable

680:                                              ; preds = %672
  %681 = trunc i33 %676 to i32
  store i32 %681, i32* %655, align 4
  br label %682

682:                                              ; preds = %680, %667
  %683 = phi i32 [ %681, %680 ], [ %668, %667 ]
  %684 = load atomic i32, i32* %651 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %687, label %689

687:                                              ; preds = %682
  %688 = add i32 %683, -1
  store i32 %688, i32* %655, align 4
  br label %689

689:                                              ; preds = %687, %682
  %690 = phi i32 [ %688, %687 ], [ %683, %682 ]
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %692, label %693

692:                                              ; preds = %689
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #14
  br label %693

693:                                              ; preds = %689, %692
  %694 = load atomic i32, i32* %651 monotonic, align 4, !noalias !43
  %695 = and i32 %694, 2
  %696 = icmp eq i32 %695, 0
  %697 = load i32, i32* %655, align 4
  br i1 %696, label %698, label %708

698:                                              ; preds = %693
  %699 = zext i32 %697 to i33
  %700 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %699, i33 1) #14
  %701 = extractvalue { i33, i1 } %700, 1
  %702 = extractvalue { i33, i1 } %700, 0
  %703 = icmp slt i33 %702, 0
  %704 = or i1 %701, %703
  br i1 %704, label %705, label %706, !prof !27

705:                                              ; preds = %698
  call void @llvm.trap() #14, !noalias !43
  unreachable

706:                                              ; preds = %698
  %707 = trunc i33 %702 to i32
  store i32 %707, i32* %655, align 4, !noalias !43
  br label %708

708:                                              ; preds = %693, %706
  %709 = phi i32 [ %707, %706 ], [ %697, %693 ]
  %710 = bitcast %"class.WTF::StringAppend"* %16 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.11 to i64), i64* %710, align 8, !alias.scope !43
  %711 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %648, %"class.WTF::StringImpl"** %711, align 8, !alias.scope !43
  %712 = load atomic i32, i32* %651 monotonic, align 4, !noalias !43
  %713 = and i32 %712, 2
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %729

715:                                              ; preds = %708
  %716 = zext i32 %709 to i33
  %717 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %716, i33 1) #14
  %718 = extractvalue { i33, i1 } %717, 1
  %719 = extractvalue { i33, i1 } %717, 0
  %720 = icmp slt i33 %719, 0
  %721 = or i1 %718, %720
  br i1 %721, label %722, label %723, !prof !27

722:                                              ; preds = %715
  call void @llvm.trap() #14, !noalias !43
  unreachable

723:                                              ; preds = %715
  %724 = trunc i33 %719 to i32
  store i32 %724, i32* %655, align 4, !noalias !43
  br label %729

725:                                              ; preds = %642
  %726 = bitcast %"class.WTF::StringAppend"* %16 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.11 to i64), i64* %726, align 8, !alias.scope !43
  %727 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %727, align 8, !alias.scope !43
  %728 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8** %728, align 8, !alias.scope !43
  br label %741

729:                                              ; preds = %723, %708
  %730 = phi i32 [ %724, %723 ], [ %709, %708 ]
  %731 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8** %731, align 8, !alias.scope !43
  %732 = load atomic i32, i32* %651 monotonic, align 4, !noalias !43
  %733 = and i32 %732, 2
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %737

735:                                              ; preds = %729
  %736 = add i32 %730, -1
  store i32 %736, i32* %655, align 4, !noalias !43
  br label %737

737:                                              ; preds = %735, %729
  %738 = phi i32 [ %736, %735 ], [ %730, %729 ]
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %737
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #14, !noalias !43
  br label %741

741:                                              ; preds = %725, %737, %740
  %742 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %16)
  %743 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %742, %"class.WTF::StringImpl"** %743, align 8
  %744 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %745 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %744, align 8
  %746 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %745, align 8
  call void %746(%"class.blink::ExceptionState"* %3, i32 25, %"class.WTF::String"* nonnull dereferenceable(8) %15) #14
  %747 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %743, align 8
  %748 = icmp eq %"class.WTF::StringImpl"* %747, null
  br i1 %748, label %762, label %749

749:                                              ; preds = %741
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %751 = load atomic i32, i32* %750 monotonic, align 4
  %752 = and i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %755 = load i32, i32* %754, align 4
  br i1 %753, label %756, label %758

756:                                              ; preds = %749
  %757 = add i32 %755, -1
  store i32 %757, i32* %754, align 4
  br label %758

758:                                              ; preds = %756, %749
  %759 = phi i32 [ %757, %756 ], [ %755, %749 ]
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %761, label %762

761:                                              ; preds = %758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %747) #14
  br label %762

762:                                              ; preds = %741, %758, %761
  %763 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %763, align 8
  %765 = icmp eq %"class.WTF::StringImpl"* %764, null
  br i1 %765, label %779, label %766

766:                                              ; preds = %762
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %772 = load i32, i32* %771, align 4
  br i1 %770, label %773, label %775

773:                                              ; preds = %766
  %774 = add i32 %772, -1
  store i32 %774, i32* %771, align 4
  br label %775

775:                                              ; preds = %773, %766
  %776 = phi i32 [ %774, %773 ], [ %772, %766 ]
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %779

778:                                              ; preds = %775
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %764) #14
  br label %779

779:                                              ; preds = %762, %775, %778
  br i1 %649, label %805, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %782 = load atomic i32, i32* %781 monotonic, align 4
  %783 = and i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  br i1 %784, label %787, label %789

787:                                              ; preds = %780
  %788 = add i32 %786, -1
  store i32 %788, i32* %785, align 4
  br label %789

789:                                              ; preds = %787, %780
  %790 = phi i32 [ %788, %787 ], [ %786, %780 ]
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %794

792:                                              ; preds = %789
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #14
  %793 = load i32, i32* %785, align 4
  br label %794

794:                                              ; preds = %789, %792
  %795 = phi i32 [ %790, %789 ], [ %793, %792 ]
  %796 = load atomic i32, i32* %781 monotonic, align 4
  %797 = and i32 %796, 2
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %801

799:                                              ; preds = %794
  %800 = add i32 %795, -1
  store i32 %800, i32* %785, align 4
  br label %801

801:                                              ; preds = %799, %794
  %802 = phi i32 [ %800, %799 ], [ %795, %794 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #14
  br label %805

805:                                              ; preds = %804, %801, %779
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %602) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %601) #14
  %806 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %807 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %806, i8** %807, align 8
  %808 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %808, align 8
  %809 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %809, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  br label %829

810:                                              ; preds = %595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  %811 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %812 = load i32, i32* %24, align 4
  br label %813

813:                                              ; preds = %810, %367
  %814 = phi i32 [ %812, %810 ], [ %299, %367 ]
  %815 = phi %"class.blink::Member"* [ %811, %810 ], [ %300, %367 ]
  %816 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %302, i64 1
  %817 = zext i32 %814 to i64
  %818 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %815, i64 %817
  %819 = icmp eq %"class.blink::Member"* %816, %818
  br i1 %819, label %822, label %820

820:                                              ; preds = %813
  %821 = load %"class.blink::Member"*, %"class.blink::Member"** %286, align 8
  br label %298

822:                                              ; preds = %813, %284
  %823 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %824 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %825 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %824, i8** %825, align 8
  %826 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %826, align 8
  %827 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %827, align 4
  %828 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer"* %823, %"class.WTF::VectorBuffer"* nonnull dereferenceable(32) %828, i64 0, i64 0) #14
  br label %829

829:                                              ; preds = %805, %590, %822
  %830 = load %"class.blink::Member"*, %"class.blink::Member"** %286, align 8
  %831 = icmp eq %"class.blink::Member"* %830, null
  br i1 %831, label %835, label %832

832:                                              ; preds = %829
  %833 = bitcast %"class.blink::Member"* %830 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %833) #14
  %834 = bitcast %"class.blink::HeapHashSet.815"* %11 to i64*
  store atomic i64 0, i64* %834 monotonic, align 8
  store i32 0, i32* %287, align 8
  store i32 0, i32* %288, align 4
  br label %835

835:                                              ; preds = %829, %832
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #14
  br label %836

836:                                              ; preds = %258, %835, %28
  %837 = load i32, i32* %20, align 4
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %848, label %839, !prof !27

839:                                              ; preds = %836
  %840 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %18, align 8
  %841 = zext i32 %837 to i64
  %842 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %840, i64 %841
  br label %843

843:                                              ; preds = %843, %839
  %844 = phi %"class.blink::ArrayBufferContents"* [ %845, %843 ], [ %840, %839 ]
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %844) #14
  %845 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %844, i64 1
  %846 = icmp eq %"class.blink::ArrayBufferContents"* %845, %842
  br i1 %846, label %847, label %843

847:                                              ; preds = %843
  store i32 0, i32* %20, align 4
  br label %848

848:                                              ; preds = %847, %836
  %849 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %18, align 8
  %850 = icmp eq %"class.blink::ArrayBufferContents"* %849, %27
  br i1 %850, label %853, label %851, !prof !26

851:                                              ; preds = %848
  %852 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %852, %"class.blink::ArrayBufferContents"* %849) #14
  br label %853

853:                                              ; preds = %848, %851
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue23CloneSharedArrayBuffersERNS_10HeapVectorINS_6MemberINS_20DOMSharedArrayBufferEEELj0EEE(%"class.blink::SerializedScriptValue"*, %"class.blink::HeapVector.806"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapHashSet.815", align 8
  %4 = alloca %"class.blink::DOMSharedArrayBuffer"*, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector.806", %"class.blink::HeapVector.806"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %157, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashSet.815"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.blink::HeapHashSet.815"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 20, i1 false) #14
  %13 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %6
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  tail call void @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %13, i32 %6) #14
  br label %18

18:                                               ; preds = %17, %8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %20, i64 %23
  %25 = icmp eq i32 %22, %6
  br i1 %25, label %36, label %26

26:                                               ; preds = %18
  %27 = zext i32 %6 to i64
  %28 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %20, i64 %27
  %29 = bitcast %"class.blink::ArrayBufferContents"* %24 to i8*
  %30 = ptrtoint %"class.blink::ArrayBufferContents"* %24 to i64
  %31 = getelementptr %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %28, i64 -1, i32 0, i32 0
  %32 = ptrtoint %"class.v8::BackingStore"** %31 to i64
  %33 = add i64 %32, 16
  %34 = sub i64 %33, %30
  %35 = and i64 %34, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 %35, i1 false) #14
  br label %36

36:                                               ; preds = %18, %26
  store i32 %6, i32* %21, align 4
  %37 = getelementptr inbounds %"class.blink::HeapVector.806", %"class.blink::HeapVector.806"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %5, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %37, align 8
  %42 = bitcast %"class.blink::DOMSharedArrayBuffer"** %4 to i8*
  %43 = getelementptr inbounds %"class.blink::HeapHashSet.815", %"class.blink::HeapHashSet.815"* %3, i64 0, i32 0, i32 0
  br label %45

44:                                               ; preds = %147, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  br label %157

45:                                               ; preds = %155, %40
  %46 = phi i32 [ %38, %40 ], [ %148, %155 ]
  %47 = phi %"class.blink::Member.812"* [ %41, %40 ], [ %149, %155 ]
  %48 = phi %"class.blink::Member"* [ null, %40 ], [ %156, %155 ]
  %49 = phi i32 [ 0, %40 ], [ %150, %155 ]
  %50 = phi %"class.blink::Member.812"* [ %41, %40 ], [ %151, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  store %"class.blink::DOMSharedArrayBuffer"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMSharedArrayBuffer"*), %"class.blink::DOMSharedArrayBuffer"** %4, align 8
  %51 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::DOMSharedArrayBuffer"*, %"class.blink::DOMSharedArrayBuffer"** %51, align 8
  store %"class.blink::DOMSharedArrayBuffer"* %52, %"class.blink::DOMSharedArrayBuffer"** %4, align 8
  %53 = bitcast %"class.blink::DOMSharedArrayBuffer"* %52 to %"class.blink::DOMArrayBufferBase"*
  %54 = ptrtoint %"class.blink::DOMSharedArrayBuffer"* %52 to i64
  %55 = icmp eq %"class.blink::Member"* %48, null
  br i1 %55, label %116, label %56

56:                                               ; preds = %45
  %57 = load i32, i32* %11, align 8
  %58 = add i32 %57, -1
  %59 = zext i32 %58 to i64
  %60 = shl i64 %54, 32
  %61 = xor i64 %60, -1
  %62 = add i64 %61, %54
  %63 = lshr i64 %62, 22
  %64 = xor i64 %63, %62
  %65 = shl i64 %64, 13
  %66 = xor i64 %65, -1
  %67 = add i64 %64, %66
  %68 = lshr i64 %67, 8
  %69 = xor i64 %68, %67
  %70 = mul i64 %69, 9
  %71 = lshr i64 %70, 15
  %72 = xor i64 %71, %70
  %73 = shl i64 %72, 27
  %74 = xor i64 %73, -1
  %75 = add i64 %72, %74
  %76 = lshr i64 %75, 31
  %77 = xor i64 %76, %75
  %78 = trunc i64 %77 to i32
  %79 = and i32 %58, %78
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 %80
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %82, align 8
  %84 = icmp eq %"class.blink::DOMArrayBufferBase"* %83, %53
  br i1 %84, label %113, label %85

85:                                               ; preds = %56
  %86 = xor i32 %78, -1
  %87 = lshr i32 %78, 23
  %88 = add i32 %87, %86
  %89 = shl i32 %88, 12
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 7
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 2
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 20
  %96 = xor i32 %95, %94
  %97 = or i32 %96, 1
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %104, %85
  %100 = phi %"class.blink::DOMArrayBufferBase"* [ %83, %85 ], [ %111, %104 ]
  %101 = phi i64 [ %80, %85 ], [ %108, %104 ]
  %102 = phi i64 [ 0, %85 ], [ %106, %104 ]
  %103 = icmp eq %"class.blink::DOMArrayBufferBase"* %100, null
  br i1 %103, label %116, label %104

104:                                              ; preds = %99
  %105 = icmp eq i64 %102, 0
  %106 = select i1 %105, i64 %98, i64 %102
  %107 = add i64 %106, %101
  %108 = and i64 %107, %59
  %109 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 %108
  %110 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %110, align 8
  %112 = icmp eq %"class.blink::DOMArrayBufferBase"* %111, %53
  br i1 %112, label %113, label %99

113:                                              ; preds = %104, %56
  %114 = phi %"class.blink::Member"* [ %81, %56 ], [ %109, %104 ]
  %115 = icmp eq %"class.blink::Member"* %114, null
  br i1 %115, label %116, label %147

116:                                              ; preds = %99, %113, %45
  %117 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_20DOMSharedArrayBufferERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.819"* nonnull %43, %"class.blink::DOMSharedArrayBuffer"** nonnull dereferenceable(8) %4, %"class.blink::DOMSharedArrayBuffer"** nonnull dereferenceable(8) %4) #14
  %118 = load %"class.blink::DOMSharedArrayBuffer"*, %"class.blink::DOMSharedArrayBuffer"** %4, align 8
  %119 = call dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %49) #14
  %120 = getelementptr inbounds %"class.blink::DOMSharedArrayBuffer", %"class.blink::DOMSharedArrayBuffer"* %118, i64 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::DOMSharedArrayBuffer", %"class.blink::DOMSharedArrayBuffer"* %118, i64 0, i32 0, i32 1, i32 0, i32 1
  %124 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %123, align 8
  %125 = icmp eq %"class.std::__1::__shared_weak_count"* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %116
  %127 = icmp eq %"class.v8::BackingStore"* %122, null
  br i1 %127, label %141, label %142

128:                                              ; preds = %116
  %129 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %124, i64 0, i32 0, i32 1
  %130 = atomicrmw add i64* %129, i64 1 monotonic
  %131 = icmp ne %"class.v8::BackingStore"* %122, null
  %132 = atomicrmw add i64* %129, i64 -1 acq_rel
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %124, i64 0, i32 0
  %136 = bitcast %"class.std::__1::__shared_weak_count"* %124 to void (%"class.std::__1::__shared_count"*)***
  %137 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %137, i64 2
  %139 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %138, align 8
  call void %139(%"class.std::__1::__shared_count"* %135) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %124) #14
  br i1 %131, label %142, label %141

140:                                              ; preds = %128
  br i1 %131, label %142, label %141

141:                                              ; preds = %140, %134, %126
  call void @_ZN5blink19ArrayBufferContents6DetachEv(%"class.blink::ArrayBufferContents"* %119) #14
  br label %143

142:                                              ; preds = %140, %134, %126
  call void @_ZN5blink19ArrayBufferContents9ShareWithERS0_(%"class.blink::ArrayBufferContents"* %120, %"class.blink::ArrayBufferContents"* dereferenceable(16) %119) #14
  br label %143

143:                                              ; preds = %141, %142
  %144 = add i32 %49, 1
  %145 = load %"class.blink::Member.812"*, %"class.blink::Member.812"** %37, align 8
  %146 = load i32, i32* %5, align 4
  br label %147

147:                                              ; preds = %113, %143
  %148 = phi i32 [ %146, %143 ], [ %46, %113 ]
  %149 = phi %"class.blink::Member.812"* [ %145, %143 ], [ %47, %113 ]
  %150 = phi i32 [ %144, %143 ], [ %49, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  %151 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %50, i64 1
  %152 = zext i32 %148 to i64
  %153 = getelementptr inbounds %"class.blink::Member.812", %"class.blink::Member.812"* %149, i64 %152
  %154 = icmp eq %"class.blink::Member.812"* %151, %153
  br i1 %154, label %44, label %155

155:                                              ; preds = %147
  %156 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %45

157:                                              ; preds = %2, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E, align 8
  %6 = icmp eq %"class.blink::SerializedScriptValueFactory"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = tail call noalias i8* @malloc(i64 8) #14
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink28SerializedScriptValueFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i8* %8, i8** bitcast (%"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E to i8**), align 8
  %10 = bitcast i8* %8 to %"class.blink::SerializedScriptValueFactory"*
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi %"class.blink::SerializedScriptValueFactory"* [ %5, %3 ], [ %10, %7 ]
  %13 = icmp eq %"class.blink::SerializedScriptValue"* %0, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0)) #14
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %21

21:                                               ; preds = %11, %14, %18
  %22 = bitcast %"class.blink::SerializedScriptValueFactory"* %12 to %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)***
  %23 = load %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)**, %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)*, %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)** %23, i64 2
  %25 = load %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)*, %"class.v8::Value"* (%"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"*)** %24, align 8
  %26 = call %"class.v8::Value"* %25(%"class.blink::SerializedScriptValueFactory"* %12, %"class.blink::SerializedScriptValue"* %0, %"class.v8::Isolate"* %1, %"struct.blink::SerializedScriptValue::DeserializeOptions"* dereferenceable(16) %2) #14
  ret %"class.v8::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::UnpackedSerializedScriptValue"* @_ZN5blink21SerializedScriptValue6UnpackE13scoped_refptrIS0_E(%"class.blink::SerializedScriptValue"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::SerializedScriptValue"* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_29UnpackedSerializedScriptValueEEEPhm(i64 40) #14
  %5 = bitcast i8* %4 to %"class.blink::UnpackedSerializedScriptValue"*
  tail call void @_ZN5blink29UnpackedSerializedScriptValueC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::UnpackedSerializedScriptValue"* %5, %"class.blink::SerializedScriptValue"* nonnull %0) #14
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi %"class.blink::UnpackedSerializedScriptValue"* [ %5, %3 ], [ null, %1 ]
  ret %"class.blink::UnpackedSerializedScriptValue"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21SerializedScriptValue17HasPackedContentsEv(%"class.blink::SerializedScriptValue"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ true, %5 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21SerializedScriptValue20ExtractTransferablesEPN2v87IsolateERKNS_10HeapVectorINS_11ScriptValueELj0EEERNS_13TransferablesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::HeapVector.824"* nocapture readonly dereferenceable(16), %"class.blink::Transferables"* dereferenceable(152), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend.832", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = load %"class.blink::SerializedScriptValueFactory"*, %"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E, align 8
  %12 = icmp eq %"class.blink::SerializedScriptValueFactory"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = tail call noalias i8* @malloc(i64 8) #14
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink28SerializedScriptValueFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store i8* %14, i8** bitcast (%"class.blink::SerializedScriptValueFactory"** @_ZN5blink28SerializedScriptValueFactory9instance_E to i8**), align 8
  %16 = bitcast i8* %14 to %"class.blink::SerializedScriptValueFactory"*
  br label %17

17:                                               ; preds = %4, %13
  %18 = phi %"class.blink::SerializedScriptValueFactory"* [ %11, %4 ], [ %16, %13 ]
  %19 = getelementptr inbounds %"class.blink::HeapVector.824", %"class.blink::HeapVector.824"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HeapVector.824", %"class.blink::HeapVector.824"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %633, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.blink::SerializedScriptValueFactory"* %18 to i1 (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"*, %"class.blink::ExceptionState"*)***
  br label %28

28:                                               ; preds = %26, %629
  %29 = phi i32 [ 0, %26 ], [ %630, %629 ]
  %30 = phi %"class.blink::ScriptValue"* [ %20, %26 ], [ %631, %629 ]
  %31 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %30) #14
  %32 = icmp eq %"class.v8::Value"* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.v8::Value"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %38, label %414

38:                                               ; preds = %33
  %39 = add i64 %35, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i64 %35, -4294967296
  %43 = zext i32 %41 to i64
  %44 = or i64 %42, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 67
  br i1 %48, label %49, label %414

49:                                               ; preds = %38
  %50 = add i64 %35, 23
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = ashr i32 %52, 1
  switch i32 %53, label %414 [
    i32 5, label %54
    i32 3, label %54
  ]

54:                                               ; preds = %49, %49, %28
  %55 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #14
  %56 = bitcast %"class.WTF::StringAppend.832"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #14
  %57 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #14
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %60 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %61 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #14
  store i8* %58, i8** %59, align 8
  %62 = urem i32 %29, 10
  %63 = trunc i32 %62 to i8
  %64 = or i8 %63, 48
  store i8 %64, i8* %58, align 1
  %65 = icmp ugt i32 %29, 9
  br i1 %65, label %66, label %82

66:                                               ; preds = %54
  %67 = udiv i32 %29, 10
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %68, i8** %59, align 8
  %69 = urem i32 %67, 10
  %70 = trunc i32 %69 to i8
  %71 = or i8 %70, 48
  store i8 %71, i8* %68, align 2
  %72 = icmp ugt i32 %29, 99
  br i1 %72, label %73, label %80

73:                                               ; preds = %66
  %74 = udiv i32 %29, 100
  %75 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %75, i8** %59, align 8
  %76 = urem i32 %74, 10
  %77 = trunc i32 %76 to i8
  %78 = or i8 %77, 48
  store i8 %78, i8* %75, align 1
  %79 = icmp ugt i32 %29, 999
  br i1 %79, label %84, label %93

80:                                               ; preds = %66
  %81 = ptrtoint i8* %68 to i64
  br label %96

82:                                               ; preds = %54
  %83 = ptrtoint i8* %58 to i64
  br label %96

84:                                               ; preds = %73, %84
  %85 = phi i32 [ %87, %84 ], [ %74, %73 ]
  %86 = load i8*, i8** %59, align 8
  %87 = udiv i32 %85, 10
  %88 = getelementptr inbounds i8, i8* %86, i64 -1
  store i8* %88, i8** %59, align 8
  %89 = urem i32 %87, 10
  %90 = trunc i32 %89 to i8
  %91 = or i8 %90, 48
  store i8 %91, i8* %88, align 1
  %92 = icmp ugt i32 %85, 99
  br i1 %92, label %84, label %93

93:                                               ; preds = %84, %73
  %94 = bitcast i8** %59 to i64*
  %95 = load i64, i64* %94, align 8
  br label %96

96:                                               ; preds = %93, %80, %82
  %97 = phi i64 [ %83, %82 ], [ %95, %93 ], [ %81, %80 ]
  %98 = ptrtoint i8* %61 to i64
  %99 = sub i64 %98, %97
  %100 = trunc i64 %99 to i32
  store i32 %100, i32* %60, align 8
  %101 = inttoptr i64 %97 to i8*
  %102 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %101, i32 %100) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #14
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %188, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %121

111:                                              ; preds = %104
  %112 = zext i32 %110 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #14
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !27

118:                                              ; preds = %111
  call void @llvm.trap() #14
  unreachable

119:                                              ; preds = %111
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %109, align 4
  br label %121

121:                                              ; preds = %119, %104
  %122 = phi i32 [ %120, %119 ], [ %110, %104 ]
  %123 = load atomic i32, i32* %105 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %136

126:                                              ; preds = %121
  %127 = zext i32 %122 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #14
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !27

133:                                              ; preds = %126
  call void @llvm.trap() #14
  unreachable

134:                                              ; preds = %126
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %109, align 4
  br label %136

136:                                              ; preds = %134, %121
  %137 = phi i32 [ %135, %134 ], [ %122, %121 ]
  %138 = load atomic i32, i32* %105 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  %142 = add i32 %137, -1
  store i32 %142, i32* %109, align 4
  br label %143

143:                                              ; preds = %141, %136
  %144 = phi i32 [ %142, %141 ], [ %137, %136 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  br label %147

147:                                              ; preds = %143, %146
  %148 = load atomic i32, i32* %105 monotonic, align 4, !noalias !46
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = load i32, i32* %109, align 4
  br i1 %150, label %152, label %162

152:                                              ; preds = %147
  %153 = zext i32 %151 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #14
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !27

159:                                              ; preds = %152
  call void @llvm.trap() #14, !noalias !46
  unreachable

160:                                              ; preds = %152
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %109, align 4, !noalias !46
  br label %162

162:                                              ; preds = %147, %160
  %163 = phi i32 [ %161, %160 ], [ %151, %147 ]
  %164 = load atomic i32, i32* %105 monotonic, align 4, !noalias !46
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %177

167:                                              ; preds = %162
  %168 = zext i32 %163 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #14
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !27

174:                                              ; preds = %167
  call void @llvm.trap() #14, !noalias !46
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %109, align 4, !noalias !46
  br label %177

177:                                              ; preds = %175, %162
  %178 = phi i32 [ %176, %175 ], [ %163, %162 ]
  %179 = load atomic i32, i32* %105 monotonic, align 4, !noalias !46
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = add i32 %178, -1
  store i32 %183, i32* %109, align 4, !noalias !46
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i32 [ %183, %182 ], [ %178, %177 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14, !noalias !46
  br label %188

188:                                              ; preds = %96, %184, %187
  %189 = bitcast %"class.v8::Value"* %31 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = and i64 %190, 3
  %192 = icmp eq i64 %191, 1
  br i1 %192, label %193, label %211

193:                                              ; preds = %188
  %194 = add i64 %190, -1
  %195 = inttoptr i64 %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = and i64 %190, -4294967296
  %198 = zext i32 %196 to i64
  %199 = or i64 %197, %198
  %200 = add i64 %199, 7
  %201 = inttoptr i64 %200 to i16*
  %202 = load i16, i16* %201, align 2
  %203 = icmp eq i16 %202, 67
  br i1 %203, label %204, label %211

204:                                              ; preds = %193
  %205 = add i64 %190, 23
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, -2
  %209 = icmp eq i32 %208, 10
  %210 = select i1 %209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)
  br label %211

211:                                              ; preds = %204, %193, %188
  %212 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), %188 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), %193 ], [ %210, %204 ]
  br i1 %103, label %258, label %213

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4, !noalias !49
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %230

220:                                              ; preds = %213
  %221 = zext i32 %219 to i33
  %222 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %221, i33 1) #14
  %223 = extractvalue { i33, i1 } %222, 1
  %224 = extractvalue { i33, i1 } %222, 0
  %225 = icmp slt i33 %224, 0
  %226 = or i1 %223, %225
  br i1 %226, label %227, label %228, !prof !27

227:                                              ; preds = %220
  call void @llvm.trap() #14, !noalias !49
  unreachable

228:                                              ; preds = %220
  %229 = trunc i33 %224 to i32
  store i32 %229, i32* %218, align 4, !noalias !49
  br label %230

230:                                              ; preds = %213, %228
  %231 = phi i32 [ %229, %228 ], [ %219, %213 ]
  %232 = load atomic i32, i32* %214 monotonic, align 4, !noalias !49
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  br i1 %234, label %236, label %246

236:                                              ; preds = %230
  %237 = zext i32 %231 to i33
  %238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #14
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !27

243:                                              ; preds = %236
  call void @llvm.trap() #14, !noalias !49
  unreachable

244:                                              ; preds = %236
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4, !noalias !49
  br label %246

246:                                              ; preds = %244, %230
  %247 = phi i32 [ %245, %244 ], [ %231, %230 ]
  %248 = ptrtoint i8* %212 to i64
  %249 = load atomic i32, i32* %214 monotonic, align 4, !noalias !49
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %246
  %253 = add i32 %247, -1
  store i32 %253, i32* %235, align 4, !noalias !49
  br label %254

254:                                              ; preds = %252, %246
  %255 = phi i32 [ %253, %252 ], [ %247, %246 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %267

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14, !noalias !49
  br label %267

258:                                              ; preds = %211
  %259 = ptrtoint i8* %212 to i64
  %260 = bitcast %"class.WTF::StringAppend.832"* %8 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.5 to i64), i64* %260, align 8, !alias.scope !52
  %261 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %261, align 8, !alias.scope !52
  %262 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 0, i32 1
  %263 = bitcast i8** %262 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.6 to i64), i64* %263, align 8, !alias.scope !52
  %264 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 1
  %265 = bitcast i8** %264 to i64*
  store i64 %259, i64* %265, align 8, !alias.scope !52
  %266 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %266, align 8, !alias.scope !52
  br label %320

267:                                              ; preds = %257, %254
  %268 = load atomic i32, i32* %214 monotonic, align 4, !noalias !52
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %284

271:                                              ; preds = %267
  %272 = load i32, i32* %235, align 4, !noalias !52
  %273 = zext i32 %272 to i33
  %274 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #14
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !27

279:                                              ; preds = %271
  call void @llvm.trap() #14, !noalias !52
  unreachable

280:                                              ; preds = %271
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %235, align 4, !noalias !52
  %282 = bitcast %"class.WTF::StringAppend.832"* %8 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.5 to i64), i64* %282, align 8, !alias.scope !52
  %283 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %283, align 8, !alias.scope !52
  br label %288

284:                                              ; preds = %267
  %285 = bitcast %"class.WTF::StringAppend.832"* %8 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.5 to i64), i64* %285, align 8, !alias.scope !52
  %286 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %286, align 8, !alias.scope !52
  %287 = load i32, i32* %235, align 4, !noalias !52
  br label %288

288:                                              ; preds = %284, %280
  %289 = phi i32 [ %281, %280 ], [ %287, %284 ]
  %290 = phi %"class.WTF::StringImpl"** [ %283, %280 ], [ %286, %284 ]
  %291 = load atomic i32, i32* %214 monotonic, align 4, !noalias !52
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %304

294:                                              ; preds = %288
  %295 = zext i32 %289 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #14
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !27

301:                                              ; preds = %294
  call void @llvm.trap() #14, !noalias !52
  unreachable

302:                                              ; preds = %294
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %235, align 4, !noalias !52
  br label %304

304:                                              ; preds = %302, %288
  %305 = phi i32 [ %303, %302 ], [ %289, %288 ]
  %306 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 0, i32 1
  %307 = bitcast i8** %306 to i64*
  store i64 ptrtoint ([23 x i8]* @.str.6 to i64), i64* %307, align 8, !alias.scope !52
  %308 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 0, i32 1
  %309 = bitcast i8** %308 to i64*
  store i64 %248, i64* %309, align 8, !alias.scope !52
  %310 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %310, align 8, !alias.scope !52
  %311 = load atomic i32, i32* %214 monotonic, align 4, !noalias !52
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %304
  %315 = add i32 %305, -1
  store i32 %315, i32* %235, align 4, !noalias !52
  br label %316

316:                                              ; preds = %314, %304
  %317 = phi i32 [ %315, %314 ], [ %305, %304 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14, !noalias !52
  br label %320

320:                                              ; preds = %258, %316, %319
  %321 = phi %"class.WTF::StringImpl"** [ %261, %258 ], [ %290, %316 ], [ %290, %319 ]
  %322 = phi i1 [ true, %258 ], [ false, %316 ], [ false, %319 ]
  %323 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend.832"* nonnull %8)
  %324 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %323, %"class.WTF::StringImpl"** %324, align 8
  %325 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %326 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %326, i64 3
  %328 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %327, align 8
  call void %328(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %320
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #14
  br label %344

344:                                              ; preds = %320, %340, %343
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #14
  br label %360

360:                                              ; preds = %344, %356, %359
  br i1 %322, label %374, label %361

361:                                              ; preds = %360
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  br label %374

374:                                              ; preds = %360, %370, %373
  br i1 %103, label %413, label %375

375:                                              ; preds = %374
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  br i1 %379, label %382, label %384

382:                                              ; preds = %375
  %383 = add i32 %381, -1
  store i32 %383, i32* %380, align 4
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32 [ %383, %382 ], [ %381, %375 ]
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  br label %388

388:                                              ; preds = %384, %387
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  br i1 %392, label %395, label %397

395:                                              ; preds = %388
  %396 = add i32 %394, -1
  store i32 %396, i32* %393, align 4
  br label %397

397:                                              ; preds = %395, %388
  %398 = phi i32 [ %396, %395 ], [ %394, %388 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %402

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  %401 = load i32, i32* %393, align 4
  br label %402

402:                                              ; preds = %397, %400
  %403 = phi i32 [ %398, %397 ], [ %401, %400 ]
  %404 = load atomic i32, i32* %389 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %409

407:                                              ; preds = %402
  %408 = add i32 %403, -1
  store i32 %408, i32* %393, align 4
  br label %409

409:                                              ; preds = %407, %402
  %410 = phi i32 [ %408, %407 ], [ %403, %402 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  br label %413

413:                                              ; preds = %374, %409, %412
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #14
  br label %633

414:                                              ; preds = %49, %38, %33
  %415 = load i1 (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"*, %"class.blink::ExceptionState"*)*** %27, align 8
  %416 = load i1 (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::SerializedScriptValueFactory"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::Transferables"*, %"class.blink::ExceptionState"*)** %415, align 8
  %417 = tail call zeroext i1 %416(%"class.blink::SerializedScriptValueFactory"* %18, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %31, i32 %29, %"class.blink::Transferables"* dereferenceable(152) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #14
  br i1 %417, label %629, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %420 = load i32, i32* %419, align 8
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %633

422:                                              ; preds = %418
  %423 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #14
  %424 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %424) #14
  %425 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %425) #14
  %426 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %427 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %428 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %429 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %425, i8 -86, i64 32, i1 false) #14
  store i8* %426, i8** %427, align 8
  %430 = urem i32 %29, 10
  %431 = udiv i32 %29, 10
  %432 = trunc i32 %430 to i8
  %433 = or i8 %432, 48
  store i8 %433, i8* %426, align 1
  %434 = icmp ugt i32 %29, 9
  br i1 %434, label %435, label %450

435:                                              ; preds = %422
  %436 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %436, i8** %427, align 8
  %437 = urem i32 %431, 10
  %438 = trunc i32 %437 to i8
  %439 = or i8 %438, 48
  store i8 %439, i8* %436, align 2
  %440 = icmp ugt i32 %29, 99
  br i1 %440, label %441, label %448

441:                                              ; preds = %435
  %442 = udiv i32 %29, 100
  %443 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %443, i8** %427, align 8
  %444 = urem i32 %442, 10
  %445 = trunc i32 %444 to i8
  %446 = or i8 %445, 48
  store i8 %446, i8* %443, align 1
  %447 = icmp ugt i32 %29, 999
  br i1 %447, label %452, label %461

448:                                              ; preds = %435
  %449 = ptrtoint i8* %436 to i64
  br label %464

450:                                              ; preds = %422
  %451 = ptrtoint i8* %426 to i64
  br label %464

452:                                              ; preds = %441, %452
  %453 = phi i32 [ %455, %452 ], [ %442, %441 ]
  %454 = load i8*, i8** %427, align 8
  %455 = udiv i32 %453, 10
  %456 = getelementptr inbounds i8, i8* %454, i64 -1
  store i8* %456, i8** %427, align 8
  %457 = urem i32 %455, 10
  %458 = trunc i32 %457 to i8
  %459 = or i8 %458, 48
  store i8 %459, i8* %456, align 1
  %460 = icmp ugt i32 %453, 99
  br i1 %460, label %452, label %461

461:                                              ; preds = %452, %441
  %462 = bitcast i8** %427 to i64*
  %463 = load i64, i64* %462, align 8
  br label %464

464:                                              ; preds = %461, %448, %450
  %465 = phi i64 [ %451, %450 ], [ %463, %461 ], [ %449, %448 ]
  %466 = ptrtoint i8* %429 to i64
  %467 = sub i64 %466, %465
  %468 = trunc i64 %467 to i32
  store i32 %468, i32* %428, align 8
  %469 = inttoptr i64 %465 to i8*
  %470 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %469, i32 %468) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %425) #14
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %547, label %472

472:                                              ; preds = %464
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  br i1 %476, label %479, label %489

479:                                              ; preds = %472
  %480 = zext i32 %478 to i33
  %481 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %480, i33 1) #14
  %482 = extractvalue { i33, i1 } %481, 1
  %483 = extractvalue { i33, i1 } %481, 0
  %484 = icmp slt i33 %483, 0
  %485 = or i1 %482, %484
  br i1 %485, label %486, label %487, !prof !27

486:                                              ; preds = %479
  call void @llvm.trap() #14
  unreachable

487:                                              ; preds = %479
  %488 = trunc i33 %483 to i32
  store i32 %488, i32* %477, align 4
  br label %489

489:                                              ; preds = %487, %472
  %490 = phi i32 [ %488, %487 ], [ %478, %472 ]
  %491 = load atomic i32, i32* %473 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %504

494:                                              ; preds = %489
  %495 = zext i32 %490 to i33
  %496 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %495, i33 1) #14
  %497 = extractvalue { i33, i1 } %496, 1
  %498 = extractvalue { i33, i1 } %496, 0
  %499 = icmp slt i33 %498, 0
  %500 = or i1 %497, %499
  br i1 %500, label %501, label %502, !prof !27

501:                                              ; preds = %494
  call void @llvm.trap() #14
  unreachable

502:                                              ; preds = %494
  %503 = trunc i33 %498 to i32
  store i32 %503, i32* %477, align 4
  br label %504

504:                                              ; preds = %502, %489
  %505 = phi i32 [ %503, %502 ], [ %490, %489 ]
  %506 = load atomic i32, i32* %473 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %511

509:                                              ; preds = %504
  %510 = add i32 %505, -1
  store i32 %510, i32* %477, align 4
  br label %511

511:                                              ; preds = %509, %504
  %512 = phi i32 [ %510, %509 ], [ %505, %504 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #14
  br label %515

515:                                              ; preds = %511, %514
  %516 = load atomic i32, i32* %473 monotonic, align 4, !noalias !55
  %517 = and i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = load i32, i32* %477, align 4
  br i1 %518, label %520, label %530

520:                                              ; preds = %515
  %521 = zext i32 %519 to i33
  %522 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %521, i33 1) #14
  %523 = extractvalue { i33, i1 } %522, 1
  %524 = extractvalue { i33, i1 } %522, 0
  %525 = icmp slt i33 %524, 0
  %526 = or i1 %523, %525
  br i1 %526, label %527, label %528, !prof !27

527:                                              ; preds = %520
  call void @llvm.trap() #14, !noalias !55
  unreachable

528:                                              ; preds = %520
  %529 = trunc i33 %524 to i32
  store i32 %529, i32* %477, align 4, !noalias !55
  br label %530

530:                                              ; preds = %515, %528
  %531 = phi i32 [ %529, %528 ], [ %519, %515 ]
  %532 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.5 to i64), i64* %532, align 8, !alias.scope !55
  %533 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %470, %"class.WTF::StringImpl"** %533, align 8, !alias.scope !55
  %534 = load atomic i32, i32* %473 monotonic, align 4, !noalias !55
  %535 = and i32 %534, 2
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %551

537:                                              ; preds = %530
  %538 = zext i32 %531 to i33
  %539 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %538, i33 1) #14
  %540 = extractvalue { i33, i1 } %539, 1
  %541 = extractvalue { i33, i1 } %539, 0
  %542 = icmp slt i33 %541, 0
  %543 = or i1 %540, %542
  br i1 %543, label %544, label %545, !prof !27

544:                                              ; preds = %537
  call void @llvm.trap() #14, !noalias !55
  unreachable

545:                                              ; preds = %537
  %546 = trunc i33 %541 to i32
  store i32 %546, i32* %477, align 4, !noalias !55
  br label %551

547:                                              ; preds = %464
  %548 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.5 to i64), i64* %548, align 8, !alias.scope !55
  %549 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %549, align 8, !alias.scope !55
  %550 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %550, align 8, !alias.scope !55
  br label %563

551:                                              ; preds = %545, %530
  %552 = phi i32 [ %546, %545 ], [ %531, %530 ]
  %553 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %553, align 8, !alias.scope !55
  %554 = load atomic i32, i32* %473 monotonic, align 4, !noalias !55
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %559

557:                                              ; preds = %551
  %558 = add i32 %552, -1
  store i32 %558, i32* %477, align 4, !noalias !55
  br label %559

559:                                              ; preds = %557, %551
  %560 = phi i32 [ %558, %557 ], [ %552, %551 ]
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %559
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #14, !noalias !55
  br label %563

563:                                              ; preds = %547, %559, %562
  %564 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %565 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %564, %"class.WTF::StringImpl"** %565, align 8
  %566 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %567 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %566, align 8
  %568 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %567, i64 3
  %569 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %568, align 8
  call void %569(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %9) #14
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %565, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %563
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #14
  br label %585

585:                                              ; preds = %563, %581, %584
  %586 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %587 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %588 = icmp eq %"class.WTF::StringImpl"* %587, null
  br i1 %588, label %602, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 0
  %595 = load i32, i32* %594, align 4
  br i1 %593, label %596, label %598

596:                                              ; preds = %589
  %597 = add i32 %595, -1
  store i32 %597, i32* %594, align 4
  br label %598

598:                                              ; preds = %596, %589
  %599 = phi i32 [ %597, %596 ], [ %595, %589 ]
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %587) #14
  br label %602

602:                                              ; preds = %585, %598, %601
  br i1 %471, label %628, label %603

603:                                              ; preds = %602
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #14
  %616 = load i32, i32* %608, align 4
  br label %617

617:                                              ; preds = %612, %615
  %618 = phi i32 [ %613, %612 ], [ %616, %615 ]
  %619 = load atomic i32, i32* %604 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %624

622:                                              ; preds = %617
  %623 = add i32 %618, -1
  store i32 %623, i32* %608, align 4
  br label %624

624:                                              ; preds = %622, %617
  %625 = phi i32 [ %623, %622 ], [ %618, %617 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #14
  br label %628

628:                                              ; preds = %602, %624, %627
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %424) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #14
  br label %633

629:                                              ; preds = %414
  %630 = add i32 %29, 1
  %631 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 1
  %632 = icmp eq %"class.blink::ScriptValue"* %631, %24
  br i1 %632, label %633, label %28

633:                                              ; preds = %629, %17, %418, %628, %413
  %634 = phi i1 [ false, %413 ], [ false, %628 ], [ false, %418 ], [ true, %17 ], [ true, %629 ]
  ret i1 %634
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend.832"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %9 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0
  %13 = bitcast %"class.WTF::StringTypeAdapter.865"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #14
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %9, i8* %15) #14
  %16 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #14
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %4, i8* %18) #14
  %19 = bitcast %"class.WTF::StringTypeAdapter.865"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #14
  %21 = load i8*, i8** %20, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i8* %21) #14
  %22 = bitcast %"class.WTF::StringTypeAdapter.865"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #14
  %24 = load i8*, i8** %23, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %2, i8* %24) #14
  %25 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %29 = select i1 %27, %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"* %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br i1 %33, label %81, label %34

34:                                               ; preds = %1
  %35 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %36 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.832"* %0)
  %37 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %36, i8** nonnull dereferenceable(8) %10) #14
  %38 = load i8*, i8** %10, align 8
  %39 = bitcast %"class.WTF::StringTypeAdapter.865"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #14
  %40 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %8, i8* %40) #14
  %41 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringTypeAdapter.865"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #14
  %43 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %7, i8* %43) #14
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %41, i8* %38) #14
  %44 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %41) #14
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.865"* nonnull %7, i8* %46) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  %47 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.833"* %12) #14
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %38, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.865"* nonnull %8, i8* %49) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  %50 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %50, label %128, label %51

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #14
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !27

65:                                               ; preds = %58
  call void @llvm.trap() #14
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %128

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #14
  br label %128

81:                                               ; preds = %1
  %82 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.832"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %11) #14
  %85 = load i16*, i16** %11, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.865"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false) #14
  %87 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %6, i8* %87) #14
  %88 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringTypeAdapter.865"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #14
  %90 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i8* %90) #14
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %88, i16* %85) #14
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %88) #14
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %85, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i16* %93) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #14
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.833"* %12) #14
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %85, i64 %95
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.865"* nonnull %6, i16* %96) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #14
  %97 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %97, label %128, label %98

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %115

105:                                              ; preds = %98
  %106 = zext i32 %104 to i33
  %107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #14
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !27

112:                                              ; preds = %105
  call void @llvm.trap() #14
  unreachable

113:                                              ; preds = %105
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %103, align 4
  br label %115

115:                                              ; preds = %98, %113
  %116 = phi i32 [ %114, %113 ], [ %104, %98 ]
  %117 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %118 = load atomic i32, i32* %99 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %123 = add i32 %116, -1
  store i32 %123, i32* %122, align 4
  br label %124

124:                                              ; preds = %121, %115
  %125 = phi i32 [ %123, %121 ], [ %116, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #14
  br label %128

128:                                              ; preds = %127, %124, %81, %80, %77, %34
  %129 = phi i8* [ %35, %34 ], [ %35, %77 ], [ %35, %80 ], [ %82, %81 ], [ %82, %124 ], [ %82, %127 ]
  %130 = phi i64 [ 0, %34 ], [ %70, %77 ], [ %70, %80 ], [ 0, %81 ], [ %117, %124 ], [ %117, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #14
  %131 = inttoptr i64 %130 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS_13TransferablesE(%"class.blink::HeapVector"* noalias sret, %"class.blink::Transferables"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.blink::HeapVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #14
  %7 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Transferables", %"class.blink::Transferables"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %65, label %15

15:                                               ; preds = %2, %27
  %16 = phi %"class.blink::Member"* [ %28, %27 ], [ %9, %2 ]
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %19, align 8
  %21 = icmp eq %"class.v8::BackingStore"* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %25, %15
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 -1
  %24 = icmp eq %"class.blink::Member"* %16, %23
  br i1 %24, label %65, label %30

25:                                               ; preds = %15
  %26 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %20) #14
  br i1 %26, label %27, label %22

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %29 = icmp eq %"class.blink::Member"* %28, %13
  br i1 %29, label %65, label %15

30:                                               ; preds = %22, %39
  %31 = phi %"class.blink::Member"* [ %40, %39 ], [ %23, %22 ]
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %34, align 8
  %36 = icmp eq %"class.v8::BackingStore"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %35) #14
  br i1 %38, label %42, label %39

39:                                               ; preds = %37, %30
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 -1
  %41 = icmp eq %"class.blink::Member"* %16, %40
  br i1 %41, label %65, label %30

42:                                               ; preds = %37
  %43 = ptrtoint %"class.blink::Member"* %31 to i64
  %44 = ptrtoint %"class.blink::Member"* %16 to i64
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp sgt i64 %45, 16
  br i1 %48, label %49, label %60

49:                                               ; preds = %42
  %50 = icmp slt i64 %47, 1152921504606846975
  %51 = select i1 %50, i64 %47, i64 1152921504606846975
  br label %52

52:                                               ; preds = %57, %49
  %53 = phi i64 [ %58, %57 ], [ %51, %49 ]
  %54 = shl i64 %53, 3
  %55 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %54, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #14
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = lshr i64 %53, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %52

60:                                               ; preds = %57, %42
  %61 = tail call fastcc %"class.blink::Member"* @"_ZNSt3__118__stable_partitionIRZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS1_13TransferablesEE3$_0PNS1_6MemberINS1_18DOMArrayBufferBaseEEElNS_4pairISA_lEEEET0_SD_SD_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.blink::Member"* %16, %"class.blink::Member"* %31, i64 %47, %"class.blink::Member"* null, i64 0) #14
  br label %65

62:                                               ; preds = %52
  %63 = bitcast i8* %55 to %"class.blink::Member"*
  %64 = tail call fastcc %"class.blink::Member"* @"_ZNSt3__118__stable_partitionIRZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS1_13TransferablesEE3$_0PNS1_6MemberINS1_18DOMArrayBufferBaseEEElNS_4pairISA_lEEEET0_SD_SD_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.blink::Member"* %16, %"class.blink::Member"* %31, i64 %47, %"class.blink::Member"* nonnull %63, i64 %53) #14
  tail call void @_ZdlPv(i8* nonnull %55) #15
  br label %65

65:                                               ; preds = %27, %39, %2, %22, %60, %62
  %66 = phi %"class.blink::Member"* [ %64, %62 ], [ %16, %22 ], [ %9, %2 ], [ %61, %60 ], [ %16, %39 ], [ %13, %27 ]
  %67 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %68 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %69 = load i32, i32* %10, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 %70
  %72 = icmp eq %"class.blink::Member"* %66, %71
  br i1 %72, label %101, label %73

73:                                               ; preds = %65, %94
  %74 = phi %"class.blink::Member"* [ %95, %94 ], [ %66, %65 ]
  %75 = load i32, i32* %5, align 4
  %76 = load i32, i32* %4, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %93, label %78, !prof !27

78:                                               ; preds = %73
  %79 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %80 = zext i32 %75 to i64
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %79, i64 %80
  %82 = bitcast %"class.blink::Member"* %74 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.blink::Member"* %81 to i64*
  store atomic i64 %83, i64* %84 monotonic, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %78
  %88 = inttoptr i64 %83 to i8*
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #14
  br label %90

90:                                               ; preds = %87, %78
  %91 = load i32, i32* %5, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %5, align 4
  br label %94

93:                                               ; preds = %73
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.269"* %67, %"class.blink::Member"* dereferenceable(8) %74) #14
  br label %94

94:                                               ; preds = %93, %90
  %95 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %74, i64 1
  %96 = icmp eq %"class.blink::Member"* %95, %71
  br i1 %96, label %97, label %73

97:                                               ; preds = %94
  %98 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %99 = load i32, i32* %10, align 4
  %100 = zext i32 %99 to i64
  br label %101

101:                                              ; preds = %97, %65
  %102 = phi i64 [ %100, %97 ], [ %70, %65 ]
  %103 = phi %"class.blink::Member"* [ %98, %97 ], [ %68, %65 ]
  %104 = ptrtoint %"class.blink::Member"* %66 to i64
  %105 = ptrtoint %"class.blink::Member"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = lshr exact i64 %106, 3
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %103, i64 %102
  %110 = ptrtoint %"class.blink::Member"* %109 to i64
  %111 = sub i64 %110, %104
  %112 = lshr exact i64 %111, 3
  %113 = trunc i64 %112 to i32
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector.269"* %7, i32 %108, i32 %113)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector.269"*, i32, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %141, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #14
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i8* %18, i8* %19) #14
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #14
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %27 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 %31
  %33 = load i32, i32* %12, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 %34
  %36 = icmp ne %"class.blink::Member"* %30, null
  %37 = icmp ne %"class.blink::Member"* %32, null
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %130, !prof !26

39:                                               ; preds = %26
  %40 = icmp ult %"class.blink::Member"* %32, %35
  br i1 %40, label %41, label %110

41:                                               ; preds = %39
  %42 = shl nuw nsw i64 %34, 3
  %43 = add nuw nsw i64 %31, %29
  %44 = shl nuw nsw i64 %43, 3
  %45 = xor i64 %44, -1
  %46 = add nsw i64 %42, %45
  %47 = lshr i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 7
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %41, %51
  %52 = phi %"class.blink::Member"* [ %59, %51 ], [ %30, %41 ]
  %53 = phi %"class.blink::Member"* [ %58, %51 ], [ %32, %41 ]
  %54 = phi i64 [ %60, %51 ], [ %49, %41 ]
  %55 = bitcast %"class.blink::Member"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.blink::Member"* %52 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %53, i64 1
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %52, i64 1
  %60 = add i64 %54, -1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %51, !llvm.loop !58

62:                                               ; preds = %51, %41
  %63 = phi %"class.blink::Member"* [ %30, %41 ], [ %59, %51 ]
  %64 = phi %"class.blink::Member"* [ %32, %41 ], [ %58, %51 ]
  %65 = icmp ult i64 %46, 56
  br i1 %65, label %110, label %66

66:                                               ; preds = %62, %66
  %67 = phi %"class.blink::Member"* [ %108, %66 ], [ %63, %62 ]
  %68 = phi %"class.blink::Member"* [ %107, %66 ], [ %64, %62 ]
  %69 = bitcast %"class.blink::Member"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::Member"* %67 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 1
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 1
  %74 = bitcast %"class.blink::Member"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %73 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 2
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 2
  %79 = bitcast %"class.blink::Member"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::Member"* %78 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 3
  %83 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 3
  %84 = bitcast %"class.blink::Member"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 4
  %88 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 4
  %89 = bitcast %"class.blink::Member"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.blink::Member"* %88 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 5
  %93 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 5
  %94 = bitcast %"class.blink::Member"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.blink::Member"* %93 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 6
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 6
  %99 = bitcast %"class.blink::Member"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::Member"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 7
  %103 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 7
  %104 = bitcast %"class.blink::Member"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.blink::Member"* %103 to i64*
  store atomic i64 %105, i64* %106 monotonic, align 8
  %107 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 8
  %108 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 8
  %109 = icmp ult %"class.blink::Member"* %107, %35
  br i1 %109, label %66, label %110

110:                                              ; preds = %62, %66, %39
  %111 = ptrtoint %"class.blink::Member"* %35 to i64
  %112 = ptrtoint %"class.blink::Member"* %32 to i64
  %113 = sub i64 %111, %112
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %110
  %116 = ashr exact i64 %113, 3
  br label %117

117:                                              ; preds = %127, %115
  %118 = phi i64 [ %120, %127 ], [ %116, %115 ]
  %119 = phi %"class.blink::Member"* [ %128, %127 ], [ %30, %115 ]
  %120 = add i64 %118, -1
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::Member"* %119 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #14
  br label %127

127:                                              ; preds = %123, %117
  %128 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %119, i64 1
  %129 = icmp eq i64 %120, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %127, %26, %110
  %131 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %132 = load i32, i32* %12, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %131, i64 %133
  %135 = sub nsw i64 0, %31
  %136 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %134, i64 %135
  %137 = bitcast %"class.blink::Member"* %136 to i8*
  %138 = shl nuw nsw i64 %31, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %137, i64 %138) #14
  %139 = load i32, i32* %12, align 4
  %140 = sub i32 %139, %2
  store i32 %140, i32* %12, align 4
  br label %141

141:                                              ; preds = %3, %130
  ret void
}

declare zeroext i1 @_ZN5blink14DOMArrayBuffer8TransferEPN2v87IsolateERNS_19ArrayBufferContentsE(%"class.blink::DOMArrayBuffer"*, %"class.v8::Isolate"*, %"class.blink::ArrayBufferContents"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::ArrayBufferContents"* @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %24, i64 %25
  ret %"class.blink::ArrayBufferContents"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue49UnregisterMemoryAllocatedWithCurrentScriptContextEv(%"class.blink::SerializedScriptValue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !25
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #14
  %7 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 0, %8
  %10 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %6, i64 %9) #14
  store i8 0, i8* %2, align 8
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SerializedScriptValue47RegisterMemoryAllocatedWithCurrentScriptContextEv(%"class.blink::SerializedScriptValue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !25
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #14
  %9 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %8, i64 %7) #14
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21SerializedScriptValue21IsOriginCheckRequiredEv(%"class.blink::SerializedScriptValue"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZNK3WTF10StringImpl6CopyToEPDsjj(%"class.WTF::StringImpl"*, i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"*, %"class.WTF::SharedBuffer::Iterator"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 1
  %8 = load i8*, i8** %7, align 8, !noalias !59
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !noalias !59
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %3, i8* %8, i8* %8, i8* %11) #14
  %12 = load i8*, i8** %7, align 8, !noalias !62
  %13 = load i64, i64* %9, align 8, !noalias !62
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %4, i8* %12, i8* %14, i8* %14) #14
  %15 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 1
  %16 = load i8*, i8** %15, align 8, !noalias !65
  %17 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !65
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %5, i8* %16, i8* %16, i8* %19) #14
  %20 = load i8*, i8** %15, align 8, !noalias !68
  %21 = load i64, i64* %17, align 8, !noalias !68
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %20, i8* %22, i8* %22) #14
  %23 = call zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %3, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %4, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %5, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %6)
  br i1 %23, label %24, label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 2
  %26 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 2
  %28 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %27, align 8
  %29 = icmp eq %"class.WTF::SharedBuffer"* %26, %28
  br label %30

30:                                               ; preds = %24, %2
  %31 = phi i1 [ false, %2 ], [ %29, %24 ]
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8) local_unnamed_addr #5 comdat {
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = alloca %"class.base::CheckedContiguousIterator", align 8
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %15, i64 24, i1 false)
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  %23 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %15, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #14
  %24 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %18, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %9) #14
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #14
  %40 = icmp eq i64 %30, %39
  br i1 %40, label %41, label %64

41:                                               ; preds = %4
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  %43 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %21, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 8 %20, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %19, i64 24, i1 false) #14
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #14
  %45 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %46, %48
  br i1 %49, label %62, label %50

50:                                               ; preds = %41, %56
  %51 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #14
  %52 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #14
  %53 = load i8, i8* %51, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #14
  %58 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #14
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #14
  %59 = load i8*, i8** %45, align 8
  %60 = load i8*, i8** %47, align 8
  %61 = icmp eq i8* %59, %60
  br i1 %61, label %62, label %50

62:                                               ; preds = %56, %50, %41
  %63 = phi i1 [ true, %41 ], [ true, %56 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #14
  br label %64

64:                                               ; preds = %4, %62
  %65 = phi i1 [ %63, %62 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %20, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i8* %41, i8* %43) #14
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #14
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #14
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #14
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* %16, i8* %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #14
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* %16, i8* %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #14
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8* %29, i8* %31) #14
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #14
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i8* %48, i8* %50) #14
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #14
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #14
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ArrayBufferContents"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::ArrayBufferContents"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #14
  ret void
}

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %41, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  ret void

8:                                                ; preds = %41, %4
  %9 = phi i64 [ 0, %4 ], [ %42, %41 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %41, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0
  %16 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %15, align 8
  %17 = icmp eq %"class.blink::BlobDataHandle"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %16) #14
  %23 = bitcast %"class.blink::BlobDataHandle"* %16 to i8*
  tail call void @free(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %18, %14
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #14
  br label %41

41:                                               ; preds = %40, %37, %24, %8
  %42 = add nuw nsw i64 %9, 1
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %6, label %8
}

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.3"*, %class.scoped_refptr.5*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %class.scoped_refptr.5* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #14
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink18MessagePortChannelC1ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortDescriptor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN5blink19ArrayBufferContents6DetachEv(%"class.blink::ArrayBufferContents"*) local_unnamed_addr #2

declare void @_ZN5blink19ArrayBufferContents9ShareWithERS0_(%"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #14
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #14
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #14
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS4_NS_16VectorBufferBaseIS2_S3_E11OffsetRangeES8_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(32), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"class.blink::ArrayBufferContents"*
  %12 = icmp eq %"class.blink::ArrayBufferContents"* %9, %11
  %13 = ptrtoint %"class.blink::ArrayBufferContents"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"class.blink::ArrayBufferContents"*
  %19 = icmp eq %"class.blink::ArrayBufferContents"* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"class.blink::ArrayBufferContents"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %131

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"class.blink::ArrayBufferContents"*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i8* [ %17, %14 ], [ %38, %32 ]
  %44 = phi %"class.blink::ArrayBufferContents"* [ %18, %14 ], [ %39, %32 ]
  %45 = phi %"class.blink::ArrayBufferContents"* [ %16, %14 ], [ %41, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %48 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %49 = phi %"class.blink::ArrayBufferContents"* [ null, %14 ], [ %9, %32 ]
  %50 = phi %"class.blink::ArrayBufferContents"* [ null, %14 ], [ %39, %32 ]
  %51 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %52 = icmp eq %"class.blink::ArrayBufferContents"* %45, %44
  br i1 %52, label %53, label %56

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %42, %53
  %57 = phi i32 [ %7, %53 ], [ 0, %42 ]
  %58 = phi i32 [ %5, %53 ], [ 0, %42 ]
  %59 = phi i32 [ %55, %53 ], [ 0, %42 ]
  %60 = phi i8* [ %43, %53 ], [ null, %42 ]
  %61 = phi %"class.blink::ArrayBufferContents"* [ %44, %53 ], [ null, %42 ]
  %62 = phi %"class.blink::ArrayBufferContents"* [ %11, %53 ], [ null, %42 ]
  %63 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %64, align 4
  store i32 %66, i32* %63, align 4
  store i32 %65, i32* %64, align 4
  %67 = icmp eq %"class.blink::ArrayBufferContents"* %49, null
  %68 = icmp ne %"class.blink::ArrayBufferContents"* %61, null
  %69 = or i1 %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %56
  %71 = and i1 %67, %68
  br i1 %71, label %72, label %80

72:                                               ; preds = %70, %56
  %73 = phi %"class.WTF::VectorBuffer"* [ %1, %56 ], [ %0, %70 ]
  %74 = phi %"class.WTF::VectorBuffer"* [ %0, %56 ], [ %1, %70 ]
  %75 = phi i8* [ %51, %56 ], [ %10, %70 ]
  %76 = bitcast %"class.WTF::VectorBuffer"* %73 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::VectorBuffer"* %74 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = ptrtoint i8* %75 to i64
  store atomic i64 %79, i64* %76 monotonic, align 8
  br label %80

80:                                               ; preds = %72, %70
  %81 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %82 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %82, align 4
  store i32 %84, i32* %81, align 4
  store i32 %83, i32* %82, align 4
  %85 = icmp ne %"class.blink::ArrayBufferContents"* %49, null
  %86 = icmp ne i32 %58, %57
  %87 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %49, i64 1
  %88 = icmp ne i32 %48, 0
  %89 = and i1 %85, %88
  %90 = icmp ne i32 %59, 0
  %91 = and i1 %68, %90
  br i1 %89, label %92, label %98

92:                                               ; preds = %80
  %93 = icmp eq i32 %47, %46
  %94 = icmp ne i32 %47, 0
  %95 = or i1 %93, %94
  %96 = icmp eq i32 %46, 0
  %97 = or i1 %96, %95
  br label %98

98:                                               ; preds = %92, %80
  %99 = phi i1 [ false, %80 ], [ %97, %92 ]
  br i1 %91, label %100, label %109

100:                                              ; preds = %98
  %101 = icmp eq i32 %58, 0
  %102 = and i1 %101, %86
  %103 = icmp ne i32 %57, 0
  %104 = and i1 %103, %102
  %105 = xor i1 %99, true
  %106 = or i1 %104, %105
  %107 = xor i1 %104, true
  br i1 %106, label %109, label %108

108:                                              ; preds = %100
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink19ArrayBufferContentsENS_18PartitionAllocatorEE4SwapEPS2_S5_S5_(%"class.blink::ArrayBufferContents"* %49, %"class.blink::ArrayBufferContents"* %87, %"class.blink::ArrayBufferContents"* nonnull %61) #14
  br label %131

109:                                              ; preds = %100, %98
  %110 = phi i1 [ false, %98 ], [ %107, %100 ]
  br i1 %99, label %111, label %121

111:                                              ; preds = %109
  %112 = bitcast %"class.blink::ArrayBufferContents"* %49 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.blink::ArrayBufferContents"* %50 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %50, i64 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %49, i64 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::__shared_weak_count"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::__shared_weak_count"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = bitcast %"class.blink::ArrayBufferContents"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #14
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %49) #14
  br label %131

121:                                              ; preds = %109
  br i1 %110, label %122, label %131

122:                                              ; preds = %121
  %123 = bitcast %"class.blink::ArrayBufferContents"* %61 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::ArrayBufferContents"* %62 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %62, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %61, i64 0, i32 0, i32 1
  %128 = bitcast %"class.std::__1::__shared_weak_count"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::__shared_weak_count"** %126 to i64*
  store i64 %129, i64* %130, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #14
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %61) #14
  br label %131

131:                                              ; preds = %122, %111, %121, %108, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink19ArrayBufferContentsENS_18PartitionAllocatorEE4SwapEPS2_S5_S5_(%"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.blink::ArrayBufferContents"*
  %6 = icmp eq %"class.blink::ArrayBufferContents"* %0, %1
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = bitcast <2 x i64>* %4 to i8*
  br label %9

9:                                                ; preds = %48, %7
  %10 = phi %"class.blink::ArrayBufferContents"* [ %2, %7 ], [ %50, %48 ]
  %11 = phi %"class.blink::ArrayBufferContents"* [ %0, %7 ], [ %49, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %12 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %11, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::ArrayBufferContents"* %11 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  store <2 x i64> %14, <2 x i64>* %4, align 16
  %15 = bitcast %"class.blink::ArrayBufferContents"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #14
  %16 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %10, i64 0, i32 0, i32 1
  %17 = bitcast %"class.blink::ArrayBufferContents"* %10 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = bitcast %"class.blink::ArrayBufferContents"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  %20 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %12, align 8
  %21 = bitcast %"class.blink::ArrayBufferContents"* %11 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %21, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %20, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %20, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %20 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  call void %32(%"class.std::__1::__shared_count"* %28) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %20) #14
  br label %33

33:                                               ; preds = %27, %23, %9
  %34 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 16, i1 false) #14
  %35 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %36 = bitcast %"class.blink::ArrayBufferContents"* %10 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %36, align 8
  %37 = icmp eq %"class.std::__1::__shared_weak_count"* %35, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0, i32 1
  %40 = atomicrmw add i64* %39, i64 -1 acq_rel
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %35, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__shared_weak_count"* %35 to void (%"class.std::__1::__shared_count"*)***
  %45 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %45, i64 2
  %47 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, align 8
  call void %47(%"class.std::__1::__shared_count"* %43) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %35) #14
  br label %48

48:                                               ; preds = %42, %38, %33
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  %49 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %11, i64 1
  %50 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %10, i64 1
  %51 = icmp eq %"class.blink::ArrayBufferContents"* %49, %1
  br i1 %51, label %52, label %9

52:                                               ; preds = %48, %3
  ret void
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS6_NS_16VectorBufferBaseIS4_S5_E11OffsetRangeESA_(%"class.WTF::VectorBuffer.3"*, %"class.WTF::VectorBuffer.3"* dereferenceable(24), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 0
  %9 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %class.scoped_refptr.5*
  %12 = icmp eq %class.scoped_refptr.5* %9, %11
  %13 = ptrtoint %class.scoped_refptr.5* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 0
  %16 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %class.scoped_refptr.5*
  %19 = icmp eq %class.scoped_refptr.5* %16, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %class.scoped_refptr.5* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.3"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.3"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %171

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %class.scoped_refptr.5*
  %40 = bitcast i8* %38 to i64*
  %41 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 0
  %42 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %41, align 8
  br label %43

43:                                               ; preds = %14, %32
  %44 = phi i8* [ %17, %14 ], [ %38, %32 ]
  %45 = phi %class.scoped_refptr.5* [ %18, %14 ], [ %39, %32 ]
  %46 = phi %class.scoped_refptr.5* [ %16, %14 ], [ %42, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %48 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %49 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %50 = phi %class.scoped_refptr.5* [ null, %14 ], [ %9, %32 ]
  %51 = phi i64* [ null, %14 ], [ %40, %32 ]
  %52 = phi %class.scoped_refptr.5* [ null, %14 ], [ %39, %32 ]
  %53 = bitcast %class.scoped_refptr.5* %50 to i8*
  %54 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 1, i64 0
  %55 = icmp eq %class.scoped_refptr.5* %46, %45
  br i1 %55, label %56, label %60

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = bitcast i8* %10 to i64*
  br label %60

60:                                               ; preds = %43, %56
  %61 = phi i32 [ %7, %56 ], [ 0, %43 ]
  %62 = phi i32 [ %5, %56 ], [ 0, %43 ]
  %63 = phi i32 [ %58, %56 ], [ 0, %43 ]
  %64 = phi i8* [ %44, %56 ], [ null, %43 ]
  %65 = phi %class.scoped_refptr.5* [ %45, %56 ], [ null, %43 ]
  %66 = phi i64* [ %59, %56 ], [ null, %43 ]
  %67 = phi %class.scoped_refptr.5* [ %11, %56 ], [ null, %43 ]
  %68 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 1
  %70 = load i32, i32* %68, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %68, align 4
  store i32 %70, i32* %69, align 4
  %72 = icmp eq %class.scoped_refptr.5* %50, null
  %73 = icmp ne %class.scoped_refptr.5* %65, null
  %74 = or i1 %72, %73
  br i1 %74, label %80, label %75

75:                                               ; preds = %60
  %76 = bitcast %"class.WTF::VectorBuffer.3"* %1 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::VectorBuffer.3"* %0 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = ptrtoint i8* %54 to i64
  store atomic i64 %79, i64* %76 monotonic, align 8
  br label %94

80:                                               ; preds = %60
  %81 = and i1 %72, %73
  br i1 %81, label %82, label %94

82:                                               ; preds = %80
  %83 = bitcast %"class.WTF::VectorBuffer.3"* %0 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::VectorBuffer.3"* %1 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = ptrtoint i8* %10 to i64
  store atomic i64 %86, i64* %83 monotonic, align 8
  %87 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 2
  %88 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 2
  %89 = load i32, i32* %87, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %87, align 4
  store i32 %89, i32* %88, align 4
  %91 = icmp ne i32 %62, %61
  %92 = icmp ne i32 %63, 0
  %93 = and i1 %73, %92
  br i1 %93, label %112, label %171

94:                                               ; preds = %80, %75
  %95 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %0, i64 0, i32 0, i32 2
  %96 = getelementptr inbounds %"class.WTF::VectorBuffer.3", %"class.WTF::VectorBuffer.3"* %1, i64 0, i32 0, i32 2
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %95, align 4
  store i32 %97, i32* %96, align 4
  %99 = icmp ne %class.scoped_refptr.5* %50, null
  %100 = icmp ne i32 %62, %61
  %101 = icmp ne i32 %49, 0
  %102 = and i1 %99, %101
  %103 = icmp ne i32 %63, 0
  %104 = and i1 %73, %103
  br i1 %102, label %105, label %111

105:                                              ; preds = %94
  %106 = icmp eq i32 %48, %47
  %107 = icmp ne i32 %48, 0
  %108 = or i1 %106, %107
  %109 = icmp eq i32 %47, 0
  %110 = or i1 %109, %108
  br i1 %104, label %112, label %154

111:                                              ; preds = %94
  br i1 %104, label %112, label %171

112:                                              ; preds = %82, %105, %111
  %113 = phi i1 [ %110, %105 ], [ false, %111 ], [ false, %82 ]
  %114 = phi i1 [ %99, %105 ], [ %99, %111 ], [ false, %82 ]
  %115 = phi i1 [ %100, %105 ], [ %100, %111 ], [ %91, %82 ]
  %116 = icmp eq i32 %62, 0
  %117 = and i1 %116, %115
  %118 = icmp ne i32 %61, 0
  %119 = and i1 %118, %117
  %120 = xor i1 %113, true
  %121 = or i1 %119, %120
  %122 = xor i1 %119, true
  br i1 %121, label %154, label %123

123:                                              ; preds = %112
  %124 = load i8, i8* %53, align 1
  %125 = load i8, i8* %64, align 1
  store i8 %125, i8* %53, align 1
  store i8 %124, i8* %64, align 1
  %126 = getelementptr inbounds i8, i8* %53, i64 1
  %127 = getelementptr inbounds i8, i8* %64, i64 1
  %128 = load i8, i8* %126, align 1
  %129 = load i8, i8* %127, align 1
  store i8 %129, i8* %126, align 1
  store i8 %128, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %53, i64 2
  %131 = getelementptr inbounds i8, i8* %64, i64 2
  %132 = load i8, i8* %130, align 1
  %133 = load i8, i8* %131, align 1
  store i8 %133, i8* %130, align 1
  store i8 %132, i8* %131, align 1
  %134 = getelementptr inbounds i8, i8* %53, i64 3
  %135 = getelementptr inbounds i8, i8* %64, i64 3
  %136 = load i8, i8* %134, align 1
  %137 = load i8, i8* %135, align 1
  store i8 %137, i8* %134, align 1
  store i8 %136, i8* %135, align 1
  %138 = getelementptr inbounds i8, i8* %53, i64 4
  %139 = getelementptr inbounds i8, i8* %64, i64 4
  %140 = load i8, i8* %138, align 1
  %141 = load i8, i8* %139, align 1
  store i8 %141, i8* %138, align 1
  store i8 %140, i8* %139, align 1
  %142 = getelementptr inbounds i8, i8* %53, i64 5
  %143 = getelementptr inbounds i8, i8* %64, i64 5
  %144 = load i8, i8* %142, align 1
  %145 = load i8, i8* %143, align 1
  store i8 %145, i8* %142, align 1
  store i8 %144, i8* %143, align 1
  %146 = getelementptr inbounds i8, i8* %53, i64 6
  %147 = getelementptr inbounds i8, i8* %64, i64 6
  %148 = load i8, i8* %146, align 1
  %149 = load i8, i8* %147, align 1
  store i8 %149, i8* %146, align 1
  store i8 %148, i8* %147, align 1
  %150 = getelementptr inbounds i8, i8* %53, i64 7
  %151 = getelementptr inbounds i8, i8* %64, i64 7
  %152 = load i8, i8* %150, align 1
  %153 = load i8, i8* %151, align 1
  store i8 %153, i8* %150, align 1
  store i8 %152, i8* %151, align 1
  br label %171

154:                                              ; preds = %105, %112
  %155 = phi i1 [ %113, %112 ], [ %110, %105 ]
  %156 = phi i1 [ %114, %112 ], [ %99, %105 ]
  %157 = phi i1 [ %122, %112 ], [ false, %105 ]
  br i1 %155, label %158, label %164

158:                                              ; preds = %154
  %159 = icmp ne %class.scoped_refptr.5* %52, null
  %160 = and i1 %156, %159
  br i1 %160, label %161, label %171, !prof !26

161:                                              ; preds = %158
  %162 = bitcast %class.scoped_refptr.5* %50 to i64*
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %51, align 8
  br label %171

164:                                              ; preds = %154
  %165 = icmp ne %class.scoped_refptr.5* %67, null
  %166 = and i1 %73, %165
  %167 = and i1 %157, %166
  br i1 %167, label %168, label %171, !prof !71

168:                                              ; preds = %164
  %169 = bitcast %class.scoped_refptr.5* %65 to i64*
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %66, align 8
  br label %171

171:                                              ; preds = %111, %82, %123, %168, %161, %158, %164, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.281"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11ImageBitmapEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.278"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.278", %"class.WTF::Vector.278"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.278", %"class.WTF::Vector.278"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %24, i64 %25
  ret %"class.blink::Member.281"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.761"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.761"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.866", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.865"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.865"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.865"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.866"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.866"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i8* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.867"* nonnull %34, i8* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.761"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i8* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.866", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.865"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.865"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.865"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.866"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.866"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.865"* nonnull %3, i16* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.866", %"class.WTF::StringTypeAdapter.866"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.867"* nonnull %34, i16* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.761"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.865"* nonnull %5, i16* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.761"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.761", %"class.WTF::StringAppend.761"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %4, i8* %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend.761", %"class.WTF::StringAppend.761"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %30, i8* %31) #14
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8* %45, i8* %46) #14
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.865"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.867"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.865"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.867"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.281"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.766"*, %"class.blink::Member.281"* dereferenceable(8), %"class.blink::Member.281"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %4, align 8
  %6 = icmp eq %"class.blink::Member.281"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.766"* %0, %"class.blink::Member.281"* null)
  %9 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.281"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.281"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %40, align 8
  %42 = icmp eq %"class.blink::ImageBitmap"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ImageBitmap"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ImageBitmap"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.281"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.281"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ImageBitmap"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ImageBitmap"* %59, inttoptr (i64 -1 to %"class.blink::ImageBitmap"*)
  %67 = select i1 %66, %"class.blink::Member.281"* %60, %"class.blink::Member.281"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %73, align 8
  %75 = icmp eq %"class.blink::ImageBitmap"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.281"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.281"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #14
  %80 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.281"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.281"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.281"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.281"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #14
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.766"* %0, %"class.blink::Member.281"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.281"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.281"*, i8 } undef, %"class.blink::Member.281"* %117, 0
  %119 = insertvalue { %"class.blink::Member.281"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.281"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.766"*, %"class.blink::Member.281"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.766"* %0, i32 %35, %"class.blink::Member.281"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !25
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.281"*
  %44 = call %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.766"* %0, %"class.blink::Member.281"* %43, i32 %40, %"class.blink::Member.281"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.281"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.281"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.766"*, i32, %"class.blink::Member.281"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !27

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %31, align 8
  %33 = icmp eq %"class.blink::Member.281"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.281"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.281"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.281"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.281"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.281"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.281"* %61, %"class.blink::Member.281"* %55
  %63 = bitcast %"class.blink::Member.281"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.281"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.281"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.766"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.281"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.766"* %0, %"class.blink::Member.281"* %42, i32 %1, %"class.blink::Member.281"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.281"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.281"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.281"* %87, %"class.blink::Member.281"* %82
  %89 = bitcast %"class.blink::Member.281"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.281"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.281"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.281"* %99, %"class.blink::Member.281"* %88
  %101 = bitcast %"class.blink::Member.281"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.281"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.281"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.281"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.281"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11ImageBitmapEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.766"*, %"class.blink::Member.281"*, i32, %"class.blink::Member.281"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.281"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.281"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.281"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #14
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.766"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.281"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #14
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.281"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.281"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #14
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.281"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.281"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.281"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.281"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.281"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %70, align 8
  %72 = icmp eq %"class.blink::ImageBitmap"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::ImageBitmap"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.281"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.281"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.281"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.281"* %93, null
  %95 = ptrtoint %"class.blink::Member.281"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::ImageBitmap"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::ImageBitmap"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::ImageBitmap"* %99, inttoptr (i64 -1 to %"class.blink::ImageBitmap"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.281"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::ImageBitmap"*, %"class.blink::ImageBitmap"** %113, align 8
  %115 = icmp eq %"class.blink::ImageBitmap"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.281"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.281"*, %"class.blink::Member.281"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.281"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.281"* %118, %"class.blink::Member.281"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.281"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.281"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.31, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([351 x i8], [351 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_11ImageBitmapEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.33, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !27

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.281"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !27

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.281", %"class.blink::Member.281"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.281"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11ImageBitmapEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.240"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageBitmapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.2"*, %class.scoped_refptr.5* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.5* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.5* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #14
  %14 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %class.scoped_refptr.5* %1 to i64
  %17 = ptrtoint %class.scoped_refptr.5* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #14
  %20 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %6, align 8
  %21 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %class.scoped_refptr.5* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %class.scoped_refptr.5* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %23, i64 %26
  %28 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %24, i64 0, i32 0
  %29 = bitcast %class.scoped_refptr.5* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %class.scoped_refptr.5* %27 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.blink::StaticBitmapImage"* null, %"class.blink::StaticBitmapImage"** %28, align 8
  %32 = load i32, i32* %3, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !26

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %31, align 8
  %33 = icmp eq %class.scoped_refptr.5* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink17StaticBitmapImageEEEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink17StaticBitmapImageEEEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"* %0, i32 %27) #14
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %5, align 8
  %7 = icmp eq %class.scoped_refptr.5* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %class.scoped_refptr.5*
  %10 = icmp eq %class.scoped_refptr.5* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !27

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %class.scoped_refptr.5* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #14
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.3"* %19, %class.scoped_refptr.5* nonnull %6) #14
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink17StaticBitmapImageEEEEmm(i64 %30) #14
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink17StaticBitmapImageEEEEPKcv, i64 0, i64 0)) #14
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %class.scoped_refptr.5* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !26

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.scoped_refptr.5* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #14
  %46 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %class.scoped_refptr.5* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %class.scoped_refptr.5*
  %51 = icmp eq %class.scoped_refptr.5* %48, %50
  br i1 %51, label %54, label %52, !prof !26

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink17StaticBitmapImageEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.3"* %53, %class.scoped_refptr.5* %48) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink17StaticBitmapImageEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.37, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.290"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15OffscreenCanvasEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.287"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.287", %"class.WTF::Vector.287"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.287", %"class.WTF::Vector.287"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %24, i64 %25
  ret %"class.blink::Member.290"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.290"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.772"*, %"class.blink::OffscreenCanvas"** dereferenceable(8), %"class.blink::OffscreenCanvas"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %4, align 8
  %6 = icmp eq %"class.blink::Member.290"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.772"* %0, %"class.blink::Member.290"* null)
  %9 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.290"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::OffscreenCanvas"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %40, align 8
  %42 = icmp eq %"class.blink::OffscreenCanvas"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::OffscreenCanvas"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::OffscreenCanvas"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.290"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.290"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::OffscreenCanvas"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::OffscreenCanvas"* %59, inttoptr (i64 -1 to %"class.blink::OffscreenCanvas"*)
  %67 = select i1 %66, %"class.blink::Member.290"* %60, %"class.blink::Member.290"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %73, align 8
  %75 = icmp eq %"class.blink::OffscreenCanvas"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.290"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.290"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #14
  %80 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.290"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %2, align 8
  %89 = ptrtoint %"class.blink::OffscreenCanvas"* %88 to i64
  %90 = bitcast %"class.blink::Member.290"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::OffscreenCanvas"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.290"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #14
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.772"* %0, %"class.blink::Member.290"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.290"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.290"*, i8 } undef, %"class.blink::Member.290"* %117, 0
  %119 = insertvalue { %"class.blink::Member.290"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.290"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.772"*, %"class.blink::Member.290"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.772"* %0, i32 %35, %"class.blink::Member.290"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !25
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.896"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking.896"* %42 to %"class.blink::Member.290"*
  %44 = call %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.772"* %0, %"class.blink::Member.290"* %43, i32 %40, %"class.blink::Member.290"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.290"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.290"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.772"*, i32, %"class.blink::Member.290"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !27

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %31, align 8
  %33 = icmp eq %"class.blink::Member.290"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.290"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.896"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking.896"* %44 to %"class.blink::Member.290"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.290"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.290"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.290"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.290"* %61, %"class.blink::Member.290"* %55
  %63 = bitcast %"class.blink::Member.290"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.290"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.290"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.772"* %0 to %"class.blink::HeapHashTableBacking.896"**
  store %"class.blink::HeapHashTableBacking.896"* %44, %"class.blink::HeapHashTableBacking.896"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.896", %"class.blink::HeapHashTableBacking.896"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.290"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.772"* %0, %"class.blink::Member.290"* %42, i32 %1, %"class.blink::Member.290"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.290"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.290"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.290"* %87, %"class.blink::Member.290"* %82
  %89 = bitcast %"class.blink::Member.290"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.290"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.290"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.290"* %99, %"class.blink::Member.290"* %88
  %101 = bitcast %"class.blink::Member.290"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.290"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.290"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.290"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.290"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15OffscreenCanvasEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.772"*, %"class.blink::Member.290"*, i32, %"class.blink::Member.290"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.290"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.290"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.290"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #14
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.772"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.290"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #14
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.290"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.290"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #14
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.772", %"class.WTF::HashTable.772"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.290"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.290"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.290"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.290"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.290"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %70, align 8
  %72 = icmp eq %"class.blink::OffscreenCanvas"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::OffscreenCanvas"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.290"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.290"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.290"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.290"* %93, null
  %95 = ptrtoint %"class.blink::Member.290"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::OffscreenCanvas"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::OffscreenCanvas"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::OffscreenCanvas"* %99, inttoptr (i64 -1 to %"class.blink::OffscreenCanvas"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.290"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::OffscreenCanvas"*, %"class.blink::OffscreenCanvas"** %113, align 8
  %115 = icmp eq %"class.blink::OffscreenCanvas"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.290"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.290"*, %"class.blink::Member.290"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.290"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.290"* %118, %"class.blink::Member.290"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.290"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.290"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.896"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.31, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.896"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.896"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([371 x i8], [371 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15OffscreenCanvasEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.290"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !27

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.290", %"class.blink::Member.290"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.290"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15OffscreenCanvasEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15OffscreenCanvasEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::OffscreenCanvas"*
  tail call void @_ZNK5blink15OffscreenCanvas5TraceEPNS_7VisitorE(%"class.blink::OffscreenCanvas"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink15OffscreenCanvas5TraceEPNS_7VisitorE(%"class.blink::OffscreenCanvas"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::SerializedScriptValue::Stream"* @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.207"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %24, i64 %25
  ret %"class.blink::SerializedScriptValue::Stream"* %26
}

declare void @_ZN5blink11MessagePortC1ERNS_16ExecutionContextE(%"class.blink::MessagePort"*, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #14
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.207"*, %"class.blink::SerializedScriptValue::Stream"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %6, align 8
  %8 = icmp ugt %"class.blink::SerializedScriptValue::Stream"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %7, i64 %10
  %12 = icmp ugt %"class.blink::SerializedScriptValue::Stream"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !26

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21SerializedScriptValue6StreamEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SerializedScriptValue6StreamEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.207"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::SerializedScriptValue::Stream"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.207"* %0, i32 %22) #14
  %36 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::SerializedScriptValue::Stream"* %1 to i64
  %39 = ptrtoint %"class.blink::SerializedScriptValue::Stream"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 24
  %42 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !26

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21SerializedScriptValue6StreamEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SerializedScriptValue6StreamEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.207"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 24
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::SerializedScriptValue::Stream"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.207"* %0, i32 %50) #14
  %64 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::SerializedScriptValue::Stream"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::SerializedScriptValue::Stream"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::SerializedScriptValue::Stream"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %70, i64 0, i32 0
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %73, %"class.blink::MessagePortChannel"* dereferenceable(8) %74) #14
  %75 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %69, i64 %72, i32 1
  %76 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %70, i64 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr.211"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %77, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.211"* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %69, i64 %72, i32 2
  %82 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %70, i64 0, i32 2
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::unique_ptr.217"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %83, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.217"* %81 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load i32, i32* %3, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %3, align 4
  ret void
}

declare void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21SerializedScriptValue6StreamELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.207"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %54

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.207"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %4, %48
  %15 = phi %"class.blink::SerializedScriptValue::Stream"* [ %50, %48 ], [ %6, %4 ]
  %16 = phi %"class.blink::SerializedScriptValue::Stream"* [ %49, %48 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 0, i32 0
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %17, %"class.blink::MessagePortChannel"* dereferenceable(8) %18) #14
  %19 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr.211"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.211"* %19 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %16, i64 0, i32 2
  %26 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.217"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %27, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.217"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %31, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %31, align 8
  %33 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %14
  %35 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %32 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %36 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %36, i64 1
  %38 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %37, align 8
  tail call void %38(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %32) #14
  br label %39

39:                                               ; preds = %34, %14
  %40 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %40, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %40, align 8
  %42 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %41 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %45 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %45, i64 1
  %47 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %46, align 8
  tail call void %47(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %41) #14
  br label %48

48:                                               ; preds = %43, %39
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %18) #14
  %49 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %16, i64 1
  %50 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %15, i64 1
  %51 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %50, %10
  br i1 %51, label %52, label %14

52:                                               ; preds = %48, %4
  %53 = bitcast %"class.blink::SerializedScriptValue::Stream"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #14
  br label %117

54:                                               ; preds = %2
  %55 = zext i32 %1 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21SerializedScriptValue6StreamEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SerializedScriptValue6StreamEEEPKcv, i64 0, i64 0)) #14
  %58 = udiv i64 %56, 24
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::SerializedScriptValue::Stream"*, %"class.blink::SerializedScriptValue::Stream"** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %61, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %54
  %68 = bitcast %"class.blink::SerializedScriptValue::Stream"* %61 to i8*
  br label %112

69:                                               ; preds = %54
  %70 = bitcast i8* %57 to %"class.blink::SerializedScriptValue::Stream"*
  br label %71

71:                                               ; preds = %69, %105
  %72 = phi %"class.blink::SerializedScriptValue::Stream"* [ %107, %105 ], [ %61, %69 ]
  %73 = phi %"class.blink::SerializedScriptValue::Stream"* [ %106, %105 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 0, i32 0
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %74, %"class.blink::MessagePortChannel"* dereferenceable(8) %75) #14
  %76 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %73, i64 0, i32 1
  %77 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.211"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %78, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.211"* %76 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %73, i64 0, i32 2
  %83 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 0, i32 2
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.217"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %84, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.217"* %82 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.blink::WritableStreamTransferringOptimizer"*, %"class.blink::WritableStreamTransferringOptimizer"** %88, align 8
  store %"class.blink::WritableStreamTransferringOptimizer"* null, %"class.blink::WritableStreamTransferringOptimizer"** %88, align 8
  %90 = icmp eq %"class.blink::WritableStreamTransferringOptimizer"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %71
  %92 = bitcast %"class.blink::WritableStreamTransferringOptimizer"* %89 to void (%"class.blink::WritableStreamTransferringOptimizer"*)***
  %93 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)**, void (%"class.blink::WritableStreamTransferringOptimizer"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %93, i64 1
  %95 = load void (%"class.blink::WritableStreamTransferringOptimizer"*)*, void (%"class.blink::WritableStreamTransferringOptimizer"*)** %94, align 8
  tail call void %95(%"class.blink::WritableStreamTransferringOptimizer"* nonnull %89) #14
  br label %96

96:                                               ; preds = %91, %71
  %97 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.blink::ReadableStreamTransferringOptimizer"*, %"class.blink::ReadableStreamTransferringOptimizer"** %97, align 8
  store %"class.blink::ReadableStreamTransferringOptimizer"* null, %"class.blink::ReadableStreamTransferringOptimizer"** %97, align 8
  %99 = icmp eq %"class.blink::ReadableStreamTransferringOptimizer"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.blink::ReadableStreamTransferringOptimizer"* %98 to void (%"class.blink::ReadableStreamTransferringOptimizer"*)***
  %102 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)**, void (%"class.blink::ReadableStreamTransferringOptimizer"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %102, i64 1
  %104 = load void (%"class.blink::ReadableStreamTransferringOptimizer"*)*, void (%"class.blink::ReadableStreamTransferringOptimizer"*)** %103, align 8
  tail call void %104(%"class.blink::ReadableStreamTransferringOptimizer"* nonnull %98) #14
  br label %105

105:                                              ; preds = %100, %96
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %75) #14
  %106 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %73, i64 1
  %107 = getelementptr inbounds %"class.blink::SerializedScriptValue::Stream", %"class.blink::SerializedScriptValue::Stream"* %72, i64 1
  %108 = icmp eq %"class.blink::SerializedScriptValue::Stream"* %107, %65
  br i1 %108, label %109, label %71

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::Vector.207"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %67, %109
  %113 = phi i8* [ %111, %109 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #14
  %114 = bitcast %"class.WTF::Vector.207"* %0 to i64*
  store atomic i64 %59, i64* %114 monotonic, align 8
  %115 = trunc i64 %58 to i32
  %116 = getelementptr inbounds %"class.WTF::Vector.207", %"class.WTF::Vector.207"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %115, i32* %116, align 8
  br label %117

117:                                              ; preds = %112, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21SerializedScriptValue6StreamEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.37, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !26

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %31, align 8
  %33 = icmp eq %"class.blink::ArrayBufferContents"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19ArrayBufferContentsEEEmm(i64 %37) #14
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ArrayBufferContentsEEEPKcv, i64 0, i64 0)) #14
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #14
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %42

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %5, align 8
  %7 = icmp eq %"class.blink::ArrayBufferContents"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::ArrayBufferContents"*
  %10 = icmp eq %"class.blink::ArrayBufferContents"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %85

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %41, label %26

26:                                               ; preds = %16, %26
  %27 = phi %"class.blink::ArrayBufferContents"* [ %39, %26 ], [ %6, %16 ]
  %28 = phi %"class.blink::ArrayBufferContents"* [ %38, %26 ], [ %9, %16 ]
  %29 = bitcast %"class.blink::ArrayBufferContents"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::ArrayBufferContents"* %28 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %28, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %27, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::__shared_weak_count"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::__shared_weak_count"** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.blink::ArrayBufferContents"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #14
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %27) #14
  %38 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %28, i64 1
  %39 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %27, i64 1
  %40 = icmp eq %"class.blink::ArrayBufferContents"* %39, %20
  br i1 %40, label %41, label %26

41:                                               ; preds = %26, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %21, %"class.blink::ArrayBufferContents"* %6) #14
  br label %85

42:                                               ; preds = %2
  %43 = zext i32 %1 to i64
  %44 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19ArrayBufferContentsEEEmm(i64 %43) #14
  %45 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ArrayBufferContentsEEEPKcv, i64 0, i64 0)) #14
  %46 = lshr i64 %44, 4
  %47 = ptrtoint i8* %45 to i64
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %42
  %56 = bitcast i8* %45 to %"class.blink::ArrayBufferContents"*
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi %"class.blink::ArrayBufferContents"* [ %70, %57 ], [ %49, %55 ]
  %59 = phi %"class.blink::ArrayBufferContents"* [ %69, %57 ], [ %56, %55 ]
  %60 = bitcast %"class.blink::ArrayBufferContents"* %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::ArrayBufferContents"* %59 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %59, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %58, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__shared_weak_count"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::__shared_weak_count"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = bitcast %"class.blink::ArrayBufferContents"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #14
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %58) #14
  %69 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %59, i64 1
  %70 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %58, i64 1
  %71 = icmp eq %"class.blink::ArrayBufferContents"* %70, %53
  br i1 %71, label %72, label %57

72:                                               ; preds = %57
  %73 = load %"class.blink::ArrayBufferContents"*, %"class.blink::ArrayBufferContents"** %48, align 8
  br label %74

74:                                               ; preds = %72, %42
  %75 = phi %"class.blink::ArrayBufferContents"* [ %73, %72 ], [ %49, %42 ]
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %77 = bitcast i8* %76 to %"class.blink::ArrayBufferContents"*
  %78 = icmp eq %"class.blink::ArrayBufferContents"* %75, %77
  br i1 %78, label %81, label %79, !prof !26

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink19ArrayBufferContentsELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %80, %"class.blink::ArrayBufferContents"* %75) #14
  br label %81

81:                                               ; preds = %74, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %47, i64* %82 monotonic, align 8
  %83 = trunc i64 %46 to i32
  %84 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %41, %81, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19ArrayBufferContentsEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.37, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_20DOMSharedArrayBufferERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.819"*, %"class.blink::DOMSharedArrayBuffer"** dereferenceable(8), %"class.blink::DOMSharedArrayBuffer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::DOMSharedArrayBuffer"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %40, align 8
  %42 = icmp eq %"class.blink::DOMArrayBufferBase"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::DOMArrayBufferBase"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::DOMArrayBufferBase"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::DOMArrayBufferBase"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::DOMArrayBufferBase"* %59, inttoptr (i64 -1 to %"class.blink::DOMArrayBufferBase"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %73, align 8
  %75 = icmp eq %"class.blink::DOMArrayBufferBase"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #14
  %80 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::DOMSharedArrayBuffer"*, %"class.blink::DOMSharedArrayBuffer"** %2, align 8
  %89 = ptrtoint %"class.blink::DOMSharedArrayBuffer"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::DOMSharedArrayBuffer"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #14
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.819"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.819"* %0, i32 %35, %"class.blink::Member"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !25
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.915"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking.915"* %42 to %"class.blink::Member"*
  %44 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* %43, i32 %40, %"class.blink::Member"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.819"*, i32, %"class.blink::Member"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !27

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %33 = icmp eq %"class.blink::Member"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.915"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking.915"* %44 to %"class.blink::Member"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member"* %61, %"class.blink::Member"* %55
  %63 = bitcast %"class.blink::Member"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.819"* %0 to %"class.blink::HeapHashTableBacking.915"**
  store %"class.blink::HeapHashTableBacking.915"* %44, %"class.blink::HeapHashTableBacking.915"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.915", %"class.blink::HeapHashTableBacking.915"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* %42, i32 %1, %"class.blink::Member"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member"* %87, %"class.blink::Member"* %82
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member"* %99, %"class.blink::Member"* %88
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.819"*, %"class.blink::Member"*, i32, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #14
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.819"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #14
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #14
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %70, align 8
  %72 = icmp eq %"class.blink::DOMArrayBufferBase"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::DOMArrayBufferBase"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member"* %93, null
  %95 = ptrtoint %"class.blink::Member"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::DOMArrayBufferBase"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::DOMArrayBufferBase"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::DOMArrayBufferBase"* %99, inttoptr (i64 -1 to %"class.blink::DOMArrayBufferBase"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %113, align 8
  %115 = icmp eq %"class.blink::DOMArrayBufferBase"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member"* %121, %3
  %123 = select i1 %122, %"class.blink::Member"* %118, %"class.blink::Member"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.915"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.31, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.915"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.915"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([386 x i8], [386 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_18DOMArrayBufferBaseEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !27

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %33
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_18DOMArrayBufferBaseEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZN5blink29UnpackedSerializedScriptValueC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::SerializedScriptValue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_29UnpackedSerializedScriptValueEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_29UnpackedSerializedScriptValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29UnpackedSerializedScriptValueEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::UnpackedSerializedScriptValue"*
  tail call void @_ZNK5blink29UnpackedSerializedScriptValue5TraceEPNS_7VisitorE(%"class.blink::UnpackedSerializedScriptValue"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_29UnpackedSerializedScriptValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::UnpackedSerializedScriptValue"*
  tail call void @_ZN5blink29UnpackedSerializedScriptValueD1Ev(%"class.blink::UnpackedSerializedScriptValue"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_29UnpackedSerializedScriptValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink29UnpackedSerializedScriptValue5TraceEPNS_7VisitorE(%"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink29UnpackedSerializedScriptValueD1Ev(%"class.blink::UnpackedSerializedScriptValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.832"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.832", %"class.WTF::StringAppend.832"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.833"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.833"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.833"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.865", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.833", %"class.WTF::StringAppend.833"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.865", %"class.WTF::StringTypeAdapter.865"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.833", %"class.WTF::StringAppend.833"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.865"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.865"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.25, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Member"* @"_ZNSt3__118__stable_partitionIRZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS1_13TransferablesEE3$_0PNS1_6MemberINS1_18DOMArrayBufferBaseEEElNS_4pairISA_lEEEET0_SD_SD_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.blink::Member"*, %"class.blink::Member"*, i64, %"class.blink::Member"*, i64) unnamed_addr #0 {
  switch i64 %2, label %107 [
    i64 2, label %6
    i64 3, label %24
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.blink::Member"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 %10, i64* %7 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.blink::Member"* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #14
  br label %17

17:                                               ; preds = %13, %6
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %235, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::Member"* %1 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %235

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %28, align 8
  %30 = icmp eq %"class.v8::BackingStore"* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = ptrtoint %"class.blink::DOMArrayBufferBase"* %27 to i64
  %33 = bitcast %"class.blink::Member"* %25 to i64*
  br label %73

34:                                               ; preds = %24
  %35 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %29) #14
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::Member"* %25 to i64*
  %38 = load i64, i64* %37, align 8
  br label %73

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::Member"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member"* %25 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = inttoptr i64 %43 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #14
  br label %49

49:                                               ; preds = %46, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member"* %25 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #14
  br label %56

56:                                               ; preds = %49, %52
  %57 = load i64, i64* %42, align 8
  %58 = bitcast %"class.blink::Member"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store atomic i64 %59, i64* %42 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.blink::Member"* %25 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #14
  br label %66

66:                                               ; preds = %62, %56
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %235, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::Member"* %1 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #14
  br label %235

73:                                               ; preds = %31, %36
  %74 = phi i64* [ %33, %31 ], [ %37, %36 ]
  %75 = phi i64 [ %32, %31 ], [ %38, %36 ]
  %76 = bitcast %"class.blink::Member"* %1 to i64*
  %77 = load i64, i64* %76, align 8
  store atomic i64 %77, i64* %74 monotonic, align 8
  store atomic i64 %75, i64* %76 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %73
  %81 = bitcast %"class.blink::Member"* %25 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #14
  br label %84

84:                                               ; preds = %80, %73
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.blink::Member"* %1 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %89) #14
  br label %91

91:                                               ; preds = %84, %87
  %92 = bitcast %"class.blink::Member"* %0 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %74, align 8
  store atomic i64 %94, i64* %92 monotonic, align 8
  store atomic i64 %93, i64* %74 monotonic, align 8
  %95 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i8*
  %99 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %98) #14
  br label %100

100:                                              ; preds = %97, %91
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %235, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.blink::Member"* %25 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #14
  br label %235

107:                                              ; preds = %5
  %108 = icmp sgt i64 %2, %4
  br i1 %108, label %180, label %109

109:                                              ; preds = %107
  %110 = bitcast %"class.blink::Member"* %0 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.blink::Member"* %3 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 1
  %114 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %115 = icmp eq %"class.blink::Member"* %114, %1
  br i1 %115, label %151, label %116

116:                                              ; preds = %109, %144
  %117 = phi %"class.blink::Member"* [ %147, %144 ], [ %114, %109 ]
  %118 = phi %"class.blink::Member"* [ %146, %144 ], [ %0, %109 ]
  %119 = phi %"class.blink::Member"* [ %145, %144 ], [ %113, %109 ]
  %120 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 0, i32 0, i32 0
  %121 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %122, align 8
  %124 = icmp eq %"class.v8::BackingStore"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %116
  %126 = ptrtoint %"class.blink::DOMArrayBufferBase"* %121 to i64
  br label %140

127:                                              ; preds = %116
  %128 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %123) #14
  %129 = bitcast %"class.blink::Member"* %117 to i64*
  %130 = load i64, i64* %129, align 8
  br i1 %128, label %131, label %140

131:                                              ; preds = %127
  %132 = bitcast %"class.blink::Member"* %118 to i64*
  store atomic i64 %130, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %131
  %136 = inttoptr i64 %130 to i8*
  %137 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %136) #14
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %118, i64 1
  br label %144

140:                                              ; preds = %127, %125
  %141 = phi i64 [ %126, %125 ], [ %130, %127 ]
  %142 = bitcast %"class.blink::Member"* %119 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %119, i64 1
  br label %144

144:                                              ; preds = %140, %138
  %145 = phi %"class.blink::Member"* [ %119, %138 ], [ %143, %140 ]
  %146 = phi %"class.blink::Member"* [ %139, %138 ], [ %118, %140 ]
  %147 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 1
  %148 = icmp eq %"class.blink::Member"* %147, %1
  br i1 %148, label %149, label %116

149:                                              ; preds = %144
  %150 = bitcast %"class.blink::Member"* %146 to i64*
  br label %151

151:                                              ; preds = %149, %109
  %152 = phi i64* [ %150, %149 ], [ %110, %109 ]
  %153 = phi %"class.blink::Member"* [ %145, %149 ], [ %113, %109 ]
  %154 = phi %"class.blink::Member"* [ %146, %149 ], [ %0, %109 ]
  %155 = bitcast %"class.blink::Member"* %1 to i64*
  %156 = load i64, i64* %155, align 8
  store atomic i64 %156, i64* %152 monotonic, align 8
  %157 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %151
  %160 = inttoptr i64 %156 to i8*
  %161 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %160) #14
  br label %162

162:                                              ; preds = %151, %159
  %163 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %154, i64 1
  %164 = icmp ugt %"class.blink::Member"* %153, %3
  br i1 %164, label %165, label %235

165:                                              ; preds = %162, %176
  %166 = phi %"class.blink::Member"* [ %177, %176 ], [ %3, %162 ]
  %167 = phi %"class.blink::Member"* [ %178, %176 ], [ %163, %162 ]
  %168 = bitcast %"class.blink::Member"* %166 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.blink::Member"* %167 to i64*
  store atomic i64 %169, i64* %170 monotonic, align 8
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %165
  %174 = inttoptr i64 %169 to i8*
  %175 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %174) #14
  br label %176

176:                                              ; preds = %165, %173
  %177 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %166, i64 1
  %178 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %167, i64 1
  %179 = icmp ult %"class.blink::Member"* %177, %153
  br i1 %179, label %165, label %235

180:                                              ; preds = %107
  %181 = sdiv i64 %2, 2
  %182 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 %181
  br label %183

183:                                              ; preds = %196, %180
  %184 = phi %"class.blink::Member"* [ %182, %180 ], [ %186, %196 ]
  %185 = phi i64 [ %181, %180 ], [ %197, %196 ]
  %186 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %184, i64 -1
  %187 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %188, i64 0, i32 1, i32 0, i32 0
  %190 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %189, align 8
  %191 = icmp eq %"class.v8::BackingStore"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %183
  %193 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %190) #14
  br i1 %193, label %198, label %194

194:                                              ; preds = %183, %192
  %195 = icmp eq %"class.blink::Member"* %186, %0
  br i1 %195, label %200, label %196

196:                                              ; preds = %194
  %197 = add nsw i64 %185, -1
  br label %183

198:                                              ; preds = %192
  %199 = tail call fastcc %"class.blink::Member"* @"_ZNSt3__118__stable_partitionIRZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS1_13TransferablesEE3$_0PNS1_6MemberINS1_18DOMArrayBufferBaseEEElNS_4pairISA_lEEEET0_SD_SD_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.blink::Member"* %0, %"class.blink::Member"* %186, i64 %185, %"class.blink::Member"* %3, i64 %4)
  br label %200

200:                                              ; preds = %194, %198
  %201 = phi %"class.blink::Member"* [ %199, %198 ], [ %0, %194 ]
  %202 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 1
  %203 = sub nsw i64 %2, %181
  %204 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %182, i64 0, i32 0, i32 0
  %205 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %205, i64 0, i32 1, i32 0, i32 0
  %207 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %206, align 8
  %208 = icmp eq %"class.v8::BackingStore"* %207, null
  br i1 %208, label %224, label %209

209:                                              ; preds = %200, %217
  %210 = phi %"class.v8::BackingStore"* [ %222, %217 ], [ %207, %200 ]
  %211 = phi i64 [ %218, %217 ], [ %203, %200 ]
  %212 = phi %"class.blink::Member"* [ %215, %217 ], [ %182, %200 ]
  %213 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %210) #14
  br i1 %213, label %214, label %224

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %212, i64 1
  %216 = icmp eq %"class.blink::Member"* %215, %1
  br i1 %216, label %228, label %217

217:                                              ; preds = %214
  %218 = add nsw i64 %211, -1
  %219 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %215, i64 0, i32 0, i32 0
  %220 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %220, i64 0, i32 1, i32 0, i32 0
  %222 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %221, align 8
  %223 = icmp eq %"class.v8::BackingStore"* %222, null
  br i1 %223, label %224, label %209

224:                                              ; preds = %209, %217, %200
  %225 = phi %"class.blink::Member"* [ %182, %200 ], [ %215, %217 ], [ %212, %209 ]
  %226 = phi i64 [ %203, %200 ], [ %218, %217 ], [ %211, %209 ]
  %227 = tail call fastcc %"class.blink::Member"* @"_ZNSt3__118__stable_partitionIRZN5blink21SerializedScriptValue28ExtractNonSharedArrayBuffersERNS1_13TransferablesEE3$_0PNS1_6MemberINS1_18DOMArrayBufferBaseEEElNS_4pairISA_lEEEET0_SD_SD_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.blink::Member"* %225, %"class.blink::Member"* %1, i64 %226, %"class.blink::Member"* %3, i64 %4)
  br label %228

228:                                              ; preds = %214, %224
  %229 = phi %"class.blink::Member"* [ %227, %224 ], [ %202, %214 ]
  %230 = icmp eq %"class.blink::Member"* %201, %182
  br i1 %230, label %235, label %231

231:                                              ; preds = %228
  %232 = icmp eq %"class.blink::Member"* %182, %229
  br i1 %232, label %235, label %233

233:                                              ; preds = %231
  %234 = tail call %"class.blink::Member"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_18DOMArrayBufferBaseEEEEET_S6_S6_S6_(%"class.blink::Member"* %201, %"class.blink::Member"* %182, %"class.blink::Member"* %229) #14
  br label %235

235:                                              ; preds = %176, %162, %233, %231, %228, %103, %100, %69, %66, %20, %17
  %236 = phi %"class.blink::Member"* [ %1, %17 ], [ %1, %20 ], [ %1, %66 ], [ %1, %69 ], [ %25, %100 ], [ %25, %103 ], [ %234, %233 ], [ %229, %228 ], [ %201, %231 ], [ %163, %162 ], [ %163, %176 ]
  ret %"class.blink::Member"* %236
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_18DOMArrayBufferBaseEEEEET_S6_S6_S6_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %30, %3
  %5 = phi %"class.blink::Member"* [ %1, %3 ], [ %31, %30 ]
  %6 = phi %"class.blink::Member"* [ %0, %3 ], [ %26, %30 ]
  %7 = phi %"class.blink::Member"* [ %1, %3 ], [ %27, %30 ]
  %8 = bitcast %"class.blink::Member"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::Member"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  store atomic i64 %11, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::Member"* %6 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #14
  br label %18

18:                                               ; preds = %14, %4
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::Member"* %7 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #14
  br label %25

25:                                               ; preds = %18, %21
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 1
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 1
  %28 = icmp eq %"class.blink::Member"* %27, %2
  %29 = icmp eq %"class.blink::Member"* %26, %5
  br i1 %28, label %32, label %30

30:                                               ; preds = %25
  %31 = select i1 %29, %"class.blink::Member"* %27, %"class.blink::Member"* %5
  br label %4

32:                                               ; preds = %25
  br i1 %29, label %65, label %33

33:                                               ; preds = %32, %63
  %34 = phi %"class.blink::Member"* [ %64, %63 ], [ %5, %32 ]
  %35 = phi %"class.blink::Member"* [ %58, %63 ], [ %26, %32 ]
  %36 = phi %"class.blink::Member"* [ %59, %63 ], [ %5, %32 ]
  br label %37

37:                                               ; preds = %33, %62
  %38 = phi %"class.blink::Member"* [ %58, %62 ], [ %35, %33 ]
  %39 = phi %"class.blink::Member"* [ %34, %62 ], [ %36, %33 ]
  %40 = bitcast %"class.blink::Member"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.blink::Member"* %38 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %46, %37
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member"* %39 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #14
  br label %57

57:                                               ; preds = %50, %53
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 1
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 1
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = icmp eq %"class.blink::Member"* %58, %34
  br i1 %60, label %62, label %63

62:                                               ; preds = %57
  br i1 %61, label %65, label %37

63:                                               ; preds = %57
  %64 = select i1 %61, %"class.blink::Member"* %59, %"class.blink::Member"* %34
  br label %33

65:                                               ; preds = %62, %32
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.269"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = icmp ugt %"class.blink::Member"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.269"* %0, i32 %22) #14
  %23 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member"* %1 to i64
  %26 = ptrtoint %"class.blink::Member"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.269"* %0, i32 %37) #14
  %38 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %44
  %46 = bitcast %"class.blink::Member"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #14
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.269"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !26

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.269"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !27

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !25
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.269"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18DOMArrayBufferBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.269"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.269"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.269"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !26

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.269"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.269"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.269"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.269", %"class.WTF::Vector.269"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18DOMArrayBufferBaseEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.40, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.41, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !27

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.240"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.240"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18DOMArrayBufferBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !27

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18DOMArrayBufferBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.819"*, %"class.blink::DOMArrayBufferBase"** dereferenceable(8), %"class.blink::DOMArrayBufferBase"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::DOMArrayBufferBase"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %40, align 8
  %42 = icmp eq %"class.blink::DOMArrayBufferBase"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::DOMArrayBufferBase"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::DOMArrayBufferBase"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::DOMArrayBufferBase"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::DOMArrayBufferBase"* %59, inttoptr (i64 -1 to %"class.blink::DOMArrayBufferBase"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %73, align 8
  %75 = icmp eq %"class.blink::DOMArrayBufferBase"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #14
  %80 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %2, align 8
  %89 = ptrtoint %"class.blink::DOMArrayBufferBase"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::DOMArrayBufferBase"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #14
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.819", %"class.WTF::HashTable.819"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_18DOMArrayBufferBaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.819"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind readnone speculatable
declare <8 x i16> @llvm.bswap.v8i16(<8 x i16>) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !14, !8}
!14 = !{!"llvm.loop.unroll.runtime.disable"}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !14, !8}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{i8 0, i8 2}
!26 = !{!"branch_weights", i32 2000, i32 1}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!30 = distinct !{!30, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!33 = distinct !{!33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!36 = distinct !{!36, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!45 = distinct !{!45, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!48 = distinct !{!48, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!51 = distinct !{!51, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!54 = distinct !{!54, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!57 = distinct !{!57, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!58 = distinct !{!58, !10}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!61 = distinct !{!61, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!71 = !{!"branch_weights", i32 2000, i32 2002}
