; ModuleID = '../../chrome/browser/ui/task_manager/task_manager_table_model.cc'
source_filename = "../../chrome/browser/ui/task_manager/task_manager_table_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.BrowserProcess = type { i32 (...)** }
%"struct.task_manager::TableColumnData" = type { i32, i32, i32, float, i32, i32, i8, i8, i8 }
%"struct.task_manager::TableSortDescriptor" = type <{ i32, i8, [3 x i8] }>
%"class.task_manager::TaskManagerTableModel" = type <{ %"class.task_manager::TaskManagerObserver", %"class.ui::TableModel", %"class.task_manager::TableViewDelegate"*, %"class.std::__1::unique_ptr.14", %"class.ui::TableModelObserver"*, %"class.std::__1::vector.54", %"class.std::__1::unique_ptr.61", i8, [7 x i8] }>
%"class.task_manager::TaskManagerObserver" = type { i32 (...)**, %"class.task_manager::TaskManagerInterface"*, %"class.base::TimeDelta", i64 }
%"class.task_manager::TaskManagerInterface" = type { i32 (...)**, %"class.base::ObserverList", %"class.std::__1::unique_ptr", i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::RepeatingTimer"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::TableModel" = type { i32 (...)** }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ui::TableModelObserver" = type { i32 (...)** }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { i64*, i64*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.task_manager::TaskManagerValuesStringifier"* }
%"class.task_manager::TaskManagerValuesStringifier" = type { %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64" }
%"class.std::__1::basic_string.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.67 }
%union.anon.67 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.task_manager::TableViewDelegate" = type { i32 (...)** }
%"class.base::CommandLine" = type { %"class.std::__1::vector.76", %"class.std::__1::map", i64 }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.91" }
%"class.base::time_internal::TimeBase.91" = type { i64 }
%"struct.blink::WebCacheResourceTypeStats" = type { %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat" }
%"struct.blink::WebCacheResourceTypeStat" = type { i64, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.68 }
%struct.anon.68 = type { %"struct.std::__1::__padding.69", i8 }
%"struct.std::__1::__padding.69" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::ImageModel" = type { %"class.absl::variant.92" }
%"class.absl::variant.92" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial.93" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial.93" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.94" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.94" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial.95" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial.95" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial.96" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial.96" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.97" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.97" = type { %"class.absl::variant_internal::VariantStateBase.98" }
%"class.absl::variant_internal::VariantStateBase.98" = type { %"union.absl::variant_internal::DestructibleUnionImpl.99", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl.99" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.100", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.100" = type { %"class.absl::variant_internal::VariantStateBase.101" }
%"class.absl::variant_internal::VariantStateBase.101" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %class.scoped_refptr.138, %"class.base::RepeatingCallback.139", %class.scoped_refptr.140, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback.118", %class.PrefNotifier*, %"class.std::__1::map.119", i8, %"class.std::__1::unique_ptr.129" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.117, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.117 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback.118" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.138 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.139" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.140 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.156", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { float }
%"class.base::detail::const_dict_iterator::pointer" = type { %"struct.std::__1::pair.165" }
%"struct.std::__1::pair.165" = type { %"class.std::__1::basic_string"*, %"class.base::Value"* }
%"class.base::detail::const_dict_iterator" = type { %"class.std::__1::__wrap_iter.159" }
%"class.std::__1::__wrap_iter.159" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type opaque
%"class.base::detail::const_dict_iterator_proxy" = type { %"class.base::flat_map"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::pair"* }
%class.ScopedUserPrefUpdate = type { i32 (...)**, %"class.subtle::ScopedUserPrefUpdateBase" }
%"class.subtle::ScopedUserPrefUpdateBase" = type { %class.PrefService*, %"class.std::__1::basic_string", %"class.base::Value"* }
%"class.base::DictionaryValue::Iterator" = type { %"class.base::DictionaryValue"*, %"class.base::detail::const_dict_iterator" }
%"class.content::WebContents" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN12task_manager28TaskManagerValuesStringifier19GetNetworkUsageTextEl = comdat any

$_ZN12task_manager28TaskManagerValuesStringifier15GetCpuUsageTextEd = comdat any

$_ZN12task_manager28TaskManagerValuesStringifier14GetCpuTimeTextEN4base9TimeDeltaE = comdat any

$_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb = comdat any

$_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED2Ev = comdat any

$_ZN12task_manager19TaskManagerObserver42OnTasksRefreshedWithBackgroundCalculationsERKNSt3__16vectorIlNS1_9allocatorIlEEEE = comdat any

$_ZN12task_manager19TaskManagerObserver18OnTaskUnresponsiveEl = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN12task_manager28TaskManagerValuesStringifierD2Ev = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED0Ev = comdat any

$_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE3GetEv = comdat any

$_ZTV20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE = comdat any

@_ZTVN12task_manager21TaskManagerTableModelE = hidden unnamed_addr constant { [14 x i8*], [10 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*)* @_ZN12task_manager21TaskManagerTableModelD2Ev to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*)* @_ZN12task_manager21TaskManagerTableModelD0Ev to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*, i64)* @_ZN12task_manager21TaskManagerTableModel11OnTaskAddedEl to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*, i64)* @_ZN12task_manager21TaskManagerTableModel17OnTaskToBeRemovedEl to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*, %"class.std::__1::vector.54"*)* @_ZN12task_manager21TaskManagerTableModel16OnTasksRefreshedERKNSt3__16vectorIlNS1_9allocatorIlEEEE to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerObserver"*, %"class.std::__1::vector.54"*)* @_ZN12task_manager19TaskManagerObserver42OnTasksRefreshedWithBackgroundCalculationsERKNSt3__16vectorIlNS1_9allocatorIlEEEE to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerObserver"*, i64)* @_ZN12task_manager19TaskManagerObserver18OnTaskUnresponsiveEl to i8*), i8* bitcast (i32 (%"class.task_manager::TaskManagerTableModel"*)* @_ZN12task_manager21TaskManagerTableModel8RowCountEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerTableModel"*, i32, i32)* @_ZN12task_manager21TaskManagerTableModel7GetTextEii to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.task_manager::TaskManagerTableModel"*, i32)* @_ZN12task_manager21TaskManagerTableModel7GetIconEi to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*, %"class.ui::TableModelObserver"*)* @_ZN12task_manager21TaskManagerTableModel11SetObserverEPN2ui18TableModelObserverE to i8*), i8* bitcast (i32 (%"class.task_manager::TaskManagerTableModel"*, i32, i32, i32)* @_ZN12task_manager21TaskManagerTableModel13CompareValuesEiii to i8*)], [10 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (i32 (%"class.task_manager::TaskManagerTableModel"*)* @_ZThn32_N12task_manager21TaskManagerTableModel8RowCountEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerTableModel"*, i32, i32)* @_ZThn32_N12task_manager21TaskManagerTableModel7GetTextEii to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.task_manager::TaskManagerTableModel"*, i32)* @_ZThn32_N12task_manager21TaskManagerTableModel7GetIconEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.64"*, %"class.ui::TableModel"*, i32)* @_ZN2ui10TableModel10GetTooltipEi to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*, %"class.ui::TableModelObserver"*)* @_ZThn32_N12task_manager21TaskManagerTableModel11SetObserverEPN2ui18TableModelObserverE to i8*), i8* bitcast (i32 (%"class.task_manager::TaskManagerTableModel"*, i32, i32, i32)* @_ZThn32_N12task_manager21TaskManagerTableModel13CompareValuesEiii to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*)* @_ZThn32_N12task_manager21TaskManagerTableModelD1Ev to i8*), i8* bitcast (void (%"class.task_manager::TaskManagerTableModel"*)* @_ZThn32_N12task_manager21TaskManagerTableModelD0Ev to i8*)] }, align 8
@_ZN8switches16kEnableNaClDebugE = external constant [0 x i8], align 1
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8
@_ZN5prefs28kTaskManagerColumnVisibilityE = external constant [0 x i8], align 1
@_ZN12task_manager16kSortColumnIdKeyE = external constant [0 x i8], align 1
@_ZN12task_manager19kSortIsAscendingKeyE = external constant [0 x i8], align 1
@_ZN12task_manager12kColumnsSizeE = external local_unnamed_addr constant i64, align 8
@_ZN12task_manager8kColumnsE = external local_unnamed_addr global [0 x %"struct.task_manager::TableColumnData"], align 4
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN12task_manager12_GLOBAL__N_120kCpuTextFormatStringE = internal constant [5 x i8] c"%.1f\00", align 1
@_ZTV20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ScopedUserPrefUpdate*)* @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED2Ev to i8*), i8* bitcast (void (%class.ScopedUserPrefUpdate*)* @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED0Ev to i8*), i8* bitcast (%"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)* @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE3GetEv to i8*)] }, comdat, align 8

@_ZN12task_manager19TableSortDescriptorC1Ev = hidden unnamed_addr alias void (%"struct.task_manager::TableSortDescriptor"*), void (%"struct.task_manager::TableSortDescriptor"*)* @_ZN12task_manager19TableSortDescriptorC2Ev
@_ZN12task_manager19TableSortDescriptorC1Eib = hidden unnamed_addr alias void (%"struct.task_manager::TableSortDescriptor"*, i32, i1), void (%"struct.task_manager::TableSortDescriptor"*, i32, i1)* @_ZN12task_manager19TableSortDescriptorC2Eib
@_ZN12task_manager21TaskManagerTableModelC1EPNS_17TableViewDelegateE = hidden unnamed_addr alias void (%"class.task_manager::TaskManagerTableModel"*, %"class.task_manager::TableViewDelegate"*), void (%"class.task_manager::TaskManagerTableModel"*, %"class.task_manager::TableViewDelegate"*)* @_ZN12task_manager21TaskManagerTableModelC2EPNS_17TableViewDelegateE
@_ZN12task_manager21TaskManagerTableModelD1Ev = hidden unnamed_addr alias void (%"class.task_manager::TaskManagerTableModel"*), void (%"class.task_manager::TaskManagerTableModel"*)* @_ZN12task_manager21TaskManagerTableModelD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12task_manager19TableSortDescriptorC2Ev(%"struct.task_manager::TableSortDescriptor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12task_manager19TableSortDescriptorC2Eib(%"struct.task_manager::TableSortDescriptor"* nocapture, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %0, i64 0, i32 1
  store i8 %4, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModelC2EPNS_17TableViewDelegateE(%"class.task_manager::TaskManagerTableModel"*, %"class.task_manager::TableViewDelegate"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  tail call void @_ZN12task_manager19TaskManagerObserverC2EN4base9TimeDeltaEl(%"class.task_manager::TaskManagerObserver"* %3, i64 1000000, i64 0) #12
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*] }, { [14 x i8*], [10 x i8*] }* @_ZTVN12task_manager21TaskManagerTableModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*] }, { [14 x i8*], [10 x i8*] }* @_ZTVN12task_manager21TaskManagerTableModelE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  store %"class.task_manager::TableViewDelegate"* %1, %"class.task_manager::TableViewDelegate"** %6, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 3
  %8 = tail call i8* @_Znwm(i64 32) #13
  %9 = bitcast i8* %8 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %9) #12
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.14"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 6
  %14 = bitcast %"class.ui::TableModelObserver"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  %15 = tail call i8* @_Znwm(i64 168) #13
  %16 = bitcast i8* %15 to %"class.std::__1::basic_string.64"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* nonnull sret %16, i32 7257) #12
  %17 = getelementptr inbounds i8, i8* %15, i64 24
  %18 = getelementptr inbounds i8, i8* %15, i64 47
  store i8 1, i8* %18, align 1
  %19 = bitcast i8* %17 to i16*
  store i16 48, i16* %19, align 2
  %20 = getelementptr inbounds i8, i8* %15, i64 26
  %21 = bitcast i8* %20 to i16*
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %15, i64 48
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string.64"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* sret %23, i32 7258) #12
  %24 = getelementptr inbounds i8, i8* %15, i64 72
  %25 = bitcast i8* %24 to %"class.std::__1::basic_string.64"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* sret %25, i32 7259) #12
  %26 = getelementptr inbounds i8, i8* %15, i64 96
  %27 = getelementptr inbounds i8, i8* %15, i64 119
  store i8 1, i8* %27, align 1
  %28 = bitcast i8* %26 to i16*
  store i16 42, i16* %28, align 2
  %29 = getelementptr inbounds i8, i8* %15, i64 98
  %30 = bitcast i8* %29 to i16*
  store i16 0, i16* %30, align 2
  %31 = getelementptr inbounds i8, i8* %15, i64 120
  %32 = bitcast i8* %31 to %"class.std::__1::basic_string.64"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* sret %32, i32 7260) #12
  %33 = getelementptr inbounds i8, i8* %15, i64 144
  %34 = bitcast i8* %33 to %"class.std::__1::basic_string.64"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* sret %34, i32 7261) #12
  %35 = ptrtoint i8* %15 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.61"* %13 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 7
  %38 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %39 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %38, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches16kEnableNaClDebugE, i64 0, i64 0)) #12
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %37, align 8
  tail call void @_ZN12task_manager21TaskManagerTableModel13StartUpdatingEv(%"class.task_manager::TaskManagerTableModel"* %0)
  ret void
}

declare void @_ZN12task_manager19TaskManagerObserverC2EN4base9TimeDeltaEl(%"class.task_manager::TaskManagerObserver"*, i64, i64) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel13StartUpdatingEv(%"class.task_manager::TaskManagerTableModel"*) local_unnamed_addr #1 align 2 {
  %2 = tail call %"class.task_manager::TaskManagerInterface"* @_ZN12task_manager20TaskManagerInterface14GetTaskManagerEv() #12
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  tail call void @_ZN12task_manager20TaskManagerInterface11AddObserverEPNS_19TaskManagerObserverE(%"class.task_manager::TaskManagerInterface"* %2, %"class.task_manager::TaskManagerObserver"* %3) #12
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %4, align 8
  %6 = bitcast %"class.task_manager::TaskManagerInterface"* %5 to %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)***
  %7 = load %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)**, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)** %7, i64 33
  %9 = load %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)** %8, align 8
  %10 = tail call dereferenceable(24) %"class.std::__1::vector.54"* %9(%"class.task_manager::TaskManagerInterface"* %5) #12
  %11 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5
  %12 = icmp eq %"class.std::__1::vector.54"* %11, %10
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %10, i64 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %10, i64 0, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"* %11, i64* %15, i64* %17) #12
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %20 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %19, align 8
  %21 = icmp eq %"class.ui::TableModelObserver"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.task_manager::TaskManagerTableModel"* %0 to i32 (%"class.task_manager::TaskManagerTableModel"*)***
  %24 = load i32 (%"class.task_manager::TaskManagerTableModel"*)**, i32 (%"class.task_manager::TaskManagerTableModel"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %24, i64 7
  %26 = load i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %25, align 8
  %27 = tail call i32 %26(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %28 = bitcast %"class.ui::TableModelObserver"* %20 to void (%"class.ui::TableModelObserver"*, i32, i32)***
  %29 = load void (%"class.ui::TableModelObserver"*, i32, i32)**, void (%"class.ui::TableModelObserver"*, i32, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %29, i64 1
  %31 = load void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %30, align 8
  tail call void %31(%"class.ui::TableModelObserver"* nonnull %20, i32 0, i32 %27) #12
  %32 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %19, align 8
  %33 = icmp eq %"class.ui::TableModelObserver"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %22
  %35 = bitcast %"class.ui::TableModelObserver"* %32 to void (%"class.ui::TableModelObserver"*)***
  %36 = load void (%"class.ui::TableModelObserver"*)**, void (%"class.ui::TableModelObserver"*)*** %35, align 8
  %37 = load void (%"class.ui::TableModelObserver"*)*, void (%"class.ui::TableModelObserver"*)** %36, align 8
  tail call void %37(%"class.ui::TableModelObserver"* nonnull %32) #12
  br label %38

38:                                               ; preds = %18, %22, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModelD2Ev(%"class.task_manager::TaskManagerTableModel"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*] }, { [14 x i8*], [10 x i8*] }* @_ZTVN12task_manager21TaskManagerTableModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [10 x i8*] }, { [14 x i8*], [10 x i8*] }* @_ZTVN12task_manager21TaskManagerTableModelE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %5, align 8
  tail call void @_ZN12task_manager20TaskManagerInterface14RemoveObserverEPNS_19TaskManagerObserverE(%"class.task_manager::TaskManagerInterface"* %6, %"class.task_manager::TaskManagerObserver"* %4) #12
  %7 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %7, align 8
  store %"class.task_manager::TaskManagerValuesStringifier"* null, %"class.task_manager::TaskManagerValuesStringifier"** %7, align 8
  %9 = icmp eq %"class.task_manager::TaskManagerValuesStringifier"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN12task_manager28TaskManagerValuesStringifierD2Ev(%"class.task_manager::TaskManagerValuesStringifier"* nonnull %8) #12
  %11 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i64* %14 to i64
  %18 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i64* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %22, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %22, align 8
  %24 = icmp eq %"class.base::DictionaryValue"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %23, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %26) #12
  %27 = bitcast %"class.base::DictionaryValue"* %23 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %21, %25
  tail call void @_ZN12task_manager19TaskManagerObserverD2Ev(%"class.task_manager::TaskManagerObserver"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel12StopUpdatingEv(%"class.task_manager::TaskManagerTableModel"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  tail call void @_ZN12task_manager20TaskManagerInterface14RemoveObserverEPNS_19TaskManagerObserverE(%"class.task_manager::TaskManagerInterface"* %4, %"class.task_manager::TaskManagerObserver"* %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12task_manager19TaskManagerObserverD2Ev(%"class.task_manager::TaskManagerObserver"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N12task_manager21TaskManagerTableModelD1Ev(%"class.task_manager::TaskManagerTableModel"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = bitcast i64** %2 to %"class.task_manager::TaskManagerTableModel"*
  tail call void @_ZN12task_manager21TaskManagerTableModelD2Ev(%"class.task_manager::TaskManagerTableModel"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModelD0Ev(%"class.task_manager::TaskManagerTableModel"*) unnamed_addr #1 align 2 {
  tail call void @_ZN12task_manager21TaskManagerTableModelD2Ev(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %2 = bitcast %"class.task_manager::TaskManagerTableModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N12task_manager21TaskManagerTableModelD0Ev(%"class.task_manager::TaskManagerTableModel"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = bitcast i64** %2 to %"class.task_manager::TaskManagerTableModel"*
  tail call void @_ZN12task_manager21TaskManagerTableModelD2Ev(%"class.task_manager::TaskManagerTableModel"* %3) #12
  %4 = bitcast i64** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN12task_manager21TaskManagerTableModel8RowCountEv(%"class.task_manager::TaskManagerTableModel"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 1
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn32_N12task_manager21TaskManagerTableModel8RowCountEv(%"class.task_manager::TaskManagerTableModel"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 -1, i32 5, i32 0, i32 1
  %3 = getelementptr inbounds i64*, i64** %2, i64 8
  %4 = getelementptr inbounds i64*, i64** %2, i64 9
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i64** %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel7GetTextEii(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerTableModel"* readonly, i32, i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string.64", align 8
  %6 = alloca %"class.std::__1::basic_string.64", align 8
  %7 = alloca %"class.std::__1::basic_string.64", align 8
  %8 = alloca %"class.std::__1::basic_string.64", align 8
  %9 = alloca %"class.std::__1::basic_string.64", align 8
  %10 = alloca %"class.std::__1::basic_string.64", align 8
  %11 = alloca %"class.base::Time", align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.blink::WebCacheResourceTypeStats", align 8
  %17 = alloca %"struct.blink::WebCacheResourceTypeStats", align 8
  %18 = alloca %"struct.blink::WebCacheResourceTypeStats", align 8
  %19 = alloca i8, align 1
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  switch i32 %3, label %3090 [
    i32 7241, label %22
    i32 7242, label %22
    i32 7238, label %22
    i32 7239, label %22
    i32 7240, label %22
    i32 7237, label %22
    i32 7232, label %22
    i32 7253, label %22
    i32 7251, label %22
    i32 7252, label %22
    i32 7248, label %22
    i32 7249, label %22
    i32 7250, label %22
    i32 7236, label %22
    i32 7244, label %22
    i32 7245, label %22
    i32 7246, label %22
    i32 7247, label %22
    i32 7235, label %74
    i32 7243, label %269
    i32 7233, label %585
    i32 7234, label %619
    i32 7254, label %2890
  ]

22:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %73, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %26 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %25, align 8
  %27 = add nsw i32 %2, -1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 %28
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.task_manager::TaskManagerInterface"* %26 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %34 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %33, align 8
  %35 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %34, i64 20
  %36 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %35, align 8
  %37 = tail call dereferenceable(4) i32* %36(%"class.task_manager::TaskManagerInterface"* %26, i64 %32) #12
  %38 = load i32, i32* %37, align 4
  %39 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %25, align 8
  %40 = sext i32 %2 to i64
  %41 = load i64*, i64** %29, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %40
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.task_manager::TaskManagerInterface"* %39 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %45 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %44, align 8
  %46 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %45, i64 20
  %47 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %46, align 8
  %48 = tail call dereferenceable(4) i32* %47(%"class.task_manager::TaskManagerInterface"* %39, i64 %43) #12
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %38, %49
  br i1 %50, label %51, label %73

51:                                               ; preds = %24
  %52 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %25, align 8
  %53 = load i64*, i64** %29, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.task_manager::TaskManagerInterface"* %52 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %57 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %57, i64 36
  %59 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.task_manager::TaskManagerInterface"* %52, i64 %55) #12
  %61 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %25, align 8
  %62 = load i64*, i64** %29, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 %40
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.task_manager::TaskManagerInterface"* %61 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %66 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %66, i64 36
  %68 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.task_manager::TaskManagerInterface"* %61, i64 %64) #12
  %70 = xor i1 %60, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %51
  %72 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #12
  br label %3092

73:                                               ; preds = %24, %22, %51
  switch i32 %3, label %3090 [
    i32 7235, label %74
    i32 7243, label %269
    i32 7237, label %281
    i32 7238, label %296
    i32 7240, label %311
    i32 7239, label %326
    i32 7241, label %529
    i32 7242, label %544
    i32 7232, label %559
    i32 7233, label %585
    i32 7234, label %619
    i32 7244, label %653
    i32 7245, label %854
    i32 7248, label %1055
    i32 7249, label %1258
    i32 7250, label %1461
    i32 7251, label %1664
    i32 7252, label %1681
    i32 7253, label %1696
    i32 7236, label %1918
    i32 7247, label %2489
    i32 7246, label %2689
  ]

74:                                               ; preds = %4, %73
  %75 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %76 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %75, align 8
  %77 = sext i32 %2 to i64
  %78 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 %77
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.task_manager::TaskManagerInterface"* %76 to %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %83 = load %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)**, %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)*** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)** %83, i64 16
  %85 = load %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.std::__1::basic_string.64"* (%"class.task_manager::TaskManagerInterface"*, i64)** %84, align 8
  %86 = tail call dereferenceable(24) %"class.std::__1::basic_string.64"* %85(%"class.task_manager::TaskManagerInterface"* %76, i64 %81) #12
  %87 = bitcast %"class.std::__1::basic_string.64"* %86 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %74
  %92 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %93 = bitcast %"class.std::__1::basic_string.64"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #12
  br label %3092

94:                                               ; preds = %74
  %95 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ult i64 %98, 11
  br i1 %99, label %100, label %105

100:                                              ; preds = %94
  %101 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %102 = trunc i64 %98 to i8
  %103 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  store i8 %102, i8* %104, align 1
  br label %122

105:                                              ; preds = %94
  %106 = icmp ugt i64 %98, 9223372036854775791
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %108) #14
  unreachable

109:                                              ; preds = %105
  %110 = add nuw nsw i64 %98, 8
  %111 = and i64 %110, -8
  %112 = icmp slt i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  tail call void @abort() #14
  unreachable

114:                                              ; preds = %109
  %115 = shl i64 %111, 1
  %116 = tail call i8* @_Znwm(i64 %115) #13
  %117 = bitcast i8* %116 to i16*
  %118 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %116, i8** %118, align 8
  %119 = or i64 %111, -9223372036854775808
  %120 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %98, i64* %121, align 8
  br label %122

122:                                              ; preds = %114, %100
  %123 = phi i16* [ %101, %100 ], [ %117, %114 ]
  %124 = add nuw nsw i64 %98, 1
  %125 = add i64 %98, 1
  %126 = icmp ult i64 %125, 16
  br i1 %126, label %216, label %127

127:                                              ; preds = %122
  %128 = add i64 %98, 1
  %129 = getelementptr i16, i16* %123, i64 %128
  %130 = getelementptr i16, i16* %96, i64 %128
  %131 = icmp ult i16* %123, %130
  %132 = icmp ult i16* %96, %129
  %133 = and i1 %131, %132
  br i1 %133, label %216, label %134

134:                                              ; preds = %127
  %135 = and i64 %125, -16
  %136 = sub i64 %124, %135
  %137 = getelementptr i16, i16* %96, i64 %135
  %138 = getelementptr i16, i16* %123, i64 %135
  %139 = add i64 %135, -16
  %140 = lshr exact i64 %139, 4
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 3
  %143 = icmp ult i64 %139, 48
  br i1 %143, label %195, label %144

144:                                              ; preds = %134
  %145 = sub nsw i64 %141, %142
  br label %146

146:                                              ; preds = %146, %144
  %147 = phi i64 [ 0, %144 ], [ %192, %146 ]
  %148 = phi i64 [ %145, %144 ], [ %193, %146 ]
  %149 = getelementptr i16, i16* %96, i64 %147
  %150 = getelementptr i16, i16* %123, i64 %147
  %151 = bitcast i16* %149 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !2
  %153 = getelementptr i16, i16* %149, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !2
  %156 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %156, align 2, !alias.scope !5, !noalias !2
  %157 = getelementptr i16, i16* %150, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %158, align 2, !alias.scope !5, !noalias !2
  %159 = or i64 %147, 16
  %160 = getelementptr i16, i16* %96, i64 %159
  %161 = getelementptr i16, i16* %123, i64 %159
  %162 = bitcast i16* %160 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !2
  %164 = getelementptr i16, i16* %160, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !2
  %167 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %167, align 2, !alias.scope !5, !noalias !2
  %168 = getelementptr i16, i16* %161, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %169, align 2, !alias.scope !5, !noalias !2
  %170 = or i64 %147, 32
  %171 = getelementptr i16, i16* %96, i64 %170
  %172 = getelementptr i16, i16* %123, i64 %170
  %173 = bitcast i16* %171 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !2
  %175 = getelementptr i16, i16* %171, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !2
  %178 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %178, align 2, !alias.scope !5, !noalias !2
  %179 = getelementptr i16, i16* %172, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %180, align 2, !alias.scope !5, !noalias !2
  %181 = or i64 %147, 48
  %182 = getelementptr i16, i16* %96, i64 %181
  %183 = getelementptr i16, i16* %123, i64 %181
  %184 = bitcast i16* %182 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !2
  %186 = getelementptr i16, i16* %182, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !2
  %189 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %189, align 2, !alias.scope !5, !noalias !2
  %190 = getelementptr i16, i16* %183, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %191, align 2, !alias.scope !5, !noalias !2
  %192 = add i64 %147, 64
  %193 = add i64 %148, -4
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %146, !llvm.loop !7

195:                                              ; preds = %146, %134
  %196 = phi i64 [ 0, %134 ], [ %192, %146 ]
  %197 = icmp eq i64 %142, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %211, %198 ], [ %196, %195 ]
  %200 = phi i64 [ %212, %198 ], [ %142, %195 ]
  %201 = getelementptr i16, i16* %96, i64 %199
  %202 = getelementptr i16, i16* %123, i64 %199
  %203 = bitcast i16* %201 to <8 x i16>*
  %204 = load <8 x i16>, <8 x i16>* %203, align 2, !alias.scope !2
  %205 = getelementptr i16, i16* %201, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !2
  %208 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %204, <8 x i16>* %208, align 2, !alias.scope !5, !noalias !2
  %209 = getelementptr i16, i16* %202, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %210, align 2, !alias.scope !5, !noalias !2
  %211 = add i64 %199, 16
  %212 = add i64 %200, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %198, !llvm.loop !9

214:                                              ; preds = %198, %195
  %215 = icmp eq i64 %125, %135
  br i1 %215, label %3092, label %216

216:                                              ; preds = %214, %127, %122
  %217 = phi i64 [ %124, %127 ], [ %124, %122 ], [ %136, %214 ]
  %218 = phi i16* [ %96, %127 ], [ %96, %122 ], [ %137, %214 ]
  %219 = phi i16* [ %123, %127 ], [ %123, %122 ], [ %138, %214 ]
  %220 = add i64 %217, -1
  %221 = and i64 %217, 7
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %234, label %223

223:                                              ; preds = %216, %223
  %224 = phi i64 [ %229, %223 ], [ %217, %216 ]
  %225 = phi i16* [ %231, %223 ], [ %218, %216 ]
  %226 = phi i16* [ %230, %223 ], [ %219, %216 ]
  %227 = phi i64 [ %232, %223 ], [ %221, %216 ]
  %228 = load i16, i16* %225, align 2
  store i16 %228, i16* %226, align 2
  %229 = add i64 %224, -1
  %230 = getelementptr inbounds i16, i16* %226, i64 1
  %231 = getelementptr inbounds i16, i16* %225, i64 1
  %232 = add i64 %227, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %223, !llvm.loop !11

234:                                              ; preds = %223, %216
  %235 = phi i64 [ %217, %216 ], [ %229, %223 ]
  %236 = phi i16* [ %218, %216 ], [ %231, %223 ]
  %237 = phi i16* [ %219, %216 ], [ %230, %223 ]
  %238 = icmp ult i64 %220, 7
  br i1 %238, label %3092, label %239

239:                                              ; preds = %234, %239
  %240 = phi i64 [ %265, %239 ], [ %235, %234 ]
  %241 = phi i16* [ %267, %239 ], [ %236, %234 ]
  %242 = phi i16* [ %266, %239 ], [ %237, %234 ]
  %243 = load i16, i16* %241, align 2
  store i16 %243, i16* %242, align 2
  %244 = getelementptr inbounds i16, i16* %242, i64 1
  %245 = getelementptr inbounds i16, i16* %241, i64 1
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %242, i64 2
  %248 = getelementptr inbounds i16, i16* %241, i64 2
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = getelementptr inbounds i16, i16* %242, i64 3
  %251 = getelementptr inbounds i16, i16* %241, i64 3
  %252 = load i16, i16* %251, align 2
  store i16 %252, i16* %250, align 2
  %253 = getelementptr inbounds i16, i16* %242, i64 4
  %254 = getelementptr inbounds i16, i16* %241, i64 4
  %255 = load i16, i16* %254, align 2
  store i16 %255, i16* %253, align 2
  %256 = getelementptr inbounds i16, i16* %242, i64 5
  %257 = getelementptr inbounds i16, i16* %241, i64 5
  %258 = load i16, i16* %257, align 2
  store i16 %258, i16* %256, align 2
  %259 = getelementptr inbounds i16, i16* %242, i64 6
  %260 = getelementptr inbounds i16, i16* %241, i64 6
  %261 = load i16, i16* %260, align 2
  store i16 %261, i16* %259, align 2
  %262 = getelementptr inbounds i16, i16* %242, i64 7
  %263 = getelementptr inbounds i16, i16* %241, i64 7
  %264 = load i16, i16* %263, align 2
  store i16 %264, i16* %262, align 2
  %265 = add i64 %240, -8
  %266 = getelementptr inbounds i16, i16* %242, i64 8
  %267 = getelementptr inbounds i16, i16* %241, i64 8
  %268 = icmp eq i64 %265, 0
  br i1 %268, label %3092, label %239, !llvm.loop !12

269:                                              ; preds = %4, %73
  %270 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %271 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %270, align 8
  %272 = sext i32 %2 to i64
  %273 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = getelementptr inbounds i64, i64* %274, i64 %272
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.task_manager::TaskManagerInterface"* %271 to void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)***
  %278 = load void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)**, void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)*, void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)** %278, i64 17
  %280 = load void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)*, void (%"class.std::__1::basic_string.64"*, %"class.task_manager::TaskManagerInterface"*, i64)** %279, align 8
  tail call void %280(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerInterface"* %271, i64 %276) #12
  br label %3092

281:                                              ; preds = %73
  %282 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %283 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %282, align 8
  %284 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %285 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %284, align 8
  %286 = sext i32 %2 to i64
  %287 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  %289 = getelementptr inbounds i64, i64* %288, i64 %286
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.task_manager::TaskManagerInterface"* %285 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %292 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %291, align 8
  %293 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %292, i64 27
  %294 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %293, align 8
  %295 = tail call i64 %294(%"class.task_manager::TaskManagerInterface"* %285, i64 %290) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier19GetNetworkUsageTextEl(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %283, i64 %295)
  br label %3092

296:                                              ; preds = %73
  %297 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %298 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %297, align 8
  %299 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %300 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %299, align 8
  %301 = sext i32 %2 to i64
  %302 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %303 = load i64*, i64** %302, align 8
  %304 = getelementptr inbounds i64, i64* %303, i64 %301
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.task_manager::TaskManagerInterface"* %300 to double (%"class.task_manager::TaskManagerInterface"*, i64)***
  %307 = load double (%"class.task_manager::TaskManagerInterface"*, i64)**, double (%"class.task_manager::TaskManagerInterface"*, i64)*** %306, align 8
  %308 = getelementptr inbounds double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %307, i64 3
  %309 = load double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %308, align 8
  %310 = tail call double %309(%"class.task_manager::TaskManagerInterface"* %300, i64 %305) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier15GetCpuUsageTextEd(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %298, double %310)
  br label %3092

311:                                              ; preds = %73
  %312 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %313 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %312, align 8
  %314 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %315 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %314, align 8
  %316 = sext i32 %2 to i64
  %317 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %318 = load i64*, i64** %317, align 8
  %319 = getelementptr inbounds i64, i64* %318, i64 %316
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.task_manager::TaskManagerInterface"* %315 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %322 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %321, align 8
  %323 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %322, i64 5
  %324 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %323, align 8
  %325 = tail call i64 %324(%"class.task_manager::TaskManagerInterface"* %315, i64 %320) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier14GetCpuTimeTextEN4base9TimeDeltaE(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %313, i64 %325)
  br label %3092

326:                                              ; preds = %73
  %327 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %328 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %327, align 8
  %329 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %330 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %329, align 8
  %331 = sext i32 %2 to i64
  %332 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %333 = load i64*, i64** %332, align 8
  %334 = getelementptr inbounds i64, i64* %333, i64 %331
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.task_manager::TaskManagerInterface"* %330 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %337 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %336, align 8
  %338 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %337, i64 4
  %339 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %338, align 8
  %340 = tail call i64 %339(%"class.task_manager::TaskManagerInterface"* %330, i64 %335) #12
  %341 = bitcast %"class.base::Time"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341)
  %342 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %11, i64 0, i32 0, i32 0
  store i64 %340, i64* %342, align 8, !noalias !13
  %343 = icmp eq i64 %340, 0
  br i1 %343, label %344, label %527

344:                                              ; preds = %326
  %345 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %328 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %345, i64 0, i32 1, i32 1
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %352, label %349

349:                                              ; preds = %344
  %350 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %351 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %328 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* align 8 %351, i64 24, i1 false) #12
  br label %528

352:                                              ; preds = %344
  %353 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load i16*, i16** %353, align 8
  %355 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %356 = load i64, i64* %355, align 8
  %357 = icmp ult i64 %356, 11
  br i1 %357, label %358, label %363

358:                                              ; preds = %352
  %359 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %360 = trunc i64 %356 to i8
  %361 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %362 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %361, i64 0, i32 1, i32 1
  store i8 %360, i8* %362, align 1
  br label %380

363:                                              ; preds = %352
  %364 = icmp ugt i64 %356, 9223372036854775791
  br i1 %364, label %365, label %367

365:                                              ; preds = %363
  %366 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %366) #14
  unreachable

367:                                              ; preds = %363
  %368 = add nuw nsw i64 %356, 8
  %369 = and i64 %368, -8
  %370 = icmp slt i64 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  tail call void @abort() #14
  unreachable

372:                                              ; preds = %367
  %373 = shl i64 %369, 1
  %374 = tail call i8* @_Znwm(i64 %373) #13
  %375 = bitcast i8* %374 to i16*
  %376 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %374, i8** %376, align 8
  %377 = or i64 %369, -9223372036854775808
  %378 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %356, i64* %379, align 8
  br label %380

380:                                              ; preds = %372, %358
  %381 = phi i16* [ %359, %358 ], [ %375, %372 ]
  %382 = add nuw nsw i64 %356, 1
  %383 = add i64 %356, 1
  %384 = icmp ult i64 %383, 16
  br i1 %384, label %474, label %385

385:                                              ; preds = %380
  %386 = add i64 %356, 1
  %387 = getelementptr i16, i16* %381, i64 %386
  %388 = getelementptr i16, i16* %354, i64 %386
  %389 = icmp ult i16* %381, %388
  %390 = icmp ult i16* %354, %387
  %391 = and i1 %389, %390
  br i1 %391, label %474, label %392

392:                                              ; preds = %385
  %393 = and i64 %383, -16
  %394 = sub i64 %382, %393
  %395 = getelementptr i16, i16* %354, i64 %393
  %396 = getelementptr i16, i16* %381, i64 %393
  %397 = add i64 %393, -16
  %398 = lshr exact i64 %397, 4
  %399 = add nuw nsw i64 %398, 1
  %400 = and i64 %399, 3
  %401 = icmp ult i64 %397, 48
  br i1 %401, label %453, label %402

402:                                              ; preds = %392
  %403 = sub nsw i64 %399, %400
  br label %404

404:                                              ; preds = %404, %402
  %405 = phi i64 [ 0, %402 ], [ %450, %404 ]
  %406 = phi i64 [ %403, %402 ], [ %451, %404 ]
  %407 = getelementptr i16, i16* %354, i64 %405
  %408 = getelementptr i16, i16* %381, i64 %405
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !16
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !16
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !19, !noalias !16
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !19, !noalias !16
  %417 = or i64 %405, 16
  %418 = getelementptr i16, i16* %354, i64 %417
  %419 = getelementptr i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !16
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !16
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !19, !noalias !16
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !19, !noalias !16
  %428 = or i64 %405, 32
  %429 = getelementptr i16, i16* %354, i64 %428
  %430 = getelementptr i16, i16* %381, i64 %428
  %431 = bitcast i16* %429 to <8 x i16>*
  %432 = load <8 x i16>, <8 x i16>* %431, align 2, !alias.scope !16
  %433 = getelementptr i16, i16* %429, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  %435 = load <8 x i16>, <8 x i16>* %434, align 2, !alias.scope !16
  %436 = bitcast i16* %430 to <8 x i16>*
  store <8 x i16> %432, <8 x i16>* %436, align 2, !alias.scope !19, !noalias !16
  %437 = getelementptr i16, i16* %430, i64 8
  %438 = bitcast i16* %437 to <8 x i16>*
  store <8 x i16> %435, <8 x i16>* %438, align 2, !alias.scope !19, !noalias !16
  %439 = or i64 %405, 48
  %440 = getelementptr i16, i16* %354, i64 %439
  %441 = getelementptr i16, i16* %381, i64 %439
  %442 = bitcast i16* %440 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !16
  %444 = getelementptr i16, i16* %440, i64 8
  %445 = bitcast i16* %444 to <8 x i16>*
  %446 = load <8 x i16>, <8 x i16>* %445, align 2, !alias.scope !16
  %447 = bitcast i16* %441 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %447, align 2, !alias.scope !19, !noalias !16
  %448 = getelementptr i16, i16* %441, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %446, <8 x i16>* %449, align 2, !alias.scope !19, !noalias !16
  %450 = add i64 %405, 64
  %451 = add i64 %406, -4
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %404, !llvm.loop !21

453:                                              ; preds = %404, %392
  %454 = phi i64 [ 0, %392 ], [ %450, %404 ]
  %455 = icmp eq i64 %400, 0
  br i1 %455, label %472, label %456

456:                                              ; preds = %453, %456
  %457 = phi i64 [ %469, %456 ], [ %454, %453 ]
  %458 = phi i64 [ %470, %456 ], [ %400, %453 ]
  %459 = getelementptr i16, i16* %354, i64 %457
  %460 = getelementptr i16, i16* %381, i64 %457
  %461 = bitcast i16* %459 to <8 x i16>*
  %462 = load <8 x i16>, <8 x i16>* %461, align 2, !alias.scope !16
  %463 = getelementptr i16, i16* %459, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !16
  %466 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %462, <8 x i16>* %466, align 2, !alias.scope !19, !noalias !16
  %467 = getelementptr i16, i16* %460, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %468, align 2, !alias.scope !19, !noalias !16
  %469 = add i64 %457, 16
  %470 = add i64 %458, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %456, !llvm.loop !22

472:                                              ; preds = %456, %453
  %473 = icmp eq i64 %383, %393
  br i1 %473, label %528, label %474

474:                                              ; preds = %472, %385, %380
  %475 = phi i64 [ %382, %385 ], [ %382, %380 ], [ %394, %472 ]
  %476 = phi i16* [ %354, %385 ], [ %354, %380 ], [ %395, %472 ]
  %477 = phi i16* [ %381, %385 ], [ %381, %380 ], [ %396, %472 ]
  %478 = add i64 %475, -1
  %479 = and i64 %475, 7
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %492, label %481

481:                                              ; preds = %474, %481
  %482 = phi i64 [ %487, %481 ], [ %475, %474 ]
  %483 = phi i16* [ %489, %481 ], [ %476, %474 ]
  %484 = phi i16* [ %488, %481 ], [ %477, %474 ]
  %485 = phi i64 [ %490, %481 ], [ %479, %474 ]
  %486 = load i16, i16* %483, align 2
  store i16 %486, i16* %484, align 2
  %487 = add i64 %482, -1
  %488 = getelementptr inbounds i16, i16* %484, i64 1
  %489 = getelementptr inbounds i16, i16* %483, i64 1
  %490 = add i64 %485, -1
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %481, !llvm.loop !23

492:                                              ; preds = %481, %474
  %493 = phi i64 [ %475, %474 ], [ %487, %481 ]
  %494 = phi i16* [ %476, %474 ], [ %489, %481 ]
  %495 = phi i16* [ %477, %474 ], [ %488, %481 ]
  %496 = icmp ult i64 %478, 7
  br i1 %496, label %528, label %497

497:                                              ; preds = %492, %497
  %498 = phi i64 [ %523, %497 ], [ %493, %492 ]
  %499 = phi i16* [ %525, %497 ], [ %494, %492 ]
  %500 = phi i16* [ %524, %497 ], [ %495, %492 ]
  %501 = load i16, i16* %499, align 2
  store i16 %501, i16* %500, align 2
  %502 = getelementptr inbounds i16, i16* %500, i64 1
  %503 = getelementptr inbounds i16, i16* %499, i64 1
  %504 = load i16, i16* %503, align 2
  store i16 %504, i16* %502, align 2
  %505 = getelementptr inbounds i16, i16* %500, i64 2
  %506 = getelementptr inbounds i16, i16* %499, i64 2
  %507 = load i16, i16* %506, align 2
  store i16 %507, i16* %505, align 2
  %508 = getelementptr inbounds i16, i16* %500, i64 3
  %509 = getelementptr inbounds i16, i16* %499, i64 3
  %510 = load i16, i16* %509, align 2
  store i16 %510, i16* %508, align 2
  %511 = getelementptr inbounds i16, i16* %500, i64 4
  %512 = getelementptr inbounds i16, i16* %499, i64 4
  %513 = load i16, i16* %512, align 2
  store i16 %513, i16* %511, align 2
  %514 = getelementptr inbounds i16, i16* %500, i64 5
  %515 = getelementptr inbounds i16, i16* %499, i64 5
  %516 = load i16, i16* %515, align 2
  store i16 %516, i16* %514, align 2
  %517 = getelementptr inbounds i16, i16* %500, i64 6
  %518 = getelementptr inbounds i16, i16* %499, i64 6
  %519 = load i16, i16* %518, align 2
  store i16 %519, i16* %517, align 2
  %520 = getelementptr inbounds i16, i16* %500, i64 7
  %521 = getelementptr inbounds i16, i16* %499, i64 7
  %522 = load i16, i16* %521, align 2
  store i16 %522, i16* %520, align 2
  %523 = add i64 %498, -8
  %524 = getelementptr inbounds i16, i16* %500, i64 8
  %525 = getelementptr inbounds i16, i16* %499, i64 8
  %526 = icmp eq i64 %523, 0
  br i1 %526, label %528, label %497, !llvm.loop !24

527:                                              ; preds = %326
  call void @_ZN4base26TimeFormatShortDateAndTimeERKNS_4TimeE(%"class.std::__1::basic_string.64"* sret %0, %"class.base::Time"* nonnull dereferenceable(8) %11) #12
  br label %528

528:                                              ; preds = %492, %497, %472, %349, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341)
  br label %3092

529:                                              ; preds = %73
  %530 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %531 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %530, align 8
  %532 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %533 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %532, align 8
  %534 = sext i32 %2 to i64
  %535 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %536 = load i64*, i64** %535, align 8
  %537 = getelementptr inbounds i64, i64* %536, i64 %534
  %538 = load i64, i64* %537, align 8
  %539 = bitcast %"class.task_manager::TaskManagerInterface"* %533 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %540 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %539, align 8
  %541 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %540, i64 6
  %542 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %541, align 8
  %543 = tail call i64 %542(%"class.task_manager::TaskManagerInterface"* %533, i64 %538) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %531, i64 %543, i1 zeroext false)
  br label %3092

544:                                              ; preds = %73
  %545 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %546 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %545, align 8
  %547 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %548 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %547, align 8
  %549 = sext i32 %2 to i64
  %550 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %551 = load i64*, i64** %550, align 8
  %552 = getelementptr inbounds i64, i64* %551, i64 %549
  %553 = load i64, i64* %552, align 8
  %554 = bitcast %"class.task_manager::TaskManagerInterface"* %548 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %555 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %554, align 8
  %556 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %555, i64 7
  %557 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %556, align 8
  %558 = tail call i64 %557(%"class.task_manager::TaskManagerInterface"* %548, i64 %553) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %546, i64 %558, i1 zeroext false)
  br label %3092

559:                                              ; preds = %73
  %560 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %561 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %560, align 8
  %562 = sext i32 %2 to i64
  %563 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %564 = load i64*, i64** %563, align 8
  %565 = getelementptr inbounds i64, i64* %564, i64 %562
  %566 = load i64, i64* %565, align 8
  %567 = bitcast %"class.task_manager::TaskManagerInterface"* %561 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %568 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %567, align 8
  %569 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %568, i64 36
  %570 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %569, align 8
  %571 = tail call zeroext i1 %570(%"class.task_manager::TaskManagerInterface"* %561, i64 %566) #12
  br i1 %571, label %572, label %574

572:                                              ; preds = %559
  %573 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %573, i8 0, i64 24, i1 false) #12
  br label %3092

574:                                              ; preds = %559
  %575 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %560, align 8
  %576 = load i64*, i64** %563, align 8
  %577 = getelementptr inbounds i64, i64* %576, i64 %562
  %578 = load i64, i64* %577, align 8
  %579 = bitcast %"class.task_manager::TaskManagerInterface"* %575 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %580 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %579, align 8
  %581 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %580, i64 20
  %582 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %581, align 8
  %583 = tail call dereferenceable(4) i32* %582(%"class.task_manager::TaskManagerInterface"* %575, i64 %578) #12
  %584 = load i32, i32* %583, align 4
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.64"* sret %0, i32 %584) #12
  br label %3092

585:                                              ; preds = %4, %73
  %586 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586) #12
  store i64 -6148914691236517206, i64* %12, align 8
  %587 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #12
  store i64 -6148914691236517206, i64* %13, align 8
  %588 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %589 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %588, align 8
  %590 = sext i32 %2 to i64
  %591 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %592 = load i64*, i64** %591, align 8
  %593 = getelementptr inbounds i64, i64* %592, i64 %590
  %594 = load i64, i64* %593, align 8
  %595 = bitcast %"class.task_manager::TaskManagerInterface"* %589 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %596 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %595, align 8
  %597 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %596, i64 12
  %598 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %597, align 8
  call void %598(%"class.task_manager::TaskManagerInterface"* %589, i64 %594, i64* nonnull %12, i64* nonnull %13) #12
  %599 = load i64, i64* %12, align 8
  %600 = load i64, i64* %13, align 8
  %601 = bitcast %"class.std::__1::basic_string.64"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %601) #12, !noalias !25
  call void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.64"* nonnull sret %9, i64 %599) #12, !noalias !25
  %602 = bitcast %"class.std::__1::basic_string.64"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %602) #12, !noalias !25
  call void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.64"* nonnull sret %10, i64 %600) #12, !noalias !25
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.64"* sret %0, i32 7262, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %10) #12
  %603 = bitcast %"class.std::__1::basic_string.64"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %604 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %603, i64 0, i32 1, i32 1
  %605 = load i8, i8* %604, align 1, !noalias !25
  %606 = icmp slt i8 %605, 0
  br i1 %606, label %607, label %610

607:                                              ; preds = %585
  %608 = bitcast %"class.std::__1::basic_string.64"* %10 to i8**
  %609 = load i8*, i8** %608, align 8, !noalias !25
  call void @_ZdlPv(i8* %609) #13
  br label %610

610:                                              ; preds = %607, %585
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %602) #12, !noalias !25
  %611 = bitcast %"class.std::__1::basic_string.64"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %612 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %611, i64 0, i32 1, i32 1
  %613 = load i8, i8* %612, align 1, !noalias !25
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %618

615:                                              ; preds = %610
  %616 = bitcast %"class.std::__1::basic_string.64"* %9 to i8**
  %617 = load i8*, i8** %616, align 8, !noalias !25
  call void @_ZdlPv(i8* %617) #13
  br label %618

618:                                              ; preds = %610, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %601) #12, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #12
  br label %3092

619:                                              ; preds = %4, %73
  %620 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #12
  store i64 -6148914691236517206, i64* %14, align 8
  %621 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %621) #12
  store i64 -6148914691236517206, i64* %15, align 8
  %622 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %623 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %622, align 8
  %624 = sext i32 %2 to i64
  %625 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %626 = load i64*, i64** %625, align 8
  %627 = getelementptr inbounds i64, i64* %626, i64 %624
  %628 = load i64, i64* %627, align 8
  %629 = bitcast %"class.task_manager::TaskManagerInterface"* %623 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %630 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %629, align 8
  %631 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %630, i64 13
  %632 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %631, align 8
  call void %632(%"class.task_manager::TaskManagerInterface"* %623, i64 %628, i64* nonnull %14, i64* nonnull %15) #12
  %633 = load i64, i64* %14, align 8
  %634 = load i64, i64* %15, align 8
  %635 = bitcast %"class.std::__1::basic_string.64"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %635) #12, !noalias !28
  call void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.64"* nonnull sret %7, i64 %633) #12, !noalias !28
  %636 = bitcast %"class.std::__1::basic_string.64"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %636) #12, !noalias !28
  call void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.64"* nonnull sret %8, i64 %634) #12, !noalias !28
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.64"* sret %0, i32 7262, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %8) #12
  %637 = bitcast %"class.std::__1::basic_string.64"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %638 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %637, i64 0, i32 1, i32 1
  %639 = load i8, i8* %638, align 1, !noalias !28
  %640 = icmp slt i8 %639, 0
  br i1 %640, label %641, label %644

641:                                              ; preds = %619
  %642 = bitcast %"class.std::__1::basic_string.64"* %8 to i8**
  %643 = load i8*, i8** %642, align 8, !noalias !28
  call void @_ZdlPv(i8* %643) #13
  br label %644

644:                                              ; preds = %641, %619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %636) #12, !noalias !28
  %645 = bitcast %"class.std::__1::basic_string.64"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %646 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %645, i64 0, i32 1, i32 1
  %647 = load i8, i8* %646, align 1, !noalias !28
  %648 = icmp slt i8 %647, 0
  br i1 %648, label %649, label %652

649:                                              ; preds = %644
  %650 = bitcast %"class.std::__1::basic_string.64"* %7 to i8**
  %651 = load i8*, i8** %650, align 8, !noalias !28
  call void @_ZdlPv(i8* %651) #13
  br label %652

652:                                              ; preds = %644, %649
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %635) #12, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %621) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #12
  br label %3092

653:                                              ; preds = %73
  %654 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %655 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %654, align 8
  %656 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %657 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %656, align 8
  %658 = sext i32 %2 to i64
  %659 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %660 = load i64*, i64** %659, align 8
  %661 = getelementptr inbounds i64, i64* %660, i64 %658
  %662 = load i64, i64* %661, align 8
  %663 = bitcast %"class.task_manager::TaskManagerInterface"* %657 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %664 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %663, align 8
  %665 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %664, i64 9
  %666 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %665, align 8
  %667 = tail call i32 %666(%"class.task_manager::TaskManagerInterface"* %657, i64 %662) #12
  %668 = icmp eq i32 %667, -1
  br i1 %668, label %669, label %852

669:                                              ; preds = %653
  %670 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %655 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %671 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %670, i64 0, i32 1, i32 1
  %672 = load i8, i8* %671, align 1
  %673 = icmp slt i8 %672, 0
  br i1 %673, label %677, label %674

674:                                              ; preds = %669
  %675 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %676 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %655 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %675, i8* align 8 %676, i64 24, i1 false) #12
  br label %3092

677:                                              ; preds = %669
  %678 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %655, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load i16*, i16** %678, align 8
  %680 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %655, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %681 = load i64, i64* %680, align 8
  %682 = icmp ult i64 %681, 11
  br i1 %682, label %683, label %688

683:                                              ; preds = %677
  %684 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %685 = trunc i64 %681 to i8
  %686 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %687 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %686, i64 0, i32 1, i32 1
  store i8 %685, i8* %687, align 1
  br label %705

688:                                              ; preds = %677
  %689 = icmp ugt i64 %681, 9223372036854775791
  br i1 %689, label %690, label %692

690:                                              ; preds = %688
  %691 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %691) #14
  unreachable

692:                                              ; preds = %688
  %693 = add nuw nsw i64 %681, 8
  %694 = and i64 %693, -8
  %695 = icmp slt i64 %694, 0
  br i1 %695, label %696, label %697

696:                                              ; preds = %692
  tail call void @abort() #14
  unreachable

697:                                              ; preds = %692
  %698 = shl i64 %694, 1
  %699 = tail call i8* @_Znwm(i64 %698) #13
  %700 = bitcast i8* %699 to i16*
  %701 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %699, i8** %701, align 8
  %702 = or i64 %694, -9223372036854775808
  %703 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %702, i64* %703, align 8
  %704 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %681, i64* %704, align 8
  br label %705

705:                                              ; preds = %697, %683
  %706 = phi i16* [ %684, %683 ], [ %700, %697 ]
  %707 = add nuw nsw i64 %681, 1
  %708 = add i64 %681, 1
  %709 = icmp ult i64 %708, 16
  br i1 %709, label %799, label %710

710:                                              ; preds = %705
  %711 = add i64 %681, 1
  %712 = getelementptr i16, i16* %706, i64 %711
  %713 = getelementptr i16, i16* %679, i64 %711
  %714 = icmp ult i16* %706, %713
  %715 = icmp ult i16* %679, %712
  %716 = and i1 %714, %715
  br i1 %716, label %799, label %717

717:                                              ; preds = %710
  %718 = and i64 %708, -16
  %719 = sub i64 %707, %718
  %720 = getelementptr i16, i16* %679, i64 %718
  %721 = getelementptr i16, i16* %706, i64 %718
  %722 = add i64 %718, -16
  %723 = lshr exact i64 %722, 4
  %724 = add nuw nsw i64 %723, 1
  %725 = and i64 %724, 3
  %726 = icmp ult i64 %722, 48
  br i1 %726, label %778, label %727

727:                                              ; preds = %717
  %728 = sub nsw i64 %724, %725
  br label %729

729:                                              ; preds = %729, %727
  %730 = phi i64 [ 0, %727 ], [ %775, %729 ]
  %731 = phi i64 [ %728, %727 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %679, i64 %730
  %733 = getelementptr i16, i16* %706, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !31
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !31
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !34, !noalias !31
  %740 = getelementptr i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !34, !noalias !31
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %679, i64 %742
  %744 = getelementptr i16, i16* %706, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !31
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !31
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !34, !noalias !31
  %751 = getelementptr i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !34, !noalias !31
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %679, i64 %753
  %755 = getelementptr i16, i16* %706, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !31
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !31
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !34, !noalias !31
  %762 = getelementptr i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !34, !noalias !31
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %679, i64 %764
  %766 = getelementptr i16, i16* %706, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !31
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !31
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !34, !noalias !31
  %773 = getelementptr i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !34, !noalias !31
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !36

778:                                              ; preds = %729, %717
  %779 = phi i64 [ 0, %717 ], [ %775, %729 ]
  %780 = icmp eq i64 %725, 0
  br i1 %780, label %797, label %781

781:                                              ; preds = %778, %781
  %782 = phi i64 [ %794, %781 ], [ %779, %778 ]
  %783 = phi i64 [ %795, %781 ], [ %725, %778 ]
  %784 = getelementptr i16, i16* %679, i64 %782
  %785 = getelementptr i16, i16* %706, i64 %782
  %786 = bitcast i16* %784 to <8 x i16>*
  %787 = load <8 x i16>, <8 x i16>* %786, align 2, !alias.scope !31
  %788 = getelementptr i16, i16* %784, i64 8
  %789 = bitcast i16* %788 to <8 x i16>*
  %790 = load <8 x i16>, <8 x i16>* %789, align 2, !alias.scope !31
  %791 = bitcast i16* %785 to <8 x i16>*
  store <8 x i16> %787, <8 x i16>* %791, align 2, !alias.scope !34, !noalias !31
  %792 = getelementptr i16, i16* %785, i64 8
  %793 = bitcast i16* %792 to <8 x i16>*
  store <8 x i16> %790, <8 x i16>* %793, align 2, !alias.scope !34, !noalias !31
  %794 = add i64 %782, 16
  %795 = add i64 %783, -1
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %797, label %781, !llvm.loop !37

797:                                              ; preds = %781, %778
  %798 = icmp eq i64 %708, %718
  br i1 %798, label %3092, label %799

799:                                              ; preds = %797, %710, %705
  %800 = phi i64 [ %707, %710 ], [ %707, %705 ], [ %719, %797 ]
  %801 = phi i16* [ %679, %710 ], [ %679, %705 ], [ %720, %797 ]
  %802 = phi i16* [ %706, %710 ], [ %706, %705 ], [ %721, %797 ]
  %803 = add i64 %800, -1
  %804 = and i64 %800, 7
  %805 = icmp eq i64 %804, 0
  br i1 %805, label %817, label %806

806:                                              ; preds = %799, %806
  %807 = phi i64 [ %812, %806 ], [ %800, %799 ]
  %808 = phi i16* [ %814, %806 ], [ %801, %799 ]
  %809 = phi i16* [ %813, %806 ], [ %802, %799 ]
  %810 = phi i64 [ %815, %806 ], [ %804, %799 ]
  %811 = load i16, i16* %808, align 2
  store i16 %811, i16* %809, align 2
  %812 = add i64 %807, -1
  %813 = getelementptr inbounds i16, i16* %809, i64 1
  %814 = getelementptr inbounds i16, i16* %808, i64 1
  %815 = add i64 %810, -1
  %816 = icmp eq i64 %815, 0
  br i1 %816, label %817, label %806, !llvm.loop !38

817:                                              ; preds = %806, %799
  %818 = phi i64 [ %800, %799 ], [ %812, %806 ]
  %819 = phi i16* [ %801, %799 ], [ %814, %806 ]
  %820 = phi i16* [ %802, %799 ], [ %813, %806 ]
  %821 = icmp ult i64 %803, 7
  br i1 %821, label %3092, label %822

822:                                              ; preds = %817, %822
  %823 = phi i64 [ %848, %822 ], [ %818, %817 ]
  %824 = phi i16* [ %850, %822 ], [ %819, %817 ]
  %825 = phi i16* [ %849, %822 ], [ %820, %817 ]
  %826 = load i16, i16* %824, align 2
  store i16 %826, i16* %825, align 2
  %827 = getelementptr inbounds i16, i16* %825, i64 1
  %828 = getelementptr inbounds i16, i16* %824, i64 1
  %829 = load i16, i16* %828, align 2
  store i16 %829, i16* %827, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 2
  %831 = getelementptr inbounds i16, i16* %824, i64 2
  %832 = load i16, i16* %831, align 2
  store i16 %832, i16* %830, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 3
  %834 = getelementptr inbounds i16, i16* %824, i64 3
  %835 = load i16, i16* %834, align 2
  store i16 %835, i16* %833, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 4
  %837 = getelementptr inbounds i16, i16* %824, i64 4
  %838 = load i16, i16* %837, align 2
  store i16 %838, i16* %836, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 5
  %840 = getelementptr inbounds i16, i16* %824, i64 5
  %841 = load i16, i16* %840, align 2
  store i16 %841, i16* %839, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 6
  %843 = getelementptr inbounds i16, i16* %824, i64 6
  %844 = load i16, i16* %843, align 2
  store i16 %844, i16* %842, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 7
  %846 = getelementptr inbounds i16, i16* %824, i64 7
  %847 = load i16, i16* %846, align 2
  store i16 %847, i16* %845, align 2
  %848 = add i64 %823, -8
  %849 = getelementptr inbounds i16, i16* %825, i64 8
  %850 = getelementptr inbounds i16, i16* %824, i64 8
  %851 = icmp eq i64 %848, 0
  br i1 %851, label %3092, label %822, !llvm.loop !39

852:                                              ; preds = %653
  %853 = sext i32 %667 to i64
  tail call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.64"* sret %0, i64 %853) #12
  br label %3092

854:                                              ; preds = %73
  %855 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %856 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %855, align 8
  %857 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %858 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %857, align 8
  %859 = sext i32 %2 to i64
  %860 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %861 = load i64*, i64** %860, align 8
  %862 = getelementptr inbounds i64, i64* %861, i64 %859
  %863 = load i64, i64* %862, align 8
  %864 = bitcast %"class.task_manager::TaskManagerInterface"* %858 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %865 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %864, align 8
  %866 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %865, i64 10
  %867 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %866, align 8
  %868 = tail call i32 %867(%"class.task_manager::TaskManagerInterface"* %858, i64 %863) #12
  %869 = icmp eq i32 %868, -1
  br i1 %869, label %870, label %1053

870:                                              ; preds = %854
  %871 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %856 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %872 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %871, i64 0, i32 1, i32 1
  %873 = load i8, i8* %872, align 1
  %874 = icmp slt i8 %873, 0
  br i1 %874, label %878, label %875

875:                                              ; preds = %870
  %876 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %877 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %856 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %876, i8* align 8 %877, i64 24, i1 false) #12
  br label %3092

878:                                              ; preds = %870
  %879 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %856, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %880 = load i16*, i16** %879, align 8
  %881 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %856, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %882 = load i64, i64* %881, align 8
  %883 = icmp ult i64 %882, 11
  br i1 %883, label %884, label %889

884:                                              ; preds = %878
  %885 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %886 = trunc i64 %882 to i8
  %887 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %888 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %887, i64 0, i32 1, i32 1
  store i8 %886, i8* %888, align 1
  br label %906

889:                                              ; preds = %878
  %890 = icmp ugt i64 %882, 9223372036854775791
  br i1 %890, label %891, label %893

891:                                              ; preds = %889
  %892 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %892) #14
  unreachable

893:                                              ; preds = %889
  %894 = add nuw nsw i64 %882, 8
  %895 = and i64 %894, -8
  %896 = icmp slt i64 %895, 0
  br i1 %896, label %897, label %898

897:                                              ; preds = %893
  tail call void @abort() #14
  unreachable

898:                                              ; preds = %893
  %899 = shl i64 %895, 1
  %900 = tail call i8* @_Znwm(i64 %899) #13
  %901 = bitcast i8* %900 to i16*
  %902 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %900, i8** %902, align 8
  %903 = or i64 %895, -9223372036854775808
  %904 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %903, i64* %904, align 8
  %905 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %882, i64* %905, align 8
  br label %906

906:                                              ; preds = %898, %884
  %907 = phi i16* [ %885, %884 ], [ %901, %898 ]
  %908 = add nuw nsw i64 %882, 1
  %909 = add i64 %882, 1
  %910 = icmp ult i64 %909, 16
  br i1 %910, label %1000, label %911

911:                                              ; preds = %906
  %912 = add i64 %882, 1
  %913 = getelementptr i16, i16* %907, i64 %912
  %914 = getelementptr i16, i16* %880, i64 %912
  %915 = icmp ult i16* %907, %914
  %916 = icmp ult i16* %880, %913
  %917 = and i1 %915, %916
  br i1 %917, label %1000, label %918

918:                                              ; preds = %911
  %919 = and i64 %909, -16
  %920 = sub i64 %908, %919
  %921 = getelementptr i16, i16* %880, i64 %919
  %922 = getelementptr i16, i16* %907, i64 %919
  %923 = add i64 %919, -16
  %924 = lshr exact i64 %923, 4
  %925 = add nuw nsw i64 %924, 1
  %926 = and i64 %925, 3
  %927 = icmp ult i64 %923, 48
  br i1 %927, label %979, label %928

928:                                              ; preds = %918
  %929 = sub nsw i64 %925, %926
  br label %930

930:                                              ; preds = %930, %928
  %931 = phi i64 [ 0, %928 ], [ %976, %930 ]
  %932 = phi i64 [ %929, %928 ], [ %977, %930 ]
  %933 = getelementptr i16, i16* %880, i64 %931
  %934 = getelementptr i16, i16* %907, i64 %931
  %935 = bitcast i16* %933 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !40
  %937 = getelementptr i16, i16* %933, i64 8
  %938 = bitcast i16* %937 to <8 x i16>*
  %939 = load <8 x i16>, <8 x i16>* %938, align 2, !alias.scope !40
  %940 = bitcast i16* %934 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %940, align 2, !alias.scope !43, !noalias !40
  %941 = getelementptr i16, i16* %934, i64 8
  %942 = bitcast i16* %941 to <8 x i16>*
  store <8 x i16> %939, <8 x i16>* %942, align 2, !alias.scope !43, !noalias !40
  %943 = or i64 %931, 16
  %944 = getelementptr i16, i16* %880, i64 %943
  %945 = getelementptr i16, i16* %907, i64 %943
  %946 = bitcast i16* %944 to <8 x i16>*
  %947 = load <8 x i16>, <8 x i16>* %946, align 2, !alias.scope !40
  %948 = getelementptr i16, i16* %944, i64 8
  %949 = bitcast i16* %948 to <8 x i16>*
  %950 = load <8 x i16>, <8 x i16>* %949, align 2, !alias.scope !40
  %951 = bitcast i16* %945 to <8 x i16>*
  store <8 x i16> %947, <8 x i16>* %951, align 2, !alias.scope !43, !noalias !40
  %952 = getelementptr i16, i16* %945, i64 8
  %953 = bitcast i16* %952 to <8 x i16>*
  store <8 x i16> %950, <8 x i16>* %953, align 2, !alias.scope !43, !noalias !40
  %954 = or i64 %931, 32
  %955 = getelementptr i16, i16* %880, i64 %954
  %956 = getelementptr i16, i16* %907, i64 %954
  %957 = bitcast i16* %955 to <8 x i16>*
  %958 = load <8 x i16>, <8 x i16>* %957, align 2, !alias.scope !40
  %959 = getelementptr i16, i16* %955, i64 8
  %960 = bitcast i16* %959 to <8 x i16>*
  %961 = load <8 x i16>, <8 x i16>* %960, align 2, !alias.scope !40
  %962 = bitcast i16* %956 to <8 x i16>*
  store <8 x i16> %958, <8 x i16>* %962, align 2, !alias.scope !43, !noalias !40
  %963 = getelementptr i16, i16* %956, i64 8
  %964 = bitcast i16* %963 to <8 x i16>*
  store <8 x i16> %961, <8 x i16>* %964, align 2, !alias.scope !43, !noalias !40
  %965 = or i64 %931, 48
  %966 = getelementptr i16, i16* %880, i64 %965
  %967 = getelementptr i16, i16* %907, i64 %965
  %968 = bitcast i16* %966 to <8 x i16>*
  %969 = load <8 x i16>, <8 x i16>* %968, align 2, !alias.scope !40
  %970 = getelementptr i16, i16* %966, i64 8
  %971 = bitcast i16* %970 to <8 x i16>*
  %972 = load <8 x i16>, <8 x i16>* %971, align 2, !alias.scope !40
  %973 = bitcast i16* %967 to <8 x i16>*
  store <8 x i16> %969, <8 x i16>* %973, align 2, !alias.scope !43, !noalias !40
  %974 = getelementptr i16, i16* %967, i64 8
  %975 = bitcast i16* %974 to <8 x i16>*
  store <8 x i16> %972, <8 x i16>* %975, align 2, !alias.scope !43, !noalias !40
  %976 = add i64 %931, 64
  %977 = add i64 %932, -4
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %979, label %930, !llvm.loop !45

979:                                              ; preds = %930, %918
  %980 = phi i64 [ 0, %918 ], [ %976, %930 ]
  %981 = icmp eq i64 %926, 0
  br i1 %981, label %998, label %982

982:                                              ; preds = %979, %982
  %983 = phi i64 [ %995, %982 ], [ %980, %979 ]
  %984 = phi i64 [ %996, %982 ], [ %926, %979 ]
  %985 = getelementptr i16, i16* %880, i64 %983
  %986 = getelementptr i16, i16* %907, i64 %983
  %987 = bitcast i16* %985 to <8 x i16>*
  %988 = load <8 x i16>, <8 x i16>* %987, align 2, !alias.scope !40
  %989 = getelementptr i16, i16* %985, i64 8
  %990 = bitcast i16* %989 to <8 x i16>*
  %991 = load <8 x i16>, <8 x i16>* %990, align 2, !alias.scope !40
  %992 = bitcast i16* %986 to <8 x i16>*
  store <8 x i16> %988, <8 x i16>* %992, align 2, !alias.scope !43, !noalias !40
  %993 = getelementptr i16, i16* %986, i64 8
  %994 = bitcast i16* %993 to <8 x i16>*
  store <8 x i16> %991, <8 x i16>* %994, align 2, !alias.scope !43, !noalias !40
  %995 = add i64 %983, 16
  %996 = add i64 %984, -1
  %997 = icmp eq i64 %996, 0
  br i1 %997, label %998, label %982, !llvm.loop !46

998:                                              ; preds = %982, %979
  %999 = icmp eq i64 %909, %919
  br i1 %999, label %3092, label %1000

1000:                                             ; preds = %998, %911, %906
  %1001 = phi i64 [ %908, %911 ], [ %908, %906 ], [ %920, %998 ]
  %1002 = phi i16* [ %880, %911 ], [ %880, %906 ], [ %921, %998 ]
  %1003 = phi i16* [ %907, %911 ], [ %907, %906 ], [ %922, %998 ]
  %1004 = add i64 %1001, -1
  %1005 = and i64 %1001, 7
  %1006 = icmp eq i64 %1005, 0
  br i1 %1006, label %1018, label %1007

1007:                                             ; preds = %1000, %1007
  %1008 = phi i64 [ %1013, %1007 ], [ %1001, %1000 ]
  %1009 = phi i16* [ %1015, %1007 ], [ %1002, %1000 ]
  %1010 = phi i16* [ %1014, %1007 ], [ %1003, %1000 ]
  %1011 = phi i64 [ %1016, %1007 ], [ %1005, %1000 ]
  %1012 = load i16, i16* %1009, align 2
  store i16 %1012, i16* %1010, align 2
  %1013 = add i64 %1008, -1
  %1014 = getelementptr inbounds i16, i16* %1010, i64 1
  %1015 = getelementptr inbounds i16, i16* %1009, i64 1
  %1016 = add i64 %1011, -1
  %1017 = icmp eq i64 %1016, 0
  br i1 %1017, label %1018, label %1007, !llvm.loop !47

1018:                                             ; preds = %1007, %1000
  %1019 = phi i64 [ %1001, %1000 ], [ %1013, %1007 ]
  %1020 = phi i16* [ %1002, %1000 ], [ %1015, %1007 ]
  %1021 = phi i16* [ %1003, %1000 ], [ %1014, %1007 ]
  %1022 = icmp ult i64 %1004, 7
  br i1 %1022, label %3092, label %1023

1023:                                             ; preds = %1018, %1023
  %1024 = phi i64 [ %1049, %1023 ], [ %1019, %1018 ]
  %1025 = phi i16* [ %1051, %1023 ], [ %1020, %1018 ]
  %1026 = phi i16* [ %1050, %1023 ], [ %1021, %1018 ]
  %1027 = load i16, i16* %1025, align 2
  store i16 %1027, i16* %1026, align 2
  %1028 = getelementptr inbounds i16, i16* %1026, i64 1
  %1029 = getelementptr inbounds i16, i16* %1025, i64 1
  %1030 = load i16, i16* %1029, align 2
  store i16 %1030, i16* %1028, align 2
  %1031 = getelementptr inbounds i16, i16* %1026, i64 2
  %1032 = getelementptr inbounds i16, i16* %1025, i64 2
  %1033 = load i16, i16* %1032, align 2
  store i16 %1033, i16* %1031, align 2
  %1034 = getelementptr inbounds i16, i16* %1026, i64 3
  %1035 = getelementptr inbounds i16, i16* %1025, i64 3
  %1036 = load i16, i16* %1035, align 2
  store i16 %1036, i16* %1034, align 2
  %1037 = getelementptr inbounds i16, i16* %1026, i64 4
  %1038 = getelementptr inbounds i16, i16* %1025, i64 4
  %1039 = load i16, i16* %1038, align 2
  store i16 %1039, i16* %1037, align 2
  %1040 = getelementptr inbounds i16, i16* %1026, i64 5
  %1041 = getelementptr inbounds i16, i16* %1025, i64 5
  %1042 = load i16, i16* %1041, align 2
  store i16 %1042, i16* %1040, align 2
  %1043 = getelementptr inbounds i16, i16* %1026, i64 6
  %1044 = getelementptr inbounds i16, i16* %1025, i64 6
  %1045 = load i16, i16* %1044, align 2
  store i16 %1045, i16* %1043, align 2
  %1046 = getelementptr inbounds i16, i16* %1026, i64 7
  %1047 = getelementptr inbounds i16, i16* %1025, i64 7
  %1048 = load i16, i16* %1047, align 2
  store i16 %1048, i16* %1046, align 2
  %1049 = add i64 %1024, -8
  %1050 = getelementptr inbounds i16, i16* %1026, i64 8
  %1051 = getelementptr inbounds i16, i16* %1025, i64 8
  %1052 = icmp eq i64 %1049, 0
  br i1 %1052, label %3092, label %1023, !llvm.loop !48

1053:                                             ; preds = %854
  %1054 = sext i32 %868 to i64
  tail call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.64"* sret %0, i64 %1054) #12
  br label %3092

1055:                                             ; preds = %73
  %1056 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1056) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1056, i8 -86, i64 144, i1 false)
  %1057 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1058 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1057, align 8
  %1059 = sext i32 %2 to i64
  %1060 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1061 = load i64*, i64** %1060, align 8
  %1062 = getelementptr inbounds i64, i64* %1061, i64 %1059
  %1063 = load i64, i64* %1062, align 8
  %1064 = bitcast %"class.task_manager::TaskManagerInterface"* %1058 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)***
  %1065 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*** %1064, align 8
  %1066 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1065, i64 31
  %1067 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1066, align 8
  %1068 = call zeroext i1 %1067(%"class.task_manager::TaskManagerInterface"* %1058, i64 %1063, %"struct.blink::WebCacheResourceTypeStats"* nonnull %16) #12
  %1069 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1070 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1069, align 8
  br i1 %1068, label %1071, label %1074

1071:                                             ; preds = %1055
  %1072 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %16, i64 0, i32 0, i32 1
  %1073 = load i64, i64* %1072, align 8, !noalias !49
  call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %1070, i64 %1073, i1 zeroext false) #12
  br label %1257

1074:                                             ; preds = %1055
  %1075 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1070 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1076 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1075, i64 0, i32 1, i32 1
  %1077 = load i8, i8* %1076, align 1
  %1078 = icmp slt i8 %1077, 0
  br i1 %1078, label %1082, label %1079

1079:                                             ; preds = %1074
  %1080 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %1081 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1070 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1080, i8* align 8 %1081, i64 24, i1 false) #12
  br label %1257

1082:                                             ; preds = %1074
  %1083 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1070, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1084 = load i16*, i16** %1083, align 8
  %1085 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1070, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1086 = load i64, i64* %1085, align 8
  %1087 = icmp ult i64 %1086, 11
  br i1 %1087, label %1088, label %1093

1088:                                             ; preds = %1082
  %1089 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %1090 = trunc i64 %1086 to i8
  %1091 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1092 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1091, i64 0, i32 1, i32 1
  store i8 %1090, i8* %1092, align 1
  br label %1110

1093:                                             ; preds = %1082
  %1094 = icmp ugt i64 %1086, 9223372036854775791
  br i1 %1094, label %1095, label %1097

1095:                                             ; preds = %1093
  %1096 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1096) #14
  unreachable

1097:                                             ; preds = %1093
  %1098 = add nuw nsw i64 %1086, 8
  %1099 = and i64 %1098, -8
  %1100 = icmp slt i64 %1099, 0
  br i1 %1100, label %1101, label %1102

1101:                                             ; preds = %1097
  call void @abort() #14
  unreachable

1102:                                             ; preds = %1097
  %1103 = shl i64 %1099, 1
  %1104 = call i8* @_Znwm(i64 %1103) #13
  %1105 = bitcast i8* %1104 to i16*
  %1106 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %1104, i8** %1106, align 8
  %1107 = or i64 %1099, -9223372036854775808
  %1108 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1107, i64* %1108, align 8
  %1109 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1086, i64* %1109, align 8
  br label %1110

1110:                                             ; preds = %1102, %1088
  %1111 = phi i16* [ %1089, %1088 ], [ %1105, %1102 ]
  %1112 = add nuw nsw i64 %1086, 1
  %1113 = add i64 %1086, 1
  %1114 = icmp ult i64 %1113, 16
  br i1 %1114, label %1204, label %1115

1115:                                             ; preds = %1110
  %1116 = add i64 %1086, 1
  %1117 = getelementptr i16, i16* %1111, i64 %1116
  %1118 = getelementptr i16, i16* %1084, i64 %1116
  %1119 = icmp ult i16* %1111, %1118
  %1120 = icmp ult i16* %1084, %1117
  %1121 = and i1 %1119, %1120
  br i1 %1121, label %1204, label %1122

1122:                                             ; preds = %1115
  %1123 = and i64 %1113, -16
  %1124 = sub i64 %1112, %1123
  %1125 = getelementptr i16, i16* %1084, i64 %1123
  %1126 = getelementptr i16, i16* %1111, i64 %1123
  %1127 = add i64 %1123, -16
  %1128 = lshr exact i64 %1127, 4
  %1129 = add nuw nsw i64 %1128, 1
  %1130 = and i64 %1129, 3
  %1131 = icmp ult i64 %1127, 48
  br i1 %1131, label %1183, label %1132

1132:                                             ; preds = %1122
  %1133 = sub nsw i64 %1129, %1130
  br label %1134

1134:                                             ; preds = %1134, %1132
  %1135 = phi i64 [ 0, %1132 ], [ %1180, %1134 ]
  %1136 = phi i64 [ %1133, %1132 ], [ %1181, %1134 ]
  %1137 = getelementptr i16, i16* %1084, i64 %1135
  %1138 = getelementptr i16, i16* %1111, i64 %1135
  %1139 = bitcast i16* %1137 to <8 x i16>*
  %1140 = load <8 x i16>, <8 x i16>* %1139, align 2, !alias.scope !52
  %1141 = getelementptr i16, i16* %1137, i64 8
  %1142 = bitcast i16* %1141 to <8 x i16>*
  %1143 = load <8 x i16>, <8 x i16>* %1142, align 2, !alias.scope !52
  %1144 = bitcast i16* %1138 to <8 x i16>*
  store <8 x i16> %1140, <8 x i16>* %1144, align 2, !alias.scope !55, !noalias !52
  %1145 = getelementptr i16, i16* %1138, i64 8
  %1146 = bitcast i16* %1145 to <8 x i16>*
  store <8 x i16> %1143, <8 x i16>* %1146, align 2, !alias.scope !55, !noalias !52
  %1147 = or i64 %1135, 16
  %1148 = getelementptr i16, i16* %1084, i64 %1147
  %1149 = getelementptr i16, i16* %1111, i64 %1147
  %1150 = bitcast i16* %1148 to <8 x i16>*
  %1151 = load <8 x i16>, <8 x i16>* %1150, align 2, !alias.scope !52
  %1152 = getelementptr i16, i16* %1148, i64 8
  %1153 = bitcast i16* %1152 to <8 x i16>*
  %1154 = load <8 x i16>, <8 x i16>* %1153, align 2, !alias.scope !52
  %1155 = bitcast i16* %1149 to <8 x i16>*
  store <8 x i16> %1151, <8 x i16>* %1155, align 2, !alias.scope !55, !noalias !52
  %1156 = getelementptr i16, i16* %1149, i64 8
  %1157 = bitcast i16* %1156 to <8 x i16>*
  store <8 x i16> %1154, <8 x i16>* %1157, align 2, !alias.scope !55, !noalias !52
  %1158 = or i64 %1135, 32
  %1159 = getelementptr i16, i16* %1084, i64 %1158
  %1160 = getelementptr i16, i16* %1111, i64 %1158
  %1161 = bitcast i16* %1159 to <8 x i16>*
  %1162 = load <8 x i16>, <8 x i16>* %1161, align 2, !alias.scope !52
  %1163 = getelementptr i16, i16* %1159, i64 8
  %1164 = bitcast i16* %1163 to <8 x i16>*
  %1165 = load <8 x i16>, <8 x i16>* %1164, align 2, !alias.scope !52
  %1166 = bitcast i16* %1160 to <8 x i16>*
  store <8 x i16> %1162, <8 x i16>* %1166, align 2, !alias.scope !55, !noalias !52
  %1167 = getelementptr i16, i16* %1160, i64 8
  %1168 = bitcast i16* %1167 to <8 x i16>*
  store <8 x i16> %1165, <8 x i16>* %1168, align 2, !alias.scope !55, !noalias !52
  %1169 = or i64 %1135, 48
  %1170 = getelementptr i16, i16* %1084, i64 %1169
  %1171 = getelementptr i16, i16* %1111, i64 %1169
  %1172 = bitcast i16* %1170 to <8 x i16>*
  %1173 = load <8 x i16>, <8 x i16>* %1172, align 2, !alias.scope !52
  %1174 = getelementptr i16, i16* %1170, i64 8
  %1175 = bitcast i16* %1174 to <8 x i16>*
  %1176 = load <8 x i16>, <8 x i16>* %1175, align 2, !alias.scope !52
  %1177 = bitcast i16* %1171 to <8 x i16>*
  store <8 x i16> %1173, <8 x i16>* %1177, align 2, !alias.scope !55, !noalias !52
  %1178 = getelementptr i16, i16* %1171, i64 8
  %1179 = bitcast i16* %1178 to <8 x i16>*
  store <8 x i16> %1176, <8 x i16>* %1179, align 2, !alias.scope !55, !noalias !52
  %1180 = add i64 %1135, 64
  %1181 = add i64 %1136, -4
  %1182 = icmp eq i64 %1181, 0
  br i1 %1182, label %1183, label %1134, !llvm.loop !57

1183:                                             ; preds = %1134, %1122
  %1184 = phi i64 [ 0, %1122 ], [ %1180, %1134 ]
  %1185 = icmp eq i64 %1130, 0
  br i1 %1185, label %1202, label %1186

1186:                                             ; preds = %1183, %1186
  %1187 = phi i64 [ %1199, %1186 ], [ %1184, %1183 ]
  %1188 = phi i64 [ %1200, %1186 ], [ %1130, %1183 ]
  %1189 = getelementptr i16, i16* %1084, i64 %1187
  %1190 = getelementptr i16, i16* %1111, i64 %1187
  %1191 = bitcast i16* %1189 to <8 x i16>*
  %1192 = load <8 x i16>, <8 x i16>* %1191, align 2, !alias.scope !52
  %1193 = getelementptr i16, i16* %1189, i64 8
  %1194 = bitcast i16* %1193 to <8 x i16>*
  %1195 = load <8 x i16>, <8 x i16>* %1194, align 2, !alias.scope !52
  %1196 = bitcast i16* %1190 to <8 x i16>*
  store <8 x i16> %1192, <8 x i16>* %1196, align 2, !alias.scope !55, !noalias !52
  %1197 = getelementptr i16, i16* %1190, i64 8
  %1198 = bitcast i16* %1197 to <8 x i16>*
  store <8 x i16> %1195, <8 x i16>* %1198, align 2, !alias.scope !55, !noalias !52
  %1199 = add i64 %1187, 16
  %1200 = add i64 %1188, -1
  %1201 = icmp eq i64 %1200, 0
  br i1 %1201, label %1202, label %1186, !llvm.loop !58

1202:                                             ; preds = %1186, %1183
  %1203 = icmp eq i64 %1113, %1123
  br i1 %1203, label %1257, label %1204

1204:                                             ; preds = %1202, %1115, %1110
  %1205 = phi i64 [ %1112, %1115 ], [ %1112, %1110 ], [ %1124, %1202 ]
  %1206 = phi i16* [ %1084, %1115 ], [ %1084, %1110 ], [ %1125, %1202 ]
  %1207 = phi i16* [ %1111, %1115 ], [ %1111, %1110 ], [ %1126, %1202 ]
  %1208 = add i64 %1205, -1
  %1209 = and i64 %1205, 7
  %1210 = icmp eq i64 %1209, 0
  br i1 %1210, label %1222, label %1211

1211:                                             ; preds = %1204, %1211
  %1212 = phi i64 [ %1217, %1211 ], [ %1205, %1204 ]
  %1213 = phi i16* [ %1219, %1211 ], [ %1206, %1204 ]
  %1214 = phi i16* [ %1218, %1211 ], [ %1207, %1204 ]
  %1215 = phi i64 [ %1220, %1211 ], [ %1209, %1204 ]
  %1216 = load i16, i16* %1213, align 2
  store i16 %1216, i16* %1214, align 2
  %1217 = add i64 %1212, -1
  %1218 = getelementptr inbounds i16, i16* %1214, i64 1
  %1219 = getelementptr inbounds i16, i16* %1213, i64 1
  %1220 = add i64 %1215, -1
  %1221 = icmp eq i64 %1220, 0
  br i1 %1221, label %1222, label %1211, !llvm.loop !59

1222:                                             ; preds = %1211, %1204
  %1223 = phi i64 [ %1205, %1204 ], [ %1217, %1211 ]
  %1224 = phi i16* [ %1206, %1204 ], [ %1219, %1211 ]
  %1225 = phi i16* [ %1207, %1204 ], [ %1218, %1211 ]
  %1226 = icmp ult i64 %1208, 7
  br i1 %1226, label %1257, label %1227

1227:                                             ; preds = %1222, %1227
  %1228 = phi i64 [ %1253, %1227 ], [ %1223, %1222 ]
  %1229 = phi i16* [ %1255, %1227 ], [ %1224, %1222 ]
  %1230 = phi i16* [ %1254, %1227 ], [ %1225, %1222 ]
  %1231 = load i16, i16* %1229, align 2
  store i16 %1231, i16* %1230, align 2
  %1232 = getelementptr inbounds i16, i16* %1230, i64 1
  %1233 = getelementptr inbounds i16, i16* %1229, i64 1
  %1234 = load i16, i16* %1233, align 2
  store i16 %1234, i16* %1232, align 2
  %1235 = getelementptr inbounds i16, i16* %1230, i64 2
  %1236 = getelementptr inbounds i16, i16* %1229, i64 2
  %1237 = load i16, i16* %1236, align 2
  store i16 %1237, i16* %1235, align 2
  %1238 = getelementptr inbounds i16, i16* %1230, i64 3
  %1239 = getelementptr inbounds i16, i16* %1229, i64 3
  %1240 = load i16, i16* %1239, align 2
  store i16 %1240, i16* %1238, align 2
  %1241 = getelementptr inbounds i16, i16* %1230, i64 4
  %1242 = getelementptr inbounds i16, i16* %1229, i64 4
  %1243 = load i16, i16* %1242, align 2
  store i16 %1243, i16* %1241, align 2
  %1244 = getelementptr inbounds i16, i16* %1230, i64 5
  %1245 = getelementptr inbounds i16, i16* %1229, i64 5
  %1246 = load i16, i16* %1245, align 2
  store i16 %1246, i16* %1244, align 2
  %1247 = getelementptr inbounds i16, i16* %1230, i64 6
  %1248 = getelementptr inbounds i16, i16* %1229, i64 6
  %1249 = load i16, i16* %1248, align 2
  store i16 %1249, i16* %1247, align 2
  %1250 = getelementptr inbounds i16, i16* %1230, i64 7
  %1251 = getelementptr inbounds i16, i16* %1229, i64 7
  %1252 = load i16, i16* %1251, align 2
  store i16 %1252, i16* %1250, align 2
  %1253 = add i64 %1228, -8
  %1254 = getelementptr inbounds i16, i16* %1230, i64 8
  %1255 = getelementptr inbounds i16, i16* %1229, i64 8
  %1256 = icmp eq i64 %1253, 0
  br i1 %1256, label %1257, label %1227, !llvm.loop !60

1257:                                             ; preds = %1222, %1227, %1202, %1079, %1071
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1056) #12
  br label %3092

1258:                                             ; preds = %73
  %1259 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1259) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1259, i8 -86, i64 144, i1 false)
  %1260 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1261 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1260, align 8
  %1262 = sext i32 %2 to i64
  %1263 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1264 = load i64*, i64** %1263, align 8
  %1265 = getelementptr inbounds i64, i64* %1264, i64 %1262
  %1266 = load i64, i64* %1265, align 8
  %1267 = bitcast %"class.task_manager::TaskManagerInterface"* %1261 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)***
  %1268 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*** %1267, align 8
  %1269 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1268, i64 31
  %1270 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1269, align 8
  %1271 = call zeroext i1 %1270(%"class.task_manager::TaskManagerInterface"* %1261, i64 %1266, %"struct.blink::WebCacheResourceTypeStats"* nonnull %17) #12
  %1272 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1273 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1272, align 8
  br i1 %1271, label %1274, label %1277

1274:                                             ; preds = %1258
  %1275 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %17, i64 0, i32 2, i32 1
  %1276 = load i64, i64* %1275, align 8, !noalias !61
  call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %1273, i64 %1276, i1 zeroext false) #12
  br label %1460

1277:                                             ; preds = %1258
  %1278 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1273 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1279 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1278, i64 0, i32 1, i32 1
  %1280 = load i8, i8* %1279, align 1
  %1281 = icmp slt i8 %1280, 0
  br i1 %1281, label %1285, label %1282

1282:                                             ; preds = %1277
  %1283 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %1284 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1283, i8* align 8 %1284, i64 24, i1 false) #12
  br label %1460

1285:                                             ; preds = %1277
  %1286 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1273, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1287 = load i16*, i16** %1286, align 8
  %1288 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1273, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1289 = load i64, i64* %1288, align 8
  %1290 = icmp ult i64 %1289, 11
  br i1 %1290, label %1291, label %1296

1291:                                             ; preds = %1285
  %1292 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %1293 = trunc i64 %1289 to i8
  %1294 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1295 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1294, i64 0, i32 1, i32 1
  store i8 %1293, i8* %1295, align 1
  br label %1313

1296:                                             ; preds = %1285
  %1297 = icmp ugt i64 %1289, 9223372036854775791
  br i1 %1297, label %1298, label %1300

1298:                                             ; preds = %1296
  %1299 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1299) #14
  unreachable

1300:                                             ; preds = %1296
  %1301 = add nuw nsw i64 %1289, 8
  %1302 = and i64 %1301, -8
  %1303 = icmp slt i64 %1302, 0
  br i1 %1303, label %1304, label %1305

1304:                                             ; preds = %1300
  call void @abort() #14
  unreachable

1305:                                             ; preds = %1300
  %1306 = shl i64 %1302, 1
  %1307 = call i8* @_Znwm(i64 %1306) #13
  %1308 = bitcast i8* %1307 to i16*
  %1309 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %1307, i8** %1309, align 8
  %1310 = or i64 %1302, -9223372036854775808
  %1311 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1310, i64* %1311, align 8
  %1312 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1289, i64* %1312, align 8
  br label %1313

1313:                                             ; preds = %1305, %1291
  %1314 = phi i16* [ %1292, %1291 ], [ %1308, %1305 ]
  %1315 = add nuw nsw i64 %1289, 1
  %1316 = add i64 %1289, 1
  %1317 = icmp ult i64 %1316, 16
  br i1 %1317, label %1407, label %1318

1318:                                             ; preds = %1313
  %1319 = add i64 %1289, 1
  %1320 = getelementptr i16, i16* %1314, i64 %1319
  %1321 = getelementptr i16, i16* %1287, i64 %1319
  %1322 = icmp ult i16* %1314, %1321
  %1323 = icmp ult i16* %1287, %1320
  %1324 = and i1 %1322, %1323
  br i1 %1324, label %1407, label %1325

1325:                                             ; preds = %1318
  %1326 = and i64 %1316, -16
  %1327 = sub i64 %1315, %1326
  %1328 = getelementptr i16, i16* %1287, i64 %1326
  %1329 = getelementptr i16, i16* %1314, i64 %1326
  %1330 = add i64 %1326, -16
  %1331 = lshr exact i64 %1330, 4
  %1332 = add nuw nsw i64 %1331, 1
  %1333 = and i64 %1332, 3
  %1334 = icmp ult i64 %1330, 48
  br i1 %1334, label %1386, label %1335

1335:                                             ; preds = %1325
  %1336 = sub nsw i64 %1332, %1333
  br label %1337

1337:                                             ; preds = %1337, %1335
  %1338 = phi i64 [ 0, %1335 ], [ %1383, %1337 ]
  %1339 = phi i64 [ %1336, %1335 ], [ %1384, %1337 ]
  %1340 = getelementptr i16, i16* %1287, i64 %1338
  %1341 = getelementptr i16, i16* %1314, i64 %1338
  %1342 = bitcast i16* %1340 to <8 x i16>*
  %1343 = load <8 x i16>, <8 x i16>* %1342, align 2, !alias.scope !64
  %1344 = getelementptr i16, i16* %1340, i64 8
  %1345 = bitcast i16* %1344 to <8 x i16>*
  %1346 = load <8 x i16>, <8 x i16>* %1345, align 2, !alias.scope !64
  %1347 = bitcast i16* %1341 to <8 x i16>*
  store <8 x i16> %1343, <8 x i16>* %1347, align 2, !alias.scope !67, !noalias !64
  %1348 = getelementptr i16, i16* %1341, i64 8
  %1349 = bitcast i16* %1348 to <8 x i16>*
  store <8 x i16> %1346, <8 x i16>* %1349, align 2, !alias.scope !67, !noalias !64
  %1350 = or i64 %1338, 16
  %1351 = getelementptr i16, i16* %1287, i64 %1350
  %1352 = getelementptr i16, i16* %1314, i64 %1350
  %1353 = bitcast i16* %1351 to <8 x i16>*
  %1354 = load <8 x i16>, <8 x i16>* %1353, align 2, !alias.scope !64
  %1355 = getelementptr i16, i16* %1351, i64 8
  %1356 = bitcast i16* %1355 to <8 x i16>*
  %1357 = load <8 x i16>, <8 x i16>* %1356, align 2, !alias.scope !64
  %1358 = bitcast i16* %1352 to <8 x i16>*
  store <8 x i16> %1354, <8 x i16>* %1358, align 2, !alias.scope !67, !noalias !64
  %1359 = getelementptr i16, i16* %1352, i64 8
  %1360 = bitcast i16* %1359 to <8 x i16>*
  store <8 x i16> %1357, <8 x i16>* %1360, align 2, !alias.scope !67, !noalias !64
  %1361 = or i64 %1338, 32
  %1362 = getelementptr i16, i16* %1287, i64 %1361
  %1363 = getelementptr i16, i16* %1314, i64 %1361
  %1364 = bitcast i16* %1362 to <8 x i16>*
  %1365 = load <8 x i16>, <8 x i16>* %1364, align 2, !alias.scope !64
  %1366 = getelementptr i16, i16* %1362, i64 8
  %1367 = bitcast i16* %1366 to <8 x i16>*
  %1368 = load <8 x i16>, <8 x i16>* %1367, align 2, !alias.scope !64
  %1369 = bitcast i16* %1363 to <8 x i16>*
  store <8 x i16> %1365, <8 x i16>* %1369, align 2, !alias.scope !67, !noalias !64
  %1370 = getelementptr i16, i16* %1363, i64 8
  %1371 = bitcast i16* %1370 to <8 x i16>*
  store <8 x i16> %1368, <8 x i16>* %1371, align 2, !alias.scope !67, !noalias !64
  %1372 = or i64 %1338, 48
  %1373 = getelementptr i16, i16* %1287, i64 %1372
  %1374 = getelementptr i16, i16* %1314, i64 %1372
  %1375 = bitcast i16* %1373 to <8 x i16>*
  %1376 = load <8 x i16>, <8 x i16>* %1375, align 2, !alias.scope !64
  %1377 = getelementptr i16, i16* %1373, i64 8
  %1378 = bitcast i16* %1377 to <8 x i16>*
  %1379 = load <8 x i16>, <8 x i16>* %1378, align 2, !alias.scope !64
  %1380 = bitcast i16* %1374 to <8 x i16>*
  store <8 x i16> %1376, <8 x i16>* %1380, align 2, !alias.scope !67, !noalias !64
  %1381 = getelementptr i16, i16* %1374, i64 8
  %1382 = bitcast i16* %1381 to <8 x i16>*
  store <8 x i16> %1379, <8 x i16>* %1382, align 2, !alias.scope !67, !noalias !64
  %1383 = add i64 %1338, 64
  %1384 = add i64 %1339, -4
  %1385 = icmp eq i64 %1384, 0
  br i1 %1385, label %1386, label %1337, !llvm.loop !69

1386:                                             ; preds = %1337, %1325
  %1387 = phi i64 [ 0, %1325 ], [ %1383, %1337 ]
  %1388 = icmp eq i64 %1333, 0
  br i1 %1388, label %1405, label %1389

1389:                                             ; preds = %1386, %1389
  %1390 = phi i64 [ %1402, %1389 ], [ %1387, %1386 ]
  %1391 = phi i64 [ %1403, %1389 ], [ %1333, %1386 ]
  %1392 = getelementptr i16, i16* %1287, i64 %1390
  %1393 = getelementptr i16, i16* %1314, i64 %1390
  %1394 = bitcast i16* %1392 to <8 x i16>*
  %1395 = load <8 x i16>, <8 x i16>* %1394, align 2, !alias.scope !64
  %1396 = getelementptr i16, i16* %1392, i64 8
  %1397 = bitcast i16* %1396 to <8 x i16>*
  %1398 = load <8 x i16>, <8 x i16>* %1397, align 2, !alias.scope !64
  %1399 = bitcast i16* %1393 to <8 x i16>*
  store <8 x i16> %1395, <8 x i16>* %1399, align 2, !alias.scope !67, !noalias !64
  %1400 = getelementptr i16, i16* %1393, i64 8
  %1401 = bitcast i16* %1400 to <8 x i16>*
  store <8 x i16> %1398, <8 x i16>* %1401, align 2, !alias.scope !67, !noalias !64
  %1402 = add i64 %1390, 16
  %1403 = add i64 %1391, -1
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1405, label %1389, !llvm.loop !70

1405:                                             ; preds = %1389, %1386
  %1406 = icmp eq i64 %1316, %1326
  br i1 %1406, label %1460, label %1407

1407:                                             ; preds = %1405, %1318, %1313
  %1408 = phi i64 [ %1315, %1318 ], [ %1315, %1313 ], [ %1327, %1405 ]
  %1409 = phi i16* [ %1287, %1318 ], [ %1287, %1313 ], [ %1328, %1405 ]
  %1410 = phi i16* [ %1314, %1318 ], [ %1314, %1313 ], [ %1329, %1405 ]
  %1411 = add i64 %1408, -1
  %1412 = and i64 %1408, 7
  %1413 = icmp eq i64 %1412, 0
  br i1 %1413, label %1425, label %1414

1414:                                             ; preds = %1407, %1414
  %1415 = phi i64 [ %1420, %1414 ], [ %1408, %1407 ]
  %1416 = phi i16* [ %1422, %1414 ], [ %1409, %1407 ]
  %1417 = phi i16* [ %1421, %1414 ], [ %1410, %1407 ]
  %1418 = phi i64 [ %1423, %1414 ], [ %1412, %1407 ]
  %1419 = load i16, i16* %1416, align 2
  store i16 %1419, i16* %1417, align 2
  %1420 = add i64 %1415, -1
  %1421 = getelementptr inbounds i16, i16* %1417, i64 1
  %1422 = getelementptr inbounds i16, i16* %1416, i64 1
  %1423 = add i64 %1418, -1
  %1424 = icmp eq i64 %1423, 0
  br i1 %1424, label %1425, label %1414, !llvm.loop !71

1425:                                             ; preds = %1414, %1407
  %1426 = phi i64 [ %1408, %1407 ], [ %1420, %1414 ]
  %1427 = phi i16* [ %1409, %1407 ], [ %1422, %1414 ]
  %1428 = phi i16* [ %1410, %1407 ], [ %1421, %1414 ]
  %1429 = icmp ult i64 %1411, 7
  br i1 %1429, label %1460, label %1430

1430:                                             ; preds = %1425, %1430
  %1431 = phi i64 [ %1456, %1430 ], [ %1426, %1425 ]
  %1432 = phi i16* [ %1458, %1430 ], [ %1427, %1425 ]
  %1433 = phi i16* [ %1457, %1430 ], [ %1428, %1425 ]
  %1434 = load i16, i16* %1432, align 2
  store i16 %1434, i16* %1433, align 2
  %1435 = getelementptr inbounds i16, i16* %1433, i64 1
  %1436 = getelementptr inbounds i16, i16* %1432, i64 1
  %1437 = load i16, i16* %1436, align 2
  store i16 %1437, i16* %1435, align 2
  %1438 = getelementptr inbounds i16, i16* %1433, i64 2
  %1439 = getelementptr inbounds i16, i16* %1432, i64 2
  %1440 = load i16, i16* %1439, align 2
  store i16 %1440, i16* %1438, align 2
  %1441 = getelementptr inbounds i16, i16* %1433, i64 3
  %1442 = getelementptr inbounds i16, i16* %1432, i64 3
  %1443 = load i16, i16* %1442, align 2
  store i16 %1443, i16* %1441, align 2
  %1444 = getelementptr inbounds i16, i16* %1433, i64 4
  %1445 = getelementptr inbounds i16, i16* %1432, i64 4
  %1446 = load i16, i16* %1445, align 2
  store i16 %1446, i16* %1444, align 2
  %1447 = getelementptr inbounds i16, i16* %1433, i64 5
  %1448 = getelementptr inbounds i16, i16* %1432, i64 5
  %1449 = load i16, i16* %1448, align 2
  store i16 %1449, i16* %1447, align 2
  %1450 = getelementptr inbounds i16, i16* %1433, i64 6
  %1451 = getelementptr inbounds i16, i16* %1432, i64 6
  %1452 = load i16, i16* %1451, align 2
  store i16 %1452, i16* %1450, align 2
  %1453 = getelementptr inbounds i16, i16* %1433, i64 7
  %1454 = getelementptr inbounds i16, i16* %1432, i64 7
  %1455 = load i16, i16* %1454, align 2
  store i16 %1455, i16* %1453, align 2
  %1456 = add i64 %1431, -8
  %1457 = getelementptr inbounds i16, i16* %1433, i64 8
  %1458 = getelementptr inbounds i16, i16* %1432, i64 8
  %1459 = icmp eq i64 %1456, 0
  br i1 %1459, label %1460, label %1430, !llvm.loop !72

1460:                                             ; preds = %1425, %1430, %1405, %1282, %1274
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1259) #12
  br label %3092

1461:                                             ; preds = %73
  %1462 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1462) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1462, i8 -86, i64 144, i1 false)
  %1463 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1464 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1463, align 8
  %1465 = sext i32 %2 to i64
  %1466 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1467 = load i64*, i64** %1466, align 8
  %1468 = getelementptr inbounds i64, i64* %1467, i64 %1465
  %1469 = load i64, i64* %1468, align 8
  %1470 = bitcast %"class.task_manager::TaskManagerInterface"* %1464 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)***
  %1471 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*** %1470, align 8
  %1472 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1471, i64 31
  %1473 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %1472, align 8
  %1474 = call zeroext i1 %1473(%"class.task_manager::TaskManagerInterface"* %1464, i64 %1469, %"struct.blink::WebCacheResourceTypeStats"* nonnull %18) #12
  %1475 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1476 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1475, align 8
  br i1 %1474, label %1477, label %1480

1477:                                             ; preds = %1461
  %1478 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %18, i64 0, i32 1, i32 1
  %1479 = load i64, i64* %1478, align 8, !noalias !73
  call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %1476, i64 %1479, i1 zeroext false) #12
  br label %1663

1480:                                             ; preds = %1461
  %1481 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1476 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1482 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1481, i64 0, i32 1, i32 1
  %1483 = load i8, i8* %1482, align 1
  %1484 = icmp slt i8 %1483, 0
  br i1 %1484, label %1488, label %1485

1485:                                             ; preds = %1480
  %1486 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %1487 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1486, i8* align 8 %1487, i64 24, i1 false) #12
  br label %1663

1488:                                             ; preds = %1480
  %1489 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1476, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1490 = load i16*, i16** %1489, align 8
  %1491 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1476, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1492 = load i64, i64* %1491, align 8
  %1493 = icmp ult i64 %1492, 11
  br i1 %1493, label %1494, label %1499

1494:                                             ; preds = %1488
  %1495 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %1496 = trunc i64 %1492 to i8
  %1497 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1498 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1497, i64 0, i32 1, i32 1
  store i8 %1496, i8* %1498, align 1
  br label %1516

1499:                                             ; preds = %1488
  %1500 = icmp ugt i64 %1492, 9223372036854775791
  br i1 %1500, label %1501, label %1503

1501:                                             ; preds = %1499
  %1502 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1502) #14
  unreachable

1503:                                             ; preds = %1499
  %1504 = add nuw nsw i64 %1492, 8
  %1505 = and i64 %1504, -8
  %1506 = icmp slt i64 %1505, 0
  br i1 %1506, label %1507, label %1508

1507:                                             ; preds = %1503
  call void @abort() #14
  unreachable

1508:                                             ; preds = %1503
  %1509 = shl i64 %1505, 1
  %1510 = call i8* @_Znwm(i64 %1509) #13
  %1511 = bitcast i8* %1510 to i16*
  %1512 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %1510, i8** %1512, align 8
  %1513 = or i64 %1505, -9223372036854775808
  %1514 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1513, i64* %1514, align 8
  %1515 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1492, i64* %1515, align 8
  br label %1516

1516:                                             ; preds = %1508, %1494
  %1517 = phi i16* [ %1495, %1494 ], [ %1511, %1508 ]
  %1518 = add nuw nsw i64 %1492, 1
  %1519 = add i64 %1492, 1
  %1520 = icmp ult i64 %1519, 16
  br i1 %1520, label %1610, label %1521

1521:                                             ; preds = %1516
  %1522 = add i64 %1492, 1
  %1523 = getelementptr i16, i16* %1517, i64 %1522
  %1524 = getelementptr i16, i16* %1490, i64 %1522
  %1525 = icmp ult i16* %1517, %1524
  %1526 = icmp ult i16* %1490, %1523
  %1527 = and i1 %1525, %1526
  br i1 %1527, label %1610, label %1528

1528:                                             ; preds = %1521
  %1529 = and i64 %1519, -16
  %1530 = sub i64 %1518, %1529
  %1531 = getelementptr i16, i16* %1490, i64 %1529
  %1532 = getelementptr i16, i16* %1517, i64 %1529
  %1533 = add i64 %1529, -16
  %1534 = lshr exact i64 %1533, 4
  %1535 = add nuw nsw i64 %1534, 1
  %1536 = and i64 %1535, 3
  %1537 = icmp ult i64 %1533, 48
  br i1 %1537, label %1589, label %1538

1538:                                             ; preds = %1528
  %1539 = sub nsw i64 %1535, %1536
  br label %1540

1540:                                             ; preds = %1540, %1538
  %1541 = phi i64 [ 0, %1538 ], [ %1586, %1540 ]
  %1542 = phi i64 [ %1539, %1538 ], [ %1587, %1540 ]
  %1543 = getelementptr i16, i16* %1490, i64 %1541
  %1544 = getelementptr i16, i16* %1517, i64 %1541
  %1545 = bitcast i16* %1543 to <8 x i16>*
  %1546 = load <8 x i16>, <8 x i16>* %1545, align 2, !alias.scope !76
  %1547 = getelementptr i16, i16* %1543, i64 8
  %1548 = bitcast i16* %1547 to <8 x i16>*
  %1549 = load <8 x i16>, <8 x i16>* %1548, align 2, !alias.scope !76
  %1550 = bitcast i16* %1544 to <8 x i16>*
  store <8 x i16> %1546, <8 x i16>* %1550, align 2, !alias.scope !79, !noalias !76
  %1551 = getelementptr i16, i16* %1544, i64 8
  %1552 = bitcast i16* %1551 to <8 x i16>*
  store <8 x i16> %1549, <8 x i16>* %1552, align 2, !alias.scope !79, !noalias !76
  %1553 = or i64 %1541, 16
  %1554 = getelementptr i16, i16* %1490, i64 %1553
  %1555 = getelementptr i16, i16* %1517, i64 %1553
  %1556 = bitcast i16* %1554 to <8 x i16>*
  %1557 = load <8 x i16>, <8 x i16>* %1556, align 2, !alias.scope !76
  %1558 = getelementptr i16, i16* %1554, i64 8
  %1559 = bitcast i16* %1558 to <8 x i16>*
  %1560 = load <8 x i16>, <8 x i16>* %1559, align 2, !alias.scope !76
  %1561 = bitcast i16* %1555 to <8 x i16>*
  store <8 x i16> %1557, <8 x i16>* %1561, align 2, !alias.scope !79, !noalias !76
  %1562 = getelementptr i16, i16* %1555, i64 8
  %1563 = bitcast i16* %1562 to <8 x i16>*
  store <8 x i16> %1560, <8 x i16>* %1563, align 2, !alias.scope !79, !noalias !76
  %1564 = or i64 %1541, 32
  %1565 = getelementptr i16, i16* %1490, i64 %1564
  %1566 = getelementptr i16, i16* %1517, i64 %1564
  %1567 = bitcast i16* %1565 to <8 x i16>*
  %1568 = load <8 x i16>, <8 x i16>* %1567, align 2, !alias.scope !76
  %1569 = getelementptr i16, i16* %1565, i64 8
  %1570 = bitcast i16* %1569 to <8 x i16>*
  %1571 = load <8 x i16>, <8 x i16>* %1570, align 2, !alias.scope !76
  %1572 = bitcast i16* %1566 to <8 x i16>*
  store <8 x i16> %1568, <8 x i16>* %1572, align 2, !alias.scope !79, !noalias !76
  %1573 = getelementptr i16, i16* %1566, i64 8
  %1574 = bitcast i16* %1573 to <8 x i16>*
  store <8 x i16> %1571, <8 x i16>* %1574, align 2, !alias.scope !79, !noalias !76
  %1575 = or i64 %1541, 48
  %1576 = getelementptr i16, i16* %1490, i64 %1575
  %1577 = getelementptr i16, i16* %1517, i64 %1575
  %1578 = bitcast i16* %1576 to <8 x i16>*
  %1579 = load <8 x i16>, <8 x i16>* %1578, align 2, !alias.scope !76
  %1580 = getelementptr i16, i16* %1576, i64 8
  %1581 = bitcast i16* %1580 to <8 x i16>*
  %1582 = load <8 x i16>, <8 x i16>* %1581, align 2, !alias.scope !76
  %1583 = bitcast i16* %1577 to <8 x i16>*
  store <8 x i16> %1579, <8 x i16>* %1583, align 2, !alias.scope !79, !noalias !76
  %1584 = getelementptr i16, i16* %1577, i64 8
  %1585 = bitcast i16* %1584 to <8 x i16>*
  store <8 x i16> %1582, <8 x i16>* %1585, align 2, !alias.scope !79, !noalias !76
  %1586 = add i64 %1541, 64
  %1587 = add i64 %1542, -4
  %1588 = icmp eq i64 %1587, 0
  br i1 %1588, label %1589, label %1540, !llvm.loop !81

1589:                                             ; preds = %1540, %1528
  %1590 = phi i64 [ 0, %1528 ], [ %1586, %1540 ]
  %1591 = icmp eq i64 %1536, 0
  br i1 %1591, label %1608, label %1592

1592:                                             ; preds = %1589, %1592
  %1593 = phi i64 [ %1605, %1592 ], [ %1590, %1589 ]
  %1594 = phi i64 [ %1606, %1592 ], [ %1536, %1589 ]
  %1595 = getelementptr i16, i16* %1490, i64 %1593
  %1596 = getelementptr i16, i16* %1517, i64 %1593
  %1597 = bitcast i16* %1595 to <8 x i16>*
  %1598 = load <8 x i16>, <8 x i16>* %1597, align 2, !alias.scope !76
  %1599 = getelementptr i16, i16* %1595, i64 8
  %1600 = bitcast i16* %1599 to <8 x i16>*
  %1601 = load <8 x i16>, <8 x i16>* %1600, align 2, !alias.scope !76
  %1602 = bitcast i16* %1596 to <8 x i16>*
  store <8 x i16> %1598, <8 x i16>* %1602, align 2, !alias.scope !79, !noalias !76
  %1603 = getelementptr i16, i16* %1596, i64 8
  %1604 = bitcast i16* %1603 to <8 x i16>*
  store <8 x i16> %1601, <8 x i16>* %1604, align 2, !alias.scope !79, !noalias !76
  %1605 = add i64 %1593, 16
  %1606 = add i64 %1594, -1
  %1607 = icmp eq i64 %1606, 0
  br i1 %1607, label %1608, label %1592, !llvm.loop !82

1608:                                             ; preds = %1592, %1589
  %1609 = icmp eq i64 %1519, %1529
  br i1 %1609, label %1663, label %1610

1610:                                             ; preds = %1608, %1521, %1516
  %1611 = phi i64 [ %1518, %1521 ], [ %1518, %1516 ], [ %1530, %1608 ]
  %1612 = phi i16* [ %1490, %1521 ], [ %1490, %1516 ], [ %1531, %1608 ]
  %1613 = phi i16* [ %1517, %1521 ], [ %1517, %1516 ], [ %1532, %1608 ]
  %1614 = add i64 %1611, -1
  %1615 = and i64 %1611, 7
  %1616 = icmp eq i64 %1615, 0
  br i1 %1616, label %1628, label %1617

1617:                                             ; preds = %1610, %1617
  %1618 = phi i64 [ %1623, %1617 ], [ %1611, %1610 ]
  %1619 = phi i16* [ %1625, %1617 ], [ %1612, %1610 ]
  %1620 = phi i16* [ %1624, %1617 ], [ %1613, %1610 ]
  %1621 = phi i64 [ %1626, %1617 ], [ %1615, %1610 ]
  %1622 = load i16, i16* %1619, align 2
  store i16 %1622, i16* %1620, align 2
  %1623 = add i64 %1618, -1
  %1624 = getelementptr inbounds i16, i16* %1620, i64 1
  %1625 = getelementptr inbounds i16, i16* %1619, i64 1
  %1626 = add i64 %1621, -1
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1628, label %1617, !llvm.loop !83

1628:                                             ; preds = %1617, %1610
  %1629 = phi i64 [ %1611, %1610 ], [ %1623, %1617 ]
  %1630 = phi i16* [ %1612, %1610 ], [ %1625, %1617 ]
  %1631 = phi i16* [ %1613, %1610 ], [ %1624, %1617 ]
  %1632 = icmp ult i64 %1614, 7
  br i1 %1632, label %1663, label %1633

1633:                                             ; preds = %1628, %1633
  %1634 = phi i64 [ %1659, %1633 ], [ %1629, %1628 ]
  %1635 = phi i16* [ %1661, %1633 ], [ %1630, %1628 ]
  %1636 = phi i16* [ %1660, %1633 ], [ %1631, %1628 ]
  %1637 = load i16, i16* %1635, align 2
  store i16 %1637, i16* %1636, align 2
  %1638 = getelementptr inbounds i16, i16* %1636, i64 1
  %1639 = getelementptr inbounds i16, i16* %1635, i64 1
  %1640 = load i16, i16* %1639, align 2
  store i16 %1640, i16* %1638, align 2
  %1641 = getelementptr inbounds i16, i16* %1636, i64 2
  %1642 = getelementptr inbounds i16, i16* %1635, i64 2
  %1643 = load i16, i16* %1642, align 2
  store i16 %1643, i16* %1641, align 2
  %1644 = getelementptr inbounds i16, i16* %1636, i64 3
  %1645 = getelementptr inbounds i16, i16* %1635, i64 3
  %1646 = load i16, i16* %1645, align 2
  store i16 %1646, i16* %1644, align 2
  %1647 = getelementptr inbounds i16, i16* %1636, i64 4
  %1648 = getelementptr inbounds i16, i16* %1635, i64 4
  %1649 = load i16, i16* %1648, align 2
  store i16 %1649, i16* %1647, align 2
  %1650 = getelementptr inbounds i16, i16* %1636, i64 5
  %1651 = getelementptr inbounds i16, i16* %1635, i64 5
  %1652 = load i16, i16* %1651, align 2
  store i16 %1652, i16* %1650, align 2
  %1653 = getelementptr inbounds i16, i16* %1636, i64 6
  %1654 = getelementptr inbounds i16, i16* %1635, i64 6
  %1655 = load i16, i16* %1654, align 2
  store i16 %1655, i16* %1653, align 2
  %1656 = getelementptr inbounds i16, i16* %1636, i64 7
  %1657 = getelementptr inbounds i16, i16* %1635, i64 7
  %1658 = load i16, i16* %1657, align 2
  store i16 %1658, i16* %1656, align 2
  %1659 = add i64 %1634, -8
  %1660 = getelementptr inbounds i16, i16* %1636, i64 8
  %1661 = getelementptr inbounds i16, i16* %1635, i64 8
  %1662 = icmp eq i64 %1659, 0
  br i1 %1662, label %1663, label %1633, !llvm.loop !84

1663:                                             ; preds = %1628, %1633, %1608, %1485, %1477
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1462) #12
  br label %3092

1664:                                             ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #12
  store i8 0, i8* %19, align 1
  %1665 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1666 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1665, align 8
  %1667 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1668 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1667, align 8
  %1669 = sext i32 %2 to i64
  %1670 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1671 = load i64*, i64** %1670, align 8
  %1672 = getelementptr inbounds i64, i64* %1671, i64 %1669
  %1673 = load i64, i64* %1672, align 8
  %1674 = bitcast %"class.task_manager::TaskManagerInterface"* %1668 to i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)***
  %1675 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*** %1674, align 8
  %1676 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %1675, i64 8
  %1677 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %1676, align 8
  %1678 = call i64 %1677(%"class.task_manager::TaskManagerInterface"* %1668, i64 %1673, i8* nonnull %19) #12
  %1679 = load i8, i8* %19, align 1, !range !85
  %1680 = icmp ne i8 %1679, 0
  call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %1666, i64 %1678, i1 zeroext %1680)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #12
  br label %3092

1681:                                             ; preds = %73
  %1682 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1683 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1682, align 8
  %1684 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1685 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1684, align 8
  %1686 = sext i32 %2 to i64
  %1687 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1688 = load i64*, i64** %1687, align 8
  %1689 = getelementptr inbounds i64, i64* %1688, i64 %1686
  %1690 = load i64, i64* %1689, align 8
  %1691 = bitcast %"class.task_manager::TaskManagerInterface"* %1685 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %1692 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %1691, align 8
  %1693 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %1692, i64 29
  %1694 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %1693, align 8
  %1695 = tail call i64 %1694(%"class.task_manager::TaskManagerInterface"* %1685, i64 %1690) #12
  tail call void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerValuesStringifier"* %1683, i64 %1695, i1 zeroext false)
  br label %3092

1696:                                             ; preds = %73
  %1697 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1697) #12
  store i64 -6148914691236517206, i64* %20, align 8
  %1698 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1698) #12
  store i64 -6148914691236517206, i64* %21, align 8
  %1699 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %1700 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %1699, align 8
  %1701 = sext i32 %2 to i64
  %1702 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %1703 = load i64*, i64** %1702, align 8
  %1704 = getelementptr inbounds i64, i64* %1703, i64 %1701
  %1705 = load i64, i64* %1704, align 8
  %1706 = bitcast %"class.task_manager::TaskManagerInterface"* %1700 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %1707 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %1706, align 8
  %1708 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %1707, i64 30
  %1709 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %1708, align 8
  %1710 = call zeroext i1 %1709(%"class.task_manager::TaskManagerInterface"* %1700, i64 %1705, i64* nonnull %20, i64* nonnull %21) #12
  br i1 %1710, label %1711, label %1732

1711:                                             ; preds = %1696
  %1712 = load i64, i64* %20, align 8
  %1713 = load i64, i64* %21, align 8
  %1714 = bitcast %"class.std::__1::basic_string.64"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1714) #12, !noalias !86
  call void @_ZN2ui20FormatBytesWithUnitsElNS_9DataUnitsEb(%"class.std::__1::basic_string.64"* nonnull sret %5, i64 %1712, i32 1, i1 zeroext false) #12, !noalias !86
  %1715 = bitcast %"class.std::__1::basic_string.64"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1715) #12, !noalias !86
  call void @_ZN2ui20FormatBytesWithUnitsElNS_9DataUnitsEb(%"class.std::__1::basic_string.64"* nonnull sret %6, i64 %1713, i32 1, i1 zeroext false) #12, !noalias !86
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.64"* sret %0, i32 7256, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %6) #12
  %1716 = bitcast %"class.std::__1::basic_string.64"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1717 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1716, i64 0, i32 1, i32 1
  %1718 = load i8, i8* %1717, align 1, !noalias !86
  %1719 = icmp slt i8 %1718, 0
  br i1 %1719, label %1720, label %1723

1720:                                             ; preds = %1711
  %1721 = bitcast %"class.std::__1::basic_string.64"* %6 to i8**
  %1722 = load i8*, i8** %1721, align 8, !noalias !86
  call void @_ZdlPv(i8* %1722) #13
  br label %1723

1723:                                             ; preds = %1720, %1711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1715) #12, !noalias !86
  %1724 = bitcast %"class.std::__1::basic_string.64"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1725 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1724, i64 0, i32 1, i32 1
  %1726 = load i8, i8* %1725, align 1, !noalias !86
  %1727 = icmp slt i8 %1726, 0
  br i1 %1727, label %1728, label %1731

1728:                                             ; preds = %1723
  %1729 = bitcast %"class.std::__1::basic_string.64"* %5 to i8**
  %1730 = load i8*, i8** %1729, align 8, !noalias !86
  call void @_ZdlPv(i8* %1730) #13
  br label %1731

1731:                                             ; preds = %1723, %1728
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1714) #12, !noalias !86
  br label %1917

1732:                                             ; preds = %1696
  %1733 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1734 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1733, align 8
  %1735 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1734 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1736 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1735, i64 0, i32 1, i32 1
  %1737 = load i8, i8* %1736, align 1
  %1738 = icmp slt i8 %1737, 0
  br i1 %1738, label %1742, label %1739

1739:                                             ; preds = %1732
  %1740 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %1741 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1740, i8* align 8 %1741, i64 24, i1 false) #12
  br label %1917

1742:                                             ; preds = %1732
  %1743 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1734, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1744 = load i16*, i16** %1743, align 8
  %1745 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1734, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1746 = load i64, i64* %1745, align 8
  %1747 = icmp ult i64 %1746, 11
  br i1 %1747, label %1748, label %1753

1748:                                             ; preds = %1742
  %1749 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %1750 = trunc i64 %1746 to i8
  %1751 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1752 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1751, i64 0, i32 1, i32 1
  store i8 %1750, i8* %1752, align 1
  br label %1770

1753:                                             ; preds = %1742
  %1754 = icmp ugt i64 %1746, 9223372036854775791
  br i1 %1754, label %1755, label %1757

1755:                                             ; preds = %1753
  %1756 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1756) #14
  unreachable

1757:                                             ; preds = %1753
  %1758 = add nuw nsw i64 %1746, 8
  %1759 = and i64 %1758, -8
  %1760 = icmp slt i64 %1759, 0
  br i1 %1760, label %1761, label %1762

1761:                                             ; preds = %1757
  call void @abort() #14
  unreachable

1762:                                             ; preds = %1757
  %1763 = shl i64 %1759, 1
  %1764 = call i8* @_Znwm(i64 %1763) #13
  %1765 = bitcast i8* %1764 to i16*
  %1766 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %1764, i8** %1766, align 8
  %1767 = or i64 %1759, -9223372036854775808
  %1768 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1767, i64* %1768, align 8
  %1769 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1746, i64* %1769, align 8
  br label %1770

1770:                                             ; preds = %1762, %1748
  %1771 = phi i16* [ %1749, %1748 ], [ %1765, %1762 ]
  %1772 = add nuw nsw i64 %1746, 1
  %1773 = add i64 %1746, 1
  %1774 = icmp ult i64 %1773, 16
  br i1 %1774, label %1864, label %1775

1775:                                             ; preds = %1770
  %1776 = add i64 %1746, 1
  %1777 = getelementptr i16, i16* %1771, i64 %1776
  %1778 = getelementptr i16, i16* %1744, i64 %1776
  %1779 = icmp ult i16* %1771, %1778
  %1780 = icmp ult i16* %1744, %1777
  %1781 = and i1 %1779, %1780
  br i1 %1781, label %1864, label %1782

1782:                                             ; preds = %1775
  %1783 = and i64 %1773, -16
  %1784 = sub i64 %1772, %1783
  %1785 = getelementptr i16, i16* %1744, i64 %1783
  %1786 = getelementptr i16, i16* %1771, i64 %1783
  %1787 = add i64 %1783, -16
  %1788 = lshr exact i64 %1787, 4
  %1789 = add nuw nsw i64 %1788, 1
  %1790 = and i64 %1789, 3
  %1791 = icmp ult i64 %1787, 48
  br i1 %1791, label %1843, label %1792

1792:                                             ; preds = %1782
  %1793 = sub nsw i64 %1789, %1790
  br label %1794

1794:                                             ; preds = %1794, %1792
  %1795 = phi i64 [ 0, %1792 ], [ %1840, %1794 ]
  %1796 = phi i64 [ %1793, %1792 ], [ %1841, %1794 ]
  %1797 = getelementptr i16, i16* %1744, i64 %1795
  %1798 = getelementptr i16, i16* %1771, i64 %1795
  %1799 = bitcast i16* %1797 to <8 x i16>*
  %1800 = load <8 x i16>, <8 x i16>* %1799, align 2, !alias.scope !89
  %1801 = getelementptr i16, i16* %1797, i64 8
  %1802 = bitcast i16* %1801 to <8 x i16>*
  %1803 = load <8 x i16>, <8 x i16>* %1802, align 2, !alias.scope !89
  %1804 = bitcast i16* %1798 to <8 x i16>*
  store <8 x i16> %1800, <8 x i16>* %1804, align 2, !alias.scope !92, !noalias !89
  %1805 = getelementptr i16, i16* %1798, i64 8
  %1806 = bitcast i16* %1805 to <8 x i16>*
  store <8 x i16> %1803, <8 x i16>* %1806, align 2, !alias.scope !92, !noalias !89
  %1807 = or i64 %1795, 16
  %1808 = getelementptr i16, i16* %1744, i64 %1807
  %1809 = getelementptr i16, i16* %1771, i64 %1807
  %1810 = bitcast i16* %1808 to <8 x i16>*
  %1811 = load <8 x i16>, <8 x i16>* %1810, align 2, !alias.scope !89
  %1812 = getelementptr i16, i16* %1808, i64 8
  %1813 = bitcast i16* %1812 to <8 x i16>*
  %1814 = load <8 x i16>, <8 x i16>* %1813, align 2, !alias.scope !89
  %1815 = bitcast i16* %1809 to <8 x i16>*
  store <8 x i16> %1811, <8 x i16>* %1815, align 2, !alias.scope !92, !noalias !89
  %1816 = getelementptr i16, i16* %1809, i64 8
  %1817 = bitcast i16* %1816 to <8 x i16>*
  store <8 x i16> %1814, <8 x i16>* %1817, align 2, !alias.scope !92, !noalias !89
  %1818 = or i64 %1795, 32
  %1819 = getelementptr i16, i16* %1744, i64 %1818
  %1820 = getelementptr i16, i16* %1771, i64 %1818
  %1821 = bitcast i16* %1819 to <8 x i16>*
  %1822 = load <8 x i16>, <8 x i16>* %1821, align 2, !alias.scope !89
  %1823 = getelementptr i16, i16* %1819, i64 8
  %1824 = bitcast i16* %1823 to <8 x i16>*
  %1825 = load <8 x i16>, <8 x i16>* %1824, align 2, !alias.scope !89
  %1826 = bitcast i16* %1820 to <8 x i16>*
  store <8 x i16> %1822, <8 x i16>* %1826, align 2, !alias.scope !92, !noalias !89
  %1827 = getelementptr i16, i16* %1820, i64 8
  %1828 = bitcast i16* %1827 to <8 x i16>*
  store <8 x i16> %1825, <8 x i16>* %1828, align 2, !alias.scope !92, !noalias !89
  %1829 = or i64 %1795, 48
  %1830 = getelementptr i16, i16* %1744, i64 %1829
  %1831 = getelementptr i16, i16* %1771, i64 %1829
  %1832 = bitcast i16* %1830 to <8 x i16>*
  %1833 = load <8 x i16>, <8 x i16>* %1832, align 2, !alias.scope !89
  %1834 = getelementptr i16, i16* %1830, i64 8
  %1835 = bitcast i16* %1834 to <8 x i16>*
  %1836 = load <8 x i16>, <8 x i16>* %1835, align 2, !alias.scope !89
  %1837 = bitcast i16* %1831 to <8 x i16>*
  store <8 x i16> %1833, <8 x i16>* %1837, align 2, !alias.scope !92, !noalias !89
  %1838 = getelementptr i16, i16* %1831, i64 8
  %1839 = bitcast i16* %1838 to <8 x i16>*
  store <8 x i16> %1836, <8 x i16>* %1839, align 2, !alias.scope !92, !noalias !89
  %1840 = add i64 %1795, 64
  %1841 = add i64 %1796, -4
  %1842 = icmp eq i64 %1841, 0
  br i1 %1842, label %1843, label %1794, !llvm.loop !94

1843:                                             ; preds = %1794, %1782
  %1844 = phi i64 [ 0, %1782 ], [ %1840, %1794 ]
  %1845 = icmp eq i64 %1790, 0
  br i1 %1845, label %1862, label %1846

1846:                                             ; preds = %1843, %1846
  %1847 = phi i64 [ %1859, %1846 ], [ %1844, %1843 ]
  %1848 = phi i64 [ %1860, %1846 ], [ %1790, %1843 ]
  %1849 = getelementptr i16, i16* %1744, i64 %1847
  %1850 = getelementptr i16, i16* %1771, i64 %1847
  %1851 = bitcast i16* %1849 to <8 x i16>*
  %1852 = load <8 x i16>, <8 x i16>* %1851, align 2, !alias.scope !89
  %1853 = getelementptr i16, i16* %1849, i64 8
  %1854 = bitcast i16* %1853 to <8 x i16>*
  %1855 = load <8 x i16>, <8 x i16>* %1854, align 2, !alias.scope !89
  %1856 = bitcast i16* %1850 to <8 x i16>*
  store <8 x i16> %1852, <8 x i16>* %1856, align 2, !alias.scope !92, !noalias !89
  %1857 = getelementptr i16, i16* %1850, i64 8
  %1858 = bitcast i16* %1857 to <8 x i16>*
  store <8 x i16> %1855, <8 x i16>* %1858, align 2, !alias.scope !92, !noalias !89
  %1859 = add i64 %1847, 16
  %1860 = add i64 %1848, -1
  %1861 = icmp eq i64 %1860, 0
  br i1 %1861, label %1862, label %1846, !llvm.loop !95

1862:                                             ; preds = %1846, %1843
  %1863 = icmp eq i64 %1773, %1783
  br i1 %1863, label %1917, label %1864

1864:                                             ; preds = %1862, %1775, %1770
  %1865 = phi i64 [ %1772, %1775 ], [ %1772, %1770 ], [ %1784, %1862 ]
  %1866 = phi i16* [ %1744, %1775 ], [ %1744, %1770 ], [ %1785, %1862 ]
  %1867 = phi i16* [ %1771, %1775 ], [ %1771, %1770 ], [ %1786, %1862 ]
  %1868 = add i64 %1865, -1
  %1869 = and i64 %1865, 7
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1882, label %1871

1871:                                             ; preds = %1864, %1871
  %1872 = phi i64 [ %1877, %1871 ], [ %1865, %1864 ]
  %1873 = phi i16* [ %1879, %1871 ], [ %1866, %1864 ]
  %1874 = phi i16* [ %1878, %1871 ], [ %1867, %1864 ]
  %1875 = phi i64 [ %1880, %1871 ], [ %1869, %1864 ]
  %1876 = load i16, i16* %1873, align 2
  store i16 %1876, i16* %1874, align 2
  %1877 = add i64 %1872, -1
  %1878 = getelementptr inbounds i16, i16* %1874, i64 1
  %1879 = getelementptr inbounds i16, i16* %1873, i64 1
  %1880 = add i64 %1875, -1
  %1881 = icmp eq i64 %1880, 0
  br i1 %1881, label %1882, label %1871, !llvm.loop !96

1882:                                             ; preds = %1871, %1864
  %1883 = phi i64 [ %1865, %1864 ], [ %1877, %1871 ]
  %1884 = phi i16* [ %1866, %1864 ], [ %1879, %1871 ]
  %1885 = phi i16* [ %1867, %1864 ], [ %1878, %1871 ]
  %1886 = icmp ult i64 %1868, 7
  br i1 %1886, label %1917, label %1887

1887:                                             ; preds = %1882, %1887
  %1888 = phi i64 [ %1913, %1887 ], [ %1883, %1882 ]
  %1889 = phi i16* [ %1915, %1887 ], [ %1884, %1882 ]
  %1890 = phi i16* [ %1914, %1887 ], [ %1885, %1882 ]
  %1891 = load i16, i16* %1889, align 2
  store i16 %1891, i16* %1890, align 2
  %1892 = getelementptr inbounds i16, i16* %1890, i64 1
  %1893 = getelementptr inbounds i16, i16* %1889, i64 1
  %1894 = load i16, i16* %1893, align 2
  store i16 %1894, i16* %1892, align 2
  %1895 = getelementptr inbounds i16, i16* %1890, i64 2
  %1896 = getelementptr inbounds i16, i16* %1889, i64 2
  %1897 = load i16, i16* %1896, align 2
  store i16 %1897, i16* %1895, align 2
  %1898 = getelementptr inbounds i16, i16* %1890, i64 3
  %1899 = getelementptr inbounds i16, i16* %1889, i64 3
  %1900 = load i16, i16* %1899, align 2
  store i16 %1900, i16* %1898, align 2
  %1901 = getelementptr inbounds i16, i16* %1890, i64 4
  %1902 = getelementptr inbounds i16, i16* %1889, i64 4
  %1903 = load i16, i16* %1902, align 2
  store i16 %1903, i16* %1901, align 2
  %1904 = getelementptr inbounds i16, i16* %1890, i64 5
  %1905 = getelementptr inbounds i16, i16* %1889, i64 5
  %1906 = load i16, i16* %1905, align 2
  store i16 %1906, i16* %1904, align 2
  %1907 = getelementptr inbounds i16, i16* %1890, i64 6
  %1908 = getelementptr inbounds i16, i16* %1889, i64 6
  %1909 = load i16, i16* %1908, align 2
  store i16 %1909, i16* %1907, align 2
  %1910 = getelementptr inbounds i16, i16* %1890, i64 7
  %1911 = getelementptr inbounds i16, i16* %1889, i64 7
  %1912 = load i16, i16* %1911, align 2
  store i16 %1912, i16* %1910, align 2
  %1913 = add i64 %1888, -8
  %1914 = getelementptr inbounds i16, i16* %1890, i64 8
  %1915 = getelementptr inbounds i16, i16* %1889, i64 8
  %1916 = icmp eq i64 %1913, 0
  br i1 %1916, label %1917, label %1887, !llvm.loop !97

1917:                                             ; preds = %1882, %1887, %1862, %1739, %1731
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1698) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1697) #12
  br label %3092

1918:                                             ; preds = %73
  %1919 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 7
  %1920 = load i8, i8* %1919, align 8, !range !85
  %1921 = icmp eq i8 %1920, 0
  %1922 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %1923 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %1922, align 8
  br i1 %1921, label %1924, label %2108

1924:                                             ; preds = %1918
  %1925 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 6
  %1926 = bitcast %"class.std::__1::basic_string.64"* %1925 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1927 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1926, i64 0, i32 1, i32 1
  %1928 = load i8, i8* %1927, align 1
  %1929 = icmp slt i8 %1928, 0
  br i1 %1929, label %1933, label %1930

1930:                                             ; preds = %1924
  %1931 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %1932 = bitcast %"class.std::__1::basic_string.64"* %1925 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1931, i8* align 8 %1932, i64 24, i1 false) #12
  br label %3092

1933:                                             ; preds = %1924
  %1934 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %1925, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1935 = load i16*, i16** %1934, align 8
  %1936 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1937 = load i64, i64* %1936, align 8
  %1938 = icmp ult i64 %1937, 11
  br i1 %1938, label %1939, label %1944

1939:                                             ; preds = %1933
  %1940 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %1941 = trunc i64 %1937 to i8
  %1942 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1943 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1942, i64 0, i32 1, i32 1
  store i8 %1941, i8* %1943, align 1
  br label %1961

1944:                                             ; preds = %1933
  %1945 = icmp ugt i64 %1937, 9223372036854775791
  br i1 %1945, label %1946, label %1948

1946:                                             ; preds = %1944
  %1947 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1947) #14
  unreachable

1948:                                             ; preds = %1944
  %1949 = add nuw nsw i64 %1937, 8
  %1950 = and i64 %1949, -8
  %1951 = icmp slt i64 %1950, 0
  br i1 %1951, label %1952, label %1953

1952:                                             ; preds = %1948
  tail call void @abort() #14
  unreachable

1953:                                             ; preds = %1948
  %1954 = shl i64 %1950, 1
  %1955 = tail call i8* @_Znwm(i64 %1954) #13
  %1956 = bitcast i8* %1955 to i16*
  %1957 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %1955, i8** %1957, align 8
  %1958 = or i64 %1950, -9223372036854775808
  %1959 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1958, i64* %1959, align 8
  %1960 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1937, i64* %1960, align 8
  br label %1961

1961:                                             ; preds = %1953, %1939
  %1962 = phi i16* [ %1940, %1939 ], [ %1956, %1953 ]
  %1963 = add nuw nsw i64 %1937, 1
  %1964 = add i64 %1937, 1
  %1965 = icmp ult i64 %1964, 16
  br i1 %1965, label %2055, label %1966

1966:                                             ; preds = %1961
  %1967 = add i64 %1937, 1
  %1968 = getelementptr i16, i16* %1962, i64 %1967
  %1969 = getelementptr i16, i16* %1935, i64 %1967
  %1970 = icmp ult i16* %1962, %1969
  %1971 = icmp ult i16* %1935, %1968
  %1972 = and i1 %1970, %1971
  br i1 %1972, label %2055, label %1973

1973:                                             ; preds = %1966
  %1974 = and i64 %1964, -16
  %1975 = sub i64 %1963, %1974
  %1976 = getelementptr i16, i16* %1935, i64 %1974
  %1977 = getelementptr i16, i16* %1962, i64 %1974
  %1978 = add i64 %1974, -16
  %1979 = lshr exact i64 %1978, 4
  %1980 = add nuw nsw i64 %1979, 1
  %1981 = and i64 %1980, 3
  %1982 = icmp ult i64 %1978, 48
  br i1 %1982, label %2034, label %1983

1983:                                             ; preds = %1973
  %1984 = sub nsw i64 %1980, %1981
  br label %1985

1985:                                             ; preds = %1985, %1983
  %1986 = phi i64 [ 0, %1983 ], [ %2031, %1985 ]
  %1987 = phi i64 [ %1984, %1983 ], [ %2032, %1985 ]
  %1988 = getelementptr i16, i16* %1935, i64 %1986
  %1989 = getelementptr i16, i16* %1962, i64 %1986
  %1990 = bitcast i16* %1988 to <8 x i16>*
  %1991 = load <8 x i16>, <8 x i16>* %1990, align 2, !alias.scope !98
  %1992 = getelementptr i16, i16* %1988, i64 8
  %1993 = bitcast i16* %1992 to <8 x i16>*
  %1994 = load <8 x i16>, <8 x i16>* %1993, align 2, !alias.scope !98
  %1995 = bitcast i16* %1989 to <8 x i16>*
  store <8 x i16> %1991, <8 x i16>* %1995, align 2, !alias.scope !101, !noalias !98
  %1996 = getelementptr i16, i16* %1989, i64 8
  %1997 = bitcast i16* %1996 to <8 x i16>*
  store <8 x i16> %1994, <8 x i16>* %1997, align 2, !alias.scope !101, !noalias !98
  %1998 = or i64 %1986, 16
  %1999 = getelementptr i16, i16* %1935, i64 %1998
  %2000 = getelementptr i16, i16* %1962, i64 %1998
  %2001 = bitcast i16* %1999 to <8 x i16>*
  %2002 = load <8 x i16>, <8 x i16>* %2001, align 2, !alias.scope !98
  %2003 = getelementptr i16, i16* %1999, i64 8
  %2004 = bitcast i16* %2003 to <8 x i16>*
  %2005 = load <8 x i16>, <8 x i16>* %2004, align 2, !alias.scope !98
  %2006 = bitcast i16* %2000 to <8 x i16>*
  store <8 x i16> %2002, <8 x i16>* %2006, align 2, !alias.scope !101, !noalias !98
  %2007 = getelementptr i16, i16* %2000, i64 8
  %2008 = bitcast i16* %2007 to <8 x i16>*
  store <8 x i16> %2005, <8 x i16>* %2008, align 2, !alias.scope !101, !noalias !98
  %2009 = or i64 %1986, 32
  %2010 = getelementptr i16, i16* %1935, i64 %2009
  %2011 = getelementptr i16, i16* %1962, i64 %2009
  %2012 = bitcast i16* %2010 to <8 x i16>*
  %2013 = load <8 x i16>, <8 x i16>* %2012, align 2, !alias.scope !98
  %2014 = getelementptr i16, i16* %2010, i64 8
  %2015 = bitcast i16* %2014 to <8 x i16>*
  %2016 = load <8 x i16>, <8 x i16>* %2015, align 2, !alias.scope !98
  %2017 = bitcast i16* %2011 to <8 x i16>*
  store <8 x i16> %2013, <8 x i16>* %2017, align 2, !alias.scope !101, !noalias !98
  %2018 = getelementptr i16, i16* %2011, i64 8
  %2019 = bitcast i16* %2018 to <8 x i16>*
  store <8 x i16> %2016, <8 x i16>* %2019, align 2, !alias.scope !101, !noalias !98
  %2020 = or i64 %1986, 48
  %2021 = getelementptr i16, i16* %1935, i64 %2020
  %2022 = getelementptr i16, i16* %1962, i64 %2020
  %2023 = bitcast i16* %2021 to <8 x i16>*
  %2024 = load <8 x i16>, <8 x i16>* %2023, align 2, !alias.scope !98
  %2025 = getelementptr i16, i16* %2021, i64 8
  %2026 = bitcast i16* %2025 to <8 x i16>*
  %2027 = load <8 x i16>, <8 x i16>* %2026, align 2, !alias.scope !98
  %2028 = bitcast i16* %2022 to <8 x i16>*
  store <8 x i16> %2024, <8 x i16>* %2028, align 2, !alias.scope !101, !noalias !98
  %2029 = getelementptr i16, i16* %2022, i64 8
  %2030 = bitcast i16* %2029 to <8 x i16>*
  store <8 x i16> %2027, <8 x i16>* %2030, align 2, !alias.scope !101, !noalias !98
  %2031 = add i64 %1986, 64
  %2032 = add i64 %1987, -4
  %2033 = icmp eq i64 %2032, 0
  br i1 %2033, label %2034, label %1985, !llvm.loop !103

2034:                                             ; preds = %1985, %1973
  %2035 = phi i64 [ 0, %1973 ], [ %2031, %1985 ]
  %2036 = icmp eq i64 %1981, 0
  br i1 %2036, label %2053, label %2037

2037:                                             ; preds = %2034, %2037
  %2038 = phi i64 [ %2050, %2037 ], [ %2035, %2034 ]
  %2039 = phi i64 [ %2051, %2037 ], [ %1981, %2034 ]
  %2040 = getelementptr i16, i16* %1935, i64 %2038
  %2041 = getelementptr i16, i16* %1962, i64 %2038
  %2042 = bitcast i16* %2040 to <8 x i16>*
  %2043 = load <8 x i16>, <8 x i16>* %2042, align 2, !alias.scope !98
  %2044 = getelementptr i16, i16* %2040, i64 8
  %2045 = bitcast i16* %2044 to <8 x i16>*
  %2046 = load <8 x i16>, <8 x i16>* %2045, align 2, !alias.scope !98
  %2047 = bitcast i16* %2041 to <8 x i16>*
  store <8 x i16> %2043, <8 x i16>* %2047, align 2, !alias.scope !101, !noalias !98
  %2048 = getelementptr i16, i16* %2041, i64 8
  %2049 = bitcast i16* %2048 to <8 x i16>*
  store <8 x i16> %2046, <8 x i16>* %2049, align 2, !alias.scope !101, !noalias !98
  %2050 = add i64 %2038, 16
  %2051 = add i64 %2039, -1
  %2052 = icmp eq i64 %2051, 0
  br i1 %2052, label %2053, label %2037, !llvm.loop !104

2053:                                             ; preds = %2037, %2034
  %2054 = icmp eq i64 %1964, %1974
  br i1 %2054, label %3092, label %2055

2055:                                             ; preds = %2053, %1966, %1961
  %2056 = phi i64 [ %1963, %1966 ], [ %1963, %1961 ], [ %1975, %2053 ]
  %2057 = phi i16* [ %1935, %1966 ], [ %1935, %1961 ], [ %1976, %2053 ]
  %2058 = phi i16* [ %1962, %1966 ], [ %1962, %1961 ], [ %1977, %2053 ]
  %2059 = add i64 %2056, -1
  %2060 = and i64 %2056, 7
  %2061 = icmp eq i64 %2060, 0
  br i1 %2061, label %2073, label %2062

2062:                                             ; preds = %2055, %2062
  %2063 = phi i64 [ %2068, %2062 ], [ %2056, %2055 ]
  %2064 = phi i16* [ %2070, %2062 ], [ %2057, %2055 ]
  %2065 = phi i16* [ %2069, %2062 ], [ %2058, %2055 ]
  %2066 = phi i64 [ %2071, %2062 ], [ %2060, %2055 ]
  %2067 = load i16, i16* %2064, align 2
  store i16 %2067, i16* %2065, align 2
  %2068 = add i64 %2063, -1
  %2069 = getelementptr inbounds i16, i16* %2065, i64 1
  %2070 = getelementptr inbounds i16, i16* %2064, i64 1
  %2071 = add i64 %2066, -1
  %2072 = icmp eq i64 %2071, 0
  br i1 %2072, label %2073, label %2062, !llvm.loop !105

2073:                                             ; preds = %2062, %2055
  %2074 = phi i64 [ %2056, %2055 ], [ %2068, %2062 ]
  %2075 = phi i16* [ %2057, %2055 ], [ %2070, %2062 ]
  %2076 = phi i16* [ %2058, %2055 ], [ %2069, %2062 ]
  %2077 = icmp ult i64 %2059, 7
  br i1 %2077, label %3092, label %2078

2078:                                             ; preds = %2073, %2078
  %2079 = phi i64 [ %2104, %2078 ], [ %2074, %2073 ]
  %2080 = phi i16* [ %2106, %2078 ], [ %2075, %2073 ]
  %2081 = phi i16* [ %2105, %2078 ], [ %2076, %2073 ]
  %2082 = load i16, i16* %2080, align 2
  store i16 %2082, i16* %2081, align 2
  %2083 = getelementptr inbounds i16, i16* %2081, i64 1
  %2084 = getelementptr inbounds i16, i16* %2080, i64 1
  %2085 = load i16, i16* %2084, align 2
  store i16 %2085, i16* %2083, align 2
  %2086 = getelementptr inbounds i16, i16* %2081, i64 2
  %2087 = getelementptr inbounds i16, i16* %2080, i64 2
  %2088 = load i16, i16* %2087, align 2
  store i16 %2088, i16* %2086, align 2
  %2089 = getelementptr inbounds i16, i16* %2081, i64 3
  %2090 = getelementptr inbounds i16, i16* %2080, i64 3
  %2091 = load i16, i16* %2090, align 2
  store i16 %2091, i16* %2089, align 2
  %2092 = getelementptr inbounds i16, i16* %2081, i64 4
  %2093 = getelementptr inbounds i16, i16* %2080, i64 4
  %2094 = load i16, i16* %2093, align 2
  store i16 %2094, i16* %2092, align 2
  %2095 = getelementptr inbounds i16, i16* %2081, i64 5
  %2096 = getelementptr inbounds i16, i16* %2080, i64 5
  %2097 = load i16, i16* %2096, align 2
  store i16 %2097, i16* %2095, align 2
  %2098 = getelementptr inbounds i16, i16* %2081, i64 6
  %2099 = getelementptr inbounds i16, i16* %2080, i64 6
  %2100 = load i16, i16* %2099, align 2
  store i16 %2100, i16* %2098, align 2
  %2101 = getelementptr inbounds i16, i16* %2081, i64 7
  %2102 = getelementptr inbounds i16, i16* %2080, i64 7
  %2103 = load i16, i16* %2102, align 2
  store i16 %2103, i16* %2101, align 2
  %2104 = add i64 %2079, -8
  %2105 = getelementptr inbounds i16, i16* %2081, i64 8
  %2106 = getelementptr inbounds i16, i16* %2080, i64 8
  %2107 = icmp eq i64 %2104, 0
  br i1 %2107, label %3092, label %2078, !llvm.loop !106

2108:                                             ; preds = %1918
  %2109 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %2110 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %2109, align 8
  %2111 = sext i32 %2 to i64
  %2112 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %2113 = load i64*, i64** %2112, align 8
  %2114 = getelementptr inbounds i64, i64* %2113, i64 %2111
  %2115 = load i64, i64* %2114, align 8
  %2116 = bitcast %"class.task_manager::TaskManagerInterface"* %2110 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %2117 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %2116, align 8
  %2118 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2117, i64 11
  %2119 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2118, align 8
  %2120 = tail call i32 %2119(%"class.task_manager::TaskManagerInterface"* %2110, i64 %2115) #12
  switch i32 %2120, label %2488 [
    i32 0, label %2121
    i32 -1, label %2304
  ]

2121:                                             ; preds = %2108
  %2122 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1923 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2122, i64 0, i32 1, i32 1
  %2124 = load i8, i8* %2123, align 1
  %2125 = icmp slt i8 %2124, 0
  br i1 %2125, label %2129, label %2126

2126:                                             ; preds = %2121
  %2127 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %2128 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1923 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2127, i8* align 8 %2128, i64 24, i1 false) #12
  br label %3092

2129:                                             ; preds = %2121
  %2130 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2131 = load i16*, i16** %2130, align 8
  %2132 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2133 = load i64, i64* %2132, align 8
  %2134 = icmp ult i64 %2133, 11
  br i1 %2134, label %2135, label %2140

2135:                                             ; preds = %2129
  %2136 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %2137 = trunc i64 %2133 to i8
  %2138 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2138, i64 0, i32 1, i32 1
  store i8 %2137, i8* %2139, align 1
  br label %2157

2140:                                             ; preds = %2129
  %2141 = icmp ugt i64 %2133, 9223372036854775791
  br i1 %2141, label %2142, label %2144

2142:                                             ; preds = %2140
  %2143 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2143) #14
  unreachable

2144:                                             ; preds = %2140
  %2145 = add nuw nsw i64 %2133, 8
  %2146 = and i64 %2145, -8
  %2147 = icmp slt i64 %2146, 0
  br i1 %2147, label %2148, label %2149

2148:                                             ; preds = %2144
  tail call void @abort() #14
  unreachable

2149:                                             ; preds = %2144
  %2150 = shl i64 %2146, 1
  %2151 = tail call i8* @_Znwm(i64 %2150) #13
  %2152 = bitcast i8* %2151 to i16*
  %2153 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %2151, i8** %2153, align 8
  %2154 = or i64 %2146, -9223372036854775808
  %2155 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2154, i64* %2155, align 8
  %2156 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2133, i64* %2156, align 8
  br label %2157

2157:                                             ; preds = %2149, %2135
  %2158 = phi i16* [ %2136, %2135 ], [ %2152, %2149 ]
  %2159 = add nuw nsw i64 %2133, 1
  %2160 = add i64 %2133, 1
  %2161 = icmp ult i64 %2160, 16
  br i1 %2161, label %2251, label %2162

2162:                                             ; preds = %2157
  %2163 = add i64 %2133, 1
  %2164 = getelementptr i16, i16* %2158, i64 %2163
  %2165 = getelementptr i16, i16* %2131, i64 %2163
  %2166 = icmp ult i16* %2158, %2165
  %2167 = icmp ult i16* %2131, %2164
  %2168 = and i1 %2166, %2167
  br i1 %2168, label %2251, label %2169

2169:                                             ; preds = %2162
  %2170 = and i64 %2160, -16
  %2171 = sub i64 %2159, %2170
  %2172 = getelementptr i16, i16* %2131, i64 %2170
  %2173 = getelementptr i16, i16* %2158, i64 %2170
  %2174 = add i64 %2170, -16
  %2175 = lshr exact i64 %2174, 4
  %2176 = add nuw nsw i64 %2175, 1
  %2177 = and i64 %2176, 3
  %2178 = icmp ult i64 %2174, 48
  br i1 %2178, label %2230, label %2179

2179:                                             ; preds = %2169
  %2180 = sub nsw i64 %2176, %2177
  br label %2181

2181:                                             ; preds = %2181, %2179
  %2182 = phi i64 [ 0, %2179 ], [ %2227, %2181 ]
  %2183 = phi i64 [ %2180, %2179 ], [ %2228, %2181 ]
  %2184 = getelementptr i16, i16* %2131, i64 %2182
  %2185 = getelementptr i16, i16* %2158, i64 %2182
  %2186 = bitcast i16* %2184 to <8 x i16>*
  %2187 = load <8 x i16>, <8 x i16>* %2186, align 2, !alias.scope !107
  %2188 = getelementptr i16, i16* %2184, i64 8
  %2189 = bitcast i16* %2188 to <8 x i16>*
  %2190 = load <8 x i16>, <8 x i16>* %2189, align 2, !alias.scope !107
  %2191 = bitcast i16* %2185 to <8 x i16>*
  store <8 x i16> %2187, <8 x i16>* %2191, align 2, !alias.scope !110, !noalias !107
  %2192 = getelementptr i16, i16* %2185, i64 8
  %2193 = bitcast i16* %2192 to <8 x i16>*
  store <8 x i16> %2190, <8 x i16>* %2193, align 2, !alias.scope !110, !noalias !107
  %2194 = or i64 %2182, 16
  %2195 = getelementptr i16, i16* %2131, i64 %2194
  %2196 = getelementptr i16, i16* %2158, i64 %2194
  %2197 = bitcast i16* %2195 to <8 x i16>*
  %2198 = load <8 x i16>, <8 x i16>* %2197, align 2, !alias.scope !107
  %2199 = getelementptr i16, i16* %2195, i64 8
  %2200 = bitcast i16* %2199 to <8 x i16>*
  %2201 = load <8 x i16>, <8 x i16>* %2200, align 2, !alias.scope !107
  %2202 = bitcast i16* %2196 to <8 x i16>*
  store <8 x i16> %2198, <8 x i16>* %2202, align 2, !alias.scope !110, !noalias !107
  %2203 = getelementptr i16, i16* %2196, i64 8
  %2204 = bitcast i16* %2203 to <8 x i16>*
  store <8 x i16> %2201, <8 x i16>* %2204, align 2, !alias.scope !110, !noalias !107
  %2205 = or i64 %2182, 32
  %2206 = getelementptr i16, i16* %2131, i64 %2205
  %2207 = getelementptr i16, i16* %2158, i64 %2205
  %2208 = bitcast i16* %2206 to <8 x i16>*
  %2209 = load <8 x i16>, <8 x i16>* %2208, align 2, !alias.scope !107
  %2210 = getelementptr i16, i16* %2206, i64 8
  %2211 = bitcast i16* %2210 to <8 x i16>*
  %2212 = load <8 x i16>, <8 x i16>* %2211, align 2, !alias.scope !107
  %2213 = bitcast i16* %2207 to <8 x i16>*
  store <8 x i16> %2209, <8 x i16>* %2213, align 2, !alias.scope !110, !noalias !107
  %2214 = getelementptr i16, i16* %2207, i64 8
  %2215 = bitcast i16* %2214 to <8 x i16>*
  store <8 x i16> %2212, <8 x i16>* %2215, align 2, !alias.scope !110, !noalias !107
  %2216 = or i64 %2182, 48
  %2217 = getelementptr i16, i16* %2131, i64 %2216
  %2218 = getelementptr i16, i16* %2158, i64 %2216
  %2219 = bitcast i16* %2217 to <8 x i16>*
  %2220 = load <8 x i16>, <8 x i16>* %2219, align 2, !alias.scope !107
  %2221 = getelementptr i16, i16* %2217, i64 8
  %2222 = bitcast i16* %2221 to <8 x i16>*
  %2223 = load <8 x i16>, <8 x i16>* %2222, align 2, !alias.scope !107
  %2224 = bitcast i16* %2218 to <8 x i16>*
  store <8 x i16> %2220, <8 x i16>* %2224, align 2, !alias.scope !110, !noalias !107
  %2225 = getelementptr i16, i16* %2218, i64 8
  %2226 = bitcast i16* %2225 to <8 x i16>*
  store <8 x i16> %2223, <8 x i16>* %2226, align 2, !alias.scope !110, !noalias !107
  %2227 = add i64 %2182, 64
  %2228 = add i64 %2183, -4
  %2229 = icmp eq i64 %2228, 0
  br i1 %2229, label %2230, label %2181, !llvm.loop !112

2230:                                             ; preds = %2181, %2169
  %2231 = phi i64 [ 0, %2169 ], [ %2227, %2181 ]
  %2232 = icmp eq i64 %2177, 0
  br i1 %2232, label %2249, label %2233

2233:                                             ; preds = %2230, %2233
  %2234 = phi i64 [ %2246, %2233 ], [ %2231, %2230 ]
  %2235 = phi i64 [ %2247, %2233 ], [ %2177, %2230 ]
  %2236 = getelementptr i16, i16* %2131, i64 %2234
  %2237 = getelementptr i16, i16* %2158, i64 %2234
  %2238 = bitcast i16* %2236 to <8 x i16>*
  %2239 = load <8 x i16>, <8 x i16>* %2238, align 2, !alias.scope !107
  %2240 = getelementptr i16, i16* %2236, i64 8
  %2241 = bitcast i16* %2240 to <8 x i16>*
  %2242 = load <8 x i16>, <8 x i16>* %2241, align 2, !alias.scope !107
  %2243 = bitcast i16* %2237 to <8 x i16>*
  store <8 x i16> %2239, <8 x i16>* %2243, align 2, !alias.scope !110, !noalias !107
  %2244 = getelementptr i16, i16* %2237, i64 8
  %2245 = bitcast i16* %2244 to <8 x i16>*
  store <8 x i16> %2242, <8 x i16>* %2245, align 2, !alias.scope !110, !noalias !107
  %2246 = add i64 %2234, 16
  %2247 = add i64 %2235, -1
  %2248 = icmp eq i64 %2247, 0
  br i1 %2248, label %2249, label %2233, !llvm.loop !113

2249:                                             ; preds = %2233, %2230
  %2250 = icmp eq i64 %2160, %2170
  br i1 %2250, label %3092, label %2251

2251:                                             ; preds = %2249, %2162, %2157
  %2252 = phi i64 [ %2159, %2162 ], [ %2159, %2157 ], [ %2171, %2249 ]
  %2253 = phi i16* [ %2131, %2162 ], [ %2131, %2157 ], [ %2172, %2249 ]
  %2254 = phi i16* [ %2158, %2162 ], [ %2158, %2157 ], [ %2173, %2249 ]
  %2255 = add i64 %2252, -1
  %2256 = and i64 %2252, 7
  %2257 = icmp eq i64 %2256, 0
  br i1 %2257, label %2269, label %2258

2258:                                             ; preds = %2251, %2258
  %2259 = phi i64 [ %2264, %2258 ], [ %2252, %2251 ]
  %2260 = phi i16* [ %2266, %2258 ], [ %2253, %2251 ]
  %2261 = phi i16* [ %2265, %2258 ], [ %2254, %2251 ]
  %2262 = phi i64 [ %2267, %2258 ], [ %2256, %2251 ]
  %2263 = load i16, i16* %2260, align 2
  store i16 %2263, i16* %2261, align 2
  %2264 = add i64 %2259, -1
  %2265 = getelementptr inbounds i16, i16* %2261, i64 1
  %2266 = getelementptr inbounds i16, i16* %2260, i64 1
  %2267 = add i64 %2262, -1
  %2268 = icmp eq i64 %2267, 0
  br i1 %2268, label %2269, label %2258, !llvm.loop !114

2269:                                             ; preds = %2258, %2251
  %2270 = phi i64 [ %2252, %2251 ], [ %2264, %2258 ]
  %2271 = phi i16* [ %2253, %2251 ], [ %2266, %2258 ]
  %2272 = phi i16* [ %2254, %2251 ], [ %2265, %2258 ]
  %2273 = icmp ult i64 %2255, 7
  br i1 %2273, label %3092, label %2274

2274:                                             ; preds = %2269, %2274
  %2275 = phi i64 [ %2300, %2274 ], [ %2270, %2269 ]
  %2276 = phi i16* [ %2302, %2274 ], [ %2271, %2269 ]
  %2277 = phi i16* [ %2301, %2274 ], [ %2272, %2269 ]
  %2278 = load i16, i16* %2276, align 2
  store i16 %2278, i16* %2277, align 2
  %2279 = getelementptr inbounds i16, i16* %2277, i64 1
  %2280 = getelementptr inbounds i16, i16* %2276, i64 1
  %2281 = load i16, i16* %2280, align 2
  store i16 %2281, i16* %2279, align 2
  %2282 = getelementptr inbounds i16, i16* %2277, i64 2
  %2283 = getelementptr inbounds i16, i16* %2276, i64 2
  %2284 = load i16, i16* %2283, align 2
  store i16 %2284, i16* %2282, align 2
  %2285 = getelementptr inbounds i16, i16* %2277, i64 3
  %2286 = getelementptr inbounds i16, i16* %2276, i64 3
  %2287 = load i16, i16* %2286, align 2
  store i16 %2287, i16* %2285, align 2
  %2288 = getelementptr inbounds i16, i16* %2277, i64 4
  %2289 = getelementptr inbounds i16, i16* %2276, i64 4
  %2290 = load i16, i16* %2289, align 2
  store i16 %2290, i16* %2288, align 2
  %2291 = getelementptr inbounds i16, i16* %2277, i64 5
  %2292 = getelementptr inbounds i16, i16* %2276, i64 5
  %2293 = load i16, i16* %2292, align 2
  store i16 %2293, i16* %2291, align 2
  %2294 = getelementptr inbounds i16, i16* %2277, i64 6
  %2295 = getelementptr inbounds i16, i16* %2276, i64 6
  %2296 = load i16, i16* %2295, align 2
  store i16 %2296, i16* %2294, align 2
  %2297 = getelementptr inbounds i16, i16* %2277, i64 7
  %2298 = getelementptr inbounds i16, i16* %2276, i64 7
  %2299 = load i16, i16* %2298, align 2
  store i16 %2299, i16* %2297, align 2
  %2300 = add i64 %2275, -8
  %2301 = getelementptr inbounds i16, i16* %2277, i64 8
  %2302 = getelementptr inbounds i16, i16* %2276, i64 8
  %2303 = icmp eq i64 %2300, 0
  br i1 %2303, label %3092, label %2274, !llvm.loop !115

2304:                                             ; preds = %2108
  %2305 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 5
  %2306 = bitcast %"class.std::__1::basic_string.64"* %2305 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2307 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2306, i64 0, i32 1, i32 1
  %2308 = load i8, i8* %2307, align 1
  %2309 = icmp slt i8 %2308, 0
  br i1 %2309, label %2313, label %2310

2310:                                             ; preds = %2304
  %2311 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %2312 = bitcast %"class.std::__1::basic_string.64"* %2305 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2311, i8* align 8 %2312, i64 24, i1 false) #12
  br label %3092

2313:                                             ; preds = %2304
  %2314 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %2305, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2315 = load i16*, i16** %2314, align 8
  %2316 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1923, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2317 = load i64, i64* %2316, align 8
  %2318 = icmp ult i64 %2317, 11
  br i1 %2318, label %2319, label %2324

2319:                                             ; preds = %2313
  %2320 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %2321 = trunc i64 %2317 to i8
  %2322 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2323 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2322, i64 0, i32 1, i32 1
  store i8 %2321, i8* %2323, align 1
  br label %2341

2324:                                             ; preds = %2313
  %2325 = icmp ugt i64 %2317, 9223372036854775791
  br i1 %2325, label %2326, label %2328

2326:                                             ; preds = %2324
  %2327 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2327) #14
  unreachable

2328:                                             ; preds = %2324
  %2329 = add nuw nsw i64 %2317, 8
  %2330 = and i64 %2329, -8
  %2331 = icmp slt i64 %2330, 0
  br i1 %2331, label %2332, label %2333

2332:                                             ; preds = %2328
  tail call void @abort() #14
  unreachable

2333:                                             ; preds = %2328
  %2334 = shl i64 %2330, 1
  %2335 = tail call i8* @_Znwm(i64 %2334) #13
  %2336 = bitcast i8* %2335 to i16*
  %2337 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %2335, i8** %2337, align 8
  %2338 = or i64 %2330, -9223372036854775808
  %2339 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2338, i64* %2339, align 8
  %2340 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2317, i64* %2340, align 8
  br label %2341

2341:                                             ; preds = %2333, %2319
  %2342 = phi i16* [ %2320, %2319 ], [ %2336, %2333 ]
  %2343 = add nuw nsw i64 %2317, 1
  %2344 = add i64 %2317, 1
  %2345 = icmp ult i64 %2344, 16
  br i1 %2345, label %2435, label %2346

2346:                                             ; preds = %2341
  %2347 = add i64 %2317, 1
  %2348 = getelementptr i16, i16* %2342, i64 %2347
  %2349 = getelementptr i16, i16* %2315, i64 %2347
  %2350 = icmp ult i16* %2342, %2349
  %2351 = icmp ult i16* %2315, %2348
  %2352 = and i1 %2350, %2351
  br i1 %2352, label %2435, label %2353

2353:                                             ; preds = %2346
  %2354 = and i64 %2344, -16
  %2355 = sub i64 %2343, %2354
  %2356 = getelementptr i16, i16* %2315, i64 %2354
  %2357 = getelementptr i16, i16* %2342, i64 %2354
  %2358 = add i64 %2354, -16
  %2359 = lshr exact i64 %2358, 4
  %2360 = add nuw nsw i64 %2359, 1
  %2361 = and i64 %2360, 3
  %2362 = icmp ult i64 %2358, 48
  br i1 %2362, label %2414, label %2363

2363:                                             ; preds = %2353
  %2364 = sub nsw i64 %2360, %2361
  br label %2365

2365:                                             ; preds = %2365, %2363
  %2366 = phi i64 [ 0, %2363 ], [ %2411, %2365 ]
  %2367 = phi i64 [ %2364, %2363 ], [ %2412, %2365 ]
  %2368 = getelementptr i16, i16* %2315, i64 %2366
  %2369 = getelementptr i16, i16* %2342, i64 %2366
  %2370 = bitcast i16* %2368 to <8 x i16>*
  %2371 = load <8 x i16>, <8 x i16>* %2370, align 2, !alias.scope !116
  %2372 = getelementptr i16, i16* %2368, i64 8
  %2373 = bitcast i16* %2372 to <8 x i16>*
  %2374 = load <8 x i16>, <8 x i16>* %2373, align 2, !alias.scope !116
  %2375 = bitcast i16* %2369 to <8 x i16>*
  store <8 x i16> %2371, <8 x i16>* %2375, align 2, !alias.scope !119, !noalias !116
  %2376 = getelementptr i16, i16* %2369, i64 8
  %2377 = bitcast i16* %2376 to <8 x i16>*
  store <8 x i16> %2374, <8 x i16>* %2377, align 2, !alias.scope !119, !noalias !116
  %2378 = or i64 %2366, 16
  %2379 = getelementptr i16, i16* %2315, i64 %2378
  %2380 = getelementptr i16, i16* %2342, i64 %2378
  %2381 = bitcast i16* %2379 to <8 x i16>*
  %2382 = load <8 x i16>, <8 x i16>* %2381, align 2, !alias.scope !116
  %2383 = getelementptr i16, i16* %2379, i64 8
  %2384 = bitcast i16* %2383 to <8 x i16>*
  %2385 = load <8 x i16>, <8 x i16>* %2384, align 2, !alias.scope !116
  %2386 = bitcast i16* %2380 to <8 x i16>*
  store <8 x i16> %2382, <8 x i16>* %2386, align 2, !alias.scope !119, !noalias !116
  %2387 = getelementptr i16, i16* %2380, i64 8
  %2388 = bitcast i16* %2387 to <8 x i16>*
  store <8 x i16> %2385, <8 x i16>* %2388, align 2, !alias.scope !119, !noalias !116
  %2389 = or i64 %2366, 32
  %2390 = getelementptr i16, i16* %2315, i64 %2389
  %2391 = getelementptr i16, i16* %2342, i64 %2389
  %2392 = bitcast i16* %2390 to <8 x i16>*
  %2393 = load <8 x i16>, <8 x i16>* %2392, align 2, !alias.scope !116
  %2394 = getelementptr i16, i16* %2390, i64 8
  %2395 = bitcast i16* %2394 to <8 x i16>*
  %2396 = load <8 x i16>, <8 x i16>* %2395, align 2, !alias.scope !116
  %2397 = bitcast i16* %2391 to <8 x i16>*
  store <8 x i16> %2393, <8 x i16>* %2397, align 2, !alias.scope !119, !noalias !116
  %2398 = getelementptr i16, i16* %2391, i64 8
  %2399 = bitcast i16* %2398 to <8 x i16>*
  store <8 x i16> %2396, <8 x i16>* %2399, align 2, !alias.scope !119, !noalias !116
  %2400 = or i64 %2366, 48
  %2401 = getelementptr i16, i16* %2315, i64 %2400
  %2402 = getelementptr i16, i16* %2342, i64 %2400
  %2403 = bitcast i16* %2401 to <8 x i16>*
  %2404 = load <8 x i16>, <8 x i16>* %2403, align 2, !alias.scope !116
  %2405 = getelementptr i16, i16* %2401, i64 8
  %2406 = bitcast i16* %2405 to <8 x i16>*
  %2407 = load <8 x i16>, <8 x i16>* %2406, align 2, !alias.scope !116
  %2408 = bitcast i16* %2402 to <8 x i16>*
  store <8 x i16> %2404, <8 x i16>* %2408, align 2, !alias.scope !119, !noalias !116
  %2409 = getelementptr i16, i16* %2402, i64 8
  %2410 = bitcast i16* %2409 to <8 x i16>*
  store <8 x i16> %2407, <8 x i16>* %2410, align 2, !alias.scope !119, !noalias !116
  %2411 = add i64 %2366, 64
  %2412 = add i64 %2367, -4
  %2413 = icmp eq i64 %2412, 0
  br i1 %2413, label %2414, label %2365, !llvm.loop !121

2414:                                             ; preds = %2365, %2353
  %2415 = phi i64 [ 0, %2353 ], [ %2411, %2365 ]
  %2416 = icmp eq i64 %2361, 0
  br i1 %2416, label %2433, label %2417

2417:                                             ; preds = %2414, %2417
  %2418 = phi i64 [ %2430, %2417 ], [ %2415, %2414 ]
  %2419 = phi i64 [ %2431, %2417 ], [ %2361, %2414 ]
  %2420 = getelementptr i16, i16* %2315, i64 %2418
  %2421 = getelementptr i16, i16* %2342, i64 %2418
  %2422 = bitcast i16* %2420 to <8 x i16>*
  %2423 = load <8 x i16>, <8 x i16>* %2422, align 2, !alias.scope !116
  %2424 = getelementptr i16, i16* %2420, i64 8
  %2425 = bitcast i16* %2424 to <8 x i16>*
  %2426 = load <8 x i16>, <8 x i16>* %2425, align 2, !alias.scope !116
  %2427 = bitcast i16* %2421 to <8 x i16>*
  store <8 x i16> %2423, <8 x i16>* %2427, align 2, !alias.scope !119, !noalias !116
  %2428 = getelementptr i16, i16* %2421, i64 8
  %2429 = bitcast i16* %2428 to <8 x i16>*
  store <8 x i16> %2426, <8 x i16>* %2429, align 2, !alias.scope !119, !noalias !116
  %2430 = add i64 %2418, 16
  %2431 = add i64 %2419, -1
  %2432 = icmp eq i64 %2431, 0
  br i1 %2432, label %2433, label %2417, !llvm.loop !122

2433:                                             ; preds = %2417, %2414
  %2434 = icmp eq i64 %2344, %2354
  br i1 %2434, label %3092, label %2435

2435:                                             ; preds = %2433, %2346, %2341
  %2436 = phi i64 [ %2343, %2346 ], [ %2343, %2341 ], [ %2355, %2433 ]
  %2437 = phi i16* [ %2315, %2346 ], [ %2315, %2341 ], [ %2356, %2433 ]
  %2438 = phi i16* [ %2342, %2346 ], [ %2342, %2341 ], [ %2357, %2433 ]
  %2439 = add i64 %2436, -1
  %2440 = and i64 %2436, 7
  %2441 = icmp eq i64 %2440, 0
  br i1 %2441, label %2453, label %2442

2442:                                             ; preds = %2435, %2442
  %2443 = phi i64 [ %2448, %2442 ], [ %2436, %2435 ]
  %2444 = phi i16* [ %2450, %2442 ], [ %2437, %2435 ]
  %2445 = phi i16* [ %2449, %2442 ], [ %2438, %2435 ]
  %2446 = phi i64 [ %2451, %2442 ], [ %2440, %2435 ]
  %2447 = load i16, i16* %2444, align 2
  store i16 %2447, i16* %2445, align 2
  %2448 = add i64 %2443, -1
  %2449 = getelementptr inbounds i16, i16* %2445, i64 1
  %2450 = getelementptr inbounds i16, i16* %2444, i64 1
  %2451 = add i64 %2446, -1
  %2452 = icmp eq i64 %2451, 0
  br i1 %2452, label %2453, label %2442, !llvm.loop !123

2453:                                             ; preds = %2442, %2435
  %2454 = phi i64 [ %2436, %2435 ], [ %2448, %2442 ]
  %2455 = phi i16* [ %2437, %2435 ], [ %2450, %2442 ]
  %2456 = phi i16* [ %2438, %2435 ], [ %2449, %2442 ]
  %2457 = icmp ult i64 %2439, 7
  br i1 %2457, label %3092, label %2458

2458:                                             ; preds = %2453, %2458
  %2459 = phi i64 [ %2484, %2458 ], [ %2454, %2453 ]
  %2460 = phi i16* [ %2486, %2458 ], [ %2455, %2453 ]
  %2461 = phi i16* [ %2485, %2458 ], [ %2456, %2453 ]
  %2462 = load i16, i16* %2460, align 2
  store i16 %2462, i16* %2461, align 2
  %2463 = getelementptr inbounds i16, i16* %2461, i64 1
  %2464 = getelementptr inbounds i16, i16* %2460, i64 1
  %2465 = load i16, i16* %2464, align 2
  store i16 %2465, i16* %2463, align 2
  %2466 = getelementptr inbounds i16, i16* %2461, i64 2
  %2467 = getelementptr inbounds i16, i16* %2460, i64 2
  %2468 = load i16, i16* %2467, align 2
  store i16 %2468, i16* %2466, align 2
  %2469 = getelementptr inbounds i16, i16* %2461, i64 3
  %2470 = getelementptr inbounds i16, i16* %2460, i64 3
  %2471 = load i16, i16* %2470, align 2
  store i16 %2471, i16* %2469, align 2
  %2472 = getelementptr inbounds i16, i16* %2461, i64 4
  %2473 = getelementptr inbounds i16, i16* %2460, i64 4
  %2474 = load i16, i16* %2473, align 2
  store i16 %2474, i16* %2472, align 2
  %2475 = getelementptr inbounds i16, i16* %2461, i64 5
  %2476 = getelementptr inbounds i16, i16* %2460, i64 5
  %2477 = load i16, i16* %2476, align 2
  store i16 %2477, i16* %2475, align 2
  %2478 = getelementptr inbounds i16, i16* %2461, i64 6
  %2479 = getelementptr inbounds i16, i16* %2460, i64 6
  %2480 = load i16, i16* %2479, align 2
  store i16 %2480, i16* %2478, align 2
  %2481 = getelementptr inbounds i16, i16* %2461, i64 7
  %2482 = getelementptr inbounds i16, i16* %2460, i64 7
  %2483 = load i16, i16* %2482, align 2
  store i16 %2483, i16* %2481, align 2
  %2484 = add i64 %2459, -8
  %2485 = getelementptr inbounds i16, i16* %2461, i64 8
  %2486 = getelementptr inbounds i16, i16* %2460, i64 8
  %2487 = icmp eq i64 %2484, 0
  br i1 %2487, label %3092, label %2458, !llvm.loop !124

2488:                                             ; preds = %2108
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.64"* sret %0, i32 %2120) #12
  br label %3092

2489:                                             ; preds = %73
  %2490 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %2491 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %2490, align 8
  %2492 = sext i32 %2 to i64
  %2493 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %2494 = load i64*, i64** %2493, align 8
  %2495 = getelementptr inbounds i64, i64* %2494, i64 %2492
  %2496 = load i64, i64* %2495, align 8
  %2497 = bitcast %"class.task_manager::TaskManagerInterface"* %2491 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %2498 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %2497, align 8
  %2499 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %2498, i64 15
  %2500 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %2499, align 8
  %2501 = tail call zeroext i1 %2500(%"class.task_manager::TaskManagerInterface"* %2491, i64 %2496) #12
  %2502 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %2503 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %2502, align 8
  %2504 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2503, i64 0, i32 2
  %2505 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2503, i64 0, i32 3
  %2506 = select i1 %2501, %"class.std::__1::basic_string.64"* %2504, %"class.std::__1::basic_string.64"* %2505
  %2507 = bitcast %"class.std::__1::basic_string.64"* %2506 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2508 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2507, i64 0, i32 1, i32 1
  %2509 = load i8, i8* %2508, align 1
  %2510 = icmp slt i8 %2509, 0
  br i1 %2510, label %2514, label %2511

2511:                                             ; preds = %2489
  %2512 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %2513 = bitcast %"class.std::__1::basic_string.64"* %2506 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2512, i8* align 8 %2513, i64 24, i1 false) #12
  br label %3092

2514:                                             ; preds = %2489
  %2515 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %2506, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2516 = load i16*, i16** %2515, align 8
  %2517 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %2506, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2518 = load i64, i64* %2517, align 8
  %2519 = icmp ult i64 %2518, 11
  br i1 %2519, label %2520, label %2525

2520:                                             ; preds = %2514
  %2521 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %2522 = trunc i64 %2518 to i8
  %2523 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2524 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2523, i64 0, i32 1, i32 1
  store i8 %2522, i8* %2524, align 1
  br label %2542

2525:                                             ; preds = %2514
  %2526 = icmp ugt i64 %2518, 9223372036854775791
  br i1 %2526, label %2527, label %2529

2527:                                             ; preds = %2525
  %2528 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2528) #14
  unreachable

2529:                                             ; preds = %2525
  %2530 = add nuw nsw i64 %2518, 8
  %2531 = and i64 %2530, -8
  %2532 = icmp slt i64 %2531, 0
  br i1 %2532, label %2533, label %2534

2533:                                             ; preds = %2529
  tail call void @abort() #14
  unreachable

2534:                                             ; preds = %2529
  %2535 = shl i64 %2531, 1
  %2536 = tail call i8* @_Znwm(i64 %2535) #13
  %2537 = bitcast i8* %2536 to i16*
  %2538 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %2536, i8** %2538, align 8
  %2539 = or i64 %2531, -9223372036854775808
  %2540 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2539, i64* %2540, align 8
  %2541 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2518, i64* %2541, align 8
  br label %2542

2542:                                             ; preds = %2534, %2520
  %2543 = phi i16* [ %2521, %2520 ], [ %2537, %2534 ]
  %2544 = add nuw nsw i64 %2518, 1
  %2545 = add i64 %2518, 1
  %2546 = icmp ult i64 %2545, 16
  br i1 %2546, label %2636, label %2547

2547:                                             ; preds = %2542
  %2548 = add i64 %2518, 1
  %2549 = getelementptr i16, i16* %2543, i64 %2548
  %2550 = getelementptr i16, i16* %2516, i64 %2548
  %2551 = icmp ult i16* %2543, %2550
  %2552 = icmp ult i16* %2516, %2549
  %2553 = and i1 %2551, %2552
  br i1 %2553, label %2636, label %2554

2554:                                             ; preds = %2547
  %2555 = and i64 %2545, -16
  %2556 = sub i64 %2544, %2555
  %2557 = getelementptr i16, i16* %2516, i64 %2555
  %2558 = getelementptr i16, i16* %2543, i64 %2555
  %2559 = add i64 %2555, -16
  %2560 = lshr exact i64 %2559, 4
  %2561 = add nuw nsw i64 %2560, 1
  %2562 = and i64 %2561, 3
  %2563 = icmp ult i64 %2559, 48
  br i1 %2563, label %2615, label %2564

2564:                                             ; preds = %2554
  %2565 = sub nsw i64 %2561, %2562
  br label %2566

2566:                                             ; preds = %2566, %2564
  %2567 = phi i64 [ 0, %2564 ], [ %2612, %2566 ]
  %2568 = phi i64 [ %2565, %2564 ], [ %2613, %2566 ]
  %2569 = getelementptr i16, i16* %2516, i64 %2567
  %2570 = getelementptr i16, i16* %2543, i64 %2567
  %2571 = bitcast i16* %2569 to <8 x i16>*
  %2572 = load <8 x i16>, <8 x i16>* %2571, align 2, !alias.scope !125
  %2573 = getelementptr i16, i16* %2569, i64 8
  %2574 = bitcast i16* %2573 to <8 x i16>*
  %2575 = load <8 x i16>, <8 x i16>* %2574, align 2, !alias.scope !125
  %2576 = bitcast i16* %2570 to <8 x i16>*
  store <8 x i16> %2572, <8 x i16>* %2576, align 2, !alias.scope !128, !noalias !125
  %2577 = getelementptr i16, i16* %2570, i64 8
  %2578 = bitcast i16* %2577 to <8 x i16>*
  store <8 x i16> %2575, <8 x i16>* %2578, align 2, !alias.scope !128, !noalias !125
  %2579 = or i64 %2567, 16
  %2580 = getelementptr i16, i16* %2516, i64 %2579
  %2581 = getelementptr i16, i16* %2543, i64 %2579
  %2582 = bitcast i16* %2580 to <8 x i16>*
  %2583 = load <8 x i16>, <8 x i16>* %2582, align 2, !alias.scope !125
  %2584 = getelementptr i16, i16* %2580, i64 8
  %2585 = bitcast i16* %2584 to <8 x i16>*
  %2586 = load <8 x i16>, <8 x i16>* %2585, align 2, !alias.scope !125
  %2587 = bitcast i16* %2581 to <8 x i16>*
  store <8 x i16> %2583, <8 x i16>* %2587, align 2, !alias.scope !128, !noalias !125
  %2588 = getelementptr i16, i16* %2581, i64 8
  %2589 = bitcast i16* %2588 to <8 x i16>*
  store <8 x i16> %2586, <8 x i16>* %2589, align 2, !alias.scope !128, !noalias !125
  %2590 = or i64 %2567, 32
  %2591 = getelementptr i16, i16* %2516, i64 %2590
  %2592 = getelementptr i16, i16* %2543, i64 %2590
  %2593 = bitcast i16* %2591 to <8 x i16>*
  %2594 = load <8 x i16>, <8 x i16>* %2593, align 2, !alias.scope !125
  %2595 = getelementptr i16, i16* %2591, i64 8
  %2596 = bitcast i16* %2595 to <8 x i16>*
  %2597 = load <8 x i16>, <8 x i16>* %2596, align 2, !alias.scope !125
  %2598 = bitcast i16* %2592 to <8 x i16>*
  store <8 x i16> %2594, <8 x i16>* %2598, align 2, !alias.scope !128, !noalias !125
  %2599 = getelementptr i16, i16* %2592, i64 8
  %2600 = bitcast i16* %2599 to <8 x i16>*
  store <8 x i16> %2597, <8 x i16>* %2600, align 2, !alias.scope !128, !noalias !125
  %2601 = or i64 %2567, 48
  %2602 = getelementptr i16, i16* %2516, i64 %2601
  %2603 = getelementptr i16, i16* %2543, i64 %2601
  %2604 = bitcast i16* %2602 to <8 x i16>*
  %2605 = load <8 x i16>, <8 x i16>* %2604, align 2, !alias.scope !125
  %2606 = getelementptr i16, i16* %2602, i64 8
  %2607 = bitcast i16* %2606 to <8 x i16>*
  %2608 = load <8 x i16>, <8 x i16>* %2607, align 2, !alias.scope !125
  %2609 = bitcast i16* %2603 to <8 x i16>*
  store <8 x i16> %2605, <8 x i16>* %2609, align 2, !alias.scope !128, !noalias !125
  %2610 = getelementptr i16, i16* %2603, i64 8
  %2611 = bitcast i16* %2610 to <8 x i16>*
  store <8 x i16> %2608, <8 x i16>* %2611, align 2, !alias.scope !128, !noalias !125
  %2612 = add i64 %2567, 64
  %2613 = add i64 %2568, -4
  %2614 = icmp eq i64 %2613, 0
  br i1 %2614, label %2615, label %2566, !llvm.loop !130

2615:                                             ; preds = %2566, %2554
  %2616 = phi i64 [ 0, %2554 ], [ %2612, %2566 ]
  %2617 = icmp eq i64 %2562, 0
  br i1 %2617, label %2634, label %2618

2618:                                             ; preds = %2615, %2618
  %2619 = phi i64 [ %2631, %2618 ], [ %2616, %2615 ]
  %2620 = phi i64 [ %2632, %2618 ], [ %2562, %2615 ]
  %2621 = getelementptr i16, i16* %2516, i64 %2619
  %2622 = getelementptr i16, i16* %2543, i64 %2619
  %2623 = bitcast i16* %2621 to <8 x i16>*
  %2624 = load <8 x i16>, <8 x i16>* %2623, align 2, !alias.scope !125
  %2625 = getelementptr i16, i16* %2621, i64 8
  %2626 = bitcast i16* %2625 to <8 x i16>*
  %2627 = load <8 x i16>, <8 x i16>* %2626, align 2, !alias.scope !125
  %2628 = bitcast i16* %2622 to <8 x i16>*
  store <8 x i16> %2624, <8 x i16>* %2628, align 2, !alias.scope !128, !noalias !125
  %2629 = getelementptr i16, i16* %2622, i64 8
  %2630 = bitcast i16* %2629 to <8 x i16>*
  store <8 x i16> %2627, <8 x i16>* %2630, align 2, !alias.scope !128, !noalias !125
  %2631 = add i64 %2619, 16
  %2632 = add i64 %2620, -1
  %2633 = icmp eq i64 %2632, 0
  br i1 %2633, label %2634, label %2618, !llvm.loop !131

2634:                                             ; preds = %2618, %2615
  %2635 = icmp eq i64 %2545, %2555
  br i1 %2635, label %3092, label %2636

2636:                                             ; preds = %2634, %2547, %2542
  %2637 = phi i64 [ %2544, %2547 ], [ %2544, %2542 ], [ %2556, %2634 ]
  %2638 = phi i16* [ %2516, %2547 ], [ %2516, %2542 ], [ %2557, %2634 ]
  %2639 = phi i16* [ %2543, %2547 ], [ %2543, %2542 ], [ %2558, %2634 ]
  %2640 = add i64 %2637, -1
  %2641 = and i64 %2637, 7
  %2642 = icmp eq i64 %2641, 0
  br i1 %2642, label %2654, label %2643

2643:                                             ; preds = %2636, %2643
  %2644 = phi i64 [ %2649, %2643 ], [ %2637, %2636 ]
  %2645 = phi i16* [ %2651, %2643 ], [ %2638, %2636 ]
  %2646 = phi i16* [ %2650, %2643 ], [ %2639, %2636 ]
  %2647 = phi i64 [ %2652, %2643 ], [ %2641, %2636 ]
  %2648 = load i16, i16* %2645, align 2
  store i16 %2648, i16* %2646, align 2
  %2649 = add i64 %2644, -1
  %2650 = getelementptr inbounds i16, i16* %2646, i64 1
  %2651 = getelementptr inbounds i16, i16* %2645, i64 1
  %2652 = add i64 %2647, -1
  %2653 = icmp eq i64 %2652, 0
  br i1 %2653, label %2654, label %2643, !llvm.loop !132

2654:                                             ; preds = %2643, %2636
  %2655 = phi i64 [ %2637, %2636 ], [ %2649, %2643 ]
  %2656 = phi i16* [ %2638, %2636 ], [ %2651, %2643 ]
  %2657 = phi i16* [ %2639, %2636 ], [ %2650, %2643 ]
  %2658 = icmp ult i64 %2640, 7
  br i1 %2658, label %3092, label %2659

2659:                                             ; preds = %2654, %2659
  %2660 = phi i64 [ %2685, %2659 ], [ %2655, %2654 ]
  %2661 = phi i16* [ %2687, %2659 ], [ %2656, %2654 ]
  %2662 = phi i16* [ %2686, %2659 ], [ %2657, %2654 ]
  %2663 = load i16, i16* %2661, align 2
  store i16 %2663, i16* %2662, align 2
  %2664 = getelementptr inbounds i16, i16* %2662, i64 1
  %2665 = getelementptr inbounds i16, i16* %2661, i64 1
  %2666 = load i16, i16* %2665, align 2
  store i16 %2666, i16* %2664, align 2
  %2667 = getelementptr inbounds i16, i16* %2662, i64 2
  %2668 = getelementptr inbounds i16, i16* %2661, i64 2
  %2669 = load i16, i16* %2668, align 2
  store i16 %2669, i16* %2667, align 2
  %2670 = getelementptr inbounds i16, i16* %2662, i64 3
  %2671 = getelementptr inbounds i16, i16* %2661, i64 3
  %2672 = load i16, i16* %2671, align 2
  store i16 %2672, i16* %2670, align 2
  %2673 = getelementptr inbounds i16, i16* %2662, i64 4
  %2674 = getelementptr inbounds i16, i16* %2661, i64 4
  %2675 = load i16, i16* %2674, align 2
  store i16 %2675, i16* %2673, align 2
  %2676 = getelementptr inbounds i16, i16* %2662, i64 5
  %2677 = getelementptr inbounds i16, i16* %2661, i64 5
  %2678 = load i16, i16* %2677, align 2
  store i16 %2678, i16* %2676, align 2
  %2679 = getelementptr inbounds i16, i16* %2662, i64 6
  %2680 = getelementptr inbounds i16, i16* %2661, i64 6
  %2681 = load i16, i16* %2680, align 2
  store i16 %2681, i16* %2679, align 2
  %2682 = getelementptr inbounds i16, i16* %2662, i64 7
  %2683 = getelementptr inbounds i16, i16* %2661, i64 7
  %2684 = load i16, i16* %2683, align 2
  store i16 %2684, i16* %2682, align 2
  %2685 = add i64 %2660, -8
  %2686 = getelementptr inbounds i16, i16* %2662, i64 8
  %2687 = getelementptr inbounds i16, i16* %2661, i64 8
  %2688 = icmp eq i64 %2685, 0
  br i1 %2688, label %3092, label %2659, !llvm.loop !133

2689:                                             ; preds = %73
  %2690 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %2691 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %2690, align 8
  %2692 = sext i32 %2 to i64
  %2693 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %2694 = load i64*, i64** %2693, align 8
  %2695 = getelementptr inbounds i64, i64* %2694, i64 %2692
  %2696 = load i64, i64* %2695, align 8
  %2697 = bitcast %"class.task_manager::TaskManagerInterface"* %2691 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %2698 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %2697, align 8
  %2699 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2698, i64 14
  %2700 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2699, align 8
  %2701 = tail call i32 %2700(%"class.task_manager::TaskManagerInterface"* %2691, i64 %2696) #12
  %2702 = icmp sgt i32 %2701, -1
  br i1 %2702, label %2703, label %2705

2703:                                             ; preds = %2689
  %2704 = sext i32 %2701 to i64
  tail call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.64"* sret %0, i64 %2704) #12
  br label %3092

2705:                                             ; preds = %2689
  %2706 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %2707 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %2706, align 8
  %2708 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %2707 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2709 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2708, i64 0, i32 1, i32 1
  %2710 = load i8, i8* %2709, align 1
  %2711 = icmp slt i8 %2710, 0
  br i1 %2711, label %2715, label %2712

2712:                                             ; preds = %2705
  %2713 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %2714 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %2707 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2713, i8* align 8 %2714, i64 24, i1 false) #12
  br label %3092

2715:                                             ; preds = %2705
  %2716 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2707, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2717 = load i16*, i16** %2716, align 8
  %2718 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2707, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2719 = load i64, i64* %2718, align 8
  %2720 = icmp ult i64 %2719, 11
  br i1 %2720, label %2721, label %2726

2721:                                             ; preds = %2715
  %2722 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %2723 = trunc i64 %2719 to i8
  %2724 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2725 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2724, i64 0, i32 1, i32 1
  store i8 %2723, i8* %2725, align 1
  br label %2743

2726:                                             ; preds = %2715
  %2727 = icmp ugt i64 %2719, 9223372036854775791
  br i1 %2727, label %2728, label %2730

2728:                                             ; preds = %2726
  %2729 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2729) #14
  unreachable

2730:                                             ; preds = %2726
  %2731 = add nuw nsw i64 %2719, 8
  %2732 = and i64 %2731, -8
  %2733 = icmp slt i64 %2732, 0
  br i1 %2733, label %2734, label %2735

2734:                                             ; preds = %2730
  tail call void @abort() #14
  unreachable

2735:                                             ; preds = %2730
  %2736 = shl i64 %2732, 1
  %2737 = tail call i8* @_Znwm(i64 %2736) #13
  %2738 = bitcast i8* %2737 to i16*
  %2739 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %2737, i8** %2739, align 8
  %2740 = or i64 %2732, -9223372036854775808
  %2741 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2740, i64* %2741, align 8
  %2742 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2719, i64* %2742, align 8
  br label %2743

2743:                                             ; preds = %2735, %2721
  %2744 = phi i16* [ %2722, %2721 ], [ %2738, %2735 ]
  %2745 = add nuw nsw i64 %2719, 1
  %2746 = add i64 %2719, 1
  %2747 = icmp ult i64 %2746, 16
  br i1 %2747, label %2837, label %2748

2748:                                             ; preds = %2743
  %2749 = add i64 %2719, 1
  %2750 = getelementptr i16, i16* %2744, i64 %2749
  %2751 = getelementptr i16, i16* %2717, i64 %2749
  %2752 = icmp ult i16* %2744, %2751
  %2753 = icmp ult i16* %2717, %2750
  %2754 = and i1 %2752, %2753
  br i1 %2754, label %2837, label %2755

2755:                                             ; preds = %2748
  %2756 = and i64 %2746, -16
  %2757 = sub i64 %2745, %2756
  %2758 = getelementptr i16, i16* %2717, i64 %2756
  %2759 = getelementptr i16, i16* %2744, i64 %2756
  %2760 = add i64 %2756, -16
  %2761 = lshr exact i64 %2760, 4
  %2762 = add nuw nsw i64 %2761, 1
  %2763 = and i64 %2762, 3
  %2764 = icmp ult i64 %2760, 48
  br i1 %2764, label %2816, label %2765

2765:                                             ; preds = %2755
  %2766 = sub nsw i64 %2762, %2763
  br label %2767

2767:                                             ; preds = %2767, %2765
  %2768 = phi i64 [ 0, %2765 ], [ %2813, %2767 ]
  %2769 = phi i64 [ %2766, %2765 ], [ %2814, %2767 ]
  %2770 = getelementptr i16, i16* %2717, i64 %2768
  %2771 = getelementptr i16, i16* %2744, i64 %2768
  %2772 = bitcast i16* %2770 to <8 x i16>*
  %2773 = load <8 x i16>, <8 x i16>* %2772, align 2, !alias.scope !134
  %2774 = getelementptr i16, i16* %2770, i64 8
  %2775 = bitcast i16* %2774 to <8 x i16>*
  %2776 = load <8 x i16>, <8 x i16>* %2775, align 2, !alias.scope !134
  %2777 = bitcast i16* %2771 to <8 x i16>*
  store <8 x i16> %2773, <8 x i16>* %2777, align 2, !alias.scope !137, !noalias !134
  %2778 = getelementptr i16, i16* %2771, i64 8
  %2779 = bitcast i16* %2778 to <8 x i16>*
  store <8 x i16> %2776, <8 x i16>* %2779, align 2, !alias.scope !137, !noalias !134
  %2780 = or i64 %2768, 16
  %2781 = getelementptr i16, i16* %2717, i64 %2780
  %2782 = getelementptr i16, i16* %2744, i64 %2780
  %2783 = bitcast i16* %2781 to <8 x i16>*
  %2784 = load <8 x i16>, <8 x i16>* %2783, align 2, !alias.scope !134
  %2785 = getelementptr i16, i16* %2781, i64 8
  %2786 = bitcast i16* %2785 to <8 x i16>*
  %2787 = load <8 x i16>, <8 x i16>* %2786, align 2, !alias.scope !134
  %2788 = bitcast i16* %2782 to <8 x i16>*
  store <8 x i16> %2784, <8 x i16>* %2788, align 2, !alias.scope !137, !noalias !134
  %2789 = getelementptr i16, i16* %2782, i64 8
  %2790 = bitcast i16* %2789 to <8 x i16>*
  store <8 x i16> %2787, <8 x i16>* %2790, align 2, !alias.scope !137, !noalias !134
  %2791 = or i64 %2768, 32
  %2792 = getelementptr i16, i16* %2717, i64 %2791
  %2793 = getelementptr i16, i16* %2744, i64 %2791
  %2794 = bitcast i16* %2792 to <8 x i16>*
  %2795 = load <8 x i16>, <8 x i16>* %2794, align 2, !alias.scope !134
  %2796 = getelementptr i16, i16* %2792, i64 8
  %2797 = bitcast i16* %2796 to <8 x i16>*
  %2798 = load <8 x i16>, <8 x i16>* %2797, align 2, !alias.scope !134
  %2799 = bitcast i16* %2793 to <8 x i16>*
  store <8 x i16> %2795, <8 x i16>* %2799, align 2, !alias.scope !137, !noalias !134
  %2800 = getelementptr i16, i16* %2793, i64 8
  %2801 = bitcast i16* %2800 to <8 x i16>*
  store <8 x i16> %2798, <8 x i16>* %2801, align 2, !alias.scope !137, !noalias !134
  %2802 = or i64 %2768, 48
  %2803 = getelementptr i16, i16* %2717, i64 %2802
  %2804 = getelementptr i16, i16* %2744, i64 %2802
  %2805 = bitcast i16* %2803 to <8 x i16>*
  %2806 = load <8 x i16>, <8 x i16>* %2805, align 2, !alias.scope !134
  %2807 = getelementptr i16, i16* %2803, i64 8
  %2808 = bitcast i16* %2807 to <8 x i16>*
  %2809 = load <8 x i16>, <8 x i16>* %2808, align 2, !alias.scope !134
  %2810 = bitcast i16* %2804 to <8 x i16>*
  store <8 x i16> %2806, <8 x i16>* %2810, align 2, !alias.scope !137, !noalias !134
  %2811 = getelementptr i16, i16* %2804, i64 8
  %2812 = bitcast i16* %2811 to <8 x i16>*
  store <8 x i16> %2809, <8 x i16>* %2812, align 2, !alias.scope !137, !noalias !134
  %2813 = add i64 %2768, 64
  %2814 = add i64 %2769, -4
  %2815 = icmp eq i64 %2814, 0
  br i1 %2815, label %2816, label %2767, !llvm.loop !139

2816:                                             ; preds = %2767, %2755
  %2817 = phi i64 [ 0, %2755 ], [ %2813, %2767 ]
  %2818 = icmp eq i64 %2763, 0
  br i1 %2818, label %2835, label %2819

2819:                                             ; preds = %2816, %2819
  %2820 = phi i64 [ %2832, %2819 ], [ %2817, %2816 ]
  %2821 = phi i64 [ %2833, %2819 ], [ %2763, %2816 ]
  %2822 = getelementptr i16, i16* %2717, i64 %2820
  %2823 = getelementptr i16, i16* %2744, i64 %2820
  %2824 = bitcast i16* %2822 to <8 x i16>*
  %2825 = load <8 x i16>, <8 x i16>* %2824, align 2, !alias.scope !134
  %2826 = getelementptr i16, i16* %2822, i64 8
  %2827 = bitcast i16* %2826 to <8 x i16>*
  %2828 = load <8 x i16>, <8 x i16>* %2827, align 2, !alias.scope !134
  %2829 = bitcast i16* %2823 to <8 x i16>*
  store <8 x i16> %2825, <8 x i16>* %2829, align 2, !alias.scope !137, !noalias !134
  %2830 = getelementptr i16, i16* %2823, i64 8
  %2831 = bitcast i16* %2830 to <8 x i16>*
  store <8 x i16> %2828, <8 x i16>* %2831, align 2, !alias.scope !137, !noalias !134
  %2832 = add i64 %2820, 16
  %2833 = add i64 %2821, -1
  %2834 = icmp eq i64 %2833, 0
  br i1 %2834, label %2835, label %2819, !llvm.loop !140

2835:                                             ; preds = %2819, %2816
  %2836 = icmp eq i64 %2746, %2756
  br i1 %2836, label %3092, label %2837

2837:                                             ; preds = %2835, %2748, %2743
  %2838 = phi i64 [ %2745, %2748 ], [ %2745, %2743 ], [ %2757, %2835 ]
  %2839 = phi i16* [ %2717, %2748 ], [ %2717, %2743 ], [ %2758, %2835 ]
  %2840 = phi i16* [ %2744, %2748 ], [ %2744, %2743 ], [ %2759, %2835 ]
  %2841 = add i64 %2838, -1
  %2842 = and i64 %2838, 7
  %2843 = icmp eq i64 %2842, 0
  br i1 %2843, label %2855, label %2844

2844:                                             ; preds = %2837, %2844
  %2845 = phi i64 [ %2850, %2844 ], [ %2838, %2837 ]
  %2846 = phi i16* [ %2852, %2844 ], [ %2839, %2837 ]
  %2847 = phi i16* [ %2851, %2844 ], [ %2840, %2837 ]
  %2848 = phi i64 [ %2853, %2844 ], [ %2842, %2837 ]
  %2849 = load i16, i16* %2846, align 2
  store i16 %2849, i16* %2847, align 2
  %2850 = add i64 %2845, -1
  %2851 = getelementptr inbounds i16, i16* %2847, i64 1
  %2852 = getelementptr inbounds i16, i16* %2846, i64 1
  %2853 = add i64 %2848, -1
  %2854 = icmp eq i64 %2853, 0
  br i1 %2854, label %2855, label %2844, !llvm.loop !141

2855:                                             ; preds = %2844, %2837
  %2856 = phi i64 [ %2838, %2837 ], [ %2850, %2844 ]
  %2857 = phi i16* [ %2839, %2837 ], [ %2852, %2844 ]
  %2858 = phi i16* [ %2840, %2837 ], [ %2851, %2844 ]
  %2859 = icmp ult i64 %2841, 7
  br i1 %2859, label %3092, label %2860

2860:                                             ; preds = %2855, %2860
  %2861 = phi i64 [ %2886, %2860 ], [ %2856, %2855 ]
  %2862 = phi i16* [ %2888, %2860 ], [ %2857, %2855 ]
  %2863 = phi i16* [ %2887, %2860 ], [ %2858, %2855 ]
  %2864 = load i16, i16* %2862, align 2
  store i16 %2864, i16* %2863, align 2
  %2865 = getelementptr inbounds i16, i16* %2863, i64 1
  %2866 = getelementptr inbounds i16, i16* %2862, i64 1
  %2867 = load i16, i16* %2866, align 2
  store i16 %2867, i16* %2865, align 2
  %2868 = getelementptr inbounds i16, i16* %2863, i64 2
  %2869 = getelementptr inbounds i16, i16* %2862, i64 2
  %2870 = load i16, i16* %2869, align 2
  store i16 %2870, i16* %2868, align 2
  %2871 = getelementptr inbounds i16, i16* %2863, i64 3
  %2872 = getelementptr inbounds i16, i16* %2862, i64 3
  %2873 = load i16, i16* %2872, align 2
  store i16 %2873, i16* %2871, align 2
  %2874 = getelementptr inbounds i16, i16* %2863, i64 4
  %2875 = getelementptr inbounds i16, i16* %2862, i64 4
  %2876 = load i16, i16* %2875, align 2
  store i16 %2876, i16* %2874, align 2
  %2877 = getelementptr inbounds i16, i16* %2863, i64 5
  %2878 = getelementptr inbounds i16, i16* %2862, i64 5
  %2879 = load i16, i16* %2878, align 2
  store i16 %2879, i16* %2877, align 2
  %2880 = getelementptr inbounds i16, i16* %2863, i64 6
  %2881 = getelementptr inbounds i16, i16* %2862, i64 6
  %2882 = load i16, i16* %2881, align 2
  store i16 %2882, i16* %2880, align 2
  %2883 = getelementptr inbounds i16, i16* %2863, i64 7
  %2884 = getelementptr inbounds i16, i16* %2862, i64 7
  %2885 = load i16, i16* %2884, align 2
  store i16 %2885, i16* %2883, align 2
  %2886 = add i64 %2861, -8
  %2887 = getelementptr inbounds i16, i16* %2863, i64 8
  %2888 = getelementptr inbounds i16, i16* %2862, i64 8
  %2889 = icmp eq i64 %2886, 0
  br i1 %2889, label %3092, label %2860, !llvm.loop !142

2890:                                             ; preds = %4
  %2891 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %2892 = load %"class.task_manager::TaskManagerValuesStringifier"*, %"class.task_manager::TaskManagerValuesStringifier"** %2891, align 8
  %2893 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %2894 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %2893, align 8
  %2895 = sext i32 %2 to i64
  %2896 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %2897 = load i64*, i64** %2896, align 8
  %2898 = getelementptr inbounds i64, i64* %2897, i64 %2895
  %2899 = load i64, i64* %2898, align 8
  %2900 = bitcast %"class.task_manager::TaskManagerInterface"* %2894 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %2901 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %2900, align 8
  %2902 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2901, i64 32
  %2903 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %2902, align 8
  %2904 = tail call i32 %2903(%"class.task_manager::TaskManagerInterface"* %2894, i64 %2899) #12
  %2905 = icmp slt i32 %2904, 0
  br i1 %2905, label %2906, label %3089

2906:                                             ; preds = %2890
  %2907 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %2892 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2908 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2907, i64 0, i32 1, i32 1
  %2909 = load i8, i8* %2908, align 1
  %2910 = icmp slt i8 %2909, 0
  br i1 %2910, label %2914, label %2911

2911:                                             ; preds = %2906
  %2912 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %2913 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %2892 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2912, i8* align 8 %2913, i64 24, i1 false) #12
  br label %3092

2914:                                             ; preds = %2906
  %2915 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2892, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2916 = load i16*, i16** %2915, align 8
  %2917 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %2892, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2918 = load i64, i64* %2917, align 8
  %2919 = icmp ult i64 %2918, 11
  br i1 %2919, label %2920, label %2925

2920:                                             ; preds = %2914
  %2921 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %2922 = trunc i64 %2918 to i8
  %2923 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2924 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2923, i64 0, i32 1, i32 1
  store i8 %2922, i8* %2924, align 1
  br label %2942

2925:                                             ; preds = %2914
  %2926 = icmp ugt i64 %2918, 9223372036854775791
  br i1 %2926, label %2927, label %2929

2927:                                             ; preds = %2925
  %2928 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %2928) #14
  unreachable

2929:                                             ; preds = %2925
  %2930 = add nuw nsw i64 %2918, 8
  %2931 = and i64 %2930, -8
  %2932 = icmp slt i64 %2931, 0
  br i1 %2932, label %2933, label %2934

2933:                                             ; preds = %2929
  tail call void @abort() #14
  unreachable

2934:                                             ; preds = %2929
  %2935 = shl i64 %2931, 1
  %2936 = tail call i8* @_Znwm(i64 %2935) #13
  %2937 = bitcast i8* %2936 to i16*
  %2938 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %2936, i8** %2938, align 8
  %2939 = or i64 %2931, -9223372036854775808
  %2940 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2939, i64* %2940, align 8
  %2941 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2918, i64* %2941, align 8
  br label %2942

2942:                                             ; preds = %2934, %2920
  %2943 = phi i16* [ %2921, %2920 ], [ %2937, %2934 ]
  %2944 = add nuw nsw i64 %2918, 1
  %2945 = add i64 %2918, 1
  %2946 = icmp ult i64 %2945, 16
  br i1 %2946, label %3036, label %2947

2947:                                             ; preds = %2942
  %2948 = add i64 %2918, 1
  %2949 = getelementptr i16, i16* %2943, i64 %2948
  %2950 = getelementptr i16, i16* %2916, i64 %2948
  %2951 = icmp ult i16* %2943, %2950
  %2952 = icmp ult i16* %2916, %2949
  %2953 = and i1 %2951, %2952
  br i1 %2953, label %3036, label %2954

2954:                                             ; preds = %2947
  %2955 = and i64 %2945, -16
  %2956 = sub i64 %2944, %2955
  %2957 = getelementptr i16, i16* %2916, i64 %2955
  %2958 = getelementptr i16, i16* %2943, i64 %2955
  %2959 = add i64 %2955, -16
  %2960 = lshr exact i64 %2959, 4
  %2961 = add nuw nsw i64 %2960, 1
  %2962 = and i64 %2961, 3
  %2963 = icmp ult i64 %2959, 48
  br i1 %2963, label %3015, label %2964

2964:                                             ; preds = %2954
  %2965 = sub nsw i64 %2961, %2962
  br label %2966

2966:                                             ; preds = %2966, %2964
  %2967 = phi i64 [ 0, %2964 ], [ %3012, %2966 ]
  %2968 = phi i64 [ %2965, %2964 ], [ %3013, %2966 ]
  %2969 = getelementptr i16, i16* %2916, i64 %2967
  %2970 = getelementptr i16, i16* %2943, i64 %2967
  %2971 = bitcast i16* %2969 to <8 x i16>*
  %2972 = load <8 x i16>, <8 x i16>* %2971, align 2, !alias.scope !143
  %2973 = getelementptr i16, i16* %2969, i64 8
  %2974 = bitcast i16* %2973 to <8 x i16>*
  %2975 = load <8 x i16>, <8 x i16>* %2974, align 2, !alias.scope !143
  %2976 = bitcast i16* %2970 to <8 x i16>*
  store <8 x i16> %2972, <8 x i16>* %2976, align 2, !alias.scope !146, !noalias !143
  %2977 = getelementptr i16, i16* %2970, i64 8
  %2978 = bitcast i16* %2977 to <8 x i16>*
  store <8 x i16> %2975, <8 x i16>* %2978, align 2, !alias.scope !146, !noalias !143
  %2979 = or i64 %2967, 16
  %2980 = getelementptr i16, i16* %2916, i64 %2979
  %2981 = getelementptr i16, i16* %2943, i64 %2979
  %2982 = bitcast i16* %2980 to <8 x i16>*
  %2983 = load <8 x i16>, <8 x i16>* %2982, align 2, !alias.scope !143
  %2984 = getelementptr i16, i16* %2980, i64 8
  %2985 = bitcast i16* %2984 to <8 x i16>*
  %2986 = load <8 x i16>, <8 x i16>* %2985, align 2, !alias.scope !143
  %2987 = bitcast i16* %2981 to <8 x i16>*
  store <8 x i16> %2983, <8 x i16>* %2987, align 2, !alias.scope !146, !noalias !143
  %2988 = getelementptr i16, i16* %2981, i64 8
  %2989 = bitcast i16* %2988 to <8 x i16>*
  store <8 x i16> %2986, <8 x i16>* %2989, align 2, !alias.scope !146, !noalias !143
  %2990 = or i64 %2967, 32
  %2991 = getelementptr i16, i16* %2916, i64 %2990
  %2992 = getelementptr i16, i16* %2943, i64 %2990
  %2993 = bitcast i16* %2991 to <8 x i16>*
  %2994 = load <8 x i16>, <8 x i16>* %2993, align 2, !alias.scope !143
  %2995 = getelementptr i16, i16* %2991, i64 8
  %2996 = bitcast i16* %2995 to <8 x i16>*
  %2997 = load <8 x i16>, <8 x i16>* %2996, align 2, !alias.scope !143
  %2998 = bitcast i16* %2992 to <8 x i16>*
  store <8 x i16> %2994, <8 x i16>* %2998, align 2, !alias.scope !146, !noalias !143
  %2999 = getelementptr i16, i16* %2992, i64 8
  %3000 = bitcast i16* %2999 to <8 x i16>*
  store <8 x i16> %2997, <8 x i16>* %3000, align 2, !alias.scope !146, !noalias !143
  %3001 = or i64 %2967, 48
  %3002 = getelementptr i16, i16* %2916, i64 %3001
  %3003 = getelementptr i16, i16* %2943, i64 %3001
  %3004 = bitcast i16* %3002 to <8 x i16>*
  %3005 = load <8 x i16>, <8 x i16>* %3004, align 2, !alias.scope !143
  %3006 = getelementptr i16, i16* %3002, i64 8
  %3007 = bitcast i16* %3006 to <8 x i16>*
  %3008 = load <8 x i16>, <8 x i16>* %3007, align 2, !alias.scope !143
  %3009 = bitcast i16* %3003 to <8 x i16>*
  store <8 x i16> %3005, <8 x i16>* %3009, align 2, !alias.scope !146, !noalias !143
  %3010 = getelementptr i16, i16* %3003, i64 8
  %3011 = bitcast i16* %3010 to <8 x i16>*
  store <8 x i16> %3008, <8 x i16>* %3011, align 2, !alias.scope !146, !noalias !143
  %3012 = add i64 %2967, 64
  %3013 = add i64 %2968, -4
  %3014 = icmp eq i64 %3013, 0
  br i1 %3014, label %3015, label %2966, !llvm.loop !148

3015:                                             ; preds = %2966, %2954
  %3016 = phi i64 [ 0, %2954 ], [ %3012, %2966 ]
  %3017 = icmp eq i64 %2962, 0
  br i1 %3017, label %3034, label %3018

3018:                                             ; preds = %3015, %3018
  %3019 = phi i64 [ %3031, %3018 ], [ %3016, %3015 ]
  %3020 = phi i64 [ %3032, %3018 ], [ %2962, %3015 ]
  %3021 = getelementptr i16, i16* %2916, i64 %3019
  %3022 = getelementptr i16, i16* %2943, i64 %3019
  %3023 = bitcast i16* %3021 to <8 x i16>*
  %3024 = load <8 x i16>, <8 x i16>* %3023, align 2, !alias.scope !143
  %3025 = getelementptr i16, i16* %3021, i64 8
  %3026 = bitcast i16* %3025 to <8 x i16>*
  %3027 = load <8 x i16>, <8 x i16>* %3026, align 2, !alias.scope !143
  %3028 = bitcast i16* %3022 to <8 x i16>*
  store <8 x i16> %3024, <8 x i16>* %3028, align 2, !alias.scope !146, !noalias !143
  %3029 = getelementptr i16, i16* %3022, i64 8
  %3030 = bitcast i16* %3029 to <8 x i16>*
  store <8 x i16> %3027, <8 x i16>* %3030, align 2, !alias.scope !146, !noalias !143
  %3031 = add i64 %3019, 16
  %3032 = add i64 %3020, -1
  %3033 = icmp eq i64 %3032, 0
  br i1 %3033, label %3034, label %3018, !llvm.loop !149

3034:                                             ; preds = %3018, %3015
  %3035 = icmp eq i64 %2945, %2955
  br i1 %3035, label %3092, label %3036

3036:                                             ; preds = %3034, %2947, %2942
  %3037 = phi i64 [ %2944, %2947 ], [ %2944, %2942 ], [ %2956, %3034 ]
  %3038 = phi i16* [ %2916, %2947 ], [ %2916, %2942 ], [ %2957, %3034 ]
  %3039 = phi i16* [ %2943, %2947 ], [ %2943, %2942 ], [ %2958, %3034 ]
  %3040 = add i64 %3037, -1
  %3041 = and i64 %3037, 7
  %3042 = icmp eq i64 %3041, 0
  br i1 %3042, label %3054, label %3043

3043:                                             ; preds = %3036, %3043
  %3044 = phi i64 [ %3049, %3043 ], [ %3037, %3036 ]
  %3045 = phi i16* [ %3051, %3043 ], [ %3038, %3036 ]
  %3046 = phi i16* [ %3050, %3043 ], [ %3039, %3036 ]
  %3047 = phi i64 [ %3052, %3043 ], [ %3041, %3036 ]
  %3048 = load i16, i16* %3045, align 2
  store i16 %3048, i16* %3046, align 2
  %3049 = add i64 %3044, -1
  %3050 = getelementptr inbounds i16, i16* %3046, i64 1
  %3051 = getelementptr inbounds i16, i16* %3045, i64 1
  %3052 = add i64 %3047, -1
  %3053 = icmp eq i64 %3052, 0
  br i1 %3053, label %3054, label %3043, !llvm.loop !150

3054:                                             ; preds = %3043, %3036
  %3055 = phi i64 [ %3037, %3036 ], [ %3049, %3043 ]
  %3056 = phi i16* [ %3038, %3036 ], [ %3051, %3043 ]
  %3057 = phi i16* [ %3039, %3036 ], [ %3050, %3043 ]
  %3058 = icmp ult i64 %3040, 7
  br i1 %3058, label %3092, label %3059

3059:                                             ; preds = %3054, %3059
  %3060 = phi i64 [ %3085, %3059 ], [ %3055, %3054 ]
  %3061 = phi i16* [ %3087, %3059 ], [ %3056, %3054 ]
  %3062 = phi i16* [ %3086, %3059 ], [ %3057, %3054 ]
  %3063 = load i16, i16* %3061, align 2
  store i16 %3063, i16* %3062, align 2
  %3064 = getelementptr inbounds i16, i16* %3062, i64 1
  %3065 = getelementptr inbounds i16, i16* %3061, i64 1
  %3066 = load i16, i16* %3065, align 2
  store i16 %3066, i16* %3064, align 2
  %3067 = getelementptr inbounds i16, i16* %3062, i64 2
  %3068 = getelementptr inbounds i16, i16* %3061, i64 2
  %3069 = load i16, i16* %3068, align 2
  store i16 %3069, i16* %3067, align 2
  %3070 = getelementptr inbounds i16, i16* %3062, i64 3
  %3071 = getelementptr inbounds i16, i16* %3061, i64 3
  %3072 = load i16, i16* %3071, align 2
  store i16 %3072, i16* %3070, align 2
  %3073 = getelementptr inbounds i16, i16* %3062, i64 4
  %3074 = getelementptr inbounds i16, i16* %3061, i64 4
  %3075 = load i16, i16* %3074, align 2
  store i16 %3075, i16* %3073, align 2
  %3076 = getelementptr inbounds i16, i16* %3062, i64 5
  %3077 = getelementptr inbounds i16, i16* %3061, i64 5
  %3078 = load i16, i16* %3077, align 2
  store i16 %3078, i16* %3076, align 2
  %3079 = getelementptr inbounds i16, i16* %3062, i64 6
  %3080 = getelementptr inbounds i16, i16* %3061, i64 6
  %3081 = load i16, i16* %3080, align 2
  store i16 %3081, i16* %3079, align 2
  %3082 = getelementptr inbounds i16, i16* %3062, i64 7
  %3083 = getelementptr inbounds i16, i16* %3061, i64 7
  %3084 = load i16, i16* %3083, align 2
  store i16 %3084, i16* %3082, align 2
  %3085 = add i64 %3060, -8
  %3086 = getelementptr inbounds i16, i16* %3062, i64 8
  %3087 = getelementptr inbounds i16, i16* %3061, i64 8
  %3088 = icmp eq i64 %3085, 0
  br i1 %3088, label %3092, label %3059, !llvm.loop !151

3089:                                             ; preds = %2890
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.64"* sret %0, i32 %2904) #12
  br label %3092

3090:                                             ; preds = %4, %73
  %3091 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3091, i8 0, i64 24, i1 false) #12
  br label %3092

3092:                                             ; preds = %3054, %3059, %2855, %2860, %2654, %2659, %2453, %2458, %2269, %2274, %2073, %2078, %1018, %1023, %817, %822, %234, %239, %3034, %2835, %2634, %2433, %2249, %2053, %998, %797, %214, %3089, %2911, %2712, %2511, %2488, %2126, %2310, %1930, %1053, %875, %852, %674, %91, %2703, %3090, %1917, %1681, %1664, %1663, %1460, %1257, %652, %618, %574, %572, %544, %529, %528, %311, %296, %281, %269, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager21TaskManagerTableModel18IsTaskFirstInGroupEi(%"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %5, align 8
  %7 = add nsw i32 %1, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 %8
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.task_manager::TaskManagerInterface"* %6 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %14 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %13, align 8
  %15 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %14, i64 20
  %16 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %15, align 8
  %17 = tail call dereferenceable(4) i32* %16(%"class.task_manager::TaskManagerInterface"* %6, i64 %12) #12
  %18 = load i32, i32* %17, align 4
  %19 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %5, align 8
  %20 = sext i32 %1 to i64
  %21 = load i64*, i64** %9, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 %20
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.task_manager::TaskManagerInterface"* %19 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %25 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %24, align 8
  %26 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %25, i64 20
  %27 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %26, align 8
  %28 = tail call dereferenceable(4) i32* %27(%"class.task_manager::TaskManagerInterface"* %19, i64 %23) #12
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %18, %29
  br i1 %30, label %31, label %51

31:                                               ; preds = %4
  %32 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %5, align 8
  %33 = load i64*, i64** %9, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 %8
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.task_manager::TaskManagerInterface"* %32 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %37 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %37, i64 36
  %39 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.task_manager::TaskManagerInterface"* %32, i64 %35) #12
  %41 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %5, align 8
  %42 = load i64*, i64** %9, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 %20
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.task_manager::TaskManagerInterface"* %41 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %46 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %46, i64 36
  %48 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.task_manager::TaskManagerInterface"* %41, i64 %44) #12
  %50 = xor i1 %40, %49
  br label %51

51:                                               ; preds = %31, %4, %2
  %52 = phi i1 [ true, %2 ], [ true, %4 ], [ %50, %31 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager28TaskManagerValuesStringifier19GetNetworkUsageTextEl(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerValuesStringifier"*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string.64", align 8
  switch i64 %2, label %372 [
    i64 -1, label %5
    i64 0, label %188
  ]

5:                                                ; preds = %3
  %6 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %12 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  br label %383

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #14
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #14
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #13
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !152
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !152
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !155, !noalias !152
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !155, !noalias !152
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !152
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !152
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !155, !noalias !152
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !155, !noalias !152
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !152
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !152
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !155, !noalias !152
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !155, !noalias !152
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !152
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !152
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !155, !noalias !152
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !155, !noalias !152
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !157

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !152
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !152
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !155, !noalias !152
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !155, !noalias !152
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !158

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %383, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !159

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %383, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %383, label %158, !llvm.loop !160

188:                                              ; preds = %3
  %189 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 1
  %190 = bitcast %"class.std::__1::basic_string.64"* %189 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %197, label %194

194:                                              ; preds = %188
  %195 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %196 = bitcast %"class.std::__1::basic_string.64"* %189 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 24, i1 false) #12
  br label %383

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i16*, i16** %198, align 8
  %200 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, 11
  br i1 %202, label %203, label %208

203:                                              ; preds = %197
  %204 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %205 = trunc i64 %201 to i8
  %206 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  store i8 %205, i8* %207, align 1
  br label %225

208:                                              ; preds = %197
  %209 = icmp ugt i64 %201, 9223372036854775791
  br i1 %209, label %210, label %212

210:                                              ; preds = %208
  %211 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %211) #14
  unreachable

212:                                              ; preds = %208
  %213 = add nuw nsw i64 %201, 8
  %214 = and i64 %213, -8
  %215 = icmp slt i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  tail call void @abort() #14
  unreachable

217:                                              ; preds = %212
  %218 = shl i64 %214, 1
  %219 = tail call i8* @_Znwm(i64 %218) #13
  %220 = bitcast i8* %219 to i16*
  %221 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %219, i8** %221, align 8
  %222 = or i64 %214, -9223372036854775808
  %223 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %201, i64* %224, align 8
  br label %225

225:                                              ; preds = %217, %203
  %226 = phi i16* [ %204, %203 ], [ %220, %217 ]
  %227 = add nuw nsw i64 %201, 1
  %228 = add i64 %201, 1
  %229 = icmp ult i64 %228, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %225
  %231 = add i64 %201, 1
  %232 = getelementptr i16, i16* %226, i64 %231
  %233 = getelementptr i16, i16* %199, i64 %231
  %234 = icmp ult i16* %226, %233
  %235 = icmp ult i16* %199, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %228, -16
  %239 = sub i64 %227, %238
  %240 = getelementptr i16, i16* %199, i64 %238
  %241 = getelementptr i16, i16* %226, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %199, i64 %250
  %253 = getelementptr i16, i16* %226, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !161
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !161
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !164, !noalias !161
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !164, !noalias !161
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %199, i64 %262
  %264 = getelementptr i16, i16* %226, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !161
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !161
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !164, !noalias !161
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !164, !noalias !161
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %199, i64 %273
  %275 = getelementptr i16, i16* %226, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !161
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !161
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !164, !noalias !161
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !164, !noalias !161
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %199, i64 %284
  %286 = getelementptr i16, i16* %226, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !161
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !161
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !164, !noalias !161
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !164, !noalias !161
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !166

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %199, i64 %302
  %305 = getelementptr i16, i16* %226, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !161
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !161
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !164, !noalias !161
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !164, !noalias !161
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !167

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %228, %238
  br i1 %318, label %383, label %319

319:                                              ; preds = %317, %230, %225
  %320 = phi i64 [ %227, %230 ], [ %227, %225 ], [ %239, %317 ]
  %321 = phi i16* [ %199, %230 ], [ %199, %225 ], [ %240, %317 ]
  %322 = phi i16* [ %226, %230 ], [ %226, %225 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !168

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %383, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %383, label %342, !llvm.loop !169

372:                                              ; preds = %3
  %373 = bitcast %"class.std::__1::basic_string.64"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #12
  %374 = bitcast %"class.std::__1::basic_string.64"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 -86, i64 24, i1 false)
  call void @_ZN2ui11FormatSpeedEl(%"class.std::__1::basic_string.64"* nonnull sret %4, i64 %2) #12
  call void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"* sret %0, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %4) #12
  %375 = bitcast %"class.std::__1::basic_string.64"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %375, i64 0, i32 1, i32 1
  %377 = load i8, i8* %376, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %372
  %380 = bitcast %"class.std::__1::basic_string.64"* %4 to i8**
  %381 = load i8*, i8** %380, align 8
  call void @_ZdlPv(i8* %381) #13
  br label %382

382:                                              ; preds = %372, %379
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #12
  br label %383

383:                                              ; preds = %337, %342, %153, %158, %317, %133, %194, %10, %382
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager28TaskManagerValuesStringifier15GetCpuUsageTextEd(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerValuesStringifier"*, double) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = fcmp uno double %2, 0.000000e+00
  br i1 %5, label %6, label %189

6:                                                ; preds = %3
  %7 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %13 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #12
  br label %207

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #14
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !170
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !170
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !173, !noalias !170
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !173, !noalias !170
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !170
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !170
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !173, !noalias !170
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !173, !noalias !170
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !170
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !170
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !173, !noalias !170
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !173, !noalias !170
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !170
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !170
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !173, !noalias !170
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !173, !noalias !170
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !175

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !170
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !170
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !173, !noalias !170
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !173, !noalias !170
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !176

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %207, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !177

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %207, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %207, label %159, !llvm.loop !178

189:                                              ; preds = %3
  %190 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12task_manager12_GLOBAL__N_120kCpuTextFormatStringE, i64 0, i64 0), double %2) #12
  %191 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = select i1 %194, i8* %196, i8* %190
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = zext i8 %193 to i64
  %201 = select i1 %194, i64 %199, i64 %200
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.64"* sret %0, i8* %197, i64 %201) #12
  %202 = load i8, i8* %192, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %189
  %205 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %205) #13
  br label %206

206:                                              ; preds = %189, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #12
  br label %207

207:                                              ; preds = %154, %159, %134, %11, %206
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager28TaskManagerValuesStringifier14GetCpuTimeTextEN4base9TimeDeltaE(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerValuesStringifier"*, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string.64", align 8
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %6, label %189

6:                                                ; preds = %3
  %7 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %13 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #12
  br label %385

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #14
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !179
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !179
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !182, !noalias !179
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !182, !noalias !179
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !179
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !179
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !182, !noalias !179
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !182, !noalias !179
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !179
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !179
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !182, !noalias !179
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !182, !noalias !179
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !179
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !179
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !182, !noalias !179
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !182, !noalias !179
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !184

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !179
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !179
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !182, !noalias !179
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !182, !noalias !179
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !185

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %385, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !186

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %385, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %385, label %159, !llvm.loop !187

189:                                              ; preds = %3
  %190 = bitcast %"class.std::__1::basic_string.64"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 0, i64 24, i1 false) #12
  %191 = call zeroext i1 @_ZN4base29TimeDurationFormatWithSecondsENS_9TimeDeltaENS_19DurationFormatWidthEPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i64 %2, i32 2, %"class.std::__1::basic_string.64"* nonnull %4) #12
  %192 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0
  %193 = select i1 %191, %"class.std::__1::basic_string.64"* %4, %"class.std::__1::basic_string.64"* %192
  %194 = bitcast %"class.std::__1::basic_string.64"* %193 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %189
  %199 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %200 = bitcast %"class.std::__1::basic_string.64"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 24, i1 false) #12
  br label %376

201:                                              ; preds = %189
  %202 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = icmp ult i64 %205, 11
  br i1 %206, label %207, label %212

207:                                              ; preds = %201
  %208 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %209 = trunc i64 %205 to i8
  %210 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  store i8 %209, i8* %211, align 1
  br label %229

212:                                              ; preds = %201
  %213 = icmp ugt i64 %205, 9223372036854775791
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %215) #14
  unreachable

216:                                              ; preds = %212
  %217 = add nuw nsw i64 %205, 8
  %218 = and i64 %217, -8
  %219 = icmp slt i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %216
  call void @abort() #14
  unreachable

221:                                              ; preds = %216
  %222 = shl i64 %218, 1
  %223 = call i8* @_Znwm(i64 %222) #13
  %224 = bitcast i8* %223 to i16*
  %225 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %223, i8** %225, align 8
  %226 = or i64 %218, -9223372036854775808
  %227 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %205, i64* %228, align 8
  br label %229

229:                                              ; preds = %221, %207
  %230 = phi i16* [ %208, %207 ], [ %224, %221 ]
  %231 = add nuw nsw i64 %205, 1
  %232 = add i64 %205, 1
  %233 = icmp ult i64 %232, 16
  br i1 %233, label %323, label %234

234:                                              ; preds = %229
  %235 = add i64 %205, 1
  %236 = getelementptr i16, i16* %230, i64 %235
  %237 = getelementptr i16, i16* %203, i64 %235
  %238 = icmp ult i16* %230, %237
  %239 = icmp ult i16* %203, %236
  %240 = and i1 %238, %239
  br i1 %240, label %323, label %241

241:                                              ; preds = %234
  %242 = and i64 %232, -16
  %243 = sub i64 %231, %242
  %244 = getelementptr i16, i16* %203, i64 %242
  %245 = getelementptr i16, i16* %230, i64 %242
  %246 = add i64 %242, -16
  %247 = lshr exact i64 %246, 4
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 3
  %250 = icmp ult i64 %246, 48
  br i1 %250, label %302, label %251

251:                                              ; preds = %241
  %252 = sub nsw i64 %248, %249
  br label %253

253:                                              ; preds = %253, %251
  %254 = phi i64 [ 0, %251 ], [ %299, %253 ]
  %255 = phi i64 [ %252, %251 ], [ %300, %253 ]
  %256 = getelementptr i16, i16* %203, i64 %254
  %257 = getelementptr i16, i16* %230, i64 %254
  %258 = bitcast i16* %256 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !188
  %260 = getelementptr i16, i16* %256, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !188
  %263 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %263, align 2, !alias.scope !191, !noalias !188
  %264 = getelementptr i16, i16* %257, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %265, align 2, !alias.scope !191, !noalias !188
  %266 = or i64 %254, 16
  %267 = getelementptr i16, i16* %203, i64 %266
  %268 = getelementptr i16, i16* %230, i64 %266
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !188
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !188
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !191, !noalias !188
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !191, !noalias !188
  %277 = or i64 %254, 32
  %278 = getelementptr i16, i16* %203, i64 %277
  %279 = getelementptr i16, i16* %230, i64 %277
  %280 = bitcast i16* %278 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !188
  %282 = getelementptr i16, i16* %278, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !188
  %285 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %285, align 2, !alias.scope !191, !noalias !188
  %286 = getelementptr i16, i16* %279, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %287, align 2, !alias.scope !191, !noalias !188
  %288 = or i64 %254, 48
  %289 = getelementptr i16, i16* %203, i64 %288
  %290 = getelementptr i16, i16* %230, i64 %288
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !188
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !188
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !191, !noalias !188
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !191, !noalias !188
  %299 = add i64 %254, 64
  %300 = add i64 %255, -4
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %253, !llvm.loop !193

302:                                              ; preds = %253, %241
  %303 = phi i64 [ 0, %241 ], [ %299, %253 ]
  %304 = icmp eq i64 %249, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %302, %305
  %306 = phi i64 [ %318, %305 ], [ %303, %302 ]
  %307 = phi i64 [ %319, %305 ], [ %249, %302 ]
  %308 = getelementptr i16, i16* %203, i64 %306
  %309 = getelementptr i16, i16* %230, i64 %306
  %310 = bitcast i16* %308 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !188
  %312 = getelementptr i16, i16* %308, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !188
  %315 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %315, align 2, !alias.scope !191, !noalias !188
  %316 = getelementptr i16, i16* %309, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %317, align 2, !alias.scope !191, !noalias !188
  %318 = add i64 %306, 16
  %319 = add i64 %307, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !194

321:                                              ; preds = %305, %302
  %322 = icmp eq i64 %232, %242
  br i1 %322, label %376, label %323

323:                                              ; preds = %321, %234, %229
  %324 = phi i64 [ %231, %234 ], [ %231, %229 ], [ %243, %321 ]
  %325 = phi i16* [ %203, %234 ], [ %203, %229 ], [ %244, %321 ]
  %326 = phi i16* [ %230, %234 ], [ %230, %229 ], [ %245, %321 ]
  %327 = add i64 %324, -1
  %328 = and i64 %324, 7
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %341, label %330

330:                                              ; preds = %323, %330
  %331 = phi i64 [ %336, %330 ], [ %324, %323 ]
  %332 = phi i16* [ %338, %330 ], [ %325, %323 ]
  %333 = phi i16* [ %337, %330 ], [ %326, %323 ]
  %334 = phi i64 [ %339, %330 ], [ %328, %323 ]
  %335 = load i16, i16* %332, align 2
  store i16 %335, i16* %333, align 2
  %336 = add i64 %331, -1
  %337 = getelementptr inbounds i16, i16* %333, i64 1
  %338 = getelementptr inbounds i16, i16* %332, i64 1
  %339 = add i64 %334, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %330, !llvm.loop !195

341:                                              ; preds = %330, %323
  %342 = phi i64 [ %324, %323 ], [ %336, %330 ]
  %343 = phi i16* [ %325, %323 ], [ %338, %330 ]
  %344 = phi i16* [ %326, %323 ], [ %337, %330 ]
  %345 = icmp ult i64 %327, 7
  br i1 %345, label %376, label %346

346:                                              ; preds = %341, %346
  %347 = phi i64 [ %372, %346 ], [ %342, %341 ]
  %348 = phi i16* [ %374, %346 ], [ %343, %341 ]
  %349 = phi i16* [ %373, %346 ], [ %344, %341 ]
  %350 = load i16, i16* %348, align 2
  store i16 %350, i16* %349, align 2
  %351 = getelementptr inbounds i16, i16* %349, i64 1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %349, i64 2
  %355 = getelementptr inbounds i16, i16* %348, i64 2
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %349, i64 3
  %358 = getelementptr inbounds i16, i16* %348, i64 3
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %349, i64 4
  %361 = getelementptr inbounds i16, i16* %348, i64 4
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %349, i64 5
  %364 = getelementptr inbounds i16, i16* %348, i64 5
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %349, i64 6
  %367 = getelementptr inbounds i16, i16* %348, i64 6
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %349, i64 7
  %370 = getelementptr inbounds i16, i16* %348, i64 7
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = add i64 %347, -8
  %373 = getelementptr inbounds i16, i16* %349, i64 8
  %374 = getelementptr inbounds i16, i16* %348, i64 8
  %375 = icmp eq i64 %372, 0
  br i1 %375, label %376, label %346, !llvm.loop !196

376:                                              ; preds = %341, %346, %321, %198
  %377 = bitcast %"class.std::__1::basic_string.64"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %378 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %377, i64 0, i32 1, i32 1
  %379 = load i8, i8* %378, align 1
  %380 = icmp slt i8 %379, 0
  br i1 %380, label %381, label %384

381:                                              ; preds = %376
  %382 = bitcast %"class.std::__1::basic_string.64"* %4 to i8**
  %383 = load i8*, i8** %382, align 8
  call void @_ZdlPv(i8* %383) #13
  br label %384

384:                                              ; preds = %376, %381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #12
  br label %385

385:                                              ; preds = %154, %159, %134, %11, %384
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager28TaskManagerValuesStringifier18GetMemoryUsageTextElb(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerValuesStringifier"*, i64, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string.64", align 8
  %6 = alloca %"class.std::__1::basic_string.64", align 8
  %7 = icmp eq i64 %2, -1
  br i1 %7, label %8, label %191

8:                                                ; preds = %4
  %9 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  %15 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %400

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #13
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !197
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !197
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !200, !noalias !197
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !200, !noalias !197
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !197
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !197
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !200, !noalias !197
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !200, !noalias !197
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !197
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !197
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !200, !noalias !197
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !200, !noalias !197
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !197
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !197
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !200, !noalias !197
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !200, !noalias !197
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !202

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !197
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !197
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !200, !noalias !197
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !200, !noalias !197
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !203

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %400, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !204

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %400, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %400, label %161, !llvm.loop !205

191:                                              ; preds = %4
  %192 = bitcast %"class.std::__1::basic_string.64"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #12
  %193 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %196 = sdiv i64 %2, 1024
  %197 = bitcast %"class.std::__1::basic_string.64"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 24, i1 false)
  call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.64"* nonnull sret %5, i64 %196) #12
  %198 = call zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"* nonnull %5) #12
  %199 = bitcast %"class.std::__1::basic_string.64"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #12
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"* nonnull sret %6, i32 7255, %"class.std::__1::basic_string.64"* nonnull dereferenceable(24) %5) #12
  %200 = bitcast %"class.std::__1::basic_string.64"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %191
  %205 = bitcast %"class.std::__1::basic_string.64"* %5 to i8**
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #13
  br label %207

207:                                              ; preds = %204, %191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* nonnull align 8 %199, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #12
  br i1 %3, label %208, label %398

208:                                              ; preds = %207
  %209 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 4
  %210 = bitcast %"class.std::__1::basic_string.64"* %209 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i16*, i16** %214, align 8
  %216 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.std::__1::basic_string.64"* %209 to i16*
  %219 = zext i8 %212 to i64
  %220 = select i1 %213, i16* %215, i16* %218
  %221 = select i1 %213, i64 %217, i64 %219
  %222 = load i8, i8* %201, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %229

224:                                              ; preds = %208
  %225 = load i64, i64* %195, align 8
  %226 = and i64 %225, 9223372036854775807
  %227 = add nsw i64 %226, -1
  %228 = load i64, i64* %194, align 8
  br label %231

229:                                              ; preds = %208
  %230 = zext i8 %222 to i64
  br label %231

231:                                              ; preds = %229, %224
  %232 = phi i64 [ %227, %224 ], [ 10, %229 ]
  %233 = phi i64 [ %228, %224 ], [ %230, %229 ]
  %234 = sub i64 %232, %233
  %235 = icmp ult i64 %234, %221
  br i1 %235, label %395, label %236

236:                                              ; preds = %231
  %237 = icmp eq i64 %221, 0
  br i1 %237, label %398, label %238

238:                                              ; preds = %236
  %239 = load i16*, i16** %193, align 8
  %240 = bitcast %"class.std::__1::basic_string.64"* %5 to i16*
  %241 = select i1 %223, i16* %239, i16* %240
  %242 = getelementptr inbounds i16, i16* %241, i64 %233
  %243 = icmp ult i64 %221, 16
  br i1 %243, label %333, label %244

244:                                              ; preds = %238
  %245 = add i64 %221, %233
  %246 = getelementptr i16, i16* %241, i64 %245
  %247 = getelementptr i16, i16* %220, i64 %221
  %248 = icmp ult i16* %242, %247
  %249 = icmp ult i16* %220, %246
  %250 = and i1 %248, %249
  br i1 %250, label %333, label %251

251:                                              ; preds = %244
  %252 = and i64 %221, -16
  %253 = sub i64 %221, %252
  %254 = getelementptr i16, i16* %220, i64 %252
  %255 = getelementptr i16, i16* %242, i64 %252
  %256 = add i64 %252, -16
  %257 = lshr exact i64 %256, 4
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 48
  br i1 %260, label %312, label %261

261:                                              ; preds = %251
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr i16, i16* %220, i64 %264
  %267 = getelementptr i16, i16* %242, i64 %264
  %268 = bitcast i16* %266 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !206
  %270 = getelementptr i16, i16* %266, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !206
  %273 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !209, !noalias !206
  %274 = getelementptr i16, i16* %267, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !209, !noalias !206
  %276 = or i64 %264, 16
  %277 = getelementptr i16, i16* %220, i64 %276
  %278 = getelementptr i16, i16* %242, i64 %276
  %279 = bitcast i16* %277 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !206
  %281 = getelementptr i16, i16* %277, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !206
  %284 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !209, !noalias !206
  %285 = getelementptr i16, i16* %278, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !209, !noalias !206
  %287 = or i64 %264, 32
  %288 = getelementptr i16, i16* %220, i64 %287
  %289 = getelementptr i16, i16* %242, i64 %287
  %290 = bitcast i16* %288 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !206
  %292 = getelementptr i16, i16* %288, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !206
  %295 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !209, !noalias !206
  %296 = getelementptr i16, i16* %289, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !209, !noalias !206
  %298 = or i64 %264, 48
  %299 = getelementptr i16, i16* %220, i64 %298
  %300 = getelementptr i16, i16* %242, i64 %298
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !206
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !206
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !209, !noalias !206
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !209, !noalias !206
  %309 = add i64 %264, 64
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !211

312:                                              ; preds = %263, %251
  %313 = phi i64 [ 0, %251 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr i16, i16* %220, i64 %316
  %319 = getelementptr i16, i16* %242, i64 %316
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !206
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !206
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !209, !noalias !206
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !209, !noalias !206
  %328 = add i64 %316, 16
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !212

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %221, %252
  br i1 %332, label %386, label %333

333:                                              ; preds = %331, %244, %238
  %334 = phi i64 [ %221, %244 ], [ %221, %238 ], [ %253, %331 ]
  %335 = phi i16* [ %220, %244 ], [ %220, %238 ], [ %254, %331 ]
  %336 = phi i16* [ %242, %244 ], [ %242, %238 ], [ %255, %331 ]
  %337 = add i64 %334, -1
  %338 = and i64 %334, 7
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %351, label %340

340:                                              ; preds = %333, %340
  %341 = phi i64 [ %346, %340 ], [ %334, %333 ]
  %342 = phi i16* [ %348, %340 ], [ %335, %333 ]
  %343 = phi i16* [ %347, %340 ], [ %336, %333 ]
  %344 = phi i64 [ %349, %340 ], [ %338, %333 ]
  %345 = load i16, i16* %342, align 2
  store i16 %345, i16* %343, align 2
  %346 = add i64 %341, -1
  %347 = getelementptr inbounds i16, i16* %343, i64 1
  %348 = getelementptr inbounds i16, i16* %342, i64 1
  %349 = add i64 %344, -1
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %340, !llvm.loop !213

351:                                              ; preds = %340, %333
  %352 = phi i64 [ %334, %333 ], [ %346, %340 ]
  %353 = phi i16* [ %335, %333 ], [ %348, %340 ]
  %354 = phi i16* [ %336, %333 ], [ %347, %340 ]
  %355 = icmp ult i64 %337, 7
  br i1 %355, label %386, label %356

356:                                              ; preds = %351, %356
  %357 = phi i64 [ %382, %356 ], [ %352, %351 ]
  %358 = phi i16* [ %384, %356 ], [ %353, %351 ]
  %359 = phi i16* [ %383, %356 ], [ %354, %351 ]
  %360 = load i16, i16* %358, align 2
  store i16 %360, i16* %359, align 2
  %361 = getelementptr inbounds i16, i16* %359, i64 1
  %362 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %359, i64 2
  %365 = getelementptr inbounds i16, i16* %358, i64 2
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %359, i64 3
  %368 = getelementptr inbounds i16, i16* %358, i64 3
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %359, i64 4
  %371 = getelementptr inbounds i16, i16* %358, i64 4
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %359, i64 5
  %374 = getelementptr inbounds i16, i16* %358, i64 5
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %359, i64 6
  %377 = getelementptr inbounds i16, i16* %358, i64 6
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %359, i64 7
  %380 = getelementptr inbounds i16, i16* %358, i64 7
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = add i64 %357, -8
  %383 = getelementptr inbounds i16, i16* %359, i64 8
  %384 = getelementptr inbounds i16, i16* %358, i64 8
  %385 = icmp eq i64 %382, 0
  br i1 %385, label %386, label %356, !llvm.loop !214

386:                                              ; preds = %351, %356, %331
  %387 = add i64 %233, %221
  %388 = load i8, i8* %201, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %386
  store i64 %387, i64* %194, align 8
  br label %393

391:                                              ; preds = %386
  %392 = trunc i64 %387 to i8
  store i8 %392, i8* %201, align 1
  br label %393

393:                                              ; preds = %391, %390
  %394 = getelementptr inbounds i16, i16* %241, i64 %387
  store i16 0, i16* %394, align 2
  br label %398

395:                                              ; preds = %231
  %396 = add i64 %233, %221
  %397 = sub i64 %396, %232
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.64"* nonnull %5, i64 %232, i64 %397, i64 %233, i64 %233, i64 0, i64 %221, i16* %220) #12
  br label %398

398:                                              ; preds = %207, %236, %393, %395
  %399 = bitcast %"class.std::__1::basic_string.64"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %399, i8* nonnull align 8 %192, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #12
  br label %400

400:                                              ; preds = %156, %161, %136, %13, %398
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.64"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N12task_manager21TaskManagerTableModel7GetTextEii(%"class.std::__1::basic_string.64"* noalias sret, %"class.task_manager::TaskManagerTableModel"* readonly, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 -1, i32 5, i32 0, i32 1
  %6 = bitcast i64** %5 to %"class.task_manager::TaskManagerTableModel"*
  tail call void @_ZN12task_manager21TaskManagerTableModel7GetTextEii(%"class.std::__1::basic_string.64"* sret %0, %"class.task_manager::TaskManagerTableModel"* %6, i32 %2, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel7GetIconEi(%"class.ui::ImageModel"* noalias sret, %"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 0, i32 5, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 %6
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.task_manager::TaskManagerInterface"* %5 to %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %12 = load %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)**, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)** %12, i64 18
  %14 = load %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)** %13, align 8
  %15 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* %14(%"class.task_manager::TaskManagerInterface"* %5, i64 %10) #12
  tail call void @_ZN2ui10ImageModel13FromImageSkiaERKN3gfx9ImageSkiaE(%"class.ui::ImageModel"* sret %0, %"class.gfx::ImageSkia"* dereferenceable(8) %15) #12
  ret void
}

declare void @_ZN2ui10ImageModel13FromImageSkiaERKN3gfx9ImageSkiaE(%"class.ui::ImageModel"* sret, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N12task_manager21TaskManagerTableModel7GetIconEi(%"class.ui::ImageModel"* noalias sret, %"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %1, i64 -1, i32 5, i32 0, i32 1
  %5 = getelementptr inbounds i64*, i64** %4, i64 1
  %6 = bitcast i64** %5 to %"class.task_manager::TaskManagerInterface"**
  %7 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8, !noalias !215
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i64*, i64** %4, i64 8
  %10 = load i64*, i64** %9, align 8, !noalias !215
  %11 = getelementptr inbounds i64, i64* %10, i64 %8
  %12 = load i64, i64* %11, align 8, !noalias !215
  %13 = bitcast %"class.task_manager::TaskManagerInterface"* %7 to %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %14 = load %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)**, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*** %13, align 8, !noalias !215
  %15 = getelementptr inbounds %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)** %14, i64 18
  %16 = load %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)*, %"class.gfx::ImageSkia"* (%"class.task_manager::TaskManagerInterface"*, i64)** %15, align 8, !noalias !215
  %17 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* %16(%"class.task_manager::TaskManagerInterface"* %7, i64 %12) #12, !noalias !215
  tail call void @_ZN2ui10ImageModel13FromImageSkiaERKN3gfx9ImageSkiaE(%"class.ui::ImageModel"* sret %0, %"class.gfx::ImageSkia"* dereferenceable(8) %17) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12task_manager21TaskManagerTableModel11SetObserverEPN2ui18TableModelObserverE(%"class.task_manager::TaskManagerTableModel"* nocapture, %"class.ui::TableModelObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  store %"class.ui::TableModelObserver"* %1, %"class.ui::TableModelObserver"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn32_N12task_manager21TaskManagerTableModel11SetObserverEPN2ui18TableModelObserverE(%"class.task_manager::TaskManagerTableModel"* nocapture, %"class.ui::TableModelObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 -1, i32 5, i32 0, i32 1
  %4 = getelementptr inbounds i64*, i64** %3, i64 7
  %5 = bitcast i64** %4 to %"class.ui::TableModelObserver"**
  store %"class.ui::TableModelObserver"* %1, %"class.ui::TableModelObserver"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12task_manager21TaskManagerTableModel13CompareValuesEiii(%"class.task_manager::TaskManagerTableModel"*, i32, i32, i32) unnamed_addr #1 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"struct.blink::WebCacheResourceTypeStats", align 8
  %14 = alloca %"struct.blink::WebCacheResourceTypeStats", align 8
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  switch i32 %3, label %596 [
    i32 7235, label %20
    i32 7243, label %20
    i32 7237, label %23
    i32 7238, label %50
    i32 7240, label %84
    i32 7239, label %111
    i32 7241, label %138
    i32 7242, label %165
    i32 7236, label %192
    i32 7232, label %219
    i32 7233, label %272
    i32 7234, label %303
    i32 7244, label %334
    i32 7245, label %361
    i32 7248, label %388
    i32 7249, label %388
    i32 7250, label %388
    i32 7251, label %448
    i32 7253, label %475
    i32 7252, label %516
    i32 7247, label %543
    i32 7246, label %569
  ]

20:                                               ; preds = %4, %4
  %21 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 1
  %22 = tail call i32 @_ZN2ui10TableModel13CompareValuesEiii(%"class.ui::TableModel"* %21, i32 %1, i32 %2, i32 %3) #12
  br label %596

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %25 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %24, align 8
  %26 = sext i32 %1 to i64
  %27 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 %26
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.task_manager::TaskManagerInterface"* %25 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %32 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %32, i64 25
  %34 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %33, align 8
  %35 = tail call i64 %34(%"class.task_manager::TaskManagerInterface"* %25, i64 %30) #12
  %36 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %24, align 8
  %37 = sext i32 %2 to i64
  %38 = load i64*, i64** %27, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.task_manager::TaskManagerInterface"* %36 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %42 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %42, i64 25
  %44 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %43, align 8
  %45 = tail call i64 %44(%"class.task_manager::TaskManagerInterface"* %36, i64 %40) #12
  %46 = icmp eq i64 %35, %45
  %47 = icmp slt i64 %35, %45
  %48 = select i1 %47, i32 -1, i32 1
  %49 = select i1 %46, i32 0, i32 %48
  br label %596

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %52 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %51, align 8
  %53 = sext i32 %1 to i64
  %54 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %53
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.task_manager::TaskManagerInterface"* %52 to double (%"class.task_manager::TaskManagerInterface"*, i64)***
  %59 = load double (%"class.task_manager::TaskManagerInterface"*, i64)**, double (%"class.task_manager::TaskManagerInterface"*, i64)*** %58, align 8
  %60 = getelementptr inbounds double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %59, i64 3
  %61 = load double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %60, align 8
  %62 = tail call double %61(%"class.task_manager::TaskManagerInterface"* %52, i64 %57) #12
  %63 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %51, align 8
  %64 = sext i32 %2 to i64
  %65 = load i64*, i64** %54, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 %64
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.task_manager::TaskManagerInterface"* %63 to double (%"class.task_manager::TaskManagerInterface"*, i64)***
  %69 = load double (%"class.task_manager::TaskManagerInterface"*, i64)**, double (%"class.task_manager::TaskManagerInterface"*, i64)*** %68, align 8
  %70 = getelementptr inbounds double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %69, i64 3
  %71 = load double (%"class.task_manager::TaskManagerInterface"*, i64)*, double (%"class.task_manager::TaskManagerInterface"*, i64)** %70, align 8
  %72 = tail call double %71(%"class.task_manager::TaskManagerInterface"* %63, i64 %67) #12
  %73 = fcmp uno double %62, 0.000000e+00
  %74 = fcmp uno double %72, 0.000000e+00
  br i1 %73, label %75, label %78

75:                                               ; preds = %50
  %76 = xor i1 %74, true
  %77 = sext i1 %76 to i32
  br label %596

78:                                               ; preds = %50
  br i1 %74, label %596, label %79

79:                                               ; preds = %78
  %80 = fcmp oeq double %62, %72
  br i1 %80, label %596, label %81

81:                                               ; preds = %79
  %82 = fcmp olt double %62, %72
  %83 = select i1 %82, i32 -1, i32 1
  br label %596

84:                                               ; preds = %4
  %85 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %86 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %85, align 8
  %87 = sext i32 %1 to i64
  %88 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 %87
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.task_manager::TaskManagerInterface"* %86 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %93 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %92, align 8
  %94 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %93, i64 5
  %95 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %94, align 8
  %96 = tail call i64 %95(%"class.task_manager::TaskManagerInterface"* %86, i64 %91) #12
  %97 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %85, align 8
  %98 = sext i32 %2 to i64
  %99 = load i64*, i64** %88, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 %98
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.task_manager::TaskManagerInterface"* %97 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %103 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %102, align 8
  %104 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %103, i64 5
  %105 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %104, align 8
  %106 = tail call i64 %105(%"class.task_manager::TaskManagerInterface"* %97, i64 %101) #12
  %107 = icmp eq i64 %96, %106
  %108 = icmp slt i64 %96, %106
  %109 = select i1 %108, i32 -1, i32 1
  %110 = select i1 %107, i32 0, i32 %109
  br label %596

111:                                              ; preds = %4
  %112 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %113 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %112, align 8
  %114 = sext i32 %1 to i64
  %115 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %116 = load i64*, i64** %115, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 %114
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.task_manager::TaskManagerInterface"* %113 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %120 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %119, align 8
  %121 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %120, i64 4
  %122 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %121, align 8
  %123 = tail call i64 %122(%"class.task_manager::TaskManagerInterface"* %113, i64 %118) #12
  %124 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %112, align 8
  %125 = sext i32 %2 to i64
  %126 = load i64*, i64** %115, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 %125
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.task_manager::TaskManagerInterface"* %124 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %130 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %129, align 8
  %131 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %130, i64 4
  %132 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %131, align 8
  %133 = tail call i64 %132(%"class.task_manager::TaskManagerInterface"* %124, i64 %128) #12
  %134 = icmp eq i64 %123, %133
  %135 = icmp slt i64 %123, %133
  %136 = select i1 %135, i32 -1, i32 1
  %137 = select i1 %134, i32 0, i32 %136
  br label %596

138:                                              ; preds = %4
  %139 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %140 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %139, align 8
  %141 = sext i32 %1 to i64
  %142 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %143 = load i64*, i64** %142, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 %141
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.task_manager::TaskManagerInterface"* %140 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %147 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %146, align 8
  %148 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %147, i64 6
  %149 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %148, align 8
  %150 = tail call i64 %149(%"class.task_manager::TaskManagerInterface"* %140, i64 %145) #12
  %151 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %139, align 8
  %152 = sext i32 %2 to i64
  %153 = load i64*, i64** %142, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 %152
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.task_manager::TaskManagerInterface"* %151 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %157 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %156, align 8
  %158 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %157, i64 6
  %159 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %158, align 8
  %160 = tail call i64 %159(%"class.task_manager::TaskManagerInterface"* %151, i64 %155) #12
  %161 = icmp eq i64 %150, %160
  %162 = icmp slt i64 %150, %160
  %163 = select i1 %162, i32 -1, i32 1
  %164 = select i1 %161, i32 0, i32 %163
  br label %596

165:                                              ; preds = %4
  %166 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %167 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %166, align 8
  %168 = sext i32 %1 to i64
  %169 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 %168
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.task_manager::TaskManagerInterface"* %167 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %174 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %173, align 8
  %175 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %174, i64 7
  %176 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %175, align 8
  %177 = tail call i64 %176(%"class.task_manager::TaskManagerInterface"* %167, i64 %172) #12
  %178 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %166, align 8
  %179 = sext i32 %2 to i64
  %180 = load i64*, i64** %169, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 %179
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.task_manager::TaskManagerInterface"* %178 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %184 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %183, align 8
  %185 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %184, i64 7
  %186 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %185, align 8
  %187 = tail call i64 %186(%"class.task_manager::TaskManagerInterface"* %178, i64 %182) #12
  %188 = icmp eq i64 %177, %187
  %189 = icmp slt i64 %177, %187
  %190 = select i1 %189, i32 -1, i32 1
  %191 = select i1 %188, i32 0, i32 %190
  br label %596

192:                                              ; preds = %4
  %193 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %194 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %193, align 8
  %195 = sext i32 %1 to i64
  %196 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %197 = load i64*, i64** %196, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 %195
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.task_manager::TaskManagerInterface"* %194 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %201 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %200, align 8
  %202 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %201, i64 11
  %203 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %202, align 8
  %204 = tail call i32 %203(%"class.task_manager::TaskManagerInterface"* %194, i64 %199) #12
  %205 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %193, align 8
  %206 = sext i32 %2 to i64
  %207 = load i64*, i64** %196, align 8
  %208 = getelementptr inbounds i64, i64* %207, i64 %206
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.task_manager::TaskManagerInterface"* %205 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %211 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %210, align 8
  %212 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %211, i64 11
  %213 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %212, align 8
  %214 = tail call i32 %213(%"class.task_manager::TaskManagerInterface"* %205, i64 %209) #12
  %215 = icmp eq i32 %204, %214
  %216 = icmp slt i32 %204, %214
  %217 = select i1 %216, i32 -1, i32 1
  %218 = select i1 %215, i32 0, i32 %217
  br label %596

219:                                              ; preds = %4
  %220 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %221 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %220, align 8
  %222 = sext i32 %1 to i64
  %223 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = getelementptr inbounds i64, i64* %224, i64 %222
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.task_manager::TaskManagerInterface"* %221 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %228 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %227, align 8
  %229 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %228, i64 36
  %230 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %229, align 8
  %231 = tail call zeroext i1 %230(%"class.task_manager::TaskManagerInterface"* %221, i64 %226) #12
  %232 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %220, align 8
  %233 = sext i32 %2 to i64
  %234 = load i64*, i64** %223, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 %233
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.task_manager::TaskManagerInterface"* %232 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %238 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %237, align 8
  %239 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %238, i64 36
  %240 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %239, align 8
  %241 = tail call zeroext i1 %240(%"class.task_manager::TaskManagerInterface"* %232, i64 %236) #12
  %242 = xor i1 %231, %241
  br i1 %242, label %243, label %247

243:                                              ; preds = %219
  %244 = xor i1 %231, true
  %245 = and i1 %241, %244
  %246 = select i1 %245, i32 -1, i32 1
  br label %596

247:                                              ; preds = %219
  %248 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %220, align 8
  %249 = load i64*, i64** %223, align 8
  %250 = getelementptr inbounds i64, i64* %249, i64 %222
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.task_manager::TaskManagerInterface"* %248 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %253 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %252, align 8
  %254 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %253, i64 20
  %255 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %254, align 8
  %256 = tail call dereferenceable(4) i32* %255(%"class.task_manager::TaskManagerInterface"* %248, i64 %251) #12
  %257 = load i32, i32* %256, align 4
  %258 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %220, align 8
  %259 = load i64*, i64** %223, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 %233
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.task_manager::TaskManagerInterface"* %258 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %263 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %262, align 8
  %264 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %263, i64 20
  %265 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %264, align 8
  %266 = tail call dereferenceable(4) i32* %265(%"class.task_manager::TaskManagerInterface"* %258, i64 %261) #12
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %257, %267
  %269 = icmp slt i32 %257, %267
  %270 = select i1 %269, i32 -1, i32 1
  %271 = select i1 %268, i32 0, i32 %270
  br label %596

272:                                              ; preds = %4
  %273 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #12
  store i64 -6148914691236517206, i64* %5, align 8
  %274 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %275 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %276 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #12
  store i64 -6148914691236517206, i64* %8, align 8
  %277 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %278 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %277, align 8
  %279 = sext i32 %1 to i64
  %280 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %281 = load i64*, i64** %280, align 8
  %282 = getelementptr inbounds i64, i64* %281, i64 %279
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.task_manager::TaskManagerInterface"* %278 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %285 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %285, i64 12
  %287 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %286, align 8
  call void %287(%"class.task_manager::TaskManagerInterface"* %278, i64 %283, i64* nonnull %5, i64* nonnull %6) #12
  %288 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %277, align 8
  %289 = sext i32 %2 to i64
  %290 = load i64*, i64** %280, align 8
  %291 = getelementptr inbounds i64, i64* %290, i64 %289
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.task_manager::TaskManagerInterface"* %288 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %294 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %294, i64 12
  %296 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %295, align 8
  call void %296(%"class.task_manager::TaskManagerInterface"* %288, i64 %292, i64* nonnull %7, i64* nonnull %8) #12
  %297 = load i64, i64* %5, align 8
  %298 = load i64, i64* %7, align 8
  %299 = icmp eq i64 %297, %298
  %300 = icmp slt i64 %297, %298
  %301 = select i1 %300, i32 -1, i32 1
  %302 = select i1 %299, i32 0, i32 %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #12
  br label %596

303:                                              ; preds = %4
  %304 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %305 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #12
  store i64 -6148914691236517206, i64* %10, align 8
  %306 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #12
  store i64 -6148914691236517206, i64* %11, align 8
  %307 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #12
  store i64 -6148914691236517206, i64* %12, align 8
  %308 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %309 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %308, align 8
  %310 = sext i32 %1 to i64
  %311 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = getelementptr inbounds i64, i64* %312, i64 %310
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.task_manager::TaskManagerInterface"* %309 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %316 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %315, align 8
  %317 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %316, i64 13
  %318 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %317, align 8
  call void %318(%"class.task_manager::TaskManagerInterface"* %309, i64 %314, i64* nonnull %9, i64* nonnull %10) #12
  %319 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %308, align 8
  %320 = sext i32 %2 to i64
  %321 = load i64*, i64** %311, align 8
  %322 = getelementptr inbounds i64, i64* %321, i64 %320
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.task_manager::TaskManagerInterface"* %319 to void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %325 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %324, align 8
  %326 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %325, i64 13
  %327 = load void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, void (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %326, align 8
  call void %327(%"class.task_manager::TaskManagerInterface"* %319, i64 %323, i64* nonnull %11, i64* nonnull %12) #12
  %328 = load i64, i64* %9, align 8
  %329 = load i64, i64* %11, align 8
  %330 = icmp eq i64 %328, %329
  %331 = icmp slt i64 %328, %329
  %332 = select i1 %331, i32 -1, i32 1
  %333 = select i1 %330, i32 0, i32 %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #12
  br label %596

334:                                              ; preds = %4
  %335 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %336 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %335, align 8
  %337 = sext i32 %1 to i64
  %338 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %339 = load i64*, i64** %338, align 8
  %340 = getelementptr inbounds i64, i64* %339, i64 %337
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"class.task_manager::TaskManagerInterface"* %336 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %343 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %342, align 8
  %344 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %343, i64 9
  %345 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %344, align 8
  %346 = tail call i32 %345(%"class.task_manager::TaskManagerInterface"* %336, i64 %341) #12
  %347 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %335, align 8
  %348 = sext i32 %2 to i64
  %349 = load i64*, i64** %338, align 8
  %350 = getelementptr inbounds i64, i64* %349, i64 %348
  %351 = load i64, i64* %350, align 8
  %352 = bitcast %"class.task_manager::TaskManagerInterface"* %347 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %353 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %352, align 8
  %354 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %353, i64 9
  %355 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %354, align 8
  %356 = tail call i32 %355(%"class.task_manager::TaskManagerInterface"* %347, i64 %351) #12
  %357 = icmp eq i32 %346, %356
  %358 = icmp slt i32 %346, %356
  %359 = select i1 %358, i32 -1, i32 1
  %360 = select i1 %357, i32 0, i32 %359
  br label %596

361:                                              ; preds = %4
  %362 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %363 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %362, align 8
  %364 = sext i32 %1 to i64
  %365 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %366 = load i64*, i64** %365, align 8
  %367 = getelementptr inbounds i64, i64* %366, i64 %364
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.task_manager::TaskManagerInterface"* %363 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %370 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %369, align 8
  %371 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %370, i64 10
  %372 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %371, align 8
  %373 = tail call i32 %372(%"class.task_manager::TaskManagerInterface"* %363, i64 %368) #12
  %374 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %362, align 8
  %375 = sext i32 %2 to i64
  %376 = load i64*, i64** %365, align 8
  %377 = getelementptr inbounds i64, i64* %376, i64 %375
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.task_manager::TaskManagerInterface"* %374 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %380 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %379, align 8
  %381 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %380, i64 10
  %382 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %381, align 8
  %383 = tail call i32 %382(%"class.task_manager::TaskManagerInterface"* %374, i64 %378) #12
  %384 = icmp eq i32 %373, %383
  %385 = icmp slt i32 %373, %383
  %386 = select i1 %385, i32 -1, i32 1
  %387 = select i1 %384, i32 0, i32 %386
  br label %596

388:                                              ; preds = %4, %4, %4
  %389 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %389) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %389, i8 -86, i64 144, i1 false)
  %390 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %390) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 144, i1 false)
  %391 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %392 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %391, align 8
  %393 = sext i32 %1 to i64
  %394 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %395 = load i64*, i64** %394, align 8
  %396 = getelementptr inbounds i64, i64* %395, i64 %393
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.task_manager::TaskManagerInterface"* %392 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)***
  %399 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*** %398, align 8
  %400 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %399, i64 31
  %401 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %400, align 8
  %402 = call zeroext i1 %401(%"class.task_manager::TaskManagerInterface"* %392, i64 %397, %"struct.blink::WebCacheResourceTypeStats"* nonnull %13) #12
  %403 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %391, align 8
  %404 = sext i32 %2 to i64
  %405 = load i64*, i64** %394, align 8
  %406 = getelementptr inbounds i64, i64* %405, i64 %404
  %407 = load i64, i64* %406, align 8
  %408 = bitcast %"class.task_manager::TaskManagerInterface"* %403 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)***
  %409 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*** %408, align 8
  %410 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %409, i64 31
  %411 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, %"struct.blink::WebCacheResourceTypeStats"*)** %410, align 8
  %412 = call zeroext i1 %411(%"class.task_manager::TaskManagerInterface"* %403, i64 %407, %"struct.blink::WebCacheResourceTypeStats"* nonnull %14) #12
  %413 = and i1 %402, %412
  br i1 %413, label %418, label %414

414:                                              ; preds = %388
  %415 = or i1 %402, %412
  %416 = select i1 %402, i32 1, i32 -1
  %417 = select i1 %415, i32 %416, i32 0
  br label %446

418:                                              ; preds = %388
  switch i32 %3, label %446 [
    i32 7248, label %419
    i32 7249, label %428
    i32 7250, label %437
  ]

419:                                              ; preds = %418
  %420 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %13, i64 0, i32 0, i32 1
  %421 = load i64, i64* %420, align 8
  %422 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %14, i64 0, i32 0, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = icmp eq i64 %421, %423
  %425 = icmp ult i64 %421, %423
  %426 = select i1 %425, i32 -1, i32 1
  %427 = select i1 %424, i32 0, i32 %426
  br label %446

428:                                              ; preds = %418
  %429 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %13, i64 0, i32 2, i32 1
  %430 = load i64, i64* %429, align 8
  %431 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %14, i64 0, i32 2, i32 1
  %432 = load i64, i64* %431, align 8
  %433 = icmp eq i64 %430, %432
  %434 = icmp ult i64 %430, %432
  %435 = select i1 %434, i32 -1, i32 1
  %436 = select i1 %433, i32 0, i32 %435
  br label %446

437:                                              ; preds = %418
  %438 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %13, i64 0, i32 1, i32 1
  %439 = load i64, i64* %438, align 8
  %440 = getelementptr inbounds %"struct.blink::WebCacheResourceTypeStats", %"struct.blink::WebCacheResourceTypeStats"* %14, i64 0, i32 1, i32 1
  %441 = load i64, i64* %440, align 8
  %442 = icmp eq i64 %439, %441
  %443 = icmp ult i64 %439, %441
  %444 = select i1 %443, i32 -1, i32 1
  %445 = select i1 %442, i32 0, i32 %444
  br label %446

446:                                              ; preds = %418, %437, %428, %419, %414
  %447 = phi i32 [ %445, %437 ], [ %436, %428 ], [ %427, %419 ], [ %417, %414 ], [ 0, %418 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %390) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %389) #12
  br label %596

448:                                              ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12
  store i8 -86, i8* %15, align 1
  %449 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %450 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %449, align 8
  %451 = sext i32 %1 to i64
  %452 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %453 = load i64*, i64** %452, align 8
  %454 = getelementptr inbounds i64, i64* %453, i64 %451
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.task_manager::TaskManagerInterface"* %450 to i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)***
  %457 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*** %456, align 8
  %458 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %457, i64 8
  %459 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %458, align 8
  %460 = call i64 %459(%"class.task_manager::TaskManagerInterface"* %450, i64 %455, i8* nonnull %15) #12
  %461 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %449, align 8
  %462 = sext i32 %2 to i64
  %463 = load i64*, i64** %452, align 8
  %464 = getelementptr inbounds i64, i64* %463, i64 %462
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.task_manager::TaskManagerInterface"* %461 to i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)***
  %467 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*** %466, align 8
  %468 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %467, i64 8
  %469 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64, i8*)** %468, align 8
  %470 = call i64 %469(%"class.task_manager::TaskManagerInterface"* %461, i64 %465, i8* nonnull %15) #12
  %471 = icmp eq i64 %460, %470
  %472 = icmp slt i64 %460, %470
  %473 = select i1 %472, i32 -1, i32 1
  %474 = select i1 %471, i32 0, i32 %473
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12
  br label %596

475:                                              ; preds = %4
  %476 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %476) #12
  store i64 -6148914691236517206, i64* %16, align 8
  %477 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %477) #12
  store i64 -6148914691236517206, i64* %17, align 8
  %478 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478) #12
  store i64 -6148914691236517206, i64* %18, align 8
  %479 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %479) #12
  store i64 -6148914691236517206, i64* %19, align 8
  %480 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %481 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %480, align 8
  %482 = sext i32 %1 to i64
  %483 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %484 = load i64*, i64** %483, align 8
  %485 = getelementptr inbounds i64, i64* %484, i64 %482
  %486 = load i64, i64* %485, align 8
  %487 = bitcast %"class.task_manager::TaskManagerInterface"* %481 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %488 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %487, align 8
  %489 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %488, i64 30
  %490 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %489, align 8
  %491 = call zeroext i1 %490(%"class.task_manager::TaskManagerInterface"* %481, i64 %486, i64* nonnull %16, i64* nonnull %18) #12
  %492 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %480, align 8
  %493 = sext i32 %2 to i64
  %494 = load i64*, i64** %483, align 8
  %495 = getelementptr inbounds i64, i64* %494, i64 %493
  %496 = load i64, i64* %495, align 8
  %497 = bitcast %"class.task_manager::TaskManagerInterface"* %492 to i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)***
  %498 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*** %497, align 8
  %499 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %498, i64 30
  %500 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64, i64*, i64*)** %499, align 8
  %501 = call zeroext i1 %500(%"class.task_manager::TaskManagerInterface"* %492, i64 %496, i64* nonnull %17, i64* nonnull %19) #12
  %502 = and i1 %491, %501
  br i1 %502, label %507, label %503

503:                                              ; preds = %475
  %504 = or i1 %491, %501
  %505 = select i1 %491, i32 1, i32 -1
  %506 = select i1 %504, i32 %505, i32 0
  br label %514

507:                                              ; preds = %475
  %508 = load i64, i64* %16, align 8
  %509 = load i64, i64* %17, align 8
  %510 = icmp eq i64 %508, %509
  %511 = icmp slt i64 %508, %509
  %512 = select i1 %511, i32 -1, i32 1
  %513 = select i1 %510, i32 0, i32 %512
  br label %514

514:                                              ; preds = %507, %503
  %515 = phi i32 [ %513, %507 ], [ %506, %503 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %479) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %477) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %476) #12
  br label %596

516:                                              ; preds = %4
  %517 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %518 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %517, align 8
  %519 = sext i32 %1 to i64
  %520 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %521 = load i64*, i64** %520, align 8
  %522 = getelementptr inbounds i64, i64* %521, i64 %519
  %523 = load i64, i64* %522, align 8
  %524 = bitcast %"class.task_manager::TaskManagerInterface"* %518 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %525 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %524, align 8
  %526 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %525, i64 29
  %527 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %526, align 8
  %528 = tail call i64 %527(%"class.task_manager::TaskManagerInterface"* %518, i64 %523) #12
  %529 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %517, align 8
  %530 = sext i32 %2 to i64
  %531 = load i64*, i64** %520, align 8
  %532 = getelementptr inbounds i64, i64* %531, i64 %530
  %533 = load i64, i64* %532, align 8
  %534 = bitcast %"class.task_manager::TaskManagerInterface"* %529 to i64 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %535 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)**, i64 (%"class.task_manager::TaskManagerInterface"*, i64)*** %534, align 8
  %536 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %535, i64 29
  %537 = load i64 (%"class.task_manager::TaskManagerInterface"*, i64)*, i64 (%"class.task_manager::TaskManagerInterface"*, i64)** %536, align 8
  %538 = tail call i64 %537(%"class.task_manager::TaskManagerInterface"* %529, i64 %533) #12
  %539 = icmp eq i64 %528, %538
  %540 = icmp slt i64 %528, %538
  %541 = select i1 %540, i32 -1, i32 1
  %542 = select i1 %539, i32 0, i32 %541
  br label %596

543:                                              ; preds = %4
  %544 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %545 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %544, align 8
  %546 = sext i32 %1 to i64
  %547 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %548 = load i64*, i64** %547, align 8
  %549 = getelementptr inbounds i64, i64* %548, i64 %546
  %550 = load i64, i64* %549, align 8
  %551 = bitcast %"class.task_manager::TaskManagerInterface"* %545 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %552 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %551, align 8
  %553 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %552, i64 15
  %554 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %553, align 8
  %555 = tail call zeroext i1 %554(%"class.task_manager::TaskManagerInterface"* %545, i64 %550) #12
  %556 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %544, align 8
  %557 = sext i32 %2 to i64
  %558 = load i64*, i64** %547, align 8
  %559 = getelementptr inbounds i64, i64* %558, i64 %557
  %560 = load i64, i64* %559, align 8
  %561 = bitcast %"class.task_manager::TaskManagerInterface"* %556 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %562 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %561, align 8
  %563 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %562, i64 15
  %564 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %563, align 8
  %565 = tail call zeroext i1 %564(%"class.task_manager::TaskManagerInterface"* %556, i64 %560) #12
  %566 = xor i1 %555, %565
  %567 = select i1 %555, i32 -1, i32 1
  %568 = select i1 %566, i32 %567, i32 0
  br label %596

569:                                              ; preds = %4
  %570 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %571 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %570, align 8
  %572 = sext i32 %1 to i64
  %573 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %574 = load i64*, i64** %573, align 8
  %575 = getelementptr inbounds i64, i64* %574, i64 %572
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.task_manager::TaskManagerInterface"* %571 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %578 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %577, align 8
  %579 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %578, i64 14
  %580 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %579, align 8
  %581 = tail call i32 %580(%"class.task_manager::TaskManagerInterface"* %571, i64 %576) #12
  %582 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %570, align 8
  %583 = sext i32 %2 to i64
  %584 = load i64*, i64** %573, align 8
  %585 = getelementptr inbounds i64, i64* %584, i64 %583
  %586 = load i64, i64* %585, align 8
  %587 = bitcast %"class.task_manager::TaskManagerInterface"* %582 to i32 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %588 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)**, i32 (%"class.task_manager::TaskManagerInterface"*, i64)*** %587, align 8
  %589 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %588, i64 14
  %590 = load i32 (%"class.task_manager::TaskManagerInterface"*, i64)*, i32 (%"class.task_manager::TaskManagerInterface"*, i64)** %589, align 8
  %591 = tail call i32 %590(%"class.task_manager::TaskManagerInterface"* %582, i64 %586) #12
  %592 = icmp eq i32 %581, %591
  %593 = icmp slt i32 %581, %591
  %594 = select i1 %593, i32 -1, i32 1
  %595 = select i1 %592, i32 0, i32 %594
  br label %596

596:                                              ; preds = %81, %79, %78, %75, %4, %243, %247, %569, %543, %516, %514, %448, %446, %361, %334, %303, %272, %192, %165, %138, %111, %84, %23, %20
  %597 = phi i32 [ %595, %569 ], [ %568, %543 ], [ %542, %516 ], [ %515, %514 ], [ %474, %448 ], [ %447, %446 ], [ %387, %361 ], [ %360, %334 ], [ %333, %303 ], [ %302, %272 ], [ %218, %192 ], [ %191, %165 ], [ %164, %138 ], [ %137, %111 ], [ %110, %84 ], [ %49, %23 ], [ %22, %20 ], [ %246, %243 ], [ %271, %247 ], [ 0, %4 ], [ %77, %75 ], [ %83, %81 ], [ 1, %78 ], [ 0, %79 ]
  ret i32 %597
}

declare i32 @_ZN2ui10TableModel13CompareValuesEiii(%"class.ui::TableModel"*, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn32_N12task_manager21TaskManagerTableModel13CompareValuesEiii(%"class.task_manager::TaskManagerTableModel"*, i32, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 -1, i32 5, i32 0, i32 1
  %6 = bitcast i64** %5 to %"class.task_manager::TaskManagerTableModel"*
  %7 = tail call i32 @_ZN12task_manager21TaskManagerTableModel13CompareValuesEiii(%"class.task_manager::TaskManagerTableModel"* %6, i32 %1, i32 %2, i32 %3)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel17GetRowsGroupRangeEiPiS1_(%"class.task_manager::TaskManagerTableModel"*, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = add i32 %1, 1
  %6 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 %8
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.task_manager::TaskManagerInterface"* %7 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %14 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %14, i64 36
  %16 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.task_manager::TaskManagerInterface"* %7, i64 %12) #12
  br i1 %17, label %102, label %18

18:                                               ; preds = %4
  %19 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %20 = load i64*, i64** %9, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %8
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.task_manager::TaskManagerInterface"* %19 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %24 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %23, align 8
  %25 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %24, i64 20
  %26 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %25, align 8
  %27 = tail call dereferenceable(4) i32* %26(%"class.task_manager::TaskManagerInterface"* %19, i64 %22) #12
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %45, %18
  %30 = phi i64 [ %34, %45 ], [ %8, %18 ]
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %55

32:                                               ; preds = %29
  %33 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %34 = add nsw i64 %30, -1
  %35 = load i64*, i64** %9, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 %34
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.task_manager::TaskManagerInterface"* %33 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %39 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %38, align 8
  %40 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %39, i64 20
  %41 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %40, align 8
  %42 = tail call dereferenceable(4) i32* %41(%"class.task_manager::TaskManagerInterface"* %33, i64 %37) #12
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %28
  br i1 %44, label %45, label %55

45:                                               ; preds = %32
  %46 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %47 = load i64*, i64** %9, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 %34
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.task_manager::TaskManagerInterface"* %46 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %51 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %51, i64 36
  %53 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.task_manager::TaskManagerInterface"* %46, i64 %49) #12
  br i1 %54, label %55, label %29

55:                                               ; preds = %45, %29, %32
  %56 = trunc i64 %30 to i32
  %57 = bitcast %"class.task_manager::TaskManagerTableModel"* %0 to i32 (%"class.task_manager::TaskManagerTableModel"*)***
  %58 = load i32 (%"class.task_manager::TaskManagerTableModel"*)**, i32 (%"class.task_manager::TaskManagerTableModel"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %58, i64 7
  %60 = load i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %59, align 8
  %61 = tail call i32 %60(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %62 = icmp slt i32 %5, %61
  br i1 %62, label %63, label %102

63:                                               ; preds = %55
  %64 = sext i32 %5 to i64
  br label %65

65:                                               ; preds = %63, %89
  %66 = phi i64 [ %64, %63 ], [ %90, %89 ]
  %67 = phi i32 [ %5, %63 ], [ %91, %89 ]
  %68 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %69 = load i64*, i64** %9, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %66
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.task_manager::TaskManagerInterface"* %68 to i32* (%"class.task_manager::TaskManagerInterface"*, i64)***
  %73 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)**, i32* (%"class.task_manager::TaskManagerInterface"*, i64)*** %72, align 8
  %74 = getelementptr inbounds i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %73, i64 20
  %75 = load i32* (%"class.task_manager::TaskManagerInterface"*, i64)*, i32* (%"class.task_manager::TaskManagerInterface"*, i64)** %74, align 8
  %76 = tail call dereferenceable(4) i32* %75(%"class.task_manager::TaskManagerInterface"* %68, i64 %71) #12
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %28
  br i1 %78, label %79, label %98

79:                                               ; preds = %65
  %80 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %6, align 8
  %81 = load i64*, i64** %9, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 %66
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.task_manager::TaskManagerInterface"* %80 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %85 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %85, i64 36
  %87 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.task_manager::TaskManagerInterface"* %80, i64 %83) #12
  br i1 %88, label %100, label %89

89:                                               ; preds = %79
  %90 = add nsw i64 %66, 1
  %91 = add nsw i32 %67, 1
  %92 = load i32 (%"class.task_manager::TaskManagerTableModel"*)**, i32 (%"class.task_manager::TaskManagerTableModel"*)*** %57, align 8
  %93 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %92, i64 7
  %94 = load i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %93, align 8
  %95 = tail call i32 %94(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %96 = sext i32 %95 to i64
  %97 = icmp slt i64 %90, %96
  br i1 %97, label %65, label %102

98:                                               ; preds = %65
  %99 = trunc i64 %66 to i32
  br label %102

100:                                              ; preds = %79
  %101 = trunc i64 %66 to i32
  br label %102

102:                                              ; preds = %89, %98, %100, %55, %4
  %103 = phi i32 [ %1, %4 ], [ %56, %55 ], [ %56, %100 ], [ %56, %98 ], [ %56, %89 ]
  %104 = phi i32 [ %5, %4 ], [ %5, %55 ], [ %101, %100 ], [ %99, %98 ], [ %91, %89 ]
  store i32 %103, i32* %2, align 4
  %105 = sub nsw i32 %104, %103
  store i32 %105, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel11OnTaskAddedEl(%"class.task_manager::TaskManagerTableModel"*, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  %5 = bitcast %"class.task_manager::TaskManagerInterface"* %4 to %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)***
  %6 = load %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)**, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)** %6, i64 33
  %8 = load %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)*, %"class.std::__1::vector.54"* (%"class.task_manager::TaskManagerInterface"*)** %7, align 8
  %9 = tail call dereferenceable(24) %"class.std::__1::vector.54"* %8(%"class.task_manager::TaskManagerInterface"* %4) #12
  %10 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5
  %11 = icmp eq %"class.std::__1::vector.54"* %10, %9
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %9, i64 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %9, i64 0, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"* %10, i64* %14, i64* %16) #12
  br label %17

17:                                               ; preds = %2, %12
  %18 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %19 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %18, align 8
  %20 = icmp eq %"class.ui::TableModelObserver"* %19, null
  br i1 %20, label %45, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %10, i64 0, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %21, %31
  %28 = phi i64* [ %32, %31 ], [ %23, %21 ]
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, %1
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i64, i64* %28, i64 1
  %33 = icmp eq i64* %32, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %31, %21
  %35 = phi i64* [ %23, %21 ], [ %28, %27 ], [ %25, %31 ]
  %36 = ptrtoint i64* %35 to i64
  %37 = ptrtoint i64* %23 to i64
  %38 = sub i64 %36, %37
  %39 = lshr exact i64 %38, 3
  %40 = trunc i64 %39 to i32
  %41 = bitcast %"class.ui::TableModelObserver"* %19 to void (%"class.ui::TableModelObserver"*, i32, i32)***
  %42 = load void (%"class.ui::TableModelObserver"*, i32, i32)**, void (%"class.ui::TableModelObserver"*, i32, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %42, i64 2
  %44 = load void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %43, align 8
  tail call void %44(%"class.ui::TableModelObserver"* nonnull %19, i32 %40, i32 1) #12
  br label %45

45:                                               ; preds = %17, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel17OnTaskToBeRemovedEl(%"class.task_manager::TaskManagerTableModel"* nocapture, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi i64* [ %14, %13 ], [ %4, %2 ]
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i64, i64* %10, i64 1
  %15 = icmp eq i64* %14, %6
  br i1 %15, label %43, label %9

16:                                               ; preds = %9, %2
  %17 = phi i64* [ %4, %2 ], [ %10, %9 ]
  %18 = icmp eq i64* %17, %6
  br i1 %18, label %43, label %19

19:                                               ; preds = %16
  %20 = ptrtoint i64* %17 to i64
  %21 = ptrtoint i64* %4 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 3
  %24 = getelementptr inbounds i64, i64* %17, i64 1
  %25 = ptrtoint i64* %24 to i64
  %26 = sub i64 %8, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %19
  %30 = bitcast i64* %17 to i8*
  %31 = bitcast i64* %24 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 %26, i1 false) #12
  br label %32

32:                                               ; preds = %19, %29
  %33 = getelementptr inbounds i64, i64* %17, i64 %27
  store i64* %33, i64** %5, align 8
  %34 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %35 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %34, align 8
  %36 = icmp eq %"class.ui::TableModelObserver"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = trunc i64 %23 to i32
  %39 = bitcast %"class.ui::TableModelObserver"* %35 to void (%"class.ui::TableModelObserver"*, i32, i32)***
  %40 = load void (%"class.ui::TableModelObserver"*, i32, i32)**, void (%"class.ui::TableModelObserver"*, i32, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %40, i64 3
  %42 = load void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %41, align 8
  tail call void %42(%"class.ui::TableModelObserver"* nonnull %35, i32 %38, i32 1) #12
  br label %43

43:                                               ; preds = %13, %37, %32, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel16OnTasksRefreshedERKNSt3__16vectorIlNS1_9allocatorIlEEEE(%"class.task_manager::TaskManagerTableModel"*, %"class.std::__1::vector.54"* readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5
  %4 = icmp eq %"class.std::__1::vector.54"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"* %3, i64* %7, i64* %9) #12
  br label %10

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %12 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %11, align 8
  %13 = icmp eq %"class.ui::TableModelObserver"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.task_manager::TaskManagerTableModel"* %0 to i32 (%"class.task_manager::TaskManagerTableModel"*)***
  %16 = load i32 (%"class.task_manager::TaskManagerTableModel"*)**, i32 (%"class.task_manager::TaskManagerTableModel"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %16, i64 7
  %18 = load i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %17, align 8
  %19 = tail call i32 %18(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %20 = bitcast %"class.ui::TableModelObserver"* %12 to void (%"class.ui::TableModelObserver"*, i32, i32)***
  %21 = load void (%"class.ui::TableModelObserver"*, i32, i32)**, void (%"class.ui::TableModelObserver"*, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %21, i64 1
  %23 = load void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %22, align 8
  tail call void %23(%"class.ui::TableModelObserver"* nonnull %12, i32 0, i32 %19) #12
  br label %24

24:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel9OnRefreshEv(%"class.task_manager::TaskManagerTableModel"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 4
  %3 = load %"class.ui::TableModelObserver"*, %"class.ui::TableModelObserver"** %2, align 8
  %4 = icmp eq %"class.ui::TableModelObserver"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.task_manager::TaskManagerTableModel"* %0 to i32 (%"class.task_manager::TaskManagerTableModel"*)***
  %7 = load i32 (%"class.task_manager::TaskManagerTableModel"*)**, i32 (%"class.task_manager::TaskManagerTableModel"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %7, i64 7
  %9 = load i32 (%"class.task_manager::TaskManagerTableModel"*)*, i32 (%"class.task_manager::TaskManagerTableModel"*)** %8, align 8
  %10 = tail call i32 %9(%"class.task_manager::TaskManagerTableModel"* %0) #12
  %11 = bitcast %"class.ui::TableModelObserver"* %3 to void (%"class.ui::TableModelObserver"*, i32, i32)***
  %12 = load void (%"class.ui::TableModelObserver"*, i32, i32)**, void (%"class.ui::TableModelObserver"*, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %12, i64 1
  %14 = load void (%"class.ui::TableModelObserver"*, i32, i32)*, void (%"class.ui::TableModelObserver"*, i32, i32)** %13, align 8
  tail call void %14(%"class.ui::TableModelObserver"* nonnull %3, i32 0, i32 %10) #12
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel12ActivateTaskEi(%"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 %5
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.task_manager::TaskManagerInterface"* %4 to void (%"class.task_manager::TaskManagerInterface"*, i64)***
  %11 = load void (%"class.task_manager::TaskManagerInterface"*, i64)**, void (%"class.task_manager::TaskManagerInterface"*, i64)*** %10, align 8
  %12 = load void (%"class.task_manager::TaskManagerInterface"*, i64)*, void (%"class.task_manager::TaskManagerInterface"*, i64)** %11, align 8
  tail call void %12(%"class.task_manager::TaskManagerInterface"* %4, i64 %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel8KillTaskEi(%"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 %5
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.task_manager::TaskManagerInterface"* %4 to void (%"class.task_manager::TaskManagerInterface"*, i64)***
  %11 = load void (%"class.task_manager::TaskManagerInterface"*, i64)**, void (%"class.task_manager::TaskManagerInterface"*, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.task_manager::TaskManagerInterface"*, i64)*, void (%"class.task_manager::TaskManagerInterface"*, i64)** %11, i64 2
  %13 = load void (%"class.task_manager::TaskManagerInterface"*, i64)*, void (%"class.task_manager::TaskManagerInterface"*, i64)** %12, align 8
  tail call void %13(%"class.task_manager::TaskManagerInterface"* %4, i64 %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel18UpdateRefreshTypesEib(%"class.task_manager::TaskManagerTableModel"*, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %95 [
    i32 7246, label %81
    i32 7254, label %79
    i32 7247, label %77
    i32 7237, label %86
    i32 7238, label %4
    i32 7239, label %6
    i32 7240, label %8
    i32 7241, label %10
    i32 7242, label %12
    i32 7233, label %22
    i32 7234, label %22
    i32 7244, label %37
    i32 7245, label %39
    i32 7248, label %41
    i32 7249, label %41
    i32 7250, label %41
    i32 7251, label %63
    i32 7252, label %65
    i32 7253, label %67
    i32 7236, label %69
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %14 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %13, align 8
  %15 = bitcast %"class.task_manager::TableViewDelegate"* %14 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %16 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %16, i64 2
  %18 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.task_manager::TableViewDelegate"* %14, i32 7242) #12
  %20 = or i1 %19, %2
  %21 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %20, label %89, label %92

22:                                               ; preds = %3, %3
  %23 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %24 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %23, align 8
  %25 = bitcast %"class.task_manager::TableViewDelegate"* %24 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %26 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %26, i64 2
  %28 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.task_manager::TableViewDelegate"* %24, i32 7233) #12
  br i1 %29, label %83, label %30

30:                                               ; preds = %22
  %31 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %23, align 8
  %32 = bitcast %"class.task_manager::TableViewDelegate"* %31 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %33 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %33, i64 2
  %35 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.task_manager::TableViewDelegate"* %31, i32 7234) #12
  br i1 %36, label %83, label %86

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

41:                                               ; preds = %3, %3, %3
  %42 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %43 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %42, align 8
  %44 = bitcast %"class.task_manager::TableViewDelegate"* %43 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %45 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %45, i64 2
  %47 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.task_manager::TableViewDelegate"* %43, i32 7248) #12
  br i1 %48, label %83, label %49

49:                                               ; preds = %41
  %50 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %42, align 8
  %51 = bitcast %"class.task_manager::TableViewDelegate"* %50 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %52 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %52, i64 2
  %54 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.task_manager::TableViewDelegate"* %50, i32 7249) #12
  br i1 %55, label %83, label %56

56:                                               ; preds = %49
  %57 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %42, align 8
  %58 = bitcast %"class.task_manager::TableViewDelegate"* %57 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %59 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %59, i64 2
  %61 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.task_manager::TableViewDelegate"* %57, i32 7250) #12
  br i1 %62, label %83, label %86

63:                                               ; preds = %3
  %64 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

69:                                               ; preds = %3
  br i1 %2, label %72, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br label %92

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 7
  %74 = load i8, i8* %73, align 8, !range !85
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %75, label %92, label %89

77:                                               ; preds = %3
  %78 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

81:                                               ; preds = %3
  %82 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

83:                                               ; preds = %30, %22, %56, %49, %41
  %84 = phi i32 [ 1024, %30 ], [ 1024, %22 ], [ 64, %56 ], [ 64, %49 ], [ 64, %41 ]
  %85 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br label %89

86:                                               ; preds = %3, %56, %30
  %87 = phi i32 [ 64, %56 ], [ 1024, %30 ], [ 128, %3 ]
  %88 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0
  br i1 %2, label %89, label %92

89:                                               ; preds = %72, %12, %4, %6, %8, %10, %37, %39, %63, %65, %67, %77, %79, %81, %83, %86
  %90 = phi %"class.task_manager::TaskManagerObserver"* [ %85, %83 ], [ %88, %86 ], [ %82, %81 ], [ %80, %79 ], [ %78, %77 ], [ %68, %67 ], [ %66, %65 ], [ %64, %63 ], [ %40, %39 ], [ %38, %37 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ], [ %21, %12 ], [ %76, %72 ]
  %91 = phi i32 [ %84, %83 ], [ %87, %86 ], [ 16384, %81 ], [ 32768, %79 ], [ 8192, %77 ], [ 16, %67 ], [ 32, %65 ], [ 8, %63 ], [ 131072, %39 ], [ 512, %37 ], [ 65536, %10 ], [ 4096, %8 ], [ 2048, %6 ], [ 1, %4 ], [ 4, %12 ], [ 256, %72 ]
  tail call void @_ZN12task_manager19TaskManagerObserver14AddRefreshTypeENS_11RefreshTypeE(%"class.task_manager::TaskManagerObserver"* %90, i32 %91) #12
  br label %95

92:                                               ; preds = %72, %12, %4, %6, %8, %10, %37, %39, %63, %65, %67, %77, %79, %81, %70, %86
  %93 = phi %"class.task_manager::TaskManagerObserver"* [ %71, %70 ], [ %88, %86 ], [ %82, %81 ], [ %80, %79 ], [ %78, %77 ], [ %68, %67 ], [ %66, %65 ], [ %64, %63 ], [ %40, %39 ], [ %38, %37 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ], [ %21, %12 ], [ %76, %72 ]
  %94 = phi i32 [ 256, %70 ], [ %87, %86 ], [ 16384, %81 ], [ 32768, %79 ], [ 8192, %77 ], [ 16, %67 ], [ 32, %65 ], [ 8, %63 ], [ 131072, %39 ], [ 512, %37 ], [ 65536, %10 ], [ 4096, %8 ], [ 2048, %6 ], [ 1, %4 ], [ 4, %12 ], [ 256, %72 ]
  tail call void @_ZN12task_manager19TaskManagerObserver17RemoveRefreshTypeENS_11RefreshTypeE(%"class.task_manager::TaskManagerObserver"* %93, i32 %94) #12
  br label %95

95:                                               ; preds = %89, %92, %3
  ret void
}

declare void @_ZN12task_manager19TaskManagerObserver14AddRefreshTypeENS_11RefreshTypeE(%"class.task_manager::TaskManagerObserver"*, i32) local_unnamed_addr #2

declare void @_ZN12task_manager19TaskManagerObserver17RemoveRefreshTypeENS_11RefreshTypeE(%"class.task_manager::TaskManagerObserver"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager21TaskManagerTableModel14IsTaskKillableEi(%"class.task_manager::TaskManagerTableModel"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 %5
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.task_manager::TaskManagerInterface"* %4 to i1 (%"class.task_manager::TaskManagerInterface"*, i64)***
  %11 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)**, i1 (%"class.task_manager::TaskManagerInterface"*, i64)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %11, i64 1
  %13 = load i1 (%"class.task_manager::TaskManagerInterface"*, i64)*, i1 (%"class.task_manager::TaskManagerInterface"*, i64)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.task_manager::TaskManagerInterface"* %4, i64 %9) #12
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel42RetrieveSavedColumnsSettingsAndUpdateTableEv(%"class.task_manager::TaskManagerTableModel"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"struct.task_manager::TableSortDescriptor", align 4
  %8 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %9 = bitcast %class.BrowserProcess* %8 to %class.PrefService* (%class.BrowserProcess*)***
  %10 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %9, align 8
  %11 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %10, i64 7
  %12 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %11, align 8
  %13 = tail call %class.PrefService* %12(%class.BrowserProcess* %8) #12
  %14 = icmp eq %class.PrefService* %13, null
  br i1 %14, label %188, label %15

15:                                               ; preds = %1
  %16 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %17 = bitcast %class.BrowserProcess* %16 to %class.PrefService* (%class.BrowserProcess*)***
  %18 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %17, align 8
  %19 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %18, i64 7
  %20 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %19, align 8
  %21 = tail call %class.PrefService* %20(%class.BrowserProcess* %16) #12
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kTaskManagerColumnVisibilityE, i64 0, i64 0)) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %15
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %43

38:                                               ; preds = %27
  %39 = trunc i64 %23 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %23, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38, %29
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %40, %38 ], [ %37, %29 ]
  %45 = phi i8* [ %22, %38 ], [ %32, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kTaskManagerColumnVisibilityE, i64 0, i64 0), i64 %23, i1 false) #12
  br label %46

46:                                               ; preds = %38, %43
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %40, %38 ], [ %44, %43 ]
  %48 = phi i8* [ %22, %38 ], [ %45, %43 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %23
  store i8 0, i8* %49, align 1
  %50 = call %"class.base::DictionaryValue"* @_ZNK11PrefService13GetDictionaryERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %46, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  %58 = icmp eq %"class.base::DictionaryValue"* %50, null
  br i1 %58, label %188, label %59

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 1, i8* %4, align 1
  %63 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0)) #12
  %64 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* nonnull %50, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0), i64 %63, %"class.std::__1::basic_string"* nonnull %3) #12
  %65 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager19kSortIsAscendingKeyE, i64 0, i64 0)) #12
  %66 = call zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"* nonnull %50, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager19kSortIsAscendingKeyE, i64 0, i64 0), i64 %65, i8* nonnull %4) #12
  %67 = load i64, i64* @_ZN12task_manager12kColumnsSizeE, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %59
  %70 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %85

71:                                               ; preds = %59
  %72 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %79 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = bitcast %"struct.task_manager::TableSortDescriptor"* %7 to i8*
  %82 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %7, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.task_manager::TableSortDescriptor", %"struct.task_manager::TableSortDescriptor"* %7, i64 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %93

85:                                               ; preds = %185, %69
  %86 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %70, %69 ], [ %79, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  br label %188

93:                                               ; preds = %71, %185
  %94 = phi i64 [ 0, %71 ], [ %186, %185 ]
  %95 = getelementptr inbounds [0 x %"struct.task_manager::TableColumnData"], [0 x %"struct.task_manager::TableColumnData"]* @_ZN12task_manager8kColumnsE, i64 0, i64 %94, i32 0
  %96 = load i32, i32* %95, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 24, i1 false)
  call void @_ZN12task_manager19GetColumnIdAsStringEi(%"class.std::__1::basic_string"* nonnull sret %5, i32 %96) #12
  %97 = load i8, i8* %76, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i64, i64* %74, align 8
  %100 = zext i8 %97 to i64
  %101 = select i1 %98, i64 %99, i64 %100
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %180, label %103

103:                                              ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  %104 = getelementptr inbounds [0 x %"struct.task_manager::TableColumnData"], [0 x %"struct.task_manager::TableColumnData"]* @_ZN12task_manager8kColumnsE, i64 0, i64 %94, i32 8
  %105 = load i8, i8* %104, align 2, !range !85
  store i8 %105, i8* %6, align 1
  %106 = load i8*, i8** %73, align 8
  %107 = select i1 %98, i8* %106, i8* %72
  %108 = call zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"* nonnull %50, i8* %107, i64 %101, i8* nonnull %6) #12
  %109 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %77, align 8
  %110 = load i8, i8* %76, align 1
  %111 = icmp slt i8 %110, 0
  %112 = load i8*, i8** %73, align 8
  %113 = select i1 %111, i8* %112, i8* %72
  %114 = load i64, i64* %74, align 8
  %115 = zext i8 %110 to i64
  %116 = select i1 %111, i64 %114, i64 %115
  %117 = load i8, i8* %6, align 1, !range !85
  %118 = icmp ne i8 %117, 0
  %119 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %109, i8* %113, i64 %116, i1 zeroext %118) #12
  %120 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %78, align 8
  %121 = load i8, i8* %6, align 1, !range !85
  %122 = icmp ne i8 %121, 0
  %123 = bitcast %"class.task_manager::TableViewDelegate"* %120 to void (%"class.task_manager::TableViewDelegate"*, i32, i1)***
  %124 = load void (%"class.task_manager::TableViewDelegate"*, i32, i1)**, void (%"class.task_manager::TableViewDelegate"*, i32, i1)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.task_manager::TableViewDelegate"*, i32, i1)*, void (%"class.task_manager::TableViewDelegate"*, i32, i1)** %124, i64 3
  %126 = load void (%"class.task_manager::TableViewDelegate"*, i32, i1)*, void (%"class.task_manager::TableViewDelegate"*, i32, i1)** %125, align 8
  call void %126(%"class.task_manager::TableViewDelegate"* %120, i32 %96, i1 zeroext %122) #12
  %127 = load i8, i8* %6, align 1, !range !85
  %128 = icmp ne i8 %127, 0
  call void @_ZN12task_manager21TaskManagerTableModel18UpdateRefreshTypesEib(%"class.task_manager::TaskManagerTableModel"* %0, i32 %96, i1 zeroext %128)
  %129 = load i8, i8* %6, align 1, !range !85
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %178, label %131

131:                                              ; preds = %103
  %132 = load i8, i8* %80, align 1
  %133 = icmp slt i8 %132, 0
  %134 = load i64, i64* %62, align 8
  %135 = zext i8 %132 to i64
  %136 = select i1 %133, i64 %134, i64 %135
  %137 = load i8, i8* %76, align 1
  %138 = icmp slt i8 %137, 0
  %139 = load i64, i64* %74, align 8
  %140 = zext i8 %137 to i64
  %141 = select i1 %138, i64 %139, i64 %140
  %142 = icmp eq i64 %136, %141
  br i1 %142, label %143, label %178

143:                                              ; preds = %131
  %144 = load i8*, i8** %61, align 8
  %145 = select i1 %133, i8* %144, i8* %60
  %146 = load i8*, i8** %73, align 8
  %147 = select i1 %138, i8* %146, i8* %72
  %148 = icmp eq i64 %136, 0
  br i1 %133, label %155, label %149

149:                                              ; preds = %143
  br i1 %148, label %171, label %150

150:                                              ; preds = %149
  %151 = ptrtoint i8* %144 to i64
  %152 = trunc i64 %151 to i8
  %153 = load i8, i8* %147, align 1
  %154 = icmp eq i8 %153, %152
  br i1 %154, label %156, label %178

155:                                              ; preds = %143
  br i1 %148, label %171, label %168

156:                                              ; preds = %150, %163
  %157 = phi i64 [ %160, %163 ], [ %135, %150 ]
  %158 = phi i8* [ %161, %163 ], [ %60, %150 ]
  %159 = phi i8* [ %164, %163 ], [ %147, %150 ]
  %160 = add i64 %157, -1
  %161 = getelementptr inbounds i8, i8* %158, i64 1
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %159, i64 1
  %165 = load i8, i8* %161, align 1
  %166 = load i8, i8* %164, align 1
  %167 = icmp eq i8 %165, %166
  br i1 %167, label %156, label %178

168:                                              ; preds = %155
  %169 = call i32 @bcmp(i8* %145, i8* %147, i64 %136) #12
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %178

171:                                              ; preds = %156, %149, %155, %168
  %172 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  %173 = load i8, i8* %4, align 1, !range !85
  store i32 %96, i32* %82, align 4
  store i8 %173, i8* %83, align 4
  %174 = bitcast %"class.task_manager::TableViewDelegate"* %172 to void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)***
  %175 = load void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)**, void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)*, void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)** %175, i64 6
  %177 = load void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)*, void (%"class.task_manager::TableViewDelegate"*, %"struct.task_manager::TableSortDescriptor"*)** %176, align 8
  call void %177(%"class.task_manager::TableViewDelegate"* %172, %"struct.task_manager::TableSortDescriptor"* nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  br label %178

178:                                              ; preds = %163, %150, %168, %171, %131, %103
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  %179 = load i8, i8* %76, align 1
  br label %180

180:                                              ; preds = %93, %178
  %181 = phi i8 [ %179, %178 ], [ %97, %93 ]
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #12
  %186 = add nuw i64 %94, 1
  %187 = icmp ult i64 %186, %67
  br i1 %187, label %93, label %85

188:                                              ; preds = %92, %57, %1
  ret void
}

declare %"class.base::DictionaryValue"* @_ZNK11PrefService13GetDictionaryERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"*, i8*, i64, i8*) local_unnamed_addr #2

declare void @_ZN12task_manager19GetColumnIdAsStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"*, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel20StoreColumnsSettingsEv(%"class.task_manager::TaskManagerTableModel"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %3 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %4 = alloca %"class.base::detail::const_dict_iterator", align 8
  %5 = alloca %"class.base::detail::const_dict_iterator_proxy", align 8
  %6 = alloca %class.ScopedUserPrefUpdate, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::DictionaryValue::Iterator", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %12 = bitcast %class.BrowserProcess* %11 to %class.PrefService* (%class.BrowserProcess*)***
  %13 = load %class.PrefService* (%class.BrowserProcess*)**, %class.PrefService* (%class.BrowserProcess*)*** %12, align 8
  %14 = getelementptr inbounds %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %13, i64 7
  %15 = load %class.PrefService* (%class.BrowserProcess*)*, %class.PrefService* (%class.BrowserProcess*)** %14, align 8
  %16 = tail call %class.PrefService* %15(%class.BrowserProcess* %11) #12
  %17 = icmp eq %class.PrefService* %16, null
  br i1 %17, label %158, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.ScopedUserPrefUpdate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #12
  %20 = getelementptr inbounds %class.ScopedUserPrefUpdate, %class.ScopedUserPrefUpdate* %6, i64 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %22 = bitcast %class.ScopedUserPrefUpdate* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %23 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kTaskManagerColumnVisibilityE, i64 0, i64 0)) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %18
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %43

38:                                               ; preds = %27
  %39 = trunc i64 %23 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %23, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38, %29
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %40, %38 ], [ %37, %29 ]
  %45 = phi i8* [ %21, %38 ], [ %32, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs28kTaskManagerColumnVisibilityE, i64 0, i64 0), i64 %23, i1 false) #12
  br label %46

46:                                               ; preds = %38, %43
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %40, %38 ], [ %44, %43 ]
  %48 = phi i8* [ %21, %38 ], [ %45, %43 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %23
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %class.ScopedUserPrefUpdate, %class.ScopedUserPrefUpdate* %6, i64 0, i32 1
  call void @_ZN6subtle24ScopedUserPrefUpdateBaseC2EP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.subtle::ScopedUserPrefUpdateBase"* %50, %class.PrefService* nonnull %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %46, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %58 = bitcast %"class.base::DictionaryValue::Iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = bitcast %"class.base::DictionaryValue::Iterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  %61 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %59, align 8
  call void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"* nonnull %8, %"class.base::DictionaryValue"* dereferenceable(32) %61) #12
  %62 = getelementptr inbounds %"class.base::DictionaryValue::Iterator", %"class.base::DictionaryValue::Iterator"* %8, i64 0, i32 1
  %63 = bitcast %"class.base::detail::const_dict_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = bitcast %"class.base::detail::const_dict_iterator_proxy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  %65 = bitcast %"class.base::DictionaryValue::Iterator"* %8 to %"class.base::Value"**
  %66 = load %"class.base::Value"*, %"class.base::Value"** %65, align 8
  %67 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %66) #12
  %68 = getelementptr inbounds %"class.base::detail::const_dict_iterator_proxy", %"class.base::detail::const_dict_iterator_proxy"* %5, i64 0, i32 0
  store %"class.base::flat_map"* %67, %"class.base::flat_map"** %68, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %4, %"class.base::detail::const_dict_iterator_proxy"* nonnull %5) #12
  %69 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %62, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  br i1 %69, label %101, label %70

70:                                               ; preds = %57
  %71 = bitcast %class.ScopedUserPrefUpdate* %6 to %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)***
  %72 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %3 to i8*
  %73 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %3, i64 0, i32 0, i32 0
  %74 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %2 to i8*
  %75 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %2, i64 0, i32 0, i32 1
  br label %76

76:                                               ; preds = %70, %76
  %77 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)**, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*** %71, align 8
  %78 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %77, i64 2
  %79 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %78, align 8
  %80 = call %"class.base::DictionaryValue"* %79(%class.ScopedUserPrefUpdate* nonnull %6) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #12
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %3, %"class.base::detail::const_dict_iterator"* %62) #12
  %81 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #12
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %89 = select i1 %85, i8* %87, i8* %88
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %84 to i64
  %93 = select i1 %85, i64 %91, i64 %92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #12
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %2, %"class.base::detail::const_dict_iterator"* %62) #12
  %94 = load %"class.base::Value"*, %"class.base::Value"** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #12
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %9, %"class.base::Value"* %94) #12
  %95 = call %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"* nonnull %9) #12
  %96 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* %80, i8* %89, i64 %93, %"class.base::Value"* %95) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #12
  %97 = call dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"* %62) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  %98 = load %"class.base::Value"*, %"class.base::Value"** %65, align 8
  %99 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %98) #12
  store %"class.base::flat_map"* %99, %"class.base::flat_map"** %68, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %4, %"class.base::detail::const_dict_iterator_proxy"* nonnull %5) #12
  %100 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %62, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  br i1 %100, label %101, label %76

101:                                              ; preds = %76, %57
  %102 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %103 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %102, align 8
  %104 = bitcast %"class.task_manager::TableViewDelegate"* %103 to i1 (%"class.task_manager::TableViewDelegate"*)***
  %105 = load i1 (%"class.task_manager::TableViewDelegate"*)**, i1 (%"class.task_manager::TableViewDelegate"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*)*, i1 (%"class.task_manager::TableViewDelegate"*)** %105, i64 4
  %107 = load i1 (%"class.task_manager::TableViewDelegate"*)*, i1 (%"class.task_manager::TableViewDelegate"*)** %106, align 8
  %108 = call zeroext i1 %107(%"class.task_manager::TableViewDelegate"* %103) #12
  br i1 %108, label %117, label %109

109:                                              ; preds = %101
  %110 = bitcast %class.ScopedUserPrefUpdate* %6 to %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)***
  %111 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)**, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*** %110, align 8
  %112 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %111, i64 2
  %113 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %112, align 8
  %114 = call %"class.base::DictionaryValue"* %113(%class.ScopedUserPrefUpdate* nonnull %6) #12
  %115 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0)) #12
  %116 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %114, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0), i64 %115, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #12
  br label %157

117:                                              ; preds = %101
  %118 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %102, align 8
  %119 = bitcast %"class.task_manager::TableViewDelegate"* %118 to i64 (%"class.task_manager::TableViewDelegate"*)***
  %120 = load i64 (%"class.task_manager::TableViewDelegate"*)**, i64 (%"class.task_manager::TableViewDelegate"*)*** %119, align 8
  %121 = getelementptr inbounds i64 (%"class.task_manager::TableViewDelegate"*)*, i64 (%"class.task_manager::TableViewDelegate"*)** %120, i64 5
  %122 = load i64 (%"class.task_manager::TableViewDelegate"*)*, i64 (%"class.task_manager::TableViewDelegate"*)** %121, align 8
  %123 = call i64 %122(%"class.task_manager::TableViewDelegate"* %118) #12
  %124 = trunc i64 %123 to i32
  %125 = bitcast %class.ScopedUserPrefUpdate* %6 to %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)***
  %126 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)**, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*** %125, align 8
  %127 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %126, i64 2
  %128 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %127, align 8
  %129 = call %"class.base::DictionaryValue"* %128(%class.ScopedUserPrefUpdate* nonnull %6) #12
  %130 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0)) #12
  %131 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  call void @_ZN12task_manager19GetColumnIdAsStringEi(%"class.std::__1::basic_string"* nonnull sret %10, i32 %124) #12
  %132 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = select i1 %135, i8* %137, i8* %131
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %134 to i64
  %142 = select i1 %135, i64 %140, i64 %141
  %143 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %129, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager16kSortColumnIdKeyE, i64 0, i64 0), i64 %130, i8* %138, i64 %142) #12
  %144 = load i8, i8* %133, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %117
  %147 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %117, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  %149 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)**, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*** %125, align 8
  %150 = getelementptr inbounds %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %149, i64 2
  %151 = load %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)*, %"class.base::DictionaryValue"* (%class.ScopedUserPrefUpdate*)** %150, align 8
  %152 = call %"class.base::DictionaryValue"* %151(%class.ScopedUserPrefUpdate* nonnull %6) #12
  %153 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager19kSortIsAscendingKeyE, i64 0, i64 0)) #12
  %154 = and i64 %123, 4294967296
  %155 = icmp ne i64 %154, 0
  %156 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %152, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12task_manager19kSortIsAscendingKeyE, i64 0, i64 0), i64 %153, i1 zeroext %155) #12
  br label %157

157:                                              ; preds = %148, %109
  call void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #12
  call void @_ZN6subtle24ScopedUserPrefUpdateBaseD2Ev(%"class.subtle::ScopedUserPrefUpdateBase"* %50) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #12
  br label %158

158:                                              ; preds = %1, %157
  ret void
}

declare void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"*, %"class.base::DictionaryValue"* dereferenceable(32)) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"*) local_unnamed_addr #2

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED2Ev(%class.ScopedUserPrefUpdate*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.ScopedUserPrefUpdate, %class.ScopedUserPrefUpdate* %0, i64 0, i32 1
  tail call void @_ZN6subtle24ScopedUserPrefUpdateBaseD2Ev(%"class.subtle::ScopedUserPrefUpdateBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager21TaskManagerTableModel22ToggleColumnVisibilityEi(%"class.task_manager::TaskManagerTableModel"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 2
  %5 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %4, align 8
  %6 = bitcast %"class.task_manager::TableViewDelegate"* %5 to i1 (%"class.task_manager::TableViewDelegate"*, i32)***
  %7 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)**, i1 (%"class.task_manager::TableViewDelegate"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %7, i64 2
  %9 = load i1 (%"class.task_manager::TableViewDelegate"*, i32)*, i1 (%"class.task_manager::TableViewDelegate"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.task_manager::TableViewDelegate"* %5, i32 %1) #12
  %11 = xor i1 %10, true
  %12 = load %"class.task_manager::TableViewDelegate"*, %"class.task_manager::TableViewDelegate"** %4, align 8
  %13 = bitcast %"class.task_manager::TableViewDelegate"* %12 to void (%"class.task_manager::TableViewDelegate"*, i32, i1)***
  %14 = load void (%"class.task_manager::TableViewDelegate"*, i32, i1)**, void (%"class.task_manager::TableViewDelegate"*, i32, i1)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.task_manager::TableViewDelegate"*, i32, i1)*, void (%"class.task_manager::TableViewDelegate"*, i32, i1)** %14, i64 3
  %16 = load void (%"class.task_manager::TableViewDelegate"*, i32, i1)*, void (%"class.task_manager::TableViewDelegate"*, i32, i1)** %15, align 8
  tail call void %16(%"class.task_manager::TableViewDelegate"* %12, i32 %1, i1 zeroext %11) #12
  %17 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZN12task_manager19GetColumnIdAsStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1) #12
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i64 %28, i64 %29
  %31 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %18, i8* %26, i64 %30, i1 zeroext %11) #12
  %32 = load i8, i8* %21, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %2
  %35 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %2, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZN12task_manager21TaskManagerTableModel18UpdateRefreshTypesEib(%"class.task_manager::TaskManagerTableModel"* %0, i32 %1, i1 zeroext %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12task_manager21TaskManagerTableModel20GetRowForWebContentsEPN7content11WebContentsE(%"class.task_manager::TaskManagerTableModel"* nocapture readonly, %"class.content::WebContents"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerInterface"** %3, align 8
  %5 = bitcast %"class.task_manager::TaskManagerInterface"* %4 to i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)***
  %6 = load i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)**, i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)*, i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)** %6, i64 37
  %8 = load i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)*, i64 (%"class.task_manager::TaskManagerInterface"*, %"class.content::WebContents"*)** %7, align 8
  %9 = tail call i64 %8(%"class.task_manager::TaskManagerInterface"* %4, %"class.content::WebContents"* %1) #12
  %10 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.task_manager::TaskManagerTableModel", %"class.task_manager::TaskManagerTableModel"* %0, i64 0, i32 5, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %2, %19
  %16 = phi i64* [ %20, %19 ], [ %11, %2 ]
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds i64, i64* %16, i64 1
  %21 = icmp eq i64* %20, %13
  br i1 %21, label %31, label %15

22:                                               ; preds = %15, %2
  %23 = phi i64* [ %11, %2 ], [ %16, %15 ]
  %24 = icmp eq i64* %23, %13
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = ptrtoint i64* %23 to i64
  %27 = ptrtoint i64* %11 to i64
  %28 = sub i64 %26, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = phi i32 [ %30, %25 ], [ -1, %22 ], [ -1, %19 ]
  ret i32 %32
}

declare %"class.task_manager::TaskManagerInterface"* @_ZN12task_manager20TaskManagerInterface14GetTaskManagerEv() local_unnamed_addr #2

declare void @_ZN12task_manager20TaskManagerInterface11AddObserverEPNS_19TaskManagerObserverE(%"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerObserver"*) local_unnamed_addr #2

declare void @_ZN12task_manager20TaskManagerInterface14RemoveObserverEPNS_19TaskManagerObserverE(%"class.task_manager::TaskManagerInterface"*, %"class.task_manager::TaskManagerObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager19TaskManagerObserver42OnTasksRefreshedWithBackgroundCalculationsERKNSt3__16vectorIlNS1_9allocatorIlEEEE(%"class.task_manager::TaskManagerObserver"*, %"class.std::__1::vector.54"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager19TaskManagerObserver18OnTaskUnresponsiveEl(%"class.task_manager::TaskManagerObserver"*, i64) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN2ui10TableModel10GetTooltipEi(%"class.std::__1::basic_string.64"* sret, %"class.ui::TableModel"*, i32) unnamed_addr #2

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.64"* sret, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZN2ui11FormatSpeedEl(%"class.std::__1::basic_string.64"* sret, i64) local_unnamed_addr #2

declare void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"* sret, %"class.std::__1::basic_string.64"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.64"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN4base29TimeDurationFormatWithSecondsENS_9TimeDeltaENS_19DurationFormatWidthEPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i64, i32, %"class.std::__1::basic_string.64"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare void @_ZN4base26TimeFormatShortDateAndTimeERKNS_4TimeE(%"class.std::__1::basic_string.64"* sret, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"*) local_unnamed_addr #2

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.64"* sret, i32, %"class.std::__1::basic_string.64"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.64"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #1 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.64"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.64"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.64"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !218
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !218
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !221, !noalias !218
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !221, !noalias !218
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !218
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !218
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !221, !noalias !218
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !221, !noalias !218
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !218
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !218
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !221, !noalias !218
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !221, !noalias !218
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !218
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !218
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !221, !noalias !218
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !221, !noalias !218
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !223

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !218
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !218
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !221, !noalias !218
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !221, !noalias !218
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !224

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !225

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !226

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !227

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !228

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !229

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !231
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !231
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !234, !noalias !231
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !234, !noalias !231
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !231
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !231
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !234, !noalias !231
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !234, !noalias !231
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !231
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !231
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !234, !noalias !231
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !234, !noalias !231
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !231
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !231
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !234, !noalias !231
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !234, !noalias !231
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !236

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !231
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !231
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !234, !noalias !231
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !234, !noalias !231
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !237

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !238

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !239

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.64"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.64", %"class.std::__1::basic_string.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.64"* sret, i32) local_unnamed_addr #2

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.64"* sret, i32, %"class.std::__1::basic_string.64"* dereferenceable(24), %"class.std::__1::basic_string.64"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.64"* sret, i64) local_unnamed_addr #2

declare void @_ZN2ui20FormatBytesWithUnitsElNS_9DataUnitsEb(%"class.std::__1::basic_string.64"* sret, i64, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8), %"class.base::detail::const_dict_iterator"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"*) local_unnamed_addr #2

declare void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"*) unnamed_addr #4

declare void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* sret, %"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12task_manager28TaskManagerValuesStringifierD2Ev(%"class.task_manager::TaskManagerValuesStringifier"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 6
  %3 = bitcast %"class.std::__1::basic_string.64"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string.64"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 5
  %12 = bitcast %"class.std::__1::basic_string.64"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.64"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 4
  %21 = bitcast %"class.std::__1::basic_string.64"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string.64"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string.64"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string.64"* %29 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string.64"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string.64"* %38 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"class.task_manager::TaskManagerValuesStringifier", %"class.task_manager::TaskManagerValuesStringifier"* %0, i64 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string.64"* %47 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = bitcast %"class.std::__1::basic_string.64"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %46, %52
  %56 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = bitcast %"class.task_manager::TaskManagerValuesStringifier"* %0 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %55, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIlNS_9allocatorIlEEE6assignIPlEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIlNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.54"*, i64*, i64*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.54"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN6subtle24ScopedUserPrefUpdateBaseC2EP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.subtle::ScopedUserPrefUpdateBase"*, %class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EED0Ev(%class.ScopedUserPrefUpdate*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.ScopedUserPrefUpdate, %class.ScopedUserPrefUpdate* %0, i64 0, i32 1
  tail call void @_ZN6subtle24ScopedUserPrefUpdateBaseD2Ev(%"class.subtle::ScopedUserPrefUpdateBase"* %2) #12
  %3 = bitcast %class.ScopedUserPrefUpdate* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::DictionaryValue"* @_ZN20ScopedUserPrefUpdateIN4base15DictionaryValueELNS0_5Value4TypeE6EE3GetEv(%class.ScopedUserPrefUpdate*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.ScopedUserPrefUpdate, %class.ScopedUserPrefUpdate* %0, i64 0, i32 1
  %3 = tail call %"class.base::Value"* @_ZN6subtle24ScopedUserPrefUpdateBase14GetValueOfTypeEN4base5Value4TypeE(%"class.subtle::ScopedUserPrefUpdateBase"* %2, i8 zeroext 6) #12
  %4 = bitcast %"class.base::Value"* %3 to %"class.base::DictionaryValue"*
  ret %"class.base::DictionaryValue"* %4
}

declare %"class.base::Value"* @_ZN6subtle24ScopedUserPrefUpdateBase14GetValueOfTypeEN4base5Value4TypeE(%"class.subtle::ScopedUserPrefUpdateBase"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6subtle24ScopedUserPrefUpdateBaseD2Ev(%"class.subtle::ScopedUserPrefUpdateBase"*) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN12task_manager28TaskManagerValuesStringifier16GetStartTimeTextEN4base4TimeE: argument 0"}
!15 = distinct !{!15, !"_ZN12task_manager28TaskManagerValuesStringifier16GetStartTimeTextEN4base4TimeE"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN12task_manager28TaskManagerValuesStringifier21GetWindowsHandlesTextEll: argument 0"}
!27 = distinct !{!27, !"_ZN12task_manager28TaskManagerValuesStringifier21GetWindowsHandlesTextEll"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN12task_manager28TaskManagerValuesStringifier21GetWindowsHandlesTextEll: argument 0"}
!30 = distinct !{!30, !"_ZN12task_manager28TaskManagerValuesStringifier21GetWindowsHandlesTextEll"}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE: argument 0"}
!51 = distinct !{!51, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE"}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !8}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !8}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE: argument 0"}
!63 = distinct !{!63, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE"}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !8}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !8}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE: argument 0"}
!75 = distinct !{!75, !"_ZN12task_manager28TaskManagerValuesStringifier19GetWebCacheStatTextERKN5blink24WebCacheResourceTypeStatE"}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !8}
!85 = !{i8 0, i8 2}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN12task_manager28TaskManagerValuesStringifier28FormatAllocatedAndUsedMemoryEll: argument 0"}
!88 = distinct !{!88, !"_ZN12task_manager28TaskManagerValuesStringifier28FormatAllocatedAndUsedMemoryEll"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !8}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !8}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !8}
!104 = distinct !{!104, !10}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !8}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111}
!111 = distinct !{!111, !109}
!112 = distinct !{!112, !8}
!113 = distinct !{!113, !10}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !8}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !8}
!122 = distinct !{!122, !10}
!123 = distinct !{!123, !10}
!124 = distinct !{!124, !8}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !8}
!131 = distinct !{!131, !10}
!132 = distinct !{!132, !10}
!133 = distinct !{!133, !8}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !8}
!140 = distinct !{!140, !10}
!141 = distinct !{!141, !10}
!142 = distinct !{!142, !8}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !8}
!149 = distinct !{!149, !10}
!150 = distinct !{!150, !10}
!151 = distinct !{!151, !8}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !8}
!158 = distinct !{!158, !10}
!159 = distinct !{!159, !10}
!160 = distinct !{!160, !8}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !8}
!167 = distinct !{!167, !10}
!168 = distinct !{!168, !10}
!169 = distinct !{!169, !8}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !8}
!176 = distinct !{!176, !10}
!177 = distinct !{!177, !10}
!178 = distinct !{!178, !8}
!179 = !{!180}
!180 = distinct !{!180, !181}
!181 = distinct !{!181, !"LVerDomain"}
!182 = !{!183}
!183 = distinct !{!183, !181}
!184 = distinct !{!184, !8}
!185 = distinct !{!185, !10}
!186 = distinct !{!186, !10}
!187 = distinct !{!187, !8}
!188 = !{!189}
!189 = distinct !{!189, !190}
!190 = distinct !{!190, !"LVerDomain"}
!191 = !{!192}
!192 = distinct !{!192, !190}
!193 = distinct !{!193, !8}
!194 = distinct !{!194, !10}
!195 = distinct !{!195, !10}
!196 = distinct !{!196, !8}
!197 = !{!198}
!198 = distinct !{!198, !199}
!199 = distinct !{!199, !"LVerDomain"}
!200 = !{!201}
!201 = distinct !{!201, !199}
!202 = distinct !{!202, !8}
!203 = distinct !{!203, !10}
!204 = distinct !{!204, !10}
!205 = distinct !{!205, !8}
!206 = !{!207}
!207 = distinct !{!207, !208}
!208 = distinct !{!208, !"LVerDomain"}
!209 = !{!210}
!210 = distinct !{!210, !208}
!211 = distinct !{!211, !8}
!212 = distinct !{!212, !10}
!213 = distinct !{!213, !10}
!214 = distinct !{!214, !8}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZN12task_manager21TaskManagerTableModel7GetIconEi: argument 0"}
!217 = distinct !{!217, !"_ZN12task_manager21TaskManagerTableModel7GetIconEi"}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !8}
!224 = distinct !{!224, !10}
!225 = distinct !{!225, !10}
!226 = distinct !{!226, !8}
!227 = distinct !{!227, !8}
!228 = distinct !{!228, !10}
!229 = distinct !{!229, !230, !8}
!230 = !{!"llvm.loop.unroll.runtime.disable"}
!231 = !{!232}
!232 = distinct !{!232, !233}
!233 = distinct !{!233, !"LVerDomain"}
!234 = !{!235}
!235 = distinct !{!235, !233}
!236 = distinct !{!236, !8}
!237 = distinct !{!237, !10}
!238 = distinct !{!238, !10}
!239 = distinct !{!239, !8}
