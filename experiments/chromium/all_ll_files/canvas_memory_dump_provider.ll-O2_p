; ModuleID = '../../third_party/blink/renderer/platform/instrumentation/canvas_memory_dump_provider.cc'
source_filename = "../../third_party/blink/renderer/platform/instrumentation/canvas_memory_dump_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CanvasMemoryDumpProvider>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CanvasMemoryDumpProvider>::InstanceStorage" = type { %"class.blink::CanvasMemoryDumpProvider"* }
%"class.blink::CanvasMemoryDumpProvider" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.WTF::HashSet" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::CanvasMemoryDumpClient"**, i32, i32, i32, [4 x i8] }>
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.6", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::map.6" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.24 }
%union.anon.24 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.25" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr.39", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.31" }
%"class.std::__1::__tree.31" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink24CanvasMemoryDumpProviderD2Ev = comdat any

$_ZN5blink24CanvasMemoryDumpProviderD0Ev = comdat any

$_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

@_ZZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance = internal global i64 0, align 8
@.str = private unnamed_addr constant [34 x i8] c"canvas/ResourceProvider/SkSurface\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE = external constant [0 x i8], align 1
@_ZTVN5blink24CanvasMemoryDumpProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CanvasMemoryDumpProvider"*)* @_ZN5blink24CanvasMemoryDumpProviderD2Ev to i8*), i8* bitcast (void (%"class.blink::CanvasMemoryDumpProvider"*)* @_ZN5blink24CanvasMemoryDumpProviderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CanvasMemoryDumpProvider"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN5blink24CanvasMemoryDumpProvider12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)] }, align 8
@_ZN4base11trace_event17MemoryDumpManager24kSystemAllocatorPoolNameE = external local_unnamed_addr constant i8*, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink22CanvasMemoryDumpClientEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CanvasMemoryDumpClient *]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CanvasMemoryDumpProvider"* @_ZN5blink24CanvasMemoryDumpProvider8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 72) #10
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 64, i1 false) #10
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24CanvasMemoryDumpProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %8 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #10
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #10
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance) #10
  br label %12

12:                                               ; preds = %3, %6, %0
  %13 = load %"class.blink::CanvasMemoryDumpProvider"*, %"class.blink::CanvasMemoryDumpProvider"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink24CanvasMemoryDumpProvider8InstanceEvE10s_instance, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::CanvasMemoryDumpProvider"* %13
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24CanvasMemoryDumpProvider12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::CanvasMemoryDumpProvider"*, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readonly dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.base::trace_event::MemoryDumpArgs", %"struct.base::trace_event::MemoryDumpArgs"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  %9 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #10
  %12 = icmp eq i32 %11, 0
  br i1 %8, label %13, label %57

13:                                               ; preds = %3
  br i1 %12, label %16, label %14, !prof !3

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #10
  br label %16

16:                                               ; preds = %13, %14
  %17 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %21, i64 %24
  br i1 %19, label %38, label %26

26:                                               ; preds = %16
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"class.blink::CanvasMemoryDumpClient"** [ %33, %32 ], [ %21, %26 ]
  %30 = bitcast %"class.blink::CanvasMemoryDumpClient"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %29, i64 1
  %34 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %33, %25
  br i1 %34, label %38, label %28

35:                                               ; preds = %28, %26
  %36 = phi %"class.blink::CanvasMemoryDumpClient"** [ %21, %26 ], [ %29, %28 ]
  %37 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %36, %25
  br i1 %37, label %38, label %40

38:                                               ; preds = %32, %40, %55, %52, %16, %35
  %39 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  br label %164

40:                                               ; preds = %35, %55
  %41 = phi %"class.blink::CanvasMemoryDumpClient"** [ %49, %55 ], [ %36, %35 ]
  %42 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %41, align 8
  %43 = bitcast %"class.blink::CanvasMemoryDumpClient"* %42 to void (%"class.blink::CanvasMemoryDumpClient"*, %"class.base::trace_event::ProcessMemoryDump"*)***
  %44 = load void (%"class.blink::CanvasMemoryDumpClient"*, %"class.base::trace_event::ProcessMemoryDump"*)**, void (%"class.blink::CanvasMemoryDumpClient"*, %"class.base::trace_event::ProcessMemoryDump"*)*** %43, align 8
  %45 = load void (%"class.blink::CanvasMemoryDumpClient"*, %"class.base::trace_event::ProcessMemoryDump"*)*, void (%"class.blink::CanvasMemoryDumpClient"*, %"class.base::trace_event::ProcessMemoryDump"*)** %44, align 8
  tail call void %45(%"class.blink::CanvasMemoryDumpClient"* %42, %"class.base::trace_event::ProcessMemoryDump"* %2) #10
  %46 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %41, i64 1
  %47 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %46, %25
  br i1 %47, label %38, label %48

48:                                               ; preds = %40, %52
  %49 = phi %"class.blink::CanvasMemoryDumpClient"** [ %53, %52 ], [ %46, %40 ]
  %50 = bitcast %"class.blink::CanvasMemoryDumpClient"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %49, i64 1
  %54 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %53, %25
  br i1 %54, label %38, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %49, %25
  br i1 %56, label %38, label %40

57:                                               ; preds = %3
  br i1 %12, label %60, label %58, !prof !3

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %59) #10
  br label %60

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %64, align 8
  %66 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %65, i64 %68
  br i1 %63, label %84, label %70

70:                                               ; preds = %60
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %70, %76
  %73 = phi %"class.blink::CanvasMemoryDumpClient"** [ %77, %76 ], [ %65, %70 ]
  %74 = bitcast %"class.blink::CanvasMemoryDumpClient"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %79 [
    i64 -1, label %76
    i64 0, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %73, i64 1
  %78 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %77, %69
  br i1 %78, label %84, label %72

79:                                               ; preds = %72, %70
  %80 = phi %"class.blink::CanvasMemoryDumpClient"** [ %65, %70 ], [ %73, %72 ]
  %81 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %80, %69
  br i1 %81, label %84, label %106

82:                                               ; preds = %106, %125, %122
  %83 = load i32, i32* %61, align 4
  br label %84

84:                                               ; preds = %76, %60, %82, %79
  %85 = phi i32 [ %62, %79 ], [ %83, %82 ], [ 0, %60 ], [ %62, %76 ]
  %86 = phi i64 [ 0, %79 ], [ %115, %82 ], [ 0, %60 ], [ 0, %76 ]
  %87 = zext i32 %85 to i64
  %88 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #10
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #10
  %90 = tail call i8* @_Znwm(i64 48) #11
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %93, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %90, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 33, i1 false) #10
  %94 = getelementptr inbounds i8, i8* %90, i64 33
  store i8 0, i8* %94, align 1
  %95 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %96 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %84
  %101 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %84, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #10
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %95, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %86) #10
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %95, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump16kNameObjectCountE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %87) #10
  %103 = call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #10
  %104 = load i8*, i8** @_ZN4base11trace_event17MemoryDumpManager24kSystemAllocatorPoolNameE, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %164, label %127

106:                                              ; preds = %79, %125
  %107 = phi i64 [ %115, %125 ], [ 0, %79 ]
  %108 = phi %"class.blink::CanvasMemoryDumpClient"** [ %119, %125 ], [ %80, %79 ]
  %109 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %108, align 8
  %110 = bitcast %"class.blink::CanvasMemoryDumpClient"* %109 to i64 (%"class.blink::CanvasMemoryDumpClient"*)***
  %111 = load i64 (%"class.blink::CanvasMemoryDumpClient"*)**, i64 (%"class.blink::CanvasMemoryDumpClient"*)*** %110, align 8
  %112 = getelementptr inbounds i64 (%"class.blink::CanvasMemoryDumpClient"*)*, i64 (%"class.blink::CanvasMemoryDumpClient"*)** %111, i64 1
  %113 = load i64 (%"class.blink::CanvasMemoryDumpClient"*)*, i64 (%"class.blink::CanvasMemoryDumpClient"*)** %112, align 8
  %114 = tail call i64 %113(%"class.blink::CanvasMemoryDumpClient"* %109) #10
  %115 = add i64 %114, %107
  %116 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %108, i64 1
  %117 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %116, %69
  br i1 %117, label %82, label %118

118:                                              ; preds = %106, %122
  %119 = phi %"class.blink::CanvasMemoryDumpClient"** [ %123, %122 ], [ %116, %106 ]
  %120 = bitcast %"class.blink::CanvasMemoryDumpClient"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  switch i64 %121, label %125 [
    i64 -1, label %122
    i64 0, label %122
  ]

122:                                              ; preds = %118, %118
  %123 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %119, i64 1
  %124 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %123, %69
  br i1 %124, label %82, label %118

125:                                              ; preds = %118
  %126 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %119, %69
  br i1 %126, label %82, label %106

127:                                              ; preds = %102
  %128 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %95, i64 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #10
  %130 = call i64 @strlen(i8* nonnull %104) #10
  %131 = icmp ugt i64 %130, -17
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %133) #12
  unreachable

134:                                              ; preds = %127
  %135 = icmp ult i64 %130, 23
  br i1 %135, label %145, label %136

136:                                              ; preds = %134
  %137 = add nuw i64 %130, 16
  %138 = and i64 %137, -16
  %139 = call i8* @_Znwm(i64 %138) #11
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %139, i8** %140, align 8
  %141 = or i64 %138, -9223372036854775808
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %130, i64* %143, align 8
  %144 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %150

145:                                              ; preds = %134
  %146 = trunc i64 %130 to i8
  %147 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  store i8 %146, i8* %148, align 1
  %149 = icmp eq i64 %130, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %145, %136
  %151 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %147, %145 ], [ %144, %136 ]
  %152 = phi i8* [ %129, %145 ], [ %139, %136 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %152, i8* nonnull align 1 %104, i64 %130, i1 false) #10
  br label %153

153:                                              ; preds = %145, %150
  %154 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %147, %145 ], [ %151, %150 ]
  %155 = phi i8* [ %129, %145 ], [ %152, %150 ]
  %156 = getelementptr inbounds i8, i8* %155, i64 %130
  store i8 0, i8* %156, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %128, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #11
  br label %163

163:                                              ; preds = %153, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #10
  br label %164

164:                                              ; preds = %163, %102, %38
  ret i1 true
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #3

declare %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasMemoryDumpProvider14RegisterClientEPNS_22CanvasMemoryDumpClientE(%"class.blink::CanvasMemoryDumpProvider"*, %"class.blink::CanvasMemoryDumpClient"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CanvasMemoryDumpClient"*, align 8
  store %"class.blink::CanvasMemoryDumpClient"* %1, %"class.blink::CanvasMemoryDumpClient"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0
  %12 = call { %"class.blink::CanvasMemoryDumpClient"**, i8 } @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.blink::CanvasMemoryDumpClient"** nonnull dereferenceable(8) %3, %"class.blink::CanvasMemoryDumpClient"** nonnull dereferenceable(8) %3) #10
  %13 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CanvasMemoryDumpProvider16UnregisterClientEPNS_22CanvasMemoryDumpClientE(%"class.blink::CanvasMemoryDumpProvider"*, %"class.blink::CanvasMemoryDumpClient"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::CanvasMemoryDumpClient"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %13, align 8
  %15 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %14, null
  %16 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %79, label %18

18:                                               ; preds = %10
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = shl i64 %3, 32
  %22 = xor i64 %21, -1
  %23 = add i64 %22, %3
  %24 = lshr i64 %23, 22
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 13
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 8
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 9
  %32 = lshr i64 %31, 15
  %33 = xor i64 %32, %31
  %34 = shl i64 %33, 27
  %35 = xor i64 %34, -1
  %36 = add i64 %33, %35
  %37 = lshr i64 %36, 31
  %38 = xor i64 %37, %36
  %39 = trunc i64 %38 to i32
  %40 = and i32 %19, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %14, i64 %41
  %43 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %42, align 8
  %44 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %43, %1
  br i1 %44, label %74, label %45

45:                                               ; preds = %18
  %46 = xor i32 %39, -1
  %47 = lshr i32 %39, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %64, %45
  %60 = phi %"class.blink::CanvasMemoryDumpClient"* [ %43, %45 ], [ %70, %64 ]
  %61 = phi i64 [ %41, %45 ], [ %68, %64 ]
  %62 = phi i64 [ 0, %45 ], [ %66, %64 ]
  %63 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %60, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %59
  %65 = icmp eq i64 %62, 0
  %66 = select i1 %65, i64 %58, i64 %62
  %67 = add i64 %66, %61
  %68 = and i64 %67, %20
  %69 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %14, i64 %68
  %70 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %69, align 8
  %71 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %70, %1
  br i1 %71, label %72, label %59

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %14, i64 %68
  br label %74

74:                                               ; preds = %72, %18
  %75 = phi %"class.blink::CanvasMemoryDumpClient"** [ %42, %18 ], [ %73, %72 ]
  %76 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = zext i32 %17 to i64
  br label %82

79:                                               ; preds = %59, %74, %10
  %80 = zext i32 %17 to i64
  %81 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %14, i64 %80
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"class.blink::CanvasMemoryDumpClient"** [ %75, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %14, i64 %83
  %86 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %85, %84
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  store %"class.blink::CanvasMemoryDumpClient"* inttoptr (i64 -1 to %"class.blink::CanvasMemoryDumpClient"*), %"class.blink::CanvasMemoryDumpClient"** %84, align 8
  %88 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  %94 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  store i32 %96, i32* %94, align 4
  %97 = mul i32 %96, 6
  %98 = load i32, i32* %16, align 8
  %99 = icmp ult i32 %97, %98
  %100 = icmp ugt i32 %98, 8
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %87
  %103 = lshr i32 %98, 1
  %104 = zext i32 %103 to i64
  %105 = shl nuw nsw i64 %104, 3
  %106 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %105, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink22CanvasMemoryDumpClientEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 0, i64 %105, i1 false) #10
  %107 = bitcast i8* %106 to %"class.blink::CanvasMemoryDumpClient"**
  %108 = tail call %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"* %12, %"class.blink::CanvasMemoryDumpClient"** %107, i32 %103, %"class.blink::CanvasMemoryDumpClient"** null) #10
  br label %109

109:                                              ; preds = %82, %87, %102
  %110 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CanvasMemoryDumpProviderD2Ev(%"class.blink::CanvasMemoryDumpProvider"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24CanvasMemoryDumpProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %3, align 8
  %5 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %4, null
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CanvasMemoryDumpClient"** %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #10
  store %"class.blink::CanvasMemoryDumpClient"** null, %"class.blink::CanvasMemoryDumpClient"*** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CanvasMemoryDumpProviderD0Ev(%"class.blink::CanvasMemoryDumpProvider"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24CanvasMemoryDumpProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %3, align 8
  %5 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %4, null
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CanvasMemoryDumpClient"** %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #10
  store %"class.blink::CanvasMemoryDumpClient"** null, %"class.blink::CanvasMemoryDumpClient"*** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::CanvasMemoryDumpProvider", %"class.blink::CanvasMemoryDumpProvider"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %9) #10
  %10 = bitcast %"class.blink::CanvasMemoryDumpProvider"* %0 to i8*
  tail call void @free(i8* %10) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CanvasMemoryDumpClient"**, i8 } @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::CanvasMemoryDumpClient"** dereferenceable(8), %"class.blink::CanvasMemoryDumpClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %4, align 8
  %6 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"class.blink::CanvasMemoryDumpClient"** null)
  %9 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::CanvasMemoryDumpClient"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CanvasMemoryDumpClient"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %11, i64 %38
  %40 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %39, align 8
  %41 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::CanvasMemoryDumpClient"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::CanvasMemoryDumpClient"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::CanvasMemoryDumpClient"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::CanvasMemoryDumpClient"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %58, inttoptr (i64 -1 to %"class.blink::CanvasMemoryDumpClient"*)
  %66 = select i1 %65, %"class.blink::CanvasMemoryDumpClient"** %59, %"class.blink::CanvasMemoryDumpClient"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %11, i64 %70
  %72 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %71, align 8
  %73 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::CanvasMemoryDumpClient"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::CanvasMemoryDumpClient"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::CanvasMemoryDumpClient"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::CanvasMemoryDumpClient"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::CanvasMemoryDumpClient"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"class.blink::CanvasMemoryDumpClient"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::CanvasMemoryDumpClient"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::CanvasMemoryDumpClient"**, i8 } undef, %"class.blink::CanvasMemoryDumpClient"** %105, 0
  %107 = insertvalue { %"class.blink::CanvasMemoryDumpClient"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::CanvasMemoryDumpClient"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"*, %"class.blink::CanvasMemoryDumpClient"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink22CanvasMemoryDumpClientEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::CanvasMemoryDumpClient"**
  %37 = call %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"* %0, %"class.blink::CanvasMemoryDumpClient"** %36, i32 %32, %"class.blink::CanvasMemoryDumpClient"** %1) #10
  ret %"class.blink::CanvasMemoryDumpClient"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CanvasMemoryDumpClient"** @_ZN3WTF9HashTableIPN5blink22CanvasMemoryDumpClientES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"*, %"class.blink::CanvasMemoryDumpClient"**, i32, %"class.blink::CanvasMemoryDumpClient"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %9, align 8
  %17 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::CanvasMemoryDumpClient"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::CanvasMemoryDumpClient"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::CanvasMemoryDumpClient"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::CanvasMemoryDumpClient"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %34, i64 %37
  %39 = bitcast %"class.blink::CanvasMemoryDumpClient"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %1, i64 %62
  %64 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %63 to i64
  %65 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %63, align 8
  %66 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::CanvasMemoryDumpClient"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::CanvasMemoryDumpClient"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::CanvasMemoryDumpClient"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %87, null
  %89 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::CanvasMemoryDumpClient"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %93, inttoptr (i64 -1 to %"class.blink::CanvasMemoryDumpClient"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %1, i64 %104
  %106 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %105 to i64
  %107 = load %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %105, align 8
  %108 = icmp eq %"class.blink::CanvasMemoryDumpClient"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::CanvasMemoryDumpClient"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::CanvasMemoryDumpClient"**, %"class.blink::CanvasMemoryDumpClient"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::CanvasMemoryDumpClient"*, %"class.blink::CanvasMemoryDumpClient"** %113, i64 %37
  %115 = icmp eq %"class.blink::CanvasMemoryDumpClient"** %114, %3
  %116 = select i1 %115, %"class.blink::CanvasMemoryDumpClient"** %111, %"class.blink::CanvasMemoryDumpClient"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::CanvasMemoryDumpClient"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::CanvasMemoryDumpClient"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::CanvasMemoryDumpClient"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
