; ModuleID = 'gen/ui/accessibility/mojom/ax_tree_data.mojom-blink.cc'
source_filename = "gen/ui/accessibility/mojom/ax_tree_data.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::blink::AXTreeData" = type <{ %"class.mojo::StructPtr", %"class.mojo::StructPtr", %"class.mojo::StructPtr", %"class.WTF::String", i8, [3 x i8], float, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ax::mojom::blink::AXTreeID"* }
%"class.ax::mojom::blink::AXTreeID" = type { i32, %"union.ax::mojom::blink::AXTreeID::Union_" }
%"union.ax::mojom::blink::AXTreeID::Union_" = type { %"class.base::UnguessableToken"* }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.16", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.10"*, %"class.mojo::ScopedHandleBase.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.mojo::ScopedHandleBase.10" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.mojo::ScopedHandleBase.10"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.19" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.32, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.31", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.32 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.33" }>
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ax::mojom::internal::AXTreeData_Data" = type { %"struct.mojo::internal::StructHeader", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.34", i8, [3 x i8], float, %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.34" = type { i64 }
%"class.mojo::StructPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.ax::mojom::blink::AXTreeData"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

@.str = private unnamed_addr constant [8 x i8] c"tree_id\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"parent_tree_id\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"focused_tree_id\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"doctype\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"loaded\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"loading_progress\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"mimetype\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"focus_id\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"sel_is_backward\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"sel_anchor_object_id\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"sel_anchor_offset\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"sel_anchor_affinity\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"sel_focus_object_id\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"sel_focus_offset\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"sel_focus_affinity\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"root_scroller_id\00", align 1

@_ZN2ax5mojom5blink10AXTreeDataC1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXTreeData"*), void (%"class.ax::mojom::blink::AXTreeData"*)* @_ZN2ax5mojom5blink10AXTreeDataC2Ev
@_ZN2ax5mojom5blink10AXTreeDataC1EN4mojo9StructPtrINS1_8AXTreeIDEEES6_S6_RKN3WTF6StringEbfSA_SA_SA_ibiiNS0_12TextAffinityEiiSB_i = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXTreeData"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.WTF::String"*, i1, float, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i1, i32, i32, i32, i32, i32, i32, i32), void (%"class.ax::mojom::blink::AXTreeData"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.WTF::String"*, i1, float, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i1, i32, i32, i32, i32, i32, i32, i32)* @_ZN2ax5mojom5blink10AXTreeDataC2EN4mojo9StructPtrINS1_8AXTreeIDEEES6_S6_RKN3WTF6StringEbfSA_SA_SA_ibiiNS0_12TextAffinityEiiSB_i
@_ZN2ax5mojom5blink10AXTreeDataD1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXTreeData"*), void (%"class.ax::mojom::blink::AXTreeData"*)* @_ZN2ax5mojom5blink10AXTreeDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ax5mojom5blink10AXTreeDataC2Ev(%"class.ax::mojom::blink::AXTreeData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 13
  %4 = bitcast %"class.ax::mojom::blink::AXTreeData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 33, i1 false)
  %5 = bitcast float* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 33, i1 false)
  %6 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom5blink10AXTreeDataC2EN4mojo9StructPtrINS1_8AXTreeIDEEES6_S6_RKN3WTF6StringEbfSA_SA_SA_ibiiNS0_12TextAffinityEiiSB_i(%"class.ax::mojom::blink::AXTreeData"* nocapture, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i1 zeroext, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #2 align 2 {
  %20 = zext i1 %5 to i8
  %21 = zext i1 %11 to i8
  %22 = bitcast %"class.ax::mojom::blink::AXTreeData"* %0 to i64*
  %23 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %23, align 8
  %24 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  store i64 0, i64* %24, align 8
  %26 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 1
  %27 = bitcast %"class.mojo::StructPtr"* %26 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %28, align 8
  %29 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 0, i64* %29, align 8
  %31 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 2
  %32 = bitcast %"class.mojo::StructPtr"* %31 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %33, align 8
  %34 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #9
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #9
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %19, %40, %55
  %58 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 4
  store i8 %20, i8* %58, align 8
  %59 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 6
  store float %6, float* %59, align 4
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #9
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  tail call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #9
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %91
  tail call void @llvm.trap() #9
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %81, %86, %101
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #9
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #9
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %103, %108, %123
  %126 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 10
  store i32 %10, i32* %126, align 8
  %127 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 11
  store i8 %21, i8* %127, align 4
  %128 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 13
  store i32 %12, i32* %128, align 8
  %129 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 14
  store i32 %13, i32* %129, align 4
  %130 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 15
  store i32 %14, i32* %130, align 8
  %131 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 16
  store i32 %15, i32* %131, align 4
  %132 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 17
  store i32 %16, i32* %132, align 8
  %133 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 18
  store i32 %17, i32* %133, align 4
  %134 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 19
  store i32 %18, i32* %134, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom5blink10AXTreeDataD2Ev(%"class.ax::mojom::blink::AXTreeData"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 8, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 7, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #9
  br label %69

69:                                               ; preds = %52, %65, %68
  %70 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %70, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %70, align 8
  %72 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %71) #9
  %74 = bitcast %"class.ax::mojom::blink::AXTreeID"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %76, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %76, align 8
  %78 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %77) #9
  %80 = bitcast %"class.ax::mojom::blink::AXTreeID"* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %75, %79
  %82 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %82, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %82, align 8
  %84 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %83) #9
  %86 = bitcast %"class.ax::mojom::blink::AXTreeID"* %83 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %81, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ax5mojom5blink10AXTreeData14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ax::mojom::blink::AXTreeData"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedDictionary", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.perfetto::TracedValue", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.perfetto::TracedValue", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.perfetto::TracedValue", align 8
  %26 = alloca %"class.perfetto::TracedValue", align 8
  %27 = alloca %"class.perfetto::TracedValue", align 8
  %28 = alloca %"class.perfetto::TracedValue", align 8
  %29 = alloca %"class.perfetto::TracedValue", align 8
  %30 = alloca %"class.perfetto::TracedValue", align 8
  %31 = alloca %"class.perfetto::TracedValue", align 8
  %32 = alloca %"class.perfetto::TracedValue", align 8
  %33 = alloca %"class.perfetto::TracedValue", align 8
  %34 = alloca %"class.perfetto::TracedValue", align 8
  %35 = alloca %"class.perfetto::TracedValue", align 8
  %36 = alloca %"class.perfetto::TracedValue", align 8
  %37 = alloca %"class.perfetto::TracedValue", align 8
  %38 = alloca %"class.perfetto::TracedValue", align 8
  %39 = alloca %"class.perfetto::TracedValue", align 8
  %40 = bitcast %"class.perfetto::TracedDictionary"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = bitcast %"class.perfetto::TracedDictionary"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %18, %"class.perfetto::TracedValue"* %1) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #9
  %42 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 7, i8* %44, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #9
  %45 = getelementptr inbounds i8, i8* %42, i64 7
  store i8 0, i8* %45, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #9
  %46 = load i8, i8* %44, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %2, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %21, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %52 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9
  %53 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 7, i8* %54, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #9
  %55 = getelementptr inbounds i8, i8* %52, i64 7
  store i8 0, i8* %55, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #9
  %56 = load i8, i8* %54, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %51, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %23, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #9
  %62 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #9
  %63 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 7, i8* %64, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #9
  %65 = getelementptr inbounds i8, i8* %62, i64 7
  store i8 0, i8* %65, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #9
  %66 = load i8, i8* %64, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %68, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %25, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #9
  %72 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 3
  %73 = bitcast %"class.perfetto::TracedValue"* %25 to i8*
  %74 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* nonnull align 8 %73, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %72, %"class.perfetto::TracedValue"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %26, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #9
  %75 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 4
  %76 = bitcast %"class.perfetto::TracedValue"* %26 to i8*
  %77 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* nonnull align 8 %76, i64 16, i1 false) #9
  %78 = load i8, i8* %75, align 1, !range !3
  %79 = icmp ne i8 %78, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %15, i1 zeroext %79) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %27, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #9
  %80 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 6
  %81 = bitcast %"class.perfetto::TracedValue"* %27 to i8*
  %82 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* nonnull align 8 %81, i64 16, i1 false) #9
  %83 = load float, float* %80, align 4
  %84 = fpext float %83 to double
  call void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"* nonnull %14, double %84) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %28, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #9
  %85 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 7
  %86 = bitcast %"class.perfetto::TracedValue"* %28 to i8*
  %87 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* nonnull align 8 %86, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %85, %"class.perfetto::TracedValue"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %29, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #9
  %88 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 8
  %89 = bitcast %"class.perfetto::TracedValue"* %29 to i8*
  %90 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %89, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %88, %"class.perfetto::TracedValue"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %30, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)) #9
  %91 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 9
  %92 = bitcast %"class.perfetto::TracedValue"* %30 to i8*
  %93 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* nonnull align 8 %92, i64 16, i1 false) #9
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %91, %"class.perfetto::TracedValue"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %31, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #9
  %94 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 10
  %95 = bitcast %"class.perfetto::TracedValue"* %31 to i8*
  %96 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* nonnull align 8 %95, i64 16, i1 false) #9
  %97 = load i32, i32* %94, align 4
  %98 = sext i32 %97 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %10, i64 %98) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %32, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)) #9
  %99 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 11
  %100 = bitcast %"class.perfetto::TracedValue"* %32 to i8*
  %101 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* nonnull align 8 %100, i64 16, i1 false) #9
  %102 = load i8, i8* %99, align 1, !range !3
  %103 = icmp ne i8 %102, 0
  call void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"* nonnull %9, i1 zeroext %103) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %33, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0)) #9
  %104 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 13
  %105 = bitcast %"class.perfetto::TracedValue"* %33 to i8*
  %106 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %105, i64 16, i1 false) #9
  %107 = load i32, i32* %104, align 4
  %108 = sext i32 %107 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %8, i64 %108) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %34, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #9
  %109 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 14
  %110 = bitcast %"class.perfetto::TracedValue"* %34 to i8*
  %111 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* nonnull align 8 %110, i64 16, i1 false) #9
  %112 = load i32, i32* %109, align 4
  %113 = sext i32 %112 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %7, i64 %113) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %35, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #9
  %114 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 15
  %115 = bitcast %"class.perfetto::TracedValue"* %35 to i8*
  %116 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* nonnull align 8 %115, i64 16, i1 false) #9
  %117 = load i32, i32* %114, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom12TextAffinityEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %6, i32 %117) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %36, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0)) #9
  %118 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 16
  %119 = bitcast %"class.perfetto::TracedValue"* %36 to i8*
  %120 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* nonnull align 8 %119, i64 16, i1 false) #9
  %121 = load i32, i32* %118, align 4
  %122 = sext i32 %121 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %5, i64 %122) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %37, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #9
  %123 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 17
  %124 = bitcast %"class.perfetto::TracedValue"* %37 to i8*
  %125 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* nonnull align 8 %124, i64 16, i1 false) #9
  %126 = load i32, i32* %123, align 4
  %127 = sext i32 %126 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %4, i64 %127) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %38, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0)) #9
  %128 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 18
  %129 = bitcast %"class.perfetto::TracedValue"* %38 to i8*
  %130 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* nonnull align 8 %129, i64 16, i1 false) #9
  %131 = load i32, i32* %128, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom12TextAffinityEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %3, i32 %131) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #9
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %39, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #9
  %132 = getelementptr inbounds %"class.ax::mojom::blink::AXTreeData", %"class.ax::mojom::blink::AXTreeData"* %0, i64 0, i32 19
  %133 = bitcast %"class.perfetto::TracedValue"* %39 to i8*
  %134 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* nonnull align 8 %133, i64 16, i1 false) #9
  %135 = load i32, i32* %132, align 4
  %136 = sext i32 %135 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %17, i64 %136) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ax5mojom5blink10AXTreeData8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN2ax5mojom8internal15AXTreeData_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #9
  ret i1 %3
}

declare zeroext i1 @_ZN2ax5mojom8internal15AXTreeData_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewENS_9StructPtrINS2_5blink10AXTreeDataEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeData_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr.35"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #10, !noalias !4
  %5 = getelementptr inbounds i8, i8* %4, i64 36
  %6 = getelementptr inbounds i8, i8* %4, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 33, i1 false) #9, !noalias !4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 33, i1 false) #9, !noalias !4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 28, i1 false) #9, !noalias !4
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast i8* %4 to %"class.ax::mojom::blink::AXTreeID"**
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %13, align 8
  br label %17

14:                                               ; preds = %3
  %15 = bitcast i8* %4 to %"class.mojo::StructPtr"*
  %16 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %8, %"class.mojo::Message"* %1, %"class.mojo::StructPtr"* nonnull %15) #9
  br i1 %16, label %17, label %159

17:                                               ; preds = %12, %14
  %18 = getelementptr inbounds i8, i8* %4, i64 8
  %19 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = bitcast i8* %18 to %"class.ax::mojom::blink::AXTreeID"**
  %25 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %24, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %24, align 8
  %26 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %25) #9
  %28 = bitcast %"class.ax::mojom::blink::AXTreeID"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %32

29:                                               ; preds = %17
  %30 = bitcast i8* %18 to %"class.mojo::StructPtr"*
  %31 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %19, %"class.mojo::Message"* %1, %"class.mojo::StructPtr"* %30) #9
  br i1 %31, label %32, label %159

32:                                               ; preds = %27, %23, %29
  %33 = getelementptr inbounds i8, i8* %4, i64 16
  %34 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = bitcast i8* %33 to %"class.ax::mojom::blink::AXTreeID"**
  %40 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %39, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %39, align 8
  %41 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %40) #9
  %43 = bitcast %"class.ax::mojom::blink::AXTreeID"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #10
  br label %47

44:                                               ; preds = %32
  %45 = bitcast i8* %33 to %"class.mojo::StructPtr"*
  %46 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %34, %"class.mojo::Message"* %1, %"class.mojo::StructPtr"* %45) #9
  br i1 %46, label %47, label %159

47:                                               ; preds = %42, %38, %44
  %48 = getelementptr inbounds i8, i8* %4, i64 24
  %49 = bitcast i8* %48 to %"class.WTF::String"*
  %50 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %49) #9
  br label %63

55:                                               ; preds = %47
  %56 = bitcast %"struct.mojo::internal::Pointer.34"* %50 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 %52
  %58 = bitcast i8* %57 to %"class.mojo::internal::Array_Data"*
  %59 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %58, %"class.WTF::String"* %49) #9
  br i1 %59, label %60, label %159

60:                                               ; preds = %55
  %61 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %49) #9
  br i1 %61, label %63, label %62

62:                                               ; preds = %60
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %63

63:                                               ; preds = %54, %62, %60
  %64 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 5
  %65 = load i8, i8* %64, align 1
  %66 = and i8 %65, 1
  %67 = getelementptr inbounds i8, i8* %4, i64 32
  store i8 %66, i8* %67, align 8
  %68 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 7
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 1
  %71 = bitcast i8* %5 to i32*
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %4, i64 40
  %73 = bitcast i8* %72 to %"class.WTF::String"*
  %74 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 8
  %75 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %74, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %63
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %73) #9
  br label %87

79:                                               ; preds = %63
  %80 = bitcast %"struct.mojo::internal::Pointer.34"* %74 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 %76
  %82 = bitcast i8* %81 to %"class.mojo::internal::Array_Data"*
  %83 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %82, %"class.WTF::String"* %73) #9
  br i1 %83, label %84, label %159

84:                                               ; preds = %79
  %85 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %73) #9
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %87

87:                                               ; preds = %78, %86, %84
  %88 = getelementptr inbounds i8, i8* %4, i64 48
  %89 = bitcast i8* %88 to %"class.WTF::String"*
  %90 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 9
  %91 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %90, i64 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %87
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %89) #9
  br label %103

95:                                               ; preds = %87
  %96 = bitcast %"struct.mojo::internal::Pointer.34"* %90 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %92
  %98 = bitcast i8* %97 to %"class.mojo::internal::Array_Data"*
  %99 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %98, %"class.WTF::String"* %89) #9
  br i1 %99, label %100, label %159

100:                                              ; preds = %95
  %101 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %89) #9
  br i1 %101, label %103, label %102

102:                                              ; preds = %100
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %103

103:                                              ; preds = %94, %102, %100
  %104 = getelementptr inbounds i8, i8* %4, i64 56
  %105 = bitcast i8* %104 to %"class.WTF::String"*
  %106 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 10
  %107 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %105) #9
  br label %119

111:                                              ; preds = %103
  %112 = bitcast %"struct.mojo::internal::Pointer.34"* %106 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %108
  %114 = bitcast i8* %113 to %"class.mojo::internal::Array_Data"*
  %115 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %114, %"class.WTF::String"* %105) #9
  br i1 %115, label %116, label %159

116:                                              ; preds = %111
  %117 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %105) #9
  br i1 %117, label %119, label %118

118:                                              ; preds = %116
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %119

119:                                              ; preds = %110, %118, %116
  %120 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 11
  %121 = load i32, i32* %120, align 1
  %122 = getelementptr inbounds i8, i8* %4, i64 64
  %123 = bitcast i8* %122 to i32*
  store i32 %121, i32* %123, align 8
  %124 = load i8, i8* %64, align 1
  %125 = getelementptr inbounds i8, i8* %4, i64 68
  %126 = lshr i8 %124, 1
  %127 = and i8 %126, 1
  store i8 %127, i8* %125, align 4
  %128 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 12
  %129 = load i32, i32* %128, align 1
  %130 = bitcast i8* %6 to i32*
  store i32 %129, i32* %130, align 8
  %131 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 13
  %132 = load i32, i32* %131, align 1
  %133 = getelementptr inbounds i8, i8* %4, i64 76
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %4, i64 80
  %136 = bitcast i8* %135 to i32*
  %137 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 14
  %138 = load i32, i32* %137, align 1
  %139 = icmp ult i32 %138, 3
  %140 = select i1 %139, i32 %138, i32 0
  store i32 %140, i32* %136, align 4
  %141 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 15
  %142 = load i32, i32* %141, align 1
  %143 = getelementptr inbounds i8, i8* %4, i64 84
  %144 = bitcast i8* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 16
  %146 = load i32, i32* %145, align 1
  %147 = getelementptr inbounds i8, i8* %4, i64 88
  %148 = bitcast i8* %147 to i32*
  store i32 %146, i32* %148, align 8
  %149 = getelementptr inbounds i8, i8* %4, i64 92
  %150 = bitcast i8* %149 to i32*
  %151 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 17
  %152 = load i32, i32* %151, align 1
  %153 = icmp ult i32 %152, 3
  %154 = select i1 %153, i32 %152, i32 0
  store i32 %154, i32* %150, align 4
  %155 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 18
  %156 = load i32, i32* %155, align 1
  %157 = getelementptr inbounds i8, i8* %4, i64 96
  %158 = bitcast i8* %157 to i32*
  store i32 %156, i32* %158, align 8
  br label %159

159:                                              ; preds = %111, %79, %14, %29, %44, %55, %95, %119
  %160 = phi i1 [ true, %119 ], [ false, %95 ], [ false, %55 ], [ false, %44 ], [ false, %29 ], [ false, %14 ], [ false, %79 ], [ false, %111 ]
  %161 = getelementptr inbounds %"class.mojo::StructPtr.35", %"class.mojo::StructPtr.35"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.ax::mojom::blink::AXTreeData"*, %"class.ax::mojom::blink::AXTreeData"** %161, align 8
  store %"class.ax::mojom::blink::AXTreeData"* null, %"class.ax::mojom::blink::AXTreeData"** %161, align 8
  %163 = icmp eq %"class.ax::mojom::blink::AXTreeData"* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = bitcast %"class.mojo::StructPtr.35"* %2 to i64*
  store i64 %7, i64* %165, align 8
  br label %173

166:                                              ; preds = %159
  tail call void @_ZN2ax5mojom5blink10AXTreeDataD2Ev(%"class.ax::mojom::blink::AXTreeData"* nonnull %162) #9
  %167 = bitcast %"class.ax::mojom::blink::AXTreeData"* %162 to i8*
  tail call void @_ZdlPv(i8* %167) #10
  %168 = bitcast %"class.mojo::StructPtr.35"* %2 to i64*
  %169 = load %"class.ax::mojom::blink::AXTreeData"*, %"class.ax::mojom::blink::AXTreeData"** %161, align 8
  store i64 %7, i64* %168, align 8
  %170 = icmp eq %"class.ax::mojom::blink::AXTreeData"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %166
  tail call void @_ZN2ax5mojom5blink10AXTreeDataD2Ev(%"class.ax::mojom::blink::AXTreeData"* nonnull %169) #9
  %172 = bitcast %"class.ax::mojom::blink::AXTreeData"* %169 to i8*
  tail call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %164, %166, %171
  ret i1 %160
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue12WriteBooleanEb(%"class.perfetto::TracedValue"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue11WriteDoubleEd(%"class.perfetto::TracedValue"*, double) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #3

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom12TextAffinityEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2ax5mojom5blink10AXTreeData3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN2ax5mojom5blink10AXTreeData3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
