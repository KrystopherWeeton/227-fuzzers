; ModuleID = '../../v8/src/compiler/node.cc'
source_filename = "../../v8/src/compiler/node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.v8::internal::compiler::Node::InputEdges::iterator" = type { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** }
%"class.v8::internal::compiler::Node::Inputs::const_iterator" = type { %"class.v8::internal::compiler::Node"** }
%"class.v8::internal::compiler::Node::UseEdges::iterator" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Node::UseEdges" = type { %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Node::Uses::const_iterator" = type { %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Node::Uses" = type { %"class.v8::internal::compiler::Node"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal8compiler4Node7NewImplIPS2_EES4_PNS0_4ZoneEjPKNS1_8OperatorEiPKT_b = comdat any

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"Use::InputIndexField::is_valid(input_count)\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"IdField::is_valid(id)\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"(NULL)\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.12 = private unnamed_addr constant [41 x i8] c"Node::New() Error: #%d:%s[%d] is nullptr\00", align 1

@_ZN2v88internal8compiler4NodeC1EjPKNS1_8OperatorEii = hidden unnamed_addr alias void (%"class.v8::internal::compiler::Node"*, i32, %"class.v8::internal::compiler::Operator"*, i32, i32), void (%"class.v8::internal::compiler::Node"*, i32, %"class.v8::internal::compiler::Operator"*, i32, i32)* @_ZN2v88internal8compiler4NodeC2EjPKNS1_8OperatorEii

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::compiler::Node::OutOfLineInputs"* @_ZN2v88internal8compiler4Node15OutOfLineInputs3NewEPNS0_4ZoneEi(%"class.v8::internal::Zone"*, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = shl nsw i64 %3, 5
  %5 = or i64 %4, 16
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ugt i64 %5, %10
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %5) #11
  br label %16

14:                                               ; preds = %2
  %15 = add i64 %7, %5
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = mul nsw i64 %3, 24
  %19 = add i64 %17, %18
  %20 = inttoptr i64 %19 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"*
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20, i64 0, i32 2
  store i32 %1, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20, i64 0, i32 1
  store i32 0, i32* %22, align 8
  ret %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node15OutOfLineInputs11ExtractFromEPNS2_3UseEPPS2_i(%"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::Use"* nocapture readonly, %"class.v8::internal::compiler::Node"** nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %0 to i64
  %8 = add i64 %7, 16
  %9 = inttoptr i64 %8 to %"class.v8::internal::compiler::Node"**
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %0, i64 -2, i32 1
  %11 = bitcast i32* %10 to %"struct.v8::internal::compiler::Node::Use"*
  br label %14

12:                                               ; preds = %54, %4
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %0, i64 0, i32 1
  store i32 %3, i32* %13, align 8
  ret void

14:                                               ; preds = %54, %6
  %15 = phi %"struct.v8::internal::compiler::Node::Use"* [ %57, %54 ], [ %1, %6 ]
  %16 = phi i32 [ %59, %54 ], [ 0, %6 ]
  %17 = phi %"class.v8::internal::compiler::Node"** [ %56, %54 ], [ %9, %6 ]
  %18 = phi %"struct.v8::internal::compiler::Node::Use"* [ %58, %54 ], [ %11, %6 ]
  %19 = phi %"class.v8::internal::compiler::Node"** [ %55, %54 ], [ %2, %6 ]
  %20 = shl nuw i32 %16, 1
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %23 = icmp eq %"class.v8::internal::compiler::Node"* %22, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %19, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 0, i32 1
  %26 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %25, align 8
  %27 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %26, null
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 0, i32 0
  %29 = bitcast %"struct.v8::internal::compiler::Node::Use"* %15 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 4
  %32 = bitcast %"struct.v8::internal::compiler::Node::Use"** %31 to i64*
  %33 = bitcast %"struct.v8::internal::compiler::Node::Use"* %26 to i64*
  %34 = select i1 %27, i64* %32, i64* %33
  store i64 %30, i64* %34, align 8
  %35 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %28, align 8
  %36 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %24
  %38 = bitcast %"struct.v8::internal::compiler::Node::Use"** %25 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %35, i64 0, i32 1
  %41 = bitcast %"struct.v8::internal::compiler::Node::Use"** %40 to i64*
  store i64 %39, i64* %41, align 8
  br label %42

42:                                               ; preds = %24, %37
  store %"class.v8::internal::compiler::Node"* %22, %"class.v8::internal::compiler::Node"** %17, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 4
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"struct.v8::internal::compiler::Node::Use"* %18 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %47, align 8
  %48 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %43, align 8
  %49 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %48, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %18, %"struct.v8::internal::compiler::Node::Use"** %51, align 8
  br label %52

52:                                               ; preds = %42, %50
  store %"struct.v8::internal::compiler::Node::Use"* %18, %"struct.v8::internal::compiler::Node::Use"** %43, align 8
  br label %54

53:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %17, align 8
  br label %54

54:                                               ; preds = %53, %52
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, i64 1
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, i64 1
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 -1
  %58 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 -1
  %59 = add nuw nsw i32 %16, 1
  %60 = icmp eq i32 %59, %3
  br i1 %60, label %12, label %14
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nocapture, %"struct.v8::internal::compiler::Node::Use"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %4, null
  %6 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1, i64 0, i32 0
  %7 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %10 = bitcast %"struct.v8::internal::compiler::Node::Use"** %9 to i64*
  %11 = bitcast %"struct.v8::internal::compiler::Node::Use"* %4 to i64*
  %12 = select i1 %5, i64* %10, i64* %11
  store i64 %8, i64* %12, align 8
  %13 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %6, align 8
  %14 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = bitcast %"struct.v8::internal::compiler::Node::Use"** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %13, i64 0, i32 1
  %19 = bitcast %"struct.v8::internal::compiler::Node::Use"** %18 to i64*
  store i64 %17, i64* %19, align 8
  br label %20

20:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nocapture, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %4 = bitcast %"struct.v8::internal::compiler::Node::Use"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %7, align 8
  %8 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %9 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %8, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %1, %"struct.v8::internal::compiler::Node::Use"** %11, align 8
  br label %12

12:                                               ; preds = %2, %10
  store %"struct.v8::internal::compiler::Node::Use"* %1, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node3NewEPNS0_4ZoneEjPKNS1_8OperatorEiPKPS2_b(%"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node7NewImplIPS2_EES4_PNS0_4ZoneEjPKNS1_8OperatorEiPKT_b(%"class.v8::internal::Zone"* %0, i32 %1, %"class.v8::internal::compiler::Operator"* %2, i32 %3, %"class.v8::internal::compiler::Node"** %4, i1 zeroext %5)
  ret %"class.v8::internal::compiler::Node"* %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node7NewImplIPS2_EES4_PNS0_4ZoneEjPKNS1_8OperatorEiPKT_b(%"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #4 comdat align 2 {
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %72

8:                                                ; preds = %6
  %9 = zext i32 %3 to i64
  br label %12

10:                                               ; preds = %21
  %11 = icmp sgt i32 %3, 14
  br i1 %11, label %24, label %72

12:                                               ; preds = %21, %8
  %13 = phi i64 [ 0, %8 ], [ %22, %21 ]
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %13
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::Node"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = trunc i64 %13 to i32
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %2, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i32 %1, i8* %20, i32 %18) #12
  unreachable

21:                                               ; preds = %12
  %22 = add nuw nsw i64 %13, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %10, label %12

24:                                               ; preds = %10
  %25 = add nuw nsw i32 %3, 14
  %26 = select i1 %5, i32 %25, i32 %3
  %27 = sext i32 %26 to i64
  %28 = shl nsw i64 %27, 5
  %29 = or i64 %28, 16
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %31
  %35 = icmp ugt i64 %29, %34
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %24
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %29) #11
  br label %40

38:                                               ; preds = %24
  %39 = add i64 %31, %29
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %36, %38
  %41 = phi i64 [ %37, %36 ], [ %31, %38 ]
  %42 = mul nsw i64 %27, 24
  %43 = add i64 %41, %42
  %44 = inttoptr i64 %43 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"*
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %44, i64 0, i32 2
  store i32 %26, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %44, i64 0, i32 1
  store i32 0, i32* %46, align 8
  %47 = load i64, i64* %30, align 8
  %48 = load i64, i64* %32, align 8
  %49 = sub i64 %48, %47
  %50 = icmp ult i64 %49, 40
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %40
  %52 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 40) #11
  br label %55

53:                                               ; preds = %40
  %54 = add i64 %47, 40
  store i64 %54, i64* %30, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ %52, %51 ], [ %47, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"*
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %57, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %2, %"class.v8::internal::compiler::Operator"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %57, i64 0, i32 1, i32 0
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %57, i64 0, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %57, i64 0, i32 3
  %62 = or i32 %1, 251658240
  store i32 %62, i32* %61, align 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %57, i64 0, i32 4
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %63, align 8
  %64 = icmp ult i32 %1, 16777216
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %55
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

66:                                               ; preds = %55
  %67 = inttoptr i64 %56 to i8*
  %68 = add i64 %56, 32
  %69 = inttoptr i64 %68 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  store %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %44, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %69, align 8
  %70 = inttoptr i64 %43 to i8**
  store i8* %67, i8** %70, align 8
  store i32 %3, i32* %46, align 8
  %71 = add i64 %43, 16
  br label %113

72:                                               ; preds = %6, %10
  %73 = icmp sgt i32 %3, 1
  %74 = select i1 %73, i32 %3, i32 1
  br i1 %5, label %75, label %79

75:                                               ; preds = %72
  %76 = icmp slt i32 %3, 11
  %77 = select i1 %76, i32 %3, i32 11
  %78 = add nsw i32 %77, 3
  br label %79

79:                                               ; preds = %75, %72
  %80 = phi i32 [ %78, %75 ], [ %74, %72 ]
  %81 = sext i32 %80 to i64
  %82 = shl nsw i64 %81, 5
  %83 = add nsw i64 %82, 39
  %84 = and i64 %83, -32
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %88, %86
  %90 = icmp ugt i64 %84, %89
  br i1 %90, label %91, label %93, !prof !2

91:                                               ; preds = %79
  %92 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 %84) #11
  br label %95

93:                                               ; preds = %79
  %94 = add i64 %84, %86
  store i64 %94, i64* %85, align 8
  br label %95

95:                                               ; preds = %91, %93
  %96 = phi i64 [ %92, %91 ], [ %86, %93 ]
  %97 = mul nsw i64 %81, 24
  %98 = add i64 %96, %97
  %99 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"*
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %2, %"class.v8::internal::compiler::Operator"** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 1, i32 0
  store i64 0, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 2
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %104 = shl i32 %3, 24
  %105 = or i32 %104, %1
  %106 = shl i32 %80, 28
  %107 = or i32 %105, %106
  store i32 %107, i32* %103, align 4
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 4
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %108, align 8
  %109 = icmp ult i32 %1, 16777216
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %95
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

111:                                              ; preds = %95
  %112 = add i64 %98, 32
  br label %113

113:                                              ; preds = %111, %66
  %114 = phi i64 [ %71, %66 ], [ %112, %111 ]
  %115 = phi i64 [ %43, %66 ], [ %98, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"* [ %57, %66 ], [ %99, %111 ]
  %117 = phi i32 [ 0, %66 ], [ 1, %111 ]
  %118 = inttoptr i64 %114 to %"class.v8::internal::compiler::Node"**
  br i1 %7, label %119, label %123

119:                                              ; preds = %113
  %120 = inttoptr i64 %115 to %"struct.v8::internal::compiler::Node::Use"*
  %121 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %120, i64 -1
  %122 = zext i32 %3 to i64
  br label %124

123:                                              ; preds = %145, %113
  ret %"class.v8::internal::compiler::Node"* %116

124:                                              ; preds = %145, %119
  %125 = phi i64 [ 0, %119 ], [ %146, %145 ]
  %126 = phi %"class.v8::internal::compiler::Node"** [ %4, %119 ], [ %127, %145 ]
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 1
  %128 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %125
  store %"class.v8::internal::compiler::Node"* %128, %"class.v8::internal::compiler::Node"** %129, align 8
  %130 = sub nsw i64 0, %125
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %121, i64 %130
  %132 = trunc i64 %125 to i32
  %133 = shl i32 %132, 1
  %134 = or i32 %133, %117
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %131, i64 0, i32 2
  store i32 %134, i32* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %128, i64 0, i32 4
  %137 = bitcast %"struct.v8::internal::compiler::Node::Use"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.v8::internal::compiler::Node::Use"* %131 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %131, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %140, align 8
  %141 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %136, align 8
  %142 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %124
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %141, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %131, %"struct.v8::internal::compiler::Node::Use"** %144, align 8
  br label %145

145:                                              ; preds = %124, %143
  store %"struct.v8::internal::compiler::Node::Use"* %131, %"struct.v8::internal::compiler::Node::Use"** %136, align 8
  %146 = add nuw nsw i64 %125, 1
  %147 = icmp eq i64 %146, %122
  br i1 %147, label %123, label %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node5CloneEPNS0_4ZoneEjPKS2_(%"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = lshr i32 %5, 24
  %10 = and i32 %9, 15
  %11 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %12 = add i64 %11, 32
  br label %23

13:                                               ; preds = %3
  %14 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %15 = add i64 %14, 32
  %16 = inttoptr i64 %15 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %17 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = inttoptr i64 %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %13, %8
  %24 = phi i32 [ %10, %8 ], [ %19, %13 ]
  %25 = phi i64 [ %12, %8 ], [ %22, %13 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %29 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node7NewImplIPS2_EES4_PNS0_4ZoneEjPKNS1_8OperatorEiPKT_b(%"class.v8::internal::Zone"* %0, i32 %1, %"class.v8::internal::compiler::Operator"* %28, i32 %24, %"class.v8::internal::compiler::Node"** %26, i1 zeroext false)
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 1, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 1, i32 0
  store i64 %31, i64* %32, align 8
  ret %"class.v8::internal::compiler::Node"* %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 251658240
  %5 = icmp eq i32 %4, 251658240
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = lshr i32 %3, 24
  %8 = and i32 %7, 15
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %10 = add i64 %9, 32
  %11 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %24

12:                                               ; preds = %1
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %14 = add i64 %13, 32
  %15 = inttoptr i64 %14 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %16 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = inttoptr i64 %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  %22 = inttoptr i64 %14 to %"struct.v8::internal::compiler::Node::Use"**
  %23 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %22, align 8
  br label %24

24:                                               ; preds = %12, %6
  %25 = phi i32 [ %8, %6 ], [ %18, %12 ]
  %26 = phi i64 [ %10, %6 ], [ %21, %12 ]
  %27 = phi %"struct.v8::internal::compiler::Node::Use"* [ %11, %6 ], [ %23, %12 ]
  %28 = icmp sgt i32 %25, 0
  br i1 %28, label %29, label %60

29:                                               ; preds = %24
  %30 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  br label %31

31:                                               ; preds = %57, %29
  %32 = phi i32 [ %36, %57 ], [ %25, %29 ]
  %33 = phi %"struct.v8::internal::compiler::Node::Use"* [ %35, %57 ], [ %27, %29 ]
  %34 = phi %"class.v8::internal::compiler::Node"** [ %58, %57 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 -1
  %36 = add nsw i32 %32, -1
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %34, align 8
  %38 = icmp eq %"class.v8::internal::compiler::Node"* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 -1, i32 1
  %41 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %40, align 8
  %42 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %41, null
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %35, i64 0, i32 0
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"* %35 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 4
  %47 = bitcast %"struct.v8::internal::compiler::Node::Use"** %46 to i64*
  %48 = bitcast %"struct.v8::internal::compiler::Node::Use"* %41 to i64*
  %49 = select i1 %42, i64* %47, i64* %48
  store i64 %45, i64* %49, align 8
  %50 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %43, align 8
  %51 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %39
  %53 = bitcast %"struct.v8::internal::compiler::Node::Use"** %40 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 0, i32 1
  %56 = bitcast %"struct.v8::internal::compiler::Node::Use"** %55 to i64*
  store i64 %54, i64* %56, align 8
  br label %57

57:                                               ; preds = %52, %39, %31
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 1
  %59 = icmp sgt i32 %36, 0
  br i1 %59, label %31, label %60

60:                                               ; preds = %57, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node13NullAllInputsEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 251658240
  %5 = icmp eq i32 %4, 251658240
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = lshr i32 %3, 24
  %8 = and i32 %7, 15
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %10 = add i64 %9, 32
  %11 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %24

12:                                               ; preds = %1
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %14 = add i64 %13, 32
  %15 = inttoptr i64 %14 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %16 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = inttoptr i64 %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  %22 = inttoptr i64 %14 to %"struct.v8::internal::compiler::Node::Use"**
  %23 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %22, align 8
  br label %24

24:                                               ; preds = %12, %6
  %25 = phi i32 [ %8, %6 ], [ %18, %12 ]
  %26 = phi i64 [ %10, %6 ], [ %21, %12 ]
  %27 = phi %"struct.v8::internal::compiler::Node::Use"* [ %11, %6 ], [ %23, %12 ]
  %28 = icmp sgt i32 %25, 0
  br i1 %28, label %29, label %60

29:                                               ; preds = %24
  %30 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  br label %31

31:                                               ; preds = %57, %29
  %32 = phi i32 [ %36, %57 ], [ %25, %29 ]
  %33 = phi %"struct.v8::internal::compiler::Node::Use"* [ %35, %57 ], [ %27, %29 ]
  %34 = phi %"class.v8::internal::compiler::Node"** [ %58, %57 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 -1
  %36 = add nsw i32 %32, -1
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %34, align 8
  %38 = icmp eq %"class.v8::internal::compiler::Node"* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %33, i64 -1, i32 1
  %41 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %40, align 8
  %42 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %41, null
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %35, i64 0, i32 0
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"* %35 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 4
  %47 = bitcast %"struct.v8::internal::compiler::Node::Use"** %46 to i64*
  %48 = bitcast %"struct.v8::internal::compiler::Node::Use"* %41 to i64*
  %49 = select i1 %42, i64* %47, i64* %48
  store i64 %45, i64* %49, align 8
  %50 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %43, align 8
  %51 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %39
  %53 = bitcast %"struct.v8::internal::compiler::Node::Use"** %40 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 0, i32 1
  %56 = bitcast %"struct.v8::internal::compiler::Node::Use"** %55 to i64*
  store i64 %54, i64* %56, align 8
  br label %57

57:                                               ; preds = %52, %39, %31
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 1
  %59 = icmp sgt i32 %36, 0
  br i1 %59, label %31, label %60

60:                                               ; preds = %57, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, 24
  %7 = and i32 %6, 15
  %8 = lshr i32 %5, 28
  %9 = icmp ult i32 %7, %8
  br i1 %9, label %10, label %54

10:                                               ; preds = %3
  %11 = and i32 %5, -251658241
  %12 = shl nuw nsw i32 %7, 24
  %13 = add nuw nsw i32 %12, 16777216
  %14 = or i32 %13, %11
  store i32 %14, i32* %4, align 4
  %15 = and i32 %13, 251658240
  %16 = icmp eq i32 %15, 251658240
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %23

19:                                               ; preds = %10
  %20 = inttoptr i64 %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %10, %19
  %24 = phi i64 [ %22, %19 ], [ %18, %10 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %26 = zext i32 %7 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, i64 %26
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %27, align 8
  %28 = load i32, i32* %4, align 4
  %29 = and i32 %28, 251658240
  %30 = icmp eq i32 %29, 251658240
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %36

33:                                               ; preds = %23
  %34 = inttoptr i64 %18 to %"struct.v8::internal::compiler::Node::Use"**
  %35 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %34, align 8
  br label %36

36:                                               ; preds = %31, %33
  %37 = phi %"struct.v8::internal::compiler::Node::Use"* [ %32, %31 ], [ %35, %33 ]
  %38 = xor i32 %7, -1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %37, i64 %39
  %41 = shl nuw nsw i32 %7, 1
  %42 = or i32 %41, 1
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %37, i64 %39, i32 2
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %45 = bitcast %"struct.v8::internal::compiler::Node::Use"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.v8::internal::compiler::Node::Use"* %40 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %37, i64 %39, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %48, align 8
  %49 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %44, align 8
  %50 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %49, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %40, %"struct.v8::internal::compiler::Node::Use"** %52, align 8
  br label %53

53:                                               ; preds = %36, %51
  store %"struct.v8::internal::compiler::Node::Use"* %40, %"struct.v8::internal::compiler::Node::Use"** %44, align 8
  br label %321

54:                                               ; preds = %3
  %55 = and i32 %5, 251658240
  %56 = icmp eq i32 %55, 251658240
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %59 = add i64 %58, 32
  %60 = inttoptr i64 %59 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %61 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %60, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  br label %64

64:                                               ; preds = %54, %57
  %65 = phi i32 [ %63, %57 ], [ %7, %54 ]
  %66 = icmp eq i32 %7, 15
  br i1 %66, label %172, label %67

67:                                               ; preds = %64
  %68 = shl nsw i32 %65, 1
  %69 = add nsw i32 %68, 3
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 5
  %72 = or i64 %71, 16
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %74
  %78 = icmp ugt i64 %72, %77
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %67
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %72) #11
  br label %83

81:                                               ; preds = %67
  %82 = add i64 %74, %72
  store i64 %82, i64* %73, align 8
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = mul nsw i64 %70, 24
  %86 = add i64 %84, %85
  %87 = inttoptr i64 %86 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"*
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, i64 0, i32 2
  store i32 %69, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, i64 0, i32 1
  store i32 0, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::compiler::Node"** %90, align 8
  %91 = load i32, i32* %4, align 4
  %92 = and i32 %91, 251658240
  %93 = icmp eq i32 %92, 251658240
  br i1 %93, label %99, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 -1, i32 1
  %96 = bitcast %"class.v8::internal::compiler::Type"* %95 to %"struct.v8::internal::compiler::Node::Use"*
  %97 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %98 = add i64 %97, 32
  br label %108

99:                                               ; preds = %83
  %100 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %101 = add i64 %100, 32
  %102 = inttoptr i64 %101 to %"struct.v8::internal::compiler::Node::Use"**
  %103 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %102, align 8
  %104 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %103, i64 -1
  %105 = inttoptr i64 %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 16
  br label %108

108:                                              ; preds = %94, %99
  %109 = phi i64 [ %98, %94 ], [ %101, %99 ]
  %110 = phi %"struct.v8::internal::compiler::Node::Use"* [ %96, %94 ], [ %104, %99 ]
  %111 = phi i64 [ %98, %94 ], [ %107, %99 ]
  %112 = icmp sgt i32 %65, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %108
  %114 = inttoptr i64 %111 to %"class.v8::internal::compiler::Node"**
  %115 = add i64 %86, 16
  %116 = inttoptr i64 %115 to %"class.v8::internal::compiler::Node"**
  %117 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, i64 -2, i32 1
  %118 = bitcast i32* %117 to %"struct.v8::internal::compiler::Node::Use"*
  br label %119

119:                                              ; preds = %159, %113
  %120 = phi %"struct.v8::internal::compiler::Node::Use"* [ %162, %159 ], [ %110, %113 ]
  %121 = phi i32 [ %164, %159 ], [ 0, %113 ]
  %122 = phi %"class.v8::internal::compiler::Node"** [ %161, %159 ], [ %116, %113 ]
  %123 = phi %"struct.v8::internal::compiler::Node::Use"* [ %163, %159 ], [ %118, %113 ]
  %124 = phi %"class.v8::internal::compiler::Node"** [ %160, %159 ], [ %114, %113 ]
  %125 = shl nuw i32 %121, 1
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %123, i64 0, i32 2
  store i32 %125, i32* %126, align 8
  %127 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %124, align 8
  %128 = icmp eq %"class.v8::internal::compiler::Node"* %127, null
  br i1 %128, label %158, label %129

129:                                              ; preds = %119
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %124, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %120, i64 0, i32 1
  %131 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %130, align 8
  %132 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %131, null
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %120, i64 0, i32 0
  %134 = bitcast %"struct.v8::internal::compiler::Node::Use"* %120 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %127, i64 0, i32 4
  %137 = bitcast %"struct.v8::internal::compiler::Node::Use"** %136 to i64*
  %138 = bitcast %"struct.v8::internal::compiler::Node::Use"* %131 to i64*
  %139 = select i1 %132, i64* %137, i64* %138
  store i64 %135, i64* %139, align 8
  %140 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %133, align 8
  %141 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %129
  %143 = bitcast %"struct.v8::internal::compiler::Node::Use"** %130 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 0, i32 1
  %146 = bitcast %"struct.v8::internal::compiler::Node::Use"** %145 to i64*
  store i64 %144, i64* %146, align 8
  br label %147

147:                                              ; preds = %142, %129
  store %"class.v8::internal::compiler::Node"* %127, %"class.v8::internal::compiler::Node"** %122, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %127, i64 0, i32 4
  %149 = bitcast %"struct.v8::internal::compiler::Node::Use"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.v8::internal::compiler::Node::Use"* %123 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %123, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %152, align 8
  %153 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %148, align 8
  %154 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %153, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %123, %"struct.v8::internal::compiler::Node::Use"** %156, align 8
  br label %157

157:                                              ; preds = %155, %147
  store %"struct.v8::internal::compiler::Node::Use"* %123, %"struct.v8::internal::compiler::Node::Use"** %148, align 8
  br label %159

158:                                              ; preds = %119
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %122, align 8
  br label %159

159:                                              ; preds = %158, %157
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %124, i64 1
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 1
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %120, i64 -1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %123, i64 -1
  %164 = add nuw nsw i32 %121, 1
  %165 = icmp eq i32 %164, %65
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %108
  store i32 %65, i32* %89, align 8
  %167 = load i32, i32* %4, align 4
  %168 = or i32 %167, 251658240
  store i32 %168, i32* %4, align 4
  %169 = inttoptr i64 %109 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  store %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %169, align 8
  %170 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %171 = add i64 %170, 32
  br label %275

172:                                              ; preds = %64
  %173 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %174 = add i64 %173, 32
  %175 = inttoptr i64 %174 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %176 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %175, align 8
  %177 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %176, i64 0, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %65, %178
  br i1 %179, label %275, label %180

180:                                              ; preds = %172
  %181 = shl nsw i32 %65, 1
  %182 = add nsw i32 %181, 3
  %183 = sext i32 %182 to i64
  %184 = shl nsw i64 %183, 5
  %185 = or i64 %184, 16
  %186 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %189, %187
  %191 = icmp ugt i64 %185, %190
  br i1 %191, label %192, label %194, !prof !2

192:                                              ; preds = %180
  %193 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %185) #11
  br label %196

194:                                              ; preds = %180
  %195 = add i64 %187, %185
  store i64 %195, i64* %186, align 8
  br label %196

196:                                              ; preds = %192, %194
  %197 = phi i64 [ %193, %192 ], [ %187, %194 ]
  %198 = mul nsw i64 %183, 24
  %199 = add i64 %197, %198
  %200 = inttoptr i64 %199 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"*
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %200, i64 0, i32 2
  store i32 %182, i32* %201, align 4
  %202 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %200, i64 0, i32 1
  store i32 0, i32* %202, align 8
  %203 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %200, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::compiler::Node"** %203, align 8
  %204 = load i32, i32* %4, align 4
  %205 = and i32 %204, 251658240
  %206 = icmp eq i32 %205, 251658240
  br i1 %206, label %210, label %207

207:                                              ; preds = %196
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 -1, i32 1
  %209 = bitcast %"class.v8::internal::compiler::Type"* %208 to %"struct.v8::internal::compiler::Node::Use"*
  br label %217

210:                                              ; preds = %196
  %211 = inttoptr i64 %174 to %"struct.v8::internal::compiler::Node::Use"**
  %212 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %211, align 8
  %213 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %212, i64 -1
  %214 = inttoptr i64 %174 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 16
  br label %217

217:                                              ; preds = %207, %210
  %218 = phi %"struct.v8::internal::compiler::Node::Use"* [ %209, %207 ], [ %213, %210 ]
  %219 = phi i64 [ %174, %207 ], [ %216, %210 ]
  %220 = icmp sgt i32 %65, 0
  br i1 %220, label %221, label %274

221:                                              ; preds = %217
  %222 = inttoptr i64 %219 to %"class.v8::internal::compiler::Node"**
  %223 = add i64 %199, 16
  %224 = inttoptr i64 %223 to %"class.v8::internal::compiler::Node"**
  %225 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %200, i64 -2, i32 1
  %226 = bitcast i32* %225 to %"struct.v8::internal::compiler::Node::Use"*
  br label %227

227:                                              ; preds = %267, %221
  %228 = phi %"struct.v8::internal::compiler::Node::Use"* [ %270, %267 ], [ %218, %221 ]
  %229 = phi i32 [ %272, %267 ], [ 0, %221 ]
  %230 = phi %"class.v8::internal::compiler::Node"** [ %269, %267 ], [ %224, %221 ]
  %231 = phi %"struct.v8::internal::compiler::Node::Use"* [ %271, %267 ], [ %226, %221 ]
  %232 = phi %"class.v8::internal::compiler::Node"** [ %268, %267 ], [ %222, %221 ]
  %233 = shl nuw i32 %229, 1
  %234 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %231, i64 0, i32 2
  store i32 %233, i32* %234, align 8
  %235 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, align 8
  %236 = icmp eq %"class.v8::internal::compiler::Node"* %235, null
  br i1 %236, label %266, label %237

237:                                              ; preds = %227
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %232, align 8
  %238 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %228, i64 0, i32 1
  %239 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %238, align 8
  %240 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %239, null
  %241 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %228, i64 0, i32 0
  %242 = bitcast %"struct.v8::internal::compiler::Node::Use"* %228 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %235, i64 0, i32 4
  %245 = bitcast %"struct.v8::internal::compiler::Node::Use"** %244 to i64*
  %246 = bitcast %"struct.v8::internal::compiler::Node::Use"* %239 to i64*
  %247 = select i1 %240, i64* %245, i64* %246
  store i64 %243, i64* %247, align 8
  %248 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %241, align 8
  %249 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %237
  %251 = bitcast %"struct.v8::internal::compiler::Node::Use"** %238 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %248, i64 0, i32 1
  %254 = bitcast %"struct.v8::internal::compiler::Node::Use"** %253 to i64*
  store i64 %252, i64* %254, align 8
  br label %255

255:                                              ; preds = %250, %237
  store %"class.v8::internal::compiler::Node"* %235, %"class.v8::internal::compiler::Node"** %230, align 8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %235, i64 0, i32 4
  %257 = bitcast %"struct.v8::internal::compiler::Node::Use"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"struct.v8::internal::compiler::Node::Use"* %231 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %231, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %260, align 8
  %261 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %256, align 8
  %262 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %261, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %231, %"struct.v8::internal::compiler::Node::Use"** %264, align 8
  br label %265

265:                                              ; preds = %263, %255
  store %"struct.v8::internal::compiler::Node::Use"* %231, %"struct.v8::internal::compiler::Node::Use"** %256, align 8
  br label %267

266:                                              ; preds = %227
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %230, align 8
  br label %267

267:                                              ; preds = %266, %265
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 1
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %230, i64 1
  %270 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %228, i64 -1
  %271 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %231, i64 -1
  %272 = add nuw nsw i32 %229, 1
  %273 = icmp eq i32 %272, %65
  br i1 %273, label %274, label %227

274:                                              ; preds = %267, %217
  store i32 %65, i32* %202, align 8
  store %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %200, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %175, align 8
  br label %275

275:                                              ; preds = %172, %274, %166
  %276 = phi i64 [ %174, %172 ], [ %174, %274 ], [ %171, %166 ]
  %277 = phi %"struct.v8::internal::compiler::Node::OutOfLineInputs"* [ %176, %172 ], [ %200, %274 ], [ %87, %166 ]
  %278 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %277, i64 0, i32 1
  %279 = load i32, i32* %278, align 8
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %278, align 8
  %281 = load i32, i32* %4, align 4
  %282 = and i32 %281, 251658240
  %283 = icmp eq i32 %282, 251658240
  br i1 %283, label %284, label %288

284:                                              ; preds = %275
  %285 = inttoptr i64 %276 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = add i64 %286, 16
  br label %288

288:                                              ; preds = %275, %284
  %289 = phi i64 [ %287, %284 ], [ %276, %275 ]
  %290 = inttoptr i64 %289 to %"class.v8::internal::compiler::Node"**
  %291 = sext i32 %65 to i64
  %292 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, i64 %291
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %292, align 8
  %293 = load i32, i32* %4, align 4
  %294 = and i32 %293, 251658240
  %295 = icmp eq i32 %294, 251658240
  br i1 %295, label %298, label %296

296:                                              ; preds = %288
  %297 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %301

298:                                              ; preds = %288
  %299 = inttoptr i64 %276 to %"struct.v8::internal::compiler::Node::Use"**
  %300 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %299, align 8
  br label %301

301:                                              ; preds = %296, %298
  %302 = phi %"struct.v8::internal::compiler::Node::Use"* [ %297, %296 ], [ %300, %298 ]
  %303 = xor i32 %65, -1
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %302, i64 %304
  %306 = icmp sgt i32 %65, -1
  br i1 %306, label %308, label %307, !prof !3

307:                                              ; preds = %301
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

308:                                              ; preds = %301
  %309 = shl i32 %65, 1
  %310 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %302, i64 %304, i32 2
  store i32 %309, i32* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %312 = bitcast %"struct.v8::internal::compiler::Node::Use"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"struct.v8::internal::compiler::Node::Use"* %305 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %302, i64 %304, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %315, align 8
  %316 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %311, align 8
  %317 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %316, null
  br i1 %317, label %320, label %318

318:                                              ; preds = %308
  %319 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %316, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %305, %"struct.v8::internal::compiler::Node::Use"** %319, align 8
  br label %320

320:                                              ; preds = %308, %318
  store %"struct.v8::internal::compiler::Node::Use"* %305, %"struct.v8::internal::compiler::Node::Use"** %311, align 8
  br label %321

321:                                              ; preds = %320, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = lshr i32 %6, 24
  %11 = and i32 %10, 15
  %12 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %13 = add i64 %12, 32
  br label %24

14:                                               ; preds = %4
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %16 = add i64 %15, 32
  %17 = inttoptr i64 %16 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %18 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = inttoptr i64 %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %9, %14
  %25 = phi i64 [ %13, %9 ], [ %23, %14 ]
  %26 = phi i32 [ %11, %9 ], [ %20, %14 ]
  %27 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %28 = add nsw i32 %26, -1
  %29 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %30
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::Zone"* %1, %"class.v8::internal::compiler::Node"* %32)
  %33 = load i32, i32* %5, align 4
  %34 = and i32 %33, 251658240
  %35 = icmp eq i32 %34, 251658240
  br i1 %35, label %39, label %36

36:                                               ; preds = %24
  %37 = lshr i32 %33, 24
  %38 = and i32 %37, 15
  br label %44

39:                                               ; preds = %24
  %40 = inttoptr i64 %27 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %41 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %36, %39
  %45 = phi i32 [ %38, %36 ], [ %43, %39 ]
  %46 = add i32 %45, -1
  %47 = icmp sgt i32 %46, %2
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = inttoptr i64 %27 to i64*
  %50 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  %51 = inttoptr i64 %27 to %"struct.v8::internal::compiler::Node::Use"**
  %52 = sext i32 %46 to i64
  %53 = sext i32 %2 to i64
  br label %115

54:                                               ; preds = %174
  %55 = load i32, i32* %5, align 4
  br label %56

56:                                               ; preds = %54, %44
  %57 = phi i32 [ %55, %54 ], [ %33, %44 ]
  %58 = and i32 %57, 251658240
  %59 = icmp eq i32 %58, 251658240
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = inttoptr i64 %27 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 16
  br label %64

64:                                               ; preds = %56, %60
  %65 = phi i64 [ %63, %60 ], [ %27, %56 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = sext i32 %2 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, i64 %67
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::Node"* %69, %3
  br i1 %70, label %114, label %71

71:                                               ; preds = %64
  br i1 %59, label %74, label %72

72:                                               ; preds = %71
  %73 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %77

74:                                               ; preds = %71
  %75 = inttoptr i64 %27 to %"struct.v8::internal::compiler::Node::Use"**
  %76 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %75, align 8
  br label %77

77:                                               ; preds = %74, %72
  %78 = phi %"struct.v8::internal::compiler::Node::Use"* [ %73, %72 ], [ %76, %74 ]
  %79 = xor i32 %2, -1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %78, i64 %80
  %82 = icmp eq %"class.v8::internal::compiler::Node"* %69, null
  br i1 %82, label %101, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %78, i64 %80, i32 1
  %85 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %84, align 8
  %86 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %85, null
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %81, i64 0, i32 0
  %88 = bitcast %"struct.v8::internal::compiler::Node::Use"* %81 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %69, i64 0, i32 4
  %91 = bitcast %"struct.v8::internal::compiler::Node::Use"** %90 to i64*
  %92 = bitcast %"struct.v8::internal::compiler::Node::Use"* %85 to i64*
  %93 = select i1 %86, i64* %91, i64* %92
  store i64 %89, i64* %93, align 8
  %94 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %87, align 8
  %95 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %83
  %97 = bitcast %"struct.v8::internal::compiler::Node::Use"** %84 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %94, i64 0, i32 1
  %100 = bitcast %"struct.v8::internal::compiler::Node::Use"** %99 to i64*
  store i64 %98, i64* %100, align 8
  br label %101

101:                                              ; preds = %96, %83, %77
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %68, align 8
  %102 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 4
  %105 = bitcast %"struct.v8::internal::compiler::Node::Use"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"struct.v8::internal::compiler::Node::Use"* %81 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %78, i64 %80, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %108, align 8
  %109 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %104, align 8
  %110 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %109, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %81, %"struct.v8::internal::compiler::Node::Use"** %112, align 8
  br label %113

113:                                              ; preds = %111, %103
  store %"struct.v8::internal::compiler::Node::Use"* %81, %"struct.v8::internal::compiler::Node::Use"** %104, align 8
  br label %114

114:                                              ; preds = %64, %101, %113
  ret void

115:                                              ; preds = %177, %48
  %116 = phi i32 [ %33, %48 ], [ %179, %177 ]
  %117 = phi i64 [ %52, %48 ], [ %175, %177 ]
  %118 = phi i32 [ %45, %48 ], [ %178, %177 ]
  %119 = add nsw i32 %118, -2
  %120 = and i32 %116, 251658240
  %121 = icmp eq i32 %120, 251658240
  br i1 %121, label %122, label %125

122:                                              ; preds = %115
  %123 = load i64, i64* %49, align 8
  %124 = add i64 %123, 16
  br label %125

125:                                              ; preds = %115, %122
  %126 = phi i64 [ %124, %122 ], [ %27, %115 ]
  %127 = inttoptr i64 %126 to %"class.v8::internal::compiler::Node"**
  %128 = sext i32 %119 to i64
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 %128
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 %117
  %131 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, align 8
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, align 8
  %133 = icmp eq %"class.v8::internal::compiler::Node"* %132, %131
  br i1 %133, label %174, label %134

134:                                              ; preds = %125
  br i1 %121, label %135, label %137

135:                                              ; preds = %134
  %136 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %51, align 8
  br label %137

137:                                              ; preds = %134, %135
  %138 = phi %"struct.v8::internal::compiler::Node::Use"* [ %136, %135 ], [ %50, %134 ]
  %139 = sub i32 0, %118
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %138, i64 %140
  %142 = icmp eq %"class.v8::internal::compiler::Node"* %132, null
  br i1 %142, label %161, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %138, i64 %140, i32 1
  %145 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %144, align 8
  %146 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %145, null
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %141, i64 0, i32 0
  %148 = bitcast %"struct.v8::internal::compiler::Node::Use"* %141 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %132, i64 0, i32 4
  %151 = bitcast %"struct.v8::internal::compiler::Node::Use"** %150 to i64*
  %152 = bitcast %"struct.v8::internal::compiler::Node::Use"* %145 to i64*
  %153 = select i1 %146, i64* %151, i64* %152
  store i64 %149, i64* %153, align 8
  %154 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %147, align 8
  %155 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %143
  %157 = bitcast %"struct.v8::internal::compiler::Node::Use"** %144 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %154, i64 0, i32 1
  %160 = bitcast %"struct.v8::internal::compiler::Node::Use"** %159 to i64*
  store i64 %158, i64* %160, align 8
  br label %161

161:                                              ; preds = %156, %143, %137
  store %"class.v8::internal::compiler::Node"* %131, %"class.v8::internal::compiler::Node"** %130, align 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"* %131, null
  br i1 %162, label %174, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %131, i64 0, i32 4
  %165 = bitcast %"struct.v8::internal::compiler::Node::Use"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::compiler::Node::Use"* %141 to i64*
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %138, i64 %140, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %168, align 8
  %169 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %164, align 8
  %170 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %169, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %141, %"struct.v8::internal::compiler::Node::Use"** %172, align 8
  br label %173

173:                                              ; preds = %171, %163
  store %"struct.v8::internal::compiler::Node::Use"* %141, %"struct.v8::internal::compiler::Node::Use"** %164, align 8
  br label %174

174:                                              ; preds = %125, %161, %173
  %175 = add nsw i64 %117, -1
  %176 = icmp sgt i64 %175, %53
  br i1 %176, label %177, label %54

177:                                              ; preds = %174
  %178 = trunc i64 %117 to i32
  %179 = load i32, i32* %5, align 4
  br label %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node12InsertInputsEPNS0_4ZoneEii(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %3, 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 251658240
  %9 = icmp eq i32 %8, 251658240
  br i1 %5, label %10, label %15

10:                                               ; preds = %4
  %11 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %12 = add i64 %11, 32
  %13 = inttoptr i64 %12 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %14 = inttoptr i64 %12 to i64*
  br label %44

15:                                               ; preds = %63, %4
  %16 = phi i32 [ %7, %4 ], [ %71, %63 ]
  %17 = phi i1 [ %9, %4 ], [ %73, %63 ]
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = lshr i32 %16, 24
  %20 = and i32 %19, 15
  br label %28

21:                                               ; preds = %15
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %23 = add i64 %22, 32
  %24 = inttoptr i64 %23 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %25 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  br label %28

28:                                               ; preds = %18, %21
  %29 = phi i32 [ %20, %18 ], [ %27, %21 ]
  %30 = xor i32 %3, -1
  %31 = add i32 %29, %30
  %32 = icmp slt i32 %2, %3
  %33 = select i1 %32, i32 %3, i32 %2
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %75, label %35

35:                                               ; preds = %28
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %37 = add i64 %36, 32
  %38 = inttoptr i64 %37 to i64*
  %39 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  %40 = inttoptr i64 %37 to %"struct.v8::internal::compiler::Node::Use"**
  %41 = sext i32 %31 to i64
  %42 = sext i32 %3 to i64
  %43 = sext i32 %33 to i64
  br label %84

44:                                               ; preds = %63, %10
  %45 = phi i1 [ %9, %10 ], [ %73, %63 ]
  %46 = phi i32 [ %7, %10 ], [ %71, %63 ]
  %47 = phi i32 [ 0, %10 ], [ %70, %63 ]
  br i1 %45, label %54, label %48

48:                                               ; preds = %44
  %49 = lshr i32 %46, 24
  %50 = and i32 %49, 15
  %51 = sub nsw i32 %50, %3
  %52 = icmp sgt i32 %51, 0
  %53 = select i1 %52, i32 %51, i32 0
  br label %63

54:                                               ; preds = %44
  %55 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %13, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sub nsw i32 %57, %3
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  %61 = load i64, i64* %14, align 8
  %62 = add i64 %61, 16
  br label %63

63:                                               ; preds = %48, %54
  %64 = phi i32 [ %53, %48 ], [ %60, %54 ]
  %65 = phi i64 [ %12, %48 ], [ %62, %54 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, i64 %67
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::Zone"* %1, %"class.v8::internal::compiler::Node"* %69)
  %70 = add nuw nsw i32 %47, 1
  %71 = load i32, i32* %6, align 4
  %72 = and i32 %71, 251658240
  %73 = icmp eq i32 %72, 251658240
  %74 = icmp eq i32 %70, %3
  br i1 %74, label %15, label %44

75:                                               ; preds = %142, %28
  br i1 %5, label %76, label %147

76:                                               ; preds = %75
  %77 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %78 = add i64 %77, 32
  %79 = inttoptr i64 %78 to i64*
  %80 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  %81 = inttoptr i64 %78 to %"struct.v8::internal::compiler::Node::Use"**
  %82 = sext i32 %2 to i64
  %83 = zext i32 %3 to i64
  br label %148

84:                                               ; preds = %144, %35
  %85 = phi i32 [ %146, %144 ], [ %16, %35 ]
  %86 = phi i64 [ %145, %144 ], [ %41, %35 ]
  %87 = sub nsw i64 %86, %42
  %88 = and i32 %85, 251658240
  %89 = icmp eq i32 %88, 251658240
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = load i64, i64* %38, align 8
  %92 = add i64 %91, 16
  br label %93

93:                                               ; preds = %84, %90
  %94 = phi i64 [ %92, %90 ], [ %37, %84 ]
  %95 = inttoptr i64 %94 to %"class.v8::internal::compiler::Node"**
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %86
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %87
  %98 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %97, align 8
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, align 8
  %100 = icmp eq %"class.v8::internal::compiler::Node"* %99, %98
  br i1 %100, label %142, label %101

101:                                              ; preds = %93
  br i1 %89, label %102, label %104

102:                                              ; preds = %101
  %103 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %40, align 8
  br label %104

104:                                              ; preds = %101, %102
  %105 = phi %"struct.v8::internal::compiler::Node::Use"* [ %103, %102 ], [ %39, %101 ]
  %106 = shl i64 %86, 32
  %107 = ashr exact i64 %106, 32
  %108 = xor i64 %107, -1
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %105, i64 %108
  %110 = icmp eq %"class.v8::internal::compiler::Node"* %99, null
  br i1 %110, label %129, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %105, i64 %108, i32 1
  %113 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %112, align 8
  %114 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %113, null
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %109, i64 0, i32 0
  %116 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 4
  %119 = bitcast %"struct.v8::internal::compiler::Node::Use"** %118 to i64*
  %120 = bitcast %"struct.v8::internal::compiler::Node::Use"* %113 to i64*
  %121 = select i1 %114, i64* %119, i64* %120
  store i64 %117, i64* %121, align 8
  %122 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %115, align 8
  %123 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %111
  %125 = bitcast %"struct.v8::internal::compiler::Node::Use"** %112 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %122, i64 0, i32 1
  %128 = bitcast %"struct.v8::internal::compiler::Node::Use"** %127 to i64*
  store i64 %126, i64* %128, align 8
  br label %129

129:                                              ; preds = %124, %111, %104
  store %"class.v8::internal::compiler::Node"* %98, %"class.v8::internal::compiler::Node"** %96, align 8
  %130 = icmp eq %"class.v8::internal::compiler::Node"* %98, null
  br i1 %130, label %142, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 4
  %133 = bitcast %"struct.v8::internal::compiler::Node::Use"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %105, i64 %108, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %136, align 8
  %137 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %132, align 8
  %138 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %137, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %109, %"struct.v8::internal::compiler::Node::Use"** %140, align 8
  br label %141

141:                                              ; preds = %139, %131
  store %"struct.v8::internal::compiler::Node::Use"* %109, %"struct.v8::internal::compiler::Node::Use"** %132, align 8
  br label %142

142:                                              ; preds = %93, %129, %141
  %143 = icmp sgt i64 %86, %43
  br i1 %143, label %144, label %75

144:                                              ; preds = %142
  %145 = add nsw i64 %86, -1
  %146 = load i32, i32* %6, align 4
  br label %84

147:                                              ; preds = %190, %75
  ret void

148:                                              ; preds = %190, %76
  %149 = phi i64 [ 0, %76 ], [ %191, %190 ]
  %150 = add nsw i64 %149, %82
  %151 = load i32, i32* %6, align 4
  %152 = and i32 %151, 251658240
  %153 = icmp eq i32 %152, 251658240
  br i1 %153, label %154, label %157

154:                                              ; preds = %148
  %155 = load i64, i64* %79, align 8
  %156 = add i64 %155, 16
  br label %157

157:                                              ; preds = %148, %154
  %158 = phi i64 [ %156, %154 ], [ %78, %148 ]
  %159 = inttoptr i64 %158 to %"class.v8::internal::compiler::Node"**
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, i64 %150
  %161 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, align 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"* %161, null
  br i1 %162, label %190, label %163

163:                                              ; preds = %157
  br i1 %153, label %164, label %166

164:                                              ; preds = %163
  %165 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %81, align 8
  br label %166

166:                                              ; preds = %163, %164
  %167 = phi %"struct.v8::internal::compiler::Node::Use"* [ %165, %164 ], [ %80, %163 ]
  %168 = shl i64 %150, 32
  %169 = ashr exact i64 %168, 32
  %170 = xor i64 %169, -1
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %167, i64 %170
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %167, i64 %170, i32 1
  %173 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %172, align 8
  %174 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %173, null
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %171, i64 0, i32 0
  %176 = bitcast %"struct.v8::internal::compiler::Node::Use"* %171 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %161, i64 0, i32 4
  %179 = bitcast %"struct.v8::internal::compiler::Node::Use"** %178 to i64*
  %180 = bitcast %"struct.v8::internal::compiler::Node::Use"* %173 to i64*
  %181 = select i1 %174, i64* %179, i64* %180
  store i64 %177, i64* %181, align 8
  %182 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %175, align 8
  %183 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %166
  %185 = bitcast %"struct.v8::internal::compiler::Node::Use"** %172 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %182, i64 0, i32 1
  %188 = bitcast %"struct.v8::internal::compiler::Node::Use"** %187 to i64*
  store i64 %186, i64* %188, align 8
  br label %189

189:                                              ; preds = %184, %166
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %160, align 8
  br label %190

190:                                              ; preds = %157, %189
  %191 = add nuw nsw i64 %149, 1
  %192 = icmp eq i64 %191, %83
  br i1 %192, label %147, label %148
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %14, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to %"class.v8::internal::compiler::Node"**
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, i64 %11
  %13 = inttoptr i64 %8 to i64*
  br label %22

14:                                               ; preds = %2
  %15 = inttoptr i64 %8 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 16
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"**
  %19 = sext i32 %1 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %19
  %21 = inttoptr i64 %8 to %"class.v8::internal::compiler::Node"**
  br label %22

22:                                               ; preds = %9, %14
  %23 = phi i64 [ %11, %9 ], [ %19, %14 ]
  %24 = phi i64* [ %13, %9 ], [ %15, %14 ]
  %25 = phi %"class.v8::internal::compiler::Node"** [ %10, %9 ], [ %21, %14 ]
  %26 = phi %"class.v8::internal::compiler::Node"** [ %12, %9 ], [ %20, %14 ]
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = inttoptr i64 %8 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %29 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  %30 = inttoptr i64 %8 to %"struct.v8::internal::compiler::Node::Use"**
  br label %31

31:                                               ; preds = %102, %22
  %32 = phi i32 [ %103, %102 ], [ %4, %22 ]
  %33 = phi i64 [ %49, %102 ], [ %23, %22 ]
  %34 = and i32 %32, 251658240
  %35 = icmp eq i32 %34, 251658240
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = lshr i32 %32, 24
  %38 = and i32 %37, 15
  br label %43

39:                                               ; preds = %31
  %40 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %28, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %36, %39
  %44 = phi i32 [ %38, %36 ], [ %42, %39 ]
  %45 = add nsw i32 %44, -1
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %33, %46
  br i1 %47, label %48, label %104

48:                                               ; preds = %43
  %49 = add nsw i64 %33, 1
  br i1 %35, label %50, label %54

50:                                               ; preds = %48
  %51 = load i64, i64* %24, align 8
  %52 = add i64 %51, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::Node"**
  br label %54

54:                                               ; preds = %48, %50
  %55 = phi %"class.v8::internal::compiler::Node"** [ %53, %50 ], [ %25, %48 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, i64 %33
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, i64 %49
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %59, %58
  br i1 %60, label %102, label %61

61:                                               ; preds = %54
  br i1 %35, label %62, label %64

62:                                               ; preds = %61
  %63 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %30, align 8
  br label %64

64:                                               ; preds = %61, %62
  %65 = phi %"struct.v8::internal::compiler::Node::Use"* [ %63, %62 ], [ %29, %61 ]
  %66 = shl i64 %33, 32
  %67 = ashr exact i64 %66, 32
  %68 = xor i64 %67, -1
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %65, i64 %68
  %70 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %70, label %89, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %65, i64 %68, i32 1
  %73 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %72, align 8
  %74 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %73, null
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %69, i64 0, i32 0
  %76 = bitcast %"struct.v8::internal::compiler::Node::Use"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %59, i64 0, i32 4
  %79 = bitcast %"struct.v8::internal::compiler::Node::Use"** %78 to i64*
  %80 = bitcast %"struct.v8::internal::compiler::Node::Use"* %73 to i64*
  %81 = select i1 %74, i64* %79, i64* %80
  store i64 %77, i64* %81, align 8
  %82 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %75, align 8
  %83 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %71
  %85 = bitcast %"struct.v8::internal::compiler::Node::Use"** %72 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %82, i64 0, i32 1
  %88 = bitcast %"struct.v8::internal::compiler::Node::Use"** %87 to i64*
  store i64 %86, i64* %88, align 8
  br label %89

89:                                               ; preds = %84, %71, %64
  store %"class.v8::internal::compiler::Node"* %58, %"class.v8::internal::compiler::Node"** %56, align 8
  %90 = icmp eq %"class.v8::internal::compiler::Node"* %58, null
  br i1 %90, label %102, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 4
  %93 = bitcast %"struct.v8::internal::compiler::Node::Use"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"struct.v8::internal::compiler::Node::Use"* %69 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %65, i64 %68, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %96, align 8
  %97 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %92, align 8
  %98 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %97, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %69, %"struct.v8::internal::compiler::Node::Use"** %100, align 8
  br label %101

101:                                              ; preds = %99, %91
  store %"struct.v8::internal::compiler::Node::Use"* %69, %"struct.v8::internal::compiler::Node::Use"** %92, align 8
  br label %102

102:                                              ; preds = %54, %89, %101
  %103 = load i32, i32* %3, align 4
  br label %31

104:                                              ; preds = %43
  br i1 %35, label %108, label %105

105:                                              ; preds = %104
  %106 = lshr i32 %32, 24
  %107 = and i32 %106, 15
  br label %112

108:                                              ; preds = %104
  %109 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %28, align 8
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %108, %105
  %113 = phi i32 [ %107, %105 ], [ %111, %108 ]
  %114 = add nsw i32 %113, -1
  br i1 %35, label %118, label %115

115:                                              ; preds = %112
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, i64 %116
  br label %125

118:                                              ; preds = %112
  %119 = load i64, i64* %24, align 8
  %120 = add i64 %119, 16
  %121 = inttoptr i64 %120 to %"class.v8::internal::compiler::Node"**
  %122 = sext i32 %114 to i64
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %122
  %124 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %30, align 8
  br label %125

125:                                              ; preds = %115, %118
  %126 = phi %"class.v8::internal::compiler::Node"** [ %117, %115 ], [ %123, %118 ]
  %127 = phi %"struct.v8::internal::compiler::Node::Use"* [ %29, %115 ], [ %124, %118 ]
  %128 = sub i32 0, %113
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %127, i64 %129
  %131 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %126, align 8
  %132 = icmp eq %"class.v8::internal::compiler::Node"* %131, null
  br i1 %132, label %151, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %127, i64 %129, i32 1
  %135 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %134, align 8
  %136 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %135, null
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %130, i64 0, i32 0
  %138 = bitcast %"struct.v8::internal::compiler::Node::Use"* %130 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %131, i64 0, i32 4
  %141 = bitcast %"struct.v8::internal::compiler::Node::Use"** %140 to i64*
  %142 = bitcast %"struct.v8::internal::compiler::Node::Use"* %135 to i64*
  %143 = select i1 %136, i64* %141, i64* %142
  store i64 %139, i64* %143, align 8
  %144 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %137, align 8
  %145 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %133
  %147 = bitcast %"struct.v8::internal::compiler::Node::Use"** %134 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %144, i64 0, i32 1
  %150 = bitcast %"struct.v8::internal::compiler::Node::Use"** %149 to i64*
  store i64 %148, i64* %150, align 8
  br label %151

151:                                              ; preds = %146, %133, %125
  %152 = load i32, i32* %3, align 4
  %153 = and i32 %152, 251658240
  %154 = icmp eq i32 %153, 251658240
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = and i32 %152, -251658241
  %157 = shl i32 %114, 24
  %158 = or i32 %156, %157
  store i32 %158, i32* %3, align 4
  br label %162

159:                                              ; preds = %151
  %160 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %28, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %160, i64 0, i32 1
  store i32 %114, i32* %161, align 8
  br label %162

162:                                              ; preds = %155, %159
  ret %"class.v8::internal::compiler::Node"* %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = lshr i32 %4, 24
  %9 = and i32 %8, 15
  br label %17

10:                                               ; preds = %2
  %11 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %12 = add i64 %11, 32
  %13 = inttoptr i64 %12 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %14 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %7, %10
  %18 = phi i32 [ %9, %7 ], [ %16, %10 ]
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %89, label %20

20:                                               ; preds = %17
  %21 = sub nsw i32 %18, %1
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %23 = add i64 %22, 32
  br i1 %6, label %29, label %24

24:                                               ; preds = %20
  %25 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %26 = sext i32 %1 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, i64 %26
  %28 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %38

29:                                               ; preds = %20
  %30 = inttoptr i64 %23 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  %33 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"**
  %34 = sext i32 %1 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, i64 %34
  %36 = inttoptr i64 %23 to %"struct.v8::internal::compiler::Node::Use"**
  %37 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %36, align 8
  br label %38

38:                                               ; preds = %29, %24
  %39 = phi %"class.v8::internal::compiler::Node"** [ %27, %24 ], [ %35, %29 ]
  %40 = phi %"struct.v8::internal::compiler::Node::Use"* [ %28, %24 ], [ %37, %29 ]
  %41 = icmp sgt i32 %21, 0
  br i1 %41, label %42, label %77

42:                                               ; preds = %38
  %43 = xor i32 %1, -1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %40, i64 %44
  br label %46

46:                                               ; preds = %71, %42
  %47 = phi i32 [ %50, %71 ], [ %21, %42 ]
  %48 = phi %"struct.v8::internal::compiler::Node::Use"* [ %73, %71 ], [ %45, %42 ]
  %49 = phi %"class.v8::internal::compiler::Node"** [ %72, %71 ], [ %39, %42 ]
  %50 = add nsw i32 %47, -1
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %49, align 8
  %52 = icmp eq %"class.v8::internal::compiler::Node"* %51, null
  br i1 %52, label %71, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %48, i64 0, i32 1
  %55 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %54, align 8
  %56 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %55, null
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %48, i64 0, i32 0
  %58 = bitcast %"struct.v8::internal::compiler::Node::Use"* %48 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %51, i64 0, i32 4
  %61 = bitcast %"struct.v8::internal::compiler::Node::Use"** %60 to i64*
  %62 = bitcast %"struct.v8::internal::compiler::Node::Use"* %55 to i64*
  %63 = select i1 %56, i64* %61, i64* %62
  store i64 %59, i64* %63, align 8
  %64 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %57, align 8
  %65 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %53
  %67 = bitcast %"struct.v8::internal::compiler::Node::Use"** %54 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %64, i64 0, i32 1
  %70 = bitcast %"struct.v8::internal::compiler::Node::Use"** %69 to i64*
  store i64 %68, i64* %70, align 8
  br label %71

71:                                               ; preds = %66, %53, %46
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, i64 1
  %73 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %48, i64 -1
  %74 = icmp sgt i32 %50, 0
  br i1 %74, label %46, label %75

75:                                               ; preds = %71
  %76 = load i32, i32* %3, align 4
  br label %77

77:                                               ; preds = %75, %38
  %78 = phi i32 [ %76, %75 ], [ %4, %38 ]
  %79 = and i32 %78, 251658240
  %80 = icmp eq i32 %79, 251658240
  br i1 %80, label %85, label %81

81:                                               ; preds = %77
  %82 = and i32 %78, -251658241
  %83 = shl i32 %1, 24
  %84 = or i32 %82, %83
  store i32 %84, i32* %3, align 4
  br label %89

85:                                               ; preds = %77
  %86 = inttoptr i64 %23 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %87 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %86, align 8
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %87, i64 0, i32 1
  store i32 %1, i32* %88, align 8
  br label %89

89:                                               ; preds = %81, %85, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node11ClearInputsEii(%"class.v8::internal::compiler::Node"*, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %9 = add i64 %8, 32
  br i1 %7, label %15, label %10

10:                                               ; preds = %3
  %11 = inttoptr i64 %9 to %"class.v8::internal::compiler::Node"**
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, i64 %12
  %14 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %24

15:                                               ; preds = %3
  %16 = inttoptr i64 %9 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 16
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"**
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, i64 %20
  %22 = inttoptr i64 %9 to %"struct.v8::internal::compiler::Node::Use"**
  %23 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %22, align 8
  br label %24

24:                                               ; preds = %10, %15
  %25 = phi %"class.v8::internal::compiler::Node"** [ %13, %10 ], [ %21, %15 ]
  %26 = phi %"struct.v8::internal::compiler::Node::Use"* [ %14, %10 ], [ %23, %15 ]
  %27 = icmp sgt i32 %2, 0
  br i1 %27, label %28, label %61

28:                                               ; preds = %24
  %29 = xor i32 %1, -1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %26, i64 %30
  br label %32

32:                                               ; preds = %28, %57
  %33 = phi i32 [ %36, %57 ], [ %2, %28 ]
  %34 = phi %"struct.v8::internal::compiler::Node::Use"* [ %59, %57 ], [ %31, %28 ]
  %35 = phi %"class.v8::internal::compiler::Node"** [ %58, %57 ], [ %25, %28 ]
  %36 = add nsw i32 %33, -1
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %35, align 8
  %38 = icmp eq %"class.v8::internal::compiler::Node"* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 0, i32 1
  %41 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %40, align 8
  %42 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %41, null
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 0, i32 0
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"* %34 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 4
  %47 = bitcast %"struct.v8::internal::compiler::Node::Use"** %46 to i64*
  %48 = bitcast %"struct.v8::internal::compiler::Node::Use"* %41 to i64*
  %49 = select i1 %42, i64* %47, i64* %48
  store i64 %45, i64* %49, align 8
  %50 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %43, align 8
  %51 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %39
  %53 = bitcast %"struct.v8::internal::compiler::Node::Use"** %40 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 0, i32 1
  %56 = bitcast %"struct.v8::internal::compiler::Node::Use"** %55 to i64*
  store i64 %54, i64* %56, align 8
  br label %57

57:                                               ; preds = %52, %39, %32
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 1
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 -1
  %60 = icmp sgt i32 %36, 0
  br i1 %60, label %32, label %61

61:                                               ; preds = %57, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node16EnsureInputCountEPNS0_4ZoneEi(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = lshr i32 %5, 24
  %10 = and i32 %9, 15
  br label %18

11:                                               ; preds = %3
  %12 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %13 = add i64 %12, 32
  %14 = inttoptr i64 %13 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %15 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %8, %11
  %19 = phi i32 [ %10, %8 ], [ %17, %11 ]
  %20 = icmp sgt i32 %19, %2
  br i1 %20, label %21, label %104

21:                                               ; preds = %18
  br i1 %7, label %25, label %22

22:                                               ; preds = %21
  %23 = lshr i32 %5, 24
  %24 = and i32 %23, 15
  br label %32

25:                                               ; preds = %21
  %26 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %27 = add i64 %26, 32
  %28 = inttoptr i64 %27 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %29 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %28, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %25, %22
  %33 = phi i32 [ %24, %22 ], [ %31, %25 ]
  %34 = icmp eq i32 %33, %2
  br i1 %34, label %124, label %35

35:                                               ; preds = %32
  %36 = sub nsw i32 %33, %2
  %37 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %38 = add i64 %37, 32
  br i1 %7, label %44, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %38 to %"class.v8::internal::compiler::Node"**
  %41 = sext i32 %2 to i64
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 %41
  %43 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %53

44:                                               ; preds = %35
  %45 = inttoptr i64 %38 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = sext i32 %2 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = inttoptr i64 %38 to %"struct.v8::internal::compiler::Node::Use"**
  %52 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %51, align 8
  br label %53

53:                                               ; preds = %44, %39
  %54 = phi %"class.v8::internal::compiler::Node"** [ %42, %39 ], [ %50, %44 ]
  %55 = phi %"struct.v8::internal::compiler::Node::Use"* [ %43, %39 ], [ %52, %44 ]
  %56 = icmp sgt i32 %36, 0
  br i1 %56, label %57, label %92

57:                                               ; preds = %53
  %58 = xor i32 %2, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %55, i64 %59
  br label %61

61:                                               ; preds = %86, %57
  %62 = phi i32 [ %65, %86 ], [ %36, %57 ]
  %63 = phi %"struct.v8::internal::compiler::Node::Use"* [ %88, %86 ], [ %60, %57 ]
  %64 = phi %"class.v8::internal::compiler::Node"** [ %87, %86 ], [ %54, %57 ]
  %65 = add nsw i32 %62, -1
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %64, align 8
  %67 = icmp eq %"class.v8::internal::compiler::Node"* %66, null
  br i1 %67, label %86, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %63, i64 0, i32 1
  %70 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %69, align 8
  %71 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %70, null
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %63, i64 0, i32 0
  %73 = bitcast %"struct.v8::internal::compiler::Node::Use"* %63 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %66, i64 0, i32 4
  %76 = bitcast %"struct.v8::internal::compiler::Node::Use"** %75 to i64*
  %77 = bitcast %"struct.v8::internal::compiler::Node::Use"* %70 to i64*
  %78 = select i1 %71, i64* %76, i64* %77
  store i64 %74, i64* %78, align 8
  %79 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %72, align 8
  %80 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %68
  %82 = bitcast %"struct.v8::internal::compiler::Node::Use"** %69 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %79, i64 0, i32 1
  %85 = bitcast %"struct.v8::internal::compiler::Node::Use"** %84 to i64*
  store i64 %83, i64* %85, align 8
  br label %86

86:                                               ; preds = %81, %68, %61
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %63, i64 -1
  %89 = icmp sgt i32 %65, 0
  br i1 %89, label %61, label %90

90:                                               ; preds = %86
  %91 = load i32, i32* %4, align 4
  br label %92

92:                                               ; preds = %90, %53
  %93 = phi i32 [ %91, %90 ], [ %5, %53 ]
  %94 = and i32 %93, 251658240
  %95 = icmp eq i32 %94, 251658240
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = and i32 %93, -251658241
  %98 = shl i32 %2, 24
  %99 = or i32 %97, %98
  store i32 %99, i32* %4, align 4
  br label %124

100:                                              ; preds = %92
  %101 = inttoptr i64 %38 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %102 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %101, align 8
  %103 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %102, i64 0, i32 1
  store i32 %2, i32* %103, align 8
  br label %124

104:                                              ; preds = %18
  %105 = icmp slt i32 %19, %2
  br i1 %105, label %106, label %124

106:                                              ; preds = %104
  %107 = add nsw i32 %19, -1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %109 = add i64 %108, 32
  br i1 %7, label %110, label %114

110:                                              ; preds = %106
  %111 = inttoptr i64 %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 16
  br label %114

114:                                              ; preds = %106, %110
  %115 = phi i64 [ %113, %110 ], [ %109, %106 ]
  %116 = inttoptr i64 %115 to %"class.v8::internal::compiler::Node"**
  %117 = sext i32 %107 to i64
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 %117
  %119 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, align 8
  br label %120

120:                                              ; preds = %120, %114
  %121 = phi i32 [ %19, %114 ], [ %122, %120 ]
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::Zone"* %1, %"class.v8::internal::compiler::Node"* %119)
  %122 = add nsw i32 %121, 1
  %123 = icmp slt i32 %122, %2
  br i1 %123, label %120, label %124

124:                                              ; preds = %120, %100, %96, %32, %104
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler4Node8UseCountEv(%"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %3 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %7, %1
  %6 = phi i32 [ 0, %1 ], [ %10, %7 ]
  ret i32 %6

7:                                                ; preds = %1, %7
  %8 = phi %"struct.v8::internal::compiler::Node::Use"* [ %12, %7 ], [ %3, %1 ]
  %9 = phi i32 [ %10, %7 ], [ 0, %1 ]
  %10 = add nuw nsw i32 %9, 1
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %8, i64 0, i32 0
  %12 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %12, null
  br i1 %13, label %5, label %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"* nocapture, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"struct.v8::internal::compiler::Node::Use"* [ %22, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 1
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %7, i64 1
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %11, i64 %12
  %14 = and i32 %9, 1
  %15 = icmp eq i32 %14, 0
  %16 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %13 to i64
  %17 = select i1 %15, i64 16, i64 32
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"**
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, i64 %12
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %7, i64 0, i32 0
  %22 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %21, align 8
  %23 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %22, null
  br i1 %23, label %24, label %6

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %26 = bitcast %"struct.v8::internal::compiler::Node::Use"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.v8::internal::compiler::Node::Use"* %7 to i64*
  store i64 %27, i64* %28, align 8
  %29 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %25, align 8
  %30 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %29, i64 0, i32 1
  store %"struct.v8::internal::compiler::Node::Use"* %7, %"struct.v8::internal::compiler::Node::Use"** %32, align 8
  br label %33

33:                                               ; preds = %24, %31
  %34 = bitcast %"struct.v8::internal::compiler::Node::Use"** %3 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %26, align 8
  br label %36

36:                                               ; preds = %2, %33
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler4Node7OwnedByEPKS2_(%"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %4, null
  br i1 %5, label %28, label %10

6:                                                ; preds = %25
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %11, i64 0, i32 0
  %8 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2, %6
  %11 = phi %"struct.v8::internal::compiler::Node::Use"* [ %8, %6 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %11, i64 1
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %11, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 %16
  %18 = and i32 %14, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %10
  %21 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"*
  br label %25

22:                                               ; preds = %10
  %23 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"**
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  br label %25

25:                                               ; preds = %20, %22
  %26 = phi %"class.v8::internal::compiler::Node"* [ %21, %20 ], [ %24, %22 ]
  %27 = icmp eq %"class.v8::internal::compiler::Node"* %26, %1
  br i1 %27, label %6, label %30

28:                                               ; preds = %6, %2
  %29 = icmp ne %"struct.v8::internal::compiler::Node::Use"* %4, null
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i1 [ %29, %28 ], [ false, %25 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler4Node7OwnedByEPKS2_S4_(%"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::Node"* readnone, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %5 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %3, %31
  %8 = phi %"struct.v8::internal::compiler::Node::Use"* [ %34, %31 ], [ %5, %3 ]
  %9 = phi i32 [ %32, %31 ], [ 0, %3 ]
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %8, i64 1
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %8, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %10, i64 %14
  %16 = and i32 %12, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %7
  %19 = bitcast %"struct.v8::internal::compiler::Node::Use"* %15 to %"class.v8::internal::compiler::Node"*
  br label %23

20:                                               ; preds = %7
  %21 = bitcast %"struct.v8::internal::compiler::Node::Use"* %15 to %"class.v8::internal::compiler::Node"**
  %22 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi %"class.v8::internal::compiler::Node"* [ %19, %18 ], [ %22, %20 ]
  %25 = icmp eq %"class.v8::internal::compiler::Node"* %24, %1
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = or i32 %9, 1
  br label %31

28:                                               ; preds = %23
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %24, %2
  %30 = or i32 %9, 2
  br i1 %29, label %31, label %39

31:                                               ; preds = %28, %26
  %32 = phi i32 [ %27, %26 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %8, i64 0, i32 0
  %34 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %33, align 8
  %35 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %34, null
  br i1 %35, label %36, label %7

36:                                               ; preds = %31, %3
  %37 = phi i32 [ 0, %3 ], [ %32, %31 ]
  %38 = icmp eq i32 %37, 3
  br label %39

39:                                               ; preds = %28, %36
  %40 = phi i1 [ %38, %36 ], [ false, %28 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler4Node5PrintEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StdoutStream", align 8
  %4 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.v8::internal::OFStream"*
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %6, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %7) #11
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #11
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %9, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %9) #11
  %11 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.std::__1::basic_ostream"*
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_19PrintNodeEPKNS1_4NodeERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEii(%"class.v8::internal::compiler::Node"* %0, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %11, i32 %1, i32 0) #11
  %12 = bitcast %"class.v8::internal::StdoutStream"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ios.base"* %13 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %14, align 8
  %15 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %15) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %12, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %11, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %17 = bitcast %"class.std::__1::basic_ios.base"* %13 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler4Node5PrintERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEi(%"class.v8::internal::compiler::Node"*, %"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_19PrintNodeEPKNS1_4NodeERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEii(%"class.v8::internal::compiler::Node"* %0, %"class.std::__1::basic_ostream"* dereferenceable(160) %1, i32 %2, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #11
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_19PrintNodeEPKNS1_4NodeERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEii(%"class.v8::internal::compiler::Node"*, %"class.std::__1::basic_ostream"* dereferenceable(160), i32, i32) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %9, %4
  %8 = icmp eq %"class.v8::internal::compiler::Node"* %0, null
  br i1 %8, label %16, label %14

9:                                                ; preds = %4, %9
  %10 = phi i32 [ %12, %9 ], [ 0, %4 ]
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #11
  %12 = add nuw nsw i32 %10, 1
  %13 = icmp eq i32 %12, %3
  br i1 %13, label %7, label %9

14:                                               ; preds = %7
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"class.v8::internal::compiler::Node"* nonnull dereferenceable(32) %0)
  br label %18

16:                                               ; preds = %7
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #11
  br label %18

18:                                               ; preds = %16, %14
  %19 = bitcast %"class.std::__1::basic_ostream"* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::basic_ostream"* %1 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %27) #11
  %28 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %29 = bitcast %"class.std::__1::locale::facet"* %28 to %"class.std::__1::ctype"*
  %30 = bitcast %"class.std::__1::locale::facet"* %28 to i8 (%"class.std::__1::ctype"*, i8)***
  %31 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %30, align 8
  %32 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %31, i64 7
  %33 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %32, align 8
  %34 = call signext i8 %33(%"class.std::__1::ctype"* %29, i8 signext 10) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %1, i8 signext %34) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %1) #11
  %37 = icmp slt i32 %2, 1
  br i1 %37, label %68, label %38

38:                                               ; preds = %18
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %40, 24
  %42 = and i32 %41, 15
  %43 = icmp eq i32 %42, 15
  %44 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %45 = add i64 %44, 32
  br i1 %43, label %46, label %53

46:                                               ; preds = %38
  %47 = inttoptr i64 %45 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %48 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %47, align 8
  %49 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %48 to i64
  %50 = add i64 %49, 16
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  br label %53

53:                                               ; preds = %38, %46
  %54 = phi i32 [ %52, %46 ], [ %42, %38 ]
  %55 = phi i64 [ %50, %46 ], [ %45, %38 ]
  %56 = inttoptr i64 %55 to %"class.v8::internal::compiler::Node"**
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, i64 %57
  %59 = icmp eq i32 %54, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %53
  %61 = add nsw i32 %2, -1
  %62 = add nsw i32 %3, 1
  br label %63

63:                                               ; preds = %60, %63
  %64 = phi %"class.v8::internal::compiler::Node"** [ %56, %60 ], [ %66, %63 ]
  %65 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_19PrintNodeEPKNS1_4NodeERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEii(%"class.v8::internal::compiler::Node"* %65, %"class.std::__1::basic_ostream"* dereferenceable(160) %1, i32 %61, i32 %62)
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %67 = icmp eq %"class.v8::internal::compiler::Node"** %66, %58
  br i1 %67, label %68, label %63

68:                                               ; preds = %63, %53, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.v8::internal::compiler::Node"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %0, i32 %5) #11
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #11
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %9) #11
  %11 = load i32, i32* %3, align 4
  %12 = and i32 %11, 251658240
  %13 = icmp eq i32 %12, 251658240
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = lshr i32 %11, 24
  %16 = and i32 %15, 15
  br label %24

17:                                               ; preds = %2
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = add i64 %18, 32
  %20 = inttoptr i64 %19 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %21 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %20, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %14, %17
  %25 = phi i32 [ %16, %14 ], [ %23, %17 ]
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %95

27:                                               ; preds = %24
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #11
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %30 = add i64 %29, 32
  %31 = inttoptr i64 %30 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %32 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"**
  %33 = inttoptr i64 %30 to i64*
  br label %34

34:                                               ; preds = %93, %27
  %35 = phi i64 [ %94, %93 ], [ 0, %27 ]
  %36 = load i32, i32* %3, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = lshr i32 %36, 24
  %41 = and i32 %40, 15
  br label %46

42:                                               ; preds = %34
  %43 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %31, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %39, %42
  %47 = phi i32 [ %41, %39 ], [ %45, %42 ]
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %35, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #11
  br label %95

52:                                               ; preds = %46
  %53 = icmp eq i64 %35, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %52
  br i1 %38, label %55, label %71

55:                                               ; preds = %54
  %56 = load i64, i64* %33, align 8
  %57 = add i64 %56, 16
  %58 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  br label %71

59:                                               ; preds = %52
  %60 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #11
  %61 = load i32, i32* %3, align 4
  %62 = and i32 %61, 251658240
  %63 = icmp eq i32 %62, 251658240
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, i64 %35
  br label %71

66:                                               ; preds = %59
  %67 = load i64, i64* %33, align 8
  %68 = add i64 %67, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::compiler::Node"**
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, i64 %35
  br label %71

71:                                               ; preds = %55, %54, %66, %64
  %72 = phi i32 [ %61, %64 ], [ %61, %66 ], [ %36, %54 ], [ %36, %55 ]
  %73 = phi %"class.v8::internal::compiler::Node"** [ %65, %64 ], [ %70, %66 ], [ %32, %54 ], [ %58, %55 ]
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %75 = icmp eq %"class.v8::internal::compiler::Node"* %74, null
  br i1 %75, label %91, label %76

76:                                               ; preds = %71
  %77 = and i32 %72, 251658240
  %78 = icmp eq i32 %77, 251658240
  br i1 %78, label %79, label %83

79:                                               ; preds = %76
  %80 = load i64, i64* %33, align 8
  %81 = add i64 %80, 16
  %82 = inttoptr i64 %81 to %"class.v8::internal::compiler::Node"**
  br label %83

83:                                               ; preds = %76, %79
  %84 = phi %"class.v8::internal::compiler::Node"** [ %82, %79 ], [ %32, %76 ]
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %35
  %86 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %86, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 16777215
  %90 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %0, i32 %89) #11
  br label %93

91:                                               ; preds = %71
  %92 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #11
  br label %93

93:                                               ; preds = %83, %91
  %94 = add nuw nsw i64 %35, 1
  br label %34

95:                                               ; preds = %50, %24
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Operator"* dereferenceable(48)) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler4NodeC2EjPKNS1_8OperatorEii(%"class.v8::internal::compiler::Node"* nocapture, i32, %"class.v8::internal::compiler::Operator"*, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %2, %"class.v8::internal::compiler::Operator"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 1, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %10 = shl i32 %3, 24
  %11 = or i32 %10, %1
  %12 = shl i32 %4, 28
  %13 = or i32 %11, %12
  store i32 %13, i32* %9, align 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  store %"struct.v8::internal::compiler::Node::Use"* null, %"struct.v8::internal::compiler::Node::Use"** %14, align 8
  %15 = icmp ult i32 %1, 16777216
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

17:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** } @_ZN2v88internal8compiler4Node10InputEdges8iteratorppEi(%"class.v8::internal::compiler::Node::InputEdges::iterator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node::InputEdges::iterator", %"class.v8::internal::compiler::Node::InputEdges::iterator"* %0, i64 0, i32 0
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node::InputEdges::iterator", %"class.v8::internal::compiler::Node::InputEdges::iterator"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %6, i64 1
  store %"class.v8::internal::compiler::Node"** %7, %"class.v8::internal::compiler::Node"*** %5, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %4, i64 -1
  store %"struct.v8::internal::compiler::Node::Use"* %8, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %9 = insertvalue { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** } undef, %"struct.v8::internal::compiler::Node::Use"* %4, 0
  %10 = insertvalue { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** } %9, %"class.v8::internal::compiler::Node"** %6, 1
  ret { %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"** } %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"** @_ZN2v88internal8compiler4Node6Inputs14const_iteratorppEi(%"class.v8::internal::compiler::Node::Inputs::const_iterator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node::Inputs::const_iterator", %"class.v8::internal::compiler::Node::Inputs::const_iterator"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 1
  store %"class.v8::internal::compiler::Node"** %5, %"class.v8::internal::compiler::Node"*** %3, align 8
  ret %"class.v8::internal::compiler::Node"** %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* } @_ZN2v88internal8compiler4Node8UseEdges8iteratorppEi(%"class.v8::internal::compiler::Node::UseEdges::iterator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node::UseEdges::iterator", %"class.v8::internal::compiler::Node::UseEdges::iterator"* %0, i64 0, i32 0
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node::UseEdges::iterator", %"class.v8::internal::compiler::Node::UseEdges::iterator"* %0, i64 0, i32 1
  %6 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %5, align 8
  store %"struct.v8::internal::compiler::Node::Use"* %6, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %6, i64 0, i32 0
  %10 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"struct.v8::internal::compiler::Node::Use"* [ %10, %8 ], [ null, %2 ]
  store %"struct.v8::internal::compiler::Node::Use"* %12, %"struct.v8::internal::compiler::Node::Use"** %5, align 8
  %13 = insertvalue { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* } undef, %"struct.v8::internal::compiler::Node::Use"* %4, 0
  %14 = insertvalue { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* } %13, %"struct.v8::internal::compiler::Node::Use"* %6, 1
  ret { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"* } %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler4Node8UseEdges5emptyEv(%"class.v8::internal::compiler::Node::UseEdges"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node::UseEdges", %"class.v8::internal::compiler::Node::UseEdges"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 4
  %5 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %5, null
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"struct.v8::internal::compiler::Node::Use"* @_ZN2v88internal8compiler4Node4Uses14const_iteratorppEi(%"class.v8::internal::compiler::Node::Uses::const_iterator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node::Uses::const_iterator", %"class.v8::internal::compiler::Node::Uses::const_iterator"* %0, i64 0, i32 0
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = bitcast %"struct.v8::internal::compiler::Node::Use"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::compiler::Node::Uses::const_iterator"* %0 to i64*
  store i64 %6, i64* %7, align 8
  ret %"struct.v8::internal::compiler::Node::Use"* %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler4Node4Uses5emptyEv(%"class.v8::internal::compiler::Node::Uses"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node::Uses", %"class.v8::internal::compiler::Node::Uses"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 4
  %5 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z23_v8_internal_Node_PrintPv(i8*) local_unnamed_addr #0 {
  %2 = alloca %"class.v8::internal::StdoutStream", align 8
  %3 = bitcast i8* %0 to %"class.v8::internal::compiler::Node"*
  %4 = bitcast %"class.v8::internal::StdoutStream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.v8::internal::OFStream"*
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %6, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %7) #11
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #11
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %9, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %9) #11
  %11 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.std::__1::basic_ostream"*
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_19PrintNodeEPKNS1_4NodeERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEii(%"class.v8::internal::compiler::Node"* %3, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %11, i32 1, i32 0) #11
  %12 = bitcast %"class.v8::internal::StdoutStream"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ios.base"* %13 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %14, align 8
  %15 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %15) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %12, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %11, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %17 = bitcast %"class.std::__1::basic_ios.base"* %13 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %4) #11
  ret void
}

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #6

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #11
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #11
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #11
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #11
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #11
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #11
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #11
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #11
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #11
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #11
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #11
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #11
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #11
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
