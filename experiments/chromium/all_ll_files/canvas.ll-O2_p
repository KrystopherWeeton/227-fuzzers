; ModuleID = '../../ui/gfx/canvas.cc'
source_filename = "../../ui/gfx/canvas.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Size" = type { i32, i32 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.74, %class.sk_sp.75, %class.sk_sp.76, %class.sk_sp.77, i32, float, float, i32, %union.anon.78, [4 x i8] }>
%class.sk_sp.36 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.37 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.38", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.44, i32, %"class.absl::optional.52", %"class.std::__1::vector", %"class.std::__1::vector.62", %class.sk_sp.69, %class.sk_sp.43, i32, [4 x i8] }>
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.43, %class.sk_sp.44, %"class.gfx::Rect", i32, %class.sk_sp.49, %class.sk_sp.50, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.43, %class.scoped_refptr.51 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.49 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.50 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.51 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.44 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.45", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i32* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { float*, float*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { float* }
%class.sk_sp.69 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.70", [7 x i8] }>
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%class.sk_sp.43 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.74 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.75 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.76 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.77 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.78 = type { i32 }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.8", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, [7 x i8], %union.anon.12 }
%union.anon.12 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.13 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.14 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%class.SkPath = type <{ %class.sk_sp.79, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.79 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.80, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.81, %class.SkTDArray.82, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.80 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.81 = type { i8*, i32, i32 }
%class.SkTDArray.82 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.83 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.83 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.70", [3 x i8] }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.gfx::InsetsF" = type { float, float, float, float }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%class.sk_sp.85 = type { %"class.cc::PaintOpBuffer"* }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.44, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::SkottieWrapper" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", %class.sk_sp.87, %"class.std::__1::vector.104", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.sk_sp.87 = type { %"class.skottie::Animation"* }
%"class.skottie::Animation" = type <{ %class.SkNVRefCnt.88, [4 x i8], %"class.std::__1::unique_ptr.89", %"class.std::__1::vector.95", %class.SkString, %struct.SkSize, double, double, double, double, i32, [4 x i8] }>
%class.SkNVRefCnt.88 = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.sksg::Scene"* }
%"class.sksg::Scene" = type opaque
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %class.sk_sp.97*, %class.sk_sp.97*, %"class.std::__1::__compressed_pair.98" }
%class.sk_sp.97 = type opaque
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.sk_sp.97* }
%class.SkString = type { %class.sk_sp.103 }
%class.sk_sp.103 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkSize = type { float, float }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i8*, i8*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i8* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

@_ZTVN3gfx6CanvasE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::Canvas"*)* @_ZN3gfx6CanvasD2Ev to i8*), i8* bitcast (void (%"class.gfx::Canvas"*)* @_ZN3gfx6CanvasD0Ev to i8*)] }, align 8
@.ref.tmp = private constant %"class.gfx::Size" zeroinitializer, align 4
@__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.36 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.37 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.74 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.75 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.76 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.77 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.78 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN3gfx6CanvasC1ERKNS_4SizeEfb = hidden unnamed_addr alias void (%"class.gfx::Canvas"*, %"class.gfx::Size"*, float, i1), void (%"class.gfx::Canvas"*, %"class.gfx::Size"*, float, i1)* @_ZN3gfx6CanvasC2ERKNS_4SizeEfb
@_ZN3gfx6CanvasC1Ev = hidden unnamed_addr alias void (%"class.gfx::Canvas"*), void (%"class.gfx::Canvas"*)* @_ZN3gfx6CanvasC2Ev
@_ZN3gfx6CanvasC1EPN2cc11PaintCanvasEf = hidden unnamed_addr alias void (%"class.gfx::Canvas"*, %"class.cc::PaintCanvas"*, float), void (%"class.gfx::Canvas"*, %"class.cc::PaintCanvas"*, float)* @_ZN3gfx6CanvasC2EPN2cc11PaintCanvasEf
@_ZN3gfx6CanvasD1Ev = hidden unnamed_addr alias void (%"class.gfx::Canvas"*), void (%"class.gfx::Canvas"*)* @_ZN3gfx6CanvasD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6CanvasC2ERKNS_4SizeEfb(%"class.gfx::Canvas"*, %"class.gfx::Size"* dereferenceable(8), float, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gfx6CanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  store float %2, float* %8, align 8
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %union.anon.12* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 120, i1 false) #9
  %13 = bitcast i64* %5 to i8*
  %14 = bitcast %union.anon* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 57, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %15 = tail call i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8) %1, float %2) #9
  store i64 %15, i64* %5, align 8
  %16 = call %"class.cc::PaintCanvas"* @_ZN3gfx6Canvas17CreateOwnedCanvasERKNS_4SizeEb(%"class.gfx::Canvas"* %0, %"class.gfx::Size"* nonnull dereferenceable(8) %6, i1 zeroext %3)
  %17 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  store %"class.cc::PaintCanvas"* %16, %"class.cc::PaintCanvas"** %17, align 8
  %18 = bitcast %"class.cc::PaintCanvas"* %16 to void (%"class.cc::PaintCanvas"*, float, float)***
  %19 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %19, i64 12
  %21 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %20, align 8
  tail call void %21(%"class.cc::PaintCanvas"* %16, float %2, float %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::PaintCanvas"* @_ZN3gfx6Canvas17CreateOwnedCanvasERKNS_4SizeEb(%"class.gfx::Canvas"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 1
  %8 = select i1 %7, i32 %6, i32 1
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 1
  %12 = select i1 %11, i32 %10, i32 1
  %13 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %16 = zext i32 %12 to i64
  %17 = shl nuw nsw i64 %16, 32
  %18 = zext i32 %8 to i64
  %19 = or i64 %17, %18
  %20 = select i1 %2, i64 4294967302, i64 8589934598
  %21 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 0, i64* %21, align 8, !alias.scope !2
  %22 = bitcast i32* %15 to i64*
  store i64 %20, i64* %22, align 8, !alias.scope !2
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %24 = bitcast %struct.SkISize* %23 to i64*
  store i64 %19, i64* %24, align 8, !alias.scope !2
  %25 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !7
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %29) #9
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %3
  %31 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %31) #9
  store i8 1, i8* %25, align 8
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* %31, %struct.SkImageInfo* nonnull dereferenceable(24) %4) #9
  %32 = load i8, i8* %25, align 8, !range !7
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !8

34:                                               ; preds = %30
  call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %39 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %38, i64 %40) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %41, i1 false)
  %42 = load i8, i8* %25, align 8, !range !7
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %35
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !7
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* %50) #9
  store i8 0, i8* %46, align 8
  br label %51

51:                                               ; preds = %49, %45
  %52 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"* %52, %class.SkBitmap* dereferenceable(56) %31, %"class.cc::ImageProvider"* null) #9
  store i8 1, i8* %46, align 8
  %53 = getelementptr inbounds %"class.cc::SkiaPaintCanvas", %"class.cc::SkiaPaintCanvas"* %52, i64 0, i32 0
  %54 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %55 = icmp eq %class.SkColorSpace* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorSpace* %54 to i8*
  call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %51, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  ret %"class.cc::PaintCanvas"* %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6CanvasC2Ev(%"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gfx6CanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %union.anon.12* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 120, i1 false) #9
  %8 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 57, i1 false)
  %10 = tail call %"class.cc::PaintCanvas"* @_ZN3gfx6Canvas17CreateOwnedCanvasERKNS_4SizeEb(%"class.gfx::Canvas"* %0, %"class.gfx::Size"* nonnull dereferenceable(8) @.ref.tmp, i1 zeroext false)
  store %"class.cc::PaintCanvas"* %10, %"class.cc::PaintCanvas"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6CanvasC2EPN2cc11PaintCanvasEf(%"class.gfx::Canvas"* nocapture, %"class.cc::PaintCanvas"*, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gfx6CanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  store float %2, float* %5, align 8
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %union.anon.12* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 120, i1 false) #9
  %10 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %11 = bitcast %union.anon* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 57, i1 false)
  store %"class.cc::PaintCanvas"* %1, %"class.cc::PaintCanvas"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6CanvasD2Ev(%"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gfx6CanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* %7) #9
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %13) #9
  store i8 0, i8* %9, align 8
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6CanvasD0Ev(%"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gfx6CanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* %7) #9
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %13) #9
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.gfx::Canvas"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas21RecreateBackingCanvasERKNS_4SizeEfb(%"class.gfx::Canvas"*, %"class.gfx::Size"* dereferenceable(8), float, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Size"*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  store float %2, float* %7, align 8
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = tail call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8) %1, float %2) #9
  store i64 %9, i64* %5, align 8
  %10 = call %"class.cc::PaintCanvas"* @_ZN3gfx6Canvas17CreateOwnedCanvasERKNS_4SizeEb(%"class.gfx::Canvas"* %0, %"class.gfx::Size"* nonnull dereferenceable(8) %6, i1 zeroext %3)
  %11 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  store %"class.cc::PaintCanvas"* %10, %"class.cc::PaintCanvas"** %11, align 8
  %12 = bitcast %"class.cc::PaintCanvas"* %10 to void (%"class.cc::PaintCanvas"*, float, float)***
  %13 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %13, i64 12
  %15 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %14, align 8
  tail call void %15(%"class.cc::PaintCanvas"* %10, float %2, float %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas13SizeStringIntERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPiSD_ii(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), i32* nocapture, i32* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  %10 = load i32, i32* %2, align 4
  %11 = sitofp i32 %10 to float
  store float %11, float* %7, align 4
  %12 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #9
  %13 = load i32, i32* %3, align 4
  %14 = sitofp i32 %13 to float
  store float %14, float* %8, align 4
  call void @_ZN3gfx6Canvas15SizeStringFloatERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPfSD_ii(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.gfx::FontList"* dereferenceable(8) %1, float* nonnull %7, float* nonnull %8, i32 %4, i32 %5) #9
  %15 = load float, float* %7, align 4
  %16 = call float @llvm.ceil.f32(float %15) #9
  %17 = fcmp ult float %16, 0xC1E0000000000000
  %18 = fcmp ugt float %16, 0x41DFFFFFE0000000
  %19 = fcmp ogt float %16, 0xC1E0000000000000
  %20 = select i1 %19, float %16, float 0xC1E0000000000000
  %21 = fptosi float %20 to i32
  %22 = select i1 %17, i32 0, i32 2147483647
  %23 = select i1 %18, i32 %22, i32 %21
  store i32 %23, i32* %2, align 4
  %24 = load float, float* %8, align 4
  %25 = call float @llvm.ceil.f32(float %24) #9
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  store i32 %32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  ret void
}

declare void @_ZN3gfx6Canvas15SizeStringFloatERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPfSD_ii(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float*, float*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx6Canvas14GetStringWidthERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store float 0.000000e+00, float* %3, align 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store float 0.000000e+00, float* %4, align 4
  call void @_ZN3gfx6Canvas15SizeStringFloatERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPfSD_ii(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.gfx::FontList"* dereferenceable(8) %1, float* nonnull %3, float* nonnull %4, i32 0, i32 128) #9
  %7 = load float, float* %3, align 4
  %8 = call float @llvm.ceil.f32(float %7) #9
  %9 = fcmp ult float %8, 0xC1E0000000000000
  %10 = fcmp ugt float %8, 0x41DFFFFFE0000000
  %11 = fcmp ogt float %8, 0xC1E0000000000000
  %12 = select i1 %11, float %8, float 0xC1E0000000000000
  %13 = fptosi float %12 to i32
  %14 = select i1 %9, i32 0, i32 2147483647
  %15 = select i1 %10, i32 %14, i32 %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3gfx6Canvas15GetStringWidthFERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store float 0.000000e+00, float* %3, align 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store float 0.000000e+00, float* %4, align 4
  call void @_ZN3gfx6Canvas15SizeStringFloatERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPfSD_ii(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.gfx::FontList"* dereferenceable(8) %1, float* nonnull %3, float* nonnull %4, i32 0, i32 128) #9
  %7 = load float, float* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  ret float %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gfx6Canvas26DefaultCanvasTextAlignmentEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #9
  %2 = select i1 %1, i32 4, i32 1
  ret i32 %2
}

declare zeroext i1 @_ZN4base4i18n5IsRTLEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 8
  %4 = fdiv float 1.000000e+00, %3
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %6 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %5, align 8
  %7 = bitcast %"class.cc::PaintCanvas"* %6 to void (%"class.cc::PaintCanvas"*, float, float)***
  %8 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %8, i64 12
  %10 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %9, align 8
  tail call void %10(%"class.cc::PaintCanvas"* %6, float %4, float %4) #9
  %11 = load float, float* %2, align 8
  ret float %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %3 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %2, align 8
  %4 = bitcast %"class.cc::PaintCanvas"* %3 to i32 (%"class.cc::PaintCanvas"*)***
  %5 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %5, i64 5
  %7 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %6, align 8
  %8 = tail call i32 %7(%"class.cc::PaintCanvas"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas14SaveLayerAlphaEh(%"class.gfx::Canvas"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %4 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %3, align 8
  %5 = bitcast %"class.cc::PaintCanvas"* %4 to i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)***
  %6 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)**, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)** %6, i64 7
  %8 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)** %7, align 8
  %9 = tail call i32 %8(%"class.cc::PaintCanvas"* %4, %struct.SkRect* null, i8 zeroext %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas14SaveLayerAlphaEhRKNS_4RectE(%"class.gfx::Canvas"* nocapture readonly, i8 zeroext, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %2) #9
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 0
  store <2 x float> %9, <2 x float>* %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %11 = extractvalue { <2 x float>, <2 x float> } %7, 1
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %13 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %13 to i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)***
  %15 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)**, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)** %15, i64 7
  %17 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, i8)** %16, align 8
  %18 = call i32 %17(%"class.cc::PaintCanvas"* %13, %struct.SkRect* nonnull %5, i8 zeroext %1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas18SaveLayerWithFlagsERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %4 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %3, align 8
  %5 = bitcast %"class.cc::PaintCanvas"* %4 to i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %6 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %6, i64 6
  %8 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %7, align 8
  %9 = tail call i32 %8(%"class.cc::PaintCanvas"* %4, %struct.SkRect* null, %"class.cc::PaintFlags"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %3 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %2, align 8
  %4 = bitcast %"class.cc::PaintCanvas"* %3 to void (%"class.cc::PaintCanvas"*)***
  %5 = load void (%"class.cc::PaintCanvas"*)**, void (%"class.cc::PaintCanvas"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %5, i64 8
  %7 = load void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %6, align 8
  tail call void %7(%"class.cc::PaintCanvas"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8ClipRectERKNS_4RectE8SkClipOp(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %7 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %6, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %1) #9
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %7 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)***
  %15 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %15, i64 18
  %17 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %16, align 8
  call void %17(%"class.cc::PaintCanvas"* %7, %struct.SkRect* nonnull dereferenceable(16) %5, i32 %2, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8ClipRectERKNS_5RectFE8SkClipOp(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::RectF"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %7 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %6, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = tail call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %7 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)***
  %15 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %15, i64 18
  %17 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %16, align 8
  call void %17(%"class.cc::PaintCanvas"* %7, %struct.SkRect* nonnull dereferenceable(16) %5, i32 %2, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8ClipPathERK6SkPathb(%"class.gfx::Canvas"* nocapture readonly, %class.SkPath* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %5 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %4, align 8
  %6 = bitcast %"class.cc::PaintCanvas"* %5 to void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)***
  %7 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)** %7, i64 20
  %9 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)** %8, align 8
  tail call void %9(%"class.cc::PaintCanvas"* %5, %class.SkPath* dereferenceable(16) %1, i32 1, i1 zeroext %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx6Canvas13GetClipBoundsEPNS_4RectE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %7 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -1, i64 16, i1 false)
  %8 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %6, align 8
  %9 = bitcast %"class.cc::PaintCanvas"* %8 to i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)***
  %10 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)**, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %10, i64 22
  %12 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %11, align 8
  %13 = call zeroext i1 %12(%"class.cc::PaintCanvas"* %8, %struct.SkRect* nonnull %3) #9
  br i1 %13, label %14, label %28

14:                                               ; preds = %2
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::RectF"*
  %16 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %3) #9
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 0
  store <2 x float> %19, <2 x float>* %18, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %21 = extractvalue { <2 x float>, <2 x float> } %17, 1
  store <2 x float> %21, <2 x float>* %20, align 8
  %22 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %15) #9
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  %25 = bitcast %"class.gfx::Rect"* %1 to i64*
  store i64 %23, i64* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %27 = bitcast %"class.gfx::Size"* %26 to i64*
  store i64 %24, i64* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %30

28:                                               ; preds = %2
  %29 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 16, i1 false)
  br label %30

30:                                               ; preds = %28, %14
  %31 = phi i1 [ true, %14 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret i1 %31
}

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Vector2d"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %4 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = bitcast %"class.cc::PaintCanvas"* %4 to void (%"class.cc::PaintCanvas"*, float, float)***
  %12 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %12, i64 11
  %14 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %13, align 8
  tail call void %14(%"class.cc::PaintCanvas"* %4, float %7, float %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas5ScaleEff(%"class.gfx::Canvas"* nocapture readonly, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %5 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %4, align 8
  %6 = bitcast %"class.cc::PaintCanvas"* %5 to void (%"class.cc::PaintCanvas"*, float, float)***
  %7 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %7, i64 12
  %9 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %8, align 8
  tail call void %9(%"class.cc::PaintCanvas"* %5, float %1, float %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas9DrawColorEj(%"class.gfx::Canvas"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %4 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %3, align 8
  %5 = bitcast %"class.cc::PaintCanvas"* %4 to void (%"class.cc::PaintCanvas"*, i32, i32)***
  %6 = load void (%"class.cc::PaintCanvas"*, i32, i32)**, void (%"class.cc::PaintCanvas"*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %6, i64 25
  %8 = load void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %7, align 8
  tail call void %8(%"class.cc::PaintCanvas"* %4, i32 %1, i32 3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas9DrawColorEj11SkBlendMode(%"class.gfx::Canvas"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %5 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %4, align 8
  %6 = bitcast %"class.cc::PaintCanvas"* %5 to void (%"class.cc::PaintCanvas"*, i32, i32)***
  %7 = load void (%"class.cc::PaintCanvas"*, i32, i32)**, void (%"class.cc::PaintCanvas"*, i32, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %7, i64 25
  %9 = load void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %8, align 8
  tail call void %9(%"class.cc::PaintCanvas"* %5, i32 %1, i32 %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca %"class.cc::PaintFlags", align 8
  %7 = bitcast %"class.cc::PaintFlags"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false) #9
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  %8 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 6
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 10
  %10 = bitcast %union.anon.78* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, -193
  store i16 %12, i16* %10, align 8
  %13 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 9
  store i32 3, i32* %13, align 4
  %14 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  store float %17, float* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  store float %20, float* %26, align 4
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %28 = icmp sgt i32 %22, 0
  %29 = select i1 %28, i32 %22, i32 0
  %30 = sitofp i32 %29 to float
  store float %30, float* %27, align 4
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %32 = icmp sgt i32 %24, 0
  %33 = select i1 %32, i32 %24, i32 0
  %34 = sitofp i32 %33 to float
  store float %34, float* %31, align 4
  %35 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %36 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %37 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %36, align 8
  %38 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  %39 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #9
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %41 = extractvalue { <2 x float>, <2 x float> } %39, 0
  store <2 x float> %41, <2 x float>* %40, align 8
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %43 = extractvalue { <2 x float>, <2 x float> } %39, 1
  store <2 x float> %43, <2 x float>* %42, align 8
  %44 = bitcast %"class.cc::PaintCanvas"* %37 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %45 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %45, i64 28
  %47 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %46, align 8
  call void %47(%"class.cc::PaintCanvas"* %37, %struct.SkRect* nonnull dereferenceable(16) %35, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj11SkBlendMode(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.gfx::RectF", align 4
  %7 = alloca %"class.cc::PaintFlags", align 8
  %8 = bitcast %"class.cc::PaintFlags"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %7) #9
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 6
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 10
  %11 = bitcast %union.anon.78* %10 to i16*
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, -193
  store i16 %13, i16* %11, align 8
  %14 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 9
  store i32 %3, i32* %14, align 4
  %15 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 0
  store float %18, float* %26, align 4
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 1
  store float %21, float* %27, align 4
  %28 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 0
  %29 = icmp sgt i32 %23, 0
  %30 = select i1 %29, i32 %23, i32 0
  %31 = sitofp i32 %30 to float
  store float %31, float* %28, align 4
  %32 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 1
  %33 = icmp sgt i32 %25, 0
  %34 = select i1 %33, i32 %25, i32 0
  %35 = sitofp i32 %34 to float
  store float %35, float* %32, align 4
  %36 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %37 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %38 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %37, align 8
  %39 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  %40 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %6) #9
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %42 = extractvalue { <2 x float>, <2 x float> } %40, 0
  store <2 x float> %42, <2 x float>* %41, align 8
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %44 = extractvalue { <2 x float>, <2 x float> } %40, 1
  store <2 x float> %44, <2 x float>* %43, align 8
  %45 = bitcast %"class.cc::PaintCanvas"* %38 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %46 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %46, i64 28
  %48 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %47, align 8
  call void %48(%"class.cc::PaintCanvas"* %38, %struct.SkRect* nonnull dereferenceable(16) %36, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawRectERKNS_4RectERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to float
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  store float %9, float* %17, align 4
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  store float %12, float* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %20 = icmp sgt i32 %14, 0
  %21 = select i1 %20, i32 %14, i32 0
  %22 = sitofp i32 %21 to float
  store float %22, float* %19, align 4
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %24 = icmp sgt i32 %16, 0
  %25 = select i1 %24, i32 %16, i32 0
  %26 = sitofp i32 %25 to float
  store float %26, float* %23, align 4
  %27 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %28 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %29 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %28, align 8
  %30 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #9
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 0
  store <2 x float> %33, <2 x float>* %32, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %35 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = bitcast %"class.cc::PaintCanvas"* %29 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %37 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %37, i64 28
  %39 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %38, align 8
  call void %39(%"class.cc::PaintCanvas"* %29, %struct.SkRect* nonnull dereferenceable(16) %27, %"class.cc::PaintFlags"* dereferenceable(72) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFEj(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::RectF"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false) #9
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  %7 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 10
  %9 = bitcast %union.anon.78* %8 to i16*
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, -193
  %12 = or i16 %11, 64
  store i16 %12, i16* %9, align 8
  %13 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 7
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 9
  store i32 3, i32* %14, align 4
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %16 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %17 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %16, align 8
  %18 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 0
  store <2 x float> %21, <2 x float>* %20, align 8
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %23 = extractvalue { <2 x float>, <2 x float> } %19, 1
  store <2 x float> %23, <2 x float>* %22, align 8
  %24 = bitcast %"class.cc::PaintCanvas"* %17 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %25 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %25, i64 28
  %27 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %26, align 8
  call void %27(%"class.cc::PaintCanvas"* %17, %struct.SkRect* nonnull dereferenceable(16) %15, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFEj11SkBlendMode(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::RectF"* dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.cc::PaintFlags", align 8
  %7 = bitcast %"class.cc::PaintFlags"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  %8 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 6
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 10
  %10 = bitcast %union.anon.78* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, -193
  %13 = or i16 %12, 64
  store i16 %13, i16* %10, align 8
  %14 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 7
  store float 0.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 9
  store i32 %3, i32* %15, align 4
  %16 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %17 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %18 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %17, align 8
  %19 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 0
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %24 = extractvalue { <2 x float>, <2 x float> } %20, 1
  store <2 x float> %24, <2 x float>* %23, align 8
  %25 = bitcast %"class.cc::PaintCanvas"* %18 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %26 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %26, i64 28
  %28 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %27, align 8
  call void %28(%"class.cc::PaintCanvas"* %18, %struct.SkRect* nonnull dereferenceable(16) %16, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::RectF"* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %7 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %6, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = tail call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %7 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %15 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %15, i64 28
  %17 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %16, align 8
  call void %17(%"class.cc::PaintCanvas"* %7, %struct.SkRect* nonnull dereferenceable(16) %5, %"class.cc::PaintFlags"* dereferenceable(72) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawLineERKNS_5PointES3_j(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false) #9
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  %19 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  store i32 %3, i32* %19, align 8
  %20 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 7
  store float 1.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %22 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %21, align 8
  %23 = bitcast %"class.cc::PaintCanvas"* %22 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %24 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %24, i64 27
  %26 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %25, align 8
  call void %26(%"class.cc::PaintCanvas"* %22, float %8, float %11, float %14, float %17, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawLineERKNS_6PointFES3_j(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  %7 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 7
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %10 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %9, align 8
  %11 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = bitcast %"class.cc::PaintCanvas"* %10 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %20 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %20, i64 27
  %22 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %21, align 8
  call void %22(%"class.cc::PaintCanvas"* %10, float %12, float %14, float %16, float %18, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawLineERKNS_6PointFES3_RKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %6 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %5, align 8
  %7 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = bitcast %"class.cc::PaintCanvas"* %6 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %16 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %16, i64 27
  %18 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %17, align 8
  tail call void %18(%"class.cc::PaintCanvas"* %6, float %8, float %10, float %12, float %14, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawLineERKNS_5PointES3_RKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %18 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %17, align 8
  %19 = bitcast %"class.cc::PaintCanvas"* %18 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %20 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %20, i64 27
  %22 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %21, align 8
  tail call void %22(%"class.cc::PaintCanvas"* %18, float %7, float %10, float %13, float %16, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas13DrawSharpLineENS_6PointFES1_j(%"class.gfx::Canvas"*, <2 x float>, <2 x float>, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.gfx::ScopedCanvas", align 8
  %6 = alloca %"class.cc::PaintFlags", align 8
  %7 = bitcast %"class.gfx::ScopedCanvas"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.gfx::ScopedCanvas"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %5, %"class.gfx::Canvas"* %0) #9
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 8
  %11 = fdiv float 1.000000e+00, %10
  %12 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %13 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %13 to void (%"class.cc::PaintCanvas"*, float, float)***
  %15 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %15, i64 12
  %17 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %16, align 8
  call void %17(%"class.cc::PaintCanvas"* %13, float %11, float %11) #9
  %18 = load float, float* %9, align 8
  %19 = extractelement <2 x float> %1, i32 0
  %20 = fmul float %19, %18
  %21 = extractelement <2 x float> %1, i32 1
  %22 = fmul float %21, %18
  %23 = extractelement <2 x float> %2, i32 0
  %24 = fmul float %23, %18
  %25 = extractelement <2 x float> %2, i32 1
  %26 = fmul float %25, %18
  %27 = bitcast %"class.cc::PaintFlags"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  %28 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 6
  store i32 %3, i32* %28, align 8
  %29 = call float @llvm.floor.f32(float %18) #9
  %30 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 7
  store float %29, float* %30, align 4
  %31 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %12, align 8
  %32 = bitcast %"class.cc::PaintCanvas"* %31 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %33 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %33, i64 27
  %35 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %34, align 8
  call void %35(%"class.cc::PaintCanvas"* %31, float %20, float %22, float %24, float %26, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %6) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #9
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas11Draw1pxLineENS_6PointFES1_j(%"class.gfx::Canvas"*, <2 x float>, <2 x float>, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = alloca %"class.gfx::ScopedCanvas", align 8
  %7 = bitcast %"class.gfx::ScopedCanvas"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.gfx::ScopedCanvas"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %6, %"class.gfx::Canvas"* %0) #9
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 8
  %11 = fdiv float 1.000000e+00, %10
  %12 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %13 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %12, align 8
  %14 = bitcast %"class.cc::PaintCanvas"* %13 to void (%"class.cc::PaintCanvas"*, float, float)***
  %15 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %15, i64 12
  %17 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %16, align 8
  call void %17(%"class.cc::PaintCanvas"* %13, float %11, float %11) #9
  %18 = load float, float* %9, align 8
  %19 = extractelement <2 x float> %1, i32 0
  %20 = fmul float %19, %18
  %21 = extractelement <2 x float> %1, i32 1
  %22 = fmul float %21, %18
  %23 = extractelement <2 x float> %2, i32 0
  %24 = fmul float %23, %18
  %25 = extractelement <2 x float> %2, i32 1
  %26 = fmul float %25, %18
  %27 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false) #9
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  %28 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  store i32 %3, i32* %28, align 8
  %29 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 7
  store float 1.000000e+00, float* %29, align 4
  %30 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %12, align 8
  %31 = bitcast %"class.cc::PaintCanvas"* %30 to void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)***
  %32 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %32, i64 27
  %34 = load void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)** %33, align 8
  call void %34(%"class.cc::PaintCanvas"* %30, float %20, float %22, float %24, float %26, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #9
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas10DrawCircleERKNS_5PointEiRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8), i32, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %8 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %7, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %11, %2
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, %2
  %17 = sitofp i32 %16 to float
  %18 = add nsw i32 %11, %2
  %19 = sitofp i32 %18 to float
  %20 = add nsw i32 %15, %2
  %21 = sitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %13, i32 0
  %23 = insertelement <2 x float> %22, float %17, i32 1
  %24 = insertelement <2 x float> undef, float %19, i32 0
  %25 = insertelement <2 x float> %24, float %21, i32 1
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %23, <2 x float>* %26, align 8
  %27 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %25, <2 x float>* %27, align 8
  %28 = bitcast %"class.cc::PaintCanvas"* %8 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %29 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %29, i64 30
  %31 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %30, align 8
  call void %31(%"class.cc::PaintCanvas"* %8, %struct.SkRect* nonnull dereferenceable(16) %6, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas10DrawCircleERKNS_6PointFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %8 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %7, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = bitcast %"class.gfx::PointF"* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = insertelement <2 x float> undef, float %2, i32 0
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> zeroinitializer
  %14 = fsub <2 x float> %11, %13
  %15 = fadd <2 x float> %11, %13
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %14, <2 x float>* %16, align 8
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %15, <2 x float>* %17, align 8
  %18 = bitcast %"class.cc::PaintCanvas"* %8 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %19 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %19, i64 30
  %21 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %20, align 8
  call void %21(%"class.cc::PaintCanvas"* %8, %struct.SkRect* nonnull dereferenceable(16) %6, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas13DrawRoundRectERKNS_4RectEiRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.gfx::RectF", align 4
  %7 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 0
  store float %10, float* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 1
  store float %13, float* %19, align 4
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 0
  %21 = icmp sgt i32 %15, 0
  %22 = select i1 %21, i32 %15, i32 0
  %23 = sitofp i32 %22 to float
  store float %23, float* %20, align 4
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 1
  %25 = icmp sgt i32 %17, 0
  %26 = select i1 %25, i32 %17, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %24, align 4
  %28 = sitofp i32 %2 to float
  %29 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %30 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %31 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %32 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %6) #9
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 0
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %37 = extractvalue { <2 x float>, <2 x float> } %33, 1
  store <2 x float> %37, <2 x float>* %36, align 8
  %38 = bitcast %"class.cc::PaintCanvas"* %31 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)***
  %39 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)** %39, i64 33
  %41 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)** %40, align 8
  call void %41(%"class.cc::PaintCanvas"* %31, %struct.SkRect* nonnull dereferenceable(16) %29, float %28, float %28, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::RectF"* dereferenceable(16), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %8 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %7, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = tail call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 0
  store <2 x float> %12, <2 x float>* %11, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %14 = extractvalue { <2 x float>, <2 x float> } %10, 1
  store <2 x float> %14, <2 x float>* %13, align 8
  %15 = bitcast %"class.cc::PaintCanvas"* %8 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)***
  %16 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)** %16, i64 33
  %18 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)** %17, align 8
  call void %18(%"class.cc::PaintCanvas"* %8, %struct.SkRect* nonnull dereferenceable(16) %6, float %2, float %2, %"class.cc::PaintFlags"* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %5 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %4, align 8
  %6 = bitcast %"class.cc::PaintCanvas"* %5 to void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)***
  %7 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)** %7, i64 34
  %9 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)** %8, align 8
  tail call void %9(%"class.cc::PaintCanvas"* %5, %class.SkPath* dereferenceable(16) %1, %"class.cc::PaintFlags"* dereferenceable(72) %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas18DrawSolidFocusRectENS_5RectFEji(%"class.gfx::Canvas"* nocapture readonly, <2 x float>, <2 x float>, i32, i32) local_unnamed_addr #5 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::RectF"*
  %9 = alloca %"class.cc::PaintFlags", align 8
  %10 = alloca <4 x float>, align 16
  %11 = bitcast <4 x float>* %10 to %"class.gfx::InsetsF"*
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %12, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %13, align 8
  %14 = bitcast %"class.cc::PaintFlags"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %9) #9
  %15 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 6
  store i32 %3, i32* %15, align 8
  %16 = sitofp i32 %4 to float
  %17 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 8
  %19 = fmul float %18, %16
  %20 = call float @llvm.floor.f32(float %19) #9
  %21 = fdiv float %20, %18
  %22 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 7
  store float %21, float* %22, align 4
  %23 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 10
  %24 = bitcast %union.anon.78* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, -193
  %27 = or i16 %26, 64
  store i16 %27, i16* %24, align 8
  %28 = bitcast <4 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = fmul float %21, 5.000000e-01
  %30 = insertelement <4 x float> undef, float %29, i32 0
  %31 = shufflevector <4 x float> %30, <4 x float> undef, <4 x i32> zeroinitializer
  store <4 x float> %31, <4 x float>* %10, align 16
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %8, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  %32 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %33 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %34 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %33, align 8
  %35 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  %36 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %8) #9
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %38 = extractvalue { <2 x float>, <2 x float> } %36, 0
  store <2 x float> %38, <2 x float>* %37, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %40 = extractvalue { <2 x float>, <2 x float> } %36, 1
  store <2 x float> %40, <2 x float>* %39, align 8
  %41 = bitcast %"class.cc::PaintCanvas"* %34 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %42 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %42, i64 28
  %44 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %43, align 8
  call void %44(%"class.cc::PaintCanvas"* %34, %struct.SkRect* nonnull dereferenceable(16) %32, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #9
  ret void
}

declare void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"*, %"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEii(%"class.gfx::Canvas"*, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiiRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkia"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5)
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiiRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.gfx::ScopedCanvas", align 8
  %7 = alloca %class.sk_sp.85, align 8
  %8 = alloca %class.sk_sp.44, align 8
  %9 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 8
  %11 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %10) #9
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 0, i32 5, i32 0, i32 0
  %17 = load %class.SkPixelRef*, %class.SkPixelRef** %16, align 8
  %18 = icmp eq %class.SkPixelRef* %17, null
  br i1 %18, label %96, label %23

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 0, i32 1, i32 0
  %21 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %20, align 8
  %22 = icmp eq %"class.cc::PaintOpBuffer"* %21, null
  br i1 %22, label %96, label %23

23:                                               ; preds = %15, %19
  %24 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 0, i32 6
  %25 = load float, float* %24, align 8
  %26 = fcmp oeq float %25, 0.000000e+00
  %27 = select i1 %26, float 1.000000e+00, float %25
  %28 = bitcast %"class.gfx::ScopedCanvas"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = bitcast %"class.gfx::ScopedCanvas"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %6, %"class.gfx::Canvas"* %0) #9
  %30 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %31 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %32 = fdiv float 1.000000e+00, %27
  %33 = bitcast %"class.cc::PaintCanvas"* %31 to void (%"class.cc::PaintCanvas"*, float, float)***
  %34 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %34, i64 12
  %36 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %35, align 8
  call void %36(%"class.cc::PaintCanvas"* %31, float %32, float %32) #9
  %37 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %38 = sitofp i32 %2 to float
  %39 = fmul float %27, %38
  %40 = call float @llvm.round.f32(float %39) #9
  %41 = sitofp i32 %3 to float
  %42 = fmul float %27, %41
  %43 = call float @llvm.round.f32(float %42) #9
  %44 = bitcast %"class.cc::PaintCanvas"* %37 to void (%"class.cc::PaintCanvas"*, float, float)***
  %45 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %45, i64 11
  %47 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %46, align 8
  call void %47(%"class.cc::PaintCanvas"* %37, float %40, float %43) #9
  %48 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %49 = bitcast %"class.cc::PaintCanvas"* %48 to i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %50 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %50, i64 6
  %52 = load i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, i32 (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %51, align 8
  %53 = call i32 %52(%"class.cc::PaintCanvas"* %48, %struct.SkRect* null, %"class.cc::PaintFlags"* %4) #9
  %54 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %55 = bitcast %class.sk_sp.44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZNK3gfx12ImageSkiaRep14GetPaintRecordEv(%class.sk_sp.44* nonnull sret %8, %"class.gfx::ImageSkiaRep"* %11) #9
  %56 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %8, i64 0, i32 0
  %57 = bitcast %class.sk_sp.44* %8 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %56, align 8
  %59 = bitcast %class.sk_sp.85* %7 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.cc::PaintCanvas"* %54 to void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)***
  %61 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)**, void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)** %61, i64 40
  %63 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.85*)** %62, align 8
  call void %63(%"class.cc::PaintCanvas"* %54, %class.sk_sp.85* nonnull %7) #9
  %64 = getelementptr inbounds %class.sk_sp.85, %class.sk_sp.85* %7, i64 0, i32 0
  %65 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %64, align 8
  %66 = icmp eq %"class.cc::PaintOpBuffer"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %23
  %68 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %"class.cc::PaintOpBuffer"* %65 to %class.SkRefCntBase*
  %73 = bitcast %"class.cc::PaintOpBuffer"* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #9
  br label %77

77:                                               ; preds = %23, %67, %71
  %78 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %56, align 8
  %79 = icmp eq %"class.cc::PaintOpBuffer"* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %"class.cc::PaintOpBuffer"* %78 to %class.SkRefCntBase*
  %86 = bitcast %"class.cc::PaintOpBuffer"* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #9
  br label %90

90:                                               ; preds = %77, %80, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  %91 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %92 = bitcast %"class.cc::PaintCanvas"* %91 to void (%"class.cc::PaintCanvas"*)***
  %93 = load void (%"class.cc::PaintCanvas"*)**, void (%"class.cc::PaintCanvas"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %93, i64 8
  %95 = load void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %94, align 8
  call void %95(%"class.cc::PaintCanvas"* %91) #9
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  br label %96

96:                                               ; preds = %15, %19, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiih(%"class.gfx::Canvas"*, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.cc::PaintFlags", align 8
  %7 = bitcast %"class.cc::PaintFlags"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  %8 = zext i8 %4 to i32
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %6, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 16711680
  %12 = and i32 %10, 65280
  %13 = and i32 %10, 255
  %14 = shl nuw i32 %8, 24
  %15 = or i32 %11, %14
  %16 = or i32 %15, %12
  %17 = or i32 %16, %13
  store i32 %17, i32* %9, align 8
  call void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiiRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkia"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %6)
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #2

declare void @_ZNK3gfx12ImageSkiaRep14GetPaintRecordEv(%class.sk_sp.44* sret, %"class.gfx::ImageSkiaRep"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiiiiiiiib(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i32, i32, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.cc::PaintFlags", align 8
  %13 = bitcast %"class.cc::PaintFlags"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %12) #9
  %14 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %15 = load float, float* %14, align 8
  %16 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %15) #9
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 5, i32 0, i32 0
  %22 = load %class.SkPixelRef*, %class.SkPixelRef** %21, align 8
  %23 = icmp eq %class.SkPixelRef* %22, null
  br i1 %23, label %29, label %28

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 1, i32 0
  %26 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %25, align 8
  %27 = icmp eq %"class.cc::PaintOpBuffer"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24, %20
  call void @_ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %16, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i1 zeroext %10, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %12, i1 zeroext true) #9
  br label %29

29:                                               ; preds = %20, %24, %28
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12DrawImageIntERKNS_9ImageSkiaEiiiiiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i32, i32, i32, i32, i32, i32, i1 zeroext, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %13 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %14 = load float, float* %13, align 8
  %15 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %14) #9
  %16 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %15, i64 0, i32 5, i32 0, i32 0
  %21 = load %class.SkPixelRef*, %class.SkPixelRef** %20, align 8
  %22 = icmp eq %class.SkPixelRef* %21, null
  br i1 %22, label %28, label %27

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %15, i64 0, i32 1, i32 0
  %25 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %24, align 8
  %26 = icmp eq %"class.cc::PaintOpBuffer"* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %19, %23
  tail call void @_ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %15, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i1 zeroext %10, %"class.cc::PaintFlags"* dereferenceable(72) %11, i1 zeroext true)
  br label %28

28:                                               ; preds = %19, %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, i32, i32, i32, i32, i32, i32, i1 zeroext, %"class.cc::PaintFlags"* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %14 = alloca %struct.SkRect, align 4
  %15 = alloca %struct.SkRect, align 4
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca %"class.cc::PaintFlags", align 8
  %18 = alloca %class.sk_sp.37, align 8
  %19 = icmp slt i32 %4, 1
  %20 = icmp slt i32 %5, 1
  %21 = or i1 %19, %20
  br i1 %21, label %136, label %22

22:                                               ; preds = %13
  %23 = bitcast %struct.SkRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 0
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 2
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 3
  %28 = sitofp i32 %6 to float
  store float %28, float* %24, align 4
  %29 = sitofp i32 %7 to float
  store float %29, float* %25, align 4
  %30 = add nsw i32 %8, %6
  %31 = sitofp i32 %30 to float
  store float %31, float* %26, align 4
  %32 = add nsw i32 %9, %7
  %33 = sitofp i32 %32 to float
  store float %33, float* %27, align 4
  %34 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -1, i64 16, i1 false) #9
  %36 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %35, align 8
  %37 = bitcast %"class.cc::PaintCanvas"* %36 to i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)***
  %38 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)**, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %38, i64 22
  %40 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.cc::PaintCanvas"* %36, %struct.SkRect* nonnull %14) #9
  br i1 %41, label %43, label %42

42:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %135

43:                                               ; preds = %22
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 3
  %46 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 2
  %47 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 1
  %48 = load float, float* %44, align 4
  %49 = load float, float* %47, align 4
  %50 = load float, float* %46, align 4
  %51 = load float, float* %45, align 4
  %52 = fcmp olt float %48, %28
  %53 = select i1 %52, float %28, float %48
  %54 = fcmp ogt float %50, %31
  %55 = select i1 %54, float %31, float %50
  %56 = fcmp olt float %49, %29
  %57 = select i1 %56, float %29, float %49
  %58 = fcmp ogt float %51, %33
  %59 = fcmp olt float %53, %55
  %60 = select i1 %58, float %33, float %51
  %61 = fcmp olt float %57, %60
  %62 = and i1 %59, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br i1 %62, label %63, label %135

63:                                               ; preds = %43
  %64 = sitofp i32 %8 to float
  %65 = sitofp i32 %4 to float
  %66 = fdiv float %64, %65
  %67 = sitofp i32 %9 to float
  %68 = sitofp i32 %5 to float
  %69 = fdiv float %67, %68
  %70 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #9
  %71 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %72 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %72, align 16
  %73 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %74, align 16
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %75, align 16
  store i32 16, i32* %71, align 4
  %76 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %16, float %66, float %69) #9
  %77 = sub nsw i32 0, %2
  %78 = sitofp i32 %77 to float
  %79 = sub nsw i32 0, %3
  %80 = sitofp i32 %79 to float
  %81 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %16, float %78, float %80) #9
  %82 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %16, float %28, float %29) #9
  %83 = bitcast %"class.cc::PaintFlags"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %83) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %17, %"class.cc::PaintFlags"* dereferenceable(72) %11) #9
  %84 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %17, i64 0, i32 10
  %85 = bitcast %union.anon.78* %84 to i16*
  %86 = zext i1 %10 to i16
  %87 = load i16, i16* %85, align 8
  %88 = shl nuw nsw i16 %86, 8
  %89 = and i16 %87, -769
  %90 = or i16 %89, %88
  store i16 %90, i16* %85, align 8
  br i1 %12, label %91, label %96

91:                                               ; preds = %63
  %92 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 6
  %93 = load float, float* %92, align 8
  %94 = fcmp oeq float %93, 0.000000e+00
  %95 = select i1 %94, float 1.000000e+00, float %93
  br label %96

96:                                               ; preds = %63, %91
  %97 = phi float [ %95, %91 ], [ 1.000000e+00, %63 ]
  call void @_ZN3gfx28CreateImageRepShaderForScaleERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrixf(%class.sk_sp.37* nonnull sret %18, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %1, i32 1, i32 1, %class.SkMatrix* nonnull dereferenceable(40) %16, float %97) #9
  %98 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %17, i64 0, i32 1
  %99 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %18, i64 0, i32 0
  %100 = bitcast %class.sk_sp.37* %18 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %99, align 8
  %102 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %98, i64 0, i32 0
  %103 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %102, align 8
  %104 = bitcast %class.sk_sp.37* %98 to i64*
  store i64 %101, i64* %104, align 8
  %105 = icmp eq %"class.cc::PaintShader"* %103, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %"class.cc::PaintShader"* %103 to %class.SkRefCntBase*
  %112 = bitcast %"class.cc::PaintShader"* %103 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #9
  br label %116

116:                                              ; preds = %96, %106, %110
  %117 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %99, align 8
  %118 = icmp eq %"class.cc::PaintShader"* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %117, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %"class.cc::PaintShader"* %117 to %class.SkRefCntBase*
  %125 = bitcast %"class.cc::PaintShader"* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #9
  br label %129

129:                                              ; preds = %116, %119, %123
  %130 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %35, align 8
  %131 = bitcast %"class.cc::PaintCanvas"* %130 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %132 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %132, i64 28
  %134 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %133, align 8
  call void %134(%"class.cc::PaintCanvas"* %130, %struct.SkRect* nonnull dereferenceable(16) %15, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %17) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #9
  br label %135

135:                                              ; preds = %42, %43, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %136

136:                                              ; preds = %13, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas19DrawImageIntInPixelERKNS_12ImageSkiaRepEiiiibRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, i32, i32, i1 zeroext, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %1, i32 0, i32 0, i32 %10, i32 %12, i32 %2, i32 %3, i32 %4, i32 %5, i1 zeroext %6, %"class.cc::PaintFlags"* dereferenceable(72) %7, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas15DrawImageInPathERKNS_9ImageSkiaEiiRK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %"class.cc::PaintFlags", align 8
  %9 = alloca %class.sk_sp.37, align 8
  %10 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %11 = load float, float* %10, align 8
  %12 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %11) #9
  %13 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %12, i64 0, i32 5, i32 0, i32 0
  %18 = load %class.SkPixelRef*, %class.SkPixelRef** %17, align 8
  %19 = icmp eq %class.SkPixelRef* %18, null
  br i1 %19, label %73, label %24

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %12, i64 0, i32 1, i32 0
  %22 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %21, align 8
  %23 = icmp eq %"class.cc::PaintOpBuffer"* %22, null
  br i1 %23, label %73, label %24

24:                                               ; preds = %16, %20
  %25 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #9
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %27 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 16
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 16
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %30, align 16
  store i32 16, i32* %26, align 4
  %31 = sitofp i32 %2 to float
  %32 = sitofp i32 %3 to float
  %33 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %7, float %31, float %32) #9
  %34 = bitcast %"class.cc::PaintFlags"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %34) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %8, %"class.cc::PaintFlags"* dereferenceable(72) %5) #9
  call void @_ZN3gfx20CreateImageRepShaderERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrix(%class.sk_sp.37* nonnull sret %9, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %12, i32 1, i32 1, %class.SkMatrix* nonnull dereferenceable(40) %7) #9
  %35 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %9, i64 0, i32 0
  %37 = bitcast %class.sk_sp.37* %9 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %36, align 8
  %39 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %35, i64 0, i32 0
  %40 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %39, align 8
  %41 = bitcast %class.sk_sp.37* %35 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq %"class.cc::PaintShader"* %40, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %"class.cc::PaintShader"* %40 to %class.SkRefCntBase*
  %49 = bitcast %"class.cc::PaintShader"* %40 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #9
  br label %53

53:                                               ; preds = %24, %43, %47
  %54 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %36, align 8
  %55 = icmp eq %"class.cc::PaintShader"* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %"class.cc::PaintShader"* %54 to %class.SkRefCntBase*
  %62 = bitcast %"class.cc::PaintShader"* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #9
  br label %66

66:                                               ; preds = %53, %56, %60
  %67 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %68 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %67, align 8
  %69 = bitcast %"class.cc::PaintCanvas"* %68 to void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)***
  %70 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)** %70, i64 34
  %72 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)** %71, align 8
  call void %72(%"class.cc::PaintCanvas"* %68, %class.SkPath* dereferenceable(16) %4, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %8) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #9
  br label %73

73:                                               ; preds = %16, %20, %66
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #2

declare void @_ZN3gfx20CreateImageRepShaderERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrix(%class.sk_sp.37* sret, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas11DrawSkottieE13scoped_refptrIN2cc14SkottieWrapperEERKNS_4RectEf(%"class.gfx::Canvas"* nocapture readonly, %"class.cc::SkottieWrapper"*, %"class.gfx::Rect"* dereferenceable(16), float) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %8 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %7, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %2) #9
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 0
  store <2 x float> %12, <2 x float>* %11, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %14 = extractvalue { <2 x float>, <2 x float> } %10, 1
  store <2 x float> %14, <2 x float>* %13, align 8
  %15 = bitcast %"class.cc::PaintCanvas"* %8 to void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)***
  %16 = load void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)**, void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)*, void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)** %16, i64 37
  %18 = load void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)*, void (%"class.cc::PaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)** %17, align 8
  call void %18(%"class.cc::PaintCanvas"* %8, %"class.cc::SkottieWrapper"* %1, %struct.SkRect* nonnull dereferenceable(16) %6, float %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas14DrawStringRectERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEjRKNS_4RectE(%"class.gfx::Canvas"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), i32, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #9
  %7 = select i1 %6, i32 4, i32 1
  tail call void @_ZN3gfx6Canvas23DrawStringRectWithFlagsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEjRKNS_4RectEi(%"class.gfx::Canvas"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.gfx::FontList"* dereferenceable(8) %2, i32 %3, %"class.gfx::Rect"* dereferenceable(16) %4, i32 %7) #9
  ret void
}

declare void @_ZN3gfx6Canvas23DrawStringRectWithFlagsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEjRKNS_4RectEi(%"class.gfx::Canvas"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), i32, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12TileImageIntERKNS_9ImageSkiaEiiii(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gfx6Canvas12TileImageIntERKNS_9ImageSkiaEiiiiiif10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkia"* dereferenceable(8) %1, i32 0, i32 0, i32 %2, i32 %3, i32 %4, i32 %5, float 1.000000e+00, i32 1, i32 1, %"class.cc::PaintFlags"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas12TileImageIntERKNS_9ImageSkiaEiiiiiif10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i32, i32, i32, i32, float, i32, i32, %"class.cc::PaintFlags"*) local_unnamed_addr #0 align 2 {
  %13 = alloca %struct.SkRect, align 4
  %14 = alloca %struct.SkRect, align 4
  %15 = alloca %"class.cc::PaintFlags", align 8
  %16 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 0
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 1
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 2
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %14, i64 0, i32 3
  %21 = sitofp i32 %4 to float
  store float %21, float* %17, align 4
  %22 = sitofp i32 %5 to float
  store float %22, float* %18, align 4
  %23 = add nsw i32 %6, %4
  %24 = sitofp i32 %23 to float
  store float %24, float* %19, align 4
  %25 = add nsw i32 %7, %5
  %26 = sitofp i32 %25 to float
  store float %26, float* %20, align 4
  %27 = bitcast %struct.SkRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -1, i64 16, i1 false) #9
  %29 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %28, align 8
  %30 = bitcast %"class.cc::PaintCanvas"* %29 to i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)***
  %31 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)**, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %31, i64 22
  %33 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.cc::PaintCanvas"* %29, %struct.SkRect* nonnull %13) #9
  br i1 %34, label %36, label %35

35:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  br label %68

36:                                               ; preds = %12
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 0
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 3
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 2
  %40 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 1
  %41 = load float, float* %37, align 4
  %42 = load float, float* %40, align 4
  %43 = load float, float* %39, align 4
  %44 = load float, float* %38, align 4
  %45 = fcmp olt float %41, %21
  %46 = select i1 %45, float %21, float %41
  %47 = fcmp ogt float %43, %24
  %48 = select i1 %47, float %24, float %43
  %49 = fcmp olt float %42, %22
  %50 = select i1 %49, float %22, float %42
  %51 = fcmp ogt float %44, %26
  %52 = fcmp olt float %46, %48
  %53 = select i1 %51, float %26, float %44
  %54 = fcmp olt float %50, %53
  %55 = and i1 %52, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  br i1 %55, label %56, label %68

56:                                               ; preds = %36
  %57 = bitcast %"class.cc::PaintFlags"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx6Canvas18DrawImageIntHelperERKNS_12ImageSkiaRepEiiiiiiiibRKN2cc10PaintFlagsEb.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %15) #9
  %58 = icmp eq %"class.cc::PaintFlags"* %11, null
  %59 = select i1 %58, %"class.cc::PaintFlags"* %15, %"class.cc::PaintFlags"* %11
  %60 = call zeroext i1 @_ZN3gfx6Canvas23InitPaintFlagsForTilingERKNS_9ImageSkiaEiiffii10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"* %0, %"class.gfx::ImageSkia"* dereferenceable(8) %1, i32 %2, i32 %3, float %8, float %8, i32 %4, i32 %5, i32 %9, i32 %10, %"class.cc::PaintFlags"* %59)
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %28, align 8
  %63 = bitcast %"class.cc::PaintCanvas"* %62 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %64 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %64, i64 28
  %66 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %65, align 8
  call void %66(%"class.cc::PaintCanvas"* %62, %struct.SkRect* nonnull dereferenceable(16) %14, %"class.cc::PaintFlags"* dereferenceable(72) %59) #9
  br label %67

67:                                               ; preds = %61, %56
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  br label %68

68:                                               ; preds = %35, %36, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx6Canvas18IntersectsClipRectERK6SkRect(%"class.gfx::Canvas"* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %6 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -1, i64 16, i1 false)
  %7 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %5, align 8
  %8 = bitcast %"class.cc::PaintCanvas"* %7 to i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)***
  %9 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)**, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %9, i64 22
  %11 = load i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)*, i1 (%"class.cc::PaintCanvas"*, %struct.SkRect*)** %10, align 8
  %12 = call zeroext i1 %11(%"class.cc::PaintCanvas"* %7, %struct.SkRect* nonnull %3) #9
  br i1 %12, label %13, label %41

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %18 = load float, float* %14, align 4
  %19 = load float, float* %17, align 4
  %20 = load float, float* %16, align 4
  %21 = load float, float* %15, align 4
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %18, %23
  %31 = select i1 %30, float %23, float %18
  %32 = fcmp olt float %27, %20
  %33 = select i1 %32, float %27, float %20
  %34 = fcmp olt float %19, %25
  %35 = select i1 %34, float %25, float %19
  %36 = fcmp olt float %29, %21
  %37 = fcmp olt float %31, %33
  %38 = select i1 %36, float %29, float %21
  %39 = fcmp olt float %35, %38
  %40 = and i1 %37, %39
  br label %41

41:                                               ; preds = %13, %2
  %42 = phi i1 [ false, %2 ], [ %40, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx6Canvas23InitPaintFlagsForTilingERKNS_9ImageSkiaEiiffii10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, float, float, i32, i32, i32, i32, %"class.cc::PaintFlags"* nocapture) local_unnamed_addr #0 align 2 {
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.sk_sp.37, align 8
  %14 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %15 = load float, float* %14, align 8
  %16 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %15) #9
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 5, i32 0, i32 0
  %22 = load %class.SkPixelRef*, %class.SkPixelRef** %21, align 8
  %23 = icmp eq %class.SkPixelRef* %22, null
  br i1 %23, label %76, label %28

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %16, i64 0, i32 1, i32 0
  %26 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %25, align 8
  %27 = icmp eq %"class.cc::PaintOpBuffer"* %26, null
  br i1 %27, label %76, label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #9
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %31 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 16
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 16
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %34, align 16
  store i32 16, i32* %30, align 4
  %35 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %12, float %4, float %5) #9
  %36 = sub nsw i32 0, %2
  %37 = sitofp i32 %36 to float
  %38 = sub nsw i32 0, %3
  %39 = sitofp i32 %38 to float
  %40 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %12, float %37, float %39) #9
  %41 = sitofp i32 %6 to float
  %42 = sitofp i32 %7 to float
  %43 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %12, float %41, float %42) #9
  call void @_ZN3gfx20CreateImageRepShaderERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrix(%class.sk_sp.37* nonnull sret %13, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %16, i32 %8, i32 %9, %class.SkMatrix* nonnull dereferenceable(40) %12) #9
  %44 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %10, i64 0, i32 1
  %45 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %13, i64 0, i32 0
  %46 = bitcast %class.sk_sp.37* %13 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %45, align 8
  %48 = getelementptr inbounds %class.sk_sp.37, %class.sk_sp.37* %44, i64 0, i32 0
  %49 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %48, align 8
  %50 = bitcast %class.sk_sp.37* %44 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.cc::PaintShader"* %49, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %28
  %53 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %"class.cc::PaintShader"* %49 to %class.SkRefCntBase*
  %58 = bitcast %"class.cc::PaintShader"* %49 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  call void %61(%class.SkRefCntBase* nonnull %57) #9
  br label %62

62:                                               ; preds = %28, %52, %56
  %63 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %45, align 8
  %64 = icmp eq %"class.cc::PaintShader"* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %"class.cc::PaintShader"* %63 to %class.SkRefCntBase*
  %71 = bitcast %"class.cc::PaintShader"* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #9
  br label %75

75:                                               ; preds = %62, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #9
  br label %76

76:                                               ; preds = %20, %24, %75
  %77 = phi i1 [ true, %75 ], [ false, %24 ], [ false, %20 ]
  ret i1 %77
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas9TransformERKNS_9TransformE(%"class.gfx::Canvas"* nocapture readonly, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 4
  %4 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %5 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %4, align 8
  %6 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %3, %class.SkMatrix44* %7) #9
  %8 = bitcast %"class.cc::PaintCanvas"* %5 to void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)***
  %9 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)**, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %9, i64 14
  %11 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %10, align 8
  call void %11(%"class.cc::PaintCanvas"* %5, %class.SkMatrix* nonnull dereferenceable(40) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void
}

declare void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* sret, %class.SkMatrix44*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx6Canvas9GetBitmapEv(%class.SkBitmap* noalias sret, %"class.gfx::Canvas"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %8) #9
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

declare void @_ZN3gfx28CreateImageRepShaderForScaleERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrixf(%class.sk_sp.37* sret, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, %class.SkMatrix* dereferenceable(40), float) local_unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"*, %class.SkBitmap* dereferenceable(56), %"class.cc::ImageProvider"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = distinct !{!5, !6, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!6 = distinct !{!6, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 2000}
