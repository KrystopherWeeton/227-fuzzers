; ModuleID = '../../third_party/blink/renderer/core/html/html_collection.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_collection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.133", i32, [4 x i8], %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.269", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.310", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.249", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i64 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { i64 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { float }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.252", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.261" }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263" }
%"class.WTF::VectorBufferBase.263" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.291" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.541" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.309 }
%class.scoped_refptr.309 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.121", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.121" = type { %"class.base::RefCounted.122" }
%"class.base::RefCounted.122" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.125" }
%"class.blink::HeapHashMap.125" = type { %"class.WTF::HashMap.128" }
%"class.WTF::HashMap.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.WTF::KeyValuePair.131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.131" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.8", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member", i16 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.15" }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::HeapVector"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.19"*, i32, i32 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.22" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.0", %"class.blink::Member.0" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member.0", %"class.blink::Member.4" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.38", %"class.blink::Member.2", %"class.blink::Member.40", %"class.blink::Member.40", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.64", %"class.blink::HeapVector.66" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.82", %"class.WTF::Vector.82", i8, i32, %"class.blink::Member.93", %"class.blink::Member.95", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.106", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.72", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.117", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.19", %"class.blink::Member.326", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::UserActionElementSet", %"class.blink::Member.335", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.342", i16, i8, %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::Member.355", %"class.blink::TextLinkColors", %"class.blink::Member.357", i8, [7 x i8], %"class.blink::HeapHashMap.359", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.19", %"class.WTF::Vector.366", %"class.blink::Member.371", %"class.blink::Member.373", i8, %"class.blink::Member.19", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.375", %"class.blink::HeapVector.377", %"class.std::__1::unique_ptr.385", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.391", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.404", %"class.WTF::Vector.406", i8, i8, %"class.std::__1::unique_ptr.411", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.417", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.425", i8, i32, %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.433", %"class.WTF::HashMap.435", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.38", %"class.blink::Member.38", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.448", i8, i32, %"class.blink::Member.455", %"class.blink::Member.457", i32, %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.std::__1::unique_ptr.465", i64, %"class.std::__1::unique_ptr.471", i32, i32, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.483", %"class.WTF::Vector.485", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.490", %"class.blink::Member.497", %"class.std::__1::unique_ptr.499", %"class.blink::Member.505", i8, i8, %"class.WTF::String", %"class.blink::Member.507", i8, [7 x i8], %"class.blink::HeapHashMap.509", %"class.blink::HeapObserverSet", %"class.blink::Member.523", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.525", i32, i8, i8, %"class.blink::WeakMember.527", %"class.blink::Member.528" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.75" }
%"class.blink::HeapHashMap.75" = type { %"class.WTF::HashMap.78" }
%"class.WTF::HashMap.78" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.86" }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.328" }
%"class.blink::HeapHashMap.328" = type { %"class.WTF::HashMap.331" }
%"class.WTF::HashMap.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::WeakMember.341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.341" = type opaque
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.377" = type { %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::Member.383"*, i32, i32 }
%"class.blink::Member.383" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.391" = type { %"class.WTF::HashSet.394" }
%"class.WTF::HashSet.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"class.blink::WeakMember.397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.397" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.398", i32, [4 x i8] }>
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"struct.std::__1::pair.401"*, i32, i32 }
%"struct.std::__1::pair.401" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.417" = type { %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::Member.423"*, i32, i32 }
%"class.blink::Member.423" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.38" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.325", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.316, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.316 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.317" }>
%"class.base::RefCountedThreadSafe.317" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.318 }
%class.scoped_refptr.318 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.319", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.319" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.320" }
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i8 }
%"class.blink::WeakMember.325" = type { %"class.blink::MemberBase.39" }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::Member.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.454" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.509" = type { %"class.WTF::HashMap.512" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.516" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.38", %"class.blink::HeapHashSet.532", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.539", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::Member.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.538" = type opaque
%"class.blink::HeapTaskRunnerTimer.539" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.540", { i64, i64 } }
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase.526" }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::Node"* }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.44" }
%"class.blink::HeapHashMap.44" = type { %"class.WTF::HashMap.47" }
%"class.WTF::HashMap.47" = type { %"class.WTF::HashTable.48" }
%"class.WTF::HashTable.48" = type <{ %"struct.WTF::KeyValuePair.50"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.50" = type { %"class.WTF::AtomicString", %"class.blink::Member.51" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.19", i32, %"class.blink::HeapVector" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.61" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::HeapHashMap.63"* }
%"class.blink::HeapHashMap.63" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.26", %"class.blink::Member.28", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.26" = type { %"class.WTF::SingleThreadedBitField.27" }
%"class.WTF::SingleThreadedBitField.27" = type { i32 }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.31", %"class.WTF::AtomicString", %"class.WTF::Vector.33" }
%"class.WTF::RefCounted.31" = type { %"class.base::RefCounted.32" }
%"class.base::RefCounted.32" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35", [32 x i8] }
%"class.WTF::VectorBufferBase.35" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.19", i32, i32 }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member", i16, [6 x i8] }>
%"class.blink::(anonymous namespace)::IsMatch" = type { %"class.blink::HTMLTagCollection"* }
%"class.blink::HTMLTagCollection" = type { %"class.blink::TagCollection", %"class.WTF::AtomicString" }
%"class.blink::TagCollection" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.548" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.548" = type { %"class.v8::TracedReference.549" }
%"class.v8::TracedReference.549" = type { %"class.v8::BasicTracedReference.550" }
%"class.v8::BasicTracedReference.550" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::Vector.551" = type { %"class.WTF::VectorBuffer.552" }
%"class.WTF::VectorBuffer.552" = type { %"class.WTF::VectorBufferBase.553" }
%"class.WTF::VectorBufferBase.553" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.28", %"class.WTF::Vector.574" }
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576", [64 x i8] }
%"class.WTF::VectorBufferBase.576" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.564, %"class.blink::Member.565", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.564 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.567" }
%"class.blink::Persistent.567" = type { %"class.blink::PersistentBase.568" }
%"class.blink::PersistentBase.568" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::TagCollectionNS" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::WindowNameCollection" = type { %"class.blink::HTMLNameCollection" }
%"class.blink::HTMLNameCollection" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString" }
%"class.blink::DocumentAllNameCollection" = type { %"class.blink::HTMLNameCollection" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::DocumentNameCollection" = type { %"class.blink::HTMLNameCollection" }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.627", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLObjectElement" = type <{ %"class.blink::HTMLPlugInElement.base", [7 x i8], %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::HTMLPlugInElement.base" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.658", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.661", i8 }>
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.629", %"class.blink::Member.631", %"struct.blink::FramePolicy", %"class.blink::Member.656", i8, i8 }>
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::Member.675", i8, i32, i8, i32, %"class.blink::Member.875", %"class.blink::Member.698", %"class.blink::FrameLifecycle", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.629", %"class.blink::Member.877", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.879", i8, %"class.base::UnguessableToken", %"class.absl::optional.881", %"class.absl::optional.886", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.629", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.629", %"class.blink::Member.698", %"class.blink::Member.700", %"class.blink::Member.702", i8, %"class.WTF::Vector.704" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.691" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.679" }
%"class.blink::HeapVector.679" = type { %"class.WTF::Vector.682" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684", [32 x i8] }
%"class.WTF::VectorBufferBase.684" = type { %"struct.std::__1::pair.685"*, i32, i32 }
%"struct.std::__1::pair.685" = type { %"class.WTF::AtomicString", %"class.blink::Member.686" }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::HeapVector.688"* }
%"class.blink::HeapVector.688" = type opaque
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.WTF::Vector.694"* }
%"class.WTF::Vector.694" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.704" = type { %"class.WTF::VectorBuffer.705" }
%"class.WTF::VectorBuffer.705" = type { %"class.WTF::VectorBufferBase.706" }
%"class.WTF::VectorBufferBase.706" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.707", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.707" = type { %"class.base::StrongAlias.708" }
%"class.base::StrongAlias.708" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.867" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.709, %"class.std::__1::unique_ptr.817", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.711, i32 }>
%class.scoped_refptr.709 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.711, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.783", %"class.absl::optional.788", %"class.absl::optional.744", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.808", i8, [7 x i8], %class.scoped_refptr.711, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.710" }>
%"class.base::RefCountedThreadSafe.710" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.724" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.711, %"class.std::__1::unique_ptr.725", %"class.absl::optional.734", %"struct.std::__1::atomic.310", i8, i8, i8, i8, i32, i32, %"class.absl::optional.744", %"class.std::__1::unique_ptr.749", i8, i64, %class.scoped_refptr.779, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.782" }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.711, i8, %"class.mojo::ScopedHandleBase.728", %class.scoped_refptr.729, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.730" }
%"class.mojo::ScopedHandleBase.728" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.729 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.730" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.734" = type { %"class.absl::optional_internal::optional_data.735" }
%"class.absl::optional_internal::optional_data.735" = type { %"class.absl::optional_internal::optional_data_base.736" }
%"class.absl::optional_internal::optional_data_base.736" = type { %"class.absl::optional_internal::optional_data_dtor_base.737" }
%"class.absl::optional_internal::optional_data_dtor_base.737" = type { i8, %union.anon.738 }
%union.anon.738 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.739", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.739" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.752", i8, i64, %class.scoped_refptr.753, %class.scoped_refptr.775 }
%"class.base::RepeatingCallback.752" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.753 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.754", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.764", i8, [7 x i8] }>
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.755 }
%class.scoped_refptr.755 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.756", %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.764" = type { %"class.std::__1::__tree.765" }
%"class.std::__1::__tree.765" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.766", %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%class.scoped_refptr.775 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.779 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.780 }
%class.scoped_refptr.780 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.898", [4 x i8], %"class.base::RepeatingCallback.820", %class.scoped_refptr.711, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.898" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.820" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.781 }
%class.scoped_refptr.781 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.782" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.783" = type { %"class.absl::optional_internal::optional_data.784" }
%"class.absl::optional_internal::optional_data.784" = type { %"class.absl::optional_internal::optional_data_base.785" }
%"class.absl::optional_internal::optional_data_base.785" = type { %"class.absl::optional_internal::optional_data_dtor_base.786" }
%"class.absl::optional_internal::optional_data_dtor_base.786" = type { i8, %union.anon.787 }
%union.anon.787 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, [7 x i8], %union.anon.792 }
%union.anon.792 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.744" = type { %"class.absl::optional_internal::optional_data.745" }
%"class.absl::optional_internal::optional_data.745" = type { %"class.absl::optional_internal::optional_data_base.746" }
%"class.absl::optional_internal::optional_data_base.746" = type { %"class.absl::optional_internal::optional_data_dtor_base.747" }
%"class.absl::optional_internal::optional_data_dtor_base.747" = type { i8, %union.anon.748 }
%union.anon.748 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.793 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.793 = type { %"class.std::__1::map.796" }
%"class.std::__1::map.796" = type { %"class.std::__1::__tree.797" }
%"class.std::__1::__tree.797" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.798", %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.807"*, i64 }
%"class.std::__1::unique_ptr.807" = type opaque
%"class.std::__1::map.808" = type { %"class.std::__1::__tree.809" }
%"class.std::__1::__tree.809" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.810", %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.820", %"class.base::OnceCallback.821", %"class.absl::optional.822", %"class.absl::optional.827", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.834", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.842", %"class.std::__1::map.853", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.862", i8, %class.scoped_refptr.711, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.863" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.821" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.822" = type { %"class.absl::optional_internal::optional_data.823" }
%"class.absl::optional_internal::optional_data.823" = type { %"class.absl::optional_internal::optional_data_base.824" }
%"class.absl::optional_internal::optional_data_base.824" = type { %"class.absl::optional_internal::optional_data_dtor_base.825" }
%"class.absl::optional_internal::optional_data_dtor_base.825" = type { i8, %union.anon.826 }
%union.anon.826 = type { %"class.base::TimeDelta" }
%"class.absl::optional.827" = type { %"class.absl::optional_internal::optional_data.828" }
%"class.absl::optional_internal::optional_data.828" = type { %"class.absl::optional_internal::optional_data_base.829" }
%"class.absl::optional_internal::optional_data_base.829" = type { %"class.absl::optional_internal::optional_data_dtor_base.830" }
%"class.absl::optional_internal::optional_data_dtor_base.830" = type { i8, %union.anon.831 }
%union.anon.831 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.711, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.832" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.832" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.833 }
%class.scoped_refptr.833 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.837", %class.scoped_refptr.838 }
%"class.base::RepeatingCallback.837" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.838 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.710", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.842" = type { %"class.std::__1::__tree.843" }
%"class.std::__1::__tree.843" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.844", %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.853" = type { %"class.std::__1::__tree.854" }
%"class.std::__1::__tree.854" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.855", %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.base::OnceCallback.862" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.863" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.711 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.629", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.648" }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"struct.std::__1::pair.650"*, %"struct.std::__1::pair.650"*, %"class.std::__1::__compressed_pair.651" }
%"struct.std::__1::pair.650" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"struct.std::__1::pair.650"* }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.881" = type { %"class.absl::optional_internal::optional_data.882" }
%"class.absl::optional_internal::optional_data.882" = type { %"class.absl::optional_internal::optional_data_base.883" }
%"class.absl::optional_internal::optional_data_base.883" = type { %"class.absl::optional_internal::optional_data_dtor_base.884" }
%"class.absl::optional_internal::optional_data_dtor_base.884" = type { i8, %union.anon.885 }
%union.anon.885 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.886" = type { %"class.absl::optional_internal::optional_data.887" }
%"class.absl::optional_internal::optional_data.887" = type { %"class.absl::optional_internal::optional_data_base.888" }
%"class.absl::optional_internal::optional_data_base.888" = type { %"class.absl::optional_internal::optional_data_dtor_base.889" }
%"class.absl::optional_internal::optional_data_dtor_base.889" = type { i8, %union.anon.890 }
%union.anon.890 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.891" }
%"class.blink::HeapHashSet.891" = type { %"class.WTF::HashSet.894" }
%"class.WTF::HashSet.894" = type { %"class.WTF::HashTable.895" }
%"class.WTF::HashTable.895" = type <{ %"class.blink::WeakMember.897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.897" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.633", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.643" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.635", i8, i8, [6 x i8] }>
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.638" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.v8::Global" = type { %"class.v8::PersistentBase.660" }
%"class.v8::PersistentBase.660" = type { %"class.v8::Object"* }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.663", %"class.blink::Member.665", %"class.blink::Member.667", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }

$_ZN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE9NodeCountERKS1_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv = comdat any

$_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_ = comdat any

$_ZN5blink14HTMLCollection14NamedItemCache15AddElementToMapERNS_11HeapHashMapIPN3WTF10StringImplENS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEENS3_10StringHashENS3_10HashTraitsIS5_EENSD_ISB_EEEERKNS3_12AtomicStringEPS8_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES2_PS9_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE8RehashToEPSB_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIPNS1_10StringImplENS1_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPNS_10StringImplENS_12KeyValuePairIS4_N5blink6MemberINS6_10HeapVectorINS7_INS6_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE6NodeAtERKS1_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j = comdat any

$_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14HTMLCollection14NamedItemCacheEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14HTMLCollection14NamedItemCacheEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_14HTMLCollection14NamedItemCacheEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14HTMLCollectionE = hidden unnamed_addr constant { [16 x i8*], [6 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZN5blink14HTMLCollectionD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZN5blink14HTMLCollectionD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)* @_ZNK5blink14HTMLCollection5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLCollection"*)* @_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)* @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)* @_ZNK5blink14HTMLCollection16VirtualItemAfterEPNS_7ElementE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)* @_ZN5blink14HTMLCollection22SupportedPropertyNamesERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZNK5blink14HTMLCollection17UpdateIdNameCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink14HTMLCollection5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZThn16_N5blink14HTMLCollectionD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZThn16_N5blink14HTMLCollectionD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)* @_ZThn16_NK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE to i8*)] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kButtonTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFramesetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kMapTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.4 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIPNS_10StringImplENS_12KeyValuePairIS5_NS1_6MemberINS1_10HeapVectorINS7_INS1_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [474 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::StringImpl *, WTF::KeyValuePair<WTF::StringImpl *, blink::Member<blink::HeapVector<blink::Member<blink::Element>, 0> > >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<blink::Member<blink::HeapVector<blink::Member<blink::Element>, 0> > > >, WTF::HashTraits<WTF::StringImpl *>, blink::HeapAllocator> >]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN5blink14HTMLCollection18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEEE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)* @_ZNK5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HTMLCollection14NamedItemCacheEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLCollection::NamedItemCache]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14HTMLCollection14NamedItemCacheEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14HTMLCollection14NamedItemCacheEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

@_ZN5blink14HTMLCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE = hidden unnamed_addr alias void (%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"*, i32, i32), void (%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"*, i32, i32)* @_ZN5blink14HTMLCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE
@_ZN5blink14HTMLCollectionD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLCollection"*), void (%"class.blink::HTMLCollection"*)* @_ZN5blink14HTMLCollectionD2Ev
@_ZN5blink14HTMLCollection14NamedItemCacheC1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLCollection::NamedItemCache"*), void (%"class.blink::HTMLCollection::NamedItemCache"*)* @_ZN5blink14HTMLCollection14NamedItemCacheC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14HTMLCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::LiveNodeListBase.base"* %7 to %"class.blink::LiveNodeListBase"*
  switch i32 %2, label %37 [
    i32 17, label %9
    i32 21, label %36
    i32 1, label %30
    i32 20, label %35
    i32 19, label %34
    i32 18, label %33
    i32 4, label %32
    i32 5, label %31
    i32 15, label %30
    i32 14, label %30
  ]

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp ne i32 %12, 0
  %14 = icmp eq %"class.blink::ContainerNode"* %1, null
  %15 = or i1 %14, %13
  br i1 %15, label %37, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %18 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %22 = bitcast %"class.blink::Member.0"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp ne %"class.WTF::StringImpl"* %25, %27
  %29 = zext i1 %28 to i16
  br label %37

30:                                               ; preds = %4, %4, %4
  br label %37

31:                                               ; preds = %4
  br label %37

32:                                               ; preds = %4
  br label %37

33:                                               ; preds = %4
  br label %37

34:                                               ; preds = %4
  br label %37

35:                                               ; preds = %4
  br label %37

36:                                               ; preds = %4
  br label %37

37:                                               ; preds = %9, %16, %4, %30, %31, %32, %33, %34, %35, %36
  %38 = phi i16 [ 0, %36 ], [ 0, %35 ], [ 0, %34 ], [ 0, %33 ], [ 0, %32 ], [ 0, %31 ], [ 0, %30 ], [ 0, %4 ], [ 1, %9 ], [ %29, %16 ]
  %39 = phi i16 [ 2, %36 ], [ 4, %35 ], [ 4, %34 ], [ 4, %33 ], [ 12, %32 ], [ 6, %31 ], [ 14, %30 ], [ 0, %4 ], [ 10, %9 ], [ 10, %16 ]
  %40 = getelementptr inbounds %"class.blink::LiveNodeListBase.base", %"class.blink::LiveNodeListBase.base"* %7, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %43 = load i16, i16* %42, align 8
  %44 = and i16 %43, -1024
  %45 = trunc i32 %2 to i16
  %46 = shl i16 %45, 5
  %47 = and i16 %46, 992
  %48 = or i16 %38, %47
  %49 = or i16 %48, %39
  %50 = or i16 %49, %44
  store i16 %50, i16* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 2
  %52 = icmp eq i32 %3, 0
  %53 = zext i1 %52 to i8
  %54 = load i8, i8* %51, align 2
  %55 = and i8 %54, -2
  %56 = or i8 %55, %53
  store i8 %56, i8* %51, align 2
  %57 = add i32 %2, -8
  %58 = icmp ult i32 %57, 5
  br i1 %58, label %59, label %64

59:                                               ; preds = %37
  %60 = zext i32 %57 to i40
  %61 = shl nuw nsw i40 %60, 3
  %62 = lshr i40 8590066178, %61
  %63 = trunc i40 %62 to i8
  br label %64

64:                                               ; preds = %59, %37
  %65 = phi i8 [ 0, %37 ], [ %63, %59 ]
  %66 = and i8 %56, -3
  %67 = or i8 %65, %66
  store i8 %67, i8* %51, align 2
  %68 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::HTMLCollection::NamedItemCache"* null, %"class.blink::HTMLCollection::NamedItemCache"** %68, align 8
  %69 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.blink::Element"** %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %72 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 1
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2
  %74 = bitcast %"class.blink::HeapVector"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #10
  %75 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::Document"*, %"class.blink::Document"** %77, align 8
  tail call void @_ZN5blink8Document16RegisterNodeListEPKNS_16LiveNodeListBaseE(%"class.blink::Document"* %78, %"class.blink::LiveNodeListBase"* %8) #10
  ret void
}

declare void @_ZN5blink8Document16RegisterNodeListEPKNS_16LiveNodeListBaseE(%"class.blink::Document"*, %"class.blink::LiveNodeListBase"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14HTMLCollectionD2Ev(%"class.blink::HTMLCollection"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn16_N5blink14HTMLCollectionD1Ev(%"class.blink::HTMLCollection"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast %"class.blink::HeapVector"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 1
  %5 = bitcast %"class.blink::HeapVector"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14HTMLCollectionD0Ev(%"class.blink::HTMLCollection"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn16_N5blink14HTMLCollectionD0Ev(%"class.blink::HTMLCollection"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 -1, i32 4, i32 2
  %3 = bitcast %"class.blink::HeapVector"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 1
  %5 = bitcast %"class.blink::HeapVector"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink14HTMLCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"*, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.blink::Member.19"* %3 to i64*
  store atomic i64 0, i64* %4 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::Member.19"** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %14, i64 %18) #10
  store i32 0, i32* %15, align 4
  store i8 0, i8* %8, align 8
  br label %19

19:                                               ; preds = %2, %11
  %20 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::HTMLCollection::NamedItemCache"*, %"class.blink::HTMLCollection::NamedItemCache"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLCollection::NamedItemCache"* %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %19
  %24 = icmp eq %"class.blink::Document"* %1, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %27 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi %"class.blink::Document"* [ %31, %25 ], [ %1, %23 ]
  %34 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %35 = load i16, i16* %34, align 8
  %36 = and i16 %35, 30
  %37 = icmp eq i16 %36, 4
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %40 = bitcast %"class.blink::LiveNodeListBase.base"* %39 to %"class.blink::LiveNodeListBase"*
  tail call void @_ZN5blink8Document33UnregisterNodeListWithIdNameCacheEPKNS_16LiveNodeListBaseE(%"class.blink::Document"* %33, %"class.blink::LiveNodeListBase"* %40) #10
  br label %41

41:                                               ; preds = %38, %32
  %42 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0
  %43 = bitcast %"class.blink::MemberBase.9"* %42 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  br label %44

44:                                               ; preds = %19, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"*, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 -1, i32 4, i32 2
  %4 = bitcast %"class.blink::HeapVector"* %3 to %"class.blink::HTMLCollection"*
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %4, i64 0, i32 4, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 2147483647
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 4, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i32* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 5, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::Member.19"** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 5, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %21) #10
  store i32 0, i32* %18, align 4
  store i8 0, i8* %11, align 8
  br label %22

22:                                               ; preds = %14, %2
  %23 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 2, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i32* %23 to %"class.blink::HTMLCollection::NamedItemCache"**
  %25 = load %"class.blink::HTMLCollection::NamedItemCache"*, %"class.blink::HTMLCollection::NamedItemCache"** %24, align 8
  %26 = icmp eq %"class.blink::HTMLCollection::NamedItemCache"* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %22
  %28 = icmp eq %"class.blink::Document"* %1, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 1, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i32* %30 to %"class.blink::ContainerNode"**
  %32 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %32, i64 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  br label %37

37:                                               ; preds = %29, %27
  %38 = phi %"class.blink::Document"* [ %36, %29 ], [ %1, %27 ]
  %39 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 2
  %40 = bitcast %"class.blink::HeapVector"* %39 to i16*
  %41 = load i16, i16* %40, align 8
  %42 = and i16 %41, 30
  %43 = icmp eq i16 %42, 4
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 1
  %46 = bitcast %"class.blink::HeapVector"* %45 to %"class.blink::LiveNodeListBase"*
  tail call void @_ZN5blink8Document33UnregisterNodeListWithIdNameCacheEPKNS_16LiveNodeListBaseE(%"class.blink::Document"* %38, %"class.blink::LiveNodeListBase"* %46) #10
  br label %47

47:                                               ; preds = %44, %37
  %48 = bitcast i32* %23 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  br label %49

49:                                               ; preds = %22, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4
  %3 = tail call i32 @_ZN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE9NodeCountERKS1_(%"class.blink::CollectionItemsCache"* %2, %"class.blink::HTMLCollection"* dereferenceable(96) %0)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE9NodeCountERKS1_(%"class.blink::CollectionItemsCache"*, %"class.blink::HTMLCollection"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::Element"*, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  br label %55

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::Element"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection15TraverseToFirstEv(%"class.blink::HTMLCollection"* %1)
  store %"class.blink::Element"* %13, %"class.blink::Element"** %3, align 8
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %4, align 4
  %15 = icmp eq %"class.blink::Element"* %13, null
  %16 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br i1 %15, label %49, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %16, i64 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %19, %42
  %23 = phi %"class.blink::Element"* [ %13, %19 ], [ %46, %42 ]
  %24 = phi i32 [ %18, %19 ], [ %48, %42 ]
  %25 = load i32, i32* %20, align 8
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %41, label %27, !prof !3

27:                                               ; preds = %22
  %28 = ptrtoint %"class.blink::Element"* %23 to i64
  %29 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %21, align 8
  %30 = zext i32 %24 to i64
  %31 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %29, i64 %30
  %32 = bitcast %"class.blink::Member.19"* %31 to i64*
  store atomic i64 %28, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.blink::Element"* %23 to i8*
  %37 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #10
  br label %38

38:                                               ; preds = %35, %27
  %39 = load i32, i32* %17, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %17, align 4
  br label %42

41:                                               ; preds = %22
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %16, %"class.blink::Element"** nonnull dereferenceable(8) %3) #10
  br label %42

42:                                               ; preds = %38, %41
  %43 = load i32, i32* %4, align 4
  %44 = add i32 %43, 1
  %45 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %46 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection23TraverseForwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"* %1, i32 %44, %"class.blink::Element"* dereferenceable(104) %45, i32* nonnull dereferenceable(4) %4)
  store %"class.blink::Element"* %46, %"class.blink::Element"** %3, align 8
  %47 = icmp eq %"class.blink::Element"* %46, null
  %48 = load i32, i32* %17, align 4
  br i1 %47, label %49, label %22

49:                                               ; preds = %42, %11
  %50 = phi i32 [ %18, %11 ], [ %48, %42 ]
  %51 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = load i32, i32* %5, align 4
  %53 = or i32 %52, -2147483648
  store i32 %53, i32* %5, align 4
  %54 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 1
  store i8 1, i8* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %55

55:                                               ; preds = %49, %8
  %56 = phi i32 [ %10, %8 ], [ %50, %49 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2, i32 0
  %12 = tail call dereferenceable(8) %"class.blink::Member.19"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %11, i32 %1) #10
  %13 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %13, align 8
  br label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0
  %17 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"* %16, %"class.blink::HTMLCollection"* dereferenceable(96) %0, i32 %1) #10
  br label %18

18:                                               ; preds = %6, %10, %15
  %19 = phi %"class.blink::Element"* [ %17, %15 ], [ %14, %10 ], [ null, %6 ]
  ret %"class.blink::Element"* %19
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::Element"* @_ZNK5blink14HTMLCollection16VirtualItemAfterEPNS_7ElementE(%"class.blink::HTMLCollection"* nocapture readnone, %"class.blink::Element"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection15TraverseToFirstEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::(anonymous namespace)::IsMatch", align 8
  %3 = alloca %"class.blink::(anonymous namespace)::IsMatch", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::LiveNodeListBase.base"* %4 to %"class.blink::LiveNodeListBase"*
  %6 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = lshr i16 %7, 5
  %9 = and i16 %8, 31
  %10 = zext i16 %9 to i32
  switch i32 %10, label %241 [
    i32 23, label %11
    i32 21, label %118
  ]

11:                                               ; preds = %1
  %12 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %5) #10
  %13 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %3 to %"class.blink::HTMLCollection"**
  store %"class.blink::HTMLCollection"* %0, %"class.blink::HTMLCollection"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %116, label %18

18:                                               ; preds = %11, %24
  %19 = phi %"class.blink::Node"* [ %26, %24 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %116, label %18

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %30 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %2 to i8*
  %31 = bitcast %"class.blink::Node"* %19 to %"class.blink::Element"*
  %32 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %3, %"class.blink::Element"* nonnull dereferenceable(104) %31) #10
  br i1 %32, label %116, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %2 to %"class.blink::HTMLCollection"**
  br label %35

35:                                               ; preds = %33, %112
  %36 = phi %"class.blink::Node"* [ %19, %33 ], [ %114, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store %"class.blink::HTMLCollection"* %0, %"class.blink::HTMLCollection"** %34, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 1
  %38 = bitcast %"class.blink::Node"* %37 to %"class.blink::Node"**
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %50

41:                                               ; preds = %35
  %42 = icmp eq %"class.blink::Node"* %36, %29
  br i1 %42, label %109, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %36, %"class.blink::Node"* %29) #10
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %109, label %50

50:                                               ; preds = %47, %43, %35
  %51 = phi %"class.blink::Node"* [ %39, %35 ], [ %45, %43 ], [ %48, %47 ]
  br label %52

52:                                               ; preds = %50, %69
  %53 = phi %"class.blink::Node"* [ %70, %69 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::Node"* %53 to %"class.blink::Element"*
  %60 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %2, %"class.blink::Element"* nonnull dereferenceable(104) %59) #10
  br i1 %60, label %112, label %75

61:                                               ; preds = %52
  %62 = icmp eq %"class.blink::Node"* %53, %29
  br i1 %62, label %109, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %53, %"class.blink::Node"* %29) #10
  br label %69

69:                                               ; preds = %67, %63
  %70 = phi %"class.blink::Node"* [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %109, label %52

72:                                               ; preds = %92
  %73 = bitcast %"class.blink::Node"* %93 to %"class.blink::Element"*
  %74 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %2, %"class.blink::Element"* nonnull dereferenceable(104) %73) #10
  br i1 %74, label %110, label %75

75:                                               ; preds = %58, %72
  %76 = phi %"class.blink::Node"* [ %93, %72 ], [ %53, %58 ]
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %76, i64 1
  %78 = bitcast %"class.blink::Node"* %77 to %"class.blink::Node"**
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8
  %80 = icmp eq %"class.blink::Node"* %79, null
  br i1 %80, label %81, label %90

81:                                               ; preds = %75
  %82 = icmp eq %"class.blink::Node"* %76, %29
  br i1 %82, label %109, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %76, i64 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %76, %"class.blink::Node"* %29) #10
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %109, label %90

90:                                               ; preds = %87, %83, %75
  %91 = phi %"class.blink::Node"* [ %79, %75 ], [ %85, %83 ], [ %88, %87 ]
  br label %92

92:                                               ; preds = %90, %106
  %93 = phi %"class.blink::Node"* [ %107, %106 ], [ %91, %90 ]
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %93, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %72, label %98

98:                                               ; preds = %92
  %99 = icmp eq %"class.blink::Node"* %93, %29
  br i1 %99, label %109, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %93, i64 0, i32 5, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %93, %"class.blink::Node"* %29) #10
  br label %106

106:                                              ; preds = %104, %100
  %107 = phi %"class.blink::Node"* [ %105, %104 ], [ %102, %100 ]
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %109, label %92

109:                                              ; preds = %47, %41, %69, %61, %87, %81, %106, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %116

110:                                              ; preds = %72
  %111 = bitcast %"class.blink::Node"* %93 to %"class.blink::Element"*
  br label %112

112:                                              ; preds = %110, %58
  %113 = phi %"class.blink::Element"* [ %59, %58 ], [ %111, %110 ]
  %114 = phi %"class.blink::Node"* [ %53, %58 ], [ %93, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %115 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %3, %"class.blink::Element"* nonnull dereferenceable(104) %113) #10
  br i1 %115, label %116, label %35

116:                                              ; preds = %24, %112, %28, %11, %109
  %117 = phi %"class.blink::Element"* [ null, %109 ], [ null, %11 ], [ %31, %28 ], [ %113, %112 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  br label %386

118:                                              ; preds = %1
  %119 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %5) #10
  %120 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %119, i64 0, i32 1, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  %122 = icmp eq %"class.blink::Node"* %121, null
  br i1 %122, label %386, label %123

123:                                              ; preds = %118, %129
  %124 = phi %"class.blink::Node"* [ %131, %129 ], [ %121, %118 ]
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 12
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %124, i64 0, i32 5, i32 0, i32 0
  %131 = load %"class.blink::Node"*, %"class.blink::Node"** %130, align 8
  %132 = icmp eq %"class.blink::Node"* %131, null
  br i1 %132, label %386, label %123

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 1
  %135 = bitcast %"class.blink::HTMLCollection"* %134 to %"class.blink::SpaceSplitString::Data"**
  %136 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %119, i64 0, i32 0
  br label %137

137:                                              ; preds = %206, %133
  %138 = phi %"class.blink::Node"* [ %124, %133 ], [ %190, %206 ]
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 1, i32 3
  %140 = bitcast %"class.blink::Member.2"* %139 to %"class.blink::ElementData"**
  %141 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %140, align 8
  %142 = icmp eq %"class.blink::ElementData"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %141, i64 0, i32 2, i32 0, i32 0
  %145 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %144, align 8
  %146 = icmp eq %"class.blink::SpaceSplitString::Data"* %145, null
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %135, align 8
  %149 = icmp eq %"class.blink::SpaceSplitString::Data"* %148, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %148, i64 0, i32 2, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = tail call zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"* nonnull %145, %"class.blink::SpaceSplitString::Data"* nonnull dereferenceable(64) %148) #10
  br i1 %155, label %382, label %156

156:                                              ; preds = %154, %150, %147, %143, %137
  %157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 1
  %158 = bitcast %"class.blink::Node"* %157 to %"class.blink::Node"**
  %159 = load %"class.blink::Node"*, %"class.blink::Node"** %158, align 8
  %160 = icmp eq %"class.blink::Node"* %159, null
  br i1 %160, label %161, label %170

161:                                              ; preds = %156
  %162 = icmp eq %"class.blink::Node"* %138, %136
  br i1 %162, label %386, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 5, i32 0, i32 0
  %165 = load %"class.blink::Node"*, %"class.blink::Node"** %164, align 8
  %166 = icmp eq %"class.blink::Node"* %165, null
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %138, %"class.blink::Node"* %136) #10
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %386, label %170

170:                                              ; preds = %167, %163, %156
  %171 = phi %"class.blink::Node"* [ %159, %156 ], [ %165, %163 ], [ %168, %167 ]
  br label %172

172:                                              ; preds = %170, %186
  %173 = phi %"class.blink::Node"* [ %187, %186 ], [ %171, %170 ]
  %174 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %173, i64 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 12
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %172
  %179 = icmp eq %"class.blink::Node"* %173, %136
  br i1 %179, label %386, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %173, i64 0, i32 5, i32 0, i32 0
  %182 = load %"class.blink::Node"*, %"class.blink::Node"** %181, align 8
  %183 = icmp eq %"class.blink::Node"* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %173, %"class.blink::Node"* %136) #10
  br label %186

186:                                              ; preds = %184, %180
  %187 = phi %"class.blink::Node"* [ %185, %184 ], [ %182, %180 ]
  %188 = icmp eq %"class.blink::Node"* %187, null
  br i1 %188, label %386, label %172

189:                                              ; preds = %224, %172
  %190 = phi %"class.blink::Node"* [ %173, %172 ], [ %225, %224 ]
  %191 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %190, i64 1, i32 3
  %192 = bitcast %"class.blink::Member.2"* %191 to %"class.blink::ElementData"**
  %193 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %192, align 8
  %194 = icmp eq %"class.blink::ElementData"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %193, i64 0, i32 2, i32 0, i32 0
  %197 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %196, align 8
  %198 = icmp eq %"class.blink::SpaceSplitString::Data"* %197, null
  br i1 %198, label %208, label %199

199:                                              ; preds = %195
  %200 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %135, align 8
  %201 = icmp eq %"class.blink::SpaceSplitString::Data"* %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %200, i64 0, i32 2, i32 0, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  %207 = tail call zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"* nonnull %197, %"class.blink::SpaceSplitString::Data"* nonnull dereferenceable(64) %200) #10
  br i1 %207, label %137, label %208

208:                                              ; preds = %206, %202, %199, %195, %189
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %190, i64 1
  %210 = bitcast %"class.blink::Node"* %209 to %"class.blink::Node"**
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = icmp eq %"class.blink::Node"* %211, null
  br i1 %212, label %213, label %222

213:                                              ; preds = %208
  %214 = icmp eq %"class.blink::Node"* %190, %136
  br i1 %214, label %386, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %190, i64 0, i32 5, i32 0, i32 0
  %217 = load %"class.blink::Node"*, %"class.blink::Node"** %216, align 8
  %218 = icmp eq %"class.blink::Node"* %217, null
  br i1 %218, label %219, label %222

219:                                              ; preds = %215
  %220 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %190, %"class.blink::Node"* %136) #10
  %221 = icmp eq %"class.blink::Node"* %220, null
  br i1 %221, label %386, label %222

222:                                              ; preds = %219, %215, %208
  %223 = phi %"class.blink::Node"* [ %211, %208 ], [ %217, %215 ], [ %220, %219 ]
  br label %224

224:                                              ; preds = %222, %238
  %225 = phi %"class.blink::Node"* [ %239, %238 ], [ %223, %222 ]
  %226 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %225, i64 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = and i32 %227, 12
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %189, label %230

230:                                              ; preds = %224
  %231 = icmp eq %"class.blink::Node"* %225, %136
  br i1 %231, label %386, label %232

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %225, i64 0, i32 5, i32 0, i32 0
  %234 = load %"class.blink::Node"*, %"class.blink::Node"** %233, align 8
  %235 = icmp eq %"class.blink::Node"* %234, null
  br i1 %235, label %236, label %238

236:                                              ; preds = %232
  %237 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %225, %"class.blink::Node"* %136) #10
  br label %238

238:                                              ; preds = %236, %232
  %239 = phi %"class.blink::Node"* [ %237, %236 ], [ %234, %232 ]
  %240 = icmp eq %"class.blink::Node"* %239, null
  br i1 %240, label %386, label %224

241:                                              ; preds = %1
  %242 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 2
  %243 = load i8, i8* %242, align 2
  %244 = and i8 %243, 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %252, label %246

246:                                              ; preds = %241
  %247 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)***
  %248 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)**, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*** %247, align 8
  %249 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %248, i64 11
  %250 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %249, align 8
  %251 = tail call %"class.blink::Element"* %250(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* null) #10
  br label %386

252:                                              ; preds = %241
  %253 = and i8 %243, 2
  %254 = icmp eq i8 %253, 0
  %255 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %5) #10
  %256 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %255, i64 0, i32 1, i32 0, i32 0
  %257 = load %"class.blink::Node"*, %"class.blink::Node"** %256, align 8
  %258 = icmp eq %"class.blink::Node"* %257, null
  br i1 %254, label %287, label %259

259:                                              ; preds = %252
  br i1 %258, label %386, label %260

260:                                              ; preds = %259, %269
  %261 = phi %"class.blink::Node"* [ %271, %269 ], [ %257, %259 ]
  %262 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %261, i64 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = and i32 %263, 12
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %260
  %267 = bitcast %"class.blink::Node"* %261 to %"class.blink::Element"*
  %268 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %267) #10
  br i1 %268, label %386, label %276

269:                                              ; preds = %260
  %270 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %261, i64 0, i32 5, i32 0, i32 0
  %271 = load %"class.blink::Node"*, %"class.blink::Node"** %270, align 8
  %272 = icmp eq %"class.blink::Node"* %271, null
  br i1 %272, label %386, label %260

273:                                              ; preds = %281
  %274 = bitcast %"class.blink::Node"* %279 to %"class.blink::Element"*
  %275 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %274) #10
  br i1 %275, label %384, label %286

276:                                              ; preds = %266, %286
  %277 = phi %"class.blink::Node"* [ %279, %286 ], [ %261, %266 ]
  %278 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %277, i64 0, i32 5, i32 0, i32 0
  %279 = load %"class.blink::Node"*, %"class.blink::Node"** %278, align 8
  %280 = icmp eq %"class.blink::Node"* %279, null
  br i1 %280, label %386, label %281

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %279, i64 0, i32 1
  %283 = load i32, i32* %282, align 8
  %284 = and i32 %283, 12
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %273, label %286

286:                                              ; preds = %281, %273
  br label %276

287:                                              ; preds = %252
  br i1 %258, label %386, label %288

288:                                              ; preds = %287, %294
  %289 = phi %"class.blink::Node"* [ %296, %294 ], [ %257, %287 ]
  %290 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %289, i64 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = and i32 %291, 12
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %289, i64 0, i32 5, i32 0, i32 0
  %296 = load %"class.blink::Node"*, %"class.blink::Node"** %295, align 8
  %297 = icmp eq %"class.blink::Node"* %296, null
  br i1 %297, label %386, label %288

298:                                              ; preds = %288
  %299 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %255, i64 0, i32 0
  %300 = bitcast %"class.blink::Node"* %289 to %"class.blink::Element"*
  %301 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %300) #10
  br i1 %301, label %386, label %308

302:                                              ; preds = %345
  %303 = bitcast %"class.blink::Node"* %366 to %"class.blink::Element"*
  br label %304

304:                                              ; preds = %302, %331
  %305 = phi %"class.blink::Element"* [ %332, %331 ], [ %303, %302 ]
  %306 = phi %"class.blink::Node"* [ %326, %331 ], [ %366, %302 ]
  %307 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %305) #10
  br i1 %307, label %386, label %308

308:                                              ; preds = %298, %304
  %309 = phi %"class.blink::Node"* [ %306, %304 ], [ %289, %298 ]
  %310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %309, i64 1
  %311 = bitcast %"class.blink::Node"* %310 to %"class.blink::Node"**
  %312 = load %"class.blink::Node"*, %"class.blink::Node"** %311, align 8
  %313 = icmp eq %"class.blink::Node"* %312, null
  br i1 %313, label %314, label %323

314:                                              ; preds = %308
  %315 = icmp eq %"class.blink::Node"* %309, %299
  br i1 %315, label %386, label %316

316:                                              ; preds = %314
  %317 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %309, i64 0, i32 5, i32 0, i32 0
  %318 = load %"class.blink::Node"*, %"class.blink::Node"** %317, align 8
  %319 = icmp eq %"class.blink::Node"* %318, null
  br i1 %319, label %320, label %323

320:                                              ; preds = %316
  %321 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %309, %"class.blink::Node"* %299) #10
  %322 = icmp eq %"class.blink::Node"* %321, null
  br i1 %322, label %386, label %323

323:                                              ; preds = %320, %316, %308
  %324 = phi %"class.blink::Node"* [ %312, %308 ], [ %318, %316 ], [ %321, %320 ]
  br label %325

325:                                              ; preds = %323, %342
  %326 = phi %"class.blink::Node"* [ %343, %342 ], [ %324, %323 ]
  %327 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %326, i64 0, i32 1
  %328 = load i32, i32* %327, align 8
  %329 = and i32 %328, 12
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %325
  %332 = bitcast %"class.blink::Node"* %326 to %"class.blink::Element"*
  %333 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %332) #10
  br i1 %333, label %304, label %348

334:                                              ; preds = %325
  %335 = icmp eq %"class.blink::Node"* %326, %299
  br i1 %335, label %386, label %336

336:                                              ; preds = %334
  %337 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %326, i64 0, i32 5, i32 0, i32 0
  %338 = load %"class.blink::Node"*, %"class.blink::Node"** %337, align 8
  %339 = icmp eq %"class.blink::Node"* %338, null
  br i1 %339, label %340, label %342

340:                                              ; preds = %336
  %341 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %326, %"class.blink::Node"* %299) #10
  br label %342

342:                                              ; preds = %340, %336
  %343 = phi %"class.blink::Node"* [ %341, %340 ], [ %338, %336 ]
  %344 = icmp eq %"class.blink::Node"* %343, null
  br i1 %344, label %386, label %325

345:                                              ; preds = %365
  %346 = bitcast %"class.blink::Node"* %366 to %"class.blink::Element"*
  %347 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %346) #10
  br i1 %347, label %302, label %348

348:                                              ; preds = %331, %345
  %349 = phi %"class.blink::Node"* [ %366, %345 ], [ %326, %331 ]
  %350 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 1
  %351 = bitcast %"class.blink::Node"* %350 to %"class.blink::Node"**
  %352 = load %"class.blink::Node"*, %"class.blink::Node"** %351, align 8
  %353 = icmp eq %"class.blink::Node"* %352, null
  br i1 %353, label %354, label %363

354:                                              ; preds = %348
  %355 = icmp eq %"class.blink::Node"* %349, %299
  br i1 %355, label %386, label %356

356:                                              ; preds = %354
  %357 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 0, i32 5, i32 0, i32 0
  %358 = load %"class.blink::Node"*, %"class.blink::Node"** %357, align 8
  %359 = icmp eq %"class.blink::Node"* %358, null
  br i1 %359, label %360, label %363

360:                                              ; preds = %356
  %361 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %349, %"class.blink::Node"* %299) #10
  %362 = icmp eq %"class.blink::Node"* %361, null
  br i1 %362, label %386, label %363

363:                                              ; preds = %360, %356, %348
  %364 = phi %"class.blink::Node"* [ %352, %348 ], [ %358, %356 ], [ %361, %360 ]
  br label %365

365:                                              ; preds = %363, %379
  %366 = phi %"class.blink::Node"* [ %380, %379 ], [ %364, %363 ]
  %367 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %366, i64 0, i32 1
  %368 = load i32, i32* %367, align 8
  %369 = and i32 %368, 12
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %345, label %371

371:                                              ; preds = %365
  %372 = icmp eq %"class.blink::Node"* %366, %299
  br i1 %372, label %386, label %373

373:                                              ; preds = %371
  %374 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %366, i64 0, i32 5, i32 0, i32 0
  %375 = load %"class.blink::Node"*, %"class.blink::Node"** %374, align 8
  %376 = icmp eq %"class.blink::Node"* %375, null
  br i1 %376, label %377, label %379

377:                                              ; preds = %373
  %378 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %366, %"class.blink::Node"* %299) #10
  br label %379

379:                                              ; preds = %377, %373
  %380 = phi %"class.blink::Node"* [ %378, %377 ], [ %375, %373 ]
  %381 = icmp eq %"class.blink::Node"* %380, null
  br i1 %381, label %386, label %365

382:                                              ; preds = %154
  %383 = bitcast %"class.blink::Node"* %138 to %"class.blink::Element"*
  br label %386

384:                                              ; preds = %273
  %385 = bitcast %"class.blink::Node"* %279 to %"class.blink::Element"*
  br label %386

386:                                              ; preds = %129, %161, %167, %186, %178, %219, %213, %238, %230, %269, %276, %294, %314, %320, %304, %342, %334, %360, %354, %379, %371, %384, %382, %266, %298, %287, %259, %118, %246, %116
  %387 = phi %"class.blink::Element"* [ %251, %246 ], [ %117, %116 ], [ null, %118 ], [ null, %259 ], [ null, %287 ], [ %300, %298 ], [ %267, %266 ], [ %383, %382 ], [ %385, %384 ], [ null, %371 ], [ null, %379 ], [ null, %354 ], [ null, %360 ], [ null, %334 ], [ null, %342 ], [ null, %314 ], [ null, %320 ], [ %305, %304 ], [ null, %294 ], [ null, %276 ], [ null, %269 ], [ null, %230 ], [ null, %238 ], [ null, %213 ], [ null, %219 ], [ null, %178 ], [ null, %186 ], [ null, %167 ], [ null, %161 ], [ null, %129 ]
  ret %"class.blink::Element"* %387
}

declare dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection14TraverseToLastEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2
  %4 = and i8 %3, 2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::LiveNodeListBase.base"* %6 to %"class.blink::LiveNodeListBase"*
  %8 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %7) #10
  br i1 %5, label %40, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %98, label %13

13:                                               ; preds = %9, %22
  %14 = phi %"class.blink::Node"* [ %24, %22 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %21 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %20) #10
  br i1 %21, label %98, label %29

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 4, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %98, label %13

26:                                               ; preds = %34
  %27 = bitcast %"class.blink::Node"* %32 to %"class.blink::Element"*
  %28 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %27) #10
  br i1 %28, label %96, label %39

29:                                               ; preds = %19, %39
  %30 = phi %"class.blink::Node"* [ %32, %39 ], [ %14, %19 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %98, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %26, label %39

39:                                               ; preds = %34, %26
  br label %29

40:                                               ; preds = %1
  %41 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal10LastWithinERKNS_13ContainerNodeE(%"class.blink::ContainerNode"* dereferenceable(80) %8) #10
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %98, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0
  br label %45

45:                                               ; preds = %51, %43
  %46 = phi %"class.blink::Node"* [ %41, %43 ], [ %52, %51 ]
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %46, %"class.blink::Node"* %44) #10
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %98, label %45

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::Node"* %46 to %"class.blink::Element"*
  br label %56

56:                                               ; preds = %93, %54
  %57 = phi %"class.blink::Element"* [ %55, %54 ], [ %94, %93 ]
  %58 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %57) #10
  br i1 %58, label %98, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %57, i64 0, i32 0, i32 0
  %61 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %60, %"class.blink::Node"* %44) #10
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %98, label %63

63:                                               ; preds = %59, %72
  %64 = phi %"class.blink::Node"* [ %73, %72 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 12
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::Node"* %64 to %"class.blink::Element"*
  %71 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %70) #10
  br i1 %71, label %93, label %78

72:                                               ; preds = %63
  %73 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %64, %"class.blink::Node"* %44) #10
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %98, label %63

75:                                               ; preds = %82
  %76 = bitcast %"class.blink::Node"* %83 to %"class.blink::Element"*
  %77 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %76) #10
  br i1 %77, label %91, label %78

78:                                               ; preds = %69, %75
  %79 = phi %"class.blink::Node"* [ %83, %75 ], [ %64, %69 ]
  %80 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %79, %"class.blink::Node"* %44) #10
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %98, label %82

82:                                               ; preds = %78, %88
  %83 = phi %"class.blink::Node"* [ %89, %88 ], [ %80, %78 ]
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 12
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %75, label %88

88:                                               ; preds = %82
  %89 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %83, %"class.blink::Node"* %44) #10
  %90 = icmp eq %"class.blink::Node"* %89, null
  br i1 %90, label %98, label %82

91:                                               ; preds = %75
  %92 = bitcast %"class.blink::Node"* %83 to %"class.blink::Element"*
  br label %93

93:                                               ; preds = %91, %69
  %94 = phi %"class.blink::Element"* [ %70, %69 ], [ %92, %91 ]
  %95 = icmp eq %"class.blink::Element"* %94, null
  br i1 %95, label %98, label %56

96:                                               ; preds = %26
  %97 = bitcast %"class.blink::Node"* %32 to %"class.blink::Element"*
  br label %98

98:                                               ; preds = %22, %29, %51, %93, %59, %56, %72, %78, %88, %96, %19, %40, %9
  %99 = phi %"class.blink::Element"* [ null, %9 ], [ null, %40 ], [ %20, %19 ], [ %97, %96 ], [ null, %88 ], [ null, %78 ], [ null, %72 ], [ null, %93 ], [ %57, %56 ], [ null, %59 ], [ null, %51 ], [ null, %29 ], [ null, %22 ]
  ret %"class.blink::Element"* %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection23TraverseForwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"*, i32, %"class.blink::Element"* dereferenceable(104), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::(anonymous namespace)::IsMatch", align 8
  %6 = alloca %"class.blink::(anonymous namespace)::IsMatch", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::LiveNodeListBase.base"* %7 to %"class.blink::LiveNodeListBase"*
  %9 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %10 = load i16, i16* %9, align 8
  %11 = lshr i16 %10, 5
  %12 = and i16 %11, 31
  %13 = zext i16 %12 to i32
  switch i32 %13, label %368 [
    i32 23, label %14
    i32 21, label %183
  ]

14:                                               ; preds = %4
  %15 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %8) #10
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %17 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %6 to %"class.blink::HTMLCollection"**
  store %"class.blink::HTMLCollection"* %0, %"class.blink::HTMLCollection"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %22, label %32

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %24 = icmp eq %"class.blink::Node"* %23, %16
  br i1 %24, label %91, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %23, %"class.blink::Node"* %16) #10
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %91, label %32

32:                                               ; preds = %29, %25, %14
  %33 = phi %"class.blink::Node"* [ %20, %14 ], [ %27, %25 ], [ %30, %29 ]
  br label %34

34:                                               ; preds = %32, %51
  %35 = phi %"class.blink::Node"* [ %52, %51 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = bitcast %"class.blink::Node"* %35 to %"class.blink::Element"*
  %42 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %6, %"class.blink::Element"* nonnull dereferenceable(104) %41) #10
  br i1 %42, label %94, label %57

43:                                               ; preds = %34
  %44 = icmp eq %"class.blink::Node"* %35, %16
  br i1 %44, label %91, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %35, %"class.blink::Node"* %16) #10
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::Node"* [ %50, %49 ], [ %47, %45 ]
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %91, label %34

54:                                               ; preds = %74
  %55 = bitcast %"class.blink::Node"* %75 to %"class.blink::Element"*
  %56 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %6, %"class.blink::Element"* nonnull dereferenceable(104) %55) #10
  br i1 %56, label %92, label %57

57:                                               ; preds = %40, %54
  %58 = phi %"class.blink::Node"* [ %75, %54 ], [ %35, %40 ]
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 1
  %60 = bitcast %"class.blink::Node"* %59 to %"class.blink::Node"**
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %63, label %72

63:                                               ; preds = %57
  %64 = icmp eq %"class.blink::Node"* %58, %16
  br i1 %64, label %91, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %58, %"class.blink::Node"* %16) #10
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %91, label %72

72:                                               ; preds = %69, %65, %57
  %73 = phi %"class.blink::Node"* [ %61, %57 ], [ %67, %65 ], [ %70, %69 ]
  br label %74

74:                                               ; preds = %72, %88
  %75 = phi %"class.blink::Node"* [ %89, %88 ], [ %73, %72 ]
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 12
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %54, label %80

80:                                               ; preds = %74
  %81 = icmp eq %"class.blink::Node"* %75, %16
  br i1 %81, label %91, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 5, i32 0, i32 0
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %75, %"class.blink::Node"* %16) #10
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi %"class.blink::Node"* [ %87, %86 ], [ %84, %82 ]
  %90 = icmp eq %"class.blink::Node"* %89, null
  br i1 %90, label %91, label %74

91:                                               ; preds = %51, %43, %69, %63, %88, %80, %29, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %397

92:                                               ; preds = %54
  %93 = bitcast %"class.blink::Node"* %75 to %"class.blink::Element"*
  br label %94

94:                                               ; preds = %92, %40
  %95 = phi %"class.blink::Element"* [ %41, %40 ], [ %93, %92 ]
  %96 = phi %"class.blink::Node"* [ %35, %40 ], [ %75, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %97 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %5 to i8*
  %98 = load i32, i32* %3, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %3, align 4
  %100 = icmp eq i32 %99, %1
  br i1 %100, label %397, label %101

101:                                              ; preds = %94
  %102 = bitcast %"class.blink::(anonymous namespace)::IsMatch"* %5 to %"class.blink::HTMLCollection"**
  br label %103

103:                                              ; preds = %101, %178
  %104 = phi %"class.blink::Node"* [ %96, %101 ], [ %179, %178 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  store %"class.blink::HTMLCollection"* %0, %"class.blink::HTMLCollection"** %102, align 8
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 1
  %106 = bitcast %"class.blink::Node"* %105 to %"class.blink::Node"**
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %109, label %118

109:                                              ; preds = %103
  %110 = icmp eq %"class.blink::Node"* %104, %16
  br i1 %110, label %177, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 0, i32 5, i32 0, i32 0
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %112, align 8
  %114 = icmp eq %"class.blink::Node"* %113, null
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  %116 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %104, %"class.blink::Node"* %16) #10
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %177, label %118

118:                                              ; preds = %115, %111, %103
  %119 = phi %"class.blink::Node"* [ %107, %103 ], [ %113, %111 ], [ %116, %115 ]
  br label %120

120:                                              ; preds = %118, %137
  %121 = phi %"class.blink::Node"* [ %138, %137 ], [ %119, %118 ]
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %121, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = and i32 %123, 12
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %120
  %127 = bitcast %"class.blink::Node"* %121 to %"class.blink::Element"*
  %128 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %5, %"class.blink::Element"* nonnull dereferenceable(104) %127) #10
  br i1 %128, label %178, label %143

129:                                              ; preds = %120
  %130 = icmp eq %"class.blink::Node"* %121, %16
  br i1 %130, label %177, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %121, i64 0, i32 5, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %121, %"class.blink::Node"* %16) #10
  br label %137

137:                                              ; preds = %135, %131
  %138 = phi %"class.blink::Node"* [ %136, %135 ], [ %133, %131 ]
  %139 = icmp eq %"class.blink::Node"* %138, null
  br i1 %139, label %177, label %120

140:                                              ; preds = %160
  %141 = bitcast %"class.blink::Node"* %161 to %"class.blink::Element"*
  %142 = call fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nonnull %5, %"class.blink::Element"* nonnull dereferenceable(104) %141) #10
  br i1 %142, label %178, label %143

143:                                              ; preds = %126, %140
  %144 = phi %"class.blink::Node"* [ %161, %140 ], [ %121, %126 ]
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %144, i64 1
  %146 = bitcast %"class.blink::Node"* %145 to %"class.blink::Node"**
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %146, align 8
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %149, label %158

149:                                              ; preds = %143
  %150 = icmp eq %"class.blink::Node"* %144, %16
  br i1 %150, label %177, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %144, i64 0, i32 5, i32 0, i32 0
  %153 = load %"class.blink::Node"*, %"class.blink::Node"** %152, align 8
  %154 = icmp eq %"class.blink::Node"* %153, null
  br i1 %154, label %155, label %158

155:                                              ; preds = %151
  %156 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %144, %"class.blink::Node"* %16) #10
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %177, label %158

158:                                              ; preds = %155, %151, %143
  %159 = phi %"class.blink::Node"* [ %147, %143 ], [ %153, %151 ], [ %156, %155 ]
  br label %160

160:                                              ; preds = %158, %174
  %161 = phi %"class.blink::Node"* [ %175, %174 ], [ %159, %158 ]
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, 12
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %140, label %166

166:                                              ; preds = %160
  %167 = icmp eq %"class.blink::Node"* %161, %16
  br i1 %167, label %177, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 5, i32 0, i32 0
  %170 = load %"class.blink::Node"*, %"class.blink::Node"** %169, align 8
  %171 = icmp eq %"class.blink::Node"* %170, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %161, %"class.blink::Node"* %16) #10
  br label %174

174:                                              ; preds = %172, %168
  %175 = phi %"class.blink::Node"* [ %173, %172 ], [ %170, %168 ]
  %176 = icmp eq %"class.blink::Node"* %175, null
  br i1 %176, label %177, label %160

177:                                              ; preds = %115, %109, %137, %129, %155, %149, %174, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  br label %397

178:                                              ; preds = %140, %126
  %179 = phi %"class.blink::Node"* [ %121, %126 ], [ %161, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  %180 = load i32, i32* %3, align 4
  %181 = add i32 %180, 1
  store i32 %181, i32* %3, align 4
  %182 = icmp eq i32 %181, %1
  br i1 %182, label %393, label %103

183:                                              ; preds = %4
  %184 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %8) #10
  %185 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0
  %186 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %187 = load %"class.blink::Node"*, %"class.blink::Node"** %186, align 8
  %188 = icmp eq %"class.blink::Node"* %187, null
  br i1 %188, label %189, label %199

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %191 = icmp eq %"class.blink::Node"* %190, %185
  br i1 %191, label %397, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %194 = load %"class.blink::Node"*, %"class.blink::Node"** %193, align 8
  %195 = icmp eq %"class.blink::Node"* %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %192
  %197 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %190, %"class.blink::Node"* %185) #10
  %198 = icmp eq %"class.blink::Node"* %197, null
  br i1 %198, label %397, label %199

199:                                              ; preds = %196, %192, %183
  %200 = phi %"class.blink::Node"* [ %187, %183 ], [ %194, %192 ], [ %197, %196 ]
  br label %201

201:                                              ; preds = %199, %215
  %202 = phi %"class.blink::Node"* [ %216, %215 ], [ %200, %199 ]
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 12
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %218, label %207

207:                                              ; preds = %201
  %208 = icmp eq %"class.blink::Node"* %202, %185
  br i1 %208, label %397, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 5, i32 0, i32 0
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = icmp eq %"class.blink::Node"* %211, null
  br i1 %212, label %213, label %215

213:                                              ; preds = %209
  %214 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %202, %"class.blink::Node"* %185) #10
  br label %215

215:                                              ; preds = %213, %209
  %216 = phi %"class.blink::Node"* [ %214, %213 ], [ %211, %209 ]
  %217 = icmp eq %"class.blink::Node"* %216, null
  br i1 %217, label %397, label %201

218:                                              ; preds = %201
  %219 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 1
  %220 = bitcast %"class.blink::HTMLCollection"* %219 to %"class.blink::SpaceSplitString::Data"**
  br label %221

221:                                              ; preds = %261, %218
  %222 = phi %"class.blink::Node"* [ %202, %218 ], [ %262, %261 ]
  %223 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 1, i32 3
  %224 = bitcast %"class.blink::Member.2"* %223 to %"class.blink::ElementData"**
  %225 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %224, align 8
  %226 = icmp eq %"class.blink::ElementData"* %225, null
  br i1 %226, label %245, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %225, i64 0, i32 2, i32 0, i32 0
  %229 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %228, align 8
  %230 = icmp eq %"class.blink::SpaceSplitString::Data"* %229, null
  br i1 %230, label %245, label %231

231:                                              ; preds = %227
  %232 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %220, align 8
  %233 = icmp eq %"class.blink::SpaceSplitString::Data"* %232, null
  br i1 %233, label %245, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %232, i64 0, i32 2, i32 0, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %245, label %238

238:                                              ; preds = %234
  %239 = tail call zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"* nonnull %229, %"class.blink::SpaceSplitString::Data"* nonnull dereferenceable(64) %232) #10
  br i1 %239, label %240, label %245

240:                                              ; preds = %238
  %241 = bitcast %"class.blink::Node"* %222 to %"class.blink::Element"*
  %242 = load i32, i32* %3, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %3, align 4
  %244 = icmp eq i32 %243, %1
  br i1 %244, label %397, label %282

245:                                              ; preds = %238, %234, %231, %227, %221
  %246 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 1
  %247 = bitcast %"class.blink::Node"* %246 to %"class.blink::Node"**
  %248 = load %"class.blink::Node"*, %"class.blink::Node"** %247, align 8
  %249 = icmp eq %"class.blink::Node"* %248, null
  br i1 %249, label %250, label %259

250:                                              ; preds = %245
  %251 = icmp eq %"class.blink::Node"* %222, %185
  br i1 %251, label %397, label %252

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 0, i32 5, i32 0, i32 0
  %254 = load %"class.blink::Node"*, %"class.blink::Node"** %253, align 8
  %255 = icmp eq %"class.blink::Node"* %254, null
  br i1 %255, label %256, label %259

256:                                              ; preds = %252
  %257 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %222, %"class.blink::Node"* %185) #10
  %258 = icmp eq %"class.blink::Node"* %257, null
  br i1 %258, label %397, label %259

259:                                              ; preds = %256, %252, %245
  %260 = phi %"class.blink::Node"* [ %248, %245 ], [ %254, %252 ], [ %257, %256 ]
  br label %261

261:                                              ; preds = %259, %275
  %262 = phi %"class.blink::Node"* [ %276, %275 ], [ %260, %259 ]
  %263 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %262, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = and i32 %264, 12
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %221, label %267

267:                                              ; preds = %261
  %268 = icmp eq %"class.blink::Node"* %262, %185
  br i1 %268, label %397, label %269

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %262, i64 0, i32 5, i32 0, i32 0
  %271 = load %"class.blink::Node"*, %"class.blink::Node"** %270, align 8
  %272 = icmp eq %"class.blink::Node"* %271, null
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  %274 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %262, %"class.blink::Node"* %185) #10
  br label %275

275:                                              ; preds = %273, %269
  %276 = phi %"class.blink::Node"* [ %274, %273 ], [ %271, %269 ]
  %277 = icmp eq %"class.blink::Node"* %276, null
  br i1 %277, label %397, label %261

278:                                              ; preds = %333
  %279 = load i32, i32* %3, align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %3, align 4
  %281 = icmp eq i32 %280, %1
  br i1 %281, label %395, label %282

282:                                              ; preds = %240, %278
  %283 = phi %"class.blink::Node"* [ %317, %278 ], [ %222, %240 ]
  %284 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %283, i64 1
  %285 = bitcast %"class.blink::Node"* %284 to %"class.blink::Node"**
  %286 = load %"class.blink::Node"*, %"class.blink::Node"** %285, align 8
  %287 = icmp eq %"class.blink::Node"* %286, null
  br i1 %287, label %288, label %297

288:                                              ; preds = %282
  %289 = icmp eq %"class.blink::Node"* %283, %185
  br i1 %289, label %397, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %283, i64 0, i32 5, i32 0, i32 0
  %292 = load %"class.blink::Node"*, %"class.blink::Node"** %291, align 8
  %293 = icmp eq %"class.blink::Node"* %292, null
  br i1 %293, label %294, label %297

294:                                              ; preds = %290
  %295 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %283, %"class.blink::Node"* %185) #10
  %296 = icmp eq %"class.blink::Node"* %295, null
  br i1 %296, label %397, label %297

297:                                              ; preds = %294, %290, %282
  %298 = phi %"class.blink::Node"* [ %286, %282 ], [ %292, %290 ], [ %295, %294 ]
  br label %299

299:                                              ; preds = %297, %313
  %300 = phi %"class.blink::Node"* [ %314, %313 ], [ %298, %297 ]
  %301 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %300, i64 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = and i32 %302, 12
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %316, label %305

305:                                              ; preds = %299
  %306 = icmp eq %"class.blink::Node"* %300, %185
  br i1 %306, label %397, label %307

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %300, i64 0, i32 5, i32 0, i32 0
  %309 = load %"class.blink::Node"*, %"class.blink::Node"** %308, align 8
  %310 = icmp eq %"class.blink::Node"* %309, null
  br i1 %310, label %311, label %313

311:                                              ; preds = %307
  %312 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %300, %"class.blink::Node"* %185) #10
  br label %313

313:                                              ; preds = %311, %307
  %314 = phi %"class.blink::Node"* [ %312, %311 ], [ %309, %307 ]
  %315 = icmp eq %"class.blink::Node"* %314, null
  br i1 %315, label %397, label %299

316:                                              ; preds = %351, %299
  %317 = phi %"class.blink::Node"* [ %300, %299 ], [ %352, %351 ]
  %318 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %317, i64 1, i32 3
  %319 = bitcast %"class.blink::Member.2"* %318 to %"class.blink::ElementData"**
  %320 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %319, align 8
  %321 = icmp eq %"class.blink::ElementData"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %320, i64 0, i32 2, i32 0, i32 0
  %324 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %323, align 8
  %325 = icmp eq %"class.blink::SpaceSplitString::Data"* %324, null
  br i1 %325, label %335, label %326

326:                                              ; preds = %322
  %327 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %220, align 8
  %328 = icmp eq %"class.blink::SpaceSplitString::Data"* %327, null
  br i1 %328, label %335, label %329

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %327, i64 0, i32 2, i32 0, i32 0, i32 2
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = tail call zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"* nonnull %324, %"class.blink::SpaceSplitString::Data"* nonnull dereferenceable(64) %327) #10
  br i1 %334, label %278, label %335

335:                                              ; preds = %333, %329, %326, %322, %316
  %336 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %317, i64 1
  %337 = bitcast %"class.blink::Node"* %336 to %"class.blink::Node"**
  %338 = load %"class.blink::Node"*, %"class.blink::Node"** %337, align 8
  %339 = icmp eq %"class.blink::Node"* %338, null
  br i1 %339, label %340, label %349

340:                                              ; preds = %335
  %341 = icmp eq %"class.blink::Node"* %317, %185
  br i1 %341, label %397, label %342

342:                                              ; preds = %340
  %343 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %317, i64 0, i32 5, i32 0, i32 0
  %344 = load %"class.blink::Node"*, %"class.blink::Node"** %343, align 8
  %345 = icmp eq %"class.blink::Node"* %344, null
  br i1 %345, label %346, label %349

346:                                              ; preds = %342
  %347 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %317, %"class.blink::Node"* %185) #10
  %348 = icmp eq %"class.blink::Node"* %347, null
  br i1 %348, label %397, label %349

349:                                              ; preds = %346, %342, %335
  %350 = phi %"class.blink::Node"* [ %338, %335 ], [ %344, %342 ], [ %347, %346 ]
  br label %351

351:                                              ; preds = %349, %365
  %352 = phi %"class.blink::Node"* [ %366, %365 ], [ %350, %349 ]
  %353 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %352, i64 0, i32 1
  %354 = load i32, i32* %353, align 8
  %355 = and i32 %354, 12
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %316, label %357

357:                                              ; preds = %351
  %358 = icmp eq %"class.blink::Node"* %352, %185
  br i1 %358, label %397, label %359

359:                                              ; preds = %357
  %360 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %352, i64 0, i32 5, i32 0, i32 0
  %361 = load %"class.blink::Node"*, %"class.blink::Node"** %360, align 8
  %362 = icmp eq %"class.blink::Node"* %361, null
  br i1 %362, label %363, label %365

363:                                              ; preds = %359
  %364 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %352, %"class.blink::Node"* %185) #10
  br label %365

365:                                              ; preds = %363, %359
  %366 = phi %"class.blink::Node"* [ %364, %363 ], [ %361, %359 ]
  %367 = icmp eq %"class.blink::Node"* %366, null
  br i1 %367, label %397, label %351

368:                                              ; preds = %4
  %369 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 2
  %370 = load i8, i8* %369, align 2
  %371 = and i8 %370, 1
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %399, label %373

373:                                              ; preds = %368
  %374 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)***
  %375 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)**, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*** %374, align 8
  %376 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %375, i64 11
  %377 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %376, align 8
  %378 = tail call %"class.blink::Element"* %377(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* %2) #10
  %379 = icmp eq %"class.blink::Element"* %378, null
  br i1 %379, label %397, label %380

380:                                              ; preds = %373, %385
  %381 = phi %"class.blink::Element"* [ %389, %385 ], [ %378, %373 ]
  %382 = load i32, i32* %3, align 4
  %383 = add i32 %382, 1
  store i32 %383, i32* %3, align 4
  %384 = icmp eq i32 %383, %1
  br i1 %384, label %397, label %385

385:                                              ; preds = %380
  %386 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)**, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*** %374, align 8
  %387 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %386, i64 11
  %388 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.blink::Element"*)** %387, align 8
  %389 = tail call %"class.blink::Element"* %388(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull %381) #10
  %390 = icmp eq %"class.blink::Element"* %389, null
  br i1 %390, label %397, label %380

391:                                              ; preds = %558
  %392 = bitcast %"class.blink::Node"* %559 to %"class.blink::Element"*
  br label %397

393:                                              ; preds = %178
  %394 = bitcast %"class.blink::Node"* %179 to %"class.blink::Element"*
  br label %397

395:                                              ; preds = %278
  %396 = bitcast %"class.blink::Node"* %317 to %"class.blink::Element"*
  br label %397

397:                                              ; preds = %207, %215, %250, %256, %267, %275, %294, %288, %305, %313, %340, %346, %357, %365, %380, %385, %404, %420, %436, %472, %443, %459, %502, %510, %530, %536, %547, %555, %575, %569, %589, %597, %609, %615, %626, %634, %240, %395, %94, %393, %373, %433, %518, %391, %91, %177, %189, %196, %481, %488
  %398 = phi %"class.blink::Element"* [ null, %91 ], [ null, %177 ], [ null, %196 ], [ null, %189 ], [ null, %488 ], [ null, %481 ], [ %392, %391 ], [ %519, %518 ], [ null, %433 ], [ null, %373 ], [ %394, %393 ], [ %95, %94 ], [ %396, %395 ], [ %241, %240 ], [ null, %634 ], [ null, %626 ], [ null, %615 ], [ null, %609 ], [ null, %597 ], [ null, %589 ], [ null, %569 ], [ null, %575 ], [ null, %555 ], [ null, %547 ], [ null, %536 ], [ null, %530 ], [ null, %510 ], [ null, %502 ], [ null, %459 ], [ null, %443 ], [ %437, %436 ], [ null, %472 ], [ null, %420 ], [ null, %404 ], [ %381, %380 ], [ null, %385 ], [ null, %365 ], [ null, %357 ], [ null, %346 ], [ null, %340 ], [ null, %313 ], [ null, %305 ], [ null, %288 ], [ null, %294 ], [ null, %275 ], [ null, %267 ], [ null, %256 ], [ null, %250 ], [ null, %215 ], [ null, %207 ]
  ret %"class.blink::Element"* %398

399:                                              ; preds = %368
  %400 = and i8 %370, 2
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %475, label %402

402:                                              ; preds = %399
  %403 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  br label %404

404:                                              ; preds = %409, %402
  %405 = phi %"class.blink::Node"* [ %403, %402 ], [ %407, %409 ]
  %406 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %405, i64 0, i32 5, i32 0, i32 0
  %407 = load %"class.blink::Node"*, %"class.blink::Node"** %406, align 8
  %408 = icmp eq %"class.blink::Node"* %407, null
  br i1 %408, label %397, label %409

409:                                              ; preds = %404
  %410 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %407, i64 0, i32 1
  %411 = load i32, i32* %410, align 8
  %412 = and i32 %411, 12
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %404

414:                                              ; preds = %409
  %415 = bitcast %"class.blink::Node"* %407 to %"class.blink::Element"*
  %416 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %415) #10
  br i1 %416, label %433, label %420

417:                                              ; preds = %425
  %418 = bitcast %"class.blink::Node"* %423 to %"class.blink::Element"*
  %419 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %418) #10
  br i1 %419, label %431, label %430

420:                                              ; preds = %414, %430
  %421 = phi %"class.blink::Node"* [ %423, %430 ], [ %407, %414 ]
  %422 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %421, i64 0, i32 5, i32 0, i32 0
  %423 = load %"class.blink::Node"*, %"class.blink::Node"** %422, align 8
  %424 = icmp eq %"class.blink::Node"* %423, null
  br i1 %424, label %397, label %425

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %423, i64 0, i32 1
  %427 = load i32, i32* %426, align 8
  %428 = and i32 %427, 12
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %417, label %430

430:                                              ; preds = %425, %417
  br label %420

431:                                              ; preds = %417
  %432 = bitcast %"class.blink::Node"* %423 to %"class.blink::Element"*
  br label %433

433:                                              ; preds = %431, %414
  %434 = phi %"class.blink::Element"* [ %415, %414 ], [ %432, %431 ]
  %435 = icmp eq %"class.blink::Element"* %434, null
  br i1 %435, label %397, label %436

436:                                              ; preds = %433, %472
  %437 = phi %"class.blink::Element"* [ %473, %472 ], [ %434, %433 ]
  %438 = load i32, i32* %3, align 4
  %439 = add i32 %438, 1
  store i32 %439, i32* %3, align 4
  %440 = icmp eq i32 %439, %1
  br i1 %440, label %397, label %441

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %437, i64 0, i32 0, i32 0
  br label %443

443:                                              ; preds = %448, %441
  %444 = phi %"class.blink::Node"* [ %442, %441 ], [ %446, %448 ]
  %445 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %444, i64 0, i32 5, i32 0, i32 0
  %446 = load %"class.blink::Node"*, %"class.blink::Node"** %445, align 8
  %447 = icmp eq %"class.blink::Node"* %446, null
  br i1 %447, label %397, label %448

448:                                              ; preds = %443
  %449 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %446, i64 0, i32 1
  %450 = load i32, i32* %449, align 8
  %451 = and i32 %450, 12
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %443

453:                                              ; preds = %448
  %454 = bitcast %"class.blink::Node"* %446 to %"class.blink::Element"*
  %455 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %454) #10
  br i1 %455, label %472, label %459

456:                                              ; preds = %464
  %457 = bitcast %"class.blink::Node"* %462 to %"class.blink::Element"*
  %458 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %457) #10
  br i1 %458, label %470, label %469

459:                                              ; preds = %453, %469
  %460 = phi %"class.blink::Node"* [ %462, %469 ], [ %446, %453 ]
  %461 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %460, i64 0, i32 5, i32 0, i32 0
  %462 = load %"class.blink::Node"*, %"class.blink::Node"** %461, align 8
  %463 = icmp eq %"class.blink::Node"* %462, null
  br i1 %463, label %397, label %464

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %462, i64 0, i32 1
  %466 = load i32, i32* %465, align 8
  %467 = and i32 %466, 12
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %456, label %469

469:                                              ; preds = %464, %456
  br label %459

470:                                              ; preds = %456
  %471 = bitcast %"class.blink::Node"* %462 to %"class.blink::Element"*
  br label %472

472:                                              ; preds = %470, %453
  %473 = phi %"class.blink::Element"* [ %454, %453 ], [ %471, %470 ]
  %474 = icmp eq %"class.blink::Element"* %473, null
  br i1 %474, label %397, label %436

475:                                              ; preds = %399
  %476 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %8) #10
  %477 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %476, i64 0, i32 0
  %478 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %479 = load %"class.blink::Node"*, %"class.blink::Node"** %478, align 8
  %480 = icmp eq %"class.blink::Node"* %479, null
  br i1 %480, label %481, label %491

481:                                              ; preds = %475
  %482 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %483 = icmp eq %"class.blink::Node"* %482, %477
  br i1 %483, label %397, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %486 = load %"class.blink::Node"*, %"class.blink::Node"** %485, align 8
  %487 = icmp eq %"class.blink::Node"* %486, null
  br i1 %487, label %488, label %491

488:                                              ; preds = %484
  %489 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %482, %"class.blink::Node"* %477) #10
  %490 = icmp eq %"class.blink::Node"* %489, null
  br i1 %490, label %397, label %491

491:                                              ; preds = %488, %484, %475
  %492 = phi %"class.blink::Node"* [ %479, %475 ], [ %486, %484 ], [ %489, %488 ]
  br label %493

493:                                              ; preds = %491, %510
  %494 = phi %"class.blink::Node"* [ %511, %510 ], [ %492, %491 ]
  %495 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %494, i64 0, i32 1
  %496 = load i32, i32* %495, align 8
  %497 = and i32 %496, 12
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %502

499:                                              ; preds = %493
  %500 = bitcast %"class.blink::Node"* %494 to %"class.blink::Element"*
  %501 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %500) #10
  br i1 %501, label %518, label %524

502:                                              ; preds = %493
  %503 = icmp eq %"class.blink::Node"* %494, %477
  br i1 %503, label %397, label %504

504:                                              ; preds = %502
  %505 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %494, i64 0, i32 5, i32 0, i32 0
  %506 = load %"class.blink::Node"*, %"class.blink::Node"** %505, align 8
  %507 = icmp eq %"class.blink::Node"* %506, null
  br i1 %507, label %508, label %510

508:                                              ; preds = %504
  %509 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %494, %"class.blink::Node"* %477) #10
  br label %510

510:                                              ; preds = %508, %504
  %511 = phi %"class.blink::Node"* [ %509, %508 ], [ %506, %504 ]
  %512 = icmp eq %"class.blink::Node"* %511, null
  br i1 %512, label %397, label %493

513:                                              ; preds = %541
  %514 = bitcast %"class.blink::Node"* %542 to %"class.blink::Element"*
  %515 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %514) #10
  br i1 %515, label %516, label %524

516:                                              ; preds = %513
  %517 = bitcast %"class.blink::Node"* %542 to %"class.blink::Element"*
  br label %518

518:                                              ; preds = %516, %499
  %519 = phi %"class.blink::Element"* [ %500, %499 ], [ %517, %516 ]
  %520 = phi %"class.blink::Node"* [ %494, %499 ], [ %542, %516 ]
  %521 = load i32, i32* %3, align 4
  %522 = add i32 %521, 1
  store i32 %522, i32* %3, align 4
  %523 = icmp eq i32 %522, %1
  br i1 %523, label %397, label %563

524:                                              ; preds = %499, %513
  %525 = phi %"class.blink::Node"* [ %542, %513 ], [ %494, %499 ]
  %526 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %525, i64 1
  %527 = bitcast %"class.blink::Node"* %526 to %"class.blink::Node"**
  %528 = load %"class.blink::Node"*, %"class.blink::Node"** %527, align 8
  %529 = icmp eq %"class.blink::Node"* %528, null
  br i1 %529, label %530, label %539

530:                                              ; preds = %524
  %531 = icmp eq %"class.blink::Node"* %525, %477
  br i1 %531, label %397, label %532

532:                                              ; preds = %530
  %533 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %525, i64 0, i32 5, i32 0, i32 0
  %534 = load %"class.blink::Node"*, %"class.blink::Node"** %533, align 8
  %535 = icmp eq %"class.blink::Node"* %534, null
  br i1 %535, label %536, label %539

536:                                              ; preds = %532
  %537 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %525, %"class.blink::Node"* %477) #10
  %538 = icmp eq %"class.blink::Node"* %537, null
  br i1 %538, label %397, label %539

539:                                              ; preds = %536, %532, %524
  %540 = phi %"class.blink::Node"* [ %528, %524 ], [ %534, %532 ], [ %537, %536 ]
  br label %541

541:                                              ; preds = %539, %555
  %542 = phi %"class.blink::Node"* [ %556, %555 ], [ %540, %539 ]
  %543 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %542, i64 0, i32 1
  %544 = load i32, i32* %543, align 8
  %545 = and i32 %544, 12
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %513, label %547

547:                                              ; preds = %541
  %548 = icmp eq %"class.blink::Node"* %542, %477
  br i1 %548, label %397, label %549

549:                                              ; preds = %547
  %550 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %542, i64 0, i32 5, i32 0, i32 0
  %551 = load %"class.blink::Node"*, %"class.blink::Node"** %550, align 8
  %552 = icmp eq %"class.blink::Node"* %551, null
  br i1 %552, label %553, label %555

553:                                              ; preds = %549
  %554 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %542, %"class.blink::Node"* %477) #10
  br label %555

555:                                              ; preds = %553, %549
  %556 = phi %"class.blink::Node"* [ %554, %553 ], [ %551, %549 ]
  %557 = icmp eq %"class.blink::Node"* %556, null
  br i1 %557, label %397, label %541

558:                                              ; preds = %600, %586
  %559 = phi %"class.blink::Node"* [ %581, %586 ], [ %621, %600 ]
  %560 = load i32, i32* %3, align 4
  %561 = add i32 %560, 1
  store i32 %561, i32* %3, align 4
  %562 = icmp eq i32 %561, %1
  br i1 %562, label %391, label %563

563:                                              ; preds = %518, %558
  %564 = phi %"class.blink::Node"* [ %559, %558 ], [ %520, %518 ]
  %565 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %564, i64 1
  %566 = bitcast %"class.blink::Node"* %565 to %"class.blink::Node"**
  %567 = load %"class.blink::Node"*, %"class.blink::Node"** %566, align 8
  %568 = icmp eq %"class.blink::Node"* %567, null
  br i1 %568, label %569, label %578

569:                                              ; preds = %563
  %570 = icmp eq %"class.blink::Node"* %564, %477
  br i1 %570, label %397, label %571

571:                                              ; preds = %569
  %572 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %564, i64 0, i32 5, i32 0, i32 0
  %573 = load %"class.blink::Node"*, %"class.blink::Node"** %572, align 8
  %574 = icmp eq %"class.blink::Node"* %573, null
  br i1 %574, label %575, label %578

575:                                              ; preds = %571
  %576 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %564, %"class.blink::Node"* %477) #10
  %577 = icmp eq %"class.blink::Node"* %576, null
  br i1 %577, label %397, label %578

578:                                              ; preds = %575, %571, %563
  %579 = phi %"class.blink::Node"* [ %567, %563 ], [ %573, %571 ], [ %576, %575 ]
  br label %580

580:                                              ; preds = %578, %597
  %581 = phi %"class.blink::Node"* [ %598, %597 ], [ %579, %578 ]
  %582 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %581, i64 0, i32 1
  %583 = load i32, i32* %582, align 8
  %584 = and i32 %583, 12
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %589

586:                                              ; preds = %580
  %587 = bitcast %"class.blink::Node"* %581 to %"class.blink::Element"*
  %588 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %587) #10
  br i1 %588, label %558, label %603

589:                                              ; preds = %580
  %590 = icmp eq %"class.blink::Node"* %581, %477
  br i1 %590, label %397, label %591

591:                                              ; preds = %589
  %592 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %581, i64 0, i32 5, i32 0, i32 0
  %593 = load %"class.blink::Node"*, %"class.blink::Node"** %592, align 8
  %594 = icmp eq %"class.blink::Node"* %593, null
  br i1 %594, label %595, label %597

595:                                              ; preds = %591
  %596 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %581, %"class.blink::Node"* %477) #10
  br label %597

597:                                              ; preds = %595, %591
  %598 = phi %"class.blink::Node"* [ %596, %595 ], [ %593, %591 ]
  %599 = icmp eq %"class.blink::Node"* %598, null
  br i1 %599, label %397, label %580

600:                                              ; preds = %620
  %601 = bitcast %"class.blink::Node"* %621 to %"class.blink::Element"*
  %602 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %601) #10
  br i1 %602, label %558, label %603

603:                                              ; preds = %586, %600
  %604 = phi %"class.blink::Node"* [ %621, %600 ], [ %581, %586 ]
  %605 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %604, i64 1
  %606 = bitcast %"class.blink::Node"* %605 to %"class.blink::Node"**
  %607 = load %"class.blink::Node"*, %"class.blink::Node"** %606, align 8
  %608 = icmp eq %"class.blink::Node"* %607, null
  br i1 %608, label %609, label %618

609:                                              ; preds = %603
  %610 = icmp eq %"class.blink::Node"* %604, %477
  br i1 %610, label %397, label %611

611:                                              ; preds = %609
  %612 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %604, i64 0, i32 5, i32 0, i32 0
  %613 = load %"class.blink::Node"*, %"class.blink::Node"** %612, align 8
  %614 = icmp eq %"class.blink::Node"* %613, null
  br i1 %614, label %615, label %618

615:                                              ; preds = %611
  %616 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %604, %"class.blink::Node"* %477) #10
  %617 = icmp eq %"class.blink::Node"* %616, null
  br i1 %617, label %397, label %618

618:                                              ; preds = %615, %611, %603
  %619 = phi %"class.blink::Node"* [ %607, %603 ], [ %613, %611 ], [ %616, %615 ]
  br label %620

620:                                              ; preds = %618, %634
  %621 = phi %"class.blink::Node"* [ %635, %634 ], [ %619, %618 ]
  %622 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %621, i64 0, i32 1
  %623 = load i32, i32* %622, align 8
  %624 = and i32 %623, 12
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %600, label %626

626:                                              ; preds = %620
  %627 = icmp eq %"class.blink::Node"* %621, %477
  br i1 %627, label %397, label %628

628:                                              ; preds = %626
  %629 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %621, i64 0, i32 5, i32 0, i32 0
  %630 = load %"class.blink::Node"*, %"class.blink::Node"** %629, align 8
  %631 = icmp eq %"class.blink::Node"* %630, null
  br i1 %631, label %632, label %634

632:                                              ; preds = %628
  %633 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %621, %"class.blink::Node"* %477) #10
  br label %634

634:                                              ; preds = %632, %628
  %635 = phi %"class.blink::Node"* [ %633, %632 ], [ %630, %628 ]
  %636 = icmp eq %"class.blink::Node"* %635, null
  br i1 %636, label %397, label %620
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection24TraverseBackwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"*, i32, %"class.blink::Element"* dereferenceable(104), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 2
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %82, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %16, %9
  %12 = phi %"class.blink::Node"* [ %10, %9 ], [ %14, %16 ]
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %165, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %11

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %22) #10
  br i1 %23, label %40, label %27

24:                                               ; preds = %32
  %25 = bitcast %"class.blink::Node"* %30 to %"class.blink::Element"*
  %26 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %25) #10
  br i1 %26, label %38, label %37

27:                                               ; preds = %21, %37
  %28 = phi %"class.blink::Node"* [ %30, %37 ], [ %14, %21 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 4, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %165, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %24, label %37

37:                                               ; preds = %32, %24
  br label %27

38:                                               ; preds = %24
  %39 = bitcast %"class.blink::Node"* %30 to %"class.blink::Element"*
  br label %40

40:                                               ; preds = %38, %21
  %41 = phi %"class.blink::Element"* [ %22, %21 ], [ %39, %38 ]
  %42 = icmp eq %"class.blink::Element"* %41, null
  br i1 %42, label %165, label %43

43:                                               ; preds = %40, %79
  %44 = phi %"class.blink::Element"* [ %80, %79 ], [ %41, %40 ]
  %45 = load i32, i32* %3, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %3, align 4
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %165, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %55, %48
  %51 = phi %"class.blink::Node"* [ %49, %48 ], [ %53, %55 ]
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 4, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %165, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %50

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::Node"* %53 to %"class.blink::Element"*
  %62 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %61) #10
  br i1 %62, label %79, label %66

63:                                               ; preds = %71
  %64 = bitcast %"class.blink::Node"* %69 to %"class.blink::Element"*
  %65 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %64) #10
  br i1 %65, label %77, label %76

66:                                               ; preds = %60, %76
  %67 = phi %"class.blink::Node"* [ %69, %76 ], [ %53, %60 ]
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 4, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %165, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 12
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %63, label %76

76:                                               ; preds = %71, %63
  br label %66

77:                                               ; preds = %63
  %78 = bitcast %"class.blink::Node"* %69 to %"class.blink::Element"*
  br label %79

79:                                               ; preds = %77, %60
  %80 = phi %"class.blink::Element"* [ %61, %60 ], [ %78, %77 ]
  %81 = icmp eq %"class.blink::Element"* %80, null
  br i1 %81, label %165, label %43

82:                                               ; preds = %4
  %83 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %84 = bitcast %"class.blink::LiveNodeListBase.base"* %83 to %"class.blink::LiveNodeListBase"*
  %85 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %84) #10
  %86 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %88 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %87, %"class.blink::Node"* %86) #10
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %165, label %90

90:                                               ; preds = %82, %99
  %91 = phi %"class.blink::Node"* [ %100, %99 ], [ %88, %82 ]
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = bitcast %"class.blink::Node"* %91 to %"class.blink::Element"*
  %98 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %97) #10
  br i1 %98, label %120, label %105

99:                                               ; preds = %90
  %100 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %91, %"class.blink::Node"* %86) #10
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %165, label %90

102:                                              ; preds = %109
  %103 = bitcast %"class.blink::Node"* %110 to %"class.blink::Element"*
  %104 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %103) #10
  br i1 %104, label %118, label %105

105:                                              ; preds = %96, %102
  %106 = phi %"class.blink::Node"* [ %110, %102 ], [ %91, %96 ]
  %107 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %106, %"class.blink::Node"* %86) #10
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %165, label %109

109:                                              ; preds = %105, %115
  %110 = phi %"class.blink::Node"* [ %116, %115 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 12
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %102, label %115

115:                                              ; preds = %109
  %116 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %110, %"class.blink::Node"* %86) #10
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %165, label %109

118:                                              ; preds = %102
  %119 = bitcast %"class.blink::Node"* %110 to %"class.blink::Element"*
  br label %120

120:                                              ; preds = %118, %96
  %121 = phi %"class.blink::Element"* [ %97, %96 ], [ %119, %118 ]
  %122 = icmp eq %"class.blink::Element"* %121, null
  br i1 %122, label %165, label %123

123:                                              ; preds = %120, %162
  %124 = phi %"class.blink::Element"* [ %163, %162 ], [ %121, %120 ]
  %125 = load i32, i32* %3, align 4
  %126 = add i32 %125, -1
  store i32 %126, i32* %3, align 4
  %127 = icmp eq i32 %126, %1
  br i1 %127, label %165, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %124, i64 0, i32 0, i32 0
  %130 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %129, %"class.blink::Node"* %86) #10
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %165, label %132

132:                                              ; preds = %128, %141
  %133 = phi %"class.blink::Node"* [ %142, %141 ], [ %130, %128 ]
  %134 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %133, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 12
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::Node"* %133 to %"class.blink::Element"*
  %140 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %139) #10
  br i1 %140, label %162, label %147

141:                                              ; preds = %132
  %142 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %133, %"class.blink::Node"* %86) #10
  %143 = icmp eq %"class.blink::Node"* %142, null
  br i1 %143, label %165, label %132

144:                                              ; preds = %151
  %145 = bitcast %"class.blink::Node"* %152 to %"class.blink::Element"*
  %146 = tail call zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %145) #10
  br i1 %146, label %160, label %147

147:                                              ; preds = %138, %144
  %148 = phi %"class.blink::Node"* [ %152, %144 ], [ %133, %138 ]
  %149 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %148, %"class.blink::Node"* %86) #10
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %165, label %151

151:                                              ; preds = %147, %157
  %152 = phi %"class.blink::Node"* [ %158, %157 ], [ %149, %147 ]
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 12
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %144, label %157

157:                                              ; preds = %151
  %158 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %152, %"class.blink::Node"* %86) #10
  %159 = icmp eq %"class.blink::Node"* %158, null
  br i1 %159, label %165, label %151

160:                                              ; preds = %144
  %161 = bitcast %"class.blink::Node"* %152 to %"class.blink::Element"*
  br label %162

162:                                              ; preds = %160, %138
  %163 = phi %"class.blink::Element"* [ %139, %138 ], [ %161, %160 ]
  %164 = icmp eq %"class.blink::Element"* %163, null
  br i1 %164, label %165, label %123

165:                                              ; preds = %11, %27, %79, %43, %50, %66, %99, %105, %115, %162, %128, %123, %141, %147, %157, %40, %120, %82
  %166 = phi %"class.blink::Element"* [ null, %120 ], [ null, %82 ], [ null, %40 ], [ null, %157 ], [ null, %147 ], [ null, %141 ], [ %124, %123 ], [ null, %162 ], [ null, %128 ], [ null, %115 ], [ null, %105 ], [ null, %99 ], [ null, %66 ], [ null, %50 ], [ null, %79 ], [ %44, %43 ], [ null, %27 ], [ null, %11 ]
  ret %"class.blink::Element"* %166
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringImpl"*, align 8
  %4 = alloca %"class.WTF::StringImpl"*, align 8
  %5 = bitcast %"class.blink::HTMLCollection"* %0 to void (%"class.blink::HTMLCollection"*)***
  %6 = load void (%"class.blink::HTMLCollection"*)**, void (%"class.blink::HTMLCollection"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::HTMLCollection"*)*, void (%"class.blink::HTMLCollection"*)** %6, i64 13
  %8 = load void (%"class.blink::HTMLCollection"*)*, void (%"class.blink::HTMLCollection"*)** %7, align 8
  tail call void %8(%"class.blink::HTMLCollection"* %0) #10
  %9 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::HTMLCollection::NamedItemCache"*, %"class.blink::HTMLCollection::NamedItemCache"** %9, align 8
  %11 = bitcast %"class.WTF::StringImpl"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = bitcast %"class.WTF::AtomicString"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.WTF::StringImpl"** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %10, i64 0, i32 0, i32 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %15, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %4) #10
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %16, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %18 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %17, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %26, align 8
  %28 = icmp eq %"class.blink::HeapVector"* %27, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %27, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %27, i64 0, i32 0
  %35 = call dereferenceable(8) %"class.blink::Member.19"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %34, i32 0) #10
  %36 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::Element"*, %"class.blink::Element"** %36, align 8
  br label %66

38:                                               ; preds = %2, %25, %29
  %39 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %10, i64 0, i32 1, i32 0
  %40 = bitcast %"class.WTF::StringImpl"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %12, align 8
  %42 = bitcast %"class.WTF::StringImpl"** %3 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %39, i64 0, i32 0
  %44 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %43, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %3) #10
  %45 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %44, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %46 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %39, i64 0, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %50
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %45, %51
  br i1 %52, label %66, label %53

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %54, align 8
  %56 = icmp eq %"class.blink::HeapVector"* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %55, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %55, i64 0, i32 0
  %63 = call dereferenceable(8) %"class.blink::Member.19"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %62, i32 0) #10
  %64 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::Element"*, %"class.blink::Element"** %64, align 8
  br label %66

66:                                               ; preds = %38, %61, %53, %57, %33
  %67 = phi %"class.blink::Element"* [ %37, %33 ], [ %65, %61 ], [ null, %53 ], [ null, %57 ], [ null, %38 ]
  ret %"class.blink::Element"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14HTMLCollection18NamedPropertyQueryERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)***
  %5 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)**, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)** %5, i64 10
  %7 = load %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)*, %"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)** %6, align 8
  %8 = tail call %"class.blink::Element"* %7(%"class.blink::HTMLCollection"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  %9 = icmp ne %"class.blink::Element"* %8, null
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14HTMLCollection22SupportedPropertyNamesERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet.556", align 8
  %4 = bitcast %"class.WTF::HashSet.556"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::HashSet.556", %"class.WTF::HashSet.556"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashSet.556", %"class.WTF::HashSet.556"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.WTF::HashSet.556"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4
  %9 = tail call i32 @_ZN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE9NodeCountERKS1_(%"class.blink::CollectionItemsCache"* %8, %"class.blink::HTMLCollection"* dereferenceable(96) %0) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %88, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 1
  %13 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2, i32 0
  %15 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %19 = getelementptr inbounds %"class.WTF::HashSet.556", %"class.WTF::HashSet.556"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %52, i64 0, i32 0, i32 0, i32 0
  br label %89

54:                                               ; preds = %390
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %5, align 8
  %56 = bitcast %"class.WTF::AtomicString"* %55 to i8*
  %57 = icmp eq %"class.WTF::AtomicString"* %55, null
  br i1 %57, label %88, label %58, !prof !4

58:                                               ; preds = %54
  %59 = load i32, i32* %6, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %87, label %61

61:                                               ; preds = %58
  %62 = zext i32 %59 to i64
  br label %63

63:                                               ; preds = %84, %61
  %64 = phi i64 [ 0, %61 ], [ %85, %84 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %55, i64 %64
  %66 = bitcast %"class.WTF::AtomicString"* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast i8* %67 to %"class.WTF::StringImpl"*
  %69 = ptrtoint i8* %67 to i64
  switch i64 %69, label %70 [
    i64 -1, label %84
    i64 0, label %84
  ]

70:                                               ; preds = %63
  %71 = getelementptr inbounds i8, i8* %67, i64 8
  %72 = bitcast i8* %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = bitcast i8* %67 to i32*
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %70
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %70
  %81 = phi i32 [ %79, %78 ], [ %77, %70 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %84

84:                                               ; preds = %83, %80, %63, %63
  %85 = add nuw nsw i64 %64, 1
  %86 = icmp eq i64 %85, %62
  br i1 %86, label %87, label %63

87:                                               ; preds = %84, %58
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %5, align 8
  br label %88

88:                                               ; preds = %2, %54, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void

89:                                               ; preds = %390, %11
  %90 = phi i32 [ 0, %11 ], [ %391, %390 ]
  %91 = load i8, i8* %12, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %89
  %94 = load i32, i32* %13, align 8
  %95 = icmp ugt i32 %94, %90
  br i1 %95, label %96, label %102

96:                                               ; preds = %93
  %97 = call dereferenceable(8) %"class.blink::Member.19"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %90) #10
  %98 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::Element"*, %"class.blink::Element"** %98, align 8
  br label %102

100:                                              ; preds = %89
  %101 = call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"* %15, %"class.blink::HTMLCollection"* dereferenceable(96) %0, i32 %90) #10
  br label %102

102:                                              ; preds = %93, %96, %100
  %103 = phi %"class.blink::Element"* [ %101, %100 ], [ %99, %96 ], [ null, %93 ]
  %104 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %103, i64 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %104, align 8
  %106 = icmp eq %"class.blink::ElementData"* %105, null
  br i1 %106, label %160, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %160, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %105, i64 0, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %123, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.blink::ElementData"* %105 to %"class.blink::UniqueElementData"*
  %118 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %105, i64 1, i32 1
  %119 = bitcast %"class.blink::Member.28"* %118 to %"class.blink::Attribute"**
  %120 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %117, i64 0, i32 2, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  br label %128

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %105, i64 1
  %125 = bitcast %"class.blink::ElementData"* %124 to %"class.blink::Attribute"*
  %126 = lshr i32 %113, 1
  %127 = and i32 %126, 268435455
  br label %128

128:                                              ; preds = %123, %116
  %129 = phi %"class.blink::Attribute"* [ %125, %123 ], [ %120, %116 ]
  %130 = phi i32 [ %127, %123 ], [ %122, %116 ]
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %129, i64 %131
  %133 = icmp eq i32 %130, 0
  br i1 %133, label %160, label %134

134:                                              ; preds = %128
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %138

138:                                              ; preds = %153, %134
  %139 = phi %"class.blink::Attribute"* [ %129, %134 ], [ %154, %153 ]
  %140 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %141, %135
  br i1 %142, label %156, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %145, %146
  br i1 %147, label %148, label %153

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %150, %151
  br i1 %152, label %156, label %153

153:                                              ; preds = %148, %143
  %154 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %139, i64 1
  %155 = icmp eq %"class.blink::Attribute"* %154, %132
  br i1 %155, label %160, label %138

156:                                              ; preds = %148, %138
  %157 = icmp eq %"class.blink::Attribute"* %139, null
  %158 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %139, i64 0, i32 1
  %159 = select i1 %157, %"class.WTF::AtomicString"* %18, %"class.WTF::AtomicString"* %158
  br label %160

160:                                              ; preds = %153, %156, %102, %107, %128
  %161 = phi %"class.WTF::AtomicString"* [ %18, %128 ], [ %18, %107 ], [ %18, %102 ], [ %159, %156 ], [ %18, %153 ]
  %162 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %205, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %205, label %169

169:                                              ; preds = %165
  %170 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.557"* nonnull %19, %"class.WTF::AtomicString"* dereferenceable(8) %161, %"class.WTF::AtomicString"* dereferenceable(8) %161) #10
  %171 = extractvalue { %"class.WTF::AtomicString"*, i8 } %170, 1
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %205, label %174

174:                                              ; preds = %169
  %175 = load i32, i32* %20, align 4
  %176 = load i32, i32* %21, align 8
  %177 = icmp eq i32 %175, %176
  br i1 %177, label %204, label %178, !prof !3

178:                                              ; preds = %174
  %179 = load %"class.WTF::String"*, %"class.WTF::String"** %22, align 8
  %180 = zext i32 %175 to i64
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 %180, i32 0, i32 0
  store %"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"** %182, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %183, label %201, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i33
  %193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #10
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !3

198:                                              ; preds = %189
  call void @llvm.trap() #10
  unreachable

199:                                              ; preds = %189
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %190, align 4
  br label %201

201:                                              ; preds = %199, %184, %178
  %202 = load i32, i32* %20, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %20, align 4
  br label %205

204:                                              ; preds = %174
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector.551"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %161) #10
  br label %205

205:                                              ; preds = %160, %204, %201, %169, %165
  %206 = icmp eq %"class.blink::Element"* %103, null
  br i1 %206, label %390, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %103, i64 0, i32 0, i32 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = and i32 %209, 48
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %390

212:                                              ; preds = %207
  %213 = and i32 %209, 1048576
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %267, label %215

215:                                              ; preds = %212
  %216 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %104, align 8
  %217 = icmp eq %"class.blink::ElementData"* %216, null
  br i1 %217, label %267, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 0, i32 0, i32 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %230, label %223

223:                                              ; preds = %218
  %224 = bitcast %"class.blink::ElementData"* %216 to %"class.blink::UniqueElementData"*
  %225 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 1, i32 1
  %226 = bitcast %"class.blink::Member.28"* %225 to %"class.blink::Attribute"**
  %227 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %224, i64 0, i32 2, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  br label %235

230:                                              ; preds = %218
  %231 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 1
  %232 = bitcast %"class.blink::ElementData"* %231 to %"class.blink::Attribute"*
  %233 = lshr i32 %220, 1
  %234 = and i32 %233, 268435455
  br label %235

235:                                              ; preds = %230, %223
  %236 = phi %"class.blink::Attribute"* [ %232, %230 ], [ %227, %223 ]
  %237 = phi i32 [ %234, %230 ], [ %229, %223 ]
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %236, i64 %238
  %240 = icmp eq i32 %237, 0
  br i1 %240, label %267, label %241

241:                                              ; preds = %235
  %242 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %242, i64 0, i32 3, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %242, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %245

245:                                              ; preds = %260, %241
  %246 = phi %"class.blink::Attribute"* [ %236, %241 ], [ %261, %260 ]
  %247 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %246, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %247, align 8
  %249 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %248, %242
  br i1 %249, label %263, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 3, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %252, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 4, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %257, %258
  br i1 %259, label %263, label %260

260:                                              ; preds = %255, %250
  %261 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %246, i64 1
  %262 = icmp eq %"class.blink::Attribute"* %261, %239
  br i1 %262, label %267, label %245

263:                                              ; preds = %255, %245
  %264 = icmp eq %"class.blink::Attribute"* %246, null
  %265 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %246, i64 0, i32 1
  %266 = select i1 %264, %"class.WTF::AtomicString"* %18, %"class.WTF::AtomicString"* %265
  br label %267

267:                                              ; preds = %260, %263, %212, %215, %235
  %268 = phi %"class.WTF::AtomicString"* [ %18, %235 ], [ %18, %215 ], [ %18, %212 ], [ %266, %263 ], [ %18, %260 ]
  %269 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %268, i64 0, i32 0, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %390, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %390, label %276

276:                                              ; preds = %272
  %277 = load i16, i16* %25, align 8
  %278 = and i16 %277, 992
  %279 = icmp eq i16 %278, 224
  br i1 %279, label %280, label %354

280:                                              ; preds = %276
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %282 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %103, i64 0, i32 2, i32 0, i32 0
  %283 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %282, align 8
  %284 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %283, i64 0, i32 3, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %281, i64 0, i32 3, i32 0, i32 0, i32 0
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %285, %287
  br i1 %288, label %354, label %289

289:                                              ; preds = %280
  %290 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %290, i64 0, i32 3, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %285, %292
  br i1 %293, label %354, label %294

294:                                              ; preds = %289
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %285, %297
  br i1 %298, label %354, label %299

299:                                              ; preds = %294
  %300 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %300, i64 0, i32 3, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %285, %302
  br i1 %303, label %354, label %304

304:                                              ; preds = %299
  %305 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %306 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %305, i64 0, i32 3, i32 0, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %285, %307
  br i1 %308, label %354, label %309

309:                                              ; preds = %304
  %310 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %311 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %310, i64 0, i32 3, i32 0, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %285, %312
  br i1 %313, label %354, label %314

314:                                              ; preds = %309
  %315 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %316 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %315, i64 0, i32 3, i32 0, i32 0, i32 0
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %285, %317
  br i1 %318, label %354, label %319

319:                                              ; preds = %314
  %320 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %320, i64 0, i32 3, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %285, %322
  br i1 %323, label %354, label %324

324:                                              ; preds = %319
  %325 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %326 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %325, i64 0, i32 3, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %285, %327
  br i1 %328, label %354, label %329

329:                                              ; preds = %324
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %331 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %285, %332
  br i1 %333, label %354, label %334

334:                                              ; preds = %329
  %335 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 3, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %285, %337
  br i1 %338, label %354, label %339

339:                                              ; preds = %334
  %340 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %341 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %340, i64 0, i32 3, i32 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %285, %342
  br i1 %343, label %354, label %344

344:                                              ; preds = %339
  %345 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %346 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %345, i64 0, i32 3, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %285, %347
  br i1 %348, label %354, label %349

349:                                              ; preds = %344
  %350 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %351 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %350, i64 0, i32 3, i32 0, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %285, %352
  br i1 %353, label %354, label %390

354:                                              ; preds = %280, %289, %294, %299, %304, %309, %314, %319, %324, %329, %334, %339, %344, %276, %349
  %355 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.557"* nonnull %19, %"class.WTF::AtomicString"* dereferenceable(8) %268, %"class.WTF::AtomicString"* dereferenceable(8) %268) #10
  %356 = extractvalue { %"class.WTF::AtomicString"*, i8 } %355, 1
  %357 = and i8 %356, 1
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %390, label %359

359:                                              ; preds = %354
  %360 = load i32, i32* %20, align 4
  %361 = load i32, i32* %21, align 8
  %362 = icmp eq i32 %360, %361
  br i1 %362, label %389, label %363, !prof !3

363:                                              ; preds = %359
  %364 = load %"class.WTF::String"*, %"class.WTF::String"** %22, align 8
  %365 = zext i32 %360 to i64
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %364, i64 %365, i32 0, i32 0
  store %"class.WTF::StringImpl"* %366, %"class.WTF::StringImpl"** %367, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %368, label %386, label %369

369:                                              ; preds = %363
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %386

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i33
  %378 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %377, i33 1) #10
  %379 = extractvalue { i33, i1 } %378, 1
  %380 = extractvalue { i33, i1 } %378, 0
  %381 = icmp slt i33 %380, 0
  %382 = or i1 %379, %381
  br i1 %382, label %383, label %384, !prof !3

383:                                              ; preds = %374
  call void @llvm.trap() #10
  unreachable

384:                                              ; preds = %374
  %385 = trunc i33 %380 to i32
  store i32 %385, i32* %375, align 4
  br label %386

386:                                              ; preds = %384, %369, %363
  %387 = load i32, i32* %20, align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %20, align 4
  br label %390

389:                                              ; preds = %359
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector.551"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %268) #10
  br label %390

390:                                              ; preds = %207, %267, %205, %389, %386, %272, %349, %354
  %391 = add nuw i32 %90, 1
  %392 = icmp eq i32 %391, %9
  br i1 %392, label %54, label %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14HTMLCollection23NamedPropertyEnumeratorERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"* dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLCollection"* %0 to void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)***
  %5 = load void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)**, void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)*, void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)** %5, i64 12
  %7 = load void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)*, void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.551"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLCollection"* %0, %"class.WTF::Vector.551"* dereferenceable(16) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HTMLCollection17UpdateIdNameCacheEv(%"class.blink::HTMLCollection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::HTMLCollection::NamedItemCache"*, %"class.blink::HTMLCollection::NamedItemCache"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLCollection::NamedItemCache"* %3, null
  br i1 %4, label %5, label %315

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14HTMLCollection14NamedItemCacheEEEPhm(i64 48) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #10
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4
  %13 = tail call i32 @_ZN5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE9NodeCountERKS1_(%"class.blink::CollectionItemsCache"* %12, %"class.blink::HTMLCollection"* dereferenceable(96) %0) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 1
  %17 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0, i32 2
  %18 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 2, i32 0
  %19 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = bitcast i8* %6 to %"class.blink::HeapHashMap"*
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFramesetTagE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %44 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %46 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast i8* %7 to %"class.blink::HeapHashMap"*
  br label %78

56:                                               ; preds = %312, %5
  %57 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %58 = load i16, i16* %57, align 8
  %59 = and i16 %58, 30
  %60 = icmp eq i16 %59, 4
  br i1 %60, label %70, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %63 = bitcast %"class.blink::LiveNodeListBase.base"* %62 to %"class.blink::LiveNodeListBase"*
  %64 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %65 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %65, i64 0, i32 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::Document"*, %"class.blink::Document"** %68, align 8
  tail call void @_ZN5blink8Document31RegisterNodeListWithIdNameCacheEPKNS_16LiveNodeListBaseE(%"class.blink::Document"* %69, %"class.blink::LiveNodeListBase"* %63) #10
  br label %70

70:                                               ; preds = %61, %56
  %71 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3
  %72 = ptrtoint i8* %6 to i64
  %73 = bitcast %"class.blink::Member.8"* %71 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %315, label %76

76:                                               ; preds = %70
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %6) #10
  br label %315

78:                                               ; preds = %312, %15
  %79 = phi i32 [ 0, %15 ], [ %313, %312 ]
  %80 = load i8, i8* %16, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %78
  %83 = load i32, i32* %17, align 8
  %84 = icmp ugt i32 %83, %79
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  %86 = tail call dereferenceable(8) %"class.blink::Member.19"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %79) #10
  %87 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::Element"*, %"class.blink::Element"** %87, align 8
  br label %91

89:                                               ; preds = %78
  %90 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"* %19, %"class.blink::HTMLCollection"* dereferenceable(96) %0, i32 %79) #10
  br label %91

91:                                               ; preds = %82, %85, %89
  %92 = phi %"class.blink::Element"* [ %90, %89 ], [ %88, %85 ], [ null, %82 ]
  %93 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %92, i64 0, i32 3, i32 0, i32 0
  %94 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %93, align 8
  %95 = icmp eq %"class.blink::ElementData"* %94, null
  br i1 %95, label %149, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %149, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = bitcast %"class.blink::ElementData"* %94 to %"class.blink::UniqueElementData"*
  %107 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 1, i32 1
  %108 = bitcast %"class.blink::Member.28"* %107 to %"class.blink::Attribute"**
  %109 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %106, i64 0, i32 2, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  br label %117

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %94, i64 1
  %114 = bitcast %"class.blink::ElementData"* %113 to %"class.blink::Attribute"*
  %115 = lshr i32 %102, 1
  %116 = and i32 %115, 268435455
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi %"class.blink::Attribute"* [ %114, %112 ], [ %109, %105 ]
  %119 = phi i32 [ %116, %112 ], [ %111, %105 ]
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %118, i64 %120
  %122 = icmp eq i32 %119, 0
  br i1 %122, label %149, label %123

123:                                              ; preds = %117
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %127

127:                                              ; preds = %142, %123
  %128 = phi %"class.blink::Attribute"* [ %118, %123 ], [ %143, %142 ]
  %129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %129, align 8
  %131 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %124
  br i1 %131, label %145, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %134, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 4, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %139, %140
  br i1 %141, label %145, label %142

142:                                              ; preds = %137, %132
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 1
  %144 = icmp eq %"class.blink::Attribute"* %143, %121
  br i1 %144, label %149, label %127

145:                                              ; preds = %137, %127
  %146 = icmp eq %"class.blink::Attribute"* %128, null
  %147 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 0, i32 1
  %148 = select i1 %146, %"class.WTF::AtomicString"* %22, %"class.WTF::AtomicString"* %147
  br label %149

149:                                              ; preds = %142, %145, %91, %96, %117
  %150 = phi %"class.WTF::AtomicString"* [ %22, %117 ], [ %22, %96 ], [ %22, %91 ], [ %148, %145 ], [ %22, %142 ]
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink14HTMLCollection14NamedItemCache15AddElementToMapERNS_11HeapHashMapIPN3WTF10StringImplENS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEENS3_10StringHashENS3_10HashTraitsIS5_EENSD_ISB_EEEERKNS3_12AtomicStringEPS8_(%"class.blink::HeapHashMap"* dereferenceable(24) %23, %"class.WTF::AtomicString"* dereferenceable(8) %150, %"class.blink::Element"* %92) #10
  br label %159

159:                                              ; preds = %149, %158, %154
  %160 = icmp eq %"class.blink::Element"* %92, null
  br i1 %160, label %312, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %92, i64 0, i32 0, i32 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, 48
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %312

166:                                              ; preds = %161
  %167 = and i32 %163, 1048576
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %221, label %169

169:                                              ; preds = %166
  %170 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %93, align 8
  %171 = icmp eq %"class.blink::ElementData"* %170, null
  br i1 %171, label %221, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %170, i64 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %184, label %177

177:                                              ; preds = %172
  %178 = bitcast %"class.blink::ElementData"* %170 to %"class.blink::UniqueElementData"*
  %179 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %170, i64 1, i32 1
  %180 = bitcast %"class.blink::Member.28"* %179 to %"class.blink::Attribute"**
  %181 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %178, i64 0, i32 2, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  br label %189

184:                                              ; preds = %172
  %185 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %170, i64 1
  %186 = bitcast %"class.blink::ElementData"* %185 to %"class.blink::Attribute"*
  %187 = lshr i32 %174, 1
  %188 = and i32 %187, 268435455
  br label %189

189:                                              ; preds = %184, %177
  %190 = phi %"class.blink::Attribute"* [ %186, %184 ], [ %181, %177 ]
  %191 = phi i32 [ %188, %184 ], [ %183, %177 ]
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %190, i64 %192
  %194 = icmp eq i32 %191, 0
  br i1 %194, label %221, label %195

195:                                              ; preds = %189
  %196 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %196, i64 0, i32 3, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %196, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %199

199:                                              ; preds = %214, %195
  %200 = phi %"class.blink::Attribute"* [ %190, %195 ], [ %215, %214 ]
  %201 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %201, align 8
  %203 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %202, %196
  br i1 %203, label %217, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %202, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %206, %207
  br i1 %208, label %209, label %214

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %202, i64 0, i32 4, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %211, %212
  br i1 %213, label %217, label %214

214:                                              ; preds = %209, %204
  %215 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %200, i64 1
  %216 = icmp eq %"class.blink::Attribute"* %215, %193
  br i1 %216, label %221, label %199

217:                                              ; preds = %209, %199
  %218 = icmp eq %"class.blink::Attribute"* %200, null
  %219 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %200, i64 0, i32 1
  %220 = select i1 %218, %"class.WTF::AtomicString"* %22, %"class.WTF::AtomicString"* %219
  br label %221

221:                                              ; preds = %214, %217, %166, %169, %189
  %222 = phi %"class.WTF::AtomicString"* [ %22, %189 ], [ %22, %169 ], [ %22, %166 ], [ %220, %217 ], [ %22, %214 ]
  %223 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %222, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %312, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %312, label %230

230:                                              ; preds = %226
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, %224
  br i1 %232, label %312, label %233

233:                                              ; preds = %230
  %234 = load i16, i16* %26, align 8
  %235 = and i16 %234, 992
  %236 = icmp eq i16 %235, 224
  br i1 %236, label %237, label %311

237:                                              ; preds = %233
  %238 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %239 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %92, i64 0, i32 2, i32 0, i32 0
  %240 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %240, i64 0, i32 3, i32 0, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %238, i64 0, i32 3, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %242, %244
  br i1 %245, label %311, label %246

246:                                              ; preds = %237
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %248 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %247, i64 0, i32 3, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %242, %249
  br i1 %250, label %311, label %251

251:                                              ; preds = %246
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 3, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %242, %254
  br i1 %255, label %311, label %256

256:                                              ; preds = %251
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %242, %259
  br i1 %260, label %311, label %261

261:                                              ; preds = %256
  %262 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %262, i64 0, i32 3, i32 0, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %242, %264
  br i1 %265, label %311, label %266

266:                                              ; preds = %261
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %242, %269
  br i1 %270, label %311, label %271

271:                                              ; preds = %266
  %272 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %273 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %272, i64 0, i32 3, i32 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %242, %274
  br i1 %275, label %311, label %276

276:                                              ; preds = %271
  %277 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %278 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %277, i64 0, i32 3, i32 0, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %242, %279
  br i1 %280, label %311, label %281

281:                                              ; preds = %276
  %282 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %282, i64 0, i32 3, i32 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %242, %284
  br i1 %285, label %311, label %286

286:                                              ; preds = %281
  %287 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %288 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %287, i64 0, i32 3, i32 0, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %242, %289
  br i1 %290, label %311, label %291

291:                                              ; preds = %286
  %292 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %293 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %292, i64 0, i32 3, i32 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %242, %294
  br i1 %295, label %311, label %296

296:                                              ; preds = %291
  %297 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %298 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %297, i64 0, i32 3, i32 0, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %242, %299
  br i1 %300, label %311, label %301

301:                                              ; preds = %296
  %302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %302, i64 0, i32 3, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %242, %304
  br i1 %305, label %311, label %306

306:                                              ; preds = %301
  %307 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %308 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %307, i64 0, i32 3, i32 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %242, %309
  br i1 %310, label %311, label %312

311:                                              ; preds = %237, %246, %251, %256, %261, %266, %271, %276, %281, %286, %291, %296, %301, %233, %306
  tail call void @_ZN5blink14HTMLCollection14NamedItemCache15AddElementToMapERNS_11HeapHashMapIPN3WTF10StringImplENS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEENS3_10StringHashENS3_10HashTraitsIS5_EENSD_ISB_EEEERKNS3_12AtomicStringEPS8_(%"class.blink::HeapHashMap"* dereferenceable(24) %55, %"class.WTF::AtomicString"* dereferenceable(8) %222, %"class.blink::Element"* nonnull %92) #10
  br label %312

312:                                              ; preds = %230, %161, %221, %159, %226, %306, %311
  %313 = add nuw i32 %79, 1
  %314 = icmp eq i32 %313, %13
  br i1 %314, label %56, label %78

315:                                              ; preds = %1, %76, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HTMLCollection10NamedItemsERKN3WTF12AtomicStringERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringImpl"*, align 8
  %5 = alloca %"class.WTF::StringImpl"*, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %69, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %69, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::HTMLCollection"* %0 to void (%"class.blink::HTMLCollection"*)***
  %15 = load void (%"class.blink::HTMLCollection"*)**, void (%"class.blink::HTMLCollection"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::HTMLCollection"*)*, void (%"class.blink::HTMLCollection"*)** %15, i64 13
  %17 = load void (%"class.blink::HTMLCollection"*)*, void (%"class.blink::HTMLCollection"*)** %16, align 8
  tail call void %17(%"class.blink::HTMLCollection"* %0) #10
  %18 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::HTMLCollection::NamedItemCache"*, %"class.blink::HTMLCollection::NamedItemCache"** %18, align 8
  %20 = bitcast %"class.WTF::StringImpl"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.WTF::AtomicString"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.WTF::StringImpl"** %4 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %19, i64 0, i32 0, i32 0, i32 0
  %25 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %24, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %4) #10
  %26 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %25, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %27 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 %31
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %26, %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %35, align 8
  %37 = icmp eq %"class.blink::HeapVector"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %36, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* %39, %"class.blink::Member.19"* %41, i32 %43) #10
  br label %44

44:                                               ; preds = %13, %34, %38
  %45 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %19, i64 0, i32 1, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = load i64, i64* %21, align 8
  %48 = bitcast %"class.WTF::StringImpl"** %5 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %45, i64 0, i32 0
  %50 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %49, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %5) #10
  %51 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %50, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  %52 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %45, i64 0, i32 0, i32 0
  %53 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %19, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %56
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %51, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %60, align 8
  %62 = icmp eq %"class.blink::HeapVector"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  %65 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %61, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* %64, %"class.blink::Member.19"* %66, i32 %68) #10
  br label %69

69:                                               ; preds = %44, %3, %63, %59, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14HTMLCollection14NamedItemCacheC2Ev(%"class.blink::HTMLCollection::NamedItemCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLCollection::NamedItemCache"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #10
  %3 = getelementptr inbounds %"class.blink::HTMLCollection::NamedItemCache", %"class.blink::HTMLCollection::NamedItemCache"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HTMLCollection5TraceEPNS_7VisitorE(%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.8"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14HTMLCollection14NamedItemCacheEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::CollectionItemsCache"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)**
  %20 = load void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)*, void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)** %19, align 8
  tail call void %20(%"class.blink::CollectionItemsCache"* %14, %"class.blink::Visitor"* %1) #10
  br label %21

21:                                               ; preds = %13, %18
  %22 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %22, %"class.blink::Visitor"* %1) #10
  %23 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 1
  %24 = bitcast %"class.blink::Member"* %23 to i64*
  %25 = load atomic i64, i64* %24 monotonic, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = inttoptr i64 %25 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %33

33:                                               ; preds = %21, %27
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink14HTMLCollection5TraceEPNS_7VisitorE(%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 -1, i32 4, i32 2
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 2, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14HTMLCollection14NamedItemCacheEE5TraceEPNS_7VisitorEPKv) #10
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 3
  %16 = bitcast %"class.blink::HeapVector"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::HeapVector"* %15 to %"class.blink::CollectionItemsCache"*
  %21 = inttoptr i64 %17 to void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)**
  %22 = load void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)*, void (%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*)** %21, align 8
  tail call void %22(%"class.blink::CollectionItemsCache"* %20, %"class.blink::Visitor"* %1) #10
  br label %23

23:                                               ; preds = %19, %14
  %24 = bitcast %"class.blink::HeapVector"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %24, %"class.blink::Visitor"* %1) #10
  %25 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 1, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #10
  br label %35

35:                                               ; preds = %23, %29
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv(%"class.blink::HTMLCollection"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14HTMLCollection18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN5blink8Document33UnregisterNodeListWithIdNameCacheEPKNS_16LiveNodeListBaseE(%"class.blink::Document"*, %"class.blink::LiveNodeListBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"*, %"class.WTF::StringImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = lshr i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %11) #10
  br label %18

18:                                               ; preds = %16, %6
  %19 = phi i32 [ %17, %16 ], [ %14, %6 ]
  %20 = and i32 %19, %9
  %21 = zext i32 %20 to i64
  %22 = xor i32 %19, -1
  %23 = lshr i32 %19, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %45, %18
  %36 = phi i64 [ 0, %18 ], [ %47, %45 ]
  %37 = phi i64 [ %21, %18 ], [ %49, %45 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  switch i64 %41, label %42 [
    i64 0, label %52
    i64 -1, label %45
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %44 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"* %43) #10
  br i1 %44, label %50, label %45

45:                                               ; preds = %42, %35
  %46 = icmp eq i64 %36, 0
  %47 = select i1 %46, i64 %34, i64 %36
  %48 = add i64 %47, %37
  %49 = and i64 %48, %10
  br label %35

50:                                               ; preds = %42
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %38, null
  br i1 %51, label %52, label %58

52:                                               ; preds = %35, %50, %2
  %53 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %56
  br label %63

58:                                               ; preds = %50
  %59 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %60 = load i32, i32* %7, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %61
  br label %63

63:                                               ; preds = %52, %58
  %64 = phi %"struct.WTF::KeyValuePair"* [ %38, %58 ], [ %57, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %62, %58 ], [ %57, %52 ]
  %66 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %64, 0
  %67 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %66, %"struct.WTF::KeyValuePair"* %65, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %67
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HTMLCollection14NamedItemCache15AddElementToMapERNS_11HeapHashMapIPN3WTF10StringImplENS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEENS3_10StringHashENS3_10HashTraitsIS5_EENSD_ISB_EEEERKNS3_12AtomicStringEPS8_(%"class.blink::HeapHashMap"* dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = alloca %"class.WTF::StringImpl"*, align 8
  %6 = alloca %"class.blink::HeapVector"*, align 8
  store %"class.blink::Element"* %2, %"class.blink::Element"** %4, align 8
  %7 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast %"class.WTF::AtomicString"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.WTF::StringImpl"** %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.blink::HeapVector"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %13 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %17 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %16, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %18

18:                                               ; preds = %15, %3
  %19 = phi i32 [ %13, %3 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %12, i64 0, i32 19, i64 0
  %21 = bitcast %"class.blink::BaseArena"** %20 to %"class.blink::NormalPageArena"**
  %22 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 24
  br i1 %25, label %56, label %26, !prof !3

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 24
  store i8* %29, i8** %27, align 8
  %30 = add i64 %24, -24
  store i64 %30, i64* %23, align 8
  %31 = bitcast i8* %28 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %28, i64 4
  %33 = bitcast i8* %32 to i16*
  %34 = trunc i32 %19 to i16
  %35 = shl i16 %34, 2
  store atomic i16 %35, i16* %33 monotonic, align 2
  %36 = getelementptr inbounds i8, i8* %28, i64 6
  %37 = bitcast i8* %36 to i16*
  store i16 12, i16* %37, align 2
  %38 = ptrtoint i8* %28 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4400
  %42 = bitcast i8* %41 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %38, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %42, i64 0, i32 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 1, %51
  %53 = trunc i32 %52 to i8
  %54 = or i8 %49, %53
  store atomic i8 %54, i8* %48 release, align 1
  %55 = getelementptr inbounds i8, i8* %28, i64 8
  br label %59

56:                                               ; preds = %18
  %57 = zext i32 %19 to i64
  %58 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %22, i64 24, i64 %57) #10
  br label %59

59:                                               ; preds = %26, %56
  %60 = phi i8* [ %55, %26 ], [ %58, %56 ]
  %61 = getelementptr inbounds i8, i8* %60, i64 -4
  %62 = bitcast i8* %61 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  %65 = bitcast %"class.blink::HeapVector"** %6 to i8**
  store i8* %60, i8** %65, align 8
  %66 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %0, i64 0, i32 0, i32 0
  %67 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES2_PS9_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable"* %66, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %5, %"class.blink::HeapVector"** nonnull dereferenceable(8) %6) #10
  %68 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %67, 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %71 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %70, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %70, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %92, label %76, !prof !3

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %77, align 8
  %79 = zext i32 %72 to i64
  %80 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %78, i64 %79
  %81 = bitcast %"class.blink::Element"** %4 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::Member.19"* %80 to i64*
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %76
  %87 = inttoptr i64 %82 to i8*
  %88 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #10
  br label %89

89:                                               ; preds = %86, %76
  %90 = load i32, i32* %71, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %71, align 4
  br label %94

92:                                               ; preds = %59
  %93 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %70, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %93, %"class.blink::Element"** nonnull dereferenceable(8) %4) #10
  br label %94

94:                                               ; preds = %89, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES2_PS9_EENS_18HashTableAddResultISK_SB_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::StringImpl"** dereferenceable(8), %"class.blink::HeapVector"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %16) #10
  br label %23

23:                                               ; preds = %10, %21
  %24 = phi i32 [ %22, %21 ], [ %19, %10 ]
  %25 = and i32 %24, %14
  %26 = zext i32 %25 to i64
  %27 = xor i32 %24, -1
  %28 = lshr i32 %24, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %51, %23
  %41 = phi i64 [ 0, %23 ], [ %54, %51 ]
  %42 = phi i64 [ %26, %23 ], [ %56, %51 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ null, %23 ], [ %52, %51 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %42
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  switch i64 %47, label %48 [
    i64 0, label %57
    i64 -1, label %51
  ]

48:                                               ; preds = %40
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %50 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %46, %"class.WTF::StringImpl"* %49) #10
  br i1 %50, label %129, label %51

51:                                               ; preds = %40, %48
  %52 = phi %"struct.WTF::KeyValuePair"* [ %43, %48 ], [ %44, %40 ]
  %53 = icmp eq i64 %41, 0
  %54 = select i1 %53, i64 %39, i64 %41
  %55 = add i64 %54, %42
  %56 = and i64 %55, %15
  br label %40

57:                                               ; preds = %40
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %43, null
  br i1 %58, label %67, label %59

59:                                               ; preds = %57
  %60 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %60, i64 16) #10
  %61 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, 2147483647
  %64 = and i32 %63, 2147483647
  %65 = and i32 %62, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %61, align 8
  br label %67

67:                                               ; preds = %57, %59
  %68 = phi %"struct.WTF::KeyValuePair"* [ %43, %59 ], [ %44, %57 ]
  %69 = bitcast %"class.WTF::StringImpl"** %1 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %68 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1
  %73 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %2, align 8
  %74 = ptrtoint %"class.blink::HeapVector"* %73 to i64
  %75 = bitcast %"class.blink::Member.15"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %67
  %79 = bitcast %"class.blink::HeapVector"* %73 to i8*
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #10
  br label %81

81:                                               ; preds = %67, %78
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %117, label %84

84:                                               ; preds = %81
  %85 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %86 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %85, i64 0, i32 1
  %87 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %86) #10
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %91, !prof !3

89:                                               ; preds = %84
  %90 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %86, i8* %90) #10
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i8* [ %90, %89 ], [ %87, %84 ]
  %93 = bitcast i8* %92 to %"class.blink::ThreadState"**
  %94 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 9
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %117, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 13
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  %102 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %102, align 8
  %104 = load atomic i64, i64* %75 monotonic, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %103, i64 0, i32 0, i32 0
  %108 = inttoptr i64 %104 to i8*
  %109 = bitcast %"class.blink::MarkingVisitor"* %103 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %110 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %110, i64 5
  %112 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %111, align 8
  tail call void %112(%"class.blink::Visitor"* %107, i8* nonnull %108, i8* %108, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  %113 = load i64, i64* %99, align 8
  br label %114

114:                                              ; preds = %106, %98
  %115 = phi i64 [ %101, %98 ], [ %113, %106 ]
  %116 = add i64 %115, -1
  store i64 %116, i64* %99, align 8
  br label %117

117:                                              ; preds = %81, %91, %114
  %118 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  %124 = shl i32 %123, 1
  %125 = load i32, i32* %12, align 8
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %117
  %128 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %68)
  br label %129

129:                                              ; preds = %48, %117, %127
  %130 = phi i8 [ 1, %117 ], [ 1, %127 ], [ 0, %48 ]
  %131 = phi %"struct.WTF::KeyValuePair"* [ %68, %117 ], [ %128, %127 ], [ %44, %48 ]
  %132 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %131, 0
  %133 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %132, i8 %130, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.15"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.15"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink6MemberINS4_10HeapVectorINS5_INS4_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_NS4_13HeapAllocatorEE8RehashToEPSB_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %37

14:                                               ; preds = %106, %4
  %15 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %109, %106 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #10
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #10
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair"* %15

37:                                               ; preds = %9, %106
  %38 = phi i32 [ %7, %9 ], [ %107, %106 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %108, %106 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %109, %106 ]
  %41 = phi i32 [ 0, %9 ], [ %110, %106 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  switch i64 %46, label %47 [
    i64 -1, label %106
    i64 0, label %106
  ]

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %49, 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i32 [ %53, %52 ], [ %50, %47 ]
  %56 = and i32 %55, %11
  %57 = zext i32 %56 to i64
  %58 = xor i32 %55, -1
  %59 = lshr i32 %55, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %85, %54
  %72 = phi %"struct.WTF::KeyValuePair"* [ null, %54 ], [ %86, %85 ]
  %73 = phi i64 [ 0, %54 ], [ %88, %85 ]
  %74 = phi i64 [ %57, %54 ], [ %90, %85 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  switch i64 %78, label %82 [
    i64 0, label %79
    i64 -1, label %85
  ]

79:                                               ; preds = %71
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  %81 = select i1 %80, %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"* %72
  br label %91

82:                                               ; preds = %71
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %84 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"* %83) #10
  br i1 %84, label %91, label %85

85:                                               ; preds = %82, %71
  %86 = phi %"struct.WTF::KeyValuePair"* [ %72, %82 ], [ %75, %71 ]
  %87 = icmp eq i64 %73, 0
  %88 = select i1 %87, i64 %70, i64 %73
  %89 = add i64 %88, %74
  %90 = and i64 %89, %12
  br label %71

91:                                               ; preds = %82, %79
  %92 = phi %"struct.WTF::KeyValuePair"* [ %81, %79 ], [ %75, %82 ]
  %93 = bitcast %"struct.WTF::KeyValuePair"* %43 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"struct.WTF::KeyValuePair"* %92 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 1
  %98 = bitcast %"class.blink::Member.15"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.15"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 %42
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, %3
  %104 = select i1 %103, %"struct.WTF::KeyValuePair"* %92, %"struct.WTF::KeyValuePair"* %40
  %105 = load i32, i32* %6, align 8
  br label %106

106:                                              ; preds = %37, %37, %91
  %107 = phi i32 [ %38, %37 ], [ %105, %91 ], [ %38, %37 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %39, %37 ], [ %101, %91 ], [ %39, %37 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %40, %37 ], [ %104, %91 ], [ %40, %37 ]
  %110 = add i32 %41, 1
  %111 = icmp eq i32 %110, %107
  br i1 %111, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.4, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIPNS1_10StringImplENS1_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIPNS1_10StringImplENS1_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_7ElementEEELj0EEEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([474 x i8], [474 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIPNS_10StringImplENS_12KeyValuePairIS5_NS1_6MemberINS1_10HeapVectorINS7_INS1_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSH_ISC_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPNS_10StringImplENS_12KeyValuePairIS4_N5blink6MemberINS6_10HeapVectorINS7_INS6_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPNS_10StringImplENS_12KeyValuePairIS4_N5blink6MemberINS6_10HeapVectorINS7_INS6_7ElementEEELj0EEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISC_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.15"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.15"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #10
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.19"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.19"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.19"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %8, align 8
  %10 = icmp eq %"class.blink::Member.19"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %8, align 8
  %26 = icmp eq %"class.blink::Member.19"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.19"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.19"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.19"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink8Document31RegisterNodeListWithIdNameCacheEPKNS_16LiveNodeListBaseE(%"class.blink::Document"*, %"class.blink::LiveNodeListBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CollectionItemsCacheINS_14HTMLCollectionENS_7ElementEE5TraceEPNS_7VisitorE(%"class.blink::CollectionItemsCache"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #10
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::CollectionItemsCache", %"class.blink::CollectionItemsCache"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.blink::Member.19"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %29

29:                                               ; preds = %18, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"*, %"class.blink::HTMLCollection"* dereferenceable(96), i32) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, %2
  br i1 %11, label %12, label %88

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %13, align 8
  %15 = icmp eq %"class.blink::Element"* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %12
  %17 = and i32 %6, 2147483647
  %18 = icmp ult i32 %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::HTMLCollection"* dereferenceable(96) %1, i32 %2)
  br label %88

21:                                               ; preds = %16
  %22 = icmp ugt i32 %17, %2
  br i1 %22, label %23, label %88

23:                                               ; preds = %21
  %24 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #10
  store i32 %17, i32* %4, align 4
  %25 = sub i32 %17, %2
  %26 = icmp ugt i32 %25, %2
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %1, i64 0, i32 2
  %29 = load i8, i8* %28, align 2
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %27, %23
  %33 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection15TraverseToFirstEv(%"class.blink::HTMLCollection"* %1) #10
  %34 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %35 = ptrtoint %"class.blink::Element"* %33 to i64
  %36 = bitcast %"class.blink::Member.19"* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::Element"* %33 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #10
  br label %42

42:                                               ; preds = %39, %32
  %43 = load i32, i32* %5, align 4
  %44 = and i32 %43, -2147483648
  store i32 %44, i32* %5, align 4
  %45 = icmp eq i32 %2, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %42
  %47 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::HTMLCollection"* dereferenceable(96) %1, i32 %2) #10
  br label %64

48:                                               ; preds = %27
  %49 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection24TraverseBackwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"* %1, i32 %2, %"class.blink::Element"* nonnull dereferenceable(104) %14, i32* nonnull dereferenceable(4) %4) #10
  %50 = load i32, i32* %4, align 4
  %51 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %52 = ptrtoint %"class.blink::Element"* %49 to i64
  %53 = bitcast %"class.blink::Member.19"* %51 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.blink::Element"* %49 to i8*
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %48
  %60 = load i32, i32* %5, align 4
  %61 = and i32 %50, 2147483647
  %62 = and i32 %60, -2147483648
  %63 = or i32 %62, %61
  store i32 %63, i32* %5, align 4
  br label %64

64:                                               ; preds = %42, %46, %59
  %65 = phi %"class.blink::Element"* [ %49, %59 ], [ %47, %46 ], [ %33, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #10
  br label %88

66:                                               ; preds = %12
  %67 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection15TraverseToFirstEv(%"class.blink::HTMLCollection"* %1)
  %68 = icmp eq %"class.blink::Element"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  store i32 0, i32* %70, align 8
  %71 = load i32, i32* %5, align 4
  %72 = or i32 %71, -2147483648
  store i32 %72, i32* %5, align 4
  br label %88

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %75 = ptrtoint %"class.blink::Element"* %67 to i64
  %76 = bitcast %"class.blink::Member.19"* %74 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::Element"* %67 to i8*
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %80) #10
  br label %82

82:                                               ; preds = %73, %79
  %83 = load i32, i32* %5, align 4
  %84 = and i32 %83, -2147483648
  store i32 %84, i32* %5, align 4
  %85 = icmp eq i32 %2, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::HTMLCollection"* dereferenceable(96) %1, i32 %2)
  br label %88

88:                                               ; preds = %21, %69, %82, %86, %8, %64, %19
  %89 = phi %"class.blink::Element"* [ %20, %19 ], [ %65, %64 ], [ null, %8 ], [ null, %69 ], [ %87, %86 ], [ %67, %82 ], [ %14, %21 ]
  ret %"class.blink::Element"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.19"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %24, i64 %25
  ret %"class.blink::Member.19"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"*, %"class.blink::HTMLCollection"* dereferenceable(96), i32) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 2147483647
  store i32 %9, i32* %5, align 4
  %10 = icmp slt i32 %8, 0
  br i1 %10, label %11, label %83

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = sub i32 %13, %2
  %15 = sub i32 %2, %9
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %83

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %1, i64 0, i32 2
  %19 = load i8, i8* %18, align 2
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %83

22:                                               ; preds = %17
  %23 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection14TraverseToLastEv(%"class.blink::HTMLCollection"* %1)
  %24 = load i32, i32* %12, align 8
  %25 = add i32 %24, 2147483647
  %26 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %27 = ptrtoint %"class.blink::Element"* %23 to i64
  %28 = bitcast %"class.blink::Member.19"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::Element"* %23 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #10
  %34 = load i32, i32* %12, align 8
  br label %35

35:                                               ; preds = %22, %31
  %36 = phi i32 [ %24, %22 ], [ %34, %31 ]
  %37 = load i32, i32* %7, align 4
  %38 = and i32 %25, 2147483647
  %39 = and i32 %37, -2147483648
  %40 = or i32 %39, %38
  store i32 %40, i32* %7, align 4
  %41 = add i32 %36, -1
  %42 = icmp ugt i32 %41, %2
  br i1 %42, label %43, label %109

43:                                               ; preds = %35
  %44 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #10
  store i32 %38, i32* %4, align 4
  %45 = sub i32 %38, %2
  %46 = icmp ugt i32 %45, %2
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = load i8, i8* %18, align 2
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %47, %43
  %52 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection15TraverseToFirstEv(%"class.blink::HTMLCollection"* %1) #10
  %53 = ptrtoint %"class.blink::Element"* %52 to i64
  store atomic i64 %53, i64* %28 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::Element"* %52 to i8*
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %51
  %60 = load i32, i32* %7, align 4
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %7, align 4
  %62 = icmp eq i32 %2, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %59
  %64 = tail call %"class.blink::Element"* @_ZN5blink20CollectionIndexCacheINS_14HTMLCollectionENS_7ElementEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::HTMLCollection"* dereferenceable(96) %1, i32 %2) #10
  br label %81

65:                                               ; preds = %47
  %66 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::Element"*, %"class.blink::Element"** %66, align 8
  %68 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection24TraverseBackwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"* %1, i32 %2, %"class.blink::Element"* dereferenceable(104) %67, i32* nonnull dereferenceable(4) %4) #10
  %69 = load i32, i32* %4, align 4
  %70 = ptrtoint %"class.blink::Element"* %68 to i64
  store atomic i64 %70, i64* %28 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::Element"* %68 to i8*
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #10
  br label %76

76:                                               ; preds = %73, %65
  %77 = load i32, i32* %7, align 4
  %78 = and i32 %69, 2147483647
  %79 = and i32 %77, -2147483648
  %80 = or i32 %79, %78
  store i32 %80, i32* %7, align 4
  br label %81

81:                                               ; preds = %59, %63, %76
  %82 = phi %"class.blink::Element"* [ %68, %76 ], [ %64, %63 ], [ %52, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #10
  br label %109

83:                                               ; preds = %3, %17, %11
  %84 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.blink::Element"*, %"class.blink::Element"** %84, align 8
  %86 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection23TraverseForwardToOffsetEjRNS_7ElementERj(%"class.blink::HTMLCollection"* %1, i32 %2, %"class.blink::Element"* dereferenceable(104) %85, i32* nonnull dereferenceable(4) %5)
  %87 = icmp eq %"class.blink::Element"* %86, null
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = load i32, i32* %7, align 4
  %90 = load i32, i32* %5, align 4
  %91 = add i32 %90, 1
  %92 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  store i32 %91, i32* %92, align 8
  %93 = or i32 %89, -2147483648
  store i32 %93, i32* %7, align 4
  br label %109

94:                                               ; preds = %83
  %95 = load i32, i32* %5, align 4
  %96 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %97 = ptrtoint %"class.blink::Element"* %86 to i64
  %98 = bitcast %"class.blink::Member.19"* %96 to i64*
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %94
  %102 = bitcast %"class.blink::Element"* %86 to i8*
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %102) #10
  br label %104

104:                                              ; preds = %94, %101
  %105 = load i32, i32* %7, align 4
  %106 = and i32 %95, 2147483647
  %107 = and i32 %105, -2147483648
  %108 = or i32 %107, %106
  store i32 %108, i32* %7, align 4
  br label %109

109:                                              ; preds = %88, %104, %81, %35
  %110 = phi %"class.blink::Element"* [ %82, %81 ], [ %23, %35 ], [ %86, %104 ], [ null, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret %"class.blink::Element"* %110
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNK5blink12_GLOBAL__N_17IsMatchINS_17HTMLTagCollectionEEclERKNS_7ElementE(%"class.blink::(anonymous namespace)::IsMatch"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IsMatch", %"class.blink::(anonymous namespace)::IsMatch"* %0, i64 0, i32 0
  %4 = load %"class.blink::HTMLTagCollection"*, %"class.blink::HTMLTagCollection"** %3, align 8
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTagCollection", %"class.blink::HTMLTagCollection"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, %9
  br i1 %10, label %53, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2
  %17 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %16) #10
  br i1 %15, label %18, label %36

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::HTMLTagCollection", %"class.blink::HTMLTagCollection"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %17) #10
  %22 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %53

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %53

36:                                               ; preds = %11
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %38 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"* %17) #10
  %39 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %53

53:                                               ; preds = %2, %18, %32, %35, %36, %49, %52
  %54 = phi i1 [ true, %2 ], [ %21, %18 ], [ %21, %32 ], [ %21, %35 ], [ %38, %36 ], [ %38, %49 ], [ %38, %52 ]
  ret i1 %54
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14HTMLCollection14ElementMatchesERKNS_7ElementE(%"class.blink::HTMLCollection"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::LiveNodeListBase.base"* %3 to %"class.blink::LiveNodeListBase"*
  %5 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 0, i32 1, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = lshr i16 %6, 5
  %8 = and i16 %7, 31
  %9 = zext i16 %8 to i32
  switch i32 %9, label %92 [
    i32 7, label %450
    i32 8, label %450
    i32 21, label %10
    i32 22, label %29
    i32 23, label %32
    i32 24, label %83
    i32 18, label %86
    i32 20, label %89
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %450, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %15, align 8
  %17 = icmp eq %"class.blink::SpaceSplitString::Data"* %16, null
  br i1 %17, label %450, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 1
  %20 = bitcast %"class.blink::HTMLCollection"* %19 to %"class.blink::SpaceSplitString::Data"**
  %21 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %20, align 8
  %22 = icmp eq %"class.blink::SpaceSplitString::Data"* %21, null
  br i1 %22, label %450, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %21, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %450, label %27

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_ZN5blink16SpaceSplitString4Data11ContainsAllERS1_(%"class.blink::SpaceSplitString::Data"* nonnull %16, %"class.blink::SpaceSplitString::Data"* nonnull dereferenceable(64) %21) #10
  br label %450

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::TagCollection"*
  %31 = tail call zeroext i1 @_ZNK5blink13TagCollection14ElementMatchesERKNS_7ElementE(%"class.blink::TagCollection"* %30, %"class.blink::Element"* dereferenceable(104) %1) #10
  br label %450

32:                                               ; preds = %2
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 1
  %35 = bitcast %"class.blink::HTMLCollection"* %34 to %"class.WTF::StringImpl"**
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %450, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2
  %46 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %45) #10
  br i1 %44, label %47, label %66

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::HTMLCollection", %"class.blink::HTMLCollection"* %0, i64 1, i32 0, i32 1
  %49 = bitcast %"class.blink::TraceWrapperV8Reference"* %48 to %"class.WTF::StringImpl"**
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"* %46) #10
  %52 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %52, label %450, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %450

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %450

66:                                               ; preds = %40
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %68 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"* %46) #10
  %69 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %69, label %450, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %450

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %450

83:                                               ; preds = %2
  %84 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::TagCollectionNS"*
  %85 = tail call zeroext i1 @_ZNK5blink15TagCollectionNS14ElementMatchesERKNS_7ElementE(%"class.blink::TagCollectionNS"* %84, %"class.blink::Element"* dereferenceable(104) %1) #10
  br label %450

86:                                               ; preds = %2
  %87 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::WindowNameCollection"*
  %88 = tail call zeroext i1 @_ZNK5blink20WindowNameCollection14ElementMatchesERKNS_7ElementE(%"class.blink::WindowNameCollection"* %87, %"class.blink::Element"* dereferenceable(104) %1) #10
  br label %450

89:                                               ; preds = %2
  %90 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::DocumentAllNameCollection"*
  %91 = tail call zeroext i1 @_ZNK5blink25DocumentAllNameCollection14ElementMatchesERKNS_7ElementE(%"class.blink::DocumentAllNameCollection"* %90, %"class.blink::Element"* dereferenceable(104) %1) #10
  br label %450

92:                                               ; preds = %2
  %93 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 48
  %96 = icmp ne i32 %95, 0
  %97 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLElement"*
  %98 = icmp eq %"class.blink::Element"* %1, null
  %99 = or i1 %98, %96
  br i1 %99, label %450, label %100

100:                                              ; preds = %92
  switch i32 %9, label %450 [
    i32 0, label %101
    i32 6, label %112
    i32 3, label %123
    i32 19, label %134
    i32 20, label %137
    i32 9, label %140
    i32 12, label %151
    i32 10, label %169
    i32 13, label %180
    i32 14, label %221
    i32 15, label %237
    i32 16, label %250
    i32 1, label %261
    i32 2, label %277
    i32 4, label %288
    i32 5, label %362
    i32 17, label %429
  ]

101:                                              ; preds = %100
  %102 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %108, %110
  br label %450

112:                                              ; preds = %100
  %113 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %114 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %119, %121
  br label %450

123:                                              ; preds = %100
  %124 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %125 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %130, %132
  br label %450

134:                                              ; preds = %100
  %135 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::DocumentNameCollection"*
  %136 = tail call zeroext i1 @_ZNK5blink22DocumentNameCollection14ElementMatchesERKNS_11HTMLElementE(%"class.blink::DocumentNameCollection"* %135, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %97) #10
  br label %450

137:                                              ; preds = %100
  %138 = bitcast %"class.blink::HTMLCollection"* %0 to %"class.blink::DocumentAllNameCollection"*
  %139 = tail call zeroext i1 @_ZNK5blink25DocumentAllNameCollection14ElementMatchesERKNS_7ElementE(%"class.blink::DocumentAllNameCollection"* %138, %"class.blink::Element"* nonnull dereferenceable(104) %1) #10
  br label %450

140:                                              ; preds = %100
  %141 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %142 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, %149
  br label %450

151:                                              ; preds = %100
  %152 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %153 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %158, %160
  br i1 %161, label %450, label %162

162:                                              ; preds = %151
  %163 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %164 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %165, i64 0, i32 3, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %158, %167
  br label %450

169:                                              ; preds = %100
  %170 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %171 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 3, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %172, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %176, %178
  br label %450

180:                                              ; preds = %100
  %181 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %182 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %183 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %181, i64 1, i32 2
  %186 = bitcast %"class.blink::Member.0"* %185 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %187, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %184, i64 0, i32 3, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %189, %191
  br i1 %192, label %193, label %450

193:                                              ; preds = %180
  %194 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %181) #10
  %195 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %194, i64 0, i32 0
  %196 = icmp eq %"class.blink::ContainerNode"* %194, null
  br i1 %196, label %450, label %197

197:                                              ; preds = %193
  %198 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %4) #10
  %199 = icmp eq %"class.blink::ContainerNode"* %194, %198
  br i1 %199, label %450, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %194, i64 0, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = and i32 %202, 48
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %450

205:                                              ; preds = %200
  %206 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %207 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 1, i32 2
  %210 = bitcast %"class.blink::Member.0"* %209 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %213, %215
  br i1 %216, label %217, label %450

217:                                              ; preds = %205
  %218 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %195) #10
  %219 = tail call dereferenceable(80) %"class.blink::ContainerNode"* @_ZNK5blink16LiveNodeListBase8RootNodeEv(%"class.blink::LiveNodeListBase"* %4) #10
  %220 = icmp eq %"class.blink::ContainerNode"* %218, %219
  br label %450

221:                                              ; preds = %100
  %222 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %223 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %224 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 1, i32 2
  %227 = bitcast %"class.blink::Member.0"* %226 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %228, i64 0, i32 3, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %230, %232
  br i1 %233, label %234, label %450

234:                                              ; preds = %221
  %235 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptionElement"*
  %236 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %235) #10
  br label %450

237:                                              ; preds = %100
  %238 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %239 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %240 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %239, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 1, i32 2
  %243 = bitcast %"class.blink::Member.0"* %242 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %244 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %244, i64 0, i32 3, i32 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %241, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %246, %248
  br label %450

250:                                              ; preds = %100
  %251 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %252 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %253, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %257, %259
  br label %450

261:                                              ; preds = %100
  %262 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %263 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %264 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %263, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %262, i64 1, i32 2
  %267 = bitcast %"class.blink::Member.0"* %266 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %268 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %268, i64 0, i32 3, i32 0, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %265, i64 0, i32 3, i32 0, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %270, %272
  br i1 %273, label %274, label %450

274:                                              ; preds = %261
  %275 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLObjectElement"*
  %276 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement18ContainsJavaAppletEv(%"class.blink::HTMLObjectElement"* nonnull %275) #10
  br label %450

277:                                              ; preds = %100
  %278 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %279 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %278, i64 0, i32 0, i32 0, i32 0
  %280 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %279, align 8
  %281 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %282 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %282, i64 0, i32 3, i32 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %280, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %284, %286
  br label %450

288:                                              ; preds = %100
  %289 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %290 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %289, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %293 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %293, i64 0, i32 3, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %291, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %295, %297
  br i1 %298, label %306, label %299

299:                                              ; preds = %288
  %300 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %301 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %300, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %302, i64 0, i32 3, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %295, %304
  br i1 %305, label %306, label %450

306:                                              ; preds = %299, %288
  %307 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %308 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %309 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %308, align 8
  %310 = icmp eq %"class.blink::ElementData"* %309, null
  br i1 %310, label %450, label %311

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %309, i64 0, i32 0, i32 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %323, label %316

316:                                              ; preds = %311
  %317 = bitcast %"class.blink::ElementData"* %309 to %"class.blink::UniqueElementData"*
  %318 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %309, i64 1, i32 1
  %319 = bitcast %"class.blink::Member.28"* %318 to %"class.blink::Attribute"**
  %320 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %317, i64 0, i32 2, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  br label %328

323:                                              ; preds = %311
  %324 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %309, i64 1
  %325 = bitcast %"class.blink::ElementData"* %324 to %"class.blink::Attribute"*
  %326 = lshr i32 %313, 1
  %327 = and i32 %326, 268435455
  br label %328

328:                                              ; preds = %323, %316
  %329 = phi %"class.blink::Attribute"* [ %325, %323 ], [ %320, %316 ]
  %330 = phi i32 [ %327, %323 ], [ %322, %316 ]
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %329, i64 %331
  %333 = icmp eq i32 %330, 0
  br i1 %333, label %359, label %334

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %307, i64 0, i32 0, i32 0
  %336 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %335, align 8
  %337 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %336, i64 0, i32 3, i32 0, i32 0, i32 0
  %338 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %336, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %339

339:                                              ; preds = %355, %334
  %340 = phi %"class.blink::Attribute"* [ %329, %334 ], [ %356, %355 ]
  %341 = phi i32 [ 0, %334 ], [ %357, %355 ]
  %342 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %340, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %342, align 8
  %344 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %343, %336
  br i1 %344, label %359, label %345

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %343, i64 0, i32 3, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %347, %348
  br i1 %349, label %350, label %355

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %343, i64 0, i32 4, i32 0, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %352, %353
  br i1 %354, label %359, label %355

355:                                              ; preds = %350, %345
  %356 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %340, i64 1
  %357 = add i32 %341, 1
  %358 = icmp eq %"class.blink::Attribute"* %356, %332
  br i1 %358, label %359, label %339

359:                                              ; preds = %355, %350, %339, %328
  %360 = phi i32 [ -1, %328 ], [ -1, %355 ], [ %341, %350 ], [ %341, %339 ]
  %361 = icmp ne i32 %360, -1
  br label %450

362:                                              ; preds = %100
  %363 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %364 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %363, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 2, i32 0, i32 0
  %367 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %366, align 8
  %368 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %367, i64 0, i32 3, i32 0, i32 0, i32 0
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  %370 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %365, i64 0, i32 3, i32 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %369, %371
  br i1 %372, label %373, label %450

373:                                              ; preds = %362
  %374 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %375 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %376 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %375, align 8
  %377 = icmp eq %"class.blink::ElementData"* %376, null
  br i1 %377, label %450, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %376, i64 0, i32 0, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %390, label %383

383:                                              ; preds = %378
  %384 = bitcast %"class.blink::ElementData"* %376 to %"class.blink::UniqueElementData"*
  %385 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %376, i64 1, i32 1
  %386 = bitcast %"class.blink::Member.28"* %385 to %"class.blink::Attribute"**
  %387 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %386, align 8
  %388 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %384, i64 0, i32 2, i32 0, i32 0, i32 2
  %389 = load i32, i32* %388, align 4
  br label %395

390:                                              ; preds = %378
  %391 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %376, i64 1
  %392 = bitcast %"class.blink::ElementData"* %391 to %"class.blink::Attribute"*
  %393 = lshr i32 %380, 1
  %394 = and i32 %393, 268435455
  br label %395

395:                                              ; preds = %390, %383
  %396 = phi %"class.blink::Attribute"* [ %392, %390 ], [ %387, %383 ]
  %397 = phi i32 [ %394, %390 ], [ %389, %383 ]
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %396, i64 %398
  %400 = icmp eq i32 %397, 0
  br i1 %400, label %426, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %374, i64 0, i32 0, i32 0
  %403 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %402, align 8
  %404 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %403, i64 0, i32 3, i32 0, i32 0, i32 0
  %405 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %403, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %406

406:                                              ; preds = %422, %401
  %407 = phi %"class.blink::Attribute"* [ %396, %401 ], [ %423, %422 ]
  %408 = phi i32 [ 0, %401 ], [ %424, %422 ]
  %409 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %407, i64 0, i32 0, i32 0, i32 0
  %410 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %409, align 8
  %411 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %410, %403
  br i1 %411, label %426, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %410, i64 0, i32 3, i32 0, i32 0, i32 0
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %414, %415
  br i1 %416, label %417, label %422

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %410, i64 0, i32 4, i32 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %421 = icmp eq %"class.WTF::StringImpl"* %419, %420
  br i1 %421, label %426, label %422

422:                                              ; preds = %417, %412
  %423 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %407, i64 1
  %424 = add i32 %408, 1
  %425 = icmp eq %"class.blink::Attribute"* %423, %399
  br i1 %425, label %426, label %406

426:                                              ; preds = %422, %417, %406, %395
  %427 = phi i32 [ -1, %395 ], [ -1, %422 ], [ %408, %417 ], [ %408, %406 ]
  %428 = icmp ne i32 %427, -1
  br label %450

429:                                              ; preds = %100
  %430 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %431 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %432 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %431, i64 0, i32 0, i32 0, i32 0
  %433 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %432, align 8
  %434 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %430, i64 1, i32 2
  %435 = bitcast %"class.blink::Member.0"* %434 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %436 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %435, align 8
  %437 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %436, i64 0, i32 3, i32 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %433, i64 0, i32 3, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %438, %440
  br i1 %441, label %450, label %442

442:                                              ; preds = %429
  %443 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Element"*)***
  %444 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %443, align 8
  %445 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %444, i64 124
  %446 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %445, align 8
  %447 = tail call zeroext i1 %446(%"class.blink::Element"* nonnull %1) #10
  br i1 %447, label %450, label %448

448:                                              ; preds = %442
  %449 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* nonnull %97) #10
  br label %450

450:                                              ; preds = %448, %442, %429, %426, %373, %362, %359, %306, %299, %277, %274, %261, %250, %237, %234, %221, %217, %205, %200, %197, %193, %180, %169, %162, %151, %140, %137, %134, %123, %112, %101, %100, %82, %79, %66, %65, %62, %47, %32, %27, %23, %18, %14, %10, %92, %2, %2, %89, %86, %83, %29
  %451 = phi i1 [ %91, %89 ], [ %88, %86 ], [ %85, %83 ], [ %31, %29 ], [ true, %2 ], [ true, %2 ], [ false, %92 ], [ false, %14 ], [ false, %23 ], [ %28, %27 ], [ false, %10 ], [ false, %18 ], [ true, %32 ], [ %51, %47 ], [ %51, %62 ], [ %51, %65 ], [ %68, %66 ], [ %68, %79 ], [ %68, %82 ], [ %287, %277 ], [ %260, %250 ], [ %179, %169 ], [ %150, %140 ], [ %139, %137 ], [ %136, %134 ], [ %133, %123 ], [ %122, %112 ], [ %111, %101 ], [ true, %151 ], [ %168, %162 ], [ %236, %234 ], [ %276, %274 ], [ false, %299 ], [ false, %362 ], [ true, %442 ], [ true, %429 ], [ %449, %448 ], [ false, %100 ], [ false, %180 ], [ false, %193 ], [ true, %197 ], [ false, %205 ], [ %220, %217 ], [ false, %200 ], [ %249, %237 ], [ false, %306 ], [ %361, %359 ], [ false, %373 ], [ %428, %426 ], [ false, %221 ], [ false, %261 ]
  ret i1 %451
}

declare zeroext i1 @_ZNK5blink13TagCollection14ElementMatchesERKNS_7ElementE(%"class.blink::TagCollection"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15TagCollectionNS14ElementMatchesERKNS_7ElementE(%"class.blink::TagCollectionNS"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20WindowNameCollection14ElementMatchesERKNS_7ElementE(%"class.blink::WindowNameCollection"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink25DocumentAllNameCollection14ElementMatchesERKNS_7ElementE(%"class.blink::DocumentAllNameCollection"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22DocumentNameCollection14ElementMatchesERKNS_11HTMLElementE(%"class.blink::DocumentNameCollection"*, %"class.blink::HTMLElement"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLObjectElement18ContainsJavaAppletEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal10LastWithinERKNS_13ContainerNodeE(%"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.19"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %24, i64 %25
  ret %"class.blink::Member.19"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.557"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.557"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.557"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.557"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.557"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #10
  ret %"class.WTF::AtomicString"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.557"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.557"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.557"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.557", %"class.WTF::HashTable.557"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector.551"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.551", %"class.WTF::Vector.551"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.551"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.551"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.551"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #10
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %58
  tail call void @llvm.trap() #10
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %45, %53, %68
  %71 = load i32, i32* %3, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14HTMLCollection14NamedItemCacheEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HTMLCollection14NamedItemCacheEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HTMLCollection14NamedItemCacheEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14HTMLCollection14NamedItemCacheEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #10
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds i8, i8* %1, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = bitcast i8* %18 to i8**
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %0, i8** %21) #10
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %0, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPNS2_10StringImplENS2_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_7ElementEEELj0EEEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISC_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %32

32:                                               ; preds = %17, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14HTMLCollection14NamedItemCacheEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %14, align 8
  %16 = icmp ugt %"class.blink::Member.19"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member.19"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %28) #10
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member.19"* %1 to i64
  %31 = ptrtoint %"class.blink::Member.19"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %40) #10
  %41 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member.19"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member.19"*, %"class.blink::Member.19"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member.19"* %65, null
  %67 = icmp ne %"class.blink::Member.19"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !4

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member.19"* %65 to i8*
  %72 = bitcast %"class.blink::Member.19"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #10
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member.19"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member.19"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member.19", %"class.blink::Member.19"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
