; ModuleID = '../../content/browser/renderer_host/input/synthetic_gesture.cc'
source_filename = "../../content/browser/renderer_host/input/synthetic_gesture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SyntheticGesture" = type { i32 (...)** }
%"struct.content::SyntheticGestureParams" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.content::SyntheticSmoothScrollGesture" = type { %"class.content::SyntheticGesture", %"class.std::__1::unique_ptr.2", %"struct.content::SyntheticSmoothScrollGestureParams" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.content::SyntheticSmoothMoveGesture"* }
%"class.content::SyntheticSmoothMoveGesture" = type <{ %"class.content::SyntheticGesture", %"class.content::SyntheticSmoothMoveGestureParams", %"class.std::__1::unique_ptr.8", %"class.gfx::Vector2dF", %"class.gfx::PointF", i32, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.content::SyntheticSmoothMoveGestureParams" = type <{ i32, %"class.gfx::PointF", [4 x i8], %"class.std::__1::vector", i32, i32, i32, i8, i8, i8, i8, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.gfx::Vector2dF"* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.content::SyntheticPointerDriver"* }
%"class.content::SyntheticPointerDriver" = type { i32 (...)** }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.content::SyntheticSmoothScrollGestureParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", %"class.std::__1::vector", i8, float, float, float, i8, i32 }
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.content::SyntheticSmoothDragGesture" = type { %"class.content::SyntheticGesture", %"class.std::__1::unique_ptr.2", %"struct.content::SyntheticSmoothDragGestureParams" }
%"struct.content::SyntheticSmoothDragGestureParams" = type <{ %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", [4 x i8], %"class.std::__1::vector", float, [4 x i8] }>
%"class.content::SyntheticPinchGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", %"class.std::__1::unique_ptr" }
%"struct.content::SyntheticPinchGestureParams" = type { %"struct.content::SyntheticGestureParams.base", float, %"class.gfx::PointF", float, [4 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::SyntheticGesture"* }
%"class.content::SyntheticTapGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticTapGestureParams", %"class.std::__1::unique_ptr.8", %"class.base::TimeTicks", i32, i32 }
%"struct.content::SyntheticTapGestureParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", float }
%"class.content::SyntheticPointerAction" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticPointerActionListParams", %"class.std::__1::unique_ptr.8", %"class.content::SyntheticPointerDriver"*, i32, i32, i64 }
%"struct.content::SyntheticPointerActionListParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::vector.19"*, %"class.std::__1::vector.19"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::vector.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::vector.19"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.content::SyntheticGestureTarget" = type { i32 (...)** }

@_ZTVN7content16SyntheticGestureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SyntheticGesture"*)* @_ZN7content16SyntheticGestureD2Ev to i8*), i8* bitcast (void (%"class.content::SyntheticGesture"*)* @_ZN7content16SyntheticGestureD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.content::SyntheticGesture"*, %"class.base::OnceCallback"*, %"class.content::SyntheticGestureTarget"*)* @_ZNK7content16SyntheticGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (i1 (%"class.content::SyntheticGesture"*)* @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv to i8*)] }, align 8

@_ZN7content16SyntheticGestureD1Ev = hidden unnamed_addr alias void (%"class.content::SyntheticGesture"*), void (%"class.content::SyntheticGesture"*)* @_ZN7content16SyntheticGestureD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticGesture", %"class.content::SyntheticGesture"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content16SyntheticGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content16SyntheticGestureD0Ev(%"class.content::SyntheticGesture"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SyntheticGesture"* @_ZN7content16SyntheticGesture6CreateERKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"struct.content::SyntheticGestureParams"* %0 to i32 (%"struct.content::SyntheticGestureParams"*)***
  %3 = load i32 (%"struct.content::SyntheticGestureParams"*)**, i32 (%"struct.content::SyntheticGestureParams"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"struct.content::SyntheticGestureParams"*)*, i32 (%"struct.content::SyntheticGestureParams"*)** %3, i64 2
  %5 = load i32 (%"struct.content::SyntheticGestureParams"*)*, i32 (%"struct.content::SyntheticGestureParams"*)** %4, align 8
  %6 = tail call i32 %5(%"struct.content::SyntheticGestureParams"* %0) #10
  switch i32 %6, label %32 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %27
  ]

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 88) #11
  %9 = bitcast i8* %8 to %"class.content::SyntheticSmoothScrollGesture"*
  %10 = tail call %"struct.content::SyntheticSmoothScrollGestureParams"* @_ZN7content34SyntheticSmoothScrollGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* %0) #10
  tail call void @_ZN7content28SyntheticSmoothScrollGestureC1ERKNS_34SyntheticSmoothScrollGestureParamsE(%"class.content::SyntheticSmoothScrollGesture"* nonnull %9, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72) %10) #10
  %11 = ptrtoint i8* %8 to i64
  br label %32

12:                                               ; preds = %1
  %13 = tail call i8* @_Znwm(i64 72) #11
  %14 = bitcast i8* %13 to %"class.content::SyntheticSmoothDragGesture"*
  %15 = tail call %"struct.content::SyntheticSmoothDragGestureParams"* @_ZN7content32SyntheticSmoothDragGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* %0) #10
  tail call void @_ZN7content26SyntheticSmoothDragGestureC1ERKNS_32SyntheticSmoothDragGestureParamsE(%"class.content::SyntheticSmoothDragGesture"* nonnull %14, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56) %15) #10
  %16 = ptrtoint i8* %13 to i64
  br label %32

17:                                               ; preds = %1
  %18 = tail call i8* @_Znwm(i64 48) #11
  %19 = bitcast i8* %18 to %"class.content::SyntheticPinchGesture"*
  %20 = tail call %"struct.content::SyntheticPinchGestureParams"* @_ZN7content27SyntheticPinchGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* %0) #10
  tail call void @_ZN7content21SyntheticPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticPinchGesture"* nonnull %19, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %20) #10
  %21 = ptrtoint i8* %18 to i64
  br label %32

22:                                               ; preds = %1
  %23 = tail call i8* @_Znwm(i64 56) #11
  %24 = bitcast i8* %23 to %"class.content::SyntheticTapGesture"*
  %25 = tail call %"struct.content::SyntheticTapGestureParams"* @_ZN7content25SyntheticTapGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* %0) #10
  tail call void @_ZN7content19SyntheticTapGestureC1ERKNS_25SyntheticTapGestureParamsE(%"class.content::SyntheticTapGesture"* nonnull %24, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24) %25) #10
  %26 = ptrtoint i8* %23 to i64
  br label %32

27:                                               ; preds = %1
  %28 = tail call i8* @_Znwm(i64 80) #11
  %29 = bitcast i8* %28 to %"class.content::SyntheticPointerAction"*
  %30 = tail call %"struct.content::SyntheticPointerActionListParams"* @_ZN7content32SyntheticPointerActionListParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"* %0) #10
  tail call void @_ZN7content22SyntheticPointerActionC1ERKNS_32SyntheticPointerActionListParamsE(%"class.content::SyntheticPointerAction"* nonnull %29, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40) %30) #10
  %31 = ptrtoint i8* %28 to i64
  br label %32

32:                                               ; preds = %1, %27, %22, %17, %12, %7
  %33 = phi i64 [ %31, %27 ], [ %26, %22 ], [ %21, %17 ], [ %16, %12 ], [ %11, %7 ], [ 0, %1 ]
  %34 = inttoptr i64 %33 to %"class.content::SyntheticGesture"*
  ret %"class.content::SyntheticGesture"* %34
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv(%"class.content::SyntheticGesture"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content16SyntheticGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticGesture"* nocapture readnone, %"class.base::OnceCallback"* nocapture, %"class.content::SyntheticGestureTarget"* nocapture readnone) unnamed_addr #4 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare %"struct.content::SyntheticSmoothScrollGestureParams"* @_ZN7content34SyntheticSmoothScrollGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"*) local_unnamed_addr #7

declare void @_ZN7content28SyntheticSmoothScrollGestureC1ERKNS_34SyntheticSmoothScrollGestureParamsE(%"class.content::SyntheticSmoothScrollGesture"*, %"struct.content::SyntheticSmoothScrollGestureParams"* dereferenceable(72)) unnamed_addr #7

declare %"struct.content::SyntheticSmoothDragGestureParams"* @_ZN7content32SyntheticSmoothDragGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"*) local_unnamed_addr #7

declare void @_ZN7content26SyntheticSmoothDragGestureC1ERKNS_32SyntheticSmoothDragGestureParamsE(%"class.content::SyntheticSmoothDragGesture"*, %"struct.content::SyntheticSmoothDragGestureParams"* dereferenceable(56)) unnamed_addr #7

declare %"struct.content::SyntheticPinchGestureParams"* @_ZN7content27SyntheticPinchGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"*) local_unnamed_addr #7

declare void @_ZN7content21SyntheticPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #7

declare %"struct.content::SyntheticTapGestureParams"* @_ZN7content25SyntheticTapGestureParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"*) local_unnamed_addr #7

declare void @_ZN7content19SyntheticTapGestureC1ERKNS_25SyntheticTapGestureParamsE(%"class.content::SyntheticTapGesture"*, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24)) unnamed_addr #7

declare %"struct.content::SyntheticPointerActionListParams"* @_ZN7content32SyntheticPointerActionListParams4CastEPKNS_22SyntheticGestureParamsE(%"struct.content::SyntheticGestureParams"*) local_unnamed_addr #7

declare void @_ZN7content22SyntheticPointerActionC1ERKNS_32SyntheticPointerActionListParamsE(%"class.content::SyntheticPointerAction"*, %"struct.content::SyntheticPointerActionListParams"* dereferenceable(40)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
