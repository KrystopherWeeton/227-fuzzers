; ModuleID = '../../third_party/skia/src/core/SkDocument.cpp'
source_filename = "../../third_party/skia/src/core/SkDocument.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDocument = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkWStream = type { i32 (...)** }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTV10SkDocument = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkDocument*)* @_ZN10SkDocumentD2Ev to i8*), i8* bitcast (void (%class.SkDocument*)* @_ZN10SkDocumentD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN10SkDocumentD1Ev = hidden unnamed_addr alias void (%class.SkDocument*), void (%class.SkDocument*)* @_ZN10SkDocumentD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkDocumentC2EP9SkWStream(%class.SkDocument* nocapture, %class.SkWStream*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV10SkDocument, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 2
  store %class.SkWStream* %1, %class.SkWStream** %5, align 8
  %6 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkDocumentD2Ev(%class.SkDocument*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV10SkDocument, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  %4 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*)***
  br label %5

5:                                                ; preds = %18, %1
  %6 = load i32, i32* %3, align 8
  switch i32 %6, label %18 [
    i32 0, label %7
    i32 1, label %14
    i32 2, label %19
  ]

7:                                                ; preds = %5
  store i32 2, i32* %3, align 8
  %8 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 2
  %9 = load %class.SkWStream*, %class.SkWStream** %8, align 8
  %10 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*, %class.SkWStream*)***
  %11 = load void (%class.SkDocument*, %class.SkWStream*)**, void (%class.SkDocument*, %class.SkWStream*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkDocument*, %class.SkWStream*)*, void (%class.SkDocument*, %class.SkWStream*)** %11, i64 5
  %13 = load void (%class.SkDocument*, %class.SkWStream*)*, void (%class.SkDocument*, %class.SkWStream*)** %12, align 8
  tail call void %13(%class.SkDocument* %0, %class.SkWStream* %9) #6
  store %class.SkWStream* null, %class.SkWStream** %8, align 8
  br label %19

14:                                               ; preds = %5
  store i32 0, i32* %3, align 8
  %15 = load void (%class.SkDocument*)**, void (%class.SkDocument*)*** %4, align 8
  %16 = getelementptr inbounds void (%class.SkDocument*)*, void (%class.SkDocument*)** %15, i64 4
  %17 = load void (%class.SkDocument*)*, void (%class.SkDocument*)** %16, align 8
  tail call void %17(%class.SkDocument* %0) #6
  br label %18

18:                                               ; preds = %14, %5
  br label %5

19:                                               ; preds = %5, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkDocument5closeEv(%class.SkDocument*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  %3 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*)***
  br label %4

4:                                                ; preds = %6, %1
  %5 = load i32, i32* %2, align 8
  switch i32 %5, label %6 [
    i32 0, label %7
    i32 1, label %14
    i32 2, label %18
  ]

6:                                                ; preds = %4, %14
  br label %4

7:                                                ; preds = %4
  store i32 2, i32* %2, align 8
  %8 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 2
  %9 = load %class.SkWStream*, %class.SkWStream** %8, align 8
  %10 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*, %class.SkWStream*)***
  %11 = load void (%class.SkDocument*, %class.SkWStream*)**, void (%class.SkDocument*, %class.SkWStream*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkDocument*, %class.SkWStream*)*, void (%class.SkDocument*, %class.SkWStream*)** %11, i64 5
  %13 = load void (%class.SkDocument*, %class.SkWStream*)*, void (%class.SkDocument*, %class.SkWStream*)** %12, align 8
  tail call void %13(%class.SkDocument* %0, %class.SkWStream* %9) #6
  store %class.SkWStream* null, %class.SkWStream** %8, align 8
  br label %18

14:                                               ; preds = %4
  store i32 0, i32* %2, align 8
  %15 = load void (%class.SkDocument*)**, void (%class.SkDocument*)*** %3, align 8
  %16 = getelementptr inbounds void (%class.SkDocument*)*, void (%class.SkDocument*)** %15, i64 4
  %17 = load void (%class.SkDocument*)*, void (%class.SkDocument*)** %16, align 8
  tail call void %17(%class.SkDocument* %0) #6
  br label %6

18:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10SkDocumentD0Ev(%class.SkDocument* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN10SkDocument9beginPageEffPK6SkRect(%class.SkDocument*, float, float, %struct.SkRect* readonly) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.SkRect, align 4
  %6 = alloca %struct.SkRect, align 4
  %7 = fcmp ole float %1, 0.000000e+00
  %8 = fcmp ole float %2, 0.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %42, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %18 [
    i32 2, label %42
    i32 1, label %13
  ]

13:                                               ; preds = %10
  store i32 0, i32* %11, align 8
  %14 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*)***
  %15 = load void (%class.SkDocument*)**, void (%class.SkDocument*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkDocument*)*, void (%class.SkDocument*)** %15, i64 4
  %17 = load void (%class.SkDocument*)*, void (%class.SkDocument*)** %16, align 8
  tail call void %17(%class.SkDocument* %0) #6
  br label %18

18:                                               ; preds = %10, %13
  store i32 1, i32* %11, align 8
  %19 = bitcast %class.SkDocument* %0 to %class.SkCanvas* (%class.SkDocument*, float, float)***
  %20 = load %class.SkCanvas* (%class.SkDocument*, float, float)**, %class.SkCanvas* (%class.SkDocument*, float, float)*** %19, align 8
  %21 = getelementptr inbounds %class.SkCanvas* (%class.SkDocument*, float, float)*, %class.SkCanvas* (%class.SkDocument*, float, float)** %20, i64 3
  %22 = load %class.SkCanvas* (%class.SkDocument*, float, float)*, %class.SkCanvas* (%class.SkDocument*, float, float)** %21, align 8
  %23 = tail call %class.SkCanvas* %22(%class.SkDocument* %0, float %1, float %2) #6
  %24 = icmp ne %struct.SkRect* %3, null
  %25 = icmp ne %class.SkCanvas* %23, null
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %42

27:                                               ; preds = %18
  %28 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %29, i64 16, i1 false) #6
  %30 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  store float %1, float* %33, align 4
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  store float %2, float* %34, align 4
  %35 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  br i1 %35, label %36, label %41

36:                                               ; preds = %27
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* nonnull %23, %struct.SkRect* nonnull dereferenceable(16) %5, i32 1, i1 zeroext false) #6
  %39 = load float, float* %38, align 4
  %40 = load float, float* %37, align 4
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %23, float %39, float %40) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  br label %42

41:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  br label %42

42:                                               ; preds = %41, %36, %18, %10, %4
  %43 = phi %class.SkCanvas* [ null, %10 ], [ null, %4 ], [ null, %41 ], [ %23, %36 ], [ %23, %18 ]
  ret %class.SkCanvas* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkDocument7endPageEv(%class.SkDocument*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  store i32 0, i32* %2, align 8
  %6 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*)***
  %7 = load void (%class.SkDocument*)**, void (%class.SkDocument*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkDocument*)*, void (%class.SkDocument*)** %7, i64 4
  %9 = load void (%class.SkDocument*)*, void (%class.SkDocument*)** %8, align 8
  tail call void %9(%class.SkDocument* %0) #6
  br label %10

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkDocument5abortEv(%class.SkDocument*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %class.SkDocument* %0 to void (%class.SkDocument*)***
  %3 = load void (%class.SkDocument*)**, void (%class.SkDocument*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkDocument*)*, void (%class.SkDocument*)** %3, i64 6
  %5 = load void (%class.SkDocument*)*, void (%class.SkDocument*)** %4, align 8
  tail call void %5(%class.SkDocument* %0) #6
  %6 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 3
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkDocument, %class.SkDocument* %0, i64 0, i32 2
  store %class.SkWStream* null, %class.SkWStream** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #6
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #5

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
