; ModuleID = '../../chrome/browser/ui/views/relaunch_notification/relaunch_required_timer.cc'
source_filename = "../../chrome/browser/ui/views/relaunch_notification/relaunch_required_timer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.RelaunchRequiredTimer = type { %"class.base::Time", %"class.util::WallClockTimer", %"class.base::RepeatingCallback" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.util::WallClockTimer" = type { %"class.base::PowerSuspendObserver", i8, %"class.base::Location", %"class.base::Time", %"class.base::OnceCallback", %"class.base::OneShotTimer", %"class.base::Clock"* }
%"class.base::PowerSuspendObserver" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.3" }
%"class.base::time_internal::TimeBase.3" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }

$_ZN4base8internal7InvokerINS0_9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"ScheduleNextTitleRefresh\00", align 1
@.str.1 = private unnamed_addr constant [79 x i8] c"../../chrome/browser/ui/views/relaunch_notification/relaunch_required_timer.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN21RelaunchRequiredTimerC1EN4base4TimeENS0_17RepeatingCallbackIFvvEEE = hidden unnamed_addr alias void (%class.RelaunchRequiredTimer*, i64, %"class.base::RepeatingCallback"*), void (%class.RelaunchRequiredTimer*, i64, %"class.base::RepeatingCallback"*)* @_ZN21RelaunchRequiredTimerC2EN4base4TimeENS0_17RepeatingCallbackIFvvEEE
@_ZN21RelaunchRequiredTimerD1Ev = hidden unnamed_addr alias void (%class.RelaunchRequiredTimer*), void (%class.RelaunchRequiredTimer*)* @_ZN21RelaunchRequiredTimerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RelaunchRequiredTimerC2EN4base4TimeENS0_17RepeatingCallbackIFvvEEE(%class.RelaunchRequiredTimer*, i64, %"class.base::RepeatingCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 1
  tail call void @_ZN4util14WallClockTimerC1Ev(%"class.util::WallClockTimer"* %5) #8
  %6 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  tail call void @_ZN21RelaunchRequiredTimer24ScheduleNextTitleRefreshEv(%class.RelaunchRequiredTimer* %0)
  ret void
}

declare void @_ZN4util14WallClockTimerC1Ev(%"class.util::WallClockTimer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RelaunchRequiredTimer24ScheduleNextTitleRefreshEv(%class.RelaunchRequiredTimer*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = tail call i64 @_ZN4base4Time3NowEv() #8
  %6 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub nsw i64 %7, %5
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %47, label %10

10:                                               ; preds = %1
  %11 = tail call i64 @_ZN21relaunch_notification23ComputeNextRefreshDeltaEN4base9TimeDeltaE(i64 %8) #8
  %12 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 1
  %13 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 35) #8
  %14 = add i64 %11, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = icmp slt i64 %11, 0
  %18 = select i1 %17, i64 -9223372036854775808, i64 9223372036854775807
  %19 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5, i64 %11) #8
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 %18, i64 %21, !prof !2
  br label %31

23:                                               ; preds = %10
  %24 = add i64 %5, -9223372036854775807
  %25 = icmp ugt i64 %24, 1
  %26 = icmp eq i64 %5, %11
  %27 = or i1 %25, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %16, %23, %28
  %32 = phi i64 [ %22, %16 ], [ %11, %23 ], [ %11, %28 ]
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = ptrtoint %class.RelaunchRequiredTimer* %0 to i64
  %35 = call i8* @_Znwm(i64 56) #9, !noalias !3
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.RelaunchRequiredTimer*)* @_ZN21RelaunchRequiredTimer14OnTitleRefreshEv to i64), i64 0>, <2 x i64>* %38, align 8, !noalias !3
  %39 = getelementptr inbounds i8, i8* %35, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %34, i64* %40, align 8, !noalias !3
  %41 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %35, i8** %41, align 8, !alias.scope !3
  %42 = bitcast %"class.util::WallClockTimer"* %12 to void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %43 = load void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %43, i64 4
  %45 = load void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.util::WallClockTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %44, align 8
  call void %45(%"class.util::WallClockTimer"* %12, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 %32, %"class.base::OnceCallback"* nonnull %3) #8
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  br label %47

47:                                               ; preds = %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RelaunchRequiredTimerD2Ev(%class.RelaunchRequiredTimer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #8
  %3 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 1
  tail call void @_ZN4util14WallClockTimerD1Ev(%"class.util::WallClockTimer"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4util14WallClockTimerD1Ev(%"class.util::WallClockTimer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare i64 @_ZN21relaunch_notification23ComputeNextRefreshDeltaEN4base9TimeDeltaE(i64) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RelaunchRequiredTimer14OnTitleRefreshEv(%class.RelaunchRequiredTimer*) #0 align 2 {
  %2 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %5 = bitcast void ()** %4 to void (%"class.base::internal::BindStateBase"*)**
  %6 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, align 8
  tail call void %6(%"class.base::internal::BindStateBase"* %3) #8
  tail call void @_ZN21RelaunchRequiredTimer24ScheduleNextTitleRefreshEv(%class.RelaunchRequiredTimer* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21RelaunchRequiredTimer11SetDeadlineEN4base4TimeE(%class.RelaunchRequiredTimer*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  %7 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*)**
  %11 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %10, align 8
  tail call void %11(%"class.base::internal::BindStateBase"* %8) #8
  tail call void @_ZN21RelaunchRequiredTimer24ScheduleNextTitleRefreshEv(%class.RelaunchRequiredTimer* %0) #8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK21RelaunchRequiredTimer14GetWindowTitleEv(%"class.std::__1::basic_string"* noalias sret, %class.RelaunchRequiredTimer* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %6 = tail call i64 @_ZN4base4Time3NowEv() #8
  %7 = getelementptr inbounds %class.RelaunchRequiredTimer, %class.RelaunchRequiredTimer* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %8, %6
  %10 = tail call i64 @_ZN21relaunch_notification20ComputeDeadlineDeltaEN4base9TimeDeltaE(i64 %9) #8
  store i64 %10, i64* %5, align 8
  %11 = add i64 %10, -9223372036854775807
  %12 = icmp ult i64 %11, 2
  %13 = sdiv i64 %10, 1000000
  %14 = select i1 %12, i64 %10, i64 %13
  %15 = trunc i64 %14 to i32
  %16 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #8
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #8
  br label %87

20:                                               ; preds = %2
  %21 = load i64, i64* %5, align 8
  %22 = sdiv i64 %21, 3600000000
  %23 = call i1 @llvm.is.constant.i64(i64 %22) #8
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = icmp slt i64 %21, -3599999999
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = add nsw i64 %22, 2147483648
  %28 = icmp ult i64 %27, 4294967296
  %29 = trunc i64 %22 to i32
  %30 = select i1 %28, i32 %29, i32 %26, !prof !8
  br label %37

31:                                               ; preds = %20
  %32 = icmp sgt i64 %21, 7730941132799999999
  br i1 %32, label %87, label %33

33:                                               ; preds = %31
  %34 = icmp sgt i64 %22, -2147483648
  %35 = select i1 %34, i64 %22, i64 -2147483648
  %36 = trunc i64 %35 to i32
  br label %37

37:                                               ; preds = %24, %33
  %38 = phi i32 [ %30, %24 ], [ %36, %33 ]
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %37
  br i1 %23, label %48, label %41

41:                                               ; preds = %40
  %42 = icmp slt i64 %21, -3599999999
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = add nsw i64 %22, 2147483648
  %45 = icmp ult i64 %44, 4294967296
  %46 = trunc i64 %22 to i32
  %47 = select i1 %45, i32 %46, i32 %43, !prof !8
  br label %87

48:                                               ; preds = %40
  %49 = icmp sgt i64 %21, 7730941132799999999
  br i1 %49, label %87, label %50

50:                                               ; preds = %48
  %51 = icmp sgt i64 %22, -2147483648
  %52 = select i1 %51, i64 %22, i64 -2147483648
  %53 = trunc i64 %52 to i32
  br label %87

54:                                               ; preds = %37
  %55 = sdiv i64 %21, 60000000
  %56 = call i1 @llvm.is.constant.i64(i64 %55) #8
  br i1 %56, label %64, label %57

57:                                               ; preds = %54
  %58 = icmp slt i64 %21, -59999999
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = add nsw i64 %55, 2147483648
  %61 = icmp ult i64 %60, 4294967296
  %62 = trunc i64 %55 to i32
  %63 = select i1 %61, i32 %62, i32 %59, !prof !8
  br label %70

64:                                               ; preds = %54
  %65 = icmp sgt i64 %21, 128849018879999999
  br i1 %65, label %87, label %66

66:                                               ; preds = %64
  %67 = icmp sgt i64 %55, -2147483648
  %68 = select i1 %67, i64 %55, i64 -2147483648
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %57, %66
  %71 = phi i32 [ %63, %57 ], [ %69, %66 ]
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %70
  br i1 %56, label %81, label %74

74:                                               ; preds = %73
  %75 = icmp slt i64 %21, -59999999
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = add nsw i64 %55, 2147483648
  %78 = icmp ult i64 %77, 4294967296
  %79 = trunc i64 %55 to i32
  %80 = select i1 %78, i32 %79, i32 %76, !prof !8
  br label %87

81:                                               ; preds = %73
  %82 = icmp sgt i64 %21, 128849018879999999
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = icmp sgt i64 %55, -2147483648
  %85 = select i1 %84, i64 %55, i64 -2147483648
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %64, %31, %83, %81, %74, %50, %48, %41, %70, %18
  %88 = phi i32 [ %19, %18 ], [ %15, %70 ], [ %47, %41 ], [ %53, %50 ], [ 2147483647, %48 ], [ %80, %74 ], [ %86, %83 ], [ 2147483647, %81 ], [ 2147483647, %31 ], [ 2147483647, %64 ]
  %89 = phi i32 [ 658, %18 ], [ 661, %70 ], [ 659, %41 ], [ 659, %50 ], [ 659, %48 ], [ 660, %74 ], [ 660, %83 ], [ 660, %81 ], [ 659, %31 ], [ 660, %64 ]
  call void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string"* sret %0, i32 %89, i32 %88) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

declare i64 @_ZN21relaunch_notification20ComputeDeadlineDeltaEN4base9TimeDeltaE(i64) local_unnamed_addr #1

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string"* sret, i32, i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.RelaunchRequiredTimer*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.RelaunchRequiredTimer*)**
  %21 = load void (%class.RelaunchRequiredTimer*)*, void (%class.RelaunchRequiredTimer*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.RelaunchRequiredTimer*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.RelaunchRequiredTimer*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.RelaunchRequiredTimer* %12) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind readnone }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERM21RelaunchRequiredTimerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIRM21RelaunchRequiredTimerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIRM21RelaunchRequiredTimerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{!"branch_weights", i32 2000, i32 1}
