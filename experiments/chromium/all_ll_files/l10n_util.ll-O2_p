; ModuleID = '../../ui/base/l10n/l10n_util.cc'
source_filename = "../../ui/base/l10n/l10n_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon.1 = type { i8*, i8* }
%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_string.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.12 }
%struct.anon.12 = type { %"struct.std::__1::__padding.13", i8 }
%"struct.std::__1::__padding.13" = type { [1 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::vector.28", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.43", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.std::__1::unique_ptr.22"*, %"class.std::__1::unique_ptr.22"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::unique_ptr.22"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::basic_string.8"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { i64*, i64*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i64* }
%"class.base::i18n::internal::MessageArg" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.icu_69::Formattable"* }
%"class.icu_69::Formattable" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.l10n_util::StringComparator" = type { %"class.icu_69::Collator"* }
%"class.icu_69::Collator" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.std::__1::reverse_iterator.109" = type { %"class.std::__1::__wrap_iter.102", %"class.std::__1::__wrap_iter.102" }
%"class.std::__1::__wrap_iter.102" = type { %"class.std::__1::basic_string.8"* }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN9l10n_util23SortVectorWithStringKeyINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvRKNS2_IcNS3_IcEENS5_IcEEEEPNS1_6vectorIT_NS5_ISE_EEEEmmb = comdat any

$_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_SB_NS_11__wrap_iterISB_EEEEvT0_SE_T1_SF_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_ = comdat any

$_ZNSt3__122__merge_move_constructIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EESD_EEvT0_SE_T1_SF_PNS_15iterator_traitsISE_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_NS_11__wrap_iterISB_EESD_EEvT0_SE_T1_SF_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_16reverse_iteratorIPS9_EENSD_INS_11__wrap_iterISE_EEEESI_EEvT0_SJ_T1_SK_T2_T_ = comdat any

$_ZNSt3__16__sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_ = comdat any

$_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_ = comdat any

$_ZNSt3__17__sort4IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_T_ = comdat any

$_ZNSt3__17__sort5IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_SC_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEbT0_SC_T_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"-419\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"br\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"-PT\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"zh\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"hk\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"mo\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"-TW\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"-CN\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"lr\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"ph\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"-US\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"-GB\00", align 1
@_ZZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_bE9kAliasMap = internal constant [6 x %struct.anon.1] [%struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0) }, %struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0) }, %struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0) }, %struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0) }, %struct.anon.1 { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0) }], align 16
@.str.15 = private unnamed_addr constant [6 x i8] c"en-US\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"iw\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"he\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"nb\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"pt-BR\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"tl\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"fil\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"zh-CN\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"zh-Hans\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"zh-TW\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"zh-Hant\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"ro-MD\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"en-XA\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"ar-XB\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"multiple\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"single\00", align 1
@_ZN12_GLOBAL__N_119g_available_localesE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZZN9l10n_util21GetLocalesWithStringsEvE17available_locales = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN9l10n_util21GetLocalesWithStringsEvE17available_locales = internal global i64 0, align 8
@_ZN12_GLOBAL__N_119kAcceptLanguageListE = internal constant [169 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i32 0, i32 0)], align 16
@_ZN12_GLOBAL__N_116kPlatformLocalesE = internal constant [55 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0)], align 16
@.str.37 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"af\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"am\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"an\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"ast\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"az\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"be\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"bg\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"bn\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"bs\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"ceb\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"chr\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"ckb\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"co\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"cs\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"cy\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"da\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"de\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"de-AT\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"de-CH\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"de-DE\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"de-LI\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"el\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"en-AU\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"en-CA\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"en-GB\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"en-GB-oxendict\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"en-IN\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"en-NZ\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"en-ZA\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"eo\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"es-419\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"es-AR\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"es-CL\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"es-CO\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"es-CR\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"es-ES\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"es-HN\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"es-MX\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"es-PE\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"es-US\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"es-UY\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"es-VE\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"et\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"eu\00", align 1
@.str.87 = private unnamed_addr constant [3 x i8] c"fa\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"fo\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"fr\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"fr-CA\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"fr-CH\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"fr-FR\00", align 1
@.str.94 = private unnamed_addr constant [3 x i8] c"fy\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"ga\00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"gd\00", align 1
@.str.97 = private unnamed_addr constant [3 x i8] c"gl\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"gn\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"gu\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"ha\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"haw\00", align 1
@.str.102 = private unnamed_addr constant [3 x i8] c"hi\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"hmn\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"hr\00", align 1
@.str.105 = private unnamed_addr constant [3 x i8] c"ht\00", align 1
@.str.106 = private unnamed_addr constant [3 x i8] c"hu\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"hy\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c"ia\00", align 1
@.str.109 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.110 = private unnamed_addr constant [3 x i8] c"ig\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"is\00", align 1
@.str.112 = private unnamed_addr constant [3 x i8] c"it\00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"it-CH\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"it-IT\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"jv\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"ka\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c"kk\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"km\00", align 1
@.str.120 = private unnamed_addr constant [3 x i8] c"kn\00", align 1
@.str.121 = private unnamed_addr constant [3 x i8] c"ko\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"kok\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"ku\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"ky\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"la\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"lb\00", align 1
@.str.127 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.128 = private unnamed_addr constant [3 x i8] c"lo\00", align 1
@.str.129 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.130 = private unnamed_addr constant [3 x i8] c"lv\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"mg\00", align 1
@.str.132 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str.133 = private unnamed_addr constant [3 x i8] c"mk\00", align 1
@.str.134 = private unnamed_addr constant [3 x i8] c"ml\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"mn\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"mr\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"mt\00", align 1
@.str.139 = private unnamed_addr constant [3 x i8] c"my\00", align 1
@.str.140 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.141 = private unnamed_addr constant [3 x i8] c"nl\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c"nn\00", align 1
@.str.143 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str.144 = private unnamed_addr constant [3 x i8] c"oc\00", align 1
@.str.145 = private unnamed_addr constant [3 x i8] c"om\00", align 1
@.str.146 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"pa\00", align 1
@.str.148 = private unnamed_addr constant [3 x i8] c"pl\00", align 1
@.str.149 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"pt-PT\00", align 1
@.str.151 = private unnamed_addr constant [3 x i8] c"qu\00", align 1
@.str.152 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@.str.153 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.154 = private unnamed_addr constant [3 x i8] c"ru\00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.156 = private unnamed_addr constant [3 x i8] c"sd\00", align 1
@.str.157 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.158 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str.159 = private unnamed_addr constant [3 x i8] c"sk\00", align 1
@.str.160 = private unnamed_addr constant [3 x i8] c"sl\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"sm\00", align 1
@.str.162 = private unnamed_addr constant [3 x i8] c"sn\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.164 = private unnamed_addr constant [3 x i8] c"sq\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c"sr\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.167 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.168 = private unnamed_addr constant [3 x i8] c"sv\00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"sw\00", align 1
@.str.170 = private unnamed_addr constant [3 x i8] c"ta\00", align 1
@.str.171 = private unnamed_addr constant [3 x i8] c"te\00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"tg\00", align 1
@.str.173 = private unnamed_addr constant [3 x i8] c"th\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"ti\00", align 1
@.str.175 = private unnamed_addr constant [3 x i8] c"tk\00", align 1
@.str.176 = private unnamed_addr constant [3 x i8] c"tn\00", align 1
@.str.177 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.178 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.179 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"tw\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"ug\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"uk\00", align 1
@.str.183 = private unnamed_addr constant [3 x i8] c"ur\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"uz\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"vi\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"wa\00", align 1
@.str.187 = private unnamed_addr constant [3 x i8] c"wo\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"xh\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c"yi\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"yo\00", align 1
@.str.191 = private unnamed_addr constant [6 x i8] c"zh-HK\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"zu\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"zh-hans\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"zh-hant\00", align 1
@_ZZN12_GLOBAL__N_115IsDuplicateNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15kDuplicateNames = internal constant [11 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0)], align 16
@.str.195 = private unnamed_addr constant [7 x i8] c"ar_001\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"en_001\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"en_150\00", align 1
@.str.198 = private unnamed_addr constant [11 x i8] c"zh_hans_cn\00", align 1
@.str.199 = private unnamed_addr constant [11 x i8] c"zh_hant_hk\00", align 1
@.str.200 = private unnamed_addr constant [11 x i8] c"zh_hant_mo\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"zh_hans_sg\00", align 1
@.str.202 = private unnamed_addr constant [11 x i8] c"zh_hant_tw\00", align 1
@.str.203 = private unnamed_addr constant [4 x i8] c"es_\00", align 1
@.str.204 = private unnamed_addr constant [4 x i8] c"419\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util11GetLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 45, i64 0) #16
  %5 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %4, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_b(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::allocator", align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 16
  %9 = alloca %"class.std::__1::basic_string", align 16
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_119HasStringsForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24) %0, i1 zeroext %2)
  br i1 %10, label %11, label %42

11:                                               ; preds = %3
  %12 = icmp eq %"class.std::__1::basic_string"* %1, %0
  br i1 %12, label %332, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %17, label %32, label %22

22:                                               ; preds = %13
  br i1 %21, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #16
  br label %332

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %28, i64 %30) #16
  br label %332

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %38 = zext i8 %20 to i64
  %39 = select i1 %21, i8* %34, i8* %37
  %40 = select i1 %21, i64 %36, i64 %38
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %39, i64 %40) #16
  br label %332

42:                                               ; preds = %3
  %43 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 64, i64 0) #16
  %44 = icmp eq i64 %43, -1
  br i1 %44, label %45, label %332

45:                                               ; preds = %42
  %46 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  %50 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 45, i64 0) #16, !noalias !2
  %51 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %51) #16, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %50, %"class.std::__1::allocator"* nonnull dereferenceable(1) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %51) #16, !noalias !2
  %52 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i64, i64* %48, align 8
  %57 = zext i8 %54 to i64
  %58 = select i1 %55, i64 %56, i64 %57
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp ult i64 %58, %66
  br i1 %67, label %68, label %252

68:                                               ; preds = %45
  %69 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #16
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = add nuw i64 %58, 1
  %74 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %78 = select i1 %62, i8* %76, i8* %77
  %79 = getelementptr inbounds i8, i8* %78, i64 %73
  %80 = sub i64 %66, %73
  %81 = icmp ugt i64 %80, -17
  br i1 %81, label %82, label %84

82:                                               ; preds = %68
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %83) #17
  unreachable

84:                                               ; preds = %68
  %85 = icmp ult i64 %80, 23
  br i1 %85, label %91, label %86

86:                                               ; preds = %84
  %87 = add nuw i64 %80, 16
  %88 = and i64 %87, -16
  %89 = call i8* @_Znwm(i64 %88) #18
  store i8* %89, i8** %70, align 8
  %90 = or i64 %88, -9223372036854775808
  store i64 %90, i64* %72, align 8
  store i64 %80, i64* %71, align 8
  br label %96

91:                                               ; preds = %84
  %92 = trunc i64 %80 to i8
  %93 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 %92, i8* %94, align 1
  %95 = icmp eq i64 %80, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %91, %86
  %97 = phi i8* [ %89, %86 ], [ %69, %91 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 %79, i64 %80, i1 false) #16
  br label %98

98:                                               ; preds = %91, %96
  %99 = phi i8* [ %69, %91 ], [ %97, %96 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 %80
  store i8 0, i8* %100, align 1
  %101 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #16
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %104 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 -86, i64 24, i1 false)
  br i1 %55, label %106, label %105

105:                                              ; preds = %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %101, i8* nonnull align 8 %46, i64 24, i1 false) #16
  br label %111

106:                                              ; preds = %98
  %107 = load i8*, i8** %47, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %107, i64 %56) #16
  %108 = load i8, i8* %53, align 1
  %109 = load i64, i64* %48, align 8
  %110 = zext i8 %108 to i64
  br label %111

111:                                              ; preds = %105, %106
  %112 = phi i64 [ %57, %105 ], [ %110, %106 ]
  %113 = phi i64 [ %56, %105 ], [ %109, %106 ]
  %114 = phi i8 [ %54, %105 ], [ %108, %106 ]
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %47, align 8
  %117 = select i1 %115, i8* %116, i8* %46
  %118 = select i1 %115, i64 %113, i64 %112
  %119 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %117, i64 %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #16
  br i1 %119, label %120, label %131

120:                                              ; preds = %111
  %121 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = load i8*, i8** %70, align 8
  %126 = select i1 %124, i8* %125, i8* %69
  %127 = load i64, i64* %71, align 8
  %128 = zext i8 %123 to i64
  %129 = select i1 %124, i64 %127, i64 %128
  %130 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %126, i64 %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #16
  br i1 %130, label %131, label %211

131:                                              ; preds = %120, %111
  %132 = load i8, i8* %53, align 1
  %133 = icmp slt i8 %132, 0
  %134 = load i8*, i8** %47, align 8
  %135 = select i1 %133, i8* %134, i8* %46
  %136 = load i64, i64* %48, align 8
  %137 = zext i8 %132 to i64
  %138 = select i1 %133, i64 %136, i64 %137
  %139 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %135, i64 %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #16
  br i1 %139, label %140, label %151

140:                                              ; preds = %131
  %141 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = load i8*, i8** %70, align 8
  %146 = select i1 %144, i8* %145, i8* %69
  %147 = load i64, i64* %71, align 8
  %148 = zext i8 %143 to i64
  %149 = select i1 %144, i64 %147, i64 %148
  %150 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %146, i64 %149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #16
  br i1 %150, label %151, label %211

151:                                              ; preds = %140, %131
  %152 = load i8, i8* %53, align 1
  %153 = icmp slt i8 %152, 0
  %154 = load i8*, i8** %47, align 8
  %155 = select i1 %153, i8* %154, i8* %46
  %156 = load i64, i64* %48, align 8
  %157 = zext i8 %152 to i64
  %158 = select i1 %153, i64 %156, i64 %157
  %159 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %155, i64 %158, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #16
  br i1 %159, label %160, label %181

160:                                              ; preds = %151
  %161 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %70, align 8
  %166 = select i1 %164, i8* %165, i8* %69
  %167 = load i64, i64* %71, align 8
  %168 = zext i8 %163 to i64
  %169 = select i1 %164, i64 %167, i64 %168
  %170 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %166, i64 %169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  br i1 %170, label %211, label %171

171:                                              ; preds = %160
  %172 = load i8, i8* %162, align 1
  %173 = icmp slt i8 %172, 0
  %174 = load i8*, i8** %70, align 8
  %175 = select i1 %173, i8* %174, i8* %69
  %176 = load i64, i64* %71, align 8
  %177 = zext i8 %172 to i64
  %178 = select i1 %173, i64 %176, i64 %177
  %179 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %175, i64 %178, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %180 = select i1 %179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)
  br label %211

181:                                              ; preds = %151
  %182 = load i8, i8* %53, align 1
  %183 = icmp slt i8 %182, 0
  %184 = load i8*, i8** %47, align 8
  %185 = select i1 %183, i8* %184, i8* %46
  %186 = load i64, i64* %48, align 8
  %187 = zext i8 %182 to i64
  %188 = select i1 %183, i64 %186, i64 %187
  %189 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %185, i64 %188, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #16
  br i1 %189, label %190, label %214

190:                                              ; preds = %181
  %191 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i8*, i8** %70, align 8
  %196 = select i1 %194, i8* %195, i8* %69
  %197 = load i64, i64* %71, align 8
  %198 = zext i8 %193 to i64
  %199 = select i1 %194, i64 %197, i64 %198
  %200 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %196, i64 %199, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2) #16
  br i1 %200, label %211, label %201

201:                                              ; preds = %190
  %202 = load i8, i8* %192, align 1
  %203 = icmp slt i8 %202, 0
  %204 = load i8*, i8** %70, align 8
  %205 = select i1 %203, i8* %204, i8* %69
  %206 = load i64, i64* %71, align 8
  %207 = zext i8 %202 to i64
  %208 = select i1 %203, i64 %206, i64 %207
  %209 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %205, i64 %208, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #16
  %210 = select i1 %209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)
  br label %211

211:                                              ; preds = %201, %171, %190, %160, %140, %120
  %212 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %120 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), %140 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), %160 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), %190 ], [ %180, %171 ], [ %210, %201 ]
  %213 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* %212) #16
  br label %214

214:                                              ; preds = %211, %181
  %215 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_119HasStringsForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i1 zeroext %2)
  br i1 %215, label %216, label %237

216:                                              ; preds = %214
  %217 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* nonnull align 16 %101, i64 24, i1 false) #16
  %222 = bitcast %"class.std::__1::basic_string"* %8 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %222, align 16
  store i64 %220, i64* %103, align 16
  %223 = lshr i64 %220, 56
  %224 = trunc i64 %223 to i8
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %216
  %227 = extractelement <2 x i64> %218, i32 0
  %228 = inttoptr i64 %227 to i8*
  call void @_ZdlPv(i8* %228) #18
  br label %229

229:                                              ; preds = %216, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #16
  %230 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %229
  %235 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %235) #18
  br label %236

236:                                              ; preds = %229, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #16
  br label %325

237:                                              ; preds = %214
  %238 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = load i8*, i8** %102, align 16
  call void @_ZdlPv(i8* %243) #18
  br label %244

244:                                              ; preds = %237, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #16
  %245 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %250) #18
  br label %251

251:                                              ; preds = %244, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #16
  br label %252

252:                                              ; preds = %251, %45
  %253 = bitcast %"class.logging::CheckError"* %4 to i8*
  %254 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %258 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %261 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %262 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %263 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %264 = bitcast %"class.std::__1::basic_string"* %9 to <2 x i64>*
  br label %265

265:                                              ; preds = %252, %322
  %266 = phi %struct.anon.1* [ getelementptr inbounds ([6 x %struct.anon.1], [6 x %struct.anon.1]* @_ZZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_bE9kAliasMap, i64 0, i64 0), %252 ], [ %323, %322 ]
  %267 = load i8, i8* %53, align 1
  %268 = icmp slt i8 %267, 0
  %269 = load i8*, i8** %47, align 8
  %270 = select i1 %268, i8* %269, i8* %46
  %271 = load i64, i64* %48, align 8
  %272 = zext i8 %267 to i64
  %273 = select i1 %268, i64 %271, i64 %272
  %274 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %266, i64 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = icmp eq i8* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %265
  %278 = call i64 @strlen(i8* nonnull %275) #16
  br label %281

279:                                              ; preds = %265
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #16
  %280 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #16
  br label %281

281:                                              ; preds = %277, %279
  %282 = phi i64 [ 0, %279 ], [ %278, %277 ]
  %283 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %270, i64 %273, i8* %275, i64 %282) #16
  br i1 %283, label %284, label %322

284:                                              ; preds = %281
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #16
  %285 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %266, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %262, i8 -86, i64 24, i1 false)
  %286 = load i8*, i8** %285, align 8
  %287 = call i64 @strlen(i8* %286) #16
  %288 = icmp ugt i64 %287, -17
  br i1 %288, label %289, label %291

289:                                              ; preds = %284
  %290 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %290) #17
  unreachable

291:                                              ; preds = %284
  %292 = icmp ult i64 %287, 23
  br i1 %292, label %298, label %293

293:                                              ; preds = %291
  %294 = add nuw i64 %287, 16
  %295 = and i64 %294, -16
  %296 = call i8* @_Znwm(i64 %295) #18
  store i8* %296, i8** %255, align 16
  %297 = or i64 %295, -9223372036854775808
  store i64 %297, i64* %257, align 16
  store i64 %287, i64* %256, align 8
  br label %301

298:                                              ; preds = %291
  %299 = trunc i64 %287 to i8
  store i8 %299, i8* %259, align 1
  %300 = icmp eq i64 %287, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %298, %293
  %302 = phi i8* [ %296, %293 ], [ %254, %298 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %302, i8* align 1 %286, i64 %287, i1 false) #16
  br label %303

303:                                              ; preds = %298, %301
  %304 = phi i8* [ %254, %298 ], [ %302, %301 ]
  %305 = getelementptr inbounds i8, i8* %304, i64 %287
  store i8 0, i8* %305, align 1
  %306 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_119HasStringsForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i1 zeroext %2)
  br i1 %306, label %309, label %307

307:                                              ; preds = %303
  %308 = load i8, i8* %259, align 1
  br label %314

309:                                              ; preds = %303
  %310 = load <2 x i64>, <2 x i64>* %263, align 8
  %311 = load i64, i64* %260, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 16 %254, i64 24, i1 false) #16
  store <2 x i64> %310, <2 x i64>* %264, align 16
  store i64 %311, i64* %257, align 16
  %312 = lshr i64 %311, 56
  %313 = trunc i64 %312 to i8
  br label %314

314:                                              ; preds = %307, %309
  %315 = phi i8 [ %313, %309 ], [ %308, %307 ]
  %316 = phi i32 [ 1, %309 ], [ 0, %307 ]
  %317 = icmp slt i8 %315, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %314
  %319 = load i8*, i8** %255, align 16
  call void @_ZdlPv(i8* %319) #18
  br label %320

320:                                              ; preds = %314, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #16
  %321 = icmp eq i32 %316, 0
  br i1 %321, label %322, label %325

322:                                              ; preds = %281, %320
  %323 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %266, i64 1
  %324 = icmp eq %struct.anon.1* %323, getelementptr inbounds ([6 x %struct.anon.1], [6 x %struct.anon.1]* @_ZZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_bE9kAliasMap, i64 1, i64 0)
  br i1 %324, label %325, label %265

325:                                              ; preds = %320, %322, %236
  %326 = phi i1 [ true, %236 ], [ false, %322 ], [ true, %320 ]
  %327 = load i8, i8* %53, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %331

329:                                              ; preds = %325
  %330 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %330) #18
  br label %331

331:                                              ; preds = %325, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #16
  br label %332

332:                                              ; preds = %32, %26, %23, %11, %331, %42
  %333 = phi i1 [ %326, %331 ], [ false, %42 ], [ true, %11 ], [ true, %23 ], [ true, %26 ], [ true, %32 ]
  ret i1 %333
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_119HasStringsForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.8", align 8
  br i1 %1, label %24, label %4

4:                                                ; preds = %2, %4
  %5 = phi i64 [ %16, %4 ], [ 55, %2 ]
  %6 = phi i8** [ %15, %4 ], [ getelementptr inbounds ([55 x i8*], [55 x i8*]* @_ZN12_GLOBAL__N_116kPlatformLocalesE, i64 0, i64 0), %2 ]
  %7 = lshr i64 %5, 1
  %8 = getelementptr inbounds i8*, i8** %6, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %0, i8* %9) #16
  %11 = icmp sgt i32 %10, 0
  %12 = getelementptr inbounds i8*, i8** %8, i64 1
  %13 = xor i64 %7, -1
  %14 = add i64 %5, %13
  %15 = select i1 %11, i8** %12, i8** %6
  %16 = select i1 %11, i64 %14, i64 %7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq i8** %15, getelementptr inbounds ([55 x i8*], [55 x i8*]* @_ZN12_GLOBAL__N_116kPlatformLocalesE, i64 1, i64 0)
  br i1 %19, label %49, label %20

20:                                               ; preds = %18
  %21 = load i8*, i8** %15, align 8
  %22 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %0, i8* %21) #16
  %23 = icmp sgt i32 %22, -1
  br label %49

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.8"* nonnull sret %3, i8* %33, i64 %37) #16
  %38 = call zeroext i1 @_ZN4base4i18n15IsFilenameLegalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %3) #16
  %39 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %24
  %44 = bitcast %"class.std::__1::basic_string.8"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %24, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  br i1 %38, label %47, label %49

47:                                               ; preds = %46
  %48 = call zeroext i1 @_ZN2ui14ResourceBundle19LocaleDataPakExistsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #16
  br label %49

49:                                               ; preds = %20, %18, %46, %47
  %50 = phi i1 [ %48, %47 ], [ false, %46 ], [ false, %18 ], [ %23, %20 ]
  ret i1 %50
}

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_b(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* %1, i1 zeroext true)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util34GetApplicationLocaleInternalNonMacERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.8", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #16
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #16
  %15 = tail call i8** @g_get_language_names() #16
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %86, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %27 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %18, %69
  %31 = phi i8* [ %16, %18 ], [ %71, %69 ]
  %32 = phi i8** [ %15, %18 ], [ %70, %69 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %33 = call i64 @strlen(i8* nonnull %31) #16
  %34 = icmp ugt i64 %33, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #17
  unreachable

37:                                               ; preds = %30
  %38 = icmp ult i64 %33, 23
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = add nuw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = call i8* @_Znwm(i64 %41) #18
  store i8* %42, i8** %21, align 8
  %43 = or i64 %41, -9223372036854775808
  store i64 %43, i64* %22, align 8
  store i64 %33, i64* %23, align 8
  br label %47

44:                                               ; preds = %37
  %45 = trunc i64 %33 to i8
  store i8 %45, i8* %25, align 1
  %46 = icmp eq i64 %33, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %44, %39
  %48 = phi i8* [ %42, %39 ], [ %20, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* nonnull align 1 %31, i64 %33, i1 false) #16
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %20, %44 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %33
  store i8 0, i8* %51, align 1
  call void @_ZN4base4i18n18GetCanonicalLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #16
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %54 = icmp ult %"class.std::__1::basic_string"* %52, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %19, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  %58 = ptrtoint %"class.std::__1::basic_string"* %57 to i64
  store i64 %58, i64* %26, align 8
  br label %64

59:                                               ; preds = %49
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #16
  %60 = load i8, i8* %28, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %55, %59, %62
  %65 = load i8, i8* %25, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %70 = getelementptr inbounds i8*, i8** %32, i64 1
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %30

73:                                               ; preds = %69
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %76 = icmp eq %"class.std::__1::basic_string"* %74, %75
  br i1 %76, label %86, label %80

77:                                               ; preds = %80
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %83, %78
  br i1 %79, label %86, label %80

80:                                               ; preds = %73, %77
  %81 = phi %"class.std::__1::basic_string"* [ %83, %77 ], [ %74, %73 ]
  %82 = call zeroext i1 @_ZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_b(%"class.std::__1::basic_string"* dereferenceable(24) %81, %"class.std::__1::basic_string"* nonnull %4, i1 zeroext true) #16
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 1
  br i1 %82, label %84, label %77

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 8 %9, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #16
  br label %122

86:                                               ; preds = %77, %2, %73
  %87 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #16
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  store i8 5, i8* %91, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5, i1 false) #16
  %93 = getelementptr inbounds i8, i8* %87, i64 5
  store i8 0, i8* %93, align 1
  %94 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #16
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.8"* nonnull sret %3, i8* nonnull %87, i64 5) #16
  %95 = call zeroext i1 @_ZN4base4i18n15IsFilenameLegalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %3) #16
  %96 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %86
  %101 = bitcast %"class.std::__1::basic_string.8"* %3 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %100, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #16
  br i1 %95, label %104, label %114

104:                                              ; preds = %103
  %105 = call zeroext i1 @_ZN2ui14ResourceBundle19LocaleDataPakExistsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #16
  br i1 %105, label %106, label %114

106:                                              ; preds = %104
  %107 = load i8, i8* %91, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* nonnull align 8 %87, i64 24, i1 false) #16
  br label %121

111:                                              ; preds = %106
  %112 = load i8*, i8** %88, align 8
  %113 = load i64, i64* %89, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %112, i64 %113) #16
  br label %116

114:                                              ; preds = %103, %104
  %115 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #16
  br label %116

116:                                              ; preds = %111, %114
  %117 = load i8, i8* %91, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %120) #18
  br label %121

121:                                              ; preds = %109, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #16
  br label %122

122:                                              ; preds = %121, %84
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %124 = icmp eq %"class.std::__1::basic_string"* %123, null
  br i1 %124, label %146, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  %127 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %128 = icmp eq %"class.std::__1::basic_string"* %127, %123
  br i1 %128, label %144, label %129

129:                                              ; preds = %125, %139
  %130 = phi %"class.std::__1::basic_string"* [ %131, %139 ], [ %127, %125 ]
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 -1
  %132 = bitcast %"class.std::__1::basic_string"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %136, %129
  %140 = icmp eq %"class.std::__1::basic_string"* %131, %123
  br i1 %140, label %141, label %129

141:                                              ; preds = %139
  %142 = bitcast %"class.std::__1::vector"* %5 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %125
  %145 = phi i8* [ %143, %141 ], [ %126, %125 ]
  store %"class.std::__1::basic_string"* %123, %"class.std::__1::basic_string"** %13, align 8
  call void @_ZdlPv(i8* %145) #18
  br label %146

146:                                              ; preds = %122, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %147 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %146
  %152 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %152) #18
  br label %153

153:                                              ; preds = %146, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

declare i8** @g_get_language_names() local_unnamed_addr #3

declare void @_ZN4base4i18n18GetCanonicalLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util28GetApplicationLocaleInternalERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 {
  tail call void @_ZN9l10n_util34GetApplicationLocaleInternalNonMacERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util20GetApplicationLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i1 zeroext) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZN9l10n_util34GetApplicationLocaleInternalNonMacERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) undef) #16
  br i1 %2, label %5, label %16

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = load i64, i64* %6, align 8
  %12 = zext i8 %9 to i64
  %13 = select i1 %10, i64 %11, i64 %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #16
  br label %16

16:                                               ; preds = %3, %5, %15
  ret void
}

declare void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util20GetApplicationLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false) #16, !alias.scope !5
  tail call void @_ZN9l10n_util34GetApplicationLocaleInternalNonMacERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) undef) #16
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1, !alias.scope !5
  %8 = icmp slt i8 %7, 0
  %9 = load i64, i64* %4, align 8, !alias.scope !5
  %10 = zext i8 %7 to i64
  %11 = select i1 %8, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0) #16
  br label %14

14:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9l10n_util22IsLocaleNameTranslatedEPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.8", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %10 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %11 = tail call i64 @strlen(i8* %0) #16
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #17
  unreachable

15:                                               ; preds = %2
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #18
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %9, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %0, i64 %11, i1 false) #16
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %9, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  call void @_ZN9l10n_util23GetDisplayNameForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_bb(%"class.std::__1::basic_string.8"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false, i1 zeroext false)
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %34, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  %45 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i16*, i16** %7, align 8
  %50 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %51 = select i1 %48, i16* %49, i16* %50
  %52 = load i64, i64* %8, align 8
  %53 = zext i8 %47 to i64
  %54 = select i1 %48, i64 %52, i64 %53
  %55 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16* %51, i64 %54) #16
  br i1 %55, label %56, label %87

56:                                               ; preds = %44
  %57 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #16
  %58 = load i8, i8* %46, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i16*, i16** %7, align 8
  %61 = select i1 %59, i16* %60, i16* %50
  %62 = load i64, i64* %8, align 8
  %63 = zext i8 %58 to i64
  %64 = select i1 %59, i64 %62, i64 %63
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %61, i64 %64) #16
  %65 = call i64 @strlen(i8* %0) #16
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %68 to i64
  %73 = select i1 %69, i64 %71, i64 %72
  %74 = icmp eq i64 %65, %73
  br i1 %74, label %75, label %79

75:                                               ; preds = %56
  %76 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* %0, i64 %65) #16
  %77 = icmp ne i32 %76, 0
  %78 = load i8, i8* %67, align 1
  br label %79

79:                                               ; preds = %56, %75
  %80 = phi i8 [ %68, %56 ], [ %78, %75 ]
  %81 = phi i1 [ true, %56 ], [ %77, %75 ]
  %82 = icmp slt i8 %80, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %79, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #16
  br label %87

87:                                               ; preds = %44, %86
  %88 = phi i1 [ %81, %86 ], [ true, %44 ]
  %89 = load i8, i8* %46, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::basic_string.8"* %3 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #18
  br label %94

94:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util23GetDisplayNameForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_bb(%"class.std::__1::basic_string.8"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.8", align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %18, i64 24, i1 false) #16
  br label %24

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %21, i64 %23) #16
  br label %24

24:                                               ; preds = %17, %19
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i64, i64* %11, align 8
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 5
  br i1 %32, label %33, label %48

33:                                               ; preds = %24
  %34 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5) #16
  %35 = icmp eq i32 %34, 0
  %36 = load i8, i8* %26, align 1
  br i1 %35, label %40, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %11, align 8
  %39 = zext i8 %36 to i64
  br label %48

40:                                               ; preds = %33
  %41 = icmp slt i8 %36, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  store i64 7, i64* %11, align 8
  %43 = load i8*, i8** %10, align 8
  br label %45

44:                                               ; preds = %40
  store i8 7, i8* %26, align 1
  br label %45

45:                                               ; preds = %42, %44
  %46 = phi i8* [ %43, %42 ], [ %9, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #16
  %47 = getelementptr inbounds i8, i8* %46, i64 7
  store i8 0, i8* %47, align 1
  br label %111

48:                                               ; preds = %37, %24
  %49 = phi i64 [ %39, %37 ], [ %30, %24 ]
  %50 = phi i64 [ %38, %37 ], [ %29, %24 ]
  %51 = phi i8 [ %36, %37 ], [ %27, %24 ]
  %52 = icmp slt i8 %51, 0
  %53 = select i1 %52, i64 %50, i64 %49
  %54 = icmp eq i64 %53, 5
  br i1 %54, label %55, label %70

55:                                               ; preds = %48
  %56 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i64 5) #16
  %57 = icmp eq i32 %56, 0
  %58 = load i8, i8* %26, align 1
  br i1 %57, label %62, label %59

59:                                               ; preds = %55
  %60 = load i64, i64* %11, align 8
  %61 = zext i8 %58 to i64
  br label %70

62:                                               ; preds = %55
  %63 = icmp slt i8 %58, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  store i64 7, i64* %11, align 8
  %65 = load i8*, i8** %10, align 8
  br label %67

66:                                               ; preds = %62
  store i8 7, i8* %26, align 1
  br label %67

67:                                               ; preds = %64, %66
  %68 = phi i8* [ %65, %64 ], [ %9, %66 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i64 7, i1 false) #16
  %69 = getelementptr inbounds i8, i8* %68, i64 7
  store i8 0, i8* %69, align 1
  br label %111

70:                                               ; preds = %59, %48
  %71 = phi i64 [ %61, %59 ], [ %49, %48 ]
  %72 = phi i64 [ %60, %59 ], [ %50, %48 ]
  %73 = phi i8 [ %58, %59 ], [ %51, %48 ]
  %74 = icmp slt i8 %73, 0
  %75 = select i1 %74, i64 %72, i64 %71
  %76 = icmp eq i64 %75, 2
  br i1 %76, label %77, label %92

77:                                               ; preds = %70
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i64 2) #16
  %79 = icmp eq i32 %78, 0
  %80 = load i8, i8* %26, align 1
  br i1 %79, label %84, label %81

81:                                               ; preds = %77
  %82 = load i64, i64* %11, align 8
  %83 = zext i8 %80 to i64
  br label %92

84:                                               ; preds = %77
  %85 = icmp slt i8 %80, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  store i64 3, i64* %11, align 8
  %87 = load i8*, i8** %10, align 8
  br label %89

88:                                               ; preds = %84
  store i8 3, i8* %26, align 1
  br label %89

89:                                               ; preds = %86, %88
  %90 = phi i8* [ %87, %86 ], [ %9, %88 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i64 3, i1 false) #16
  %91 = getelementptr inbounds i8, i8* %90, i64 3
  store i8 0, i8* %91, align 1
  br label %111

92:                                               ; preds = %81, %70
  %93 = phi i64 [ %83, %81 ], [ %71, %70 ]
  %94 = phi i64 [ %82, %81 ], [ %72, %70 ]
  %95 = phi i8 [ %80, %81 ], [ %73, %70 ]
  %96 = icmp slt i8 %95, 0
  %97 = select i1 %96, i64 %94, i64 %93
  %98 = icmp eq i64 %97, 2
  br i1 %98, label %99, label %111

99:                                               ; preds = %92
  %100 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %111

102:                                              ; preds = %99
  %103 = load i8, i8* %26, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  store i64 5, i64* %11, align 8
  %106 = load i8*, i8** %10, align 8
  br label %108

107:                                              ; preds = %102
  store i8 5, i8* %26, align 1
  br label %108

108:                                              ; preds = %105, %107
  %109 = phi i8* [ %106, %105 ], [ %9, %107 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5, i1 false) #16
  %110 = getelementptr inbounds i8, i8* %109, i64 5
  store i8 0, i8* %110, align 1
  br label %111

111:                                              ; preds = %92, %108, %89, %67, %45, %99
  %112 = bitcast %"class.std::__1::basic_string.8"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #16
  %113 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 24, i1 false) #16
  %116 = load i8, i8* %26, align 1
  %117 = icmp slt i8 %116, 0
  %118 = load i64, i64* %11, align 8
  %119 = zext i8 %116 to i64
  %120 = select i1 %117, i64 %118, i64 %119
  %121 = icmp eq i64 %120, 5
  br i1 %121, label %122, label %145

122:                                              ; preds = %111
  %123 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #16
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %122
  %126 = load i8, i8* %26, align 1
  %127 = load i64, i64* %11, align 8
  %128 = zext i8 %126 to i64
  br label %145

129:                                              ; preds = %122
  %130 = call i8* @_Znwm(i64 80) #18
  %131 = bitcast %"class.std::__1::basic_string.8"* %0 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775768>, <2 x i64>* %133, align 8
  %134 = bitcast i8* %130 to <8 x i16>*
  store <8 x i16> <i16 76, i16 111, i16 110, i16 103, i16 32, i16 115, i16 116, i16 114>, <8 x i16>* %134, align 2
  %135 = getelementptr inbounds i8, i8* %130, i64 16
  %136 = bitcast i8* %135 to <8 x i16>*
  store <8 x i16> <i16 105, i16 110, i16 103, i16 115, i16 32, i16 112, i16 115, i16 101>, <8 x i16>* %136, align 2
  %137 = getelementptr inbounds i8, i8* %130, i64 32
  %138 = bitcast i8* %137 to <8 x i16>*
  store <8 x i16> <i16 117, i16 100, i16 111, i16 108, i16 111, i16 99, i16 97, i16 108>, <8 x i16>* %138, align 2
  %139 = getelementptr inbounds i8, i8* %130, i64 48
  %140 = bitcast i8* %139 to <8 x i16>*
  store <8 x i16> <i16 101, i16 32, i16 40, i16 101, i16 110, i16 45, i16 88, i16 65>, <8 x i16>* %140, align 2
  %141 = getelementptr inbounds i8, i8* %130, i64 64
  %142 = bitcast i8* %141 to i16*
  store i16 41, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %130, i64 66
  %144 = bitcast i8* %143 to i16*
  store i16 0, i16* %144, align 2
  br label %264

145:                                              ; preds = %125, %111
  %146 = phi i64 [ %128, %125 ], [ %119, %111 ]
  %147 = phi i64 [ %127, %125 ], [ %118, %111 ]
  %148 = phi i8 [ %126, %125 ], [ %116, %111 ]
  %149 = icmp slt i8 %148, 0
  %150 = select i1 %149, i64 %147, i64 %146
  %151 = icmp eq i64 %150, 5
  br i1 %151, label %152, label %169

152:                                              ; preds = %145
  %153 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #16
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = load i8, i8* %26, align 1
  br label %169

157:                                              ; preds = %152
  %158 = call i8* @_Znwm(i64 64) #18
  %159 = bitcast %"class.std::__1::basic_string.8"* %0 to i8**
  store i8* %158, i8** %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = bitcast i64* %160 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %161, align 8
  %162 = bitcast i8* %158 to <8 x i16>*
  store <8 x i16> <i16 82, i16 84, i16 76, i16 32, i16 112, i16 115, i16 101, i16 117>, <8 x i16>* %162, align 2
  %163 = getelementptr inbounds i8, i8* %158, i64 16
  %164 = bitcast i8* %163 to <8 x i16>*
  store <8 x i16> <i16 100, i16 111, i16 108, i16 111, i16 99, i16 97, i16 108, i16 101>, <8 x i16>* %164, align 2
  %165 = getelementptr inbounds i8, i8* %158, i64 32
  %166 = bitcast i8* %165 to <8 x i16>*
  store <8 x i16> <i16 32, i16 40, i16 97, i16 114, i16 45, i16 88, i16 66, i16 41>, <8 x i16>* %166, align 2
  %167 = getelementptr inbounds i8, i8* %158, i64 48
  %168 = bitcast i8* %167 to i16*
  store i16 0, i16* %168, align 2
  br label %264

169:                                              ; preds = %155, %145
  %170 = phi i8 [ %156, %155 ], [ %148, %145 ]
  %171 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #16
  store i32 0, i32* %8, align 4
  %172 = icmp slt i8 %170, 0
  %173 = load i8*, i8** %10, align 8
  %174 = select i1 %172, i8* %173, i8* %9
  %175 = load i8, i8* %174, align 1
  switch i8 %175, label %187 [
    i8 45, label %176
    i8 95, label %176
  ]

176:                                              ; preds = %169, %169
  %177 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %184 = select i1 %180, i8* %182, i8* %183
  %185 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.8"* nonnull %7, i64 1024) #16
  %186 = call i32 @uloc_getDisplayCountry_69(i8* %174, i8* %184, i16* %185, i32 1023, i32* nonnull %8) #16
  br label %198

187:                                              ; preds = %169
  %188 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %195 = select i1 %191, i8* %193, i8* %194
  %196 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.8"* nonnull %7, i64 1024) #16
  %197 = call i32 @uloc_getDisplayName_69(i8* %174, i8* %195, i16* %196, i32 1023, i32* nonnull %8) #16
  br label %198

198:                                              ; preds = %187, %176
  %199 = phi i32 [ %186, %176 ], [ %197, %187 ]
  %200 = load i32, i32* %8, align 4
  %201 = icmp eq i32 %200, -127
  %202 = and i1 %201, %4
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  %204 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #16
  br label %264

205:                                              ; preds = %198
  %206 = sext i32 %199 to i64
  %207 = bitcast %"class.std::__1::basic_string.8"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  %211 = load i64, i64* %114, align 8
  %212 = zext i8 %209 to i64
  %213 = select i1 %210, i64 %211, i64 %212
  %214 = icmp ult i64 %213, %206
  br i1 %214, label %215, label %249

215:                                              ; preds = %205
  %216 = sub i64 %206, %213
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %257, label %218

218:                                              ; preds = %215
  br i1 %210, label %219, label %223

219:                                              ; preds = %218
  %220 = load i64, i64* %115, align 8
  %221 = and i64 %220, 9223372036854775807
  %222 = add nsw i64 %221, -1
  br label %223

223:                                              ; preds = %218, %219
  %224 = phi i64 [ %222, %219 ], [ 10, %218 ]
  %225 = phi i64 [ %211, %219 ], [ %212, %218 ]
  %226 = sub i64 %224, %225
  %227 = icmp ult i64 %226, %216
  %228 = add i64 %225, %216
  br i1 %227, label %229, label %232

229:                                              ; preds = %223
  %230 = sub i64 %228, %224
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.8"* nonnull %7, i64 %224, i64 %230, i64 %225, i64 %225, i64 0, i64 0) #16
  %231 = load i8, i8* %208, align 1
  br label %232

232:                                              ; preds = %223, %229
  %233 = phi i8 [ %231, %229 ], [ %209, %223 ]
  %234 = icmp slt i8 %233, 0
  %235 = load i16*, i16** %113, align 8
  %236 = bitcast %"class.std::__1::basic_string.8"* %7 to i16*
  %237 = select i1 %234, i16* %235, i16* %236
  %238 = getelementptr inbounds i16, i16* %237, i64 %225
  %239 = bitcast i16* %238 to i8*
  %240 = sub i64 %206, %213
  %241 = shl i64 %240, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %239, i8 0, i64 %241, i1 false)
  %242 = load i8, i8* %208, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %232
  store i64 %228, i64* %114, align 8
  br label %247

245:                                              ; preds = %232
  %246 = trunc i64 %228 to i8
  store i8 %246, i8* %208, align 1
  br label %247

247:                                              ; preds = %245, %244
  %248 = getelementptr inbounds i16, i16* %237, i64 %228
  store i16 0, i16* %248, align 2
  br label %257

249:                                              ; preds = %205
  br i1 %210, label %250, label %253

250:                                              ; preds = %249
  %251 = load i16*, i16** %113, align 8
  %252 = getelementptr inbounds i16, i16* %251, i64 %206
  store i16 0, i16* %252, align 2
  store i64 %206, i64* %114, align 8
  br label %257

253:                                              ; preds = %249
  %254 = bitcast %"class.std::__1::basic_string.8"* %7 to i16*
  %255 = getelementptr inbounds i16, i16* %254, i64 %206
  store i16 0, i16* %255, align 2
  %256 = trunc i32 %199 to i8
  store i8 %256, i8* %208, align 1
  br label %257

257:                                              ; preds = %247, %215, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #16
  br i1 %3, label %258, label %262

258:                                              ; preds = %257
  %259 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %259, label %260, label %262

260:                                              ; preds = %258
  %261 = call zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull %7) #16
  br label %262

262:                                              ; preds = %260, %258, %257
  %263 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* nonnull align 8 %112, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 24, i1 false) #16
  br label %264

264:                                              ; preds = %203, %262, %157, %129
  %265 = bitcast %"class.std::__1::basic_string.8"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %265, i64 0, i32 1, i32 1
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %264
  %270 = bitcast %"class.std::__1::basic_string.8"* %7 to i8**
  %271 = load i8*, i8** %270, align 8
  call void @_ZdlPv(i8* %271) #18
  br label %272

272:                                              ; preds = %264, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #16
  %273 = load i8, i8* %26, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %272
  %276 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %276) #18
  br label %277

277:                                              ; preds = %272, %275
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16*, i64) local_unnamed_addr #3

declare void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

declare i32 @uloc_getDisplayCountry_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #3

declare i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.8"*, i64) local_unnamed_addr #3

declare i32 @uloc_getDisplayName_69(i8*, i8*, i16*, i32, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base4i18n5IsRTLEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util24GetDisplayNameForCountryERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string.8"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  call void @_ZN9l10n_util23GetDisplayNameForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_bb(%"class.std::__1::basic_string.8"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %2, i1 zeroext false, i1 zeroext false)
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #18
  br label %13

13:                                               ; preds = %3, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15NormalizeLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load i8, i8* %6, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #16
  br label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %15, i64 %17) #16
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %19

19:                                               ; preds = %10, %13
  %20 = phi i8* [ %11, %10 ], [ %18, %13 ]
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %3, align 8
  %26 = load i64, i64* %4, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i8* %25, i8* %20
  %29 = select i1 %24, i64 %26, i64 %27
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %135, label %32

32:                                               ; preds = %19
  %33 = icmp ult i64 %29, 16
  br i1 %33, label %125, label %34

34:                                               ; preds = %32
  %35 = and i64 %29, -16
  %36 = getelementptr i8, i8* %28, i64 %35
  br label %37

37:                                               ; preds = %120, %34
  %38 = phi i64 [ 0, %34 ], [ %121, %120 ]
  %39 = getelementptr i8, i8* %28, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %41, <i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45>
  %43 = extractelement <16 x i1> %42, i32 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %37
  store i8 95, i8* %39, align 1
  br label %45

45:                                               ; preds = %44, %37
  %46 = extractelement <16 x i1> %42, i32 1
  br i1 %46, label %47, label %50

47:                                               ; preds = %45
  %48 = or i64 %38, 1
  %49 = getelementptr i8, i8* %28, i64 %48
  store i8 95, i8* %49, align 1
  br label %50

50:                                               ; preds = %47, %45
  %51 = extractelement <16 x i1> %42, i32 2
  br i1 %51, label %52, label %55

52:                                               ; preds = %50
  %53 = or i64 %38, 2
  %54 = getelementptr i8, i8* %28, i64 %53
  store i8 95, i8* %54, align 1
  br label %55

55:                                               ; preds = %52, %50
  %56 = extractelement <16 x i1> %42, i32 3
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = or i64 %38, 3
  %59 = getelementptr i8, i8* %28, i64 %58
  store i8 95, i8* %59, align 1
  br label %60

60:                                               ; preds = %57, %55
  %61 = extractelement <16 x i1> %42, i32 4
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = or i64 %38, 4
  %64 = getelementptr i8, i8* %28, i64 %63
  store i8 95, i8* %64, align 1
  br label %65

65:                                               ; preds = %62, %60
  %66 = extractelement <16 x i1> %42, i32 5
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = or i64 %38, 5
  %69 = getelementptr i8, i8* %28, i64 %68
  store i8 95, i8* %69, align 1
  br label %70

70:                                               ; preds = %67, %65
  %71 = extractelement <16 x i1> %42, i32 6
  br i1 %71, label %72, label %75

72:                                               ; preds = %70
  %73 = or i64 %38, 6
  %74 = getelementptr i8, i8* %28, i64 %73
  store i8 95, i8* %74, align 1
  br label %75

75:                                               ; preds = %72, %70
  %76 = extractelement <16 x i1> %42, i32 7
  br i1 %76, label %77, label %80

77:                                               ; preds = %75
  %78 = or i64 %38, 7
  %79 = getelementptr i8, i8* %28, i64 %78
  store i8 95, i8* %79, align 1
  br label %80

80:                                               ; preds = %77, %75
  %81 = extractelement <16 x i1> %42, i32 8
  br i1 %81, label %82, label %85

82:                                               ; preds = %80
  %83 = or i64 %38, 8
  %84 = getelementptr i8, i8* %28, i64 %83
  store i8 95, i8* %84, align 1
  br label %85

85:                                               ; preds = %82, %80
  %86 = extractelement <16 x i1> %42, i32 9
  br i1 %86, label %87, label %90

87:                                               ; preds = %85
  %88 = or i64 %38, 9
  %89 = getelementptr i8, i8* %28, i64 %88
  store i8 95, i8* %89, align 1
  br label %90

90:                                               ; preds = %87, %85
  %91 = extractelement <16 x i1> %42, i32 10
  br i1 %91, label %92, label %95

92:                                               ; preds = %90
  %93 = or i64 %38, 10
  %94 = getelementptr i8, i8* %28, i64 %93
  store i8 95, i8* %94, align 1
  br label %95

95:                                               ; preds = %92, %90
  %96 = extractelement <16 x i1> %42, i32 11
  br i1 %96, label %97, label %100

97:                                               ; preds = %95
  %98 = or i64 %38, 11
  %99 = getelementptr i8, i8* %28, i64 %98
  store i8 95, i8* %99, align 1
  br label %100

100:                                              ; preds = %97, %95
  %101 = extractelement <16 x i1> %42, i32 12
  br i1 %101, label %102, label %105

102:                                              ; preds = %100
  %103 = or i64 %38, 12
  %104 = getelementptr i8, i8* %28, i64 %103
  store i8 95, i8* %104, align 1
  br label %105

105:                                              ; preds = %102, %100
  %106 = extractelement <16 x i1> %42, i32 13
  br i1 %106, label %107, label %110

107:                                              ; preds = %105
  %108 = or i64 %38, 13
  %109 = getelementptr i8, i8* %28, i64 %108
  store i8 95, i8* %109, align 1
  br label %110

110:                                              ; preds = %107, %105
  %111 = extractelement <16 x i1> %42, i32 14
  br i1 %111, label %112, label %115

112:                                              ; preds = %110
  %113 = or i64 %38, 14
  %114 = getelementptr i8, i8* %28, i64 %113
  store i8 95, i8* %114, align 1
  br label %115

115:                                              ; preds = %112, %110
  %116 = extractelement <16 x i1> %42, i32 15
  br i1 %116, label %117, label %120

117:                                              ; preds = %115
  %118 = or i64 %38, 15
  %119 = getelementptr i8, i8* %28, i64 %118
  store i8 95, i8* %119, align 1
  br label %120

120:                                              ; preds = %117, %115
  %121 = add i64 %38, 16
  %122 = icmp eq i64 %121, %35
  br i1 %122, label %123, label %37, !llvm.loop !8

123:                                              ; preds = %120
  %124 = icmp eq i64 %29, %35
  br i1 %124, label %135, label %125

125:                                              ; preds = %123, %32
  %126 = phi i8* [ %28, %32 ], [ %36, %123 ]
  br label %127

127:                                              ; preds = %125, %132
  %128 = phi i8* [ %133, %132 ], [ %126, %125 ]
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 45
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  store i8 95, i8* %128, align 1
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds i8, i8* %128, i64 1
  %134 = icmp eq i8* %133, %30
  br i1 %134, label %135, label %127, !llvm.loop !10

135:                                              ; preds = %132, %123, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util16GetParentLocalesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [256 x i8], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1, !noalias !12
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %17, i64 24, i1 false) #16
  br label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8, !noalias !12
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %20, i64 %22) #16
  br label %23

23:                                               ; preds = %18, %16
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !alias.scope !12
  %27 = icmp slt i8 %26, 0
  %28 = load i8*, i8** %9, align 8, !alias.scope !12
  %29 = load i64, i64* %10, align 8, !alias.scope !12
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i8* %28, i8* %8
  %32 = select i1 %27, i64 %29, i64 %30
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %141, label %35

35:                                               ; preds = %23
  %36 = icmp ult i64 %32, 16
  br i1 %36, label %128, label %37

37:                                               ; preds = %35
  %38 = and i64 %32, -16
  %39 = getelementptr i8, i8* %31, i64 %38
  br label %40

40:                                               ; preds = %123, %37
  %41 = phi i64 [ 0, %37 ], [ %124, %123 ]
  %42 = getelementptr i8, i8* %31, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %44, <i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45>
  %46 = extractelement <16 x i1> %45, i32 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  store i8 95, i8* %42, align 1
  br label %48

48:                                               ; preds = %47, %40
  %49 = extractelement <16 x i1> %45, i32 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %48
  %51 = or i64 %41, 1
  %52 = getelementptr i8, i8* %31, i64 %51
  store i8 95, i8* %52, align 1
  br label %53

53:                                               ; preds = %50, %48
  %54 = extractelement <16 x i1> %45, i32 2
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = or i64 %41, 2
  %57 = getelementptr i8, i8* %31, i64 %56
  store i8 95, i8* %57, align 1
  br label %58

58:                                               ; preds = %55, %53
  %59 = extractelement <16 x i1> %45, i32 3
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = or i64 %41, 3
  %62 = getelementptr i8, i8* %31, i64 %61
  store i8 95, i8* %62, align 1
  br label %63

63:                                               ; preds = %60, %58
  %64 = extractelement <16 x i1> %45, i32 4
  br i1 %64, label %65, label %68

65:                                               ; preds = %63
  %66 = or i64 %41, 4
  %67 = getelementptr i8, i8* %31, i64 %66
  store i8 95, i8* %67, align 1
  br label %68

68:                                               ; preds = %65, %63
  %69 = extractelement <16 x i1> %45, i32 5
  br i1 %69, label %70, label %73

70:                                               ; preds = %68
  %71 = or i64 %41, 5
  %72 = getelementptr i8, i8* %31, i64 %71
  store i8 95, i8* %72, align 1
  br label %73

73:                                               ; preds = %70, %68
  %74 = extractelement <16 x i1> %45, i32 6
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = or i64 %41, 6
  %77 = getelementptr i8, i8* %31, i64 %76
  store i8 95, i8* %77, align 1
  br label %78

78:                                               ; preds = %75, %73
  %79 = extractelement <16 x i1> %45, i32 7
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  %81 = or i64 %41, 7
  %82 = getelementptr i8, i8* %31, i64 %81
  store i8 95, i8* %82, align 1
  br label %83

83:                                               ; preds = %80, %78
  %84 = extractelement <16 x i1> %45, i32 8
  br i1 %84, label %85, label %88

85:                                               ; preds = %83
  %86 = or i64 %41, 8
  %87 = getelementptr i8, i8* %31, i64 %86
  store i8 95, i8* %87, align 1
  br label %88

88:                                               ; preds = %85, %83
  %89 = extractelement <16 x i1> %45, i32 9
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = or i64 %41, 9
  %92 = getelementptr i8, i8* %31, i64 %91
  store i8 95, i8* %92, align 1
  br label %93

93:                                               ; preds = %90, %88
  %94 = extractelement <16 x i1> %45, i32 10
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = or i64 %41, 10
  %97 = getelementptr i8, i8* %31, i64 %96
  store i8 95, i8* %97, align 1
  br label %98

98:                                               ; preds = %95, %93
  %99 = extractelement <16 x i1> %45, i32 11
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = or i64 %41, 11
  %102 = getelementptr i8, i8* %31, i64 %101
  store i8 95, i8* %102, align 1
  br label %103

103:                                              ; preds = %100, %98
  %104 = extractelement <16 x i1> %45, i32 12
  br i1 %104, label %105, label %108

105:                                              ; preds = %103
  %106 = or i64 %41, 12
  %107 = getelementptr i8, i8* %31, i64 %106
  store i8 95, i8* %107, align 1
  br label %108

108:                                              ; preds = %105, %103
  %109 = extractelement <16 x i1> %45, i32 13
  br i1 %109, label %110, label %113

110:                                              ; preds = %108
  %111 = or i64 %41, 13
  %112 = getelementptr i8, i8* %31, i64 %111
  store i8 95, i8* %112, align 1
  br label %113

113:                                              ; preds = %110, %108
  %114 = extractelement <16 x i1> %45, i32 14
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = or i64 %41, 14
  %117 = getelementptr i8, i8* %31, i64 %116
  store i8 95, i8* %117, align 1
  br label %118

118:                                              ; preds = %115, %113
  %119 = extractelement <16 x i1> %45, i32 15
  br i1 %119, label %120, label %123

120:                                              ; preds = %118
  %121 = or i64 %41, 15
  %122 = getelementptr i8, i8* %31, i64 %121
  store i8 95, i8* %122, align 1
  br label %123

123:                                              ; preds = %120, %118
  %124 = add i64 %41, 16
  %125 = icmp eq i64 %124, %38
  br i1 %125, label %126, label %40, !llvm.loop !15

126:                                              ; preds = %123
  %127 = icmp eq i64 %32, %38
  br i1 %127, label %138, label %128

128:                                              ; preds = %126, %35
  %129 = phi i8* [ %31, %35 ], [ %39, %126 ]
  br label %130

130:                                              ; preds = %128, %135
  %131 = phi i8* [ %136, %135 ], [ %129, %128 ]
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 45
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  store i8 95, i8* %131, align 1
  br label %135

135:                                              ; preds = %134, %130
  %136 = getelementptr inbounds i8, i8* %131, i64 1
  %137 = icmp eq i8* %136, %33
  br i1 %137, label %138, label %130, !llvm.loop !16

138:                                              ; preds = %135, %126
  %139 = load i8, i8* %25, align 1
  %140 = load i8*, i8** %9, align 8
  br label %141

141:                                              ; preds = %138, %23
  %142 = phi i8* [ %140, %138 ], [ %28, %23 ]
  %143 = phi i8 [ %139, %138 ], [ %26, %23 ]
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %144) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %144, i8 -86, i64 256, i1 false)
  %145 = icmp slt i8 %143, 0
  %146 = select i1 %145, i8* %142, i8* %8
  %147 = call i64 @_ZN4base7strlcpyEPcPKcm(i8* nonnull %144, i8* %146, i64 256) #16
  %148 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #16
  %149 = call i64 @strlen(i8* nonnull %144) #16
  %150 = icmp ugt i64 %149, -17
  br i1 %150, label %151, label %153

151:                                              ; preds = %141
  %152 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %152) #17
  unreachable

153:                                              ; preds = %141
  %154 = icmp ult i64 %149, 23
  br i1 %154, label %163, label %155

155:                                              ; preds = %153
  %156 = add nuw i64 %149, 16
  %157 = and i64 %156, -16
  %158 = call i8* @_Znwm(i64 %157) #18
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %158, i8** %159, align 8
  %160 = or i64 %157, -9223372036854775808
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %149, i64* %162, align 8
  br label %168

163:                                              ; preds = %153
  %164 = trunc i64 %149 to i8
  %165 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 %164, i8* %166, align 1
  %167 = icmp eq i64 %149, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163, %155
  %169 = phi i8* [ %158, %155 ], [ %148, %163 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* nonnull align 16 %144, i64 %149, i1 false) #16
  br label %170

170:                                              ; preds = %163, %168
  %171 = phi i8* [ %148, %163 ], [ %169, %168 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 %149
  store i8 0, i8* %172, align 1
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %174 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %176 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %175, align 8
  %177 = icmp ult %"class.std::__1::basic_string"* %174, %176
  br i1 %177, label %178, label %183

178:                                              ; preds = %170
  %179 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %148, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 0, i64 24, i1 false) #16
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %174, i64 1
  %181 = ptrtoint %"class.std::__1::basic_string"* %180 to i64
  %182 = bitcast %"class.std::__1::basic_string"** %173 to i64*
  store i64 %181, i64* %182, align 8
  br label %191

183:                                              ; preds = %170
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #16
  %184 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #18
  br label %191

191:                                              ; preds = %178, %183, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #16
  %192 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #16
  store i32 0, i32* %6, align 4
  %193 = call i32 @uloc_getParent_69(i8* nonnull %144, i8* nonnull %144, i32 256, i32* nonnull %6) #16
  %194 = icmp sgt i32 %193, 0
  %195 = load i32, i32* %6, align 4
  %196 = icmp slt i32 %195, 1
  %197 = and i1 %194, %196
  br i1 %197, label %198, label %244

198:                                              ; preds = %191
  %199 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = bitcast %"class.std::__1::basic_string"** %173 to i64*
  br label %206

206:                                              ; preds = %198, %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #16
  %207 = call i64 @strlen(i8* nonnull %144) #16
  %208 = icmp ugt i64 %207, -17
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %210) #17
  unreachable

211:                                              ; preds = %206
  %212 = icmp ult i64 %207, 23
  br i1 %212, label %218, label %213

213:                                              ; preds = %211
  %214 = add nuw i64 %207, 16
  %215 = and i64 %214, -16
  %216 = call i8* @_Znwm(i64 %215) #18
  store i8* %216, i8** %200, align 8
  %217 = or i64 %215, -9223372036854775808
  store i64 %217, i64* %201, align 8
  store i64 %207, i64* %202, align 8
  br label %221

218:                                              ; preds = %211
  %219 = trunc i64 %207 to i8
  store i8 %219, i8* %204, align 1
  %220 = icmp eq i64 %207, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %218, %213
  %222 = phi i8* [ %216, %213 ], [ %199, %218 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %222, i8* nonnull align 16 %144, i64 %207, i1 false) #16
  br label %223

223:                                              ; preds = %218, %221
  %224 = phi i8* [ %199, %218 ], [ %222, %221 ]
  %225 = getelementptr inbounds i8, i8* %224, i64 %207
  store i8 0, i8* %225, align 1
  %226 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %173, align 8
  %227 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %175, align 8
  %228 = icmp ult %"class.std::__1::basic_string"* %226, %227
  br i1 %228, label %229, label %233

229:                                              ; preds = %223
  %230 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* nonnull align 8 %199, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 0, i64 24, i1 false) #16
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 1
  %232 = ptrtoint %"class.std::__1::basic_string"* %231 to i64
  store i64 %232, i64* %205, align 8
  br label %238

233:                                              ; preds = %223
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #16
  %234 = load i8, i8* %204, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  %237 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %237) #18
  br label %238

238:                                              ; preds = %229, %233, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #16
  %239 = call i32 @uloc_getParent_69(i8* nonnull %144, i8* nonnull %144, i32 256, i32* nonnull %6) #16
  %240 = icmp sgt i32 %239, 0
  %241 = load i32, i32* %6, align 4
  %242 = icmp slt i32 %241, 1
  %243 = and i1 %240, %242
  br i1 %243, label %206, label %244

244:                                              ; preds = %238, %191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #16
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %144) #16
  %245 = load i8, i8* %25, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %244
  %248 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %248) #18
  br label %249

249:                                              ; preds = %244, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN4base7strlcpyEPcPKcm(i8*, i8*, i64) local_unnamed_addr #3

declare i32 @uloc_getParent_69(i8*, i8*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9l10n_util19IsValidLocaleSyntaxERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %312, label %14

14:                                               ; preds = %1
  br i1 %8, label %15, label %17

15:                                               ; preds = %14
  %16 = icmp ugt i64 %10, 156
  br i1 %16, label %312, label %22

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %21, i64 24, i1 false) #16
  br label %29

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %28, i64 %10) #16
  br label %29

29:                                               ; preds = %22, %17
  %30 = phi i64* [ %25, %22 ], [ %20, %17 ]
  %31 = phi i8** [ %24, %22 ], [ %19, %17 ]
  %32 = phi i8* [ %23, %22 ], [ %18, %17 ]
  %33 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1, !alias.scope !17
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %31, align 8, !alias.scope !17
  %38 = load i64, i64* %30, align 8, !alias.scope !17
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i8* %37, i8* %32
  %41 = select i1 %36, i64 %38, i64 %39
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %147, label %44

44:                                               ; preds = %29
  %45 = icmp ult i64 %41, 16
  br i1 %45, label %137, label %46

46:                                               ; preds = %44
  %47 = and i64 %41, -16
  %48 = getelementptr i8, i8* %40, i64 %47
  br label %49

49:                                               ; preds = %132, %46
  %50 = phi i64 [ 0, %46 ], [ %133, %132 ]
  %51 = getelementptr i8, i8* %40, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp eq <16 x i8> %53, <i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45>
  %55 = extractelement <16 x i1> %54, i32 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %49
  store i8 95, i8* %51, align 1
  br label %57

57:                                               ; preds = %56, %49
  %58 = extractelement <16 x i1> %54, i32 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = or i64 %50, 1
  %61 = getelementptr i8, i8* %40, i64 %60
  store i8 95, i8* %61, align 1
  br label %62

62:                                               ; preds = %59, %57
  %63 = extractelement <16 x i1> %54, i32 2
  br i1 %63, label %64, label %67

64:                                               ; preds = %62
  %65 = or i64 %50, 2
  %66 = getelementptr i8, i8* %40, i64 %65
  store i8 95, i8* %66, align 1
  br label %67

67:                                               ; preds = %64, %62
  %68 = extractelement <16 x i1> %54, i32 3
  br i1 %68, label %69, label %72

69:                                               ; preds = %67
  %70 = or i64 %50, 3
  %71 = getelementptr i8, i8* %40, i64 %70
  store i8 95, i8* %71, align 1
  br label %72

72:                                               ; preds = %69, %67
  %73 = extractelement <16 x i1> %54, i32 4
  br i1 %73, label %74, label %77

74:                                               ; preds = %72
  %75 = or i64 %50, 4
  %76 = getelementptr i8, i8* %40, i64 %75
  store i8 95, i8* %76, align 1
  br label %77

77:                                               ; preds = %74, %72
  %78 = extractelement <16 x i1> %54, i32 5
  br i1 %78, label %79, label %82

79:                                               ; preds = %77
  %80 = or i64 %50, 5
  %81 = getelementptr i8, i8* %40, i64 %80
  store i8 95, i8* %81, align 1
  br label %82

82:                                               ; preds = %79, %77
  %83 = extractelement <16 x i1> %54, i32 6
  br i1 %83, label %84, label %87

84:                                               ; preds = %82
  %85 = or i64 %50, 6
  %86 = getelementptr i8, i8* %40, i64 %85
  store i8 95, i8* %86, align 1
  br label %87

87:                                               ; preds = %84, %82
  %88 = extractelement <16 x i1> %54, i32 7
  br i1 %88, label %89, label %92

89:                                               ; preds = %87
  %90 = or i64 %50, 7
  %91 = getelementptr i8, i8* %40, i64 %90
  store i8 95, i8* %91, align 1
  br label %92

92:                                               ; preds = %89, %87
  %93 = extractelement <16 x i1> %54, i32 8
  br i1 %93, label %94, label %97

94:                                               ; preds = %92
  %95 = or i64 %50, 8
  %96 = getelementptr i8, i8* %40, i64 %95
  store i8 95, i8* %96, align 1
  br label %97

97:                                               ; preds = %94, %92
  %98 = extractelement <16 x i1> %54, i32 9
  br i1 %98, label %99, label %102

99:                                               ; preds = %97
  %100 = or i64 %50, 9
  %101 = getelementptr i8, i8* %40, i64 %100
  store i8 95, i8* %101, align 1
  br label %102

102:                                              ; preds = %99, %97
  %103 = extractelement <16 x i1> %54, i32 10
  br i1 %103, label %104, label %107

104:                                              ; preds = %102
  %105 = or i64 %50, 10
  %106 = getelementptr i8, i8* %40, i64 %105
  store i8 95, i8* %106, align 1
  br label %107

107:                                              ; preds = %104, %102
  %108 = extractelement <16 x i1> %54, i32 11
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = or i64 %50, 11
  %111 = getelementptr i8, i8* %40, i64 %110
  store i8 95, i8* %111, align 1
  br label %112

112:                                              ; preds = %109, %107
  %113 = extractelement <16 x i1> %54, i32 12
  br i1 %113, label %114, label %117

114:                                              ; preds = %112
  %115 = or i64 %50, 12
  %116 = getelementptr i8, i8* %40, i64 %115
  store i8 95, i8* %116, align 1
  br label %117

117:                                              ; preds = %114, %112
  %118 = extractelement <16 x i1> %54, i32 13
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = or i64 %50, 13
  %121 = getelementptr i8, i8* %40, i64 %120
  store i8 95, i8* %121, align 1
  br label %122

122:                                              ; preds = %119, %117
  %123 = extractelement <16 x i1> %54, i32 14
  br i1 %123, label %124, label %127

124:                                              ; preds = %122
  %125 = or i64 %50, 14
  %126 = getelementptr i8, i8* %40, i64 %125
  store i8 95, i8* %126, align 1
  br label %127

127:                                              ; preds = %124, %122
  %128 = extractelement <16 x i1> %54, i32 15
  br i1 %128, label %129, label %132

129:                                              ; preds = %127
  %130 = or i64 %50, 15
  %131 = getelementptr i8, i8* %40, i64 %130
  store i8 95, i8* %131, align 1
  br label %132

132:                                              ; preds = %129, %127
  %133 = add i64 %50, 16
  %134 = icmp eq i64 %133, %47
  br i1 %134, label %135, label %49, !llvm.loop !20

135:                                              ; preds = %132
  %136 = icmp eq i64 %41, %47
  br i1 %136, label %147, label %137

137:                                              ; preds = %135, %44
  %138 = phi i8* [ %40, %44 ], [ %48, %135 ]
  br label %139

139:                                              ; preds = %137, %144
  %140 = phi i8* [ %145, %144 ], [ %138, %137 ]
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %141, 45
  br i1 %142, label %143, label %144

143:                                              ; preds = %139
  store i8 95, i8* %140, align 1
  br label %144

144:                                              ; preds = %143, %139
  %145 = getelementptr inbounds i8, i8* %140, i64 1
  %146 = icmp eq i8* %145, %42
  br i1 %146, label %147, label %139, !llvm.loop !21

147:                                              ; preds = %144, %135, %29
  %148 = load i8, i8* %6, align 1
  %149 = icmp slt i8 %148, 0
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %153 = select i1 %149, i8* %151, i8* %152
  %154 = load i64, i64* %9, align 8
  %155 = zext i8 %148 to i64
  %156 = select i1 %149, i64 %154, i64 %155
  %157 = getelementptr inbounds i8, i8* %153, i64 %156
  %158 = ptrtoint i8* %157 to i64
  %159 = ptrtoint i8* %153 to i64
  %160 = icmp slt i64 %156, 1
  br i1 %160, label %236, label %161

161:                                              ; preds = %147, %169
  %162 = phi i64 [ %172, %169 ], [ %156, %147 ]
  %163 = phi i8* [ %170, %169 ], [ %153, %147 ]
  %164 = call i8* @memchr(i8* %163, i32 64, i64 %162) #16
  %165 = icmp eq i8* %164, null
  br i1 %165, label %236, label %166

166:                                              ; preds = %161
  %167 = load i8, i8* %164, align 1
  %168 = icmp eq i8 %167, 64
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %164, i64 1
  %171 = ptrtoint i8* %170 to i64
  %172 = sub i64 %158, %171
  %173 = icmp slt i64 %172, 1
  br i1 %173, label %236, label %161

174:                                              ; preds = %166
  %175 = ptrtoint i8* %164 to i64
  %176 = icmp eq i8* %164, %157
  %177 = sub i64 %175, %159
  %178 = icmp eq i64 %177, -1
  %179 = or i1 %176, %178
  br i1 %179, label %236, label %180

180:                                              ; preds = %174
  %181 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #16
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = add nuw i64 %177, 1
  %185 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  %186 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %184, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %185) #16
  %187 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %177, %"class.std::__1::allocator"* dereferenceable(1) %185) #16
  %188 = load i8, i8* %34, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %180
  %191 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %191) #18
  br label %192

192:                                              ; preds = %190, %180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %187, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #16
  %193 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = load i8*, i8** %182, align 8
  %198 = select i1 %196, i8* %197, i8* %181
  %199 = load i64, i64* %183, align 8
  %200 = zext i8 %195 to i64
  %201 = select i1 %196, i64 %199, i64 %200
  %202 = getelementptr inbounds i8, i8* %198, i64 %201
  %203 = ptrtoint i8* %202 to i64
  %204 = ptrtoint i8* %198 to i64
  %205 = icmp slt i64 %201, 1
  br i1 %205, label %229, label %206

206:                                              ; preds = %192, %214
  %207 = phi i64 [ %217, %214 ], [ %201, %192 ]
  %208 = phi i8* [ %215, %214 ], [ %198, %192 ]
  %209 = call i8* @memchr(i8* %208, i32 61, i64 %207) #16
  %210 = icmp eq i8* %209, null
  br i1 %210, label %229, label %211

211:                                              ; preds = %206
  %212 = load i8, i8* %209, align 1
  %213 = icmp eq i8 %212, 61
  br i1 %213, label %219, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds i8, i8* %209, i64 1
  %216 = ptrtoint i8* %215 to i64
  %217 = sub i64 %203, %216
  %218 = icmp slt i64 %217, 1
  br i1 %218, label %229, label %206

219:                                              ; preds = %211
  %220 = ptrtoint i8* %209 to i64
  %221 = icmp eq i8* %209, %202
  %222 = sub i64 %220, %204
  %223 = select i1 %221, i64 -1, i64 %222
  %224 = add i64 %223, 1
  %225 = icmp ult i64 %224, 2
  %226 = add i64 %201, -2
  %227 = icmp ugt i64 %223, %226
  %228 = or i1 %225, %227
  br i1 %228, label %229, label %233

229:                                              ; preds = %214, %206, %192, %219
  br i1 %196, label %230, label %231

230:                                              ; preds = %229
  call void @_ZdlPv(i8* %197) #18
  br label %231

231:                                              ; preds = %229, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #16
  %232 = load i8, i8* %34, align 1
  br label %305

233:                                              ; preds = %219
  br i1 %196, label %234, label %235

234:                                              ; preds = %233
  call void @_ZdlPv(i8* %197) #18
  br label %235

235:                                              ; preds = %233, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #16
  br label %236

236:                                              ; preds = %169, %161, %147, %174, %235
  %237 = load i8, i8* %34, align 1
  %238 = icmp slt i8 %237, 0
  %239 = load i8*, i8** %31, align 8
  %240 = load i64, i64* %30, align 8
  %241 = zext i8 %237 to i64
  %242 = select i1 %238, i8* %239, i8* %32
  %243 = select i1 %238, i64 %240, i64 %241
  %244 = getelementptr inbounds i8, i8* %242, i64 %243
  %245 = icmp eq i64 %243, 0
  br i1 %245, label %296, label %247

246:                                              ; preds = %258
  br i1 %245, label %296, label %261

247:                                              ; preds = %236, %258
  %248 = phi i8* [ %259, %258 ], [ %242, %236 ]
  %249 = load i8, i8* %248, align 1
  %250 = and i8 %249, -33
  %251 = add i8 %250, -65
  %252 = icmp ult i8 %251, 26
  br i1 %252, label %258, label %253

253:                                              ; preds = %247
  %254 = add i8 %249, -48
  %255 = icmp ult i8 %254, 10
  %256 = icmp eq i8 %249, 95
  %257 = or i1 %256, %255
  br i1 %257, label %258, label %305

258:                                              ; preds = %247, %253
  %259 = getelementptr inbounds i8, i8* %248, i64 1
  %260 = icmp eq i8* %259, %244
  br i1 %260, label %246, label %247

261:                                              ; preds = %246, %273
  %262 = phi i64 [ %274, %273 ], [ 0, %246 ]
  %263 = getelementptr inbounds i8, i8* %242, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = icmp eq i8 %264, 95
  br i1 %265, label %266, label %269

266:                                              ; preds = %261
  %267 = add i64 %262, -1
  %268 = icmp ugt i64 %267, 2
  br i1 %268, label %305, label %276

269:                                              ; preds = %261
  %270 = and i8 %264, -33
  %271 = add i8 %270, -65
  %272 = icmp ult i8 %271, 26
  br i1 %272, label %273, label %305

273:                                              ; preds = %269
  %274 = add nuw i64 %262, 1
  %275 = icmp ult i64 %274, %243
  br i1 %275, label %261, label %276

276:                                              ; preds = %273, %266
  br label %277

277:                                              ; preds = %276, %291
  %278 = phi i32 [ %293, %291 ], [ 0, %276 ]
  %279 = phi i32 [ %292, %291 ], [ 0, %276 ]
  %280 = phi i8* [ %294, %291 ], [ %242, %276 ]
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 95
  br i1 %282, label %285, label %283

283:                                              ; preds = %277
  %284 = add nsw i32 %279, 1
  br label %291

285:                                              ; preds = %277
  %286 = icmp sgt i32 %278, 0
  %287 = add i32 %279, -1
  %288 = icmp ugt i32 %287, 7
  %289 = and i1 %286, %288
  %290 = add nsw i32 %278, 1
  br i1 %289, label %305, label %291

291:                                              ; preds = %283, %285
  %292 = phi i32 [ 0, %285 ], [ %284, %283 ]
  %293 = phi i32 [ %290, %285 ], [ %278, %283 ]
  %294 = getelementptr inbounds i8, i8* %280, i64 1
  %295 = icmp eq i8* %294, %244
  br i1 %295, label %296, label %277

296:                                              ; preds = %291, %236, %246
  %297 = phi i32 [ 0, %246 ], [ 0, %236 ], [ %292, %291 ]
  %298 = phi i32 [ 0, %246 ], [ 0, %236 ], [ %293, %291 ]
  %299 = icmp ne i32 %298, 0
  %300 = add i32 %297, -1
  %301 = icmp ult i32 %300, 3
  %302 = icmp ult i32 %300, 8
  %303 = or i1 %301, %299
  %304 = and i1 %302, %303
  br label %305

305:                                              ; preds = %253, %269, %285, %296, %266, %231
  %306 = phi i8 [ %232, %231 ], [ %237, %266 ], [ %237, %296 ], [ %237, %285 ], [ %237, %269 ], [ %237, %253 ]
  %307 = phi i1 [ false, %231 ], [ false, %266 ], [ %304, %296 ], [ false, %285 ], [ false, %269 ], [ false, %253 ]
  %308 = icmp slt i8 %306, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %310) #18
  br label %311

311:                                              ; preds = %305, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  br label %312

312:                                              ; preds = %1, %15, %311
  %313 = phi i1 [ %307, %311 ], [ false, %15 ], [ false, %1 ]
  ret i1 %313
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util13GetStringUTF8Ei(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.8", align 8
  %4 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false) #16, !alias.scope !22
  call void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* nonnull sret %3, %"class.ui::ResourceBundle"* %5, i32 %1) #16
  %6 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %3) #16
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* nonnull %3, i64 0, i64 1, i16 zeroext 8207) #16
  br label %11

11:                                               ; preds = %2, %7, %9
  %12 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %19 = select i1 %15, i16* %17, i16* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %19, i64 %23) #16
  %24 = load i8, i8* %13, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %11
  %27 = bitcast %"class.std::__1::basic_string.8"* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %11, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.8"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16
  %4 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* sret %0, %"class.ui::ResourceBundle"* %3, i32 %1) #16
  %5 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* dereferenceable(24) %0) #16
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* %0, i64 0, i64 1, i16 zeroext 8207) #16
  br label %10

10:                                               ; preds = %2, %6, %8
  ret void
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #3

declare void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* sret, %"class.ui::ResourceBundle"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util12FormatStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS9_ImNS4_ImEEEE(%"class.std::__1::basic_string.8"* noalias sret, %"class.std::__1::basic_string.8"* dereferenceable(24), %"class.std::__1::vector.72"* dereferenceable(24), %"class.std::__1::vector.79"*) local_unnamed_addr #0 {
  %5 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load i8, i8* %6, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  tail call void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i16* %13, i64 %17, %"class.std::__1::vector.72"* dereferenceable(24) %2, %"class.std::__1::vector.79"* %3) #16
  %18 = tail call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %18, label %19, label %23

19:                                               ; preds = %4
  %20 = tail call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* dereferenceable(24) %0) #16
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* %0, i64 0, i64 1, i16 zeroext 8207) #16
  br label %23

23:                                               ; preds = %4, %19, %21
  ret void
}

declare void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.8"* sret, i16*, i64, %"class.std::__1::vector.72"* dereferenceable(24), %"class.std::__1::vector.79"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::vector.72"* dereferenceable(24), %"class.std::__1::vector.79"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string.8", align 8
  %6 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16
  %7 = bitcast %"class.std::__1::basic_string.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  call void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* nonnull sret %5, %"class.ui::ResourceBundle"* %6, i32 %1) #16
  %8 = bitcast %"class.std::__1::basic_string.8"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false) #16, !alias.scope !25
  %11 = load i8, i8* %9, align 1, !noalias !25
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8, !noalias !25
  %15 = bitcast %"class.std::__1::basic_string.8"* %5 to i16*
  %16 = select i1 %12, i16* %14, i16* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !25
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i16* %16, i64 %20, %"class.std::__1::vector.72"* dereferenceable(24) %2, %"class.std::__1::vector.79"* %3) #16
  %21 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %21, label %22, label %26

22:                                               ; preds = %4
  %23 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* dereferenceable(24) %0) #16
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* %0, i64 0, i64 1, i16 zeroext 8207) #16
  br label %26

26:                                               ; preds = %4, %22, %24
  %27 = load i8, i8* %9, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string.8"* %5 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull sret %4, i32 %1, %"class.std::__1::basic_string.8"* dereferenceable(24) %2)
  %6 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %13, i64 %17) #16
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %3
  %21 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %3, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.72", align 8
  %5 = alloca [1 x %"class.std::__1::basic_string.8"], align 8
  %6 = bitcast %"class.std::__1::vector.72"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to i8*
  %11 = bitcast %"class.std::__1::vector.72"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %12 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %17, i64 24, i1 false) #16
  br label %193

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to i16*
  %26 = trunc i64 %22 to i8
  %27 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1
  br label %46

29:                                               ; preds = %18
  %30 = icmp ugt i64 %22, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #17
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %22, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #17
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #18
  %41 = bitcast i8* %40 to i16*
  %42 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to i8**
  store i8* %40, i8** %42, align 8
  %43 = or i64 %35, -9223372036854775808
  %44 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %24
  %47 = phi i16* [ %25, %24 ], [ %41, %38 ]
  %48 = add nuw nsw i64 %22, 1
  %49 = add i64 %22, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %140, label %51

51:                                               ; preds = %46
  %52 = add i64 %22, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %20, i64 %52
  %55 = icmp ult i16* %47, %54
  %56 = icmp ult i16* %20, %53
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %51
  %59 = and i64 %49, -16
  %60 = sub i64 %48, %59
  %61 = getelementptr i16, i16* %20, i64 %59
  %62 = getelementptr i16, i16* %47, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %20, i64 %71
  %74 = getelementptr i16, i16* %47, i64 %71
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !28
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !28
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !31, !noalias !28
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !31, !noalias !28
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %20, i64 %83
  %85 = getelementptr i16, i16* %47, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !28
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !28
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !31, !noalias !28
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !31, !noalias !28
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %20, i64 %94
  %96 = getelementptr i16, i16* %47, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !28
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !28
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !31, !noalias !28
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !31, !noalias !28
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %20, i64 %105
  %107 = getelementptr i16, i16* %47, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !28
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !28
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !31, !noalias !28
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !31, !noalias !28
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !33

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %20, i64 %123
  %126 = getelementptr i16, i16* %47, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !28
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !28
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !31, !noalias !28
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !31, !noalias !28
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !34

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %49, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %51, %46
  %141 = phi i64 [ %48, %51 ], [ %48, %46 ], [ %60, %138 ]
  %142 = phi i16* [ %20, %51 ], [ %20, %46 ], [ %61, %138 ]
  %143 = phi i16* [ %47, %51 ], [ %47, %46 ], [ %62, %138 ]
  %144 = add i64 %141, -1
  %145 = and i64 %141, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %153, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %155, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %154, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %149, align 2
  store i16 %152, i16* %150, align 2
  %153 = add i64 %148, -1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = getelementptr inbounds i16, i16* %149, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !36

158:                                              ; preds = %147, %140
  %159 = phi i64 [ %141, %140 ], [ %153, %147 ]
  %160 = phi i16* [ %142, %140 ], [ %155, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %154, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %189, %163 ], [ %159, %158 ]
  %165 = phi i16* [ %191, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %190, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %166, i64 1
  %169 = getelementptr inbounds i16, i16* %165, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 2
  %172 = getelementptr inbounds i16, i16* %165, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %166, i64 3
  %175 = getelementptr inbounds i16, i16* %165, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %166, i64 4
  %178 = getelementptr inbounds i16, i16* %165, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %166, i64 5
  %181 = getelementptr inbounds i16, i16* %165, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %166, i64 6
  %184 = getelementptr inbounds i16, i16* %165, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %166, i64 7
  %187 = getelementptr inbounds i16, i16* %165, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %164, -8
  %190 = getelementptr inbounds i16, i16* %166, i64 8
  %191 = getelementptr inbounds i16, i16* %165, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !37

193:                                              ; preds = %158, %163, %138, %16
  %194 = tail call i8* @_Znwm(i64 24) #18
  %195 = bitcast %"class.std::__1::basic_string.8"** %8 to i8**
  store i8* %194, i8** %195, align 8
  %196 = bitcast %"class.std::__1::vector.72"* %4 to i8**
  store i8* %194, i8** %196, align 8
  %197 = getelementptr inbounds i8, i8* %194, i64 24
  %198 = bitcast %"class.std::__1::basic_string.8"** %9 to i8**
  store i8* %197, i8** %198, align 8
  %199 = bitcast %"class.std::__1::basic_string.8"** %8 to i64*
  %200 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %208, label %204

204:                                              ; preds = %193
  %205 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %194, i8* nonnull align 8 %205, i64 24, i1 false) #16
  %206 = getelementptr inbounds i8, i8* %194, i64 24
  %207 = ptrtoint i8* %206 to i64
  store i64 %207, i64* %199, align 8
  br label %397

208:                                              ; preds = %193
  %209 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i16*, i16** %209, align 8
  %211 = bitcast i16* %210 to i8*
  %212 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp ult i64 %213, 11
  br i1 %214, label %215, label %218

215:                                              ; preds = %208
  %216 = trunc i64 %213 to i8
  %217 = getelementptr inbounds i8, i8* %194, i64 23
  store i8 %216, i8* %217, align 1
  br label %236

218:                                              ; preds = %208
  %219 = icmp ugt i64 %213, 9223372036854775791
  br i1 %219, label %220, label %222

220:                                              ; preds = %218
  %221 = bitcast i8* %194 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %221) #17
  unreachable

222:                                              ; preds = %218
  %223 = add nuw nsw i64 %213, 8
  %224 = and i64 %223, -8
  %225 = icmp slt i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %222
  call void @abort() #17
  unreachable

227:                                              ; preds = %222
  %228 = shl i64 %224, 1
  %229 = call i8* @_Znwm(i64 %228) #18
  %230 = bitcast i8* %194 to i8**
  store i8* %229, i8** %230, align 8
  %231 = or i64 %224, -9223372036854775808
  %232 = getelementptr inbounds i8, i8* %194, i64 16
  %233 = bitcast i8* %232 to i64*
  store i64 %231, i64* %233, align 8
  %234 = getelementptr inbounds i8, i8* %194, i64 8
  %235 = bitcast i8* %234 to i64*
  store i64 %213, i64* %235, align 8
  br label %236

236:                                              ; preds = %227, %215
  %237 = phi i8* [ %194, %215 ], [ %229, %227 ]
  %238 = bitcast i8* %237 to i16*
  %239 = add nuw nsw i64 %213, 1
  %240 = add i64 %213, 1
  %241 = icmp ult i64 %240, 16
  br i1 %241, label %334, label %242

242:                                              ; preds = %236
  %243 = shl i64 %213, 1
  %244 = add i64 %243, 2
  %245 = getelementptr i8, i8* %237, i64 %244
  %246 = add i64 %213, 1
  %247 = getelementptr i16, i16* %210, i64 %246
  %248 = bitcast i16* %247 to i8*
  %249 = icmp ult i8* %237, %248
  %250 = icmp ugt i8* %245, %211
  %251 = and i1 %249, %250
  br i1 %251, label %334, label %252

252:                                              ; preds = %242
  %253 = and i64 %240, -16
  %254 = sub i64 %239, %253
  %255 = getelementptr i16, i16* %210, i64 %253
  %256 = getelementptr i16, i16* %238, i64 %253
  %257 = add i64 %253, -16
  %258 = lshr exact i64 %257, 4
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 48
  br i1 %261, label %313, label %262

262:                                              ; preds = %252
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr i16, i16* %210, i64 %265
  %268 = getelementptr i16, i16* %238, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !38
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !38
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !41, !noalias !38
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !41, !noalias !38
  %277 = or i64 %265, 16
  %278 = getelementptr i16, i16* %210, i64 %277
  %279 = getelementptr i16, i16* %238, i64 %277
  %280 = bitcast i16* %278 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !38
  %282 = getelementptr i16, i16* %278, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !38
  %285 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %285, align 2, !alias.scope !41, !noalias !38
  %286 = getelementptr i16, i16* %279, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %287, align 2, !alias.scope !41, !noalias !38
  %288 = or i64 %265, 32
  %289 = getelementptr i16, i16* %210, i64 %288
  %290 = getelementptr i16, i16* %238, i64 %288
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !38
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !38
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !41, !noalias !38
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !41, !noalias !38
  %299 = or i64 %265, 48
  %300 = getelementptr i16, i16* %210, i64 %299
  %301 = getelementptr i16, i16* %238, i64 %299
  %302 = bitcast i16* %300 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !38
  %304 = getelementptr i16, i16* %300, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !38
  %307 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %307, align 2, !alias.scope !41, !noalias !38
  %308 = getelementptr i16, i16* %301, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %309, align 2, !alias.scope !41, !noalias !38
  %310 = add i64 %265, 64
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !43

313:                                              ; preds = %264, %252
  %314 = phi i64 [ 0, %252 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr i16, i16* %210, i64 %317
  %320 = getelementptr i16, i16* %238, i64 %317
  %321 = bitcast i16* %319 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !38
  %323 = getelementptr i16, i16* %319, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  %325 = load <8 x i16>, <8 x i16>* %324, align 2, !alias.scope !38
  %326 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %326, align 2, !alias.scope !41, !noalias !38
  %327 = getelementptr i16, i16* %320, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %325, <8 x i16>* %328, align 2, !alias.scope !41, !noalias !38
  %329 = add i64 %317, 16
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !44

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %240, %253
  br i1 %333, label %387, label %334

334:                                              ; preds = %332, %242, %236
  %335 = phi i64 [ %239, %242 ], [ %239, %236 ], [ %254, %332 ]
  %336 = phi i16* [ %210, %242 ], [ %210, %236 ], [ %255, %332 ]
  %337 = phi i16* [ %238, %242 ], [ %238, %236 ], [ %256, %332 ]
  %338 = add i64 %335, -1
  %339 = and i64 %335, 7
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %352, label %341

341:                                              ; preds = %334, %341
  %342 = phi i64 [ %347, %341 ], [ %335, %334 ]
  %343 = phi i16* [ %349, %341 ], [ %336, %334 ]
  %344 = phi i16* [ %348, %341 ], [ %337, %334 ]
  %345 = phi i64 [ %350, %341 ], [ %339, %334 ]
  %346 = load i16, i16* %343, align 2
  store i16 %346, i16* %344, align 2
  %347 = add i64 %342, -1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = getelementptr inbounds i16, i16* %343, i64 1
  %350 = add i64 %345, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %341, !llvm.loop !45

352:                                              ; preds = %341, %334
  %353 = phi i64 [ %335, %334 ], [ %347, %341 ]
  %354 = phi i16* [ %336, %334 ], [ %349, %341 ]
  %355 = phi i16* [ %337, %334 ], [ %348, %341 ]
  %356 = icmp ult i64 %338, 7
  br i1 %356, label %387, label %357

357:                                              ; preds = %352, %357
  %358 = phi i64 [ %383, %357 ], [ %353, %352 ]
  %359 = phi i16* [ %385, %357 ], [ %354, %352 ]
  %360 = phi i16* [ %384, %357 ], [ %355, %352 ]
  %361 = load i16, i16* %359, align 2
  store i16 %361, i16* %360, align 2
  %362 = getelementptr inbounds i16, i16* %360, i64 1
  %363 = getelementptr inbounds i16, i16* %359, i64 1
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %360, i64 2
  %366 = getelementptr inbounds i16, i16* %359, i64 2
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %360, i64 3
  %369 = getelementptr inbounds i16, i16* %359, i64 3
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %360, i64 4
  %372 = getelementptr inbounds i16, i16* %359, i64 4
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = getelementptr inbounds i16, i16* %360, i64 5
  %375 = getelementptr inbounds i16, i16* %359, i64 5
  %376 = load i16, i16* %375, align 2
  store i16 %376, i16* %374, align 2
  %377 = getelementptr inbounds i16, i16* %360, i64 6
  %378 = getelementptr inbounds i16, i16* %359, i64 6
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = getelementptr inbounds i16, i16* %360, i64 7
  %381 = getelementptr inbounds i16, i16* %359, i64 7
  %382 = load i16, i16* %381, align 2
  store i16 %382, i16* %380, align 2
  %383 = add i64 %358, -8
  %384 = getelementptr inbounds i16, i16* %360, i64 8
  %385 = getelementptr inbounds i16, i16* %359, i64 8
  %386 = icmp eq i64 %383, 0
  br i1 %386, label %387, label %357, !llvm.loop !46

387:                                              ; preds = %352, %357, %332
  %388 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %388, i64 0, i32 1, i32 1
  %390 = load i8, i8* %389, align 1
  %391 = getelementptr inbounds i8, i8* %194, i64 24
  %392 = ptrtoint i8* %391 to i64
  store i64 %392, i64* %199, align 8
  %393 = icmp slt i8 %390, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %387
  %395 = bitcast [1 x %"class.std::__1::basic_string.8"]* %5 to i8**
  %396 = load i8*, i8** %395, align 8
  call void @_ZdlPv(i8* %396) #18
  br label %397

397:                                              ; preds = %204, %387, %394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.79"* null)
  %398 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %7, align 8
  %399 = icmp eq %"class.std::__1::basic_string.8"* %398, null
  br i1 %399, label %420, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.std::__1::basic_string.8"* %398 to i8*
  %402 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %8, align 8
  %403 = icmp eq %"class.std::__1::basic_string.8"* %402, %398
  br i1 %403, label %418, label %404

404:                                              ; preds = %400, %414
  %405 = phi %"class.std::__1::basic_string.8"* [ %406, %414 ], [ %402, %400 ]
  %406 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %405, i64 -1
  %407 = bitcast %"class.std::__1::basic_string.8"* %406 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %407, i64 0, i32 1, i32 1
  %409 = load i8, i8* %408, align 1
  %410 = icmp slt i8 %409, 0
  br i1 %410, label %411, label %414

411:                                              ; preds = %404
  %412 = bitcast %"class.std::__1::basic_string.8"* %406 to i8**
  %413 = load i8*, i8** %412, align 8
  call void @_ZdlPv(i8* %413) #18
  br label %414

414:                                              ; preds = %411, %404
  %415 = icmp eq %"class.std::__1::basic_string.8"* %406, %398
  br i1 %415, label %416, label %404

416:                                              ; preds = %414
  %417 = load i8*, i8** %196, align 8
  br label %418

418:                                              ; preds = %416, %400
  %419 = phi i8* [ %417, %416 ], [ %401, %400 ]
  store %"class.std::__1::basic_string.8"* %398, %"class.std::__1::basic_string.8"** %8, align 8
  call void @_ZdlPv(i8* %419) #18
  br label %420

420:                                              ; preds = %397, %418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string.8", align 8
  %6 = bitcast %"class.std::__1::basic_string.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_PNS0_6vectorImNS4_ImEEEE(%"class.std::__1::basic_string.8"* nonnull sret %5, i32 %1, %"class.std::__1::basic_string.8"* dereferenceable(24) %2, %"class.std::__1::basic_string.8"* dereferenceable(24) %3, %"class.std::__1::vector.79"* null) #16
  %7 = bitcast %"class.std::__1::basic_string.8"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string.8"* %5 to i16*
  %14 = select i1 %10, i16* %12, i16* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %14, i64 %18) #16
  %19 = load i8, i8* %8, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = bitcast %"class.std::__1::basic_string.8"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #18
  br label %24

24:                                               ; preds = %4, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  tail call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_PNS0_6vectorImNS4_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::basic_string.8"* dereferenceable(24) %2, %"class.std::__1::basic_string.8"* dereferenceable(24) %3, %"class.std::__1::vector.79"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string.8", align 8
  %7 = bitcast %"class.std::__1::basic_string.8"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.8"* nonnull sret %6, i32 %1, %"class.std::__1::basic_string.8"* dereferenceable(24) %2, %"class.std::__1::basic_string.8"* dereferenceable(24) %3, %"class.std::__1::basic_string.8"* dereferenceable(24) %4)
  %8 = bitcast %"class.std::__1::basic_string.8"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string.8"* %6 to i16*
  %15 = select i1 %11, i16* %13, i16* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %15, i64 %19) #16
  %20 = load i8, i8* %9, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %5
  %23 = bitcast %"class.std::__1::basic_string.8"* %6 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %5, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector.72", align 8
  %7 = alloca [3 x %"class.std::__1::basic_string.8"], align 8
  %8 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to i8*
  %13 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #16
  %14 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %19, i64 24, i1 false) #16
  br label %195

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %34) #17
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #18
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !47
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !47
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !50, !noalias !47
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !50, !noalias !47
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !47
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !47
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !50, !noalias !47
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !50, !noalias !47
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !47
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !47
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !50, !noalias !47
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !50, !noalias !47
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !47
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !47
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !50, !noalias !47
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !50, !noalias !47
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !52

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !47
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !47
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !50, !noalias !47
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !50, !noalias !47
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !53

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !54

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !55

195:                                              ; preds = %160, %165, %140, %18
  %196 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %197 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %197, i64 0, i32 1, i32 1
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.8"* %196 to i8*
  %203 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 24, i1 false) #16
  br label %379

204:                                              ; preds = %195
  %205 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %208, 11
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  %211 = bitcast %"class.std::__1::basic_string.8"* %196 to i16*
  %212 = trunc i64 %208 to i8
  %213 = bitcast %"class.std::__1::basic_string.8"* %196 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %213, i64 0, i32 1, i32 1
  store i8 %212, i8* %214, align 1
  br label %232

215:                                              ; preds = %204
  %216 = icmp ugt i64 %208, 9223372036854775791
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = bitcast %"class.std::__1::basic_string.8"* %196 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %218) #17
  unreachable

219:                                              ; preds = %215
  %220 = add nuw nsw i64 %208, 8
  %221 = and i64 %220, -8
  %222 = icmp slt i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  tail call void @abort() #17
  unreachable

224:                                              ; preds = %219
  %225 = shl i64 %221, 1
  %226 = tail call i8* @_Znwm(i64 %225) #18
  %227 = bitcast i8* %226 to i16*
  %228 = bitcast %"class.std::__1::basic_string.8"* %196 to i8**
  store i8* %226, i8** %228, align 8
  %229 = or i64 %221, -9223372036854775808
  %230 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %231, align 8
  br label %232

232:                                              ; preds = %224, %210
  %233 = phi i16* [ %211, %210 ], [ %227, %224 ]
  %234 = add nuw nsw i64 %208, 1
  %235 = add i64 %208, 1
  %236 = icmp ult i64 %235, 16
  br i1 %236, label %326, label %237

237:                                              ; preds = %232
  %238 = add i64 %208, 1
  %239 = getelementptr i16, i16* %233, i64 %238
  %240 = getelementptr i16, i16* %206, i64 %238
  %241 = icmp ult i16* %233, %240
  %242 = icmp ult i16* %206, %239
  %243 = and i1 %241, %242
  br i1 %243, label %326, label %244

244:                                              ; preds = %237
  %245 = and i64 %235, -16
  %246 = sub i64 %234, %245
  %247 = getelementptr i16, i16* %206, i64 %245
  %248 = getelementptr i16, i16* %233, i64 %245
  %249 = add i64 %245, -16
  %250 = lshr exact i64 %249, 4
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp ult i64 %249, 48
  br i1 %253, label %305, label %254

254:                                              ; preds = %244
  %255 = sub nsw i64 %251, %252
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i64 [ 0, %254 ], [ %302, %256 ]
  %258 = phi i64 [ %255, %254 ], [ %303, %256 ]
  %259 = getelementptr i16, i16* %206, i64 %257
  %260 = getelementptr i16, i16* %233, i64 %257
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !56
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !56
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !59, !noalias !56
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !59, !noalias !56
  %269 = or i64 %257, 16
  %270 = getelementptr i16, i16* %206, i64 %269
  %271 = getelementptr i16, i16* %233, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !56
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !56
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !59, !noalias !56
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !59, !noalias !56
  %280 = or i64 %257, 32
  %281 = getelementptr i16, i16* %206, i64 %280
  %282 = getelementptr i16, i16* %233, i64 %280
  %283 = bitcast i16* %281 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !56
  %285 = getelementptr i16, i16* %281, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !56
  %288 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !59, !noalias !56
  %289 = getelementptr i16, i16* %282, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !59, !noalias !56
  %291 = or i64 %257, 48
  %292 = getelementptr i16, i16* %206, i64 %291
  %293 = getelementptr i16, i16* %233, i64 %291
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !56
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !56
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !59, !noalias !56
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !59, !noalias !56
  %302 = add i64 %257, 64
  %303 = add i64 %258, -4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %256, !llvm.loop !61

305:                                              ; preds = %256, %244
  %306 = phi i64 [ 0, %244 ], [ %302, %256 ]
  %307 = icmp eq i64 %252, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %321, %308 ], [ %306, %305 ]
  %310 = phi i64 [ %322, %308 ], [ %252, %305 ]
  %311 = getelementptr i16, i16* %206, i64 %309
  %312 = getelementptr i16, i16* %233, i64 %309
  %313 = bitcast i16* %311 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !56
  %315 = getelementptr i16, i16* %311, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !56
  %318 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !59, !noalias !56
  %319 = getelementptr i16, i16* %312, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !59, !noalias !56
  %321 = add i64 %309, 16
  %322 = add i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %308, !llvm.loop !62

324:                                              ; preds = %308, %305
  %325 = icmp eq i64 %235, %245
  br i1 %325, label %379, label %326

326:                                              ; preds = %324, %237, %232
  %327 = phi i64 [ %234, %237 ], [ %234, %232 ], [ %246, %324 ]
  %328 = phi i16* [ %206, %237 ], [ %206, %232 ], [ %247, %324 ]
  %329 = phi i16* [ %233, %237 ], [ %233, %232 ], [ %248, %324 ]
  %330 = add i64 %327, -1
  %331 = and i64 %327, 7
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %326, %333
  %334 = phi i64 [ %339, %333 ], [ %327, %326 ]
  %335 = phi i16* [ %341, %333 ], [ %328, %326 ]
  %336 = phi i16* [ %340, %333 ], [ %329, %326 ]
  %337 = phi i64 [ %342, %333 ], [ %331, %326 ]
  %338 = load i16, i16* %335, align 2
  store i16 %338, i16* %336, align 2
  %339 = add i64 %334, -1
  %340 = getelementptr inbounds i16, i16* %336, i64 1
  %341 = getelementptr inbounds i16, i16* %335, i64 1
  %342 = add i64 %337, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %333, !llvm.loop !63

344:                                              ; preds = %333, %326
  %345 = phi i64 [ %327, %326 ], [ %339, %333 ]
  %346 = phi i16* [ %328, %326 ], [ %341, %333 ]
  %347 = phi i16* [ %329, %326 ], [ %340, %333 ]
  %348 = icmp ult i64 %330, 7
  br i1 %348, label %379, label %349

349:                                              ; preds = %344, %349
  %350 = phi i64 [ %375, %349 ], [ %345, %344 ]
  %351 = phi i16* [ %377, %349 ], [ %346, %344 ]
  %352 = phi i16* [ %376, %349 ], [ %347, %344 ]
  %353 = load i16, i16* %351, align 2
  store i16 %353, i16* %352, align 2
  %354 = getelementptr inbounds i16, i16* %352, i64 1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %352, i64 2
  %358 = getelementptr inbounds i16, i16* %351, i64 2
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %352, i64 3
  %361 = getelementptr inbounds i16, i16* %351, i64 3
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %352, i64 4
  %364 = getelementptr inbounds i16, i16* %351, i64 4
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %352, i64 5
  %367 = getelementptr inbounds i16, i16* %351, i64 5
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %352, i64 6
  %370 = getelementptr inbounds i16, i16* %351, i64 6
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %352, i64 7
  %373 = getelementptr inbounds i16, i16* %351, i64 7
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = add i64 %350, -8
  %376 = getelementptr inbounds i16, i16* %352, i64 8
  %377 = getelementptr inbounds i16, i16* %351, i64 8
  %378 = icmp eq i64 %375, 0
  br i1 %378, label %379, label %349, !llvm.loop !64

379:                                              ; preds = %344, %349, %324, %201
  %380 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2
  %381 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %381, i64 0, i32 1, i32 1
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %388, label %385

385:                                              ; preds = %379
  %386 = bitcast %"class.std::__1::basic_string.8"* %380 to i8*
  %387 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 8 %387, i64 24, i1 false) #16
  br label %563

388:                                              ; preds = %379
  %389 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load i16*, i16** %389, align 8
  %391 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %392 = load i64, i64* %391, align 8
  %393 = icmp ult i64 %392, 11
  br i1 %393, label %394, label %399

394:                                              ; preds = %388
  %395 = bitcast %"class.std::__1::basic_string.8"* %380 to i16*
  %396 = trunc i64 %392 to i8
  %397 = bitcast %"class.std::__1::basic_string.8"* %380 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %397, i64 0, i32 1, i32 1
  store i8 %396, i8* %398, align 1
  br label %416

399:                                              ; preds = %388
  %400 = icmp ugt i64 %392, 9223372036854775791
  br i1 %400, label %401, label %403

401:                                              ; preds = %399
  %402 = bitcast %"class.std::__1::basic_string.8"* %380 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %402) #17
  unreachable

403:                                              ; preds = %399
  %404 = add nuw nsw i64 %392, 8
  %405 = and i64 %404, -8
  %406 = icmp slt i64 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %403
  tail call void @abort() #17
  unreachable

408:                                              ; preds = %403
  %409 = shl i64 %405, 1
  %410 = tail call i8* @_Znwm(i64 %409) #18
  %411 = bitcast i8* %410 to i16*
  %412 = bitcast %"class.std::__1::basic_string.8"* %380 to i8**
  store i8* %410, i8** %412, align 8
  %413 = or i64 %405, -9223372036854775808
  %414 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %413, i64* %414, align 8
  %415 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %392, i64* %415, align 8
  br label %416

416:                                              ; preds = %408, %394
  %417 = phi i16* [ %395, %394 ], [ %411, %408 ]
  %418 = add nuw nsw i64 %392, 1
  %419 = add i64 %392, 1
  %420 = icmp ult i64 %419, 16
  br i1 %420, label %510, label %421

421:                                              ; preds = %416
  %422 = add i64 %392, 1
  %423 = getelementptr i16, i16* %417, i64 %422
  %424 = getelementptr i16, i16* %390, i64 %422
  %425 = icmp ult i16* %417, %424
  %426 = icmp ult i16* %390, %423
  %427 = and i1 %425, %426
  br i1 %427, label %510, label %428

428:                                              ; preds = %421
  %429 = and i64 %419, -16
  %430 = sub i64 %418, %429
  %431 = getelementptr i16, i16* %390, i64 %429
  %432 = getelementptr i16, i16* %417, i64 %429
  %433 = add i64 %429, -16
  %434 = lshr exact i64 %433, 4
  %435 = add nuw nsw i64 %434, 1
  %436 = and i64 %435, 3
  %437 = icmp ult i64 %433, 48
  br i1 %437, label %489, label %438

438:                                              ; preds = %428
  %439 = sub nsw i64 %435, %436
  br label %440

440:                                              ; preds = %440, %438
  %441 = phi i64 [ 0, %438 ], [ %486, %440 ]
  %442 = phi i64 [ %439, %438 ], [ %487, %440 ]
  %443 = getelementptr i16, i16* %390, i64 %441
  %444 = getelementptr i16, i16* %417, i64 %441
  %445 = bitcast i16* %443 to <8 x i16>*
  %446 = load <8 x i16>, <8 x i16>* %445, align 2, !alias.scope !65
  %447 = getelementptr i16, i16* %443, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  %449 = load <8 x i16>, <8 x i16>* %448, align 2, !alias.scope !65
  %450 = bitcast i16* %444 to <8 x i16>*
  store <8 x i16> %446, <8 x i16>* %450, align 2, !alias.scope !68, !noalias !65
  %451 = getelementptr i16, i16* %444, i64 8
  %452 = bitcast i16* %451 to <8 x i16>*
  store <8 x i16> %449, <8 x i16>* %452, align 2, !alias.scope !68, !noalias !65
  %453 = or i64 %441, 16
  %454 = getelementptr i16, i16* %390, i64 %453
  %455 = getelementptr i16, i16* %417, i64 %453
  %456 = bitcast i16* %454 to <8 x i16>*
  %457 = load <8 x i16>, <8 x i16>* %456, align 2, !alias.scope !65
  %458 = getelementptr i16, i16* %454, i64 8
  %459 = bitcast i16* %458 to <8 x i16>*
  %460 = load <8 x i16>, <8 x i16>* %459, align 2, !alias.scope !65
  %461 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> %457, <8 x i16>* %461, align 2, !alias.scope !68, !noalias !65
  %462 = getelementptr i16, i16* %455, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  store <8 x i16> %460, <8 x i16>* %463, align 2, !alias.scope !68, !noalias !65
  %464 = or i64 %441, 32
  %465 = getelementptr i16, i16* %390, i64 %464
  %466 = getelementptr i16, i16* %417, i64 %464
  %467 = bitcast i16* %465 to <8 x i16>*
  %468 = load <8 x i16>, <8 x i16>* %467, align 2, !alias.scope !65
  %469 = getelementptr i16, i16* %465, i64 8
  %470 = bitcast i16* %469 to <8 x i16>*
  %471 = load <8 x i16>, <8 x i16>* %470, align 2, !alias.scope !65
  %472 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %468, <8 x i16>* %472, align 2, !alias.scope !68, !noalias !65
  %473 = getelementptr i16, i16* %466, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  store <8 x i16> %471, <8 x i16>* %474, align 2, !alias.scope !68, !noalias !65
  %475 = or i64 %441, 48
  %476 = getelementptr i16, i16* %390, i64 %475
  %477 = getelementptr i16, i16* %417, i64 %475
  %478 = bitcast i16* %476 to <8 x i16>*
  %479 = load <8 x i16>, <8 x i16>* %478, align 2, !alias.scope !65
  %480 = getelementptr i16, i16* %476, i64 8
  %481 = bitcast i16* %480 to <8 x i16>*
  %482 = load <8 x i16>, <8 x i16>* %481, align 2, !alias.scope !65
  %483 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %479, <8 x i16>* %483, align 2, !alias.scope !68, !noalias !65
  %484 = getelementptr i16, i16* %477, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %482, <8 x i16>* %485, align 2, !alias.scope !68, !noalias !65
  %486 = add i64 %441, 64
  %487 = add i64 %442, -4
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %440, !llvm.loop !70

489:                                              ; preds = %440, %428
  %490 = phi i64 [ 0, %428 ], [ %486, %440 ]
  %491 = icmp eq i64 %436, 0
  br i1 %491, label %508, label %492

492:                                              ; preds = %489, %492
  %493 = phi i64 [ %505, %492 ], [ %490, %489 ]
  %494 = phi i64 [ %506, %492 ], [ %436, %489 ]
  %495 = getelementptr i16, i16* %390, i64 %493
  %496 = getelementptr i16, i16* %417, i64 %493
  %497 = bitcast i16* %495 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !65
  %499 = getelementptr i16, i16* %495, i64 8
  %500 = bitcast i16* %499 to <8 x i16>*
  %501 = load <8 x i16>, <8 x i16>* %500, align 2, !alias.scope !65
  %502 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %502, align 2, !alias.scope !68, !noalias !65
  %503 = getelementptr i16, i16* %496, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> %501, <8 x i16>* %504, align 2, !alias.scope !68, !noalias !65
  %505 = add i64 %493, 16
  %506 = add i64 %494, -1
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %492, !llvm.loop !71

508:                                              ; preds = %492, %489
  %509 = icmp eq i64 %419, %429
  br i1 %509, label %563, label %510

510:                                              ; preds = %508, %421, %416
  %511 = phi i64 [ %418, %421 ], [ %418, %416 ], [ %430, %508 ]
  %512 = phi i16* [ %390, %421 ], [ %390, %416 ], [ %431, %508 ]
  %513 = phi i16* [ %417, %421 ], [ %417, %416 ], [ %432, %508 ]
  %514 = add i64 %511, -1
  %515 = and i64 %511, 7
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %528, label %517

517:                                              ; preds = %510, %517
  %518 = phi i64 [ %523, %517 ], [ %511, %510 ]
  %519 = phi i16* [ %525, %517 ], [ %512, %510 ]
  %520 = phi i16* [ %524, %517 ], [ %513, %510 ]
  %521 = phi i64 [ %526, %517 ], [ %515, %510 ]
  %522 = load i16, i16* %519, align 2
  store i16 %522, i16* %520, align 2
  %523 = add i64 %518, -1
  %524 = getelementptr inbounds i16, i16* %520, i64 1
  %525 = getelementptr inbounds i16, i16* %519, i64 1
  %526 = add i64 %521, -1
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %528, label %517, !llvm.loop !72

528:                                              ; preds = %517, %510
  %529 = phi i64 [ %511, %510 ], [ %523, %517 ]
  %530 = phi i16* [ %512, %510 ], [ %525, %517 ]
  %531 = phi i16* [ %513, %510 ], [ %524, %517 ]
  %532 = icmp ult i64 %514, 7
  br i1 %532, label %563, label %533

533:                                              ; preds = %528, %533
  %534 = phi i64 [ %559, %533 ], [ %529, %528 ]
  %535 = phi i16* [ %561, %533 ], [ %530, %528 ]
  %536 = phi i16* [ %560, %533 ], [ %531, %528 ]
  %537 = load i16, i16* %535, align 2
  store i16 %537, i16* %536, align 2
  %538 = getelementptr inbounds i16, i16* %536, i64 1
  %539 = getelementptr inbounds i16, i16* %535, i64 1
  %540 = load i16, i16* %539, align 2
  store i16 %540, i16* %538, align 2
  %541 = getelementptr inbounds i16, i16* %536, i64 2
  %542 = getelementptr inbounds i16, i16* %535, i64 2
  %543 = load i16, i16* %542, align 2
  store i16 %543, i16* %541, align 2
  %544 = getelementptr inbounds i16, i16* %536, i64 3
  %545 = getelementptr inbounds i16, i16* %535, i64 3
  %546 = load i16, i16* %545, align 2
  store i16 %546, i16* %544, align 2
  %547 = getelementptr inbounds i16, i16* %536, i64 4
  %548 = getelementptr inbounds i16, i16* %535, i64 4
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = getelementptr inbounds i16, i16* %536, i64 5
  %551 = getelementptr inbounds i16, i16* %535, i64 5
  %552 = load i16, i16* %551, align 2
  store i16 %552, i16* %550, align 2
  %553 = getelementptr inbounds i16, i16* %536, i64 6
  %554 = getelementptr inbounds i16, i16* %535, i64 6
  %555 = load i16, i16* %554, align 2
  store i16 %555, i16* %553, align 2
  %556 = getelementptr inbounds i16, i16* %536, i64 7
  %557 = getelementptr inbounds i16, i16* %535, i64 7
  %558 = load i16, i16* %557, align 2
  store i16 %558, i16* %556, align 2
  %559 = add i64 %534, -8
  %560 = getelementptr inbounds i16, i16* %536, i64 8
  %561 = getelementptr inbounds i16, i16* %535, i64 8
  %562 = icmp eq i64 %559, 0
  br i1 %562, label %563, label %533, !llvm.loop !73

563:                                              ; preds = %528, %533, %508, %385
  %564 = tail call i8* @_Znwm(i64 72) #18
  %565 = bitcast %"class.std::__1::basic_string.8"** %10 to i8**
  store i8* %564, i8** %565, align 8
  %566 = bitcast %"class.std::__1::vector.72"* %6 to i8**
  store i8* %564, i8** %566, align 8
  %567 = getelementptr inbounds i8, i8* %564, i64 72
  %568 = bitcast %"class.std::__1::basic_string.8"** %11 to i8**
  store i8* %567, i8** %568, align 8
  %569 = bitcast %"class.std::__1::basic_string.8"** %10 to i64*
  %570 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %571 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %570, i64 0, i32 1, i32 1
  %572 = load i8, i8* %571, align 1
  %573 = icmp slt i8 %572, 0
  br i1 %573, label %576, label %574

574:                                              ; preds = %563
  %575 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %564, i8* nonnull align 8 %575, i64 24, i1 false) #16
  br label %756

576:                                              ; preds = %563
  %577 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load i16*, i16** %577, align 8
  %579 = bitcast i16* %578 to i8*
  %580 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %581 = load i64, i64* %580, align 8
  %582 = icmp ult i64 %581, 11
  br i1 %582, label %583, label %586

583:                                              ; preds = %576
  %584 = trunc i64 %581 to i8
  %585 = getelementptr inbounds i8, i8* %564, i64 23
  store i8 %584, i8* %585, align 1
  br label %605

586:                                              ; preds = %576
  %587 = icmp ugt i64 %581, 9223372036854775791
  br i1 %587, label %588, label %591

588:                                              ; preds = %1004, %817, %586
  %589 = phi i8* [ %564, %586 ], [ %758, %817 ], [ %988, %1004 ]
  %590 = bitcast i8* %589 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %590) #17
  unreachable

591:                                              ; preds = %586
  %592 = add nuw nsw i64 %581, 8
  %593 = and i64 %592, -8
  %594 = icmp slt i64 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %1006, %819, %591
  call void @abort() #17
  unreachable

596:                                              ; preds = %591
  %597 = shl i64 %593, 1
  %598 = call i8* @_Znwm(i64 %597) #18
  %599 = bitcast i8* %564 to i8**
  store i8* %598, i8** %599, align 8
  %600 = or i64 %593, -9223372036854775808
  %601 = getelementptr inbounds i8, i8* %564, i64 16
  %602 = bitcast i8* %601 to i64*
  store i64 %600, i64* %602, align 8
  %603 = getelementptr inbounds i8, i8* %564, i64 8
  %604 = bitcast i8* %603 to i64*
  store i64 %581, i64* %604, align 8
  br label %605

605:                                              ; preds = %596, %583
  %606 = phi i8* [ %564, %583 ], [ %598, %596 ]
  %607 = bitcast i8* %606 to i16*
  %608 = add nuw nsw i64 %581, 1
  %609 = add i64 %581, 1
  %610 = icmp ult i64 %609, 16
  br i1 %610, label %703, label %611

611:                                              ; preds = %605
  %612 = shl i64 %581, 1
  %613 = add i64 %612, 2
  %614 = getelementptr i8, i8* %606, i64 %613
  %615 = add i64 %581, 1
  %616 = getelementptr i16, i16* %578, i64 %615
  %617 = bitcast i16* %616 to i8*
  %618 = icmp ult i8* %606, %617
  %619 = icmp ugt i8* %614, %579
  %620 = and i1 %618, %619
  br i1 %620, label %703, label %621

621:                                              ; preds = %611
  %622 = and i64 %609, -16
  %623 = sub i64 %608, %622
  %624 = getelementptr i16, i16* %578, i64 %622
  %625 = getelementptr i16, i16* %607, i64 %622
  %626 = add i64 %622, -16
  %627 = lshr exact i64 %626, 4
  %628 = add nuw nsw i64 %627, 1
  %629 = and i64 %628, 3
  %630 = icmp ult i64 %626, 48
  br i1 %630, label %682, label %631

631:                                              ; preds = %621
  %632 = sub nsw i64 %628, %629
  br label %633

633:                                              ; preds = %633, %631
  %634 = phi i64 [ 0, %631 ], [ %679, %633 ]
  %635 = phi i64 [ %632, %631 ], [ %680, %633 ]
  %636 = getelementptr i16, i16* %578, i64 %634
  %637 = getelementptr i16, i16* %607, i64 %634
  %638 = bitcast i16* %636 to <8 x i16>*
  %639 = load <8 x i16>, <8 x i16>* %638, align 2, !alias.scope !74
  %640 = getelementptr i16, i16* %636, i64 8
  %641 = bitcast i16* %640 to <8 x i16>*
  %642 = load <8 x i16>, <8 x i16>* %641, align 2, !alias.scope !74
  %643 = bitcast i16* %637 to <8 x i16>*
  store <8 x i16> %639, <8 x i16>* %643, align 2, !alias.scope !77, !noalias !74
  %644 = getelementptr i16, i16* %637, i64 8
  %645 = bitcast i16* %644 to <8 x i16>*
  store <8 x i16> %642, <8 x i16>* %645, align 2, !alias.scope !77, !noalias !74
  %646 = or i64 %634, 16
  %647 = getelementptr i16, i16* %578, i64 %646
  %648 = getelementptr i16, i16* %607, i64 %646
  %649 = bitcast i16* %647 to <8 x i16>*
  %650 = load <8 x i16>, <8 x i16>* %649, align 2, !alias.scope !74
  %651 = getelementptr i16, i16* %647, i64 8
  %652 = bitcast i16* %651 to <8 x i16>*
  %653 = load <8 x i16>, <8 x i16>* %652, align 2, !alias.scope !74
  %654 = bitcast i16* %648 to <8 x i16>*
  store <8 x i16> %650, <8 x i16>* %654, align 2, !alias.scope !77, !noalias !74
  %655 = getelementptr i16, i16* %648, i64 8
  %656 = bitcast i16* %655 to <8 x i16>*
  store <8 x i16> %653, <8 x i16>* %656, align 2, !alias.scope !77, !noalias !74
  %657 = or i64 %634, 32
  %658 = getelementptr i16, i16* %578, i64 %657
  %659 = getelementptr i16, i16* %607, i64 %657
  %660 = bitcast i16* %658 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !74
  %662 = getelementptr i16, i16* %658, i64 8
  %663 = bitcast i16* %662 to <8 x i16>*
  %664 = load <8 x i16>, <8 x i16>* %663, align 2, !alias.scope !74
  %665 = bitcast i16* %659 to <8 x i16>*
  store <8 x i16> %661, <8 x i16>* %665, align 2, !alias.scope !77, !noalias !74
  %666 = getelementptr i16, i16* %659, i64 8
  %667 = bitcast i16* %666 to <8 x i16>*
  store <8 x i16> %664, <8 x i16>* %667, align 2, !alias.scope !77, !noalias !74
  %668 = or i64 %634, 48
  %669 = getelementptr i16, i16* %578, i64 %668
  %670 = getelementptr i16, i16* %607, i64 %668
  %671 = bitcast i16* %669 to <8 x i16>*
  %672 = load <8 x i16>, <8 x i16>* %671, align 2, !alias.scope !74
  %673 = getelementptr i16, i16* %669, i64 8
  %674 = bitcast i16* %673 to <8 x i16>*
  %675 = load <8 x i16>, <8 x i16>* %674, align 2, !alias.scope !74
  %676 = bitcast i16* %670 to <8 x i16>*
  store <8 x i16> %672, <8 x i16>* %676, align 2, !alias.scope !77, !noalias !74
  %677 = getelementptr i16, i16* %670, i64 8
  %678 = bitcast i16* %677 to <8 x i16>*
  store <8 x i16> %675, <8 x i16>* %678, align 2, !alias.scope !77, !noalias !74
  %679 = add i64 %634, 64
  %680 = add i64 %635, -4
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %682, label %633, !llvm.loop !79

682:                                              ; preds = %633, %621
  %683 = phi i64 [ 0, %621 ], [ %679, %633 ]
  %684 = icmp eq i64 %629, 0
  br i1 %684, label %701, label %685

685:                                              ; preds = %682, %685
  %686 = phi i64 [ %698, %685 ], [ %683, %682 ]
  %687 = phi i64 [ %699, %685 ], [ %629, %682 ]
  %688 = getelementptr i16, i16* %578, i64 %686
  %689 = getelementptr i16, i16* %607, i64 %686
  %690 = bitcast i16* %688 to <8 x i16>*
  %691 = load <8 x i16>, <8 x i16>* %690, align 2, !alias.scope !74
  %692 = getelementptr i16, i16* %688, i64 8
  %693 = bitcast i16* %692 to <8 x i16>*
  %694 = load <8 x i16>, <8 x i16>* %693, align 2, !alias.scope !74
  %695 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %691, <8 x i16>* %695, align 2, !alias.scope !77, !noalias !74
  %696 = getelementptr i16, i16* %689, i64 8
  %697 = bitcast i16* %696 to <8 x i16>*
  store <8 x i16> %694, <8 x i16>* %697, align 2, !alias.scope !77, !noalias !74
  %698 = add i64 %686, 16
  %699 = add i64 %687, -1
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %701, label %685, !llvm.loop !80

701:                                              ; preds = %685, %682
  %702 = icmp eq i64 %609, %622
  br i1 %702, label %756, label %703

703:                                              ; preds = %701, %611, %605
  %704 = phi i64 [ %608, %611 ], [ %608, %605 ], [ %623, %701 ]
  %705 = phi i16* [ %578, %611 ], [ %578, %605 ], [ %624, %701 ]
  %706 = phi i16* [ %607, %611 ], [ %607, %605 ], [ %625, %701 ]
  %707 = add i64 %704, -1
  %708 = and i64 %704, 7
  %709 = icmp eq i64 %708, 0
  br i1 %709, label %721, label %710

710:                                              ; preds = %703, %710
  %711 = phi i64 [ %716, %710 ], [ %704, %703 ]
  %712 = phi i16* [ %718, %710 ], [ %705, %703 ]
  %713 = phi i16* [ %717, %710 ], [ %706, %703 ]
  %714 = phi i64 [ %719, %710 ], [ %708, %703 ]
  %715 = load i16, i16* %712, align 2
  store i16 %715, i16* %713, align 2
  %716 = add i64 %711, -1
  %717 = getelementptr inbounds i16, i16* %713, i64 1
  %718 = getelementptr inbounds i16, i16* %712, i64 1
  %719 = add i64 %714, -1
  %720 = icmp eq i64 %719, 0
  br i1 %720, label %721, label %710, !llvm.loop !81

721:                                              ; preds = %710, %703
  %722 = phi i64 [ %704, %703 ], [ %716, %710 ]
  %723 = phi i16* [ %705, %703 ], [ %718, %710 ]
  %724 = phi i16* [ %706, %703 ], [ %717, %710 ]
  %725 = icmp ult i64 %707, 7
  br i1 %725, label %756, label %726

726:                                              ; preds = %721, %726
  %727 = phi i64 [ %752, %726 ], [ %722, %721 ]
  %728 = phi i16* [ %754, %726 ], [ %723, %721 ]
  %729 = phi i16* [ %753, %726 ], [ %724, %721 ]
  %730 = load i16, i16* %728, align 2
  store i16 %730, i16* %729, align 2
  %731 = getelementptr inbounds i16, i16* %729, i64 1
  %732 = getelementptr inbounds i16, i16* %728, i64 1
  %733 = load i16, i16* %732, align 2
  store i16 %733, i16* %731, align 2
  %734 = getelementptr inbounds i16, i16* %729, i64 2
  %735 = getelementptr inbounds i16, i16* %728, i64 2
  %736 = load i16, i16* %735, align 2
  store i16 %736, i16* %734, align 2
  %737 = getelementptr inbounds i16, i16* %729, i64 3
  %738 = getelementptr inbounds i16, i16* %728, i64 3
  %739 = load i16, i16* %738, align 2
  store i16 %739, i16* %737, align 2
  %740 = getelementptr inbounds i16, i16* %729, i64 4
  %741 = getelementptr inbounds i16, i16* %728, i64 4
  %742 = load i16, i16* %741, align 2
  store i16 %742, i16* %740, align 2
  %743 = getelementptr inbounds i16, i16* %729, i64 5
  %744 = getelementptr inbounds i16, i16* %728, i64 5
  %745 = load i16, i16* %744, align 2
  store i16 %745, i16* %743, align 2
  %746 = getelementptr inbounds i16, i16* %729, i64 6
  %747 = getelementptr inbounds i16, i16* %728, i64 6
  %748 = load i16, i16* %747, align 2
  store i16 %748, i16* %746, align 2
  %749 = getelementptr inbounds i16, i16* %729, i64 7
  %750 = getelementptr inbounds i16, i16* %728, i64 7
  %751 = load i16, i16* %750, align 2
  store i16 %751, i16* %749, align 2
  %752 = add i64 %727, -8
  %753 = getelementptr inbounds i16, i16* %729, i64 8
  %754 = getelementptr inbounds i16, i16* %728, i64 8
  %755 = icmp eq i64 %752, 0
  br i1 %755, label %756, label %726, !llvm.loop !82

756:                                              ; preds = %721, %726, %701, %574
  %757 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %758 = getelementptr inbounds i8, i8* %564, i64 24
  %759 = bitcast %"class.std::__1::basic_string.8"* %757 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %759, i64 0, i32 1, i32 1
  %761 = load i8, i8* %760, align 1
  %762 = icmp slt i8 %761, 0
  br i1 %762, label %810, label %808

763:                                              ; preds = %1173
  %764 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2
  %765 = bitcast %"class.std::__1::basic_string.8"* %764 to i8**
  %766 = load i8*, i8** %765, align 8
  call void @_ZdlPv(i8* %766) #18
  br label %767

767:                                              ; preds = %993, %1173, %763
  %768 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %769 = bitcast %"class.std::__1::basic_string.8"* %768 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %770 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %769, i64 0, i32 1, i32 1
  %771 = load i8, i8* %770, align 1
  %772 = icmp slt i8 %771, 0
  br i1 %772, label %794, label %797

773:                                              ; preds = %805
  %774 = bitcast %"class.std::__1::basic_string.8"* %806 to i8*
  %775 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %10, align 8
  %776 = icmp eq %"class.std::__1::basic_string.8"* %775, %806
  br i1 %776, label %791, label %777

777:                                              ; preds = %773, %787
  %778 = phi %"class.std::__1::basic_string.8"* [ %779, %787 ], [ %775, %773 ]
  %779 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %778, i64 -1
  %780 = bitcast %"class.std::__1::basic_string.8"* %779 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %781 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %780, i64 0, i32 1, i32 1
  %782 = load i8, i8* %781, align 1
  %783 = icmp slt i8 %782, 0
  br i1 %783, label %784, label %787

784:                                              ; preds = %777
  %785 = bitcast %"class.std::__1::basic_string.8"* %779 to i8**
  %786 = load i8*, i8** %785, align 8
  call void @_ZdlPv(i8* %786) #18
  br label %787

787:                                              ; preds = %784, %777
  %788 = icmp eq %"class.std::__1::basic_string.8"* %779, %806
  br i1 %788, label %789, label %777

789:                                              ; preds = %787
  %790 = load i8*, i8** %566, align 8
  br label %791

791:                                              ; preds = %789, %773
  %792 = phi i8* [ %790, %789 ], [ %774, %773 ]
  store %"class.std::__1::basic_string.8"* %806, %"class.std::__1::basic_string.8"** %10, align 8
  call void @_ZdlPv(i8* %792) #18
  br label %793

793:                                              ; preds = %805, %791
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void

794:                                              ; preds = %767
  %795 = bitcast %"class.std::__1::basic_string.8"* %768 to i8**
  %796 = load i8*, i8** %795, align 8
  call void @_ZdlPv(i8* %796) #18
  br label %797

797:                                              ; preds = %794, %767
  %798 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %799 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %798, i64 0, i32 1, i32 1
  %800 = load i8, i8* %799, align 1
  %801 = icmp slt i8 %800, 0
  br i1 %801, label %802, label %805

802:                                              ; preds = %797
  %803 = bitcast [3 x %"class.std::__1::basic_string.8"]* %7 to i8**
  %804 = load i8*, i8** %803, align 8
  call void @_ZdlPv(i8* %804) #18
  br label %805

805:                                              ; preds = %802, %797
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.79"* null)
  %806 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %9, align 8
  %807 = icmp eq %"class.std::__1::basic_string.8"* %806, null
  br i1 %807, label %793, label %773

808:                                              ; preds = %756
  %809 = bitcast %"class.std::__1::basic_string.8"* %757 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %758, i8* align 8 %809, i64 24, i1 false) #16
  br label %986

810:                                              ; preds = %756
  %811 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %757, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %812 = load i16*, i16** %811, align 8
  %813 = bitcast i16* %812 to i8*
  %814 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %815 = load i64, i64* %814, align 8
  %816 = icmp ult i64 %815, 11
  br i1 %816, label %832, label %817

817:                                              ; preds = %810
  %818 = icmp ugt i64 %815, 9223372036854775791
  br i1 %818, label %588, label %819

819:                                              ; preds = %817
  %820 = add nuw nsw i64 %815, 8
  %821 = and i64 %820, -8
  %822 = icmp slt i64 %821, 0
  br i1 %822, label %595, label %823

823:                                              ; preds = %819
  %824 = shl i64 %821, 1
  %825 = call i8* @_Znwm(i64 %824) #18
  %826 = bitcast i8* %758 to i8**
  store i8* %825, i8** %826, align 8
  %827 = or i64 %821, -9223372036854775808
  %828 = getelementptr inbounds i8, i8* %564, i64 40
  %829 = bitcast i8* %828 to i64*
  store i64 %827, i64* %829, align 8
  %830 = getelementptr inbounds i8, i8* %564, i64 32
  %831 = bitcast i8* %830 to i64*
  store i64 %815, i64* %831, align 8
  br label %835

832:                                              ; preds = %810
  %833 = trunc i64 %815 to i8
  %834 = getelementptr inbounds i8, i8* %564, i64 47
  store i8 %833, i8* %834, align 1
  br label %835

835:                                              ; preds = %832, %823
  %836 = phi i8* [ %758, %832 ], [ %825, %823 ]
  %837 = bitcast i8* %836 to i16*
  %838 = add nuw nsw i64 %815, 1
  %839 = add i64 %815, 1
  %840 = icmp ult i64 %839, 16
  br i1 %840, label %933, label %841

841:                                              ; preds = %835
  %842 = shl i64 %815, 1
  %843 = add i64 %842, 2
  %844 = getelementptr i8, i8* %836, i64 %843
  %845 = add i64 %815, 1
  %846 = getelementptr i16, i16* %812, i64 %845
  %847 = bitcast i16* %846 to i8*
  %848 = icmp ult i8* %836, %847
  %849 = icmp ugt i8* %844, %813
  %850 = and i1 %848, %849
  br i1 %850, label %933, label %851

851:                                              ; preds = %841
  %852 = and i64 %839, -16
  %853 = sub i64 %838, %852
  %854 = getelementptr i16, i16* %812, i64 %852
  %855 = getelementptr i16, i16* %837, i64 %852
  %856 = add i64 %852, -16
  %857 = lshr exact i64 %856, 4
  %858 = add nuw nsw i64 %857, 1
  %859 = and i64 %858, 3
  %860 = icmp ult i64 %856, 48
  br i1 %860, label %912, label %861

861:                                              ; preds = %851
  %862 = sub nsw i64 %858, %859
  br label %863

863:                                              ; preds = %863, %861
  %864 = phi i64 [ 0, %861 ], [ %909, %863 ]
  %865 = phi i64 [ %862, %861 ], [ %910, %863 ]
  %866 = getelementptr i16, i16* %812, i64 %864
  %867 = getelementptr i16, i16* %837, i64 %864
  %868 = bitcast i16* %866 to <8 x i16>*
  %869 = load <8 x i16>, <8 x i16>* %868, align 2, !alias.scope !83
  %870 = getelementptr i16, i16* %866, i64 8
  %871 = bitcast i16* %870 to <8 x i16>*
  %872 = load <8 x i16>, <8 x i16>* %871, align 2, !alias.scope !83
  %873 = bitcast i16* %867 to <8 x i16>*
  store <8 x i16> %869, <8 x i16>* %873, align 2, !alias.scope !86, !noalias !83
  %874 = getelementptr i16, i16* %867, i64 8
  %875 = bitcast i16* %874 to <8 x i16>*
  store <8 x i16> %872, <8 x i16>* %875, align 2, !alias.scope !86, !noalias !83
  %876 = or i64 %864, 16
  %877 = getelementptr i16, i16* %812, i64 %876
  %878 = getelementptr i16, i16* %837, i64 %876
  %879 = bitcast i16* %877 to <8 x i16>*
  %880 = load <8 x i16>, <8 x i16>* %879, align 2, !alias.scope !83
  %881 = getelementptr i16, i16* %877, i64 8
  %882 = bitcast i16* %881 to <8 x i16>*
  %883 = load <8 x i16>, <8 x i16>* %882, align 2, !alias.scope !83
  %884 = bitcast i16* %878 to <8 x i16>*
  store <8 x i16> %880, <8 x i16>* %884, align 2, !alias.scope !86, !noalias !83
  %885 = getelementptr i16, i16* %878, i64 8
  %886 = bitcast i16* %885 to <8 x i16>*
  store <8 x i16> %883, <8 x i16>* %886, align 2, !alias.scope !86, !noalias !83
  %887 = or i64 %864, 32
  %888 = getelementptr i16, i16* %812, i64 %887
  %889 = getelementptr i16, i16* %837, i64 %887
  %890 = bitcast i16* %888 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !83
  %892 = getelementptr i16, i16* %888, i64 8
  %893 = bitcast i16* %892 to <8 x i16>*
  %894 = load <8 x i16>, <8 x i16>* %893, align 2, !alias.scope !83
  %895 = bitcast i16* %889 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %895, align 2, !alias.scope !86, !noalias !83
  %896 = getelementptr i16, i16* %889, i64 8
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %894, <8 x i16>* %897, align 2, !alias.scope !86, !noalias !83
  %898 = or i64 %864, 48
  %899 = getelementptr i16, i16* %812, i64 %898
  %900 = getelementptr i16, i16* %837, i64 %898
  %901 = bitcast i16* %899 to <8 x i16>*
  %902 = load <8 x i16>, <8 x i16>* %901, align 2, !alias.scope !83
  %903 = getelementptr i16, i16* %899, i64 8
  %904 = bitcast i16* %903 to <8 x i16>*
  %905 = load <8 x i16>, <8 x i16>* %904, align 2, !alias.scope !83
  %906 = bitcast i16* %900 to <8 x i16>*
  store <8 x i16> %902, <8 x i16>* %906, align 2, !alias.scope !86, !noalias !83
  %907 = getelementptr i16, i16* %900, i64 8
  %908 = bitcast i16* %907 to <8 x i16>*
  store <8 x i16> %905, <8 x i16>* %908, align 2, !alias.scope !86, !noalias !83
  %909 = add i64 %864, 64
  %910 = add i64 %865, -4
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %912, label %863, !llvm.loop !88

912:                                              ; preds = %863, %851
  %913 = phi i64 [ 0, %851 ], [ %909, %863 ]
  %914 = icmp eq i64 %859, 0
  br i1 %914, label %931, label %915

915:                                              ; preds = %912, %915
  %916 = phi i64 [ %928, %915 ], [ %913, %912 ]
  %917 = phi i64 [ %929, %915 ], [ %859, %912 ]
  %918 = getelementptr i16, i16* %812, i64 %916
  %919 = getelementptr i16, i16* %837, i64 %916
  %920 = bitcast i16* %918 to <8 x i16>*
  %921 = load <8 x i16>, <8 x i16>* %920, align 2, !alias.scope !83
  %922 = getelementptr i16, i16* %918, i64 8
  %923 = bitcast i16* %922 to <8 x i16>*
  %924 = load <8 x i16>, <8 x i16>* %923, align 2, !alias.scope !83
  %925 = bitcast i16* %919 to <8 x i16>*
  store <8 x i16> %921, <8 x i16>* %925, align 2, !alias.scope !86, !noalias !83
  %926 = getelementptr i16, i16* %919, i64 8
  %927 = bitcast i16* %926 to <8 x i16>*
  store <8 x i16> %924, <8 x i16>* %927, align 2, !alias.scope !86, !noalias !83
  %928 = add i64 %916, 16
  %929 = add i64 %917, -1
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %931, label %915, !llvm.loop !89

931:                                              ; preds = %915, %912
  %932 = icmp eq i64 %839, %852
  br i1 %932, label %986, label %933

933:                                              ; preds = %931, %841, %835
  %934 = phi i64 [ %838, %841 ], [ %838, %835 ], [ %853, %931 ]
  %935 = phi i16* [ %812, %841 ], [ %812, %835 ], [ %854, %931 ]
  %936 = phi i16* [ %837, %841 ], [ %837, %835 ], [ %855, %931 ]
  %937 = add i64 %934, -1
  %938 = and i64 %934, 7
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %951, label %940

940:                                              ; preds = %933, %940
  %941 = phi i64 [ %946, %940 ], [ %934, %933 ]
  %942 = phi i16* [ %948, %940 ], [ %935, %933 ]
  %943 = phi i16* [ %947, %940 ], [ %936, %933 ]
  %944 = phi i64 [ %949, %940 ], [ %938, %933 ]
  %945 = load i16, i16* %942, align 2
  store i16 %945, i16* %943, align 2
  %946 = add i64 %941, -1
  %947 = getelementptr inbounds i16, i16* %943, i64 1
  %948 = getelementptr inbounds i16, i16* %942, i64 1
  %949 = add i64 %944, -1
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %951, label %940, !llvm.loop !90

951:                                              ; preds = %940, %933
  %952 = phi i64 [ %934, %933 ], [ %946, %940 ]
  %953 = phi i16* [ %935, %933 ], [ %948, %940 ]
  %954 = phi i16* [ %936, %933 ], [ %947, %940 ]
  %955 = icmp ult i64 %937, 7
  br i1 %955, label %986, label %956

956:                                              ; preds = %951, %956
  %957 = phi i64 [ %982, %956 ], [ %952, %951 ]
  %958 = phi i16* [ %984, %956 ], [ %953, %951 ]
  %959 = phi i16* [ %983, %956 ], [ %954, %951 ]
  %960 = load i16, i16* %958, align 2
  store i16 %960, i16* %959, align 2
  %961 = getelementptr inbounds i16, i16* %959, i64 1
  %962 = getelementptr inbounds i16, i16* %958, i64 1
  %963 = load i16, i16* %962, align 2
  store i16 %963, i16* %961, align 2
  %964 = getelementptr inbounds i16, i16* %959, i64 2
  %965 = getelementptr inbounds i16, i16* %958, i64 2
  %966 = load i16, i16* %965, align 2
  store i16 %966, i16* %964, align 2
  %967 = getelementptr inbounds i16, i16* %959, i64 3
  %968 = getelementptr inbounds i16, i16* %958, i64 3
  %969 = load i16, i16* %968, align 2
  store i16 %969, i16* %967, align 2
  %970 = getelementptr inbounds i16, i16* %959, i64 4
  %971 = getelementptr inbounds i16, i16* %958, i64 4
  %972 = load i16, i16* %971, align 2
  store i16 %972, i16* %970, align 2
  %973 = getelementptr inbounds i16, i16* %959, i64 5
  %974 = getelementptr inbounds i16, i16* %958, i64 5
  %975 = load i16, i16* %974, align 2
  store i16 %975, i16* %973, align 2
  %976 = getelementptr inbounds i16, i16* %959, i64 6
  %977 = getelementptr inbounds i16, i16* %958, i64 6
  %978 = load i16, i16* %977, align 2
  store i16 %978, i16* %976, align 2
  %979 = getelementptr inbounds i16, i16* %959, i64 7
  %980 = getelementptr inbounds i16, i16* %958, i64 7
  %981 = load i16, i16* %980, align 2
  store i16 %981, i16* %979, align 2
  %982 = add i64 %957, -8
  %983 = getelementptr inbounds i16, i16* %959, i64 8
  %984 = getelementptr inbounds i16, i16* %958, i64 8
  %985 = icmp eq i64 %982, 0
  br i1 %985, label %986, label %956, !llvm.loop !91

986:                                              ; preds = %951, %956, %931, %808
  %987 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2
  %988 = getelementptr inbounds i8, i8* %564, i64 48
  %989 = bitcast %"class.std::__1::basic_string.8"* %987 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %990 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %989, i64 0, i32 1, i32 1
  %991 = load i8, i8* %990, align 1
  %992 = icmp slt i8 %991, 0
  br i1 %992, label %997, label %993

993:                                              ; preds = %986
  %994 = bitcast %"class.std::__1::basic_string.8"* %987 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %988, i8* align 8 %994, i64 24, i1 false) #16
  %995 = getelementptr inbounds i8, i8* %564, i64 72
  %996 = ptrtoint i8* %995 to i64
  store i64 %996, i64* %569, align 8
  br label %767

997:                                              ; preds = %986
  %998 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %987, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %999 = load i16*, i16** %998, align 8
  %1000 = bitcast i16* %999 to i8*
  %1001 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1002 = load i64, i64* %1001, align 8
  %1003 = icmp ult i64 %1002, 11
  br i1 %1003, label %1019, label %1004

1004:                                             ; preds = %997
  %1005 = icmp ugt i64 %1002, 9223372036854775791
  br i1 %1005, label %588, label %1006

1006:                                             ; preds = %1004
  %1007 = add nuw nsw i64 %1002, 8
  %1008 = and i64 %1007, -8
  %1009 = icmp slt i64 %1008, 0
  br i1 %1009, label %595, label %1010

1010:                                             ; preds = %1006
  %1011 = shl i64 %1008, 1
  %1012 = call i8* @_Znwm(i64 %1011) #18
  %1013 = bitcast i8* %988 to i8**
  store i8* %1012, i8** %1013, align 8
  %1014 = or i64 %1008, -9223372036854775808
  %1015 = getelementptr inbounds i8, i8* %564, i64 64
  %1016 = bitcast i8* %1015 to i64*
  store i64 %1014, i64* %1016, align 8
  %1017 = getelementptr inbounds i8, i8* %564, i64 56
  %1018 = bitcast i8* %1017 to i64*
  store i64 %1002, i64* %1018, align 8
  br label %1022

1019:                                             ; preds = %997
  %1020 = trunc i64 %1002 to i8
  %1021 = getelementptr inbounds i8, i8* %564, i64 71
  store i8 %1020, i8* %1021, align 1
  br label %1022

1022:                                             ; preds = %1019, %1010
  %1023 = phi i8* [ %988, %1019 ], [ %1012, %1010 ]
  %1024 = bitcast i8* %1023 to i16*
  %1025 = add nuw nsw i64 %1002, 1
  %1026 = add i64 %1002, 1
  %1027 = icmp ult i64 %1026, 16
  br i1 %1027, label %1120, label %1028

1028:                                             ; preds = %1022
  %1029 = shl i64 %1002, 1
  %1030 = add i64 %1029, 2
  %1031 = getelementptr i8, i8* %1023, i64 %1030
  %1032 = add i64 %1002, 1
  %1033 = getelementptr i16, i16* %999, i64 %1032
  %1034 = bitcast i16* %1033 to i8*
  %1035 = icmp ult i8* %1023, %1034
  %1036 = icmp ugt i8* %1031, %1000
  %1037 = and i1 %1035, %1036
  br i1 %1037, label %1120, label %1038

1038:                                             ; preds = %1028
  %1039 = and i64 %1026, -16
  %1040 = sub i64 %1025, %1039
  %1041 = getelementptr i16, i16* %999, i64 %1039
  %1042 = getelementptr i16, i16* %1024, i64 %1039
  %1043 = add i64 %1039, -16
  %1044 = lshr exact i64 %1043, 4
  %1045 = add nuw nsw i64 %1044, 1
  %1046 = and i64 %1045, 3
  %1047 = icmp ult i64 %1043, 48
  br i1 %1047, label %1099, label %1048

1048:                                             ; preds = %1038
  %1049 = sub nsw i64 %1045, %1046
  br label %1050

1050:                                             ; preds = %1050, %1048
  %1051 = phi i64 [ 0, %1048 ], [ %1096, %1050 ]
  %1052 = phi i64 [ %1049, %1048 ], [ %1097, %1050 ]
  %1053 = getelementptr i16, i16* %999, i64 %1051
  %1054 = getelementptr i16, i16* %1024, i64 %1051
  %1055 = bitcast i16* %1053 to <8 x i16>*
  %1056 = load <8 x i16>, <8 x i16>* %1055, align 2, !alias.scope !92
  %1057 = getelementptr i16, i16* %1053, i64 8
  %1058 = bitcast i16* %1057 to <8 x i16>*
  %1059 = load <8 x i16>, <8 x i16>* %1058, align 2, !alias.scope !92
  %1060 = bitcast i16* %1054 to <8 x i16>*
  store <8 x i16> %1056, <8 x i16>* %1060, align 2, !alias.scope !95, !noalias !92
  %1061 = getelementptr i16, i16* %1054, i64 8
  %1062 = bitcast i16* %1061 to <8 x i16>*
  store <8 x i16> %1059, <8 x i16>* %1062, align 2, !alias.scope !95, !noalias !92
  %1063 = or i64 %1051, 16
  %1064 = getelementptr i16, i16* %999, i64 %1063
  %1065 = getelementptr i16, i16* %1024, i64 %1063
  %1066 = bitcast i16* %1064 to <8 x i16>*
  %1067 = load <8 x i16>, <8 x i16>* %1066, align 2, !alias.scope !92
  %1068 = getelementptr i16, i16* %1064, i64 8
  %1069 = bitcast i16* %1068 to <8 x i16>*
  %1070 = load <8 x i16>, <8 x i16>* %1069, align 2, !alias.scope !92
  %1071 = bitcast i16* %1065 to <8 x i16>*
  store <8 x i16> %1067, <8 x i16>* %1071, align 2, !alias.scope !95, !noalias !92
  %1072 = getelementptr i16, i16* %1065, i64 8
  %1073 = bitcast i16* %1072 to <8 x i16>*
  store <8 x i16> %1070, <8 x i16>* %1073, align 2, !alias.scope !95, !noalias !92
  %1074 = or i64 %1051, 32
  %1075 = getelementptr i16, i16* %999, i64 %1074
  %1076 = getelementptr i16, i16* %1024, i64 %1074
  %1077 = bitcast i16* %1075 to <8 x i16>*
  %1078 = load <8 x i16>, <8 x i16>* %1077, align 2, !alias.scope !92
  %1079 = getelementptr i16, i16* %1075, i64 8
  %1080 = bitcast i16* %1079 to <8 x i16>*
  %1081 = load <8 x i16>, <8 x i16>* %1080, align 2, !alias.scope !92
  %1082 = bitcast i16* %1076 to <8 x i16>*
  store <8 x i16> %1078, <8 x i16>* %1082, align 2, !alias.scope !95, !noalias !92
  %1083 = getelementptr i16, i16* %1076, i64 8
  %1084 = bitcast i16* %1083 to <8 x i16>*
  store <8 x i16> %1081, <8 x i16>* %1084, align 2, !alias.scope !95, !noalias !92
  %1085 = or i64 %1051, 48
  %1086 = getelementptr i16, i16* %999, i64 %1085
  %1087 = getelementptr i16, i16* %1024, i64 %1085
  %1088 = bitcast i16* %1086 to <8 x i16>*
  %1089 = load <8 x i16>, <8 x i16>* %1088, align 2, !alias.scope !92
  %1090 = getelementptr i16, i16* %1086, i64 8
  %1091 = bitcast i16* %1090 to <8 x i16>*
  %1092 = load <8 x i16>, <8 x i16>* %1091, align 2, !alias.scope !92
  %1093 = bitcast i16* %1087 to <8 x i16>*
  store <8 x i16> %1089, <8 x i16>* %1093, align 2, !alias.scope !95, !noalias !92
  %1094 = getelementptr i16, i16* %1087, i64 8
  %1095 = bitcast i16* %1094 to <8 x i16>*
  store <8 x i16> %1092, <8 x i16>* %1095, align 2, !alias.scope !95, !noalias !92
  %1096 = add i64 %1051, 64
  %1097 = add i64 %1052, -4
  %1098 = icmp eq i64 %1097, 0
  br i1 %1098, label %1099, label %1050, !llvm.loop !97

1099:                                             ; preds = %1050, %1038
  %1100 = phi i64 [ 0, %1038 ], [ %1096, %1050 ]
  %1101 = icmp eq i64 %1046, 0
  br i1 %1101, label %1118, label %1102

1102:                                             ; preds = %1099, %1102
  %1103 = phi i64 [ %1115, %1102 ], [ %1100, %1099 ]
  %1104 = phi i64 [ %1116, %1102 ], [ %1046, %1099 ]
  %1105 = getelementptr i16, i16* %999, i64 %1103
  %1106 = getelementptr i16, i16* %1024, i64 %1103
  %1107 = bitcast i16* %1105 to <8 x i16>*
  %1108 = load <8 x i16>, <8 x i16>* %1107, align 2, !alias.scope !92
  %1109 = getelementptr i16, i16* %1105, i64 8
  %1110 = bitcast i16* %1109 to <8 x i16>*
  %1111 = load <8 x i16>, <8 x i16>* %1110, align 2, !alias.scope !92
  %1112 = bitcast i16* %1106 to <8 x i16>*
  store <8 x i16> %1108, <8 x i16>* %1112, align 2, !alias.scope !95, !noalias !92
  %1113 = getelementptr i16, i16* %1106, i64 8
  %1114 = bitcast i16* %1113 to <8 x i16>*
  store <8 x i16> %1111, <8 x i16>* %1114, align 2, !alias.scope !95, !noalias !92
  %1115 = add i64 %1103, 16
  %1116 = add i64 %1104, -1
  %1117 = icmp eq i64 %1116, 0
  br i1 %1117, label %1118, label %1102, !llvm.loop !98

1118:                                             ; preds = %1102, %1099
  %1119 = icmp eq i64 %1026, %1039
  br i1 %1119, label %1173, label %1120

1120:                                             ; preds = %1118, %1028, %1022
  %1121 = phi i64 [ %1025, %1028 ], [ %1025, %1022 ], [ %1040, %1118 ]
  %1122 = phi i16* [ %999, %1028 ], [ %999, %1022 ], [ %1041, %1118 ]
  %1123 = phi i16* [ %1024, %1028 ], [ %1024, %1022 ], [ %1042, %1118 ]
  %1124 = add i64 %1121, -1
  %1125 = and i64 %1121, 7
  %1126 = icmp eq i64 %1125, 0
  br i1 %1126, label %1138, label %1127

1127:                                             ; preds = %1120, %1127
  %1128 = phi i64 [ %1133, %1127 ], [ %1121, %1120 ]
  %1129 = phi i16* [ %1135, %1127 ], [ %1122, %1120 ]
  %1130 = phi i16* [ %1134, %1127 ], [ %1123, %1120 ]
  %1131 = phi i64 [ %1136, %1127 ], [ %1125, %1120 ]
  %1132 = load i16, i16* %1129, align 2
  store i16 %1132, i16* %1130, align 2
  %1133 = add i64 %1128, -1
  %1134 = getelementptr inbounds i16, i16* %1130, i64 1
  %1135 = getelementptr inbounds i16, i16* %1129, i64 1
  %1136 = add i64 %1131, -1
  %1137 = icmp eq i64 %1136, 0
  br i1 %1137, label %1138, label %1127, !llvm.loop !99

1138:                                             ; preds = %1127, %1120
  %1139 = phi i64 [ %1121, %1120 ], [ %1133, %1127 ]
  %1140 = phi i16* [ %1122, %1120 ], [ %1135, %1127 ]
  %1141 = phi i16* [ %1123, %1120 ], [ %1134, %1127 ]
  %1142 = icmp ult i64 %1124, 7
  br i1 %1142, label %1173, label %1143

1143:                                             ; preds = %1138, %1143
  %1144 = phi i64 [ %1169, %1143 ], [ %1139, %1138 ]
  %1145 = phi i16* [ %1171, %1143 ], [ %1140, %1138 ]
  %1146 = phi i16* [ %1170, %1143 ], [ %1141, %1138 ]
  %1147 = load i16, i16* %1145, align 2
  store i16 %1147, i16* %1146, align 2
  %1148 = getelementptr inbounds i16, i16* %1146, i64 1
  %1149 = getelementptr inbounds i16, i16* %1145, i64 1
  %1150 = load i16, i16* %1149, align 2
  store i16 %1150, i16* %1148, align 2
  %1151 = getelementptr inbounds i16, i16* %1146, i64 2
  %1152 = getelementptr inbounds i16, i16* %1145, i64 2
  %1153 = load i16, i16* %1152, align 2
  store i16 %1153, i16* %1151, align 2
  %1154 = getelementptr inbounds i16, i16* %1146, i64 3
  %1155 = getelementptr inbounds i16, i16* %1145, i64 3
  %1156 = load i16, i16* %1155, align 2
  store i16 %1156, i16* %1154, align 2
  %1157 = getelementptr inbounds i16, i16* %1146, i64 4
  %1158 = getelementptr inbounds i16, i16* %1145, i64 4
  %1159 = load i16, i16* %1158, align 2
  store i16 %1159, i16* %1157, align 2
  %1160 = getelementptr inbounds i16, i16* %1146, i64 5
  %1161 = getelementptr inbounds i16, i16* %1145, i64 5
  %1162 = load i16, i16* %1161, align 2
  store i16 %1162, i16* %1160, align 2
  %1163 = getelementptr inbounds i16, i16* %1146, i64 6
  %1164 = getelementptr inbounds i16, i16* %1145, i64 6
  %1165 = load i16, i16* %1164, align 2
  store i16 %1165, i16* %1163, align 2
  %1166 = getelementptr inbounds i16, i16* %1146, i64 7
  %1167 = getelementptr inbounds i16, i16* %1145, i64 7
  %1168 = load i16, i16* %1167, align 2
  store i16 %1168, i16* %1166, align 2
  %1169 = add i64 %1144, -8
  %1170 = getelementptr inbounds i16, i16* %1146, i64 8
  %1171 = getelementptr inbounds i16, i16* %1145, i64 8
  %1172 = icmp eq i64 %1169, 0
  br i1 %1172, label %1173, label %1143, !llvm.loop !100

1173:                                             ; preds = %1138, %1143, %1118
  %1174 = getelementptr inbounds [3 x %"class.std::__1::basic_string.8"], [3 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 2
  %1175 = bitcast %"class.std::__1::basic_string.8"* %1174 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1176 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1175, i64 0, i32 1, i32 1
  %1177 = load i8, i8* %1176, align 1
  %1178 = getelementptr inbounds i8, i8* %564, i64 72
  %1179 = ptrtoint i8* %1178 to i64
  store i64 %1179, i64* %569, align 8
  %1180 = icmp slt i8 %1177, 0
  br i1 %1180, label %763, label %767
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util14GetStringFUTF8EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_S8_(%"class.std::__1::basic_string"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string.8", align 8
  %8 = bitcast %"class.std::__1::basic_string.8"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_S8_(%"class.std::__1::basic_string.8"* nonnull sret %7, i32 %1, %"class.std::__1::basic_string.8"* dereferenceable(24) %2, %"class.std::__1::basic_string.8"* dereferenceable(24) %3, %"class.std::__1::basic_string.8"* dereferenceable(24) %4, %"class.std::__1::basic_string.8"* dereferenceable(24) %5)
  %9 = bitcast %"class.std::__1::basic_string.8"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string.8"* %7 to i16*
  %16 = select i1 %12, i16* %14, i16* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %16, i64 %20) #16
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %6
  %24 = bitcast %"class.std::__1::basic_string.8"* %7 to i8**
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %6, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_S8_(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::vector.72", align 8
  %8 = alloca [4 x %"class.std::__1::basic_string.8"], align 8
  %9 = bitcast %"class.std::__1::vector.72"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %7, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %7, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to i8*
  %14 = bitcast %"class.std::__1::vector.72"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %13) #16
  %15 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %20, i64 24, i1 false) #16
  br label %196

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, 11
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to i16*
  %29 = trunc i64 %25 to i8
  %30 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  store i8 %29, i8* %31, align 1
  br label %49

32:                                               ; preds = %21
  %33 = icmp ugt i64 %25, 9223372036854775791
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #17
  unreachable

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %25, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @abort() #17
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = tail call i8* @_Znwm(i64 %42) #18
  %44 = bitcast i8* %43 to i16*
  %45 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to i8**
  store i8* %43, i8** %45, align 8
  %46 = or i64 %38, -9223372036854775808
  %47 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %48, align 8
  br label %49

49:                                               ; preds = %41, %27
  %50 = phi i16* [ %28, %27 ], [ %44, %41 ]
  %51 = add nuw nsw i64 %25, 1
  %52 = add i64 %25, 1
  %53 = icmp ult i64 %52, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %49
  %55 = add i64 %25, 1
  %56 = getelementptr i16, i16* %50, i64 %55
  %57 = getelementptr i16, i16* %23, i64 %55
  %58 = icmp ult i16* %50, %57
  %59 = icmp ult i16* %23, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %52, -16
  %63 = sub i64 %51, %62
  %64 = getelementptr i16, i16* %23, i64 %62
  %65 = getelementptr i16, i16* %50, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %23, i64 %74
  %77 = getelementptr i16, i16* %50, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !101
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !101
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !104, !noalias !101
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !104, !noalias !101
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %23, i64 %86
  %88 = getelementptr i16, i16* %50, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !101
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !101
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !104, !noalias !101
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !104, !noalias !101
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %23, i64 %97
  %99 = getelementptr i16, i16* %50, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !101
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !101
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !104, !noalias !101
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !104, !noalias !101
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %23, i64 %108
  %110 = getelementptr i16, i16* %50, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !101
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !101
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !104, !noalias !101
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !104, !noalias !101
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !106

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %23, i64 %126
  %129 = getelementptr i16, i16* %50, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !101
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !101
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !104, !noalias !101
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !104, !noalias !101
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !107

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %52, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %49
  %144 = phi i64 [ %51, %54 ], [ %51, %49 ], [ %63, %141 ]
  %145 = phi i16* [ %23, %54 ], [ %23, %49 ], [ %64, %141 ]
  %146 = phi i16* [ %50, %54 ], [ %50, %49 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !108

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !109

196:                                              ; preds = %161, %166, %141, %19
  %197 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1
  %198 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %198, i64 0, i32 1, i32 1
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = bitcast %"class.std::__1::basic_string.8"* %197 to i8*
  %204 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #16
  br label %380

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i16*, i16** %206, align 8
  %208 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = load i64, i64* %208, align 8
  %210 = icmp ult i64 %209, 11
  br i1 %210, label %211, label %216

211:                                              ; preds = %205
  %212 = bitcast %"class.std::__1::basic_string.8"* %197 to i16*
  %213 = trunc i64 %209 to i8
  %214 = bitcast %"class.std::__1::basic_string.8"* %197 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %214, i64 0, i32 1, i32 1
  store i8 %213, i8* %215, align 1
  br label %233

216:                                              ; preds = %205
  %217 = icmp ugt i64 %209, 9223372036854775791
  br i1 %217, label %218, label %220

218:                                              ; preds = %216
  %219 = bitcast %"class.std::__1::basic_string.8"* %197 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %219) #17
  unreachable

220:                                              ; preds = %216
  %221 = add nuw nsw i64 %209, 8
  %222 = and i64 %221, -8
  %223 = icmp slt i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %220
  tail call void @abort() #17
  unreachable

225:                                              ; preds = %220
  %226 = shl i64 %222, 1
  %227 = tail call i8* @_Znwm(i64 %226) #18
  %228 = bitcast i8* %227 to i16*
  %229 = bitcast %"class.std::__1::basic_string.8"* %197 to i8**
  store i8* %227, i8** %229, align 8
  %230 = or i64 %222, -9223372036854775808
  %231 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %209, i64* %232, align 8
  br label %233

233:                                              ; preds = %225, %211
  %234 = phi i16* [ %212, %211 ], [ %228, %225 ]
  %235 = add nuw nsw i64 %209, 1
  %236 = add i64 %209, 1
  %237 = icmp ult i64 %236, 16
  br i1 %237, label %327, label %238

238:                                              ; preds = %233
  %239 = add i64 %209, 1
  %240 = getelementptr i16, i16* %234, i64 %239
  %241 = getelementptr i16, i16* %207, i64 %239
  %242 = icmp ult i16* %234, %241
  %243 = icmp ult i16* %207, %240
  %244 = and i1 %242, %243
  br i1 %244, label %327, label %245

245:                                              ; preds = %238
  %246 = and i64 %236, -16
  %247 = sub i64 %235, %246
  %248 = getelementptr i16, i16* %207, i64 %246
  %249 = getelementptr i16, i16* %234, i64 %246
  %250 = add i64 %246, -16
  %251 = lshr exact i64 %250, 4
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 48
  br i1 %254, label %306, label %255

255:                                              ; preds = %245
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %303, %257 ]
  %259 = phi i64 [ %256, %255 ], [ %304, %257 ]
  %260 = getelementptr i16, i16* %207, i64 %258
  %261 = getelementptr i16, i16* %234, i64 %258
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !110
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !110
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !113, !noalias !110
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !113, !noalias !110
  %270 = or i64 %258, 16
  %271 = getelementptr i16, i16* %207, i64 %270
  %272 = getelementptr i16, i16* %234, i64 %270
  %273 = bitcast i16* %271 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !110
  %275 = getelementptr i16, i16* %271, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !110
  %278 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !113, !noalias !110
  %279 = getelementptr i16, i16* %272, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !113, !noalias !110
  %281 = or i64 %258, 32
  %282 = getelementptr i16, i16* %207, i64 %281
  %283 = getelementptr i16, i16* %234, i64 %281
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !110
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !110
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !113, !noalias !110
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !113, !noalias !110
  %292 = or i64 %258, 48
  %293 = getelementptr i16, i16* %207, i64 %292
  %294 = getelementptr i16, i16* %234, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !110
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !110
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !113, !noalias !110
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !113, !noalias !110
  %303 = add i64 %258, 64
  %304 = add i64 %259, -4
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %257, !llvm.loop !115

306:                                              ; preds = %257, %245
  %307 = phi i64 [ 0, %245 ], [ %303, %257 ]
  %308 = icmp eq i64 %253, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %322, %309 ], [ %307, %306 ]
  %311 = phi i64 [ %323, %309 ], [ %253, %306 ]
  %312 = getelementptr i16, i16* %207, i64 %310
  %313 = getelementptr i16, i16* %234, i64 %310
  %314 = bitcast i16* %312 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !110
  %316 = getelementptr i16, i16* %312, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !110
  %319 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %319, align 2, !alias.scope !113, !noalias !110
  %320 = getelementptr i16, i16* %313, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %321, align 2, !alias.scope !113, !noalias !110
  %322 = add i64 %310, 16
  %323 = add i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %309, !llvm.loop !116

325:                                              ; preds = %309, %306
  %326 = icmp eq i64 %236, %246
  br i1 %326, label %380, label %327

327:                                              ; preds = %325, %238, %233
  %328 = phi i64 [ %235, %238 ], [ %235, %233 ], [ %247, %325 ]
  %329 = phi i16* [ %207, %238 ], [ %207, %233 ], [ %248, %325 ]
  %330 = phi i16* [ %234, %238 ], [ %234, %233 ], [ %249, %325 ]
  %331 = add i64 %328, -1
  %332 = and i64 %328, 7
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %345, label %334

334:                                              ; preds = %327, %334
  %335 = phi i64 [ %340, %334 ], [ %328, %327 ]
  %336 = phi i16* [ %342, %334 ], [ %329, %327 ]
  %337 = phi i16* [ %341, %334 ], [ %330, %327 ]
  %338 = phi i64 [ %343, %334 ], [ %332, %327 ]
  %339 = load i16, i16* %336, align 2
  store i16 %339, i16* %337, align 2
  %340 = add i64 %335, -1
  %341 = getelementptr inbounds i16, i16* %337, i64 1
  %342 = getelementptr inbounds i16, i16* %336, i64 1
  %343 = add i64 %338, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %334, !llvm.loop !117

345:                                              ; preds = %334, %327
  %346 = phi i64 [ %328, %327 ], [ %340, %334 ]
  %347 = phi i16* [ %329, %327 ], [ %342, %334 ]
  %348 = phi i16* [ %330, %327 ], [ %341, %334 ]
  %349 = icmp ult i64 %331, 7
  br i1 %349, label %380, label %350

350:                                              ; preds = %345, %350
  %351 = phi i64 [ %376, %350 ], [ %346, %345 ]
  %352 = phi i16* [ %378, %350 ], [ %347, %345 ]
  %353 = phi i16* [ %377, %350 ], [ %348, %345 ]
  %354 = load i16, i16* %352, align 2
  store i16 %354, i16* %353, align 2
  %355 = getelementptr inbounds i16, i16* %353, i64 1
  %356 = getelementptr inbounds i16, i16* %352, i64 1
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %353, i64 2
  %359 = getelementptr inbounds i16, i16* %352, i64 2
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %353, i64 3
  %362 = getelementptr inbounds i16, i16* %352, i64 3
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %353, i64 4
  %365 = getelementptr inbounds i16, i16* %352, i64 4
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %353, i64 5
  %368 = getelementptr inbounds i16, i16* %352, i64 5
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %353, i64 6
  %371 = getelementptr inbounds i16, i16* %352, i64 6
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %353, i64 7
  %374 = getelementptr inbounds i16, i16* %352, i64 7
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = add i64 %351, -8
  %377 = getelementptr inbounds i16, i16* %353, i64 8
  %378 = getelementptr inbounds i16, i16* %352, i64 8
  %379 = icmp eq i64 %376, 0
  br i1 %379, label %380, label %350, !llvm.loop !118

380:                                              ; preds = %345, %350, %325, %202
  %381 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2
  %382 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %382, i64 0, i32 1, i32 1
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %389, label %386

386:                                              ; preds = %380
  %387 = bitcast %"class.std::__1::basic_string.8"* %381 to i8*
  %388 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %387, i8* align 8 %388, i64 24, i1 false) #16
  br label %564

389:                                              ; preds = %380
  %390 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load i16*, i16** %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = icmp ult i64 %393, 11
  br i1 %394, label %395, label %400

395:                                              ; preds = %389
  %396 = bitcast %"class.std::__1::basic_string.8"* %381 to i16*
  %397 = trunc i64 %393 to i8
  %398 = bitcast %"class.std::__1::basic_string.8"* %381 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %398, i64 0, i32 1, i32 1
  store i8 %397, i8* %399, align 1
  br label %417

400:                                              ; preds = %389
  %401 = icmp ugt i64 %393, 9223372036854775791
  br i1 %401, label %402, label %404

402:                                              ; preds = %400
  %403 = bitcast %"class.std::__1::basic_string.8"* %381 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %403) #17
  unreachable

404:                                              ; preds = %400
  %405 = add nuw nsw i64 %393, 8
  %406 = and i64 %405, -8
  %407 = icmp slt i64 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %404
  tail call void @abort() #17
  unreachable

409:                                              ; preds = %404
  %410 = shl i64 %406, 1
  %411 = tail call i8* @_Znwm(i64 %410) #18
  %412 = bitcast i8* %411 to i16*
  %413 = bitcast %"class.std::__1::basic_string.8"* %381 to i8**
  store i8* %411, i8** %413, align 8
  %414 = or i64 %406, -9223372036854775808
  %415 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %393, i64* %416, align 8
  br label %417

417:                                              ; preds = %409, %395
  %418 = phi i16* [ %396, %395 ], [ %412, %409 ]
  %419 = add nuw nsw i64 %393, 1
  %420 = add i64 %393, 1
  %421 = icmp ult i64 %420, 16
  br i1 %421, label %511, label %422

422:                                              ; preds = %417
  %423 = add i64 %393, 1
  %424 = getelementptr i16, i16* %418, i64 %423
  %425 = getelementptr i16, i16* %391, i64 %423
  %426 = icmp ult i16* %418, %425
  %427 = icmp ult i16* %391, %424
  %428 = and i1 %426, %427
  br i1 %428, label %511, label %429

429:                                              ; preds = %422
  %430 = and i64 %420, -16
  %431 = sub i64 %419, %430
  %432 = getelementptr i16, i16* %391, i64 %430
  %433 = getelementptr i16, i16* %418, i64 %430
  %434 = add i64 %430, -16
  %435 = lshr exact i64 %434, 4
  %436 = add nuw nsw i64 %435, 1
  %437 = and i64 %436, 3
  %438 = icmp ult i64 %434, 48
  br i1 %438, label %490, label %439

439:                                              ; preds = %429
  %440 = sub nsw i64 %436, %437
  br label %441

441:                                              ; preds = %441, %439
  %442 = phi i64 [ 0, %439 ], [ %487, %441 ]
  %443 = phi i64 [ %440, %439 ], [ %488, %441 ]
  %444 = getelementptr i16, i16* %391, i64 %442
  %445 = getelementptr i16, i16* %418, i64 %442
  %446 = bitcast i16* %444 to <8 x i16>*
  %447 = load <8 x i16>, <8 x i16>* %446, align 2, !alias.scope !119
  %448 = getelementptr i16, i16* %444, i64 8
  %449 = bitcast i16* %448 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !119
  %451 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %451, align 2, !alias.scope !122, !noalias !119
  %452 = getelementptr i16, i16* %445, i64 8
  %453 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %453, align 2, !alias.scope !122, !noalias !119
  %454 = or i64 %442, 16
  %455 = getelementptr i16, i16* %391, i64 %454
  %456 = getelementptr i16, i16* %418, i64 %454
  %457 = bitcast i16* %455 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !119
  %459 = getelementptr i16, i16* %455, i64 8
  %460 = bitcast i16* %459 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !119
  %462 = bitcast i16* %456 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %462, align 2, !alias.scope !122, !noalias !119
  %463 = getelementptr i16, i16* %456, i64 8
  %464 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %464, align 2, !alias.scope !122, !noalias !119
  %465 = or i64 %442, 32
  %466 = getelementptr i16, i16* %391, i64 %465
  %467 = getelementptr i16, i16* %418, i64 %465
  %468 = bitcast i16* %466 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !119
  %470 = getelementptr i16, i16* %466, i64 8
  %471 = bitcast i16* %470 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !119
  %473 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %473, align 2, !alias.scope !122, !noalias !119
  %474 = getelementptr i16, i16* %467, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %475, align 2, !alias.scope !122, !noalias !119
  %476 = or i64 %442, 48
  %477 = getelementptr i16, i16* %391, i64 %476
  %478 = getelementptr i16, i16* %418, i64 %476
  %479 = bitcast i16* %477 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !119
  %481 = getelementptr i16, i16* %477, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !119
  %484 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %484, align 2, !alias.scope !122, !noalias !119
  %485 = getelementptr i16, i16* %478, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %486, align 2, !alias.scope !122, !noalias !119
  %487 = add i64 %442, 64
  %488 = add i64 %443, -4
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %490, label %441, !llvm.loop !124

490:                                              ; preds = %441, %429
  %491 = phi i64 [ 0, %429 ], [ %487, %441 ]
  %492 = icmp eq i64 %437, 0
  br i1 %492, label %509, label %493

493:                                              ; preds = %490, %493
  %494 = phi i64 [ %506, %493 ], [ %491, %490 ]
  %495 = phi i64 [ %507, %493 ], [ %437, %490 ]
  %496 = getelementptr i16, i16* %391, i64 %494
  %497 = getelementptr i16, i16* %418, i64 %494
  %498 = bitcast i16* %496 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !119
  %500 = getelementptr i16, i16* %496, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !119
  %503 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %503, align 2, !alias.scope !122, !noalias !119
  %504 = getelementptr i16, i16* %497, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %505, align 2, !alias.scope !122, !noalias !119
  %506 = add i64 %494, 16
  %507 = add i64 %495, -1
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %509, label %493, !llvm.loop !125

509:                                              ; preds = %493, %490
  %510 = icmp eq i64 %420, %430
  br i1 %510, label %564, label %511

511:                                              ; preds = %509, %422, %417
  %512 = phi i64 [ %419, %422 ], [ %419, %417 ], [ %431, %509 ]
  %513 = phi i16* [ %391, %422 ], [ %391, %417 ], [ %432, %509 ]
  %514 = phi i16* [ %418, %422 ], [ %418, %417 ], [ %433, %509 ]
  %515 = add i64 %512, -1
  %516 = and i64 %512, 7
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %529, label %518

518:                                              ; preds = %511, %518
  %519 = phi i64 [ %524, %518 ], [ %512, %511 ]
  %520 = phi i16* [ %526, %518 ], [ %513, %511 ]
  %521 = phi i16* [ %525, %518 ], [ %514, %511 ]
  %522 = phi i64 [ %527, %518 ], [ %516, %511 ]
  %523 = load i16, i16* %520, align 2
  store i16 %523, i16* %521, align 2
  %524 = add i64 %519, -1
  %525 = getelementptr inbounds i16, i16* %521, i64 1
  %526 = getelementptr inbounds i16, i16* %520, i64 1
  %527 = add i64 %522, -1
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %529, label %518, !llvm.loop !126

529:                                              ; preds = %518, %511
  %530 = phi i64 [ %512, %511 ], [ %524, %518 ]
  %531 = phi i16* [ %513, %511 ], [ %526, %518 ]
  %532 = phi i16* [ %514, %511 ], [ %525, %518 ]
  %533 = icmp ult i64 %515, 7
  br i1 %533, label %564, label %534

534:                                              ; preds = %529, %534
  %535 = phi i64 [ %560, %534 ], [ %530, %529 ]
  %536 = phi i16* [ %562, %534 ], [ %531, %529 ]
  %537 = phi i16* [ %561, %534 ], [ %532, %529 ]
  %538 = load i16, i16* %536, align 2
  store i16 %538, i16* %537, align 2
  %539 = getelementptr inbounds i16, i16* %537, i64 1
  %540 = getelementptr inbounds i16, i16* %536, i64 1
  %541 = load i16, i16* %540, align 2
  store i16 %541, i16* %539, align 2
  %542 = getelementptr inbounds i16, i16* %537, i64 2
  %543 = getelementptr inbounds i16, i16* %536, i64 2
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %537, i64 3
  %546 = getelementptr inbounds i16, i16* %536, i64 3
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %537, i64 4
  %549 = getelementptr inbounds i16, i16* %536, i64 4
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %537, i64 5
  %552 = getelementptr inbounds i16, i16* %536, i64 5
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = getelementptr inbounds i16, i16* %537, i64 6
  %555 = getelementptr inbounds i16, i16* %536, i64 6
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %537, i64 7
  %558 = getelementptr inbounds i16, i16* %536, i64 7
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = add i64 %535, -8
  %561 = getelementptr inbounds i16, i16* %537, i64 8
  %562 = getelementptr inbounds i16, i16* %536, i64 8
  %563 = icmp eq i64 %560, 0
  br i1 %563, label %564, label %534, !llvm.loop !127

564:                                              ; preds = %529, %534, %509, %386
  %565 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3
  %566 = bitcast %"class.std::__1::basic_string.8"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %567 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %566, i64 0, i32 1, i32 1
  %568 = load i8, i8* %567, align 1
  %569 = icmp slt i8 %568, 0
  br i1 %569, label %573, label %570

570:                                              ; preds = %564
  %571 = bitcast %"class.std::__1::basic_string.8"* %565 to i8*
  %572 = bitcast %"class.std::__1::basic_string.8"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %571, i8* align 8 %572, i64 24, i1 false) #16
  br label %748

573:                                              ; preds = %564
  %574 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load i16*, i16** %574, align 8
  %576 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %577 = load i64, i64* %576, align 8
  %578 = icmp ult i64 %577, 11
  br i1 %578, label %579, label %584

579:                                              ; preds = %573
  %580 = bitcast %"class.std::__1::basic_string.8"* %565 to i16*
  %581 = trunc i64 %577 to i8
  %582 = bitcast %"class.std::__1::basic_string.8"* %565 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %583 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %582, i64 0, i32 1, i32 1
  store i8 %581, i8* %583, align 1
  br label %601

584:                                              ; preds = %573
  %585 = icmp ugt i64 %577, 9223372036854775791
  br i1 %585, label %586, label %588

586:                                              ; preds = %584
  %587 = bitcast %"class.std::__1::basic_string.8"* %565 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %587) #17
  unreachable

588:                                              ; preds = %584
  %589 = add nuw nsw i64 %577, 8
  %590 = and i64 %589, -8
  %591 = icmp slt i64 %590, 0
  br i1 %591, label %592, label %593

592:                                              ; preds = %588
  tail call void @abort() #17
  unreachable

593:                                              ; preds = %588
  %594 = shl i64 %590, 1
  %595 = tail call i8* @_Znwm(i64 %594) #18
  %596 = bitcast i8* %595 to i16*
  %597 = bitcast %"class.std::__1::basic_string.8"* %565 to i8**
  store i8* %595, i8** %597, align 8
  %598 = or i64 %590, -9223372036854775808
  %599 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %598, i64* %599, align 8
  %600 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %577, i64* %600, align 8
  br label %601

601:                                              ; preds = %593, %579
  %602 = phi i16* [ %580, %579 ], [ %596, %593 ]
  %603 = add nuw nsw i64 %577, 1
  %604 = add i64 %577, 1
  %605 = icmp ult i64 %604, 16
  br i1 %605, label %695, label %606

606:                                              ; preds = %601
  %607 = add i64 %577, 1
  %608 = getelementptr i16, i16* %602, i64 %607
  %609 = getelementptr i16, i16* %575, i64 %607
  %610 = icmp ult i16* %602, %609
  %611 = icmp ult i16* %575, %608
  %612 = and i1 %610, %611
  br i1 %612, label %695, label %613

613:                                              ; preds = %606
  %614 = and i64 %604, -16
  %615 = sub i64 %603, %614
  %616 = getelementptr i16, i16* %575, i64 %614
  %617 = getelementptr i16, i16* %602, i64 %614
  %618 = add i64 %614, -16
  %619 = lshr exact i64 %618, 4
  %620 = add nuw nsw i64 %619, 1
  %621 = and i64 %620, 3
  %622 = icmp ult i64 %618, 48
  br i1 %622, label %674, label %623

623:                                              ; preds = %613
  %624 = sub nsw i64 %620, %621
  br label %625

625:                                              ; preds = %625, %623
  %626 = phi i64 [ 0, %623 ], [ %671, %625 ]
  %627 = phi i64 [ %624, %623 ], [ %672, %625 ]
  %628 = getelementptr i16, i16* %575, i64 %626
  %629 = getelementptr i16, i16* %602, i64 %626
  %630 = bitcast i16* %628 to <8 x i16>*
  %631 = load <8 x i16>, <8 x i16>* %630, align 2, !alias.scope !128
  %632 = getelementptr i16, i16* %628, i64 8
  %633 = bitcast i16* %632 to <8 x i16>*
  %634 = load <8 x i16>, <8 x i16>* %633, align 2, !alias.scope !128
  %635 = bitcast i16* %629 to <8 x i16>*
  store <8 x i16> %631, <8 x i16>* %635, align 2, !alias.scope !131, !noalias !128
  %636 = getelementptr i16, i16* %629, i64 8
  %637 = bitcast i16* %636 to <8 x i16>*
  store <8 x i16> %634, <8 x i16>* %637, align 2, !alias.scope !131, !noalias !128
  %638 = or i64 %626, 16
  %639 = getelementptr i16, i16* %575, i64 %638
  %640 = getelementptr i16, i16* %602, i64 %638
  %641 = bitcast i16* %639 to <8 x i16>*
  %642 = load <8 x i16>, <8 x i16>* %641, align 2, !alias.scope !128
  %643 = getelementptr i16, i16* %639, i64 8
  %644 = bitcast i16* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !128
  %646 = bitcast i16* %640 to <8 x i16>*
  store <8 x i16> %642, <8 x i16>* %646, align 2, !alias.scope !131, !noalias !128
  %647 = getelementptr i16, i16* %640, i64 8
  %648 = bitcast i16* %647 to <8 x i16>*
  store <8 x i16> %645, <8 x i16>* %648, align 2, !alias.scope !131, !noalias !128
  %649 = or i64 %626, 32
  %650 = getelementptr i16, i16* %575, i64 %649
  %651 = getelementptr i16, i16* %602, i64 %649
  %652 = bitcast i16* %650 to <8 x i16>*
  %653 = load <8 x i16>, <8 x i16>* %652, align 2, !alias.scope !128
  %654 = getelementptr i16, i16* %650, i64 8
  %655 = bitcast i16* %654 to <8 x i16>*
  %656 = load <8 x i16>, <8 x i16>* %655, align 2, !alias.scope !128
  %657 = bitcast i16* %651 to <8 x i16>*
  store <8 x i16> %653, <8 x i16>* %657, align 2, !alias.scope !131, !noalias !128
  %658 = getelementptr i16, i16* %651, i64 8
  %659 = bitcast i16* %658 to <8 x i16>*
  store <8 x i16> %656, <8 x i16>* %659, align 2, !alias.scope !131, !noalias !128
  %660 = or i64 %626, 48
  %661 = getelementptr i16, i16* %575, i64 %660
  %662 = getelementptr i16, i16* %602, i64 %660
  %663 = bitcast i16* %661 to <8 x i16>*
  %664 = load <8 x i16>, <8 x i16>* %663, align 2, !alias.scope !128
  %665 = getelementptr i16, i16* %661, i64 8
  %666 = bitcast i16* %665 to <8 x i16>*
  %667 = load <8 x i16>, <8 x i16>* %666, align 2, !alias.scope !128
  %668 = bitcast i16* %662 to <8 x i16>*
  store <8 x i16> %664, <8 x i16>* %668, align 2, !alias.scope !131, !noalias !128
  %669 = getelementptr i16, i16* %662, i64 8
  %670 = bitcast i16* %669 to <8 x i16>*
  store <8 x i16> %667, <8 x i16>* %670, align 2, !alias.scope !131, !noalias !128
  %671 = add i64 %626, 64
  %672 = add i64 %627, -4
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %674, label %625, !llvm.loop !133

674:                                              ; preds = %625, %613
  %675 = phi i64 [ 0, %613 ], [ %671, %625 ]
  %676 = icmp eq i64 %621, 0
  br i1 %676, label %693, label %677

677:                                              ; preds = %674, %677
  %678 = phi i64 [ %690, %677 ], [ %675, %674 ]
  %679 = phi i64 [ %691, %677 ], [ %621, %674 ]
  %680 = getelementptr i16, i16* %575, i64 %678
  %681 = getelementptr i16, i16* %602, i64 %678
  %682 = bitcast i16* %680 to <8 x i16>*
  %683 = load <8 x i16>, <8 x i16>* %682, align 2, !alias.scope !128
  %684 = getelementptr i16, i16* %680, i64 8
  %685 = bitcast i16* %684 to <8 x i16>*
  %686 = load <8 x i16>, <8 x i16>* %685, align 2, !alias.scope !128
  %687 = bitcast i16* %681 to <8 x i16>*
  store <8 x i16> %683, <8 x i16>* %687, align 2, !alias.scope !131, !noalias !128
  %688 = getelementptr i16, i16* %681, i64 8
  %689 = bitcast i16* %688 to <8 x i16>*
  store <8 x i16> %686, <8 x i16>* %689, align 2, !alias.scope !131, !noalias !128
  %690 = add i64 %678, 16
  %691 = add i64 %679, -1
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %693, label %677, !llvm.loop !134

693:                                              ; preds = %677, %674
  %694 = icmp eq i64 %604, %614
  br i1 %694, label %748, label %695

695:                                              ; preds = %693, %606, %601
  %696 = phi i64 [ %603, %606 ], [ %603, %601 ], [ %615, %693 ]
  %697 = phi i16* [ %575, %606 ], [ %575, %601 ], [ %616, %693 ]
  %698 = phi i16* [ %602, %606 ], [ %602, %601 ], [ %617, %693 ]
  %699 = add i64 %696, -1
  %700 = and i64 %696, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %713, label %702

702:                                              ; preds = %695, %702
  %703 = phi i64 [ %708, %702 ], [ %696, %695 ]
  %704 = phi i16* [ %710, %702 ], [ %697, %695 ]
  %705 = phi i16* [ %709, %702 ], [ %698, %695 ]
  %706 = phi i64 [ %711, %702 ], [ %700, %695 ]
  %707 = load i16, i16* %704, align 2
  store i16 %707, i16* %705, align 2
  %708 = add i64 %703, -1
  %709 = getelementptr inbounds i16, i16* %705, i64 1
  %710 = getelementptr inbounds i16, i16* %704, i64 1
  %711 = add i64 %706, -1
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %713, label %702, !llvm.loop !135

713:                                              ; preds = %702, %695
  %714 = phi i64 [ %696, %695 ], [ %708, %702 ]
  %715 = phi i16* [ %697, %695 ], [ %710, %702 ]
  %716 = phi i16* [ %698, %695 ], [ %709, %702 ]
  %717 = icmp ult i64 %699, 7
  br i1 %717, label %748, label %718

718:                                              ; preds = %713, %718
  %719 = phi i64 [ %744, %718 ], [ %714, %713 ]
  %720 = phi i16* [ %746, %718 ], [ %715, %713 ]
  %721 = phi i16* [ %745, %718 ], [ %716, %713 ]
  %722 = load i16, i16* %720, align 2
  store i16 %722, i16* %721, align 2
  %723 = getelementptr inbounds i16, i16* %721, i64 1
  %724 = getelementptr inbounds i16, i16* %720, i64 1
  %725 = load i16, i16* %724, align 2
  store i16 %725, i16* %723, align 2
  %726 = getelementptr inbounds i16, i16* %721, i64 2
  %727 = getelementptr inbounds i16, i16* %720, i64 2
  %728 = load i16, i16* %727, align 2
  store i16 %728, i16* %726, align 2
  %729 = getelementptr inbounds i16, i16* %721, i64 3
  %730 = getelementptr inbounds i16, i16* %720, i64 3
  %731 = load i16, i16* %730, align 2
  store i16 %731, i16* %729, align 2
  %732 = getelementptr inbounds i16, i16* %721, i64 4
  %733 = getelementptr inbounds i16, i16* %720, i64 4
  %734 = load i16, i16* %733, align 2
  store i16 %734, i16* %732, align 2
  %735 = getelementptr inbounds i16, i16* %721, i64 5
  %736 = getelementptr inbounds i16, i16* %720, i64 5
  %737 = load i16, i16* %736, align 2
  store i16 %737, i16* %735, align 2
  %738 = getelementptr inbounds i16, i16* %721, i64 6
  %739 = getelementptr inbounds i16, i16* %720, i64 6
  %740 = load i16, i16* %739, align 2
  store i16 %740, i16* %738, align 2
  %741 = getelementptr inbounds i16, i16* %721, i64 7
  %742 = getelementptr inbounds i16, i16* %720, i64 7
  %743 = load i16, i16* %742, align 2
  store i16 %743, i16* %741, align 2
  %744 = add i64 %719, -8
  %745 = getelementptr inbounds i16, i16* %721, i64 8
  %746 = getelementptr inbounds i16, i16* %720, i64 8
  %747 = icmp eq i64 %744, 0
  br i1 %747, label %748, label %718, !llvm.loop !136

748:                                              ; preds = %713, %718, %693, %570
  %749 = tail call i8* @_Znwm(i64 96) #18
  %750 = bitcast %"class.std::__1::basic_string.8"** %11 to i8**
  store i8* %749, i8** %750, align 8
  %751 = bitcast %"class.std::__1::vector.72"* %7 to i8**
  store i8* %749, i8** %751, align 8
  %752 = getelementptr inbounds i8, i8* %749, i64 96
  %753 = bitcast %"class.std::__1::basic_string.8"** %12 to i8**
  store i8* %752, i8** %753, align 8
  %754 = bitcast %"class.std::__1::basic_string.8"** %11 to i64*
  %755 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %756 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %755, i64 0, i32 1, i32 1
  %757 = load i8, i8* %756, align 1
  %758 = icmp slt i8 %757, 0
  br i1 %758, label %761, label %759

759:                                              ; preds = %748
  %760 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %749, i8* nonnull align 8 %760, i64 24, i1 false) #16
  br label %941

761:                                              ; preds = %748
  %762 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i16*, i16** %762, align 8
  %764 = bitcast i16* %763 to i8*
  %765 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %766 = load i64, i64* %765, align 8
  %767 = icmp ult i64 %766, 11
  br i1 %767, label %768, label %771

768:                                              ; preds = %761
  %769 = trunc i64 %766 to i8
  %770 = getelementptr inbounds i8, i8* %749, i64 23
  store i8 %769, i8* %770, align 1
  br label %790

771:                                              ; preds = %761
  %772 = icmp ugt i64 %766, 9223372036854775791
  br i1 %772, label %773, label %776

773:                                              ; preds = %1380, %1195, %1010, %771
  %774 = phi i8* [ %749, %771 ], [ %943, %1010 ], [ %1181, %1195 ], [ %1366, %1380 ]
  %775 = bitcast i8* %774 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %775) #17
  unreachable

776:                                              ; preds = %771
  %777 = add nuw nsw i64 %766, 8
  %778 = and i64 %777, -8
  %779 = icmp slt i64 %778, 0
  br i1 %779, label %780, label %781

780:                                              ; preds = %1382, %1197, %1012, %776
  call void @abort() #17
  unreachable

781:                                              ; preds = %776
  %782 = shl i64 %778, 1
  %783 = call i8* @_Znwm(i64 %782) #18
  %784 = bitcast i8* %749 to i8**
  store i8* %783, i8** %784, align 8
  %785 = or i64 %778, -9223372036854775808
  %786 = getelementptr inbounds i8, i8* %749, i64 16
  %787 = bitcast i8* %786 to i64*
  store i64 %785, i64* %787, align 8
  %788 = getelementptr inbounds i8, i8* %749, i64 8
  %789 = bitcast i8* %788 to i64*
  store i64 %766, i64* %789, align 8
  br label %790

790:                                              ; preds = %781, %768
  %791 = phi i8* [ %749, %768 ], [ %783, %781 ]
  %792 = bitcast i8* %791 to i16*
  %793 = add nuw nsw i64 %766, 1
  %794 = add i64 %766, 1
  %795 = icmp ult i64 %794, 16
  br i1 %795, label %888, label %796

796:                                              ; preds = %790
  %797 = shl i64 %766, 1
  %798 = add i64 %797, 2
  %799 = getelementptr i8, i8* %791, i64 %798
  %800 = add i64 %766, 1
  %801 = getelementptr i16, i16* %763, i64 %800
  %802 = bitcast i16* %801 to i8*
  %803 = icmp ult i8* %791, %802
  %804 = icmp ugt i8* %799, %764
  %805 = and i1 %803, %804
  br i1 %805, label %888, label %806

806:                                              ; preds = %796
  %807 = and i64 %794, -16
  %808 = sub i64 %793, %807
  %809 = getelementptr i16, i16* %763, i64 %807
  %810 = getelementptr i16, i16* %792, i64 %807
  %811 = add i64 %807, -16
  %812 = lshr exact i64 %811, 4
  %813 = add nuw nsw i64 %812, 1
  %814 = and i64 %813, 3
  %815 = icmp ult i64 %811, 48
  br i1 %815, label %867, label %816

816:                                              ; preds = %806
  %817 = sub nsw i64 %813, %814
  br label %818

818:                                              ; preds = %818, %816
  %819 = phi i64 [ 0, %816 ], [ %864, %818 ]
  %820 = phi i64 [ %817, %816 ], [ %865, %818 ]
  %821 = getelementptr i16, i16* %763, i64 %819
  %822 = getelementptr i16, i16* %792, i64 %819
  %823 = bitcast i16* %821 to <8 x i16>*
  %824 = load <8 x i16>, <8 x i16>* %823, align 2, !alias.scope !137
  %825 = getelementptr i16, i16* %821, i64 8
  %826 = bitcast i16* %825 to <8 x i16>*
  %827 = load <8 x i16>, <8 x i16>* %826, align 2, !alias.scope !137
  %828 = bitcast i16* %822 to <8 x i16>*
  store <8 x i16> %824, <8 x i16>* %828, align 2, !alias.scope !140, !noalias !137
  %829 = getelementptr i16, i16* %822, i64 8
  %830 = bitcast i16* %829 to <8 x i16>*
  store <8 x i16> %827, <8 x i16>* %830, align 2, !alias.scope !140, !noalias !137
  %831 = or i64 %819, 16
  %832 = getelementptr i16, i16* %763, i64 %831
  %833 = getelementptr i16, i16* %792, i64 %831
  %834 = bitcast i16* %832 to <8 x i16>*
  %835 = load <8 x i16>, <8 x i16>* %834, align 2, !alias.scope !137
  %836 = getelementptr i16, i16* %832, i64 8
  %837 = bitcast i16* %836 to <8 x i16>*
  %838 = load <8 x i16>, <8 x i16>* %837, align 2, !alias.scope !137
  %839 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %835, <8 x i16>* %839, align 2, !alias.scope !140, !noalias !137
  %840 = getelementptr i16, i16* %833, i64 8
  %841 = bitcast i16* %840 to <8 x i16>*
  store <8 x i16> %838, <8 x i16>* %841, align 2, !alias.scope !140, !noalias !137
  %842 = or i64 %819, 32
  %843 = getelementptr i16, i16* %763, i64 %842
  %844 = getelementptr i16, i16* %792, i64 %842
  %845 = bitcast i16* %843 to <8 x i16>*
  %846 = load <8 x i16>, <8 x i16>* %845, align 2, !alias.scope !137
  %847 = getelementptr i16, i16* %843, i64 8
  %848 = bitcast i16* %847 to <8 x i16>*
  %849 = load <8 x i16>, <8 x i16>* %848, align 2, !alias.scope !137
  %850 = bitcast i16* %844 to <8 x i16>*
  store <8 x i16> %846, <8 x i16>* %850, align 2, !alias.scope !140, !noalias !137
  %851 = getelementptr i16, i16* %844, i64 8
  %852 = bitcast i16* %851 to <8 x i16>*
  store <8 x i16> %849, <8 x i16>* %852, align 2, !alias.scope !140, !noalias !137
  %853 = or i64 %819, 48
  %854 = getelementptr i16, i16* %763, i64 %853
  %855 = getelementptr i16, i16* %792, i64 %853
  %856 = bitcast i16* %854 to <8 x i16>*
  %857 = load <8 x i16>, <8 x i16>* %856, align 2, !alias.scope !137
  %858 = getelementptr i16, i16* %854, i64 8
  %859 = bitcast i16* %858 to <8 x i16>*
  %860 = load <8 x i16>, <8 x i16>* %859, align 2, !alias.scope !137
  %861 = bitcast i16* %855 to <8 x i16>*
  store <8 x i16> %857, <8 x i16>* %861, align 2, !alias.scope !140, !noalias !137
  %862 = getelementptr i16, i16* %855, i64 8
  %863 = bitcast i16* %862 to <8 x i16>*
  store <8 x i16> %860, <8 x i16>* %863, align 2, !alias.scope !140, !noalias !137
  %864 = add i64 %819, 64
  %865 = add i64 %820, -4
  %866 = icmp eq i64 %865, 0
  br i1 %866, label %867, label %818, !llvm.loop !142

867:                                              ; preds = %818, %806
  %868 = phi i64 [ 0, %806 ], [ %864, %818 ]
  %869 = icmp eq i64 %814, 0
  br i1 %869, label %886, label %870

870:                                              ; preds = %867, %870
  %871 = phi i64 [ %883, %870 ], [ %868, %867 ]
  %872 = phi i64 [ %884, %870 ], [ %814, %867 ]
  %873 = getelementptr i16, i16* %763, i64 %871
  %874 = getelementptr i16, i16* %792, i64 %871
  %875 = bitcast i16* %873 to <8 x i16>*
  %876 = load <8 x i16>, <8 x i16>* %875, align 2, !alias.scope !137
  %877 = getelementptr i16, i16* %873, i64 8
  %878 = bitcast i16* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !137
  %880 = bitcast i16* %874 to <8 x i16>*
  store <8 x i16> %876, <8 x i16>* %880, align 2, !alias.scope !140, !noalias !137
  %881 = getelementptr i16, i16* %874, i64 8
  %882 = bitcast i16* %881 to <8 x i16>*
  store <8 x i16> %879, <8 x i16>* %882, align 2, !alias.scope !140, !noalias !137
  %883 = add i64 %871, 16
  %884 = add i64 %872, -1
  %885 = icmp eq i64 %884, 0
  br i1 %885, label %886, label %870, !llvm.loop !143

886:                                              ; preds = %870, %867
  %887 = icmp eq i64 %794, %807
  br i1 %887, label %941, label %888

888:                                              ; preds = %886, %796, %790
  %889 = phi i64 [ %793, %796 ], [ %793, %790 ], [ %808, %886 ]
  %890 = phi i16* [ %763, %796 ], [ %763, %790 ], [ %809, %886 ]
  %891 = phi i16* [ %792, %796 ], [ %792, %790 ], [ %810, %886 ]
  %892 = add i64 %889, -1
  %893 = and i64 %889, 7
  %894 = icmp eq i64 %893, 0
  br i1 %894, label %906, label %895

895:                                              ; preds = %888, %895
  %896 = phi i64 [ %901, %895 ], [ %889, %888 ]
  %897 = phi i16* [ %903, %895 ], [ %890, %888 ]
  %898 = phi i16* [ %902, %895 ], [ %891, %888 ]
  %899 = phi i64 [ %904, %895 ], [ %893, %888 ]
  %900 = load i16, i16* %897, align 2
  store i16 %900, i16* %898, align 2
  %901 = add i64 %896, -1
  %902 = getelementptr inbounds i16, i16* %898, i64 1
  %903 = getelementptr inbounds i16, i16* %897, i64 1
  %904 = add i64 %899, -1
  %905 = icmp eq i64 %904, 0
  br i1 %905, label %906, label %895, !llvm.loop !144

906:                                              ; preds = %895, %888
  %907 = phi i64 [ %889, %888 ], [ %901, %895 ]
  %908 = phi i16* [ %890, %888 ], [ %903, %895 ]
  %909 = phi i16* [ %891, %888 ], [ %902, %895 ]
  %910 = icmp ult i64 %892, 7
  br i1 %910, label %941, label %911

911:                                              ; preds = %906, %911
  %912 = phi i64 [ %937, %911 ], [ %907, %906 ]
  %913 = phi i16* [ %939, %911 ], [ %908, %906 ]
  %914 = phi i16* [ %938, %911 ], [ %909, %906 ]
  %915 = load i16, i16* %913, align 2
  store i16 %915, i16* %914, align 2
  %916 = getelementptr inbounds i16, i16* %914, i64 1
  %917 = getelementptr inbounds i16, i16* %913, i64 1
  %918 = load i16, i16* %917, align 2
  store i16 %918, i16* %916, align 2
  %919 = getelementptr inbounds i16, i16* %914, i64 2
  %920 = getelementptr inbounds i16, i16* %913, i64 2
  %921 = load i16, i16* %920, align 2
  store i16 %921, i16* %919, align 2
  %922 = getelementptr inbounds i16, i16* %914, i64 3
  %923 = getelementptr inbounds i16, i16* %913, i64 3
  %924 = load i16, i16* %923, align 2
  store i16 %924, i16* %922, align 2
  %925 = getelementptr inbounds i16, i16* %914, i64 4
  %926 = getelementptr inbounds i16, i16* %913, i64 4
  %927 = load i16, i16* %926, align 2
  store i16 %927, i16* %925, align 2
  %928 = getelementptr inbounds i16, i16* %914, i64 5
  %929 = getelementptr inbounds i16, i16* %913, i64 5
  %930 = load i16, i16* %929, align 2
  store i16 %930, i16* %928, align 2
  %931 = getelementptr inbounds i16, i16* %914, i64 6
  %932 = getelementptr inbounds i16, i16* %913, i64 6
  %933 = load i16, i16* %932, align 2
  store i16 %933, i16* %931, align 2
  %934 = getelementptr inbounds i16, i16* %914, i64 7
  %935 = getelementptr inbounds i16, i16* %913, i64 7
  %936 = load i16, i16* %935, align 2
  store i16 %936, i16* %934, align 2
  %937 = add i64 %912, -8
  %938 = getelementptr inbounds i16, i16* %914, i64 8
  %939 = getelementptr inbounds i16, i16* %913, i64 8
  %940 = icmp eq i64 %937, 0
  br i1 %940, label %941, label %911, !llvm.loop !145

941:                                              ; preds = %906, %911, %886, %759
  %942 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1
  %943 = getelementptr inbounds i8, i8* %749, i64 24
  %944 = bitcast %"class.std::__1::basic_string.8"* %942 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %945 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %944, i64 0, i32 1, i32 1
  %946 = load i8, i8* %945, align 1
  %947 = icmp slt i8 %946, 0
  br i1 %947, label %1003, label %1001

948:                                              ; preds = %1549
  %949 = bitcast %"class.std::__1::basic_string.8"* %1552 to i8**
  %950 = load i8*, i8** %949, align 8
  call void @_ZdlPv(i8* %950) #18
  br label %951

951:                                              ; preds = %1549, %948
  %952 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2
  %953 = bitcast %"class.std::__1::basic_string.8"* %952 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %954 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %953, i64 0, i32 1, i32 1
  %955 = load i8, i8* %954, align 1
  %956 = icmp slt i8 %955, 0
  br i1 %956, label %978, label %981

957:                                              ; preds = %998
  %958 = bitcast %"class.std::__1::basic_string.8"* %999 to i8*
  %959 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %11, align 8
  %960 = icmp eq %"class.std::__1::basic_string.8"* %959, %999
  br i1 %960, label %975, label %961

961:                                              ; preds = %957, %971
  %962 = phi %"class.std::__1::basic_string.8"* [ %963, %971 ], [ %959, %957 ]
  %963 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %962, i64 -1
  %964 = bitcast %"class.std::__1::basic_string.8"* %963 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %965 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %964, i64 0, i32 1, i32 1
  %966 = load i8, i8* %965, align 1
  %967 = icmp slt i8 %966, 0
  br i1 %967, label %968, label %971

968:                                              ; preds = %961
  %969 = bitcast %"class.std::__1::basic_string.8"* %963 to i8**
  %970 = load i8*, i8** %969, align 8
  call void @_ZdlPv(i8* %970) #18
  br label %971

971:                                              ; preds = %968, %961
  %972 = icmp eq %"class.std::__1::basic_string.8"* %963, %999
  br i1 %972, label %973, label %961

973:                                              ; preds = %971
  %974 = load i8*, i8** %751, align 8
  br label %975

975:                                              ; preds = %973, %957
  %976 = phi i8* [ %974, %973 ], [ %958, %957 ]
  store %"class.std::__1::basic_string.8"* %999, %"class.std::__1::basic_string.8"** %11, align 8
  call void @_ZdlPv(i8* %976) #18
  br label %977

977:                                              ; preds = %998, %975
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void

978:                                              ; preds = %951
  %979 = bitcast %"class.std::__1::basic_string.8"* %952 to i8**
  %980 = load i8*, i8** %979, align 8
  call void @_ZdlPv(i8* %980) #18
  br label %981

981:                                              ; preds = %978, %951
  %982 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1
  %983 = bitcast %"class.std::__1::basic_string.8"* %982 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %984 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %983, i64 0, i32 1, i32 1
  %985 = load i8, i8* %984, align 1
  %986 = icmp slt i8 %985, 0
  br i1 %986, label %987, label %990

987:                                              ; preds = %981
  %988 = bitcast %"class.std::__1::basic_string.8"* %982 to i8**
  %989 = load i8*, i8** %988, align 8
  call void @_ZdlPv(i8* %989) #18
  br label %990

990:                                              ; preds = %987, %981
  %991 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %992 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %991, i64 0, i32 1, i32 1
  %993 = load i8, i8* %992, align 1
  %994 = icmp slt i8 %993, 0
  br i1 %994, label %995, label %998

995:                                              ; preds = %990
  %996 = bitcast [4 x %"class.std::__1::basic_string.8"]* %8 to i8**
  %997 = load i8*, i8** %996, align 8
  call void @_ZdlPv(i8* %997) #18
  br label %998

998:                                              ; preds = %995, %990
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %13) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.79"* null)
  %999 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %10, align 8
  %1000 = icmp eq %"class.std::__1::basic_string.8"* %999, null
  br i1 %1000, label %977, label %957

1001:                                             ; preds = %941
  %1002 = bitcast %"class.std::__1::basic_string.8"* %942 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %943, i8* align 8 %1002, i64 24, i1 false) #16
  br label %1179

1003:                                             ; preds = %941
  %1004 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %942, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1005 = load i16*, i16** %1004, align 8
  %1006 = bitcast i16* %1005 to i8*
  %1007 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  %1009 = icmp ult i64 %1008, 11
  br i1 %1009, label %1025, label %1010

1010:                                             ; preds = %1003
  %1011 = icmp ugt i64 %1008, 9223372036854775791
  br i1 %1011, label %773, label %1012

1012:                                             ; preds = %1010
  %1013 = add nuw nsw i64 %1008, 8
  %1014 = and i64 %1013, -8
  %1015 = icmp slt i64 %1014, 0
  br i1 %1015, label %780, label %1016

1016:                                             ; preds = %1012
  %1017 = shl i64 %1014, 1
  %1018 = call i8* @_Znwm(i64 %1017) #18
  %1019 = bitcast i8* %943 to i8**
  store i8* %1018, i8** %1019, align 8
  %1020 = or i64 %1014, -9223372036854775808
  %1021 = getelementptr inbounds i8, i8* %749, i64 40
  %1022 = bitcast i8* %1021 to i64*
  store i64 %1020, i64* %1022, align 8
  %1023 = getelementptr inbounds i8, i8* %749, i64 32
  %1024 = bitcast i8* %1023 to i64*
  store i64 %1008, i64* %1024, align 8
  br label %1028

1025:                                             ; preds = %1003
  %1026 = trunc i64 %1008 to i8
  %1027 = getelementptr inbounds i8, i8* %749, i64 47
  store i8 %1026, i8* %1027, align 1
  br label %1028

1028:                                             ; preds = %1025, %1016
  %1029 = phi i8* [ %943, %1025 ], [ %1018, %1016 ]
  %1030 = bitcast i8* %1029 to i16*
  %1031 = add nuw nsw i64 %1008, 1
  %1032 = add i64 %1008, 1
  %1033 = icmp ult i64 %1032, 16
  br i1 %1033, label %1126, label %1034

1034:                                             ; preds = %1028
  %1035 = shl i64 %1008, 1
  %1036 = add i64 %1035, 2
  %1037 = getelementptr i8, i8* %1029, i64 %1036
  %1038 = add i64 %1008, 1
  %1039 = getelementptr i16, i16* %1005, i64 %1038
  %1040 = bitcast i16* %1039 to i8*
  %1041 = icmp ult i8* %1029, %1040
  %1042 = icmp ugt i8* %1037, %1006
  %1043 = and i1 %1041, %1042
  br i1 %1043, label %1126, label %1044

1044:                                             ; preds = %1034
  %1045 = and i64 %1032, -16
  %1046 = sub i64 %1031, %1045
  %1047 = getelementptr i16, i16* %1005, i64 %1045
  %1048 = getelementptr i16, i16* %1030, i64 %1045
  %1049 = add i64 %1045, -16
  %1050 = lshr exact i64 %1049, 4
  %1051 = add nuw nsw i64 %1050, 1
  %1052 = and i64 %1051, 3
  %1053 = icmp ult i64 %1049, 48
  br i1 %1053, label %1105, label %1054

1054:                                             ; preds = %1044
  %1055 = sub nsw i64 %1051, %1052
  br label %1056

1056:                                             ; preds = %1056, %1054
  %1057 = phi i64 [ 0, %1054 ], [ %1102, %1056 ]
  %1058 = phi i64 [ %1055, %1054 ], [ %1103, %1056 ]
  %1059 = getelementptr i16, i16* %1005, i64 %1057
  %1060 = getelementptr i16, i16* %1030, i64 %1057
  %1061 = bitcast i16* %1059 to <8 x i16>*
  %1062 = load <8 x i16>, <8 x i16>* %1061, align 2, !alias.scope !146
  %1063 = getelementptr i16, i16* %1059, i64 8
  %1064 = bitcast i16* %1063 to <8 x i16>*
  %1065 = load <8 x i16>, <8 x i16>* %1064, align 2, !alias.scope !146
  %1066 = bitcast i16* %1060 to <8 x i16>*
  store <8 x i16> %1062, <8 x i16>* %1066, align 2, !alias.scope !149, !noalias !146
  %1067 = getelementptr i16, i16* %1060, i64 8
  %1068 = bitcast i16* %1067 to <8 x i16>*
  store <8 x i16> %1065, <8 x i16>* %1068, align 2, !alias.scope !149, !noalias !146
  %1069 = or i64 %1057, 16
  %1070 = getelementptr i16, i16* %1005, i64 %1069
  %1071 = getelementptr i16, i16* %1030, i64 %1069
  %1072 = bitcast i16* %1070 to <8 x i16>*
  %1073 = load <8 x i16>, <8 x i16>* %1072, align 2, !alias.scope !146
  %1074 = getelementptr i16, i16* %1070, i64 8
  %1075 = bitcast i16* %1074 to <8 x i16>*
  %1076 = load <8 x i16>, <8 x i16>* %1075, align 2, !alias.scope !146
  %1077 = bitcast i16* %1071 to <8 x i16>*
  store <8 x i16> %1073, <8 x i16>* %1077, align 2, !alias.scope !149, !noalias !146
  %1078 = getelementptr i16, i16* %1071, i64 8
  %1079 = bitcast i16* %1078 to <8 x i16>*
  store <8 x i16> %1076, <8 x i16>* %1079, align 2, !alias.scope !149, !noalias !146
  %1080 = or i64 %1057, 32
  %1081 = getelementptr i16, i16* %1005, i64 %1080
  %1082 = getelementptr i16, i16* %1030, i64 %1080
  %1083 = bitcast i16* %1081 to <8 x i16>*
  %1084 = load <8 x i16>, <8 x i16>* %1083, align 2, !alias.scope !146
  %1085 = getelementptr i16, i16* %1081, i64 8
  %1086 = bitcast i16* %1085 to <8 x i16>*
  %1087 = load <8 x i16>, <8 x i16>* %1086, align 2, !alias.scope !146
  %1088 = bitcast i16* %1082 to <8 x i16>*
  store <8 x i16> %1084, <8 x i16>* %1088, align 2, !alias.scope !149, !noalias !146
  %1089 = getelementptr i16, i16* %1082, i64 8
  %1090 = bitcast i16* %1089 to <8 x i16>*
  store <8 x i16> %1087, <8 x i16>* %1090, align 2, !alias.scope !149, !noalias !146
  %1091 = or i64 %1057, 48
  %1092 = getelementptr i16, i16* %1005, i64 %1091
  %1093 = getelementptr i16, i16* %1030, i64 %1091
  %1094 = bitcast i16* %1092 to <8 x i16>*
  %1095 = load <8 x i16>, <8 x i16>* %1094, align 2, !alias.scope !146
  %1096 = getelementptr i16, i16* %1092, i64 8
  %1097 = bitcast i16* %1096 to <8 x i16>*
  %1098 = load <8 x i16>, <8 x i16>* %1097, align 2, !alias.scope !146
  %1099 = bitcast i16* %1093 to <8 x i16>*
  store <8 x i16> %1095, <8 x i16>* %1099, align 2, !alias.scope !149, !noalias !146
  %1100 = getelementptr i16, i16* %1093, i64 8
  %1101 = bitcast i16* %1100 to <8 x i16>*
  store <8 x i16> %1098, <8 x i16>* %1101, align 2, !alias.scope !149, !noalias !146
  %1102 = add i64 %1057, 64
  %1103 = add i64 %1058, -4
  %1104 = icmp eq i64 %1103, 0
  br i1 %1104, label %1105, label %1056, !llvm.loop !151

1105:                                             ; preds = %1056, %1044
  %1106 = phi i64 [ 0, %1044 ], [ %1102, %1056 ]
  %1107 = icmp eq i64 %1052, 0
  br i1 %1107, label %1124, label %1108

1108:                                             ; preds = %1105, %1108
  %1109 = phi i64 [ %1121, %1108 ], [ %1106, %1105 ]
  %1110 = phi i64 [ %1122, %1108 ], [ %1052, %1105 ]
  %1111 = getelementptr i16, i16* %1005, i64 %1109
  %1112 = getelementptr i16, i16* %1030, i64 %1109
  %1113 = bitcast i16* %1111 to <8 x i16>*
  %1114 = load <8 x i16>, <8 x i16>* %1113, align 2, !alias.scope !146
  %1115 = getelementptr i16, i16* %1111, i64 8
  %1116 = bitcast i16* %1115 to <8 x i16>*
  %1117 = load <8 x i16>, <8 x i16>* %1116, align 2, !alias.scope !146
  %1118 = bitcast i16* %1112 to <8 x i16>*
  store <8 x i16> %1114, <8 x i16>* %1118, align 2, !alias.scope !149, !noalias !146
  %1119 = getelementptr i16, i16* %1112, i64 8
  %1120 = bitcast i16* %1119 to <8 x i16>*
  store <8 x i16> %1117, <8 x i16>* %1120, align 2, !alias.scope !149, !noalias !146
  %1121 = add i64 %1109, 16
  %1122 = add i64 %1110, -1
  %1123 = icmp eq i64 %1122, 0
  br i1 %1123, label %1124, label %1108, !llvm.loop !152

1124:                                             ; preds = %1108, %1105
  %1125 = icmp eq i64 %1032, %1045
  br i1 %1125, label %1179, label %1126

1126:                                             ; preds = %1124, %1034, %1028
  %1127 = phi i64 [ %1031, %1034 ], [ %1031, %1028 ], [ %1046, %1124 ]
  %1128 = phi i16* [ %1005, %1034 ], [ %1005, %1028 ], [ %1047, %1124 ]
  %1129 = phi i16* [ %1030, %1034 ], [ %1030, %1028 ], [ %1048, %1124 ]
  %1130 = add i64 %1127, -1
  %1131 = and i64 %1127, 7
  %1132 = icmp eq i64 %1131, 0
  br i1 %1132, label %1144, label %1133

1133:                                             ; preds = %1126, %1133
  %1134 = phi i64 [ %1139, %1133 ], [ %1127, %1126 ]
  %1135 = phi i16* [ %1141, %1133 ], [ %1128, %1126 ]
  %1136 = phi i16* [ %1140, %1133 ], [ %1129, %1126 ]
  %1137 = phi i64 [ %1142, %1133 ], [ %1131, %1126 ]
  %1138 = load i16, i16* %1135, align 2
  store i16 %1138, i16* %1136, align 2
  %1139 = add i64 %1134, -1
  %1140 = getelementptr inbounds i16, i16* %1136, i64 1
  %1141 = getelementptr inbounds i16, i16* %1135, i64 1
  %1142 = add i64 %1137, -1
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1144, label %1133, !llvm.loop !153

1144:                                             ; preds = %1133, %1126
  %1145 = phi i64 [ %1127, %1126 ], [ %1139, %1133 ]
  %1146 = phi i16* [ %1128, %1126 ], [ %1141, %1133 ]
  %1147 = phi i16* [ %1129, %1126 ], [ %1140, %1133 ]
  %1148 = icmp ult i64 %1130, 7
  br i1 %1148, label %1179, label %1149

1149:                                             ; preds = %1144, %1149
  %1150 = phi i64 [ %1175, %1149 ], [ %1145, %1144 ]
  %1151 = phi i16* [ %1177, %1149 ], [ %1146, %1144 ]
  %1152 = phi i16* [ %1176, %1149 ], [ %1147, %1144 ]
  %1153 = load i16, i16* %1151, align 2
  store i16 %1153, i16* %1152, align 2
  %1154 = getelementptr inbounds i16, i16* %1152, i64 1
  %1155 = getelementptr inbounds i16, i16* %1151, i64 1
  %1156 = load i16, i16* %1155, align 2
  store i16 %1156, i16* %1154, align 2
  %1157 = getelementptr inbounds i16, i16* %1152, i64 2
  %1158 = getelementptr inbounds i16, i16* %1151, i64 2
  %1159 = load i16, i16* %1158, align 2
  store i16 %1159, i16* %1157, align 2
  %1160 = getelementptr inbounds i16, i16* %1152, i64 3
  %1161 = getelementptr inbounds i16, i16* %1151, i64 3
  %1162 = load i16, i16* %1161, align 2
  store i16 %1162, i16* %1160, align 2
  %1163 = getelementptr inbounds i16, i16* %1152, i64 4
  %1164 = getelementptr inbounds i16, i16* %1151, i64 4
  %1165 = load i16, i16* %1164, align 2
  store i16 %1165, i16* %1163, align 2
  %1166 = getelementptr inbounds i16, i16* %1152, i64 5
  %1167 = getelementptr inbounds i16, i16* %1151, i64 5
  %1168 = load i16, i16* %1167, align 2
  store i16 %1168, i16* %1166, align 2
  %1169 = getelementptr inbounds i16, i16* %1152, i64 6
  %1170 = getelementptr inbounds i16, i16* %1151, i64 6
  %1171 = load i16, i16* %1170, align 2
  store i16 %1171, i16* %1169, align 2
  %1172 = getelementptr inbounds i16, i16* %1152, i64 7
  %1173 = getelementptr inbounds i16, i16* %1151, i64 7
  %1174 = load i16, i16* %1173, align 2
  store i16 %1174, i16* %1172, align 2
  %1175 = add i64 %1150, -8
  %1176 = getelementptr inbounds i16, i16* %1152, i64 8
  %1177 = getelementptr inbounds i16, i16* %1151, i64 8
  %1178 = icmp eq i64 %1175, 0
  br i1 %1178, label %1179, label %1149, !llvm.loop !154

1179:                                             ; preds = %1144, %1149, %1124, %1001
  %1180 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2
  %1181 = getelementptr inbounds i8, i8* %749, i64 48
  %1182 = bitcast %"class.std::__1::basic_string.8"* %1180 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1183 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1182, i64 0, i32 1, i32 1
  %1184 = load i8, i8* %1183, align 1
  %1185 = icmp slt i8 %1184, 0
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1179
  %1187 = bitcast %"class.std::__1::basic_string.8"* %1180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1181, i8* align 8 %1187, i64 24, i1 false) #16
  br label %1364

1188:                                             ; preds = %1179
  %1189 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1190 = load i16*, i16** %1189, align 8
  %1191 = bitcast i16* %1190 to i8*
  %1192 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1193 = load i64, i64* %1192, align 8
  %1194 = icmp ult i64 %1193, 11
  br i1 %1194, label %1210, label %1195

1195:                                             ; preds = %1188
  %1196 = icmp ugt i64 %1193, 9223372036854775791
  br i1 %1196, label %773, label %1197

1197:                                             ; preds = %1195
  %1198 = add nuw nsw i64 %1193, 8
  %1199 = and i64 %1198, -8
  %1200 = icmp slt i64 %1199, 0
  br i1 %1200, label %780, label %1201

1201:                                             ; preds = %1197
  %1202 = shl i64 %1199, 1
  %1203 = call i8* @_Znwm(i64 %1202) #18
  %1204 = bitcast i8* %1181 to i8**
  store i8* %1203, i8** %1204, align 8
  %1205 = or i64 %1199, -9223372036854775808
  %1206 = getelementptr inbounds i8, i8* %749, i64 64
  %1207 = bitcast i8* %1206 to i64*
  store i64 %1205, i64* %1207, align 8
  %1208 = getelementptr inbounds i8, i8* %749, i64 56
  %1209 = bitcast i8* %1208 to i64*
  store i64 %1193, i64* %1209, align 8
  br label %1213

1210:                                             ; preds = %1188
  %1211 = trunc i64 %1193 to i8
  %1212 = getelementptr inbounds i8, i8* %749, i64 71
  store i8 %1211, i8* %1212, align 1
  br label %1213

1213:                                             ; preds = %1210, %1201
  %1214 = phi i8* [ %1181, %1210 ], [ %1203, %1201 ]
  %1215 = bitcast i8* %1214 to i16*
  %1216 = add nuw nsw i64 %1193, 1
  %1217 = add i64 %1193, 1
  %1218 = icmp ult i64 %1217, 16
  br i1 %1218, label %1311, label %1219

1219:                                             ; preds = %1213
  %1220 = shl i64 %1193, 1
  %1221 = add i64 %1220, 2
  %1222 = getelementptr i8, i8* %1214, i64 %1221
  %1223 = add i64 %1193, 1
  %1224 = getelementptr i16, i16* %1190, i64 %1223
  %1225 = bitcast i16* %1224 to i8*
  %1226 = icmp ult i8* %1214, %1225
  %1227 = icmp ugt i8* %1222, %1191
  %1228 = and i1 %1226, %1227
  br i1 %1228, label %1311, label %1229

1229:                                             ; preds = %1219
  %1230 = and i64 %1217, -16
  %1231 = sub i64 %1216, %1230
  %1232 = getelementptr i16, i16* %1190, i64 %1230
  %1233 = getelementptr i16, i16* %1215, i64 %1230
  %1234 = add i64 %1230, -16
  %1235 = lshr exact i64 %1234, 4
  %1236 = add nuw nsw i64 %1235, 1
  %1237 = and i64 %1236, 3
  %1238 = icmp ult i64 %1234, 48
  br i1 %1238, label %1290, label %1239

1239:                                             ; preds = %1229
  %1240 = sub nsw i64 %1236, %1237
  br label %1241

1241:                                             ; preds = %1241, %1239
  %1242 = phi i64 [ 0, %1239 ], [ %1287, %1241 ]
  %1243 = phi i64 [ %1240, %1239 ], [ %1288, %1241 ]
  %1244 = getelementptr i16, i16* %1190, i64 %1242
  %1245 = getelementptr i16, i16* %1215, i64 %1242
  %1246 = bitcast i16* %1244 to <8 x i16>*
  %1247 = load <8 x i16>, <8 x i16>* %1246, align 2, !alias.scope !155
  %1248 = getelementptr i16, i16* %1244, i64 8
  %1249 = bitcast i16* %1248 to <8 x i16>*
  %1250 = load <8 x i16>, <8 x i16>* %1249, align 2, !alias.scope !155
  %1251 = bitcast i16* %1245 to <8 x i16>*
  store <8 x i16> %1247, <8 x i16>* %1251, align 2, !alias.scope !158, !noalias !155
  %1252 = getelementptr i16, i16* %1245, i64 8
  %1253 = bitcast i16* %1252 to <8 x i16>*
  store <8 x i16> %1250, <8 x i16>* %1253, align 2, !alias.scope !158, !noalias !155
  %1254 = or i64 %1242, 16
  %1255 = getelementptr i16, i16* %1190, i64 %1254
  %1256 = getelementptr i16, i16* %1215, i64 %1254
  %1257 = bitcast i16* %1255 to <8 x i16>*
  %1258 = load <8 x i16>, <8 x i16>* %1257, align 2, !alias.scope !155
  %1259 = getelementptr i16, i16* %1255, i64 8
  %1260 = bitcast i16* %1259 to <8 x i16>*
  %1261 = load <8 x i16>, <8 x i16>* %1260, align 2, !alias.scope !155
  %1262 = bitcast i16* %1256 to <8 x i16>*
  store <8 x i16> %1258, <8 x i16>* %1262, align 2, !alias.scope !158, !noalias !155
  %1263 = getelementptr i16, i16* %1256, i64 8
  %1264 = bitcast i16* %1263 to <8 x i16>*
  store <8 x i16> %1261, <8 x i16>* %1264, align 2, !alias.scope !158, !noalias !155
  %1265 = or i64 %1242, 32
  %1266 = getelementptr i16, i16* %1190, i64 %1265
  %1267 = getelementptr i16, i16* %1215, i64 %1265
  %1268 = bitcast i16* %1266 to <8 x i16>*
  %1269 = load <8 x i16>, <8 x i16>* %1268, align 2, !alias.scope !155
  %1270 = getelementptr i16, i16* %1266, i64 8
  %1271 = bitcast i16* %1270 to <8 x i16>*
  %1272 = load <8 x i16>, <8 x i16>* %1271, align 2, !alias.scope !155
  %1273 = bitcast i16* %1267 to <8 x i16>*
  store <8 x i16> %1269, <8 x i16>* %1273, align 2, !alias.scope !158, !noalias !155
  %1274 = getelementptr i16, i16* %1267, i64 8
  %1275 = bitcast i16* %1274 to <8 x i16>*
  store <8 x i16> %1272, <8 x i16>* %1275, align 2, !alias.scope !158, !noalias !155
  %1276 = or i64 %1242, 48
  %1277 = getelementptr i16, i16* %1190, i64 %1276
  %1278 = getelementptr i16, i16* %1215, i64 %1276
  %1279 = bitcast i16* %1277 to <8 x i16>*
  %1280 = load <8 x i16>, <8 x i16>* %1279, align 2, !alias.scope !155
  %1281 = getelementptr i16, i16* %1277, i64 8
  %1282 = bitcast i16* %1281 to <8 x i16>*
  %1283 = load <8 x i16>, <8 x i16>* %1282, align 2, !alias.scope !155
  %1284 = bitcast i16* %1278 to <8 x i16>*
  store <8 x i16> %1280, <8 x i16>* %1284, align 2, !alias.scope !158, !noalias !155
  %1285 = getelementptr i16, i16* %1278, i64 8
  %1286 = bitcast i16* %1285 to <8 x i16>*
  store <8 x i16> %1283, <8 x i16>* %1286, align 2, !alias.scope !158, !noalias !155
  %1287 = add i64 %1242, 64
  %1288 = add i64 %1243, -4
  %1289 = icmp eq i64 %1288, 0
  br i1 %1289, label %1290, label %1241, !llvm.loop !160

1290:                                             ; preds = %1241, %1229
  %1291 = phi i64 [ 0, %1229 ], [ %1287, %1241 ]
  %1292 = icmp eq i64 %1237, 0
  br i1 %1292, label %1309, label %1293

1293:                                             ; preds = %1290, %1293
  %1294 = phi i64 [ %1306, %1293 ], [ %1291, %1290 ]
  %1295 = phi i64 [ %1307, %1293 ], [ %1237, %1290 ]
  %1296 = getelementptr i16, i16* %1190, i64 %1294
  %1297 = getelementptr i16, i16* %1215, i64 %1294
  %1298 = bitcast i16* %1296 to <8 x i16>*
  %1299 = load <8 x i16>, <8 x i16>* %1298, align 2, !alias.scope !155
  %1300 = getelementptr i16, i16* %1296, i64 8
  %1301 = bitcast i16* %1300 to <8 x i16>*
  %1302 = load <8 x i16>, <8 x i16>* %1301, align 2, !alias.scope !155
  %1303 = bitcast i16* %1297 to <8 x i16>*
  store <8 x i16> %1299, <8 x i16>* %1303, align 2, !alias.scope !158, !noalias !155
  %1304 = getelementptr i16, i16* %1297, i64 8
  %1305 = bitcast i16* %1304 to <8 x i16>*
  store <8 x i16> %1302, <8 x i16>* %1305, align 2, !alias.scope !158, !noalias !155
  %1306 = add i64 %1294, 16
  %1307 = add i64 %1295, -1
  %1308 = icmp eq i64 %1307, 0
  br i1 %1308, label %1309, label %1293, !llvm.loop !161

1309:                                             ; preds = %1293, %1290
  %1310 = icmp eq i64 %1217, %1230
  br i1 %1310, label %1364, label %1311

1311:                                             ; preds = %1309, %1219, %1213
  %1312 = phi i64 [ %1216, %1219 ], [ %1216, %1213 ], [ %1231, %1309 ]
  %1313 = phi i16* [ %1190, %1219 ], [ %1190, %1213 ], [ %1232, %1309 ]
  %1314 = phi i16* [ %1215, %1219 ], [ %1215, %1213 ], [ %1233, %1309 ]
  %1315 = add i64 %1312, -1
  %1316 = and i64 %1312, 7
  %1317 = icmp eq i64 %1316, 0
  br i1 %1317, label %1329, label %1318

1318:                                             ; preds = %1311, %1318
  %1319 = phi i64 [ %1324, %1318 ], [ %1312, %1311 ]
  %1320 = phi i16* [ %1326, %1318 ], [ %1313, %1311 ]
  %1321 = phi i16* [ %1325, %1318 ], [ %1314, %1311 ]
  %1322 = phi i64 [ %1327, %1318 ], [ %1316, %1311 ]
  %1323 = load i16, i16* %1320, align 2
  store i16 %1323, i16* %1321, align 2
  %1324 = add i64 %1319, -1
  %1325 = getelementptr inbounds i16, i16* %1321, i64 1
  %1326 = getelementptr inbounds i16, i16* %1320, i64 1
  %1327 = add i64 %1322, -1
  %1328 = icmp eq i64 %1327, 0
  br i1 %1328, label %1329, label %1318, !llvm.loop !162

1329:                                             ; preds = %1318, %1311
  %1330 = phi i64 [ %1312, %1311 ], [ %1324, %1318 ]
  %1331 = phi i16* [ %1313, %1311 ], [ %1326, %1318 ]
  %1332 = phi i16* [ %1314, %1311 ], [ %1325, %1318 ]
  %1333 = icmp ult i64 %1315, 7
  br i1 %1333, label %1364, label %1334

1334:                                             ; preds = %1329, %1334
  %1335 = phi i64 [ %1360, %1334 ], [ %1330, %1329 ]
  %1336 = phi i16* [ %1362, %1334 ], [ %1331, %1329 ]
  %1337 = phi i16* [ %1361, %1334 ], [ %1332, %1329 ]
  %1338 = load i16, i16* %1336, align 2
  store i16 %1338, i16* %1337, align 2
  %1339 = getelementptr inbounds i16, i16* %1337, i64 1
  %1340 = getelementptr inbounds i16, i16* %1336, i64 1
  %1341 = load i16, i16* %1340, align 2
  store i16 %1341, i16* %1339, align 2
  %1342 = getelementptr inbounds i16, i16* %1337, i64 2
  %1343 = getelementptr inbounds i16, i16* %1336, i64 2
  %1344 = load i16, i16* %1343, align 2
  store i16 %1344, i16* %1342, align 2
  %1345 = getelementptr inbounds i16, i16* %1337, i64 3
  %1346 = getelementptr inbounds i16, i16* %1336, i64 3
  %1347 = load i16, i16* %1346, align 2
  store i16 %1347, i16* %1345, align 2
  %1348 = getelementptr inbounds i16, i16* %1337, i64 4
  %1349 = getelementptr inbounds i16, i16* %1336, i64 4
  %1350 = load i16, i16* %1349, align 2
  store i16 %1350, i16* %1348, align 2
  %1351 = getelementptr inbounds i16, i16* %1337, i64 5
  %1352 = getelementptr inbounds i16, i16* %1336, i64 5
  %1353 = load i16, i16* %1352, align 2
  store i16 %1353, i16* %1351, align 2
  %1354 = getelementptr inbounds i16, i16* %1337, i64 6
  %1355 = getelementptr inbounds i16, i16* %1336, i64 6
  %1356 = load i16, i16* %1355, align 2
  store i16 %1356, i16* %1354, align 2
  %1357 = getelementptr inbounds i16, i16* %1337, i64 7
  %1358 = getelementptr inbounds i16, i16* %1336, i64 7
  %1359 = load i16, i16* %1358, align 2
  store i16 %1359, i16* %1357, align 2
  %1360 = add i64 %1335, -8
  %1361 = getelementptr inbounds i16, i16* %1337, i64 8
  %1362 = getelementptr inbounds i16, i16* %1336, i64 8
  %1363 = icmp eq i64 %1360, 0
  br i1 %1363, label %1364, label %1334, !llvm.loop !163

1364:                                             ; preds = %1329, %1334, %1309, %1186
  %1365 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3
  %1366 = getelementptr inbounds i8, i8* %749, i64 72
  %1367 = bitcast %"class.std::__1::basic_string.8"* %1365 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1368 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1367, i64 0, i32 1, i32 1
  %1369 = load i8, i8* %1368, align 1
  %1370 = icmp slt i8 %1369, 0
  br i1 %1370, label %1373, label %1371

1371:                                             ; preds = %1364
  %1372 = bitcast %"class.std::__1::basic_string.8"* %1365 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1366, i8* align 8 %1372, i64 24, i1 false) #16
  br label %1549

1373:                                             ; preds = %1364
  %1374 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1365, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1375 = load i16*, i16** %1374, align 8
  %1376 = bitcast i16* %1375 to i8*
  %1377 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1378 = load i64, i64* %1377, align 8
  %1379 = icmp ult i64 %1378, 11
  br i1 %1379, label %1395, label %1380

1380:                                             ; preds = %1373
  %1381 = icmp ugt i64 %1378, 9223372036854775791
  br i1 %1381, label %773, label %1382

1382:                                             ; preds = %1380
  %1383 = add nuw nsw i64 %1378, 8
  %1384 = and i64 %1383, -8
  %1385 = icmp slt i64 %1384, 0
  br i1 %1385, label %780, label %1386

1386:                                             ; preds = %1382
  %1387 = shl i64 %1384, 1
  %1388 = call i8* @_Znwm(i64 %1387) #18
  %1389 = bitcast i8* %1366 to i8**
  store i8* %1388, i8** %1389, align 8
  %1390 = or i64 %1384, -9223372036854775808
  %1391 = getelementptr inbounds i8, i8* %749, i64 88
  %1392 = bitcast i8* %1391 to i64*
  store i64 %1390, i64* %1392, align 8
  %1393 = getelementptr inbounds i8, i8* %749, i64 80
  %1394 = bitcast i8* %1393 to i64*
  store i64 %1378, i64* %1394, align 8
  br label %1398

1395:                                             ; preds = %1373
  %1396 = trunc i64 %1378 to i8
  %1397 = getelementptr inbounds i8, i8* %749, i64 95
  store i8 %1396, i8* %1397, align 1
  br label %1398

1398:                                             ; preds = %1395, %1386
  %1399 = phi i8* [ %1366, %1395 ], [ %1388, %1386 ]
  %1400 = bitcast i8* %1399 to i16*
  %1401 = add nuw nsw i64 %1378, 1
  %1402 = add i64 %1378, 1
  %1403 = icmp ult i64 %1402, 16
  br i1 %1403, label %1496, label %1404

1404:                                             ; preds = %1398
  %1405 = shl i64 %1378, 1
  %1406 = add i64 %1405, 2
  %1407 = getelementptr i8, i8* %1399, i64 %1406
  %1408 = add i64 %1378, 1
  %1409 = getelementptr i16, i16* %1375, i64 %1408
  %1410 = bitcast i16* %1409 to i8*
  %1411 = icmp ult i8* %1399, %1410
  %1412 = icmp ugt i8* %1407, %1376
  %1413 = and i1 %1411, %1412
  br i1 %1413, label %1496, label %1414

1414:                                             ; preds = %1404
  %1415 = and i64 %1402, -16
  %1416 = sub i64 %1401, %1415
  %1417 = getelementptr i16, i16* %1375, i64 %1415
  %1418 = getelementptr i16, i16* %1400, i64 %1415
  %1419 = add i64 %1415, -16
  %1420 = lshr exact i64 %1419, 4
  %1421 = add nuw nsw i64 %1420, 1
  %1422 = and i64 %1421, 3
  %1423 = icmp ult i64 %1419, 48
  br i1 %1423, label %1475, label %1424

1424:                                             ; preds = %1414
  %1425 = sub nsw i64 %1421, %1422
  br label %1426

1426:                                             ; preds = %1426, %1424
  %1427 = phi i64 [ 0, %1424 ], [ %1472, %1426 ]
  %1428 = phi i64 [ %1425, %1424 ], [ %1473, %1426 ]
  %1429 = getelementptr i16, i16* %1375, i64 %1427
  %1430 = getelementptr i16, i16* %1400, i64 %1427
  %1431 = bitcast i16* %1429 to <8 x i16>*
  %1432 = load <8 x i16>, <8 x i16>* %1431, align 2, !alias.scope !164
  %1433 = getelementptr i16, i16* %1429, i64 8
  %1434 = bitcast i16* %1433 to <8 x i16>*
  %1435 = load <8 x i16>, <8 x i16>* %1434, align 2, !alias.scope !164
  %1436 = bitcast i16* %1430 to <8 x i16>*
  store <8 x i16> %1432, <8 x i16>* %1436, align 2, !alias.scope !167, !noalias !164
  %1437 = getelementptr i16, i16* %1430, i64 8
  %1438 = bitcast i16* %1437 to <8 x i16>*
  store <8 x i16> %1435, <8 x i16>* %1438, align 2, !alias.scope !167, !noalias !164
  %1439 = or i64 %1427, 16
  %1440 = getelementptr i16, i16* %1375, i64 %1439
  %1441 = getelementptr i16, i16* %1400, i64 %1439
  %1442 = bitcast i16* %1440 to <8 x i16>*
  %1443 = load <8 x i16>, <8 x i16>* %1442, align 2, !alias.scope !164
  %1444 = getelementptr i16, i16* %1440, i64 8
  %1445 = bitcast i16* %1444 to <8 x i16>*
  %1446 = load <8 x i16>, <8 x i16>* %1445, align 2, !alias.scope !164
  %1447 = bitcast i16* %1441 to <8 x i16>*
  store <8 x i16> %1443, <8 x i16>* %1447, align 2, !alias.scope !167, !noalias !164
  %1448 = getelementptr i16, i16* %1441, i64 8
  %1449 = bitcast i16* %1448 to <8 x i16>*
  store <8 x i16> %1446, <8 x i16>* %1449, align 2, !alias.scope !167, !noalias !164
  %1450 = or i64 %1427, 32
  %1451 = getelementptr i16, i16* %1375, i64 %1450
  %1452 = getelementptr i16, i16* %1400, i64 %1450
  %1453 = bitcast i16* %1451 to <8 x i16>*
  %1454 = load <8 x i16>, <8 x i16>* %1453, align 2, !alias.scope !164
  %1455 = getelementptr i16, i16* %1451, i64 8
  %1456 = bitcast i16* %1455 to <8 x i16>*
  %1457 = load <8 x i16>, <8 x i16>* %1456, align 2, !alias.scope !164
  %1458 = bitcast i16* %1452 to <8 x i16>*
  store <8 x i16> %1454, <8 x i16>* %1458, align 2, !alias.scope !167, !noalias !164
  %1459 = getelementptr i16, i16* %1452, i64 8
  %1460 = bitcast i16* %1459 to <8 x i16>*
  store <8 x i16> %1457, <8 x i16>* %1460, align 2, !alias.scope !167, !noalias !164
  %1461 = or i64 %1427, 48
  %1462 = getelementptr i16, i16* %1375, i64 %1461
  %1463 = getelementptr i16, i16* %1400, i64 %1461
  %1464 = bitcast i16* %1462 to <8 x i16>*
  %1465 = load <8 x i16>, <8 x i16>* %1464, align 2, !alias.scope !164
  %1466 = getelementptr i16, i16* %1462, i64 8
  %1467 = bitcast i16* %1466 to <8 x i16>*
  %1468 = load <8 x i16>, <8 x i16>* %1467, align 2, !alias.scope !164
  %1469 = bitcast i16* %1463 to <8 x i16>*
  store <8 x i16> %1465, <8 x i16>* %1469, align 2, !alias.scope !167, !noalias !164
  %1470 = getelementptr i16, i16* %1463, i64 8
  %1471 = bitcast i16* %1470 to <8 x i16>*
  store <8 x i16> %1468, <8 x i16>* %1471, align 2, !alias.scope !167, !noalias !164
  %1472 = add i64 %1427, 64
  %1473 = add i64 %1428, -4
  %1474 = icmp eq i64 %1473, 0
  br i1 %1474, label %1475, label %1426, !llvm.loop !169

1475:                                             ; preds = %1426, %1414
  %1476 = phi i64 [ 0, %1414 ], [ %1472, %1426 ]
  %1477 = icmp eq i64 %1422, 0
  br i1 %1477, label %1494, label %1478

1478:                                             ; preds = %1475, %1478
  %1479 = phi i64 [ %1491, %1478 ], [ %1476, %1475 ]
  %1480 = phi i64 [ %1492, %1478 ], [ %1422, %1475 ]
  %1481 = getelementptr i16, i16* %1375, i64 %1479
  %1482 = getelementptr i16, i16* %1400, i64 %1479
  %1483 = bitcast i16* %1481 to <8 x i16>*
  %1484 = load <8 x i16>, <8 x i16>* %1483, align 2, !alias.scope !164
  %1485 = getelementptr i16, i16* %1481, i64 8
  %1486 = bitcast i16* %1485 to <8 x i16>*
  %1487 = load <8 x i16>, <8 x i16>* %1486, align 2, !alias.scope !164
  %1488 = bitcast i16* %1482 to <8 x i16>*
  store <8 x i16> %1484, <8 x i16>* %1488, align 2, !alias.scope !167, !noalias !164
  %1489 = getelementptr i16, i16* %1482, i64 8
  %1490 = bitcast i16* %1489 to <8 x i16>*
  store <8 x i16> %1487, <8 x i16>* %1490, align 2, !alias.scope !167, !noalias !164
  %1491 = add i64 %1479, 16
  %1492 = add i64 %1480, -1
  %1493 = icmp eq i64 %1492, 0
  br i1 %1493, label %1494, label %1478, !llvm.loop !170

1494:                                             ; preds = %1478, %1475
  %1495 = icmp eq i64 %1402, %1415
  br i1 %1495, label %1549, label %1496

1496:                                             ; preds = %1494, %1404, %1398
  %1497 = phi i64 [ %1401, %1404 ], [ %1401, %1398 ], [ %1416, %1494 ]
  %1498 = phi i16* [ %1375, %1404 ], [ %1375, %1398 ], [ %1417, %1494 ]
  %1499 = phi i16* [ %1400, %1404 ], [ %1400, %1398 ], [ %1418, %1494 ]
  %1500 = add i64 %1497, -1
  %1501 = and i64 %1497, 7
  %1502 = icmp eq i64 %1501, 0
  br i1 %1502, label %1514, label %1503

1503:                                             ; preds = %1496, %1503
  %1504 = phi i64 [ %1509, %1503 ], [ %1497, %1496 ]
  %1505 = phi i16* [ %1511, %1503 ], [ %1498, %1496 ]
  %1506 = phi i16* [ %1510, %1503 ], [ %1499, %1496 ]
  %1507 = phi i64 [ %1512, %1503 ], [ %1501, %1496 ]
  %1508 = load i16, i16* %1505, align 2
  store i16 %1508, i16* %1506, align 2
  %1509 = add i64 %1504, -1
  %1510 = getelementptr inbounds i16, i16* %1506, i64 1
  %1511 = getelementptr inbounds i16, i16* %1505, i64 1
  %1512 = add i64 %1507, -1
  %1513 = icmp eq i64 %1512, 0
  br i1 %1513, label %1514, label %1503, !llvm.loop !171

1514:                                             ; preds = %1503, %1496
  %1515 = phi i64 [ %1497, %1496 ], [ %1509, %1503 ]
  %1516 = phi i16* [ %1498, %1496 ], [ %1511, %1503 ]
  %1517 = phi i16* [ %1499, %1496 ], [ %1510, %1503 ]
  %1518 = icmp ult i64 %1500, 7
  br i1 %1518, label %1549, label %1519

1519:                                             ; preds = %1514, %1519
  %1520 = phi i64 [ %1545, %1519 ], [ %1515, %1514 ]
  %1521 = phi i16* [ %1547, %1519 ], [ %1516, %1514 ]
  %1522 = phi i16* [ %1546, %1519 ], [ %1517, %1514 ]
  %1523 = load i16, i16* %1521, align 2
  store i16 %1523, i16* %1522, align 2
  %1524 = getelementptr inbounds i16, i16* %1522, i64 1
  %1525 = getelementptr inbounds i16, i16* %1521, i64 1
  %1526 = load i16, i16* %1525, align 2
  store i16 %1526, i16* %1524, align 2
  %1527 = getelementptr inbounds i16, i16* %1522, i64 2
  %1528 = getelementptr inbounds i16, i16* %1521, i64 2
  %1529 = load i16, i16* %1528, align 2
  store i16 %1529, i16* %1527, align 2
  %1530 = getelementptr inbounds i16, i16* %1522, i64 3
  %1531 = getelementptr inbounds i16, i16* %1521, i64 3
  %1532 = load i16, i16* %1531, align 2
  store i16 %1532, i16* %1530, align 2
  %1533 = getelementptr inbounds i16, i16* %1522, i64 4
  %1534 = getelementptr inbounds i16, i16* %1521, i64 4
  %1535 = load i16, i16* %1534, align 2
  store i16 %1535, i16* %1533, align 2
  %1536 = getelementptr inbounds i16, i16* %1522, i64 5
  %1537 = getelementptr inbounds i16, i16* %1521, i64 5
  %1538 = load i16, i16* %1537, align 2
  store i16 %1538, i16* %1536, align 2
  %1539 = getelementptr inbounds i16, i16* %1522, i64 6
  %1540 = getelementptr inbounds i16, i16* %1521, i64 6
  %1541 = load i16, i16* %1540, align 2
  store i16 %1541, i16* %1539, align 2
  %1542 = getelementptr inbounds i16, i16* %1522, i64 7
  %1543 = getelementptr inbounds i16, i16* %1521, i64 7
  %1544 = load i16, i16* %1543, align 2
  store i16 %1544, i16* %1542, align 2
  %1545 = add i64 %1520, -8
  %1546 = getelementptr inbounds i16, i16* %1522, i64 8
  %1547 = getelementptr inbounds i16, i16* %1521, i64 8
  %1548 = icmp eq i64 %1545, 0
  br i1 %1548, label %1549, label %1519, !llvm.loop !172

1549:                                             ; preds = %1514, %1519, %1494, %1371
  %1550 = getelementptr inbounds i8, i8* %749, i64 96
  %1551 = ptrtoint i8* %1550 to i64
  store i64 %1551, i64* %754, align 8
  %1552 = getelementptr inbounds [4 x %"class.std::__1::basic_string.8"], [4 x %"class.std::__1::basic_string.8"]* %8, i64 0, i64 3
  %1553 = bitcast %"class.std::__1::basic_string.8"* %1552 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1554 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1553, i64 0, i32 1, i32 1
  %1555 = load i8, i8* %1554, align 1
  %1556 = icmp slt i8 %1555, 0
  br i1 %1556, label %948, label %951
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_PNS0_6vectorImNS4_ImEEEE(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.79"*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector.72", align 8
  %7 = alloca [2 x %"class.std::__1::basic_string.8"], align 8
  %8 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to i8*
  %13 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #16
  %14 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %19, i64 24, i1 false) #16
  br label %195

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %34) #17
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #18
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !173
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !173
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !176, !noalias !173
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !176, !noalias !173
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !173
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !173
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !176, !noalias !173
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !176, !noalias !173
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !173
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !173
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !176, !noalias !173
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !176, !noalias !173
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !173
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !173
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !176, !noalias !173
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !176, !noalias !173
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !178

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !173
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !173
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !176, !noalias !173
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !176, !noalias !173
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !179

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !180

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !181

195:                                              ; preds = %160, %165, %140, %18
  %196 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %197 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %197, i64 0, i32 1, i32 1
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.8"* %196 to i8*
  %203 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 24, i1 false) #16
  br label %379

204:                                              ; preds = %195
  %205 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %208, 11
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  %211 = bitcast %"class.std::__1::basic_string.8"* %196 to i16*
  %212 = trunc i64 %208 to i8
  %213 = bitcast %"class.std::__1::basic_string.8"* %196 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %213, i64 0, i32 1, i32 1
  store i8 %212, i8* %214, align 1
  br label %232

215:                                              ; preds = %204
  %216 = icmp ugt i64 %208, 9223372036854775791
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = bitcast %"class.std::__1::basic_string.8"* %196 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %218) #17
  unreachable

219:                                              ; preds = %215
  %220 = add nuw nsw i64 %208, 8
  %221 = and i64 %220, -8
  %222 = icmp slt i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  tail call void @abort() #17
  unreachable

224:                                              ; preds = %219
  %225 = shl i64 %221, 1
  %226 = tail call i8* @_Znwm(i64 %225) #18
  %227 = bitcast i8* %226 to i16*
  %228 = bitcast %"class.std::__1::basic_string.8"* %196 to i8**
  store i8* %226, i8** %228, align 8
  %229 = or i64 %221, -9223372036854775808
  %230 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %231, align 8
  br label %232

232:                                              ; preds = %224, %210
  %233 = phi i16* [ %211, %210 ], [ %227, %224 ]
  %234 = add nuw nsw i64 %208, 1
  %235 = add i64 %208, 1
  %236 = icmp ult i64 %235, 16
  br i1 %236, label %326, label %237

237:                                              ; preds = %232
  %238 = add i64 %208, 1
  %239 = getelementptr i16, i16* %233, i64 %238
  %240 = getelementptr i16, i16* %206, i64 %238
  %241 = icmp ult i16* %233, %240
  %242 = icmp ult i16* %206, %239
  %243 = and i1 %241, %242
  br i1 %243, label %326, label %244

244:                                              ; preds = %237
  %245 = and i64 %235, -16
  %246 = sub i64 %234, %245
  %247 = getelementptr i16, i16* %206, i64 %245
  %248 = getelementptr i16, i16* %233, i64 %245
  %249 = add i64 %245, -16
  %250 = lshr exact i64 %249, 4
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp ult i64 %249, 48
  br i1 %253, label %305, label %254

254:                                              ; preds = %244
  %255 = sub nsw i64 %251, %252
  br label %256

256:                                              ; preds = %256, %254
  %257 = phi i64 [ 0, %254 ], [ %302, %256 ]
  %258 = phi i64 [ %255, %254 ], [ %303, %256 ]
  %259 = getelementptr i16, i16* %206, i64 %257
  %260 = getelementptr i16, i16* %233, i64 %257
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !182
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !182
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !185, !noalias !182
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !185, !noalias !182
  %269 = or i64 %257, 16
  %270 = getelementptr i16, i16* %206, i64 %269
  %271 = getelementptr i16, i16* %233, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !182
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !182
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !185, !noalias !182
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !185, !noalias !182
  %280 = or i64 %257, 32
  %281 = getelementptr i16, i16* %206, i64 %280
  %282 = getelementptr i16, i16* %233, i64 %280
  %283 = bitcast i16* %281 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !182
  %285 = getelementptr i16, i16* %281, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !182
  %288 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !185, !noalias !182
  %289 = getelementptr i16, i16* %282, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !185, !noalias !182
  %291 = or i64 %257, 48
  %292 = getelementptr i16, i16* %206, i64 %291
  %293 = getelementptr i16, i16* %233, i64 %291
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !182
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !182
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !185, !noalias !182
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !185, !noalias !182
  %302 = add i64 %257, 64
  %303 = add i64 %258, -4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %256, !llvm.loop !187

305:                                              ; preds = %256, %244
  %306 = phi i64 [ 0, %244 ], [ %302, %256 ]
  %307 = icmp eq i64 %252, 0
  br i1 %307, label %324, label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %321, %308 ], [ %306, %305 ]
  %310 = phi i64 [ %322, %308 ], [ %252, %305 ]
  %311 = getelementptr i16, i16* %206, i64 %309
  %312 = getelementptr i16, i16* %233, i64 %309
  %313 = bitcast i16* %311 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !182
  %315 = getelementptr i16, i16* %311, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !182
  %318 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %318, align 2, !alias.scope !185, !noalias !182
  %319 = getelementptr i16, i16* %312, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %320, align 2, !alias.scope !185, !noalias !182
  %321 = add i64 %309, 16
  %322 = add i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %308, !llvm.loop !188

324:                                              ; preds = %308, %305
  %325 = icmp eq i64 %235, %245
  br i1 %325, label %379, label %326

326:                                              ; preds = %324, %237, %232
  %327 = phi i64 [ %234, %237 ], [ %234, %232 ], [ %246, %324 ]
  %328 = phi i16* [ %206, %237 ], [ %206, %232 ], [ %247, %324 ]
  %329 = phi i16* [ %233, %237 ], [ %233, %232 ], [ %248, %324 ]
  %330 = add i64 %327, -1
  %331 = and i64 %327, 7
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %344, label %333

333:                                              ; preds = %326, %333
  %334 = phi i64 [ %339, %333 ], [ %327, %326 ]
  %335 = phi i16* [ %341, %333 ], [ %328, %326 ]
  %336 = phi i16* [ %340, %333 ], [ %329, %326 ]
  %337 = phi i64 [ %342, %333 ], [ %331, %326 ]
  %338 = load i16, i16* %335, align 2
  store i16 %338, i16* %336, align 2
  %339 = add i64 %334, -1
  %340 = getelementptr inbounds i16, i16* %336, i64 1
  %341 = getelementptr inbounds i16, i16* %335, i64 1
  %342 = add i64 %337, -1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %333, !llvm.loop !189

344:                                              ; preds = %333, %326
  %345 = phi i64 [ %327, %326 ], [ %339, %333 ]
  %346 = phi i16* [ %328, %326 ], [ %341, %333 ]
  %347 = phi i16* [ %329, %326 ], [ %340, %333 ]
  %348 = icmp ult i64 %330, 7
  br i1 %348, label %379, label %349

349:                                              ; preds = %344, %349
  %350 = phi i64 [ %375, %349 ], [ %345, %344 ]
  %351 = phi i16* [ %377, %349 ], [ %346, %344 ]
  %352 = phi i16* [ %376, %349 ], [ %347, %344 ]
  %353 = load i16, i16* %351, align 2
  store i16 %353, i16* %352, align 2
  %354 = getelementptr inbounds i16, i16* %352, i64 1
  %355 = getelementptr inbounds i16, i16* %351, i64 1
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %352, i64 2
  %358 = getelementptr inbounds i16, i16* %351, i64 2
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %352, i64 3
  %361 = getelementptr inbounds i16, i16* %351, i64 3
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %352, i64 4
  %364 = getelementptr inbounds i16, i16* %351, i64 4
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %352, i64 5
  %367 = getelementptr inbounds i16, i16* %351, i64 5
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %352, i64 6
  %370 = getelementptr inbounds i16, i16* %351, i64 6
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %352, i64 7
  %373 = getelementptr inbounds i16, i16* %351, i64 7
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = add i64 %350, -8
  %376 = getelementptr inbounds i16, i16* %352, i64 8
  %377 = getelementptr inbounds i16, i16* %351, i64 8
  %378 = icmp eq i64 %375, 0
  br i1 %378, label %379, label %349, !llvm.loop !190

379:                                              ; preds = %344, %349, %324, %201
  %380 = tail call i8* @_Znwm(i64 48) #18
  %381 = bitcast %"class.std::__1::basic_string.8"** %10 to i8**
  store i8* %380, i8** %381, align 8
  %382 = bitcast %"class.std::__1::vector.72"* %6 to i8**
  store i8* %380, i8** %382, align 8
  %383 = getelementptr inbounds i8, i8* %380, i64 48
  %384 = bitcast %"class.std::__1::basic_string.8"** %11 to i8**
  store i8* %383, i8** %384, align 8
  %385 = bitcast %"class.std::__1::basic_string.8"** %10 to i64*
  %386 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %387 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %386, i64 0, i32 1, i32 1
  %388 = load i8, i8* %387, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %389, label %392, label %390

390:                                              ; preds = %379
  %391 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %380, i8* nonnull align 8 %391, i64 24, i1 false) #16
  br label %572

392:                                              ; preds = %379
  %393 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i16*, i16** %393, align 8
  %395 = bitcast i16* %394 to i8*
  %396 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %397 = load i64, i64* %396, align 8
  %398 = icmp ult i64 %397, 11
  br i1 %398, label %399, label %402

399:                                              ; preds = %392
  %400 = trunc i64 %397 to i8
  %401 = getelementptr inbounds i8, i8* %380, i64 23
  store i8 %400, i8* %401, align 1
  br label %421

402:                                              ; preds = %392
  %403 = icmp ugt i64 %397, 9223372036854775791
  br i1 %403, label %404, label %407

404:                                              ; preds = %626, %402
  %405 = phi i8* [ %380, %402 ], [ %574, %626 ]
  %406 = bitcast i8* %405 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %406) #17
  unreachable

407:                                              ; preds = %402
  %408 = add nuw nsw i64 %397, 8
  %409 = and i64 %408, -8
  %410 = icmp slt i64 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %628, %407
  call void @abort() #17
  unreachable

412:                                              ; preds = %407
  %413 = shl i64 %409, 1
  %414 = call i8* @_Znwm(i64 %413) #18
  %415 = bitcast i8* %380 to i8**
  store i8* %414, i8** %415, align 8
  %416 = or i64 %409, -9223372036854775808
  %417 = getelementptr inbounds i8, i8* %380, i64 16
  %418 = bitcast i8* %417 to i64*
  store i64 %416, i64* %418, align 8
  %419 = getelementptr inbounds i8, i8* %380, i64 8
  %420 = bitcast i8* %419 to i64*
  store i64 %397, i64* %420, align 8
  br label %421

421:                                              ; preds = %412, %399
  %422 = phi i8* [ %380, %399 ], [ %414, %412 ]
  %423 = bitcast i8* %422 to i16*
  %424 = add nuw nsw i64 %397, 1
  %425 = add i64 %397, 1
  %426 = icmp ult i64 %425, 16
  br i1 %426, label %519, label %427

427:                                              ; preds = %421
  %428 = shl i64 %397, 1
  %429 = add i64 %428, 2
  %430 = getelementptr i8, i8* %422, i64 %429
  %431 = add i64 %397, 1
  %432 = getelementptr i16, i16* %394, i64 %431
  %433 = bitcast i16* %432 to i8*
  %434 = icmp ult i8* %422, %433
  %435 = icmp ugt i8* %430, %395
  %436 = and i1 %434, %435
  br i1 %436, label %519, label %437

437:                                              ; preds = %427
  %438 = and i64 %425, -16
  %439 = sub i64 %424, %438
  %440 = getelementptr i16, i16* %394, i64 %438
  %441 = getelementptr i16, i16* %423, i64 %438
  %442 = add i64 %438, -16
  %443 = lshr exact i64 %442, 4
  %444 = add nuw nsw i64 %443, 1
  %445 = and i64 %444, 3
  %446 = icmp ult i64 %442, 48
  br i1 %446, label %498, label %447

447:                                              ; preds = %437
  %448 = sub nsw i64 %444, %445
  br label %449

449:                                              ; preds = %449, %447
  %450 = phi i64 [ 0, %447 ], [ %495, %449 ]
  %451 = phi i64 [ %448, %447 ], [ %496, %449 ]
  %452 = getelementptr i16, i16* %394, i64 %450
  %453 = getelementptr i16, i16* %423, i64 %450
  %454 = bitcast i16* %452 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !191
  %456 = getelementptr i16, i16* %452, i64 8
  %457 = bitcast i16* %456 to <8 x i16>*
  %458 = load <8 x i16>, <8 x i16>* %457, align 2, !alias.scope !191
  %459 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %459, align 2, !alias.scope !194, !noalias !191
  %460 = getelementptr i16, i16* %453, i64 8
  %461 = bitcast i16* %460 to <8 x i16>*
  store <8 x i16> %458, <8 x i16>* %461, align 2, !alias.scope !194, !noalias !191
  %462 = or i64 %450, 16
  %463 = getelementptr i16, i16* %394, i64 %462
  %464 = getelementptr i16, i16* %423, i64 %462
  %465 = bitcast i16* %463 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !191
  %467 = getelementptr i16, i16* %463, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !191
  %470 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %470, align 2, !alias.scope !194, !noalias !191
  %471 = getelementptr i16, i16* %464, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %472, align 2, !alias.scope !194, !noalias !191
  %473 = or i64 %450, 32
  %474 = getelementptr i16, i16* %394, i64 %473
  %475 = getelementptr i16, i16* %423, i64 %473
  %476 = bitcast i16* %474 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !191
  %478 = getelementptr i16, i16* %474, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !191
  %481 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %481, align 2, !alias.scope !194, !noalias !191
  %482 = getelementptr i16, i16* %475, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %483, align 2, !alias.scope !194, !noalias !191
  %484 = or i64 %450, 48
  %485 = getelementptr i16, i16* %394, i64 %484
  %486 = getelementptr i16, i16* %423, i64 %484
  %487 = bitcast i16* %485 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !191
  %489 = getelementptr i16, i16* %485, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !191
  %492 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %492, align 2, !alias.scope !194, !noalias !191
  %493 = getelementptr i16, i16* %486, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %494, align 2, !alias.scope !194, !noalias !191
  %495 = add i64 %450, 64
  %496 = add i64 %451, -4
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %498, label %449, !llvm.loop !196

498:                                              ; preds = %449, %437
  %499 = phi i64 [ 0, %437 ], [ %495, %449 ]
  %500 = icmp eq i64 %445, 0
  br i1 %500, label %517, label %501

501:                                              ; preds = %498, %501
  %502 = phi i64 [ %514, %501 ], [ %499, %498 ]
  %503 = phi i64 [ %515, %501 ], [ %445, %498 ]
  %504 = getelementptr i16, i16* %394, i64 %502
  %505 = getelementptr i16, i16* %423, i64 %502
  %506 = bitcast i16* %504 to <8 x i16>*
  %507 = load <8 x i16>, <8 x i16>* %506, align 2, !alias.scope !191
  %508 = getelementptr i16, i16* %504, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  %510 = load <8 x i16>, <8 x i16>* %509, align 2, !alias.scope !191
  %511 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %507, <8 x i16>* %511, align 2, !alias.scope !194, !noalias !191
  %512 = getelementptr i16, i16* %505, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  store <8 x i16> %510, <8 x i16>* %513, align 2, !alias.scope !194, !noalias !191
  %514 = add i64 %502, 16
  %515 = add i64 %503, -1
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %517, label %501, !llvm.loop !197

517:                                              ; preds = %501, %498
  %518 = icmp eq i64 %425, %438
  br i1 %518, label %572, label %519

519:                                              ; preds = %517, %427, %421
  %520 = phi i64 [ %424, %427 ], [ %424, %421 ], [ %439, %517 ]
  %521 = phi i16* [ %394, %427 ], [ %394, %421 ], [ %440, %517 ]
  %522 = phi i16* [ %423, %427 ], [ %423, %421 ], [ %441, %517 ]
  %523 = add i64 %520, -1
  %524 = and i64 %520, 7
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %537, label %526

526:                                              ; preds = %519, %526
  %527 = phi i64 [ %532, %526 ], [ %520, %519 ]
  %528 = phi i16* [ %534, %526 ], [ %521, %519 ]
  %529 = phi i16* [ %533, %526 ], [ %522, %519 ]
  %530 = phi i64 [ %535, %526 ], [ %524, %519 ]
  %531 = load i16, i16* %528, align 2
  store i16 %531, i16* %529, align 2
  %532 = add i64 %527, -1
  %533 = getelementptr inbounds i16, i16* %529, i64 1
  %534 = getelementptr inbounds i16, i16* %528, i64 1
  %535 = add i64 %530, -1
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %537, label %526, !llvm.loop !198

537:                                              ; preds = %526, %519
  %538 = phi i64 [ %520, %519 ], [ %532, %526 ]
  %539 = phi i16* [ %521, %519 ], [ %534, %526 ]
  %540 = phi i16* [ %522, %519 ], [ %533, %526 ]
  %541 = icmp ult i64 %523, 7
  br i1 %541, label %572, label %542

542:                                              ; preds = %537, %542
  %543 = phi i64 [ %568, %542 ], [ %538, %537 ]
  %544 = phi i16* [ %570, %542 ], [ %539, %537 ]
  %545 = phi i16* [ %569, %542 ], [ %540, %537 ]
  %546 = load i16, i16* %544, align 2
  store i16 %546, i16* %545, align 2
  %547 = getelementptr inbounds i16, i16* %545, i64 1
  %548 = getelementptr inbounds i16, i16* %544, i64 1
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = getelementptr inbounds i16, i16* %545, i64 2
  %551 = getelementptr inbounds i16, i16* %544, i64 2
  %552 = load i16, i16* %551, align 2
  store i16 %552, i16* %550, align 2
  %553 = getelementptr inbounds i16, i16* %545, i64 3
  %554 = getelementptr inbounds i16, i16* %544, i64 3
  %555 = load i16, i16* %554, align 2
  store i16 %555, i16* %553, align 2
  %556 = getelementptr inbounds i16, i16* %545, i64 4
  %557 = getelementptr inbounds i16, i16* %544, i64 4
  %558 = load i16, i16* %557, align 2
  store i16 %558, i16* %556, align 2
  %559 = getelementptr inbounds i16, i16* %545, i64 5
  %560 = getelementptr inbounds i16, i16* %544, i64 5
  %561 = load i16, i16* %560, align 2
  store i16 %561, i16* %559, align 2
  %562 = getelementptr inbounds i16, i16* %545, i64 6
  %563 = getelementptr inbounds i16, i16* %544, i64 6
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %545, i64 7
  %566 = getelementptr inbounds i16, i16* %544, i64 7
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = add i64 %543, -8
  %569 = getelementptr inbounds i16, i16* %545, i64 8
  %570 = getelementptr inbounds i16, i16* %544, i64 8
  %571 = icmp eq i64 %568, 0
  br i1 %571, label %572, label %542, !llvm.loop !199

572:                                              ; preds = %537, %542, %517, %390
  %573 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %574 = getelementptr inbounds i8, i8* %380, i64 24
  %575 = bitcast %"class.std::__1::basic_string.8"* %573 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %576 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %575, i64 0, i32 1, i32 1
  %577 = load i8, i8* %576, align 1
  %578 = icmp slt i8 %577, 0
  br i1 %578, label %619, label %615

579:                                              ; preds = %795
  %580 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %581 = bitcast %"class.std::__1::basic_string.8"* %580 to i8**
  %582 = load i8*, i8** %581, align 8
  call void @_ZdlPv(i8* %582) #18
  br label %583

583:                                              ; preds = %615, %795, %579
  %584 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %584, i64 0, i32 1, i32 1
  %586 = load i8, i8* %585, align 1
  %587 = icmp slt i8 %586, 0
  br i1 %587, label %609, label %612

588:                                              ; preds = %612
  %589 = bitcast %"class.std::__1::basic_string.8"* %613 to i8*
  %590 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %10, align 8
  %591 = icmp eq %"class.std::__1::basic_string.8"* %590, %613
  br i1 %591, label %606, label %592

592:                                              ; preds = %588, %602
  %593 = phi %"class.std::__1::basic_string.8"* [ %594, %602 ], [ %590, %588 ]
  %594 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %593, i64 -1
  %595 = bitcast %"class.std::__1::basic_string.8"* %594 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %596 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %595, i64 0, i32 1, i32 1
  %597 = load i8, i8* %596, align 1
  %598 = icmp slt i8 %597, 0
  br i1 %598, label %599, label %602

599:                                              ; preds = %592
  %600 = bitcast %"class.std::__1::basic_string.8"* %594 to i8**
  %601 = load i8*, i8** %600, align 8
  call void @_ZdlPv(i8* %601) #18
  br label %602

602:                                              ; preds = %599, %592
  %603 = icmp eq %"class.std::__1::basic_string.8"* %594, %613
  br i1 %603, label %604, label %592

604:                                              ; preds = %602
  %605 = load i8*, i8** %382, align 8
  br label %606

606:                                              ; preds = %604, %588
  %607 = phi i8* [ %605, %604 ], [ %589, %588 ]
  store %"class.std::__1::basic_string.8"* %613, %"class.std::__1::basic_string.8"** %10, align 8
  call void @_ZdlPv(i8* %607) #18
  br label %608

608:                                              ; preds = %612, %606
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void

609:                                              ; preds = %583
  %610 = bitcast [2 x %"class.std::__1::basic_string.8"]* %7 to i8**
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #18
  br label %612

612:                                              ; preds = %609, %583
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.79"* %4)
  %613 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %9, align 8
  %614 = icmp eq %"class.std::__1::basic_string.8"* %613, null
  br i1 %614, label %608, label %588

615:                                              ; preds = %572
  %616 = bitcast %"class.std::__1::basic_string.8"* %573 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %574, i8* align 8 %616, i64 24, i1 false) #16
  %617 = getelementptr inbounds i8, i8* %380, i64 48
  %618 = ptrtoint i8* %617 to i64
  store i64 %618, i64* %385, align 8
  br label %583

619:                                              ; preds = %572
  %620 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load i16*, i16** %620, align 8
  %622 = bitcast i16* %621 to i8*
  %623 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %624 = load i64, i64* %623, align 8
  %625 = icmp ult i64 %624, 11
  br i1 %625, label %641, label %626

626:                                              ; preds = %619
  %627 = icmp ugt i64 %624, 9223372036854775791
  br i1 %627, label %404, label %628

628:                                              ; preds = %626
  %629 = add nuw nsw i64 %624, 8
  %630 = and i64 %629, -8
  %631 = icmp slt i64 %630, 0
  br i1 %631, label %411, label %632

632:                                              ; preds = %628
  %633 = shl i64 %630, 1
  %634 = call i8* @_Znwm(i64 %633) #18
  %635 = bitcast i8* %574 to i8**
  store i8* %634, i8** %635, align 8
  %636 = or i64 %630, -9223372036854775808
  %637 = getelementptr inbounds i8, i8* %380, i64 40
  %638 = bitcast i8* %637 to i64*
  store i64 %636, i64* %638, align 8
  %639 = getelementptr inbounds i8, i8* %380, i64 32
  %640 = bitcast i8* %639 to i64*
  store i64 %624, i64* %640, align 8
  br label %644

641:                                              ; preds = %619
  %642 = trunc i64 %624 to i8
  %643 = getelementptr inbounds i8, i8* %380, i64 47
  store i8 %642, i8* %643, align 1
  br label %644

644:                                              ; preds = %641, %632
  %645 = phi i8* [ %574, %641 ], [ %634, %632 ]
  %646 = bitcast i8* %645 to i16*
  %647 = add nuw nsw i64 %624, 1
  %648 = add i64 %624, 1
  %649 = icmp ult i64 %648, 16
  br i1 %649, label %742, label %650

650:                                              ; preds = %644
  %651 = shl i64 %624, 1
  %652 = add i64 %651, 2
  %653 = getelementptr i8, i8* %645, i64 %652
  %654 = add i64 %624, 1
  %655 = getelementptr i16, i16* %621, i64 %654
  %656 = bitcast i16* %655 to i8*
  %657 = icmp ult i8* %645, %656
  %658 = icmp ugt i8* %653, %622
  %659 = and i1 %657, %658
  br i1 %659, label %742, label %660

660:                                              ; preds = %650
  %661 = and i64 %648, -16
  %662 = sub i64 %647, %661
  %663 = getelementptr i16, i16* %621, i64 %661
  %664 = getelementptr i16, i16* %646, i64 %661
  %665 = add i64 %661, -16
  %666 = lshr exact i64 %665, 4
  %667 = add nuw nsw i64 %666, 1
  %668 = and i64 %667, 3
  %669 = icmp ult i64 %665, 48
  br i1 %669, label %721, label %670

670:                                              ; preds = %660
  %671 = sub nsw i64 %667, %668
  br label %672

672:                                              ; preds = %672, %670
  %673 = phi i64 [ 0, %670 ], [ %718, %672 ]
  %674 = phi i64 [ %671, %670 ], [ %719, %672 ]
  %675 = getelementptr i16, i16* %621, i64 %673
  %676 = getelementptr i16, i16* %646, i64 %673
  %677 = bitcast i16* %675 to <8 x i16>*
  %678 = load <8 x i16>, <8 x i16>* %677, align 2, !alias.scope !200
  %679 = getelementptr i16, i16* %675, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  %681 = load <8 x i16>, <8 x i16>* %680, align 2, !alias.scope !200
  %682 = bitcast i16* %676 to <8 x i16>*
  store <8 x i16> %678, <8 x i16>* %682, align 2, !alias.scope !203, !noalias !200
  %683 = getelementptr i16, i16* %676, i64 8
  %684 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %681, <8 x i16>* %684, align 2, !alias.scope !203, !noalias !200
  %685 = or i64 %673, 16
  %686 = getelementptr i16, i16* %621, i64 %685
  %687 = getelementptr i16, i16* %646, i64 %685
  %688 = bitcast i16* %686 to <8 x i16>*
  %689 = load <8 x i16>, <8 x i16>* %688, align 2, !alias.scope !200
  %690 = getelementptr i16, i16* %686, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  %692 = load <8 x i16>, <8 x i16>* %691, align 2, !alias.scope !200
  %693 = bitcast i16* %687 to <8 x i16>*
  store <8 x i16> %689, <8 x i16>* %693, align 2, !alias.scope !203, !noalias !200
  %694 = getelementptr i16, i16* %687, i64 8
  %695 = bitcast i16* %694 to <8 x i16>*
  store <8 x i16> %692, <8 x i16>* %695, align 2, !alias.scope !203, !noalias !200
  %696 = or i64 %673, 32
  %697 = getelementptr i16, i16* %621, i64 %696
  %698 = getelementptr i16, i16* %646, i64 %696
  %699 = bitcast i16* %697 to <8 x i16>*
  %700 = load <8 x i16>, <8 x i16>* %699, align 2, !alias.scope !200
  %701 = getelementptr i16, i16* %697, i64 8
  %702 = bitcast i16* %701 to <8 x i16>*
  %703 = load <8 x i16>, <8 x i16>* %702, align 2, !alias.scope !200
  %704 = bitcast i16* %698 to <8 x i16>*
  store <8 x i16> %700, <8 x i16>* %704, align 2, !alias.scope !203, !noalias !200
  %705 = getelementptr i16, i16* %698, i64 8
  %706 = bitcast i16* %705 to <8 x i16>*
  store <8 x i16> %703, <8 x i16>* %706, align 2, !alias.scope !203, !noalias !200
  %707 = or i64 %673, 48
  %708 = getelementptr i16, i16* %621, i64 %707
  %709 = getelementptr i16, i16* %646, i64 %707
  %710 = bitcast i16* %708 to <8 x i16>*
  %711 = load <8 x i16>, <8 x i16>* %710, align 2, !alias.scope !200
  %712 = getelementptr i16, i16* %708, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !200
  %715 = bitcast i16* %709 to <8 x i16>*
  store <8 x i16> %711, <8 x i16>* %715, align 2, !alias.scope !203, !noalias !200
  %716 = getelementptr i16, i16* %709, i64 8
  %717 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %717, align 2, !alias.scope !203, !noalias !200
  %718 = add i64 %673, 64
  %719 = add i64 %674, -4
  %720 = icmp eq i64 %719, 0
  br i1 %720, label %721, label %672, !llvm.loop !205

721:                                              ; preds = %672, %660
  %722 = phi i64 [ 0, %660 ], [ %718, %672 ]
  %723 = icmp eq i64 %668, 0
  br i1 %723, label %740, label %724

724:                                              ; preds = %721, %724
  %725 = phi i64 [ %737, %724 ], [ %722, %721 ]
  %726 = phi i64 [ %738, %724 ], [ %668, %721 ]
  %727 = getelementptr i16, i16* %621, i64 %725
  %728 = getelementptr i16, i16* %646, i64 %725
  %729 = bitcast i16* %727 to <8 x i16>*
  %730 = load <8 x i16>, <8 x i16>* %729, align 2, !alias.scope !200
  %731 = getelementptr i16, i16* %727, i64 8
  %732 = bitcast i16* %731 to <8 x i16>*
  %733 = load <8 x i16>, <8 x i16>* %732, align 2, !alias.scope !200
  %734 = bitcast i16* %728 to <8 x i16>*
  store <8 x i16> %730, <8 x i16>* %734, align 2, !alias.scope !203, !noalias !200
  %735 = getelementptr i16, i16* %728, i64 8
  %736 = bitcast i16* %735 to <8 x i16>*
  store <8 x i16> %733, <8 x i16>* %736, align 2, !alias.scope !203, !noalias !200
  %737 = add i64 %725, 16
  %738 = add i64 %726, -1
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %740, label %724, !llvm.loop !206

740:                                              ; preds = %724, %721
  %741 = icmp eq i64 %648, %661
  br i1 %741, label %795, label %742

742:                                              ; preds = %740, %650, %644
  %743 = phi i64 [ %647, %650 ], [ %647, %644 ], [ %662, %740 ]
  %744 = phi i16* [ %621, %650 ], [ %621, %644 ], [ %663, %740 ]
  %745 = phi i16* [ %646, %650 ], [ %646, %644 ], [ %664, %740 ]
  %746 = add i64 %743, -1
  %747 = and i64 %743, 7
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %760, label %749

749:                                              ; preds = %742, %749
  %750 = phi i64 [ %755, %749 ], [ %743, %742 ]
  %751 = phi i16* [ %757, %749 ], [ %744, %742 ]
  %752 = phi i16* [ %756, %749 ], [ %745, %742 ]
  %753 = phi i64 [ %758, %749 ], [ %747, %742 ]
  %754 = load i16, i16* %751, align 2
  store i16 %754, i16* %752, align 2
  %755 = add i64 %750, -1
  %756 = getelementptr inbounds i16, i16* %752, i64 1
  %757 = getelementptr inbounds i16, i16* %751, i64 1
  %758 = add i64 %753, -1
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %760, label %749, !llvm.loop !207

760:                                              ; preds = %749, %742
  %761 = phi i64 [ %743, %742 ], [ %755, %749 ]
  %762 = phi i16* [ %744, %742 ], [ %757, %749 ]
  %763 = phi i16* [ %745, %742 ], [ %756, %749 ]
  %764 = icmp ult i64 %746, 7
  br i1 %764, label %795, label %765

765:                                              ; preds = %760, %765
  %766 = phi i64 [ %791, %765 ], [ %761, %760 ]
  %767 = phi i16* [ %793, %765 ], [ %762, %760 ]
  %768 = phi i16* [ %792, %765 ], [ %763, %760 ]
  %769 = load i16, i16* %767, align 2
  store i16 %769, i16* %768, align 2
  %770 = getelementptr inbounds i16, i16* %768, i64 1
  %771 = getelementptr inbounds i16, i16* %767, i64 1
  %772 = load i16, i16* %771, align 2
  store i16 %772, i16* %770, align 2
  %773 = getelementptr inbounds i16, i16* %768, i64 2
  %774 = getelementptr inbounds i16, i16* %767, i64 2
  %775 = load i16, i16* %774, align 2
  store i16 %775, i16* %773, align 2
  %776 = getelementptr inbounds i16, i16* %768, i64 3
  %777 = getelementptr inbounds i16, i16* %767, i64 3
  %778 = load i16, i16* %777, align 2
  store i16 %778, i16* %776, align 2
  %779 = getelementptr inbounds i16, i16* %768, i64 4
  %780 = getelementptr inbounds i16, i16* %767, i64 4
  %781 = load i16, i16* %780, align 2
  store i16 %781, i16* %779, align 2
  %782 = getelementptr inbounds i16, i16* %768, i64 5
  %783 = getelementptr inbounds i16, i16* %767, i64 5
  %784 = load i16, i16* %783, align 2
  store i16 %784, i16* %782, align 2
  %785 = getelementptr inbounds i16, i16* %768, i64 6
  %786 = getelementptr inbounds i16, i16* %767, i64 6
  %787 = load i16, i16* %786, align 2
  store i16 %787, i16* %785, align 2
  %788 = getelementptr inbounds i16, i16* %768, i64 7
  %789 = getelementptr inbounds i16, i16* %767, i64 7
  %790 = load i16, i16* %789, align 2
  store i16 %790, i16* %788, align 2
  %791 = add i64 %766, -8
  %792 = getelementptr inbounds i16, i16* %768, i64 8
  %793 = getelementptr inbounds i16, i16* %767, i64 8
  %794 = icmp eq i64 %791, 0
  br i1 %794, label %795, label %765, !llvm.loop !208

795:                                              ; preds = %760, %765, %740
  %796 = getelementptr inbounds [2 x %"class.std::__1::basic_string.8"], [2 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 1
  %797 = bitcast %"class.std::__1::basic_string.8"* %796 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %798 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %797, i64 0, i32 1, i32 1
  %799 = load i8, i8* %798, align 1
  %800 = getelementptr inbounds i8, i8* %380, i64 48
  %801 = ptrtoint i8* %800 to i64
  store i64 %801, i64* %385, align 8
  %802 = icmp slt i8 %799, 0
  br i1 %802, label %579, label %583
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_S8_S8_(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %8 = alloca %"class.std::__1::vector.72", align 8
  %9 = alloca [5 x %"class.std::__1::basic_string.8"], align 8
  %10 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to i8*
  %15 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #16
  %16 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 0
  %17 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %7
  %22 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %22, i64 24, i1 false) #16
  br label %198

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %51

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #17
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #18
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8
  br label %51

51:                                               ; preds = %43, %29
  %52 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %27, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %25, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %25, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = sub i64 %53, %64
  %66 = getelementptr i16, i16* %25, i64 %64
  %67 = getelementptr i16, i16* %52, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %25, i64 %76
  %79 = getelementptr i16, i16* %52, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !209
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !209
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !212, !noalias !209
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !212, !noalias !209
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %25, i64 %88
  %90 = getelementptr i16, i16* %52, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !209
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !209
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !212, !noalias !209
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !212, !noalias !209
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %25, i64 %99
  %101 = getelementptr i16, i16* %52, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !209
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !209
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !212, !noalias !209
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !212, !noalias !209
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %25, i64 %110
  %112 = getelementptr i16, i16* %52, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !209
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !209
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !212, !noalias !209
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !212, !noalias !209
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !214

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %25, i64 %128
  %131 = getelementptr i16, i16* %52, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !209
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !209
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !212, !noalias !209
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !212, !noalias !209
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !215

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %65, %143 ]
  %147 = phi i16* [ %25, %56 ], [ %25, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !216

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !217

198:                                              ; preds = %163, %168, %143, %21
  %199 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 1
  %200 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %198
  %205 = bitcast %"class.std::__1::basic_string.8"* %199 to i8*
  %206 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 24, i1 false) #16
  br label %382

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i16*, i16** %208, align 8
  %210 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = icmp ult i64 %211, 11
  br i1 %212, label %213, label %218

213:                                              ; preds = %207
  %214 = bitcast %"class.std::__1::basic_string.8"* %199 to i16*
  %215 = trunc i64 %211 to i8
  %216 = bitcast %"class.std::__1::basic_string.8"* %199 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %216, i64 0, i32 1, i32 1
  store i8 %215, i8* %217, align 1
  br label %235

218:                                              ; preds = %207
  %219 = icmp ugt i64 %211, 9223372036854775791
  br i1 %219, label %220, label %222

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::basic_string.8"* %199 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %221) #17
  unreachable

222:                                              ; preds = %218
  %223 = add nuw nsw i64 %211, 8
  %224 = and i64 %223, -8
  %225 = icmp slt i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %222
  tail call void @abort() #17
  unreachable

227:                                              ; preds = %222
  %228 = shl i64 %224, 1
  %229 = tail call i8* @_Znwm(i64 %228) #18
  %230 = bitcast i8* %229 to i16*
  %231 = bitcast %"class.std::__1::basic_string.8"* %199 to i8**
  store i8* %229, i8** %231, align 8
  %232 = or i64 %224, -9223372036854775808
  %233 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %211, i64* %234, align 8
  br label %235

235:                                              ; preds = %227, %213
  %236 = phi i16* [ %214, %213 ], [ %230, %227 ]
  %237 = add nuw nsw i64 %211, 1
  %238 = add i64 %211, 1
  %239 = icmp ult i64 %238, 16
  br i1 %239, label %329, label %240

240:                                              ; preds = %235
  %241 = add i64 %211, 1
  %242 = getelementptr i16, i16* %236, i64 %241
  %243 = getelementptr i16, i16* %209, i64 %241
  %244 = icmp ult i16* %236, %243
  %245 = icmp ult i16* %209, %242
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %240
  %248 = and i64 %238, -16
  %249 = sub i64 %237, %248
  %250 = getelementptr i16, i16* %209, i64 %248
  %251 = getelementptr i16, i16* %236, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %209, i64 %260
  %263 = getelementptr i16, i16* %236, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !218
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !218
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !221, !noalias !218
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !221, !noalias !218
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %209, i64 %272
  %274 = getelementptr i16, i16* %236, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !218
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !218
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !221, !noalias !218
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !221, !noalias !218
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %209, i64 %283
  %285 = getelementptr i16, i16* %236, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !218
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !218
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !221, !noalias !218
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !221, !noalias !218
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %209, i64 %294
  %296 = getelementptr i16, i16* %236, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !218
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !218
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !221, !noalias !218
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !221, !noalias !218
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !223

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %209, i64 %312
  %315 = getelementptr i16, i16* %236, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !218
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !218
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !221, !noalias !218
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !221, !noalias !218
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !224

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %238, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %240, %235
  %330 = phi i64 [ %237, %240 ], [ %237, %235 ], [ %249, %327 ]
  %331 = phi i16* [ %209, %240 ], [ %209, %235 ], [ %250, %327 ]
  %332 = phi i16* [ %236, %240 ], [ %236, %235 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !225

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !226

382:                                              ; preds = %347, %352, %327, %204
  %383 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 2
  %384 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %384, i64 0, i32 1, i32 1
  %386 = load i8, i8* %385, align 1
  %387 = icmp slt i8 %386, 0
  br i1 %387, label %391, label %388

388:                                              ; preds = %382
  %389 = bitcast %"class.std::__1::basic_string.8"* %383 to i8*
  %390 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* align 8 %390, i64 24, i1 false) #16
  br label %566

391:                                              ; preds = %382
  %392 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load i16*, i16** %392, align 8
  %394 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = icmp ult i64 %395, 11
  br i1 %396, label %397, label %402

397:                                              ; preds = %391
  %398 = bitcast %"class.std::__1::basic_string.8"* %383 to i16*
  %399 = trunc i64 %395 to i8
  %400 = bitcast %"class.std::__1::basic_string.8"* %383 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %400, i64 0, i32 1, i32 1
  store i8 %399, i8* %401, align 1
  br label %419

402:                                              ; preds = %391
  %403 = icmp ugt i64 %395, 9223372036854775791
  br i1 %403, label %404, label %406

404:                                              ; preds = %402
  %405 = bitcast %"class.std::__1::basic_string.8"* %383 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %405) #17
  unreachable

406:                                              ; preds = %402
  %407 = add nuw nsw i64 %395, 8
  %408 = and i64 %407, -8
  %409 = icmp slt i64 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %406
  tail call void @abort() #17
  unreachable

411:                                              ; preds = %406
  %412 = shl i64 %408, 1
  %413 = tail call i8* @_Znwm(i64 %412) #18
  %414 = bitcast i8* %413 to i16*
  %415 = bitcast %"class.std::__1::basic_string.8"* %383 to i8**
  store i8* %413, i8** %415, align 8
  %416 = or i64 %408, -9223372036854775808
  %417 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %416, i64* %417, align 8
  %418 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %395, i64* %418, align 8
  br label %419

419:                                              ; preds = %411, %397
  %420 = phi i16* [ %398, %397 ], [ %414, %411 ]
  %421 = add nuw nsw i64 %395, 1
  %422 = add i64 %395, 1
  %423 = icmp ult i64 %422, 16
  br i1 %423, label %513, label %424

424:                                              ; preds = %419
  %425 = add i64 %395, 1
  %426 = getelementptr i16, i16* %420, i64 %425
  %427 = getelementptr i16, i16* %393, i64 %425
  %428 = icmp ult i16* %420, %427
  %429 = icmp ult i16* %393, %426
  %430 = and i1 %428, %429
  br i1 %430, label %513, label %431

431:                                              ; preds = %424
  %432 = and i64 %422, -16
  %433 = sub i64 %421, %432
  %434 = getelementptr i16, i16* %393, i64 %432
  %435 = getelementptr i16, i16* %420, i64 %432
  %436 = add i64 %432, -16
  %437 = lshr exact i64 %436, 4
  %438 = add nuw nsw i64 %437, 1
  %439 = and i64 %438, 3
  %440 = icmp ult i64 %436, 48
  br i1 %440, label %492, label %441

441:                                              ; preds = %431
  %442 = sub nsw i64 %438, %439
  br label %443

443:                                              ; preds = %443, %441
  %444 = phi i64 [ 0, %441 ], [ %489, %443 ]
  %445 = phi i64 [ %442, %441 ], [ %490, %443 ]
  %446 = getelementptr i16, i16* %393, i64 %444
  %447 = getelementptr i16, i16* %420, i64 %444
  %448 = bitcast i16* %446 to <8 x i16>*
  %449 = load <8 x i16>, <8 x i16>* %448, align 2, !alias.scope !227
  %450 = getelementptr i16, i16* %446, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  %452 = load <8 x i16>, <8 x i16>* %451, align 2, !alias.scope !227
  %453 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %449, <8 x i16>* %453, align 2, !alias.scope !230, !noalias !227
  %454 = getelementptr i16, i16* %447, i64 8
  %455 = bitcast i16* %454 to <8 x i16>*
  store <8 x i16> %452, <8 x i16>* %455, align 2, !alias.scope !230, !noalias !227
  %456 = or i64 %444, 16
  %457 = getelementptr i16, i16* %393, i64 %456
  %458 = getelementptr i16, i16* %420, i64 %456
  %459 = bitcast i16* %457 to <8 x i16>*
  %460 = load <8 x i16>, <8 x i16>* %459, align 2, !alias.scope !227
  %461 = getelementptr i16, i16* %457, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !227
  %464 = bitcast i16* %458 to <8 x i16>*
  store <8 x i16> %460, <8 x i16>* %464, align 2, !alias.scope !230, !noalias !227
  %465 = getelementptr i16, i16* %458, i64 8
  %466 = bitcast i16* %465 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %466, align 2, !alias.scope !230, !noalias !227
  %467 = or i64 %444, 32
  %468 = getelementptr i16, i16* %393, i64 %467
  %469 = getelementptr i16, i16* %420, i64 %467
  %470 = bitcast i16* %468 to <8 x i16>*
  %471 = load <8 x i16>, <8 x i16>* %470, align 2, !alias.scope !227
  %472 = getelementptr i16, i16* %468, i64 8
  %473 = bitcast i16* %472 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !227
  %475 = bitcast i16* %469 to <8 x i16>*
  store <8 x i16> %471, <8 x i16>* %475, align 2, !alias.scope !230, !noalias !227
  %476 = getelementptr i16, i16* %469, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %477, align 2, !alias.scope !230, !noalias !227
  %478 = or i64 %444, 48
  %479 = getelementptr i16, i16* %393, i64 %478
  %480 = getelementptr i16, i16* %420, i64 %478
  %481 = bitcast i16* %479 to <8 x i16>*
  %482 = load <8 x i16>, <8 x i16>* %481, align 2, !alias.scope !227
  %483 = getelementptr i16, i16* %479, i64 8
  %484 = bitcast i16* %483 to <8 x i16>*
  %485 = load <8 x i16>, <8 x i16>* %484, align 2, !alias.scope !227
  %486 = bitcast i16* %480 to <8 x i16>*
  store <8 x i16> %482, <8 x i16>* %486, align 2, !alias.scope !230, !noalias !227
  %487 = getelementptr i16, i16* %480, i64 8
  %488 = bitcast i16* %487 to <8 x i16>*
  store <8 x i16> %485, <8 x i16>* %488, align 2, !alias.scope !230, !noalias !227
  %489 = add i64 %444, 64
  %490 = add i64 %445, -4
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %443, !llvm.loop !232

492:                                              ; preds = %443, %431
  %493 = phi i64 [ 0, %431 ], [ %489, %443 ]
  %494 = icmp eq i64 %439, 0
  br i1 %494, label %511, label %495

495:                                              ; preds = %492, %495
  %496 = phi i64 [ %508, %495 ], [ %493, %492 ]
  %497 = phi i64 [ %509, %495 ], [ %439, %492 ]
  %498 = getelementptr i16, i16* %393, i64 %496
  %499 = getelementptr i16, i16* %420, i64 %496
  %500 = bitcast i16* %498 to <8 x i16>*
  %501 = load <8 x i16>, <8 x i16>* %500, align 2, !alias.scope !227
  %502 = getelementptr i16, i16* %498, i64 8
  %503 = bitcast i16* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !227
  %505 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %501, <8 x i16>* %505, align 2, !alias.scope !230, !noalias !227
  %506 = getelementptr i16, i16* %499, i64 8
  %507 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %504, <8 x i16>* %507, align 2, !alias.scope !230, !noalias !227
  %508 = add i64 %496, 16
  %509 = add i64 %497, -1
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %495, !llvm.loop !233

511:                                              ; preds = %495, %492
  %512 = icmp eq i64 %422, %432
  br i1 %512, label %566, label %513

513:                                              ; preds = %511, %424, %419
  %514 = phi i64 [ %421, %424 ], [ %421, %419 ], [ %433, %511 ]
  %515 = phi i16* [ %393, %424 ], [ %393, %419 ], [ %434, %511 ]
  %516 = phi i16* [ %420, %424 ], [ %420, %419 ], [ %435, %511 ]
  %517 = add i64 %514, -1
  %518 = and i64 %514, 7
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %531, label %520

520:                                              ; preds = %513, %520
  %521 = phi i64 [ %526, %520 ], [ %514, %513 ]
  %522 = phi i16* [ %528, %520 ], [ %515, %513 ]
  %523 = phi i16* [ %527, %520 ], [ %516, %513 ]
  %524 = phi i64 [ %529, %520 ], [ %518, %513 ]
  %525 = load i16, i16* %522, align 2
  store i16 %525, i16* %523, align 2
  %526 = add i64 %521, -1
  %527 = getelementptr inbounds i16, i16* %523, i64 1
  %528 = getelementptr inbounds i16, i16* %522, i64 1
  %529 = add i64 %524, -1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %531, label %520, !llvm.loop !234

531:                                              ; preds = %520, %513
  %532 = phi i64 [ %514, %513 ], [ %526, %520 ]
  %533 = phi i16* [ %515, %513 ], [ %528, %520 ]
  %534 = phi i16* [ %516, %513 ], [ %527, %520 ]
  %535 = icmp ult i64 %517, 7
  br i1 %535, label %566, label %536

536:                                              ; preds = %531, %536
  %537 = phi i64 [ %562, %536 ], [ %532, %531 ]
  %538 = phi i16* [ %564, %536 ], [ %533, %531 ]
  %539 = phi i16* [ %563, %536 ], [ %534, %531 ]
  %540 = load i16, i16* %538, align 2
  store i16 %540, i16* %539, align 2
  %541 = getelementptr inbounds i16, i16* %539, i64 1
  %542 = getelementptr inbounds i16, i16* %538, i64 1
  %543 = load i16, i16* %542, align 2
  store i16 %543, i16* %541, align 2
  %544 = getelementptr inbounds i16, i16* %539, i64 2
  %545 = getelementptr inbounds i16, i16* %538, i64 2
  %546 = load i16, i16* %545, align 2
  store i16 %546, i16* %544, align 2
  %547 = getelementptr inbounds i16, i16* %539, i64 3
  %548 = getelementptr inbounds i16, i16* %538, i64 3
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = getelementptr inbounds i16, i16* %539, i64 4
  %551 = getelementptr inbounds i16, i16* %538, i64 4
  %552 = load i16, i16* %551, align 2
  store i16 %552, i16* %550, align 2
  %553 = getelementptr inbounds i16, i16* %539, i64 5
  %554 = getelementptr inbounds i16, i16* %538, i64 5
  %555 = load i16, i16* %554, align 2
  store i16 %555, i16* %553, align 2
  %556 = getelementptr inbounds i16, i16* %539, i64 6
  %557 = getelementptr inbounds i16, i16* %538, i64 6
  %558 = load i16, i16* %557, align 2
  store i16 %558, i16* %556, align 2
  %559 = getelementptr inbounds i16, i16* %539, i64 7
  %560 = getelementptr inbounds i16, i16* %538, i64 7
  %561 = load i16, i16* %560, align 2
  store i16 %561, i16* %559, align 2
  %562 = add i64 %537, -8
  %563 = getelementptr inbounds i16, i16* %539, i64 8
  %564 = getelementptr inbounds i16, i16* %538, i64 8
  %565 = icmp eq i64 %562, 0
  br i1 %565, label %566, label %536, !llvm.loop !235

566:                                              ; preds = %531, %536, %511, %388
  %567 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 3
  %568 = bitcast %"class.std::__1::basic_string.8"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %569 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %568, i64 0, i32 1, i32 1
  %570 = load i8, i8* %569, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %575, label %572

572:                                              ; preds = %566
  %573 = bitcast %"class.std::__1::basic_string.8"* %567 to i8*
  %574 = bitcast %"class.std::__1::basic_string.8"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %573, i8* align 8 %574, i64 24, i1 false) #16
  br label %750

575:                                              ; preds = %566
  %576 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load i16*, i16** %576, align 8
  %578 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %579 = load i64, i64* %578, align 8
  %580 = icmp ult i64 %579, 11
  br i1 %580, label %581, label %586

581:                                              ; preds = %575
  %582 = bitcast %"class.std::__1::basic_string.8"* %567 to i16*
  %583 = trunc i64 %579 to i8
  %584 = bitcast %"class.std::__1::basic_string.8"* %567 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %584, i64 0, i32 1, i32 1
  store i8 %583, i8* %585, align 1
  br label %603

586:                                              ; preds = %575
  %587 = icmp ugt i64 %579, 9223372036854775791
  br i1 %587, label %588, label %590

588:                                              ; preds = %586
  %589 = bitcast %"class.std::__1::basic_string.8"* %567 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %589) #17
  unreachable

590:                                              ; preds = %586
  %591 = add nuw nsw i64 %579, 8
  %592 = and i64 %591, -8
  %593 = icmp slt i64 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %590
  tail call void @abort() #17
  unreachable

595:                                              ; preds = %590
  %596 = shl i64 %592, 1
  %597 = tail call i8* @_Znwm(i64 %596) #18
  %598 = bitcast i8* %597 to i16*
  %599 = bitcast %"class.std::__1::basic_string.8"* %567 to i8**
  store i8* %597, i8** %599, align 8
  %600 = or i64 %592, -9223372036854775808
  %601 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %600, i64* %601, align 8
  %602 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %579, i64* %602, align 8
  br label %603

603:                                              ; preds = %595, %581
  %604 = phi i16* [ %582, %581 ], [ %598, %595 ]
  %605 = add nuw nsw i64 %579, 1
  %606 = add i64 %579, 1
  %607 = icmp ult i64 %606, 16
  br i1 %607, label %697, label %608

608:                                              ; preds = %603
  %609 = add i64 %579, 1
  %610 = getelementptr i16, i16* %604, i64 %609
  %611 = getelementptr i16, i16* %577, i64 %609
  %612 = icmp ult i16* %604, %611
  %613 = icmp ult i16* %577, %610
  %614 = and i1 %612, %613
  br i1 %614, label %697, label %615

615:                                              ; preds = %608
  %616 = and i64 %606, -16
  %617 = sub i64 %605, %616
  %618 = getelementptr i16, i16* %577, i64 %616
  %619 = getelementptr i16, i16* %604, i64 %616
  %620 = add i64 %616, -16
  %621 = lshr exact i64 %620, 4
  %622 = add nuw nsw i64 %621, 1
  %623 = and i64 %622, 3
  %624 = icmp ult i64 %620, 48
  br i1 %624, label %676, label %625

625:                                              ; preds = %615
  %626 = sub nsw i64 %622, %623
  br label %627

627:                                              ; preds = %627, %625
  %628 = phi i64 [ 0, %625 ], [ %673, %627 ]
  %629 = phi i64 [ %626, %625 ], [ %674, %627 ]
  %630 = getelementptr i16, i16* %577, i64 %628
  %631 = getelementptr i16, i16* %604, i64 %628
  %632 = bitcast i16* %630 to <8 x i16>*
  %633 = load <8 x i16>, <8 x i16>* %632, align 2, !alias.scope !236
  %634 = getelementptr i16, i16* %630, i64 8
  %635 = bitcast i16* %634 to <8 x i16>*
  %636 = load <8 x i16>, <8 x i16>* %635, align 2, !alias.scope !236
  %637 = bitcast i16* %631 to <8 x i16>*
  store <8 x i16> %633, <8 x i16>* %637, align 2, !alias.scope !239, !noalias !236
  %638 = getelementptr i16, i16* %631, i64 8
  %639 = bitcast i16* %638 to <8 x i16>*
  store <8 x i16> %636, <8 x i16>* %639, align 2, !alias.scope !239, !noalias !236
  %640 = or i64 %628, 16
  %641 = getelementptr i16, i16* %577, i64 %640
  %642 = getelementptr i16, i16* %604, i64 %640
  %643 = bitcast i16* %641 to <8 x i16>*
  %644 = load <8 x i16>, <8 x i16>* %643, align 2, !alias.scope !236
  %645 = getelementptr i16, i16* %641, i64 8
  %646 = bitcast i16* %645 to <8 x i16>*
  %647 = load <8 x i16>, <8 x i16>* %646, align 2, !alias.scope !236
  %648 = bitcast i16* %642 to <8 x i16>*
  store <8 x i16> %644, <8 x i16>* %648, align 2, !alias.scope !239, !noalias !236
  %649 = getelementptr i16, i16* %642, i64 8
  %650 = bitcast i16* %649 to <8 x i16>*
  store <8 x i16> %647, <8 x i16>* %650, align 2, !alias.scope !239, !noalias !236
  %651 = or i64 %628, 32
  %652 = getelementptr i16, i16* %577, i64 %651
  %653 = getelementptr i16, i16* %604, i64 %651
  %654 = bitcast i16* %652 to <8 x i16>*
  %655 = load <8 x i16>, <8 x i16>* %654, align 2, !alias.scope !236
  %656 = getelementptr i16, i16* %652, i64 8
  %657 = bitcast i16* %656 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !236
  %659 = bitcast i16* %653 to <8 x i16>*
  store <8 x i16> %655, <8 x i16>* %659, align 2, !alias.scope !239, !noalias !236
  %660 = getelementptr i16, i16* %653, i64 8
  %661 = bitcast i16* %660 to <8 x i16>*
  store <8 x i16> %658, <8 x i16>* %661, align 2, !alias.scope !239, !noalias !236
  %662 = or i64 %628, 48
  %663 = getelementptr i16, i16* %577, i64 %662
  %664 = getelementptr i16, i16* %604, i64 %662
  %665 = bitcast i16* %663 to <8 x i16>*
  %666 = load <8 x i16>, <8 x i16>* %665, align 2, !alias.scope !236
  %667 = getelementptr i16, i16* %663, i64 8
  %668 = bitcast i16* %667 to <8 x i16>*
  %669 = load <8 x i16>, <8 x i16>* %668, align 2, !alias.scope !236
  %670 = bitcast i16* %664 to <8 x i16>*
  store <8 x i16> %666, <8 x i16>* %670, align 2, !alias.scope !239, !noalias !236
  %671 = getelementptr i16, i16* %664, i64 8
  %672 = bitcast i16* %671 to <8 x i16>*
  store <8 x i16> %669, <8 x i16>* %672, align 2, !alias.scope !239, !noalias !236
  %673 = add i64 %628, 64
  %674 = add i64 %629, -4
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %676, label %627, !llvm.loop !241

676:                                              ; preds = %627, %615
  %677 = phi i64 [ 0, %615 ], [ %673, %627 ]
  %678 = icmp eq i64 %623, 0
  br i1 %678, label %695, label %679

679:                                              ; preds = %676, %679
  %680 = phi i64 [ %692, %679 ], [ %677, %676 ]
  %681 = phi i64 [ %693, %679 ], [ %623, %676 ]
  %682 = getelementptr i16, i16* %577, i64 %680
  %683 = getelementptr i16, i16* %604, i64 %680
  %684 = bitcast i16* %682 to <8 x i16>*
  %685 = load <8 x i16>, <8 x i16>* %684, align 2, !alias.scope !236
  %686 = getelementptr i16, i16* %682, i64 8
  %687 = bitcast i16* %686 to <8 x i16>*
  %688 = load <8 x i16>, <8 x i16>* %687, align 2, !alias.scope !236
  %689 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %685, <8 x i16>* %689, align 2, !alias.scope !239, !noalias !236
  %690 = getelementptr i16, i16* %683, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> %688, <8 x i16>* %691, align 2, !alias.scope !239, !noalias !236
  %692 = add i64 %680, 16
  %693 = add i64 %681, -1
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %679, !llvm.loop !242

695:                                              ; preds = %679, %676
  %696 = icmp eq i64 %606, %616
  br i1 %696, label %750, label %697

697:                                              ; preds = %695, %608, %603
  %698 = phi i64 [ %605, %608 ], [ %605, %603 ], [ %617, %695 ]
  %699 = phi i16* [ %577, %608 ], [ %577, %603 ], [ %618, %695 ]
  %700 = phi i16* [ %604, %608 ], [ %604, %603 ], [ %619, %695 ]
  %701 = add i64 %698, -1
  %702 = and i64 %698, 7
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %715, label %704

704:                                              ; preds = %697, %704
  %705 = phi i64 [ %710, %704 ], [ %698, %697 ]
  %706 = phi i16* [ %712, %704 ], [ %699, %697 ]
  %707 = phi i16* [ %711, %704 ], [ %700, %697 ]
  %708 = phi i64 [ %713, %704 ], [ %702, %697 ]
  %709 = load i16, i16* %706, align 2
  store i16 %709, i16* %707, align 2
  %710 = add i64 %705, -1
  %711 = getelementptr inbounds i16, i16* %707, i64 1
  %712 = getelementptr inbounds i16, i16* %706, i64 1
  %713 = add i64 %708, -1
  %714 = icmp eq i64 %713, 0
  br i1 %714, label %715, label %704, !llvm.loop !243

715:                                              ; preds = %704, %697
  %716 = phi i64 [ %698, %697 ], [ %710, %704 ]
  %717 = phi i16* [ %699, %697 ], [ %712, %704 ]
  %718 = phi i16* [ %700, %697 ], [ %711, %704 ]
  %719 = icmp ult i64 %701, 7
  br i1 %719, label %750, label %720

720:                                              ; preds = %715, %720
  %721 = phi i64 [ %746, %720 ], [ %716, %715 ]
  %722 = phi i16* [ %748, %720 ], [ %717, %715 ]
  %723 = phi i16* [ %747, %720 ], [ %718, %715 ]
  %724 = load i16, i16* %722, align 2
  store i16 %724, i16* %723, align 2
  %725 = getelementptr inbounds i16, i16* %723, i64 1
  %726 = getelementptr inbounds i16, i16* %722, i64 1
  %727 = load i16, i16* %726, align 2
  store i16 %727, i16* %725, align 2
  %728 = getelementptr inbounds i16, i16* %723, i64 2
  %729 = getelementptr inbounds i16, i16* %722, i64 2
  %730 = load i16, i16* %729, align 2
  store i16 %730, i16* %728, align 2
  %731 = getelementptr inbounds i16, i16* %723, i64 3
  %732 = getelementptr inbounds i16, i16* %722, i64 3
  %733 = load i16, i16* %732, align 2
  store i16 %733, i16* %731, align 2
  %734 = getelementptr inbounds i16, i16* %723, i64 4
  %735 = getelementptr inbounds i16, i16* %722, i64 4
  %736 = load i16, i16* %735, align 2
  store i16 %736, i16* %734, align 2
  %737 = getelementptr inbounds i16, i16* %723, i64 5
  %738 = getelementptr inbounds i16, i16* %722, i64 5
  %739 = load i16, i16* %738, align 2
  store i16 %739, i16* %737, align 2
  %740 = getelementptr inbounds i16, i16* %723, i64 6
  %741 = getelementptr inbounds i16, i16* %722, i64 6
  %742 = load i16, i16* %741, align 2
  store i16 %742, i16* %740, align 2
  %743 = getelementptr inbounds i16, i16* %723, i64 7
  %744 = getelementptr inbounds i16, i16* %722, i64 7
  %745 = load i16, i16* %744, align 2
  store i16 %745, i16* %743, align 2
  %746 = add i64 %721, -8
  %747 = getelementptr inbounds i16, i16* %723, i64 8
  %748 = getelementptr inbounds i16, i16* %722, i64 8
  %749 = icmp eq i64 %746, 0
  br i1 %749, label %750, label %720, !llvm.loop !244

750:                                              ; preds = %715, %720, %695, %572
  %751 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 4
  %752 = bitcast %"class.std::__1::basic_string.8"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %753 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %752, i64 0, i32 1, i32 1
  %754 = load i8, i8* %753, align 1
  %755 = icmp slt i8 %754, 0
  br i1 %755, label %759, label %756

756:                                              ; preds = %750
  %757 = bitcast %"class.std::__1::basic_string.8"* %751 to i8*
  %758 = bitcast %"class.std::__1::basic_string.8"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %757, i8* align 8 %758, i64 24, i1 false) #16
  br label %934

759:                                              ; preds = %750
  %760 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %761 = load i16*, i16** %760, align 8
  %762 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %763 = load i64, i64* %762, align 8
  %764 = icmp ult i64 %763, 11
  br i1 %764, label %765, label %770

765:                                              ; preds = %759
  %766 = bitcast %"class.std::__1::basic_string.8"* %751 to i16*
  %767 = trunc i64 %763 to i8
  %768 = bitcast %"class.std::__1::basic_string.8"* %751 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %769 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %768, i64 0, i32 1, i32 1
  store i8 %767, i8* %769, align 1
  br label %787

770:                                              ; preds = %759
  %771 = icmp ugt i64 %763, 9223372036854775791
  br i1 %771, label %772, label %774

772:                                              ; preds = %770
  %773 = bitcast %"class.std::__1::basic_string.8"* %751 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %773) #17
  unreachable

774:                                              ; preds = %770
  %775 = add nuw nsw i64 %763, 8
  %776 = and i64 %775, -8
  %777 = icmp slt i64 %776, 0
  br i1 %777, label %778, label %779

778:                                              ; preds = %774
  tail call void @abort() #17
  unreachable

779:                                              ; preds = %774
  %780 = shl i64 %776, 1
  %781 = tail call i8* @_Znwm(i64 %780) #18
  %782 = bitcast i8* %781 to i16*
  %783 = bitcast %"class.std::__1::basic_string.8"* %751 to i8**
  store i8* %781, i8** %783, align 8
  %784 = or i64 %776, -9223372036854775808
  %785 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %784, i64* %785, align 8
  %786 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %763, i64* %786, align 8
  br label %787

787:                                              ; preds = %779, %765
  %788 = phi i16* [ %766, %765 ], [ %782, %779 ]
  %789 = add nuw nsw i64 %763, 1
  %790 = add i64 %763, 1
  %791 = icmp ult i64 %790, 16
  br i1 %791, label %881, label %792

792:                                              ; preds = %787
  %793 = add i64 %763, 1
  %794 = getelementptr i16, i16* %788, i64 %793
  %795 = getelementptr i16, i16* %761, i64 %793
  %796 = icmp ult i16* %788, %795
  %797 = icmp ult i16* %761, %794
  %798 = and i1 %796, %797
  br i1 %798, label %881, label %799

799:                                              ; preds = %792
  %800 = and i64 %790, -16
  %801 = sub i64 %789, %800
  %802 = getelementptr i16, i16* %761, i64 %800
  %803 = getelementptr i16, i16* %788, i64 %800
  %804 = add i64 %800, -16
  %805 = lshr exact i64 %804, 4
  %806 = add nuw nsw i64 %805, 1
  %807 = and i64 %806, 3
  %808 = icmp ult i64 %804, 48
  br i1 %808, label %860, label %809

809:                                              ; preds = %799
  %810 = sub nsw i64 %806, %807
  br label %811

811:                                              ; preds = %811, %809
  %812 = phi i64 [ 0, %809 ], [ %857, %811 ]
  %813 = phi i64 [ %810, %809 ], [ %858, %811 ]
  %814 = getelementptr i16, i16* %761, i64 %812
  %815 = getelementptr i16, i16* %788, i64 %812
  %816 = bitcast i16* %814 to <8 x i16>*
  %817 = load <8 x i16>, <8 x i16>* %816, align 2, !alias.scope !245
  %818 = getelementptr i16, i16* %814, i64 8
  %819 = bitcast i16* %818 to <8 x i16>*
  %820 = load <8 x i16>, <8 x i16>* %819, align 2, !alias.scope !245
  %821 = bitcast i16* %815 to <8 x i16>*
  store <8 x i16> %817, <8 x i16>* %821, align 2, !alias.scope !248, !noalias !245
  %822 = getelementptr i16, i16* %815, i64 8
  %823 = bitcast i16* %822 to <8 x i16>*
  store <8 x i16> %820, <8 x i16>* %823, align 2, !alias.scope !248, !noalias !245
  %824 = or i64 %812, 16
  %825 = getelementptr i16, i16* %761, i64 %824
  %826 = getelementptr i16, i16* %788, i64 %824
  %827 = bitcast i16* %825 to <8 x i16>*
  %828 = load <8 x i16>, <8 x i16>* %827, align 2, !alias.scope !245
  %829 = getelementptr i16, i16* %825, i64 8
  %830 = bitcast i16* %829 to <8 x i16>*
  %831 = load <8 x i16>, <8 x i16>* %830, align 2, !alias.scope !245
  %832 = bitcast i16* %826 to <8 x i16>*
  store <8 x i16> %828, <8 x i16>* %832, align 2, !alias.scope !248, !noalias !245
  %833 = getelementptr i16, i16* %826, i64 8
  %834 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %831, <8 x i16>* %834, align 2, !alias.scope !248, !noalias !245
  %835 = or i64 %812, 32
  %836 = getelementptr i16, i16* %761, i64 %835
  %837 = getelementptr i16, i16* %788, i64 %835
  %838 = bitcast i16* %836 to <8 x i16>*
  %839 = load <8 x i16>, <8 x i16>* %838, align 2, !alias.scope !245
  %840 = getelementptr i16, i16* %836, i64 8
  %841 = bitcast i16* %840 to <8 x i16>*
  %842 = load <8 x i16>, <8 x i16>* %841, align 2, !alias.scope !245
  %843 = bitcast i16* %837 to <8 x i16>*
  store <8 x i16> %839, <8 x i16>* %843, align 2, !alias.scope !248, !noalias !245
  %844 = getelementptr i16, i16* %837, i64 8
  %845 = bitcast i16* %844 to <8 x i16>*
  store <8 x i16> %842, <8 x i16>* %845, align 2, !alias.scope !248, !noalias !245
  %846 = or i64 %812, 48
  %847 = getelementptr i16, i16* %761, i64 %846
  %848 = getelementptr i16, i16* %788, i64 %846
  %849 = bitcast i16* %847 to <8 x i16>*
  %850 = load <8 x i16>, <8 x i16>* %849, align 2, !alias.scope !245
  %851 = getelementptr i16, i16* %847, i64 8
  %852 = bitcast i16* %851 to <8 x i16>*
  %853 = load <8 x i16>, <8 x i16>* %852, align 2, !alias.scope !245
  %854 = bitcast i16* %848 to <8 x i16>*
  store <8 x i16> %850, <8 x i16>* %854, align 2, !alias.scope !248, !noalias !245
  %855 = getelementptr i16, i16* %848, i64 8
  %856 = bitcast i16* %855 to <8 x i16>*
  store <8 x i16> %853, <8 x i16>* %856, align 2, !alias.scope !248, !noalias !245
  %857 = add i64 %812, 64
  %858 = add i64 %813, -4
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %860, label %811, !llvm.loop !250

860:                                              ; preds = %811, %799
  %861 = phi i64 [ 0, %799 ], [ %857, %811 ]
  %862 = icmp eq i64 %807, 0
  br i1 %862, label %879, label %863

863:                                              ; preds = %860, %863
  %864 = phi i64 [ %876, %863 ], [ %861, %860 ]
  %865 = phi i64 [ %877, %863 ], [ %807, %860 ]
  %866 = getelementptr i16, i16* %761, i64 %864
  %867 = getelementptr i16, i16* %788, i64 %864
  %868 = bitcast i16* %866 to <8 x i16>*
  %869 = load <8 x i16>, <8 x i16>* %868, align 2, !alias.scope !245
  %870 = getelementptr i16, i16* %866, i64 8
  %871 = bitcast i16* %870 to <8 x i16>*
  %872 = load <8 x i16>, <8 x i16>* %871, align 2, !alias.scope !245
  %873 = bitcast i16* %867 to <8 x i16>*
  store <8 x i16> %869, <8 x i16>* %873, align 2, !alias.scope !248, !noalias !245
  %874 = getelementptr i16, i16* %867, i64 8
  %875 = bitcast i16* %874 to <8 x i16>*
  store <8 x i16> %872, <8 x i16>* %875, align 2, !alias.scope !248, !noalias !245
  %876 = add i64 %864, 16
  %877 = add i64 %865, -1
  %878 = icmp eq i64 %877, 0
  br i1 %878, label %879, label %863, !llvm.loop !251

879:                                              ; preds = %863, %860
  %880 = icmp eq i64 %790, %800
  br i1 %880, label %934, label %881

881:                                              ; preds = %879, %792, %787
  %882 = phi i64 [ %789, %792 ], [ %789, %787 ], [ %801, %879 ]
  %883 = phi i16* [ %761, %792 ], [ %761, %787 ], [ %802, %879 ]
  %884 = phi i16* [ %788, %792 ], [ %788, %787 ], [ %803, %879 ]
  %885 = add i64 %882, -1
  %886 = and i64 %882, 7
  %887 = icmp eq i64 %886, 0
  br i1 %887, label %899, label %888

888:                                              ; preds = %881, %888
  %889 = phi i64 [ %894, %888 ], [ %882, %881 ]
  %890 = phi i16* [ %896, %888 ], [ %883, %881 ]
  %891 = phi i16* [ %895, %888 ], [ %884, %881 ]
  %892 = phi i64 [ %897, %888 ], [ %886, %881 ]
  %893 = load i16, i16* %890, align 2
  store i16 %893, i16* %891, align 2
  %894 = add i64 %889, -1
  %895 = getelementptr inbounds i16, i16* %891, i64 1
  %896 = getelementptr inbounds i16, i16* %890, i64 1
  %897 = add i64 %892, -1
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %899, label %888, !llvm.loop !252

899:                                              ; preds = %888, %881
  %900 = phi i64 [ %882, %881 ], [ %894, %888 ]
  %901 = phi i16* [ %883, %881 ], [ %896, %888 ]
  %902 = phi i16* [ %884, %881 ], [ %895, %888 ]
  %903 = icmp ult i64 %885, 7
  br i1 %903, label %934, label %904

904:                                              ; preds = %899, %904
  %905 = phi i64 [ %930, %904 ], [ %900, %899 ]
  %906 = phi i16* [ %932, %904 ], [ %901, %899 ]
  %907 = phi i16* [ %931, %904 ], [ %902, %899 ]
  %908 = load i16, i16* %906, align 2
  store i16 %908, i16* %907, align 2
  %909 = getelementptr inbounds i16, i16* %907, i64 1
  %910 = getelementptr inbounds i16, i16* %906, i64 1
  %911 = load i16, i16* %910, align 2
  store i16 %911, i16* %909, align 2
  %912 = getelementptr inbounds i16, i16* %907, i64 2
  %913 = getelementptr inbounds i16, i16* %906, i64 2
  %914 = load i16, i16* %913, align 2
  store i16 %914, i16* %912, align 2
  %915 = getelementptr inbounds i16, i16* %907, i64 3
  %916 = getelementptr inbounds i16, i16* %906, i64 3
  %917 = load i16, i16* %916, align 2
  store i16 %917, i16* %915, align 2
  %918 = getelementptr inbounds i16, i16* %907, i64 4
  %919 = getelementptr inbounds i16, i16* %906, i64 4
  %920 = load i16, i16* %919, align 2
  store i16 %920, i16* %918, align 2
  %921 = getelementptr inbounds i16, i16* %907, i64 5
  %922 = getelementptr inbounds i16, i16* %906, i64 5
  %923 = load i16, i16* %922, align 2
  store i16 %923, i16* %921, align 2
  %924 = getelementptr inbounds i16, i16* %907, i64 6
  %925 = getelementptr inbounds i16, i16* %906, i64 6
  %926 = load i16, i16* %925, align 2
  store i16 %926, i16* %924, align 2
  %927 = getelementptr inbounds i16, i16* %907, i64 7
  %928 = getelementptr inbounds i16, i16* %906, i64 7
  %929 = load i16, i16* %928, align 2
  store i16 %929, i16* %927, align 2
  %930 = add i64 %905, -8
  %931 = getelementptr inbounds i16, i16* %907, i64 8
  %932 = getelementptr inbounds i16, i16* %906, i64 8
  %933 = icmp eq i64 %930, 0
  br i1 %933, label %934, label %904, !llvm.loop !253

934:                                              ; preds = %899, %904, %879, %756
  %935 = tail call i8* @_Znwm(i64 120) #18
  %936 = bitcast i8* %935 to %"class.std::__1::basic_string.8"*
  %937 = bitcast %"class.std::__1::basic_string.8"** %12 to i8**
  store i8* %935, i8** %937, align 8
  %938 = bitcast %"class.std::__1::vector.72"* %8 to i8**
  store i8* %935, i8** %938, align 8
  %939 = getelementptr inbounds i8, i8* %935, i64 120
  %940 = bitcast %"class.std::__1::basic_string.8"** %13 to i8**
  store i8* %939, i8** %940, align 8
  %941 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 5
  %942 = bitcast %"class.std::__1::basic_string.8"** %12 to i64*
  br label %943

943:                                              ; preds = %1129, %934
  %944 = phi %"class.std::__1::basic_string.8"* [ %1131, %1129 ], [ %936, %934 ]
  %945 = phi %"class.std::__1::basic_string.8"* [ %1130, %1129 ], [ %16, %934 ]
  %946 = bitcast %"class.std::__1::basic_string.8"* %945 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %947 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %946, i64 0, i32 1, i32 1
  %948 = load i8, i8* %947, align 1
  %949 = icmp slt i8 %948, 0
  br i1 %949, label %953, label %950

950:                                              ; preds = %943
  %951 = bitcast %"class.std::__1::basic_string.8"* %944 to i8*
  %952 = bitcast %"class.std::__1::basic_string.8"* %945 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %951, i8* align 8 %952, i64 24, i1 false) #16
  br label %1129

953:                                              ; preds = %943
  %954 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %945, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %955 = load i16*, i16** %954, align 8
  %956 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %945, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %957 = load i64, i64* %956, align 8
  %958 = icmp ult i64 %957, 11
  br i1 %958, label %959, label %964

959:                                              ; preds = %953
  %960 = bitcast %"class.std::__1::basic_string.8"* %944 to i16*
  %961 = trunc i64 %957 to i8
  %962 = bitcast %"class.std::__1::basic_string.8"* %944 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %963 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %962, i64 0, i32 1, i32 1
  store i8 %961, i8* %963, align 1
  br label %981

964:                                              ; preds = %953
  %965 = icmp ugt i64 %957, 9223372036854775791
  br i1 %965, label %966, label %968

966:                                              ; preds = %964
  %967 = bitcast %"class.std::__1::basic_string.8"* %944 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %967) #17
  unreachable

968:                                              ; preds = %964
  %969 = add nuw nsw i64 %957, 8
  %970 = and i64 %969, -8
  %971 = icmp slt i64 %970, 0
  br i1 %971, label %972, label %973

972:                                              ; preds = %968
  call void @abort() #17
  unreachable

973:                                              ; preds = %968
  %974 = shl i64 %970, 1
  %975 = call i8* @_Znwm(i64 %974) #18
  %976 = bitcast i8* %975 to i16*
  %977 = bitcast %"class.std::__1::basic_string.8"* %944 to i8**
  store i8* %975, i8** %977, align 8
  %978 = or i64 %970, -9223372036854775808
  %979 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %944, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %978, i64* %979, align 8
  %980 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %944, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %957, i64* %980, align 8
  br label %981

981:                                              ; preds = %973, %959
  %982 = phi i16* [ %960, %959 ], [ %976, %973 ]
  %983 = add nuw nsw i64 %957, 1
  %984 = add i64 %957, 1
  %985 = icmp ult i64 %984, 16
  br i1 %985, label %1076, label %986

986:                                              ; preds = %981
  %987 = getelementptr i16, i16* %982, i64 1
  %988 = getelementptr i16, i16* %987, i64 %957
  %989 = getelementptr i16, i16* %955, i64 1
  %990 = getelementptr i16, i16* %989, i64 %957
  %991 = icmp ult i16* %982, %990
  %992 = icmp ult i16* %955, %988
  %993 = and i1 %991, %992
  br i1 %993, label %1076, label %994

994:                                              ; preds = %986
  %995 = and i64 %984, -16
  %996 = sub i64 %983, %995
  %997 = getelementptr i16, i16* %955, i64 %995
  %998 = getelementptr i16, i16* %982, i64 %995
  %999 = add i64 %995, -16
  %1000 = lshr exact i64 %999, 4
  %1001 = add nuw nsw i64 %1000, 1
  %1002 = and i64 %1001, 3
  %1003 = icmp ult i64 %999, 48
  br i1 %1003, label %1055, label %1004

1004:                                             ; preds = %994
  %1005 = sub nsw i64 %1001, %1002
  br label %1006

1006:                                             ; preds = %1006, %1004
  %1007 = phi i64 [ 0, %1004 ], [ %1052, %1006 ]
  %1008 = phi i64 [ %1005, %1004 ], [ %1053, %1006 ]
  %1009 = getelementptr i16, i16* %955, i64 %1007
  %1010 = getelementptr i16, i16* %982, i64 %1007
  %1011 = bitcast i16* %1009 to <8 x i16>*
  %1012 = load <8 x i16>, <8 x i16>* %1011, align 2, !alias.scope !254
  %1013 = getelementptr i16, i16* %1009, i64 8
  %1014 = bitcast i16* %1013 to <8 x i16>*
  %1015 = load <8 x i16>, <8 x i16>* %1014, align 2, !alias.scope !254
  %1016 = bitcast i16* %1010 to <8 x i16>*
  store <8 x i16> %1012, <8 x i16>* %1016, align 2, !alias.scope !257, !noalias !254
  %1017 = getelementptr i16, i16* %1010, i64 8
  %1018 = bitcast i16* %1017 to <8 x i16>*
  store <8 x i16> %1015, <8 x i16>* %1018, align 2, !alias.scope !257, !noalias !254
  %1019 = or i64 %1007, 16
  %1020 = getelementptr i16, i16* %955, i64 %1019
  %1021 = getelementptr i16, i16* %982, i64 %1019
  %1022 = bitcast i16* %1020 to <8 x i16>*
  %1023 = load <8 x i16>, <8 x i16>* %1022, align 2, !alias.scope !254
  %1024 = getelementptr i16, i16* %1020, i64 8
  %1025 = bitcast i16* %1024 to <8 x i16>*
  %1026 = load <8 x i16>, <8 x i16>* %1025, align 2, !alias.scope !254
  %1027 = bitcast i16* %1021 to <8 x i16>*
  store <8 x i16> %1023, <8 x i16>* %1027, align 2, !alias.scope !257, !noalias !254
  %1028 = getelementptr i16, i16* %1021, i64 8
  %1029 = bitcast i16* %1028 to <8 x i16>*
  store <8 x i16> %1026, <8 x i16>* %1029, align 2, !alias.scope !257, !noalias !254
  %1030 = or i64 %1007, 32
  %1031 = getelementptr i16, i16* %955, i64 %1030
  %1032 = getelementptr i16, i16* %982, i64 %1030
  %1033 = bitcast i16* %1031 to <8 x i16>*
  %1034 = load <8 x i16>, <8 x i16>* %1033, align 2, !alias.scope !254
  %1035 = getelementptr i16, i16* %1031, i64 8
  %1036 = bitcast i16* %1035 to <8 x i16>*
  %1037 = load <8 x i16>, <8 x i16>* %1036, align 2, !alias.scope !254
  %1038 = bitcast i16* %1032 to <8 x i16>*
  store <8 x i16> %1034, <8 x i16>* %1038, align 2, !alias.scope !257, !noalias !254
  %1039 = getelementptr i16, i16* %1032, i64 8
  %1040 = bitcast i16* %1039 to <8 x i16>*
  store <8 x i16> %1037, <8 x i16>* %1040, align 2, !alias.scope !257, !noalias !254
  %1041 = or i64 %1007, 48
  %1042 = getelementptr i16, i16* %955, i64 %1041
  %1043 = getelementptr i16, i16* %982, i64 %1041
  %1044 = bitcast i16* %1042 to <8 x i16>*
  %1045 = load <8 x i16>, <8 x i16>* %1044, align 2, !alias.scope !254
  %1046 = getelementptr i16, i16* %1042, i64 8
  %1047 = bitcast i16* %1046 to <8 x i16>*
  %1048 = load <8 x i16>, <8 x i16>* %1047, align 2, !alias.scope !254
  %1049 = bitcast i16* %1043 to <8 x i16>*
  store <8 x i16> %1045, <8 x i16>* %1049, align 2, !alias.scope !257, !noalias !254
  %1050 = getelementptr i16, i16* %1043, i64 8
  %1051 = bitcast i16* %1050 to <8 x i16>*
  store <8 x i16> %1048, <8 x i16>* %1051, align 2, !alias.scope !257, !noalias !254
  %1052 = add i64 %1007, 64
  %1053 = add i64 %1008, -4
  %1054 = icmp eq i64 %1053, 0
  br i1 %1054, label %1055, label %1006, !llvm.loop !259

1055:                                             ; preds = %1006, %994
  %1056 = phi i64 [ 0, %994 ], [ %1052, %1006 ]
  %1057 = icmp eq i64 %1002, 0
  br i1 %1057, label %1074, label %1058

1058:                                             ; preds = %1055, %1058
  %1059 = phi i64 [ %1071, %1058 ], [ %1056, %1055 ]
  %1060 = phi i64 [ %1072, %1058 ], [ %1002, %1055 ]
  %1061 = getelementptr i16, i16* %955, i64 %1059
  %1062 = getelementptr i16, i16* %982, i64 %1059
  %1063 = bitcast i16* %1061 to <8 x i16>*
  %1064 = load <8 x i16>, <8 x i16>* %1063, align 2, !alias.scope !254
  %1065 = getelementptr i16, i16* %1061, i64 8
  %1066 = bitcast i16* %1065 to <8 x i16>*
  %1067 = load <8 x i16>, <8 x i16>* %1066, align 2, !alias.scope !254
  %1068 = bitcast i16* %1062 to <8 x i16>*
  store <8 x i16> %1064, <8 x i16>* %1068, align 2, !alias.scope !257, !noalias !254
  %1069 = getelementptr i16, i16* %1062, i64 8
  %1070 = bitcast i16* %1069 to <8 x i16>*
  store <8 x i16> %1067, <8 x i16>* %1070, align 2, !alias.scope !257, !noalias !254
  %1071 = add i64 %1059, 16
  %1072 = add i64 %1060, -1
  %1073 = icmp eq i64 %1072, 0
  br i1 %1073, label %1074, label %1058, !llvm.loop !260

1074:                                             ; preds = %1058, %1055
  %1075 = icmp eq i64 %984, %995
  br i1 %1075, label %1129, label %1076

1076:                                             ; preds = %1074, %986, %981
  %1077 = phi i64 [ %983, %986 ], [ %983, %981 ], [ %996, %1074 ]
  %1078 = phi i16* [ %955, %986 ], [ %955, %981 ], [ %997, %1074 ]
  %1079 = phi i16* [ %982, %986 ], [ %982, %981 ], [ %998, %1074 ]
  %1080 = add i64 %1077, -1
  %1081 = and i64 %1077, 7
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1094, label %1083

1083:                                             ; preds = %1076, %1083
  %1084 = phi i64 [ %1089, %1083 ], [ %1077, %1076 ]
  %1085 = phi i16* [ %1091, %1083 ], [ %1078, %1076 ]
  %1086 = phi i16* [ %1090, %1083 ], [ %1079, %1076 ]
  %1087 = phi i64 [ %1092, %1083 ], [ %1081, %1076 ]
  %1088 = load i16, i16* %1085, align 2
  store i16 %1088, i16* %1086, align 2
  %1089 = add i64 %1084, -1
  %1090 = getelementptr inbounds i16, i16* %1086, i64 1
  %1091 = getelementptr inbounds i16, i16* %1085, i64 1
  %1092 = add i64 %1087, -1
  %1093 = icmp eq i64 %1092, 0
  br i1 %1093, label %1094, label %1083, !llvm.loop !261

1094:                                             ; preds = %1083, %1076
  %1095 = phi i64 [ %1077, %1076 ], [ %1089, %1083 ]
  %1096 = phi i16* [ %1078, %1076 ], [ %1091, %1083 ]
  %1097 = phi i16* [ %1079, %1076 ], [ %1090, %1083 ]
  %1098 = icmp ult i64 %1080, 7
  br i1 %1098, label %1129, label %1099

1099:                                             ; preds = %1094, %1099
  %1100 = phi i64 [ %1125, %1099 ], [ %1095, %1094 ]
  %1101 = phi i16* [ %1127, %1099 ], [ %1096, %1094 ]
  %1102 = phi i16* [ %1126, %1099 ], [ %1097, %1094 ]
  %1103 = load i16, i16* %1101, align 2
  store i16 %1103, i16* %1102, align 2
  %1104 = getelementptr inbounds i16, i16* %1102, i64 1
  %1105 = getelementptr inbounds i16, i16* %1101, i64 1
  %1106 = load i16, i16* %1105, align 2
  store i16 %1106, i16* %1104, align 2
  %1107 = getelementptr inbounds i16, i16* %1102, i64 2
  %1108 = getelementptr inbounds i16, i16* %1101, i64 2
  %1109 = load i16, i16* %1108, align 2
  store i16 %1109, i16* %1107, align 2
  %1110 = getelementptr inbounds i16, i16* %1102, i64 3
  %1111 = getelementptr inbounds i16, i16* %1101, i64 3
  %1112 = load i16, i16* %1111, align 2
  store i16 %1112, i16* %1110, align 2
  %1113 = getelementptr inbounds i16, i16* %1102, i64 4
  %1114 = getelementptr inbounds i16, i16* %1101, i64 4
  %1115 = load i16, i16* %1114, align 2
  store i16 %1115, i16* %1113, align 2
  %1116 = getelementptr inbounds i16, i16* %1102, i64 5
  %1117 = getelementptr inbounds i16, i16* %1101, i64 5
  %1118 = load i16, i16* %1117, align 2
  store i16 %1118, i16* %1116, align 2
  %1119 = getelementptr inbounds i16, i16* %1102, i64 6
  %1120 = getelementptr inbounds i16, i16* %1101, i64 6
  %1121 = load i16, i16* %1120, align 2
  store i16 %1121, i16* %1119, align 2
  %1122 = getelementptr inbounds i16, i16* %1102, i64 7
  %1123 = getelementptr inbounds i16, i16* %1101, i64 7
  %1124 = load i16, i16* %1123, align 2
  store i16 %1124, i16* %1122, align 2
  %1125 = add i64 %1100, -8
  %1126 = getelementptr inbounds i16, i16* %1102, i64 8
  %1127 = getelementptr inbounds i16, i16* %1101, i64 8
  %1128 = icmp eq i64 %1125, 0
  br i1 %1128, label %1129, label %1099, !llvm.loop !262

1129:                                             ; preds = %1094, %1099, %1074, %950
  %1130 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %945, i64 1
  %1131 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %944, i64 1
  %1132 = icmp eq %"class.std::__1::basic_string.8"* %1130, %941
  br i1 %1132, label %1133, label %943

1133:                                             ; preds = %1129
  %1134 = ptrtoint %"class.std::__1::basic_string.8"* %1131 to i64
  store i64 %1134, i64* %942, align 8
  %1135 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 4
  %1136 = bitcast %"class.std::__1::basic_string.8"* %1135 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1137 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1136, i64 0, i32 1, i32 1
  %1138 = load i8, i8* %1137, align 1
  %1139 = icmp slt i8 %1138, 0
  br i1 %1139, label %1140, label %1143

1140:                                             ; preds = %1133
  %1141 = bitcast %"class.std::__1::basic_string.8"* %1135 to i8**
  %1142 = load i8*, i8** %1141, align 8
  call void @_ZdlPv(i8* %1142) #18
  br label %1143

1143:                                             ; preds = %1133, %1140
  %1144 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 3
  %1145 = bitcast %"class.std::__1::basic_string.8"* %1144 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1146 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1145, i64 0, i32 1, i32 1
  %1147 = load i8, i8* %1146, align 1
  %1148 = icmp slt i8 %1147, 0
  br i1 %1148, label %1170, label %1173

1149:                                             ; preds = %1199
  %1150 = bitcast %"class.std::__1::basic_string.8"* %1200 to i8*
  %1151 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %12, align 8
  %1152 = icmp eq %"class.std::__1::basic_string.8"* %1151, %1200
  br i1 %1152, label %1167, label %1153

1153:                                             ; preds = %1149, %1163
  %1154 = phi %"class.std::__1::basic_string.8"* [ %1155, %1163 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1154, i64 -1
  %1156 = bitcast %"class.std::__1::basic_string.8"* %1155 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1156, i64 0, i32 1, i32 1
  %1158 = load i8, i8* %1157, align 1
  %1159 = icmp slt i8 %1158, 0
  br i1 %1159, label %1160, label %1163

1160:                                             ; preds = %1153
  %1161 = bitcast %"class.std::__1::basic_string.8"* %1155 to i8**
  %1162 = load i8*, i8** %1161, align 8
  call void @_ZdlPv(i8* %1162) #18
  br label %1163

1163:                                             ; preds = %1160, %1153
  %1164 = icmp eq %"class.std::__1::basic_string.8"* %1155, %1200
  br i1 %1164, label %1165, label %1153

1165:                                             ; preds = %1163
  %1166 = load i8*, i8** %938, align 8
  br label %1167

1167:                                             ; preds = %1165, %1149
  %1168 = phi i8* [ %1166, %1165 ], [ %1150, %1149 ]
  store %"class.std::__1::basic_string.8"* %1200, %"class.std::__1::basic_string.8"** %12, align 8
  call void @_ZdlPv(i8* %1168) #18
  br label %1169

1169:                                             ; preds = %1199, %1167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  ret void

1170:                                             ; preds = %1143
  %1171 = bitcast %"class.std::__1::basic_string.8"* %1144 to i8**
  %1172 = load i8*, i8** %1171, align 8
  call void @_ZdlPv(i8* %1172) #18
  br label %1173

1173:                                             ; preds = %1170, %1143
  %1174 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 2
  %1175 = bitcast %"class.std::__1::basic_string.8"* %1174 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1176 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1175, i64 0, i32 1, i32 1
  %1177 = load i8, i8* %1176, align 1
  %1178 = icmp slt i8 %1177, 0
  br i1 %1178, label %1179, label %1182

1179:                                             ; preds = %1173
  %1180 = bitcast %"class.std::__1::basic_string.8"* %1174 to i8**
  %1181 = load i8*, i8** %1180, align 8
  call void @_ZdlPv(i8* %1181) #18
  br label %1182

1182:                                             ; preds = %1179, %1173
  %1183 = getelementptr inbounds [5 x %"class.std::__1::basic_string.8"], [5 x %"class.std::__1::basic_string.8"]* %9, i64 0, i64 1
  %1184 = bitcast %"class.std::__1::basic_string.8"* %1183 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1185 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1184, i64 0, i32 1, i32 1
  %1186 = load i8, i8* %1185, align 1
  %1187 = icmp slt i8 %1186, 0
  br i1 %1187, label %1188, label %1191

1188:                                             ; preds = %1182
  %1189 = bitcast %"class.std::__1::basic_string.8"* %1183 to i8**
  %1190 = load i8*, i8** %1189, align 8
  call void @_ZdlPv(i8* %1190) #18
  br label %1191

1191:                                             ; preds = %1188, %1182
  %1192 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1193 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1192, i64 0, i32 1, i32 1
  %1194 = load i8, i8* %1193, align 1
  %1195 = icmp slt i8 %1194, 0
  br i1 %1195, label %1196, label %1199

1196:                                             ; preds = %1191
  %1197 = bitcast [5 x %"class.std::__1::basic_string.8"]* %9 to i8**
  %1198 = load i8*, i8** %1197, align 8
  call void @_ZdlPv(i8* %1198) #18
  br label %1199

1199:                                             ; preds = %1196, %1191
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.79"* null)
  %1200 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %11, align 8
  %1201 = icmp eq %"class.std::__1::basic_string.8"* %1200, null
  br i1 %1201, label %1169, label %1149
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPm(%"class.std::__1::basic_string.8"* noalias sret, i32, %"class.std::__1::basic_string.8"* nocapture readonly dereferenceable(24), i64* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.79", align 8
  %6 = alloca %"class.std::__1::vector.72", align 8
  %7 = alloca [1 x %"class.std::__1::basic_string.8"], align 8
  %8 = bitcast %"class.std::__1::vector.79"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #16
  %11 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to i8*
  %16 = bitcast %"class.std::__1::vector.72"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %17 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %22, i64 24, i1 false) #16
  br label %198

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %51

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #17
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #18
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8
  br label %51

51:                                               ; preds = %43, %29
  %52 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %27, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %25, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %25, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = sub i64 %53, %64
  %66 = getelementptr i16, i16* %25, i64 %64
  %67 = getelementptr i16, i16* %52, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %25, i64 %76
  %79 = getelementptr i16, i16* %52, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !263
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !263
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !266, !noalias !263
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !266, !noalias !263
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %25, i64 %88
  %90 = getelementptr i16, i16* %52, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !263
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !263
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !266, !noalias !263
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !266, !noalias !263
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %25, i64 %99
  %101 = getelementptr i16, i16* %52, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !263
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !263
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !266, !noalias !263
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !266, !noalias !263
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %25, i64 %110
  %112 = getelementptr i16, i16* %52, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !263
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !263
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !266, !noalias !263
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !266, !noalias !263
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !268

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %25, i64 %128
  %131 = getelementptr i16, i16* %52, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !263
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !263
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !266, !noalias !263
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !266, !noalias !263
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !269

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %65, %143 ]
  %147 = phi i16* [ %25, %56 ], [ %25, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !270

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !271

198:                                              ; preds = %163, %168, %143, %21
  %199 = tail call i8* @_Znwm(i64 24) #18
  %200 = bitcast %"class.std::__1::basic_string.8"** %13 to i8**
  store i8* %199, i8** %200, align 8
  %201 = bitcast %"class.std::__1::vector.72"* %6 to i8**
  store i8* %199, i8** %201, align 8
  %202 = getelementptr inbounds i8, i8* %199, i64 24
  %203 = bitcast %"class.std::__1::basic_string.8"** %14 to i8**
  store i8* %202, i8** %203, align 8
  %204 = bitcast %"class.std::__1::basic_string.8"** %13 to i64*
  %205 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %205, i64 0, i32 1, i32 1
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %198
  %210 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %199, i8* nonnull align 8 %210, i64 24, i1 false) #16
  %211 = getelementptr inbounds i8, i8* %199, i64 24
  %212 = ptrtoint i8* %211 to i64
  store i64 %212, i64* %204, align 8
  br label %402

213:                                              ; preds = %198
  %214 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i16*, i16** %214, align 8
  %216 = bitcast i16* %215 to i8*
  %217 = getelementptr inbounds [1 x %"class.std::__1::basic_string.8"], [1 x %"class.std::__1::basic_string.8"]* %7, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = icmp ult i64 %218, 11
  br i1 %219, label %220, label %223

220:                                              ; preds = %213
  %221 = trunc i64 %218 to i8
  %222 = getelementptr inbounds i8, i8* %199, i64 23
  store i8 %221, i8* %222, align 1
  br label %241

223:                                              ; preds = %213
  %224 = icmp ugt i64 %218, 9223372036854775791
  br i1 %224, label %225, label %227

225:                                              ; preds = %223
  %226 = bitcast i8* %199 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %226) #17
  unreachable

227:                                              ; preds = %223
  %228 = add nuw nsw i64 %218, 8
  %229 = and i64 %228, -8
  %230 = icmp slt i64 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %227
  call void @abort() #17
  unreachable

232:                                              ; preds = %227
  %233 = shl i64 %229, 1
  %234 = call i8* @_Znwm(i64 %233) #18
  %235 = bitcast i8* %199 to i8**
  store i8* %234, i8** %235, align 8
  %236 = or i64 %229, -9223372036854775808
  %237 = getelementptr inbounds i8, i8* %199, i64 16
  %238 = bitcast i8* %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = getelementptr inbounds i8, i8* %199, i64 8
  %240 = bitcast i8* %239 to i64*
  store i64 %218, i64* %240, align 8
  br label %241

241:                                              ; preds = %232, %220
  %242 = phi i8* [ %199, %220 ], [ %234, %232 ]
  %243 = bitcast i8* %242 to i16*
  %244 = add nuw nsw i64 %218, 1
  %245 = add i64 %218, 1
  %246 = icmp ult i64 %245, 16
  br i1 %246, label %339, label %247

247:                                              ; preds = %241
  %248 = shl i64 %218, 1
  %249 = add i64 %248, 2
  %250 = getelementptr i8, i8* %242, i64 %249
  %251 = add i64 %218, 1
  %252 = getelementptr i16, i16* %215, i64 %251
  %253 = bitcast i16* %252 to i8*
  %254 = icmp ult i8* %242, %253
  %255 = icmp ugt i8* %250, %216
  %256 = and i1 %254, %255
  br i1 %256, label %339, label %257

257:                                              ; preds = %247
  %258 = and i64 %245, -16
  %259 = sub i64 %244, %258
  %260 = getelementptr i16, i16* %215, i64 %258
  %261 = getelementptr i16, i16* %243, i64 %258
  %262 = add i64 %258, -16
  %263 = lshr exact i64 %262, 4
  %264 = add nuw nsw i64 %263, 1
  %265 = and i64 %264, 3
  %266 = icmp ult i64 %262, 48
  br i1 %266, label %318, label %267

267:                                              ; preds = %257
  %268 = sub nsw i64 %264, %265
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi i64 [ 0, %267 ], [ %315, %269 ]
  %271 = phi i64 [ %268, %267 ], [ %316, %269 ]
  %272 = getelementptr i16, i16* %215, i64 %270
  %273 = getelementptr i16, i16* %243, i64 %270
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !272
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !272
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !275, !noalias !272
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !275, !noalias !272
  %282 = or i64 %270, 16
  %283 = getelementptr i16, i16* %215, i64 %282
  %284 = getelementptr i16, i16* %243, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !272
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !272
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !275, !noalias !272
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !275, !noalias !272
  %293 = or i64 %270, 32
  %294 = getelementptr i16, i16* %215, i64 %293
  %295 = getelementptr i16, i16* %243, i64 %293
  %296 = bitcast i16* %294 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !272
  %298 = getelementptr i16, i16* %294, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !272
  %301 = bitcast i16* %295 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %301, align 2, !alias.scope !275, !noalias !272
  %302 = getelementptr i16, i16* %295, i64 8
  %303 = bitcast i16* %302 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %303, align 2, !alias.scope !275, !noalias !272
  %304 = or i64 %270, 48
  %305 = getelementptr i16, i16* %215, i64 %304
  %306 = getelementptr i16, i16* %243, i64 %304
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !272
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !272
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !275, !noalias !272
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !275, !noalias !272
  %315 = add i64 %270, 64
  %316 = add i64 %271, -4
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %269, !llvm.loop !277

318:                                              ; preds = %269, %257
  %319 = phi i64 [ 0, %257 ], [ %315, %269 ]
  %320 = icmp eq i64 %265, 0
  br i1 %320, label %337, label %321

321:                                              ; preds = %318, %321
  %322 = phi i64 [ %334, %321 ], [ %319, %318 ]
  %323 = phi i64 [ %335, %321 ], [ %265, %318 ]
  %324 = getelementptr i16, i16* %215, i64 %322
  %325 = getelementptr i16, i16* %243, i64 %322
  %326 = bitcast i16* %324 to <8 x i16>*
  %327 = load <8 x i16>, <8 x i16>* %326, align 2, !alias.scope !272
  %328 = getelementptr i16, i16* %324, i64 8
  %329 = bitcast i16* %328 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !272
  %331 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %327, <8 x i16>* %331, align 2, !alias.scope !275, !noalias !272
  %332 = getelementptr i16, i16* %325, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %333, align 2, !alias.scope !275, !noalias !272
  %334 = add i64 %322, 16
  %335 = add i64 %323, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %321, !llvm.loop !278

337:                                              ; preds = %321, %318
  %338 = icmp eq i64 %245, %258
  br i1 %338, label %392, label %339

339:                                              ; preds = %337, %247, %241
  %340 = phi i64 [ %244, %247 ], [ %244, %241 ], [ %259, %337 ]
  %341 = phi i16* [ %215, %247 ], [ %215, %241 ], [ %260, %337 ]
  %342 = phi i16* [ %243, %247 ], [ %243, %241 ], [ %261, %337 ]
  %343 = add i64 %340, -1
  %344 = and i64 %340, 7
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %357, label %346

346:                                              ; preds = %339, %346
  %347 = phi i64 [ %352, %346 ], [ %340, %339 ]
  %348 = phi i16* [ %354, %346 ], [ %341, %339 ]
  %349 = phi i16* [ %353, %346 ], [ %342, %339 ]
  %350 = phi i64 [ %355, %346 ], [ %344, %339 ]
  %351 = load i16, i16* %348, align 2
  store i16 %351, i16* %349, align 2
  %352 = add i64 %347, -1
  %353 = getelementptr inbounds i16, i16* %349, i64 1
  %354 = getelementptr inbounds i16, i16* %348, i64 1
  %355 = add i64 %350, -1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %346, !llvm.loop !279

357:                                              ; preds = %346, %339
  %358 = phi i64 [ %340, %339 ], [ %352, %346 ]
  %359 = phi i16* [ %341, %339 ], [ %354, %346 ]
  %360 = phi i16* [ %342, %339 ], [ %353, %346 ]
  %361 = icmp ult i64 %343, 7
  br i1 %361, label %392, label %362

362:                                              ; preds = %357, %362
  %363 = phi i64 [ %388, %362 ], [ %358, %357 ]
  %364 = phi i16* [ %390, %362 ], [ %359, %357 ]
  %365 = phi i16* [ %389, %362 ], [ %360, %357 ]
  %366 = load i16, i16* %364, align 2
  store i16 %366, i16* %365, align 2
  %367 = getelementptr inbounds i16, i16* %365, i64 1
  %368 = getelementptr inbounds i16, i16* %364, i64 1
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %365, i64 2
  %371 = getelementptr inbounds i16, i16* %364, i64 2
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %365, i64 3
  %374 = getelementptr inbounds i16, i16* %364, i64 3
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %365, i64 4
  %377 = getelementptr inbounds i16, i16* %364, i64 4
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %365, i64 5
  %380 = getelementptr inbounds i16, i16* %364, i64 5
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = getelementptr inbounds i16, i16* %365, i64 6
  %383 = getelementptr inbounds i16, i16* %364, i64 6
  %384 = load i16, i16* %383, align 2
  store i16 %384, i16* %382, align 2
  %385 = getelementptr inbounds i16, i16* %365, i64 7
  %386 = getelementptr inbounds i16, i16* %364, i64 7
  %387 = load i16, i16* %386, align 2
  store i16 %387, i16* %385, align 2
  %388 = add i64 %363, -8
  %389 = getelementptr inbounds i16, i16* %365, i64 8
  %390 = getelementptr inbounds i16, i16* %364, i64 8
  %391 = icmp eq i64 %388, 0
  br i1 %391, label %392, label %362, !llvm.loop !280

392:                                              ; preds = %357, %362, %337
  %393 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %393, i64 0, i32 1, i32 1
  %395 = load i8, i8* %394, align 1
  %396 = getelementptr inbounds i8, i8* %199, i64 24
  %397 = ptrtoint i8* %396 to i64
  store i64 %397, i64* %204, align 8
  %398 = icmp slt i8 %395, 0
  br i1 %398, label %399, label %402

399:                                              ; preds = %392
  %400 = bitcast [1 x %"class.std::__1::basic_string.8"]* %7 to i8**
  %401 = load i8*, i8** %400, align 8
  call void @_ZdlPv(i8* %401) #18
  br label %402

402:                                              ; preds = %209, %392, %399
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  %403 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %403, i8 -86, i64 24, i1 false)
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_ImNS5_ImEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::vector.72"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.79"* nonnull %5)
  %404 = load i64*, i64** %9, align 8
  %405 = load i64, i64* %404, align 8
  store i64 %405, i64* %3, align 8
  %406 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %12, align 8
  %407 = icmp eq %"class.std::__1::basic_string.8"* %406, null
  br i1 %407, label %429, label %408

408:                                              ; preds = %402
  %409 = bitcast %"class.std::__1::basic_string.8"* %406 to i8*
  %410 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %13, align 8
  %411 = icmp eq %"class.std::__1::basic_string.8"* %410, %406
  br i1 %411, label %426, label %412

412:                                              ; preds = %408, %422
  %413 = phi %"class.std::__1::basic_string.8"* [ %414, %422 ], [ %410, %408 ]
  %414 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %413, i64 -1
  %415 = bitcast %"class.std::__1::basic_string.8"* %414 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %416 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %415, i64 0, i32 1, i32 1
  %417 = load i8, i8* %416, align 1
  %418 = icmp slt i8 %417, 0
  br i1 %418, label %419, label %422

419:                                              ; preds = %412
  %420 = bitcast %"class.std::__1::basic_string.8"* %414 to i8**
  %421 = load i8*, i8** %420, align 8
  call void @_ZdlPv(i8* %421) #18
  br label %422

422:                                              ; preds = %419, %412
  %423 = icmp eq %"class.std::__1::basic_string.8"* %414, %406
  br i1 %423, label %424, label %412

424:                                              ; preds = %422
  %425 = load i8*, i8** %201, align 8
  br label %426

426:                                              ; preds = %424, %408
  %427 = phi i8* [ %425, %424 ], [ %409, %408 ]
  store %"class.std::__1::basic_string.8"* %406, %"class.std::__1::basic_string.8"** %13, align 8
  call void @_ZdlPv(i8* %427) #18
  %428 = load i64*, i64** %9, align 8
  br label %429

429:                                              ; preds = %402, %426
  %430 = phi i64* [ %404, %402 ], [ %428, %426 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %431 = icmp eq i64* %430, null
  br i1 %431, label %436, label %432

432:                                              ; preds = %429
  %433 = ptrtoint i64* %430 to i64
  %434 = bitcast i64** %10 to i64*
  store i64 %433, i64* %434, align 8
  %435 = bitcast i64* %430 to i8*
  call void @_ZdlPv(i8* %435) #18
  br label %436

436:                                              ; preds = %429, %432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util18GetStringFUTF16IntEii(%"class.std::__1::basic_string.8"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = sext i32 %2 to i64
  call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.8"* nonnull sret %4, i64 %6) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %4)
  %7 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #18
  br label %14

14:                                               ; preds = %3, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

declare void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.8"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util18GetStringFUTF16IntEil(%"class.std::__1::basic_string.8"* noalias sret, i32, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @_ZN4base12FormatNumberEl(%"class.std::__1::basic_string.8"* nonnull sret %4, i64 %2) #16
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* sret %0, i32 %1, %"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %4)
  %6 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #18
  br label %13

13:                                               ; preds = %3, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string.8"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %6 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %7 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %8 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %9 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %10 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %11 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16, !noalias !281
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #16, !alias.scope !281
  call void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* nonnull sret %4, %"class.ui::ResourceBundle"* %13, i32 %1) #16
  %14 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %4) #16
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* nonnull %4, i64 0, i64 1, i16 zeroext 8207) #16
  br label %19

19:                                               ; preds = %3, %15, %17
  %20 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %27 = select i1 %23, i16* %25, i16* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = bitcast %"class.base::i18n::internal::MessageArg"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ei(%"class.base::i18n::internal::MessageArg"* nonnull %5, i32 %2) #16
  %33 = bitcast %"class.base::i18n::internal::MessageArg"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #16
  %34 = bitcast %"class.base::i18n::internal::MessageArg"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #16
  %35 = bitcast %"class.base::i18n::internal::MessageArg"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #16
  %36 = bitcast %"class.base::i18n::internal::MessageArg"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #16
  %37 = bitcast %"class.base::i18n::internal::MessageArg"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %10) #16
  %38 = bitcast %"class.base::i18n::internal::MessageArg"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %11) #16
  call void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string.8"* sret %0, i16* %27, i64 %31, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %5, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %6, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %7, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %8, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %9, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %10, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %11) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  %39 = load i8, i8* %21, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %19
  %42 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %19, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret void
}

declare void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string.8"* sret, i16*, i64, %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8), %"class.base::i18n::internal::MessageArg"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base4i18n8internal10MessageArgC1Ei(%"class.base::i18n::internal::MessageArg"*, i32) unnamed_addr #3

declare void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util20GetPluralStringFUTF8Eii(%"class.std::__1::basic_string"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @_ZN9l10n_util21GetPluralStringFUTF16Eii(%"class.std::__1::basic_string.8"* nonnull sret %4, i32 %1, i32 %2)
  %6 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret %0, i16* %13, i64 %17) #16
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %3
  %21 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %3, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util30GetSingleOrMultipleStringUTF16Eib(%"class.std::__1::basic_string.8"* noalias sret, i32, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %6 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %7 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %8 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %9 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %10 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %11 = alloca %"class.base::i18n::internal::MessageArg", align 8
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16, !noalias !284
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #16, !alias.scope !284
  call void @_ZN2ui14ResourceBundle18GetLocalizedStringEi(%"class.std::__1::basic_string.8"* nonnull sret %4, %"class.ui::ResourceBundle"* %13, i32 %1) #16
  %14 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #16
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = call zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* nonnull dereferenceable(24) %4) #16
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = call dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"* nonnull %4, i64 0, i64 1, i16 zeroext 8207) #16
  br label %19

19:                                               ; preds = %3, %15, %17
  %20 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %27 = select i1 %23, i16* %25, i16* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = bitcast %"class.base::i18n::internal::MessageArg"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  %33 = select i1 %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)
  call void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"* nonnull %5, i8* %33) #16
  %34 = bitcast %"class.base::i18n::internal::MessageArg"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #16
  %35 = bitcast %"class.base::i18n::internal::MessageArg"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #16
  %36 = bitcast %"class.base::i18n::internal::MessageArg"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #16
  %37 = bitcast %"class.base::i18n::internal::MessageArg"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #16
  %38 = bitcast %"class.base::i18n::internal::MessageArg"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %10) #16
  %39 = bitcast %"class.base::i18n::internal::MessageArg"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  call void @_ZN4base4i18n8internal10MessageArgC1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %11) #16
  call void @_ZN4base4i18n16MessageFormatter22FormatWithNumberedArgsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS0_8internal10MessageArgESA_SA_SA_SA_SA_SA_(%"class.std::__1::basic_string.8"* sret %0, i16* %27, i64 %31, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %5, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %6, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %7, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %8, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %9, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %10, %"class.base::i18n::internal::MessageArg"* nonnull dereferenceable(8) %11) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN4base4i18n8internal10MessageArgD1Ev(%"class.base::i18n::internal::MessageArg"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  %40 = load i8, i8* %21, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %19
  %43 = bitcast %"class.std::__1::basic_string.8"* %4 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %19, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret void
}

declare void @_ZN4base4i18n8internal10MessageArgC1EPKc(%"class.base::i18n::internal::MessageArg"*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util13SortStrings16ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorINS1_IDsNS2_IDsEENS4_IDsEEEENS4_ISC_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.72"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %1, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.8"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.72"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  tail call void @_ZN9l10n_util23SortVectorWithStringKeyINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvRKNS2_IcNS3_IcEENS5_IcEEEEPNS1_6vectorIT_NS5_ISE_EEEEmmb(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::vector.72"* %1, i64 0, i64 %9, i1 zeroext false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9l10n_util22GetAvailableICULocalesEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %298, label %4

4:                                                ; preds = %0
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 0)) #16
  br i1 %5, label %6, label %296

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #16
  %7 = tail call i32 @uloc_countAvailable_69() #16
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %295

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  br label %16

16:                                               ; preds = %292, %9
  %17 = phi i32 [ 0, %9 ], [ %293, %292 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #16
  %18 = call i8* @uloc_getAvailable_69(i32 %17) #16
  %19 = call i64 @strlen(i8* %18) #16
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #17
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = call i8* @_Znwm(i64 %27) #18
  store i8* %28, i8** %11, align 8
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %13, align 8
  store i64 %19, i64* %12, align 8
  br label %33

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i8
  store i8 %31, i8* %15, align 1
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30, %25
  %34 = phi i8* [ %28, %25 ], [ %10, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %18, i64 %19, i1 false) #16
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi i8* [ %10, %30 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %19
  store i8 0, i8* %37, align 1
  %38 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_115IsDuplicateNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #16
  br i1 %38, label %287, label %39

39:                                               ; preds = %35
  %40 = call zeroext i1 @_ZN9l10n_util22IsLocaleNameTranslatedEPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #16
  br i1 %40, label %41, label %287

41:                                               ; preds = %39
  %42 = load i8, i8* %15, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %11, align 8
  %45 = load i64, i64* %12, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i8* %44, i8* %10
  %48 = select i1 %43, i64 %45, i64 %46
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %159, label %51

51:                                               ; preds = %41
  %52 = icmp ult i64 %48, 16
  br i1 %52, label %144, label %53

53:                                               ; preds = %51
  %54 = and i64 %48, -16
  %55 = getelementptr i8, i8* %47, i64 %54
  br label %56

56:                                               ; preds = %139, %53
  %57 = phi i64 [ 0, %53 ], [ %140, %139 ]
  %58 = getelementptr i8, i8* %47, i64 %57
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1
  %61 = icmp eq <16 x i8> %60, <i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95, i8 95>
  %62 = extractelement <16 x i1> %61, i32 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %56
  store i8 45, i8* %58, align 1
  br label %64

64:                                               ; preds = %63, %56
  %65 = extractelement <16 x i1> %61, i32 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = or i64 %57, 1
  %68 = getelementptr i8, i8* %47, i64 %67
  store i8 45, i8* %68, align 1
  br label %69

69:                                               ; preds = %66, %64
  %70 = extractelement <16 x i1> %61, i32 2
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = or i64 %57, 2
  %73 = getelementptr i8, i8* %47, i64 %72
  store i8 45, i8* %73, align 1
  br label %74

74:                                               ; preds = %71, %69
  %75 = extractelement <16 x i1> %61, i32 3
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = or i64 %57, 3
  %78 = getelementptr i8, i8* %47, i64 %77
  store i8 45, i8* %78, align 1
  br label %79

79:                                               ; preds = %76, %74
  %80 = extractelement <16 x i1> %61, i32 4
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = or i64 %57, 4
  %83 = getelementptr i8, i8* %47, i64 %82
  store i8 45, i8* %83, align 1
  br label %84

84:                                               ; preds = %81, %79
  %85 = extractelement <16 x i1> %61, i32 5
  br i1 %85, label %86, label %89

86:                                               ; preds = %84
  %87 = or i64 %57, 5
  %88 = getelementptr i8, i8* %47, i64 %87
  store i8 45, i8* %88, align 1
  br label %89

89:                                               ; preds = %86, %84
  %90 = extractelement <16 x i1> %61, i32 6
  br i1 %90, label %91, label %94

91:                                               ; preds = %89
  %92 = or i64 %57, 6
  %93 = getelementptr i8, i8* %47, i64 %92
  store i8 45, i8* %93, align 1
  br label %94

94:                                               ; preds = %91, %89
  %95 = extractelement <16 x i1> %61, i32 7
  br i1 %95, label %96, label %99

96:                                               ; preds = %94
  %97 = or i64 %57, 7
  %98 = getelementptr i8, i8* %47, i64 %97
  store i8 45, i8* %98, align 1
  br label %99

99:                                               ; preds = %96, %94
  %100 = extractelement <16 x i1> %61, i32 8
  br i1 %100, label %101, label %104

101:                                              ; preds = %99
  %102 = or i64 %57, 8
  %103 = getelementptr i8, i8* %47, i64 %102
  store i8 45, i8* %103, align 1
  br label %104

104:                                              ; preds = %101, %99
  %105 = extractelement <16 x i1> %61, i32 9
  br i1 %105, label %106, label %109

106:                                              ; preds = %104
  %107 = or i64 %57, 9
  %108 = getelementptr i8, i8* %47, i64 %107
  store i8 45, i8* %108, align 1
  br label %109

109:                                              ; preds = %106, %104
  %110 = extractelement <16 x i1> %61, i32 10
  br i1 %110, label %111, label %114

111:                                              ; preds = %109
  %112 = or i64 %57, 10
  %113 = getelementptr i8, i8* %47, i64 %112
  store i8 45, i8* %113, align 1
  br label %114

114:                                              ; preds = %111, %109
  %115 = extractelement <16 x i1> %61, i32 11
  br i1 %115, label %116, label %119

116:                                              ; preds = %114
  %117 = or i64 %57, 11
  %118 = getelementptr i8, i8* %47, i64 %117
  store i8 45, i8* %118, align 1
  br label %119

119:                                              ; preds = %116, %114
  %120 = extractelement <16 x i1> %61, i32 12
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = or i64 %57, 12
  %123 = getelementptr i8, i8* %47, i64 %122
  store i8 45, i8* %123, align 1
  br label %124

124:                                              ; preds = %121, %119
  %125 = extractelement <16 x i1> %61, i32 13
  br i1 %125, label %126, label %129

126:                                              ; preds = %124
  %127 = or i64 %57, 13
  %128 = getelementptr i8, i8* %47, i64 %127
  store i8 45, i8* %128, align 1
  br label %129

129:                                              ; preds = %126, %124
  %130 = extractelement <16 x i1> %61, i32 14
  br i1 %130, label %131, label %134

131:                                              ; preds = %129
  %132 = or i64 %57, 14
  %133 = getelementptr i8, i8* %47, i64 %132
  store i8 45, i8* %133, align 1
  br label %134

134:                                              ; preds = %131, %129
  %135 = extractelement <16 x i1> %61, i32 15
  br i1 %135, label %136, label %139

136:                                              ; preds = %134
  %137 = or i64 %57, 15
  %138 = getelementptr i8, i8* %47, i64 %137
  store i8 45, i8* %138, align 1
  br label %139

139:                                              ; preds = %136, %134
  %140 = add i64 %57, 16
  %141 = icmp eq i64 %140, %54
  br i1 %141, label %142, label %56, !llvm.loop !287

142:                                              ; preds = %139
  %143 = icmp eq i64 %48, %54
  br i1 %143, label %154, label %144

144:                                              ; preds = %142, %51
  %145 = phi i8* [ %47, %51 ], [ %55, %142 ]
  br label %146

146:                                              ; preds = %144, %151
  %147 = phi i8* [ %152, %151 ], [ %145, %144 ]
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 95
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  store i8 45, i8* %147, align 1
  br label %151

151:                                              ; preds = %150, %146
  %152 = getelementptr inbounds i8, i8* %147, i64 1
  %153 = icmp eq i8* %152, %49
  br i1 %153, label %154, label %146, !llvm.loop !288

154:                                              ; preds = %151, %142
  %155 = load i8, i8* %15, align 1
  %156 = load i8*, i8** %11, align 8
  %157 = load i64, i64* %12, align 8
  %158 = zext i8 %155 to i64
  br label %159

159:                                              ; preds = %154, %41
  %160 = phi i64 [ %158, %154 ], [ %46, %41 ]
  %161 = phi i64 [ %157, %154 ], [ %45, %41 ]
  %162 = phi i8* [ %156, %154 ], [ %44, %41 ]
  %163 = phi i8 [ %155, %154 ], [ %42, %41 ]
  %164 = icmp slt i8 %163, 0
  %165 = select i1 %164, i8* %162, i8* %10
  %166 = select i1 %164, i64 %161, i64 %160
  %167 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %165, i64 %166, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i64 0, i64 0), i64 7) #16
  %168 = load i8, i8* %15, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %167, label %170, label %176

170:                                              ; preds = %159
  br i1 %169, label %171, label %173

171:                                              ; preds = %170
  store i64 5, i64* %12, align 8
  %172 = load i8*, i8** %11, align 8
  br label %174

173:                                              ; preds = %170
  store i8 5, i8* %15, align 1
  br label %174

174:                                              ; preds = %173, %171
  %175 = phi i8* [ %172, %171 ], [ %10, %173 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %175, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 5, i1 false) #16
  br label %191

176:                                              ; preds = %159
  %177 = load i8*, i8** %11, align 8
  %178 = select i1 %169, i8* %177, i8* %10
  %179 = load i64, i64* %12, align 8
  %180 = zext i8 %168 to i64
  %181 = select i1 %169, i64 %179, i64 %180
  %182 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %178, i64 %181, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.194, i64 0, i64 0), i64 7) #16
  br i1 %182, label %183, label %194

183:                                              ; preds = %176
  %184 = load i8, i8* %15, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  store i64 5, i64* %12, align 8
  %187 = load i8*, i8** %11, align 8
  br label %189

188:                                              ; preds = %183
  store i8 5, i8* %15, align 1
  br label %189

189:                                              ; preds = %188, %186
  %190 = phi i8* [ %187, %186 ], [ %10, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i64 5, i1 false) #16
  br label %191

191:                                              ; preds = %174, %189
  %192 = phi i8* [ %190, %189 ], [ %175, %174 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 5
  store i8 0, i8* %193, align 1
  br label %194

194:                                              ; preds = %191, %176
  %195 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 8) to %"class.std::__1::basic_string"**), align 8
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 16) to %"class.std::__1::basic_string"**), align 8
  %197 = icmp eq %"class.std::__1::basic_string"* %195, %196
  %198 = ptrtoint %"class.std::__1::basic_string"* %196 to i64
  br i1 %197, label %210, label %199

199:                                              ; preds = %194
  %200 = load i8, i8* %15, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %199
  %203 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* nonnull align 8 %10, i64 24, i1 false) #16
  br label %207

204:                                              ; preds = %199
  %205 = load i8*, i8** %11, align 8
  %206 = load i64, i64* %12, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %195, i8* %205, i64 %206) #16
  br label %207

207:                                              ; preds = %204, %202
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 1
  %209 = ptrtoint %"class.std::__1::basic_string"* %208 to i64
  store i64 %209, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 8) to i64*), align 8
  br label %287

210:                                              ; preds = %194
  %211 = ptrtoint %"class.std::__1::basic_string"* %195 to i64
  %212 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to i64*), align 8
  %213 = sub i64 %211, %212
  %214 = sdiv exact i64 %213, 24
  %215 = add nsw i64 %214, 1
  %216 = icmp ugt i64 %215, 768614336404564650
  br i1 %216, label %217, label %218

217:                                              ; preds = %210
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to %"class.std::__1::__vector_base_common"*)) #17
  unreachable

218:                                              ; preds = %210
  %219 = sub i64 %198, %212
  %220 = sdiv exact i64 %219, 24
  %221 = icmp ult i64 %220, 384307168202282325
  br i1 %221, label %222, label %227

222:                                              ; preds = %218
  %223 = shl nsw i64 %220, 1
  %224 = icmp ult i64 %223, %215
  %225 = select i1 %224, i64 %215, i64 %223
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %232, label %227

227:                                              ; preds = %222, %218
  %228 = phi i64 [ %225, %222 ], [ 768614336404564650, %218 ]
  %229 = mul i64 %228, 24
  %230 = call i8* @_Znwm(i64 %229) #18
  %231 = bitcast i8* %230 to %"class.std::__1::basic_string"*
  br label %232

232:                                              ; preds = %227, %222
  %233 = phi i64 [ %228, %227 ], [ 0, %222 ]
  %234 = phi %"class.std::__1::basic_string"* [ %231, %227 ], [ null, %222 ]
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 %214
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 %233
  %237 = ptrtoint %"class.std::__1::basic_string"* %236 to i64
  %238 = load i8, i8* %15, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %232
  %241 = bitcast %"class.std::__1::basic_string"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* nonnull align 8 %10, i64 24, i1 false) #16
  br label %245

242:                                              ; preds = %232
  %243 = load i8*, i8** %11, align 8
  %244 = load i64, i64* %12, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %235, i8* %243, i64 %244) #16
  br label %245

245:                                              ; preds = %242, %240
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %235, i64 1
  %247 = ptrtoint %"class.std::__1::basic_string"* %246 to i64
  %248 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to %"class.std::__1::basic_string"**), align 8
  %249 = ptrtoint %"class.std::__1::basic_string"* %248 to i64
  %250 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 8) to %"class.std::__1::basic_string"**), align 8
  %251 = icmp eq %"class.std::__1::basic_string"* %250, %248
  br i1 %251, label %263, label %252

252:                                              ; preds = %245, %252
  %253 = phi %"class.std::__1::basic_string"* [ %255, %252 ], [ %235, %245 ]
  %254 = phi %"class.std::__1::basic_string"* [ %256, %252 ], [ %250, %245 ]
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %253, i64 -1
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %254, i64 -1
  %257 = bitcast %"class.std::__1::basic_string"* %255 to i8*
  %258 = bitcast %"class.std::__1::basic_string"* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 24, i1 false) #16
  %259 = icmp eq %"class.std::__1::basic_string"* %256, %248
  br i1 %259, label %260, label %252

260:                                              ; preds = %252
  %261 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to i64*), align 8
  %262 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 8) to i64*), align 8
  br label %263

263:                                              ; preds = %260, %245
  %264 = phi i64 [ %262, %260 ], [ %249, %245 ]
  %265 = phi %"class.std::__1::basic_string"* [ %255, %260 ], [ %235, %245 ]
  %266 = phi i64 [ %261, %260 ], [ %249, %245 ]
  %267 = ptrtoint %"class.std::__1::basic_string"* %265 to i64
  store i64 %267, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to i64*), align 8
  store i64 %247, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 8) to i64*), align 8
  store i64 %237, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 16) to i64*), align 8
  %268 = inttoptr i64 %266 to %"class.std::__1::basic_string"*
  %269 = inttoptr i64 %264 to %"class.std::__1::basic_string"*
  %270 = icmp eq %"class.std::__1::basic_string"* %269, %268
  br i1 %270, label %283, label %271

271:                                              ; preds = %263, %281
  %272 = phi %"class.std::__1::basic_string"* [ %273, %281 ], [ %269, %263 ]
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 -1
  %274 = bitcast %"class.std::__1::basic_string"* %273 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %275 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %274, i64 0, i32 1, i32 0
  %276 = load i8, i8* %275, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %271
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %273, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %280) #18
  br label %281

281:                                              ; preds = %278, %271
  %282 = icmp eq %"class.std::__1::basic_string"* %273, %268
  br i1 %282, label %283, label %271

283:                                              ; preds = %281, %263
  %284 = icmp eq i64 %266, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = inttoptr i64 %266 to i8*
  call void @_ZdlPv(i8* %286) #18
  br label %287

287:                                              ; preds = %285, %283, %207, %39, %35
  %288 = load i8, i8* %15, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  %291 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %291) #18
  br label %292

292:                                              ; preds = %290, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %293 = add nuw nsw i32 %17, 1
  %294 = icmp eq i32 %293, %7
  br i1 %294, label %295, label %16

295:                                              ; preds = %292, %6
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN12_GLOBAL__N_122AvailableLocalesTraitsEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE to i8*)) #16
  br label %298

296:                                              ; preds = %4
  %297 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 0) acquire, align 8
  br label %298

298:                                              ; preds = %0, %295, %296
  %299 = phi i64 [ %2, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_119g_available_localesE, i64 0, i32 1, i64 0) to i64), %295 ], [ %297, %296 ]
  %300 = inttoptr i64 %299 to %"class.std::__1::vector"*
  ret %"class.std::__1::vector"* %300
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9l10n_util21GetLocalesWithStringsEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::allocator", align 1
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN9l10n_util21GetLocalesWithStringsEvE17available_locales to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %155, !prof !289

8:                                                ; preds = %0
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9l10n_util21GetLocalesWithStringsEvE17available_locales) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %155, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 24, i1 false) #16, !alias.scope !290
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %27 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %1, i64 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  br label %33

33:                                               ; preds = %147, %11
  %34 = phi i8** [ getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 0, i64 0), %11 ], [ %148, %147 ]
  %35 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16, !noalias !290
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16, !noalias !290
  %36 = call i64 @strlen(i8* %35) #16
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #17
  unreachable

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = call i8* @_Znwm(i64 %44) #18
  store i8* %45, i8** %16, align 8, !noalias !290
  %46 = or i64 %44, -9223372036854775808
  store i64 %46, i64* %18, align 8, !noalias !290
  store i64 %36, i64* %17, align 8, !noalias !290
  br label %50

47:                                               ; preds = %40
  %48 = trunc i64 %36 to i8
  store i8 %48, i8* %20, align 1, !noalias !290
  %49 = icmp eq i64 %36, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47, %42
  %51 = phi i8* [ %45, %42 ], [ %15, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %35, i64 %36, i1 false) #16
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %15, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %36
  store i8 0, i8* %54, align 1, !noalias !290
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #16, !noalias !290
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #16, !noalias !290
  %55 = call zeroext i1 @_ZN9l10n_util21CheckAndResolveLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_b(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull %3, i1 zeroext false) #16
  br i1 %55, label %56, label %137

56:                                               ; preds = %52
  %57 = load i8, i8* %25, align 1, !noalias !290
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %23, align 8, !noalias !290
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = load i8, i8* %20, align 1, !noalias !290
  %63 = icmp slt i8 %62, 0
  %64 = load i64, i64* %17, align 8, !noalias !290
  %65 = zext i8 %62 to i64
  %66 = select i1 %63, i64 %64, i64 %65
  %67 = icmp eq i64 %61, %66
  br i1 %67, label %68, label %96

68:                                               ; preds = %56
  %69 = load i8*, i8** %22, align 8, !noalias !290
  %70 = select i1 %58, i8* %69, i8* %21
  %71 = load i8*, i8** %16, align 8, !noalias !290
  %72 = select i1 %63, i8* %71, i8* %15
  %73 = icmp eq i64 %61, 0
  br i1 %58, label %80, label %74

74:                                               ; preds = %68
  br i1 %73, label %111, label %75

75:                                               ; preds = %74
  %76 = ptrtoint i8* %69 to i64
  %77 = trunc i64 %76 to i8
  %78 = load i8, i8* %72, align 1
  %79 = icmp eq i8 %78, %77
  br i1 %79, label %81, label %96

80:                                               ; preds = %68
  br i1 %73, label %111, label %93

81:                                               ; preds = %75, %88
  %82 = phi i64 [ %85, %88 ], [ %60, %75 ]
  %83 = phi i8* [ %86, %88 ], [ %21, %75 ]
  %84 = phi i8* [ %89, %88 ], [ %72, %75 ]
  %85 = add i64 %82, -1
  %86 = getelementptr inbounds i8, i8* %83, i64 1
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds i8, i8* %84, i64 1
  %90 = load i8, i8* %86, align 1, !noalias !290
  %91 = load i8, i8* %89, align 1
  %92 = icmp eq i8 %90, %91
  br i1 %92, label %81, label %96

93:                                               ; preds = %80
  %94 = call i32 @bcmp(i8* %70, i8* %72, i64 %61) #16
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %111, label %96

96:                                               ; preds = %88, %93, %75, %56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16, !noalias !290
  %97 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %2, i8 signext 45, i64 0) #16, !noalias !293
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #16, !noalias !296
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 0, i64 %97, %"class.std::__1::allocator"* nonnull dereferenceable(1) %1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #16, !noalias !296
  %98 = load i8, i8* %29, align 1, !noalias !290
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %30, align 8, !noalias !290
  %101 = select i1 %99, i8* %100, i8* %26
  %102 = load i64, i64* %31, align 8, !noalias !290
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %101, i64 %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #16
  %106 = load i8, i8* %29, align 1, !noalias !290
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %96
  %109 = load i8*, i8** %30, align 8, !noalias !290
  call void @_ZdlPv(i8* %109) #18
  br label %110

110:                                              ; preds = %108, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16, !noalias !290
  br i1 %105, label %137, label %111

111:                                              ; preds = %81, %110, %93, %80, %74
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8, !alias.scope !290
  %113 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 16, !alias.scope !290
  %114 = icmp eq %"class.std::__1::basic_string"* %112, %113
  br i1 %114, label %126, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %20, align 1, !noalias !290
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  %119 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %15, i64 24, i1 false) #16
  br label %123

120:                                              ; preds = %115
  %121 = load i8*, i8** %16, align 8, !noalias !290
  %122 = load i64, i64* %17, align 8, !noalias !290
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %112, i8* %121, i64 %122) #16
  br label %123

123:                                              ; preds = %120, %118
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 1
  %125 = ptrtoint %"class.std::__1::basic_string"* %124 to i64
  store i64 %125, i64* %32, align 8, !alias.scope !290
  br label %127

126:                                              ; preds = %111
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  br label %127

127:                                              ; preds = %126, %123
  %128 = load i8, i8* %25, align 1, !noalias !290
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load i8*, i8** %22, align 8, !noalias !290
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %130, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16, !noalias !290
  %133 = load i8, i8* %20, align 1, !noalias !290
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  %136 = load i8*, i8** %16, align 8, !noalias !290
  call void @_ZdlPv(i8* %136) #18
  br label %147

137:                                              ; preds = %110, %52
  %138 = load i8, i8* %25, align 1, !noalias !290
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %137
  %141 = load i8*, i8** %22, align 8, !noalias !290
  call void @_ZdlPv(i8* %141) #18
  br label %142

142:                                              ; preds = %140, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16, !noalias !290
  %143 = load i8, i8* %20, align 1, !noalias !290
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = load i8*, i8** %16, align 8, !noalias !290
  call void @_ZdlPv(i8* %146) #18
  br label %147

147:                                              ; preds = %142, %145, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16, !noalias !290
  %148 = getelementptr inbounds i8*, i8** %34, i64 1
  %149 = icmp eq i8** %148, getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 1, i64 0)
  br i1 %149, label %150, label %33

150:                                              ; preds = %147
  %151 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 16
  store <2 x i64> %152, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN9l10n_util21GetLocalesWithStringsEvE17available_locales to <2 x i64>*), align 16
  %153 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  %154 = load i64, i64* %153, align 16
  store i64 %154, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN9l10n_util21GetLocalesWithStringsEvE17available_locales, i64 0, i32 0, i64 16) to i64*), align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN9l10n_util21GetLocalesWithStringsEvE17available_locales) #16
  br label %155

155:                                              ; preds = %8, %150, %0
  ret %"class.std::__1::vector"* bitcast (%"class.base::NoDestructor"* @_ZZN9l10n_util21GetLocalesWithStringsEvE17available_locales to %"class.std::__1::vector"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util27GetAcceptLanguagesForLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  br label %14

13:                                               ; preds = %51
  ret void

14:                                               ; preds = %2, %51
  %15 = phi i8** [ getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 0, i64 0), %2 ], [ %52, %51 ]
  %16 = load i8*, i8** %15, align 8
  %17 = call zeroext i1 @_ZN9l10n_util22IsLocaleNameTranslatedEPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %16, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  br i1 %17, label %18, label %51

18:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %19 = call i64 @strlen(i8* %16) #16
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #17
  unreachable

23:                                               ; preds = %18
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = call i8* @_Znwm(i64 %27) #18
  store i8* %28, i8** %5, align 8
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %6, align 8
  store i64 %19, i64* %7, align 8
  br label %33

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i8
  store i8 %31, i8* %9, align 1
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30, %25
  %34 = phi i8* [ %28, %25 ], [ %4, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %16, i64 %19, i1 false) #16
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i8* [ %4, %30 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %19
  store i8 0, i8* %37, align 1
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %40 = icmp ult %"class.std::__1::basic_string"* %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %4, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #16
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %44 = ptrtoint %"class.std::__1::basic_string"* %43 to i64
  store i64 %44, i64* %12, align 8
  br label %50

45:                                               ; preds = %35
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #16
  %46 = load i8, i8* %9, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %49) #18
  br label %50

50:                                               ; preds = %41, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  br label %51

51:                                               ; preds = %14, %50
  %52 = getelementptr inbounds i8*, i8** %15, i64 1
  %53 = icmp eq i8** %52, getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 1, i64 0)
  br i1 %53, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9l10n_util18GetAcceptLanguagesEPNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  br label %13

12:                                               ; preds = %47
  ret void

13:                                               ; preds = %1, %47
  %14 = phi i8** [ getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 0, i64 0), %1 ], [ %48, %47 ]
  %15 = load i8*, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %16 = call i64 @strlen(i8* %15) #16
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %19) #17
  unreachable

20:                                               ; preds = %13
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = call i8* @_Znwm(i64 %24) #18
  store i8* %25, i8** %4, align 8
  %26 = or i64 %24, -9223372036854775808
  store i64 %26, i64* %5, align 8
  store i64 %16, i64* %6, align 8
  br label %30

27:                                               ; preds = %20
  %28 = trunc i64 %16 to i8
  store i8 %28, i8* %8, align 1
  %29 = icmp eq i64 %16, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27, %22
  %31 = phi i8* [ %25, %22 ], [ %3, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %15, i64 %16, i1 false) #16
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i8* [ %3, %27 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %16
  store i8 0, i8* %34, align 1
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %37 = icmp ult %"class.std::__1::basic_string"* %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %3, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #16
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %41 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  store i64 %41, i64* %11, align 8
  br label %47

42:                                               ; preds = %32
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  %43 = load i8, i8* %8, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %38, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  %48 = getelementptr inbounds i8*, i8** %14, i64 1
  %49 = icmp eq i8** %48, getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 1, i64 0)
  br i1 %49, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9l10n_util18IsLanguageAcceptedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %8

8:                                                ; preds = %2, %27
  %9 = phi i8** [ getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 0, i64 0), %2 ], [ %28, %27 ]
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i64 @strlen(i8* %10) #16
  %12 = load i8, i8* %4, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i64, i64* %5, align 8
  %15 = zext i8 %12 to i64
  %16 = select i1 %13, i64 %14, i64 %15
  %17 = icmp eq i64 %11, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %8
  %19 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* %10, i64 %11) #16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = load i8, i8* %4, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i8*, i8** %6, align 8
  %25 = select i1 %23, i8* %24, i8* %7
  %26 = tail call zeroext i1 @_ZN9l10n_util22IsLocaleNameTranslatedEPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %25, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  br i1 %26, label %30, label %27

27:                                               ; preds = %8, %18, %21
  %28 = getelementptr inbounds i8*, i8** %9, i64 1
  %29 = icmp eq i8** %28, getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 1, i64 0)
  br i1 %29, label %30, label %8

30:                                               ; preds = %27, %21
  %31 = phi i1 [ true, %21 ], [ false, %27 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9l10n_util33GetLocalizedContentsWidthInPixelsEi(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 0, i32* %2, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @_ZN9l10n_util13GetStringUTF8Ei(%"class.std::__1::basic_string"* nonnull sret %3, i32 %0)
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = select i1 %9, i8* %11, i8* %5
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i64 %14, i64 %15
  %17 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %12, i64 %16, i32* nonnull %2) #16
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %1
  %21 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  %23 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i32 %23
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8** @_ZN9l10n_util31GetAcceptLanguageListForTestingEv() local_unnamed_addr #5 {
  ret i8** getelementptr inbounds ([169 x i8*], [169 x i8*]* @_ZN12_GLOBAL__N_119kAcceptLanguageListE, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN9l10n_util35GetAcceptLanguageListSizeForTestingEv() local_unnamed_addr #5 {
  ret i64 169
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8** @_ZN9l10n_util28GetPlatformLocalesForTestingEv() local_unnamed_addr #5 {
  ret i8** getelementptr inbounds ([55 x i8*], [55 x i8*]* @_ZN12_GLOBAL__N_116kPlatformLocalesE, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN9l10n_util32GetPlatformLocalesSizeForTestingEv() local_unnamed_addr #5 {
  ret i64 55
}

declare zeroext i1 @_ZN4base4i18n15IsFilenameLegalERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.8"* sret, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN2ui14ResourceBundle19LocaleDataPakExistsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.8"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.8"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.8"*, i64, i64, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string.8"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #17
  unreachable

19:                                               ; preds = %14
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %456, label %21

21:                                               ; preds = %19
  br i1 %8, label %22, label %27

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 9223372036854775807
  %26 = add nsw i64 %25, -1
  br label %27

27:                                               ; preds = %21, %22
  %28 = phi i64 [ %26, %22 ], [ 10, %21 ]
  %29 = sub i64 %28, %15
  %30 = icmp ult i64 %29, %2
  br i1 %30, label %353, label %31

31:                                               ; preds = %27
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %358, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = getelementptr inbounds i16, i16* %42, i64 %2
  %44 = icmp slt i64 %2, 0
  br i1 %44, label %45, label %189

45:                                               ; preds = %41
  %46 = icmp ult i64 %39, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %45
  %48 = add i64 %15, %2
  %49 = getelementptr i16, i16* %38, i64 %48
  %50 = getelementptr i16, i16* %38, i64 %15
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %42, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %39, -16
  %56 = sub i64 %39, %55
  %57 = getelementptr i16, i16* %42, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !297
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !297
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !300, !noalias !297
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !300, !noalias !297
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !297
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !297
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !300, !noalias !297
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !300, !noalias !297
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !297
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !297
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !300, !noalias !297
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !300, !noalias !297
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !297
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !297
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !300, !noalias !297
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !300, !noalias !297
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !302

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !297
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !297
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !300, !noalias !297
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !300, !noalias !297
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !303

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %39, %55
  br i1 %135, label %358, label %136

136:                                              ; preds = %134, %47, %45
  %137 = phi i64 [ %39, %47 ], [ %39, %45 ], [ %56, %134 ]
  %138 = phi i16* [ %42, %47 ], [ %42, %45 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %45 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !304

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %358, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %358, label %159, !llvm.loop !305

189:                                              ; preds = %41
  %190 = getelementptr inbounds i16, i16* %38, i64 %15
  %191 = getelementptr inbounds i16, i16* %43, i64 %39
  %192 = icmp ult i64 %39, 16
  br i1 %192, label %300, label %193

193:                                              ; preds = %189
  %194 = xor i64 %1, -1
  %195 = add i64 %15, %194
  %196 = add i64 %15, %2
  %197 = add i64 %196, -1
  %198 = getelementptr i16, i16* %38, i64 %197
  %199 = ptrtoint i16* %198 to i64
  %200 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %195, i64 2)
  %201 = extractvalue { i64, i1 } %200, 0
  %202 = extractvalue { i64, i1 } %200, 1
  %203 = icmp ugt i64 %201, %199
  %204 = or i1 %203, %202
  %205 = add i64 %15, -1
  %206 = getelementptr i16, i16* %38, i64 %205
  %207 = ptrtoint i16* %206 to i64
  %208 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %195, i64 2)
  %209 = extractvalue { i64, i1 } %208, 0
  %210 = extractvalue { i64, i1 } %208, 1
  %211 = icmp ugt i64 %209, %207
  %212 = or i1 %211, %210
  %213 = or i1 %204, %212
  br i1 %213, label %300, label %214

214:                                              ; preds = %193
  %215 = add i64 %2, %1
  %216 = getelementptr i16, i16* %38, i64 %215
  %217 = icmp ult i16* %216, %190
  %218 = icmp ult i16* %42, %191
  %219 = and i1 %217, %218
  br i1 %219, label %300, label %220

220:                                              ; preds = %214
  %221 = and i64 %39, -16
  %222 = sub i64 %39, %221
  %223 = sub i64 0, %221
  %224 = getelementptr i16, i16* %190, i64 %223
  %225 = sub i64 0, %221
  %226 = getelementptr i16, i16* %191, i64 %225
  %227 = add i64 %221, -16
  %228 = lshr exact i64 %227, 4
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %227, 0
  br i1 %231, label %278, label %232

232:                                              ; preds = %220
  %233 = sub nuw nsw i64 %229, %230
  %234 = getelementptr i16, i16* %190, i64 -1
  %235 = getelementptr i16, i16* %191, i64 -1
  %236 = getelementptr i16, i16* %190, i64 -1
  %237 = getelementptr i16, i16* %191, i64 -1
  br label %238

238:                                              ; preds = %238, %232
  %239 = phi i64 [ 0, %232 ], [ %273, %238 ]
  %240 = phi i64 [ %233, %232 ], [ %274, %238 ]
  %241 = sub i64 0, %239
  %242 = sub i64 0, %239
  %243 = getelementptr inbounds i16, i16* %235, i64 %242
  %244 = getelementptr inbounds i16, i16* %234, i64 %241
  %245 = getelementptr inbounds i16, i16* %244, i64 -7
  %246 = bitcast i16* %245 to <8 x i16>*
  %247 = load <8 x i16>, <8 x i16>* %246, align 2, !alias.scope !306
  %248 = getelementptr inbounds i16, i16* %244, i64 -8
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !306
  %252 = getelementptr inbounds i16, i16* %243, i64 -7
  %253 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %253, align 2, !alias.scope !309, !noalias !306
  %254 = getelementptr inbounds i16, i16* %243, i64 -8
  %255 = getelementptr inbounds i16, i16* %254, i64 -7
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %256, align 2, !alias.scope !309, !noalias !306
  %257 = sub nuw nsw i64 -16, %239
  %258 = sub nuw nsw i64 -16, %239
  %259 = getelementptr inbounds i16, i16* %237, i64 %258
  %260 = getelementptr inbounds i16, i16* %236, i64 %257
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !306
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !306
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !309, !noalias !306
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !309, !noalias !306
  %273 = add i64 %239, 32
  %274 = add i64 %240, -2
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %238, !llvm.loop !311

276:                                              ; preds = %238
  %277 = sub nuw nsw i64 -32, %239
  br label %278

278:                                              ; preds = %276, %220
  %279 = phi i64 [ 0, %220 ], [ %277, %276 ]
  %280 = icmp eq i64 %230, 0
  br i1 %280, label %298, label %281

281:                                              ; preds = %278
  %282 = getelementptr i16, i16* %190, i64 -1
  %283 = getelementptr i16, i16* %191, i64 -1
  %284 = getelementptr inbounds i16, i16* %283, i64 %279
  %285 = getelementptr inbounds i16, i16* %282, i64 %279
  %286 = getelementptr inbounds i16, i16* %285, i64 -7
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !306
  %289 = getelementptr inbounds i16, i16* %285, i64 -8
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !306
  %293 = getelementptr inbounds i16, i16* %284, i64 -7
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %294, align 2, !alias.scope !309, !noalias !306
  %295 = getelementptr inbounds i16, i16* %284, i64 -8
  %296 = getelementptr inbounds i16, i16* %295, i64 -7
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %297, align 2, !alias.scope !309, !noalias !306
  br label %298

298:                                              ; preds = %278, %281
  %299 = icmp eq i64 %39, %221
  br i1 %299, label %358, label %300

300:                                              ; preds = %298, %214, %193, %189
  %301 = phi i64 [ %39, %214 ], [ %39, %193 ], [ %39, %189 ], [ %222, %298 ]
  %302 = phi i16* [ %190, %214 ], [ %190, %193 ], [ %190, %189 ], [ %224, %298 ]
  %303 = phi i16* [ %191, %214 ], [ %191, %193 ], [ %191, %189 ], [ %226, %298 ]
  %304 = add i64 %301, -1
  %305 = and i64 %301, 7
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %318, label %307

307:                                              ; preds = %300, %307
  %308 = phi i64 [ %315, %307 ], [ %301, %300 ]
  %309 = phi i16* [ %313, %307 ], [ %302, %300 ]
  %310 = phi i16* [ %312, %307 ], [ %303, %300 ]
  %311 = phi i64 [ %316, %307 ], [ %305, %300 ]
  %312 = getelementptr inbounds i16, i16* %310, i64 -1
  %313 = getelementptr inbounds i16, i16* %309, i64 -1
  %314 = load i16, i16* %313, align 2
  store i16 %314, i16* %312, align 2
  %315 = add i64 %308, -1
  %316 = add i64 %311, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %307, !llvm.loop !312

318:                                              ; preds = %307, %300
  %319 = phi i64 [ %301, %300 ], [ %315, %307 ]
  %320 = phi i16* [ %302, %300 ], [ %313, %307 ]
  %321 = phi i16* [ %303, %300 ], [ %312, %307 ]
  %322 = icmp ult i64 %304, 7
  br i1 %322, label %358, label %323

323:                                              ; preds = %318, %323
  %324 = phi i64 [ %351, %323 ], [ %319, %318 ]
  %325 = phi i16* [ %349, %323 ], [ %320, %318 ]
  %326 = phi i16* [ %348, %323 ], [ %321, %318 ]
  %327 = getelementptr inbounds i16, i16* %326, i64 -1
  %328 = getelementptr inbounds i16, i16* %325, i64 -1
  %329 = load i16, i16* %328, align 2
  store i16 %329, i16* %327, align 2
  %330 = getelementptr inbounds i16, i16* %326, i64 -2
  %331 = getelementptr inbounds i16, i16* %325, i64 -2
  %332 = load i16, i16* %331, align 2
  store i16 %332, i16* %330, align 2
  %333 = getelementptr inbounds i16, i16* %326, i64 -3
  %334 = getelementptr inbounds i16, i16* %325, i64 -3
  %335 = load i16, i16* %334, align 2
  store i16 %335, i16* %333, align 2
  %336 = getelementptr inbounds i16, i16* %326, i64 -4
  %337 = getelementptr inbounds i16, i16* %325, i64 -4
  %338 = load i16, i16* %337, align 2
  store i16 %338, i16* %336, align 2
  %339 = getelementptr inbounds i16, i16* %326, i64 -5
  %340 = getelementptr inbounds i16, i16* %325, i64 -5
  %341 = load i16, i16* %340, align 2
  store i16 %341, i16* %339, align 2
  %342 = getelementptr inbounds i16, i16* %326, i64 -6
  %343 = getelementptr inbounds i16, i16* %325, i64 -6
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %326, i64 -7
  %346 = getelementptr inbounds i16, i16* %325, i64 -7
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %326, i64 -8
  %349 = getelementptr inbounds i16, i16* %325, i64 -8
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %324, -8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %358, label %323, !llvm.loop !313

353:                                              ; preds = %27
  %354 = add i64 %15, %2
  %355 = sub i64 %354, %28
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.8"* %0, i64 %28, i64 %355, i64 %15, i64 %1, i64 0, i64 %2)
  %356 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i16*, i16** %356, align 8
  br label %358

358:                                              ; preds = %318, %323, %154, %159, %298, %134, %37, %353
  %359 = phi i16* [ %357, %353 ], [ %38, %37 ], [ %38, %134 ], [ %38, %298 ], [ %38, %159 ], [ %38, %154 ], [ %38, %323 ], [ %38, %318 ]
  %360 = getelementptr inbounds i16, i16* %359, i64 %1
  %361 = icmp ult i64 %2, 16
  br i1 %361, label %437, label %362

362:                                              ; preds = %358
  %363 = and i64 %2, -16
  %364 = sub i64 %2, %363
  %365 = getelementptr i16, i16* %360, i64 %363
  %366 = insertelement <8 x i16> undef, i16 %3, i32 0
  %367 = shufflevector <8 x i16> %366, <8 x i16> undef, <8 x i32> zeroinitializer
  %368 = insertelement <8 x i16> undef, i16 %3, i32 0
  %369 = shufflevector <8 x i16> %368, <8 x i16> undef, <8 x i32> zeroinitializer
  %370 = add i64 %363, -16
  %371 = lshr exact i64 %370, 4
  %372 = add nuw nsw i64 %371, 1
  %373 = and i64 %372, 7
  %374 = icmp ult i64 %370, 112
  br i1 %374, label %422, label %375

375:                                              ; preds = %362
  %376 = sub nsw i64 %372, %373
  br label %377

377:                                              ; preds = %377, %375
  %378 = phi i64 [ 0, %375 ], [ %419, %377 ]
  %379 = phi i64 [ %376, %375 ], [ %420, %377 ]
  %380 = getelementptr i16, i16* %360, i64 %378
  %381 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %381, align 2
  %382 = getelementptr i16, i16* %380, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %383, align 2
  %384 = or i64 %378, 16
  %385 = getelementptr i16, i16* %360, i64 %384
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %386, align 2
  %387 = getelementptr i16, i16* %385, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %388, align 2
  %389 = or i64 %378, 32
  %390 = getelementptr i16, i16* %360, i64 %389
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %391, align 2
  %392 = getelementptr i16, i16* %390, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %393, align 2
  %394 = or i64 %378, 48
  %395 = getelementptr i16, i16* %360, i64 %394
  %396 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %396, align 2
  %397 = getelementptr i16, i16* %395, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %398, align 2
  %399 = or i64 %378, 64
  %400 = getelementptr i16, i16* %360, i64 %399
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %401, align 2
  %402 = getelementptr i16, i16* %400, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %403, align 2
  %404 = or i64 %378, 80
  %405 = getelementptr i16, i16* %360, i64 %404
  %406 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %406, align 2
  %407 = getelementptr i16, i16* %405, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %408, align 2
  %409 = or i64 %378, 96
  %410 = getelementptr i16, i16* %360, i64 %409
  %411 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %411, align 2
  %412 = getelementptr i16, i16* %410, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %413, align 2
  %414 = or i64 %378, 112
  %415 = getelementptr i16, i16* %360, i64 %414
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %416, align 2
  %417 = getelementptr i16, i16* %415, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %418, align 2
  %419 = add i64 %378, 128
  %420 = add i64 %379, -8
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %377, !llvm.loop !314

422:                                              ; preds = %377, %362
  %423 = phi i64 [ 0, %362 ], [ %419, %377 ]
  %424 = icmp eq i64 %373, 0
  br i1 %424, label %435, label %425

425:                                              ; preds = %422, %425
  %426 = phi i64 [ %432, %425 ], [ %423, %422 ]
  %427 = phi i64 [ %433, %425 ], [ %373, %422 ]
  %428 = getelementptr i16, i16* %360, i64 %426
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %429, align 2
  %430 = getelementptr i16, i16* %428, i64 8
  %431 = bitcast i16* %430 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %431, align 2
  %432 = add i64 %426, 16
  %433 = add i64 %427, -1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %425, !llvm.loop !315

435:                                              ; preds = %425, %422
  %436 = icmp eq i64 %363, %2
  br i1 %436, label %446, label %437

437:                                              ; preds = %435, %358
  %438 = phi i64 [ %2, %358 ], [ %364, %435 ]
  %439 = phi i16* [ %360, %358 ], [ %365, %435 ]
  br label %440

440:                                              ; preds = %437, %440
  %441 = phi i64 [ %443, %440 ], [ %438, %437 ]
  %442 = phi i16* [ %444, %440 ], [ %439, %437 ]
  store i16 %3, i16* %442, align 2
  %443 = add i64 %441, -1
  %444 = getelementptr inbounds i16, i16* %442, i64 1
  %445 = icmp eq i64 %443, 0
  br i1 %445, label %446, label %440, !llvm.loop !316

446:                                              ; preds = %440, %435
  %447 = add i64 %15, %2
  %448 = load i8, i8* %6, align 1
  %449 = icmp slt i8 %448, 0
  br i1 %449, label %450, label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %447, i64* %451, align 8
  br label %454

452:                                              ; preds = %446
  %453 = trunc i64 %447 to i8
  store i8 %453, i8* %6, align 1
  br label %454

454:                                              ; preds = %450, %452
  %455 = getelementptr inbounds i16, i16* %359, i64 %447
  store i16 0, i16* %455, align 2
  br label %456

456:                                              ; preds = %19, %454
  ret %"class.std::__1::basic_string.8"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.8"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.8"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #17
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #17
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #18
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !317
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !317
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !320, !noalias !317
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !320, !noalias !317
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !317
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !317
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !320, !noalias !317
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !320, !noalias !317
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !317
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !317
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !320, !noalias !317
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !320, !noalias !317
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !317
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !317
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !320, !noalias !317
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !320, !noalias !317
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !322

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !317
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !317
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !320, !noalias !317
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !320, !noalias !317
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !323

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !324

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !325

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !326
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !326
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !329, !noalias !326
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !329, !noalias !326
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !326
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !326
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !329, !noalias !326
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !329, !noalias !326
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !326
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !326
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !329, !noalias !326
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !329, !noalias !326
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !326
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !326
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !329, !noalias !326
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !329, !noalias !326
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !331

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !326
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !326
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !329, !noalias !326
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !329, !noalias !326
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !332

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !333

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !334

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #18
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.8"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #16
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #16
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #16
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #18
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #16
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9l10n_util23SortVectorWithStringKeyINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEvRKNS2_IcNS3_IcEENS5_IcEEEEPNS1_6vectorIT_NS5_ISE_EEEEmmb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.72"*, i64, i64, i1 zeroext) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.l10n_util::StringComparator", align 8
  %7 = alloca %"class.l10n_util::StringComparator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.icu_69::Locale", align 8
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #16
  store i32 0, i32* %8, align 4
  %11 = bitcast %"class.icu_69::Locale"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 224, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %9, i8* %19, i8* null, i8* null, i8* null) #16
  %20 = call %"class.icu_69::Collator"* @_ZN6icu_698Collator14createInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %9, i32* nonnull dereferenceable(4) %8) #16
  %21 = ptrtoint %"class.icu_69::Collator"* %20 to i64
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %31, label %24

24:                                               ; preds = %5
  %25 = icmp eq %"class.icu_69::Collator"* %20, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.icu_69::Collator"* %20 to void (%"class.icu_69::Collator"*)***
  %28 = load void (%"class.icu_69::Collator"*)**, void (%"class.icu_69::Collator"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.icu_69::Collator"*)*, void (%"class.icu_69::Collator"*)** %28, i64 1
  %30 = load void (%"class.icu_69::Collator"*)*, void (%"class.icu_69::Collator"*)** %29, align 8
  call void %30(%"class.icu_69::Collator"* nonnull %20) #16
  br label %31

31:                                               ; preds = %26, %24, %5
  %32 = phi i64 [ %21, %5 ], [ 0, %24 ], [ 0, %26 ]
  %33 = inttoptr i64 %32 to %"class.icu_69::Collator"*
  %34 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %35, i64 %2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %35, i64 %3
  br i1 %4, label %38, label %60

38:                                               ; preds = %31
  %39 = bitcast %"class.l10n_util::StringComparator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = ptrtoint %"class.std::__1::basic_string.8"* %36 to i64
  %41 = ptrtoint %"class.std::__1::basic_string.8"* %37 to i64
  %42 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %6, i64 0, i32 0
  store %"class.icu_69::Collator"* %33, %"class.icu_69::Collator"** %42, align 8
  %43 = sub i64 %41, %40
  %44 = sdiv exact i64 %43, 24
  %45 = icmp sgt i64 %43, 0
  br i1 %45, label %46, label %57

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 384307168202282325
  %48 = select i1 %47, i64 %44, i64 384307168202282325
  br label %49

49:                                               ; preds = %54, %46
  %50 = phi i64 [ %55, %54 ], [ %48, %46 ]
  %51 = mul i64 %50, 24
  %52 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %51, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #16
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = lshr i64 %50, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %49

57:                                               ; preds = %54, %38
  call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %36, %"class.std::__1::basic_string.8"* %37, %"class.l10n_util::StringComparator"* nonnull dereferenceable(8) %6, i64 %44, %"class.std::__1::basic_string.8"* null, i64 0) #16
  br label %63

58:                                               ; preds = %49
  %59 = bitcast i8* %52 to %"class.std::__1::basic_string.8"*
  call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %36, %"class.std::__1::basic_string.8"* %37, %"class.l10n_util::StringComparator"* nonnull dereferenceable(8) %6, i64 %44, %"class.std::__1::basic_string.8"* nonnull %59, i64 %50) #16
  call void @_ZdlPv(i8* nonnull %52) #18
  br label %63

60:                                               ; preds = %31
  %61 = bitcast %"class.l10n_util::StringComparator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %7, i64 0, i32 0
  store %"class.icu_69::Collator"* %33, %"class.icu_69::Collator"** %62, align 8
  call void @_ZNSt3__16__sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"* %36, %"class.std::__1::basic_string.8"* %37, %"class.l10n_util::StringComparator"* nonnull dereferenceable(8) %7) #16
  br label %63

63:                                               ; preds = %58, %57, %60
  %64 = phi i8* [ %61, %60 ], [ %39, %57 ], [ %39, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  %65 = icmp eq i64 %32, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %63
  %67 = inttoptr i64 %32 to void (%"class.icu_69::Collator"*)***
  %68 = load void (%"class.icu_69::Collator"*)**, void (%"class.icu_69::Collator"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.icu_69::Collator"*)*, void (%"class.icu_69::Collator"*)** %68, i64 1
  %70 = load void (%"class.icu_69::Collator"*)*, void (%"class.icu_69::Collator"*)** %69, align 8
  call void %70(%"class.icu_69::Collator"* nonnull %33) #16
  br label %71

71:                                               ; preds = %63, %66
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #16
  ret void
}

declare void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"*, i8*, i8*, i8*, i8*) unnamed_addr #3

declare %"class.icu_69::Collator"* @_ZN6icu_698Collator14createInstanceERKNS_6LocaleER10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8), i64, %"class.std::__1::basic_string.8"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %97 [
    i64 0, label %125
    i64 1, label %125
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %9 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %10 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %9, align 8
  %11 = icmp eq %"class.icu_69::Collator"* %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.std::__1::basic_string.8"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp ult i64 %20, %28
  %30 = select i1 %29, i64 %20, i64 %28
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %84, label %32

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string.8"* %8 to i16*
  %36 = select i1 %24, i16* %34, i16* %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %40 = select i1 %16, i16* %38, i16* %39
  br label %41

41:                                               ; preds = %50, %32
  %42 = phi i64 [ %51, %50 ], [ %30, %32 ]
  %43 = phi i16* [ %53, %50 ], [ %40, %32 ]
  %44 = phi i16* [ %52, %50 ], [ %36, %32 ]
  %45 = load i16, i16* %44, align 2
  %46 = load i16, i16* %43, align 2
  %47 = icmp ult i16 %45, %46
  br i1 %47, label %86, label %48

48:                                               ; preds = %41
  %49 = icmp ult i16 %46, %45
  br i1 %49, label %125, label %50

50:                                               ; preds = %48
  %51 = add i64 %42, -1
  %52 = getelementptr inbounds i16, i16* %44, i64 1
  %53 = getelementptr inbounds i16, i16* %43, i64 1
  %54 = icmp eq i64 %51, 0
  br i1 %54, label %84, label %41

55:                                               ; preds = %7
  %56 = bitcast %"class.std::__1::basic_string.8"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string.8"* %8 to i16*
  %63 = select i1 %59, i16* %61, i16* %62
  %64 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %58 to i64
  %67 = select i1 %59, i64 %65, i64 %66
  %68 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %75 = select i1 %71, i16* %73, i16* %74
  %76 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %70 to i64
  %79 = select i1 %71, i64 %77, i64 %78
  %80 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %10, i16* %63, i64 %67, i16* %75, i64 %79) #16
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %125

82:                                               ; preds = %55
  %83 = load i64, i64* %76, align 8
  br label %86

84:                                               ; preds = %50, %12
  %85 = icmp ult i64 %28, %20
  br i1 %85, label %86, label %125

86:                                               ; preds = %41, %82, %84
  %87 = phi i64 [ %83, %82 ], [ %18, %84 ], [ %18, %41 ]
  %88 = bitcast %"class.std::__1::basic_string.8"* %0 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  %93 = bitcast %"class.std::__1::basic_string.8"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #16
  %94 = bitcast %"class.std::__1::basic_string.8"* %8 to i64*
  store i64 %89, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %87, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %91, i64* %96, align 8
  br label %125

97:                                               ; preds = %6
  %98 = icmp slt i64 %3, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  tail call void @_ZNSt3__116__insertion_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %1, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %125

100:                                              ; preds = %97
  %101 = lshr i64 %3, 1
  %102 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 %101
  %103 = icmp sgt i64 %3, %5
  br i1 %103, label %123, label %104

104:                                              ; preds = %100
  tail call void @_ZNSt3__118__stable_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %102, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %101, %"class.std::__1::basic_string.8"* %4)
  %105 = sub nsw i64 %3, %101
  %106 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 %101
  tail call void @_ZNSt3__118__stable_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::basic_string.8"* %102, %"class.std::__1::basic_string.8"* %1, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %105, %"class.std::__1::basic_string.8"* %106)
  %107 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_SB_NS_11__wrap_iterISB_EEEEvT0_SE_T1_SF_T2_T_(%"class.std::__1::basic_string.8"* %4, %"class.std::__1::basic_string.8"* %106, %"class.std::__1::basic_string.8"* %106, %"class.std::__1::basic_string.8"* %107, %"class.std::__1::basic_string.8"* %0, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  %108 = icmp eq %"class.std::__1::basic_string.8"* %4, null
  br i1 %108, label %125, label %109

109:                                              ; preds = %104, %119
  %110 = phi i64 [ %120, %119 ], [ 0, %104 ]
  %111 = phi %"class.std::__1::basic_string.8"* [ %121, %119 ], [ %4, %104 ]
  %112 = bitcast %"class.std::__1::basic_string.8"* %111 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::basic_string.8"* %111 to i8**
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #18
  br label %119

119:                                              ; preds = %116, %109
  %120 = add nuw i64 %110, 1
  %121 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %111, i64 1
  %122 = icmp eq i64 %120, %3
  br i1 %122, label %125, label %109

123:                                              ; preds = %100
  tail call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %102, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %101, %"class.std::__1::basic_string.8"* %4, i64 %5)
  %124 = sub nsw i64 %3, %101
  tail call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %102, %"class.std::__1::basic_string.8"* %1, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %124, %"class.std::__1::basic_string.8"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %102, %"class.std::__1::basic_string.8"* %1, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %101, i64 %124, %"class.std::__1::basic_string.8"* %4, i64 %5)
  ret void

125:                                              ; preds = %48, %119, %104, %55, %84, %86, %6, %6, %99
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %8 = icmp eq %"class.std::__1::basic_string.8"* %7, %1
  br i1 %8, label %116, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  br label %17

17:                                               ; preds = %9, %97
  %18 = phi %"class.std::__1::basic_string.8"* [ %7, %9 ], [ %99, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %19 = bitcast %"class.std::__1::basic_string.8"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %19, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #16
  %20 = icmp eq %"class.std::__1::basic_string.8"* %18, %0
  br i1 %20, label %88, label %21

21:                                               ; preds = %17, %109
  %22 = phi %"class.std::__1::basic_string.8"* [ %23, %109 ], [ %18, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 -1
  %24 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %13, align 8
  %25 = icmp eq %"class.icu_69::Collator"* %24, null
  br i1 %25, label %26, label %64

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::basic_string.8"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = load i8, i8* %15, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %12, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = icmp ult i64 %34, %39
  %41 = select i1 %40, i64 %34, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %86, label %43

43:                                               ; preds = %26
  %44 = load i16*, i16** %11, align 8
  %45 = select i1 %36, i16* %44, i16* %16
  %46 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string.8"* %23 to i16*
  %49 = select i1 %30, i16* %47, i16* %48
  br label %50

50:                                               ; preds = %59, %43
  %51 = phi i64 [ %60, %59 ], [ %41, %43 ]
  %52 = phi i16* [ %62, %59 ], [ %49, %43 ]
  %53 = phi i16* [ %61, %59 ], [ %45, %43 ]
  %54 = load i16, i16* %53, align 2
  %55 = load i16, i16* %52, align 2
  %56 = icmp ult i16 %54, %55
  br i1 %56, label %101, label %57

57:                                               ; preds = %50
  %58 = icmp ult i16 %55, %54
  br i1 %58, label %88, label %59

59:                                               ; preds = %57
  %60 = add i64 %51, -1
  %61 = getelementptr inbounds i16, i16* %53, i64 1
  %62 = getelementptr inbounds i16, i16* %52, i64 1
  %63 = icmp eq i64 %60, 0
  br i1 %63, label %86, label %50

64:                                               ; preds = %21
  %65 = load i8, i8* %15, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i16*, i16** %11, align 8
  %68 = select i1 %66, i16* %67, i16* %16
  %69 = load i64, i64* %12, align 8
  %70 = zext i8 %65 to i64
  %71 = select i1 %66, i64 %69, i64 %70
  %72 = bitcast %"class.std::__1::basic_string.8"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i16*, i16** %76, align 8
  %78 = bitcast %"class.std::__1::basic_string.8"* %23 to i16*
  %79 = select i1 %75, i16* %77, i16* %78
  %80 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = zext i8 %74 to i64
  %83 = select i1 %75, i64 %81, i64 %82
  %84 = call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %24, i16* %68, i64 %71, i16* %79, i64 %83) #16
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %101, label %88

86:                                               ; preds = %59, %26
  %87 = icmp ult i64 %39, %34
  br i1 %87, label %101, label %88

88:                                               ; preds = %86, %64, %109, %57, %17
  %89 = phi %"class.std::__1::basic_string.8"* [ %0, %17 ], [ %22, %57 ], [ %22, %86 ], [ %22, %64 ], [ %0, %109 ]
  %90 = bitcast %"class.std::__1::basic_string.8"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = bitcast %"class.std::__1::basic_string.8"* %89 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %94, %88
  %98 = bitcast %"class.std::__1::basic_string.8"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %10, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %99 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %18, i64 1
  %100 = icmp eq %"class.std::__1::basic_string.8"* %99, %1
  br i1 %100, label %116, label %17

101:                                              ; preds = %50, %64, %86
  %102 = bitcast %"class.std::__1::basic_string.8"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = bitcast %"class.std::__1::basic_string.8"* %22 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #18
  br label %109

109:                                              ; preds = %101, %106
  %110 = bitcast %"class.std::__1::basic_string.8"* %22 to i8*
  %111 = bitcast %"class.std::__1::basic_string.8"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #16
  %112 = bitcast %"class.std::__1::basic_string.8"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  store i8 0, i8* %113, align 1
  %114 = bitcast %"class.std::__1::basic_string.8"* %23 to i16*
  store i16 0, i16* %114, align 2
  %115 = icmp eq %"class.std::__1::basic_string.8"* %23, %0
  br i1 %115, label %88, label %21

116:                                              ; preds = %97, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8), i64, %"class.std::__1::basic_string.8"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %98 [
    i64 0, label %106
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %8 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #16
  br label %106

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %11 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %12 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %11, align 8
  %13 = icmp eq %"class.icu_69::Collator"* %12, null
  br i1 %13, label %14, label %57

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string.8"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %22, %30
  %32 = select i1 %31, i64 %22, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %84, label %34

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string.8"* %10 to i16*
  %38 = select i1 %26, i16* %36, i16* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %42 = select i1 %18, i16* %40, i16* %41
  br label %43

43:                                               ; preds = %52, %34
  %44 = phi i64 [ %53, %52 ], [ %32, %34 ]
  %45 = phi i16* [ %55, %52 ], [ %42, %34 ]
  %46 = phi i16* [ %54, %52 ], [ %38, %34 ]
  %47 = load i16, i16* %46, align 2
  %48 = load i16, i16* %45, align 2
  %49 = icmp ult i16 %47, %48
  br i1 %49, label %86, label %50

50:                                               ; preds = %43
  %51 = icmp ult i16 %48, %47
  br i1 %51, label %92, label %52

52:                                               ; preds = %50
  %53 = add i64 %44, -1
  %54 = getelementptr inbounds i16, i16* %46, i64 1
  %55 = getelementptr inbounds i16, i16* %45, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %84, label %43

57:                                               ; preds = %9
  %58 = bitcast %"class.std::__1::basic_string.8"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.8"* %10 to i16*
  %65 = select i1 %61, i16* %63, i16* %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %60 to i64
  %69 = select i1 %61, i64 %67, i64 %68
  %70 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %77 = select i1 %73, i16* %75, i16* %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %72 to i64
  %81 = select i1 %73, i64 %79, i64 %80
  %82 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %12, i16* %65, i64 %69, i16* %77, i64 %81) #16
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %86, label %92

84:                                               ; preds = %52, %14
  %85 = icmp ult i64 %30, %22
  br i1 %85, label %86, label %92

86:                                               ; preds = %43, %57, %84
  %87 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %88 = bitcast %"class.std::__1::basic_string.8"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #16
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 1
  %90 = bitcast %"class.std::__1::basic_string.8"* %89 to i8*
  %91 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #16
  br label %106

92:                                               ; preds = %50, %57, %84
  %93 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %94 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #16
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 1
  %96 = bitcast %"class.std::__1::basic_string.8"* %95 to i8*
  %97 = bitcast %"class.std::__1::basic_string.8"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #16
  br label %106

98:                                               ; preds = %5
  %99 = icmp slt i64 %3, 9
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  tail call void @_ZNSt3__121__insertion_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %4, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %106

101:                                              ; preds = %98
  %102 = lshr i64 %3, 1
  %103 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 %102
  tail call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %103, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %102, %"class.std::__1::basic_string.8"* %4, i64 %102)
  %104 = sub nsw i64 %3, %102
  %105 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 %102
  tail call void @_ZNSt3__113__stable_sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %103, %"class.std::__1::basic_string.8"* %1, %"class.l10n_util::StringComparator"* dereferenceable(8) %2, i64 %104, %"class.std::__1::basic_string.8"* %105, i64 %104)
  tail call void @_ZNSt3__122__merge_move_constructIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EESD_EEvT0_SE_T1_SF_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %103, %"class.std::__1::basic_string.8"* %103, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %4, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %106

106:                                              ; preds = %92, %86, %5, %101, %100, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_SB_NS_11__wrap_iterISB_EEEEvT0_SE_T1_SF_T2_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %5, i64 0, i32 0
  br label %14

10:                                               ; preds = %145, %6
  %11 = phi %"class.std::__1::basic_string.8"* [ %4, %6 ], [ %148, %145 ]
  %12 = phi %"class.std::__1::basic_string.8"* [ %2, %6 ], [ %146, %145 ]
  %13 = icmp eq %"class.std::__1::basic_string.8"* %12, %3
  br i1 %13, label %169, label %150

14:                                               ; preds = %8, %145
  %15 = phi %"class.std::__1::basic_string.8"* [ %0, %8 ], [ %147, %145 ]
  %16 = phi %"class.std::__1::basic_string.8"* [ %2, %8 ], [ %146, %145 ]
  %17 = phi %"class.std::__1::basic_string.8"* [ %4, %8 ], [ %148, %145 ]
  %18 = icmp eq %"class.std::__1::basic_string.8"* %16, %3
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = icmp eq %"class.std::__1::basic_string.8"* %15, %1
  br i1 %20, label %169, label %21

21:                                               ; preds = %19, %31
  %22 = phi %"class.std::__1::basic_string.8"* [ %37, %31 ], [ %15, %19 ]
  %23 = phi %"class.std::__1::basic_string.8"* [ %38, %31 ], [ %17, %19 ]
  %24 = bitcast %"class.std::__1::basic_string.8"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = bitcast %"class.std::__1::basic_string.8"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %21, %28
  %32 = bitcast %"class.std::__1::basic_string.8"* %23 to i8*
  %33 = bitcast %"class.std::__1::basic_string.8"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #16
  %34 = bitcast %"class.std::__1::basic_string.8"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 0, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string.8"* %22 to i16*
  store i16 0, i16* %36, align 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %23, i64 1
  %39 = icmp eq %"class.std::__1::basic_string.8"* %37, %1
  br i1 %39, label %169, label %21

40:                                               ; preds = %14
  %41 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %9, align 8
  %42 = icmp eq %"class.icu_69::Collator"* %41, null
  br i1 %42, label %43, label %86

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::basic_string.8"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i64 %49, i64 %50
  %52 = bitcast %"class.std::__1::basic_string.8"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  %60 = icmp ult i64 %51, %59
  %61 = select i1 %60, i64 %51, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %113, label %63

63:                                               ; preds = %43
  %64 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i16*, i16** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string.8"* %16 to i16*
  %67 = select i1 %55, i16* %65, i16* %66
  %68 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string.8"* %15 to i16*
  %71 = select i1 %47, i16* %69, i16* %70
  br label %72

72:                                               ; preds = %81, %63
  %73 = phi i64 [ %82, %81 ], [ %61, %63 ]
  %74 = phi i16* [ %84, %81 ], [ %71, %63 ]
  %75 = phi i16* [ %83, %81 ], [ %67, %63 ]
  %76 = load i16, i16* %75, align 2
  %77 = load i16, i16* %74, align 2
  %78 = icmp ult i16 %76, %77
  br i1 %78, label %115, label %79

79:                                               ; preds = %72
  %80 = icmp ult i16 %77, %76
  br i1 %80, label %130, label %81

81:                                               ; preds = %79
  %82 = add i64 %73, -1
  %83 = getelementptr inbounds i16, i16* %75, i64 1
  %84 = getelementptr inbounds i16, i16* %74, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %113, label %72

86:                                               ; preds = %40
  %87 = bitcast %"class.std::__1::basic_string.8"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i16*, i16** %91, align 8
  %93 = bitcast %"class.std::__1::basic_string.8"* %16 to i16*
  %94 = select i1 %90, i16* %92, i16* %93
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %89 to i64
  %98 = select i1 %90, i64 %96, i64 %97
  %99 = bitcast %"class.std::__1::basic_string.8"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = bitcast %"class.std::__1::basic_string.8"* %15 to i16*
  %106 = select i1 %102, i16* %104, i16* %105
  %107 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = zext i8 %101 to i64
  %110 = select i1 %102, i64 %108, i64 %109
  %111 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %41, i16* %94, i64 %98, i16* %106, i64 %110) #16
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %115, label %130

113:                                              ; preds = %81, %43
  %114 = icmp ult i64 %59, %51
  br i1 %114, label %115, label %130

115:                                              ; preds = %72, %86, %113
  %116 = bitcast %"class.std::__1::basic_string.8"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = bitcast %"class.std::__1::basic_string.8"* %17 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #18
  br label %123

123:                                              ; preds = %115, %120
  %124 = bitcast %"class.std::__1::basic_string.8"* %17 to i8*
  %125 = bitcast %"class.std::__1::basic_string.8"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #16
  %126 = bitcast %"class.std::__1::basic_string.8"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  store i8 0, i8* %127, align 1
  %128 = bitcast %"class.std::__1::basic_string.8"* %16 to i16*
  store i16 0, i16* %128, align 2
  %129 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1
  br label %145

130:                                              ; preds = %79, %86, %113
  %131 = bitcast %"class.std::__1::basic_string.8"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string.8"* %17 to i8**
  %137 = load i8*, i8** %136, align 8
  tail call void @_ZdlPv(i8* %137) #18
  br label %138

138:                                              ; preds = %130, %135
  %139 = bitcast %"class.std::__1::basic_string.8"* %17 to i8*
  %140 = bitcast %"class.std::__1::basic_string.8"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 24, i1 false) #16
  %141 = bitcast %"class.std::__1::basic_string.8"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %141, i64 0, i32 1, i32 1
  store i8 0, i8* %142, align 1
  %143 = bitcast %"class.std::__1::basic_string.8"* %15 to i16*
  store i16 0, i16* %143, align 2
  %144 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 1
  br label %145

145:                                              ; preds = %123, %138
  %146 = phi %"class.std::__1::basic_string.8"* [ %129, %123 ], [ %16, %138 ]
  %147 = phi %"class.std::__1::basic_string.8"* [ %15, %123 ], [ %144, %138 ]
  %148 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %17, i64 1
  %149 = icmp eq %"class.std::__1::basic_string.8"* %147, %1
  br i1 %149, label %10, label %14

150:                                              ; preds = %10, %160
  %151 = phi %"class.std::__1::basic_string.8"* [ %166, %160 ], [ %12, %10 ]
  %152 = phi %"class.std::__1::basic_string.8"* [ %167, %160 ], [ %11, %10 ]
  %153 = bitcast %"class.std::__1::basic_string.8"* %152 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::basic_string.8"* %152 to i8**
  %159 = load i8*, i8** %158, align 8
  tail call void @_ZdlPv(i8* %159) #18
  br label %160

160:                                              ; preds = %150, %157
  %161 = bitcast %"class.std::__1::basic_string.8"* %152 to i8*
  %162 = bitcast %"class.std::__1::basic_string.8"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 24, i1 false) #16
  %163 = bitcast %"class.std::__1::basic_string.8"* %151 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %163, i64 0, i32 1, i32 1
  store i8 0, i8* %164, align 1
  %165 = bitcast %"class.std::__1::basic_string.8"* %151 to i16*
  store i16 0, i16* %165, align 2
  %166 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %151, i64 1
  %167 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %152, i64 1
  %168 = icmp eq %"class.std::__1::basic_string.8"* %166, %3
  br i1 %168, label %169, label %150

169:                                              ; preds = %31, %160, %19, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8), i64, i64, %"class.std::__1::basic_string.8"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %423, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::basic_string.8"* %1 to i64
  %12 = ptrtoint %"class.std::__1::basic_string.8"* %0 to i64
  %13 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %3, i64 0, i32 0
  br label %14

14:                                               ; preds = %10, %416
  %15 = phi %"class.std::__1::basic_string.8"* [ %2, %10 ], [ %421, %416 ]
  %16 = phi i64 [ %4, %10 ], [ %420, %416 ]
  %17 = phi i64 [ %5, %10 ], [ %419, %416 ]
  %18 = phi i64 [ %11, %10 ], [ %418, %416 ]
  %19 = phi i64 [ %12, %10 ], [ %417, %416 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %32

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %423, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"class.std::__1::basic_string.8"*
  %27 = inttoptr i64 %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = inttoptr i64 %18 to i16*
  %31 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %35

32:                                               ; preds = %14
  %33 = inttoptr i64 %19 to %"class.std::__1::basic_string.8"*
  %34 = inttoptr i64 %18 to %"class.std::__1::basic_string.8"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE(%"class.std::__1::basic_string.8"* %33, %"class.std::__1::basic_string.8"* %34, %"class.std::__1::basic_string.8"* %15, %"class.l10n_util::StringComparator"* dereferenceable(8) %3, i64 %16, i64 %17, %"class.std::__1::basic_string.8"* %6)
  br label %423

35:                                               ; preds = %25, %103
  %36 = phi i64 [ %16, %25 ], [ %106, %103 ]
  %37 = phi i64 [ %19, %25 ], [ %105, %103 ]
  %38 = inttoptr i64 %37 to %"class.std::__1::basic_string.8"*
  %39 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %13, align 8
  %40 = icmp eq %"class.icu_69::Collator"* %39, null
  br i1 %40, label %41, label %79

41:                                               ; preds = %35
  %42 = inttoptr i64 %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i64 %47, i64 %48
  %50 = load i8, i8* %28, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %31, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp ult i64 %49, %54
  %56 = select i1 %55, i64 %49, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %101, label %58

58:                                               ; preds = %41
  %59 = load i16*, i16** %29, align 8
  %60 = select i1 %51, i16* %59, i16* %30
  %61 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = inttoptr i64 %37 to i16*
  %64 = select i1 %45, i16* %62, i16* %63
  br label %65

65:                                               ; preds = %74, %58
  %66 = phi i64 [ %75, %74 ], [ %56, %58 ]
  %67 = phi i16* [ %77, %74 ], [ %64, %58 ]
  %68 = phi i16* [ %76, %74 ], [ %60, %58 ]
  %69 = load i16, i16* %68, align 2
  %70 = load i16, i16* %67, align 2
  %71 = icmp ult i16 %69, %70
  br i1 %71, label %108, label %72

72:                                               ; preds = %65
  %73 = icmp ult i16 %70, %69
  br i1 %73, label %103, label %74

74:                                               ; preds = %72
  %75 = add i64 %66, -1
  %76 = getelementptr inbounds i16, i16* %68, i64 1
  %77 = getelementptr inbounds i16, i16* %67, i64 1
  %78 = icmp eq i64 %75, 0
  br i1 %78, label %101, label %65

79:                                               ; preds = %35
  %80 = load i8, i8* %28, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i16*, i16** %29, align 8
  %83 = select i1 %81, i16* %82, i16* %30
  %84 = load i64, i64* %31, align 8
  %85 = zext i8 %80 to i64
  %86 = select i1 %81, i64 %84, i64 %85
  %87 = inttoptr i64 %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i16*, i16** %91, align 8
  %93 = inttoptr i64 %37 to i16*
  %94 = select i1 %90, i16* %92, i16* %93
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %89 to i64
  %98 = select i1 %90, i64 %96, i64 %97
  %99 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %39, i16* %83, i64 %86, i16* %94, i64 %98) #16
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %108, label %103

101:                                              ; preds = %74, %41
  %102 = icmp ult i64 %54, %49
  br i1 %102, label %108, label %103

103:                                              ; preds = %72, %79, %101
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 1
  %105 = ptrtoint %"class.std::__1::basic_string.8"* %104 to i64
  %106 = add nsw i64 %36, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %423, label %35

108:                                              ; preds = %79, %101, %65
  %109 = inttoptr i64 %37 to %"class.std::__1::basic_string.8"*
  %110 = icmp slt i64 %36, %17
  br i1 %110, label %111, label %206

111:                                              ; preds = %108
  %112 = sdiv i64 %17, 2
  %113 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %112
  %114 = sub i64 %18, %37
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %200, label %116

116:                                              ; preds = %111
  %117 = sdiv exact i64 %114, 24
  %118 = bitcast %"class.std::__1::basic_string.8"* %113 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %118, i64 0, i32 1, i32 1
  %120 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::basic_string.8"* %113 to i16*
  %122 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %112, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %123

123:                                              ; preds = %196, %116
  %124 = phi %"class.std::__1::basic_string.8"* [ %198, %196 ], [ %109, %116 ]
  %125 = phi i64 [ %197, %196 ], [ %117, %116 ]
  %126 = lshr i64 %125, 1
  %127 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %124, i64 %126
  %128 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %13, align 8
  %129 = icmp eq %"class.icu_69::Collator"* %128, null
  br i1 %129, label %130, label %168

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::basic_string.8"* %127 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %124, i64 %126, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = zext i8 %133 to i64
  %138 = select i1 %134, i64 %136, i64 %137
  %139 = load i8, i8* %119, align 1
  %140 = icmp slt i8 %139, 0
  %141 = load i64, i64* %122, align 8
  %142 = zext i8 %139 to i64
  %143 = select i1 %140, i64 %141, i64 %142
  %144 = icmp ult i64 %138, %143
  %145 = select i1 %144, i64 %138, i64 %143
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %190, label %147

147:                                              ; preds = %130
  %148 = load i16*, i16** %120, align 8
  %149 = select i1 %140, i16* %148, i16* %121
  %150 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i16*, i16** %150, align 8
  %152 = bitcast %"class.std::__1::basic_string.8"* %127 to i16*
  %153 = select i1 %134, i16* %151, i16* %152
  br label %154

154:                                              ; preds = %163, %147
  %155 = phi i64 [ %164, %163 ], [ %145, %147 ]
  %156 = phi i16* [ %166, %163 ], [ %153, %147 ]
  %157 = phi i16* [ %165, %163 ], [ %149, %147 ]
  %158 = load i16, i16* %157, align 2
  %159 = load i16, i16* %156, align 2
  %160 = icmp ult i16 %158, %159
  br i1 %160, label %196, label %161

161:                                              ; preds = %154
  %162 = icmp ult i16 %159, %158
  br i1 %162, label %192, label %163

163:                                              ; preds = %161
  %164 = add i64 %155, -1
  %165 = getelementptr inbounds i16, i16* %157, i64 1
  %166 = getelementptr inbounds i16, i16* %156, i64 1
  %167 = icmp eq i64 %164, 0
  br i1 %167, label %190, label %154

168:                                              ; preds = %123
  %169 = load i8, i8* %119, align 1
  %170 = icmp slt i8 %169, 0
  %171 = load i16*, i16** %120, align 8
  %172 = select i1 %170, i16* %171, i16* %121
  %173 = load i64, i64* %122, align 8
  %174 = zext i8 %169 to i64
  %175 = select i1 %170, i64 %173, i64 %174
  %176 = bitcast %"class.std::__1::basic_string.8"* %127 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %176, i64 0, i32 1, i32 1
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i16*, i16** %180, align 8
  %182 = bitcast %"class.std::__1::basic_string.8"* %127 to i16*
  %183 = select i1 %179, i16* %181, i16* %182
  %184 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %124, i64 %126, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = zext i8 %178 to i64
  %187 = select i1 %179, i64 %185, i64 %186
  %188 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %128, i16* %172, i64 %175, i16* %183, i64 %187) #16
  %189 = icmp eq i32 %188, -1
  br i1 %189, label %196, label %192

190:                                              ; preds = %163, %130
  %191 = icmp ult i64 %143, %138
  br i1 %191, label %196, label %192

192:                                              ; preds = %161, %190, %168
  %193 = xor i64 %126, -1
  %194 = add i64 %125, %193
  %195 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %127, i64 1
  br label %196

196:                                              ; preds = %154, %190, %168, %192
  %197 = phi i64 [ %194, %192 ], [ %126, %168 ], [ %126, %190 ], [ %126, %154 ]
  %198 = phi %"class.std::__1::basic_string.8"* [ %195, %192 ], [ %124, %168 ], [ %124, %190 ], [ %124, %154 ]
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %200, label %123

200:                                              ; preds = %196, %111
  %201 = phi %"class.std::__1::basic_string.8"* [ %109, %111 ], [ %198, %196 ]
  %202 = ptrtoint %"class.std::__1::basic_string.8"* %201 to i64
  %203 = sub i64 %202, %37
  %204 = sdiv exact i64 %203, 24
  %205 = ptrtoint %"class.std::__1::basic_string.8"* %113 to i64
  br label %327

206:                                              ; preds = %108
  %207 = icmp eq i64 %36, 1
  br i1 %207, label %208, label %221

208:                                              ; preds = %206
  %209 = inttoptr i64 %37 to %"class.std::__1::basic_string.8"*
  %210 = inttoptr i64 %18 to %"class.std::__1::basic_string.8"*
  %211 = inttoptr i64 %37 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %216 = load i64, i64* %215, align 8
  %217 = inttoptr i64 %37 to i8*
  %218 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 24, i1 false) #16
  %219 = inttoptr i64 %18 to i64*
  store i64 %212, i64* %219, align 8
  store i64 %214, i64* %31, align 8
  %220 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %216, i64* %220, align 8
  br label %423

221:                                              ; preds = %206
  %222 = sdiv i64 %36, 2
  %223 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %109, i64 %222
  %224 = ptrtoint %"class.std::__1::basic_string.8"* %223 to i64
  %225 = ptrtoint %"class.std::__1::basic_string.8"* %15 to i64
  %226 = sub i64 %225, %18
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %321, label %228

228:                                              ; preds = %221
  %229 = sdiv exact i64 %226, 24
  %230 = bitcast %"class.std::__1::basic_string.8"* %223 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %230, i64 0, i32 1, i32 1
  %232 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = bitcast %"class.std::__1::basic_string.8"* %223 to i16*
  %234 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %109, i64 %222, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %235

235:                                              ; preds = %317, %228
  %236 = phi i64 [ %319, %317 ], [ 0, %228 ]
  %237 = phi i64 [ %318, %317 ], [ %229, %228 ]
  %238 = lshr i64 %237, 1
  %239 = add nsw i64 %238, %236
  %240 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %239
  %241 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %13, align 8
  %242 = icmp eq %"class.icu_69::Collator"* %241, null
  br i1 %242, label %243, label %285

243:                                              ; preds = %235
  %244 = load i8, i8* %231, align 1
  %245 = icmp slt i8 %244, 0
  %246 = load i64, i64* %234, align 8
  %247 = zext i8 %244 to i64
  %248 = select i1 %245, i64 %246, i64 %247
  %249 = bitcast %"class.std::__1::basic_string.8"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %239, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = zext i8 %251 to i64
  %256 = select i1 %252, i64 %254, i64 %255
  %257 = icmp ult i64 %248, %256
  %258 = select i1 %257, i64 %248, i64 %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %311, label %260

260:                                              ; preds = %243
  %261 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load i16*, i16** %261, align 8
  %263 = bitcast %"class.std::__1::basic_string.8"* %240 to i16*
  %264 = select i1 %252, i16* %262, i16* %263
  %265 = load i16*, i16** %232, align 8
  %266 = select i1 %245, i16* %265, i16* %233
  br label %267

267:                                              ; preds = %280, %260
  %268 = phi i64 [ %281, %280 ], [ %258, %260 ]
  %269 = phi i16* [ %283, %280 ], [ %266, %260 ]
  %270 = phi i16* [ %282, %280 ], [ %264, %260 ]
  %271 = load i16, i16* %270, align 2
  %272 = load i16, i16* %269, align 2
  %273 = icmp ult i16 %271, %272
  br i1 %273, label %274, label %278

274:                                              ; preds = %267
  %275 = add nsw i64 %239, 1
  %276 = xor i64 %238, -1
  %277 = add i64 %237, %276
  br label %317

278:                                              ; preds = %267
  %279 = icmp ult i16 %272, %271
  br i1 %279, label %316, label %280

280:                                              ; preds = %278
  %281 = add i64 %268, -1
  %282 = getelementptr inbounds i16, i16* %270, i64 1
  %283 = getelementptr inbounds i16, i16* %269, i64 1
  %284 = icmp eq i64 %281, 0
  br i1 %284, label %311, label %267

285:                                              ; preds = %235
  %286 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %236
  %287 = bitcast %"class.std::__1::basic_string.8"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %287, i64 0, i32 1, i32 1
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  %291 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i16*, i16** %291, align 8
  %293 = bitcast %"class.std::__1::basic_string.8"* %240 to i16*
  %294 = select i1 %290, i16* %292, i16* %293
  %295 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %286, i64 %238, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = zext i8 %289 to i64
  %298 = select i1 %290, i64 %296, i64 %297
  %299 = load i8, i8* %231, align 1
  %300 = icmp slt i8 %299, 0
  %301 = load i16*, i16** %232, align 8
  %302 = select i1 %300, i16* %301, i16* %233
  %303 = load i64, i64* %234, align 8
  %304 = zext i8 %299 to i64
  %305 = select i1 %300, i64 %303, i64 %304
  %306 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %241, i16* %294, i64 %298, i16* %302, i64 %305) #16
  %307 = icmp eq i32 %306, -1
  %308 = add nsw i64 %239, 1
  %309 = xor i64 %238, -1
  %310 = add i64 %237, %309
  br i1 %307, label %317, label %316

311:                                              ; preds = %280, %243
  %312 = icmp ult i64 %256, %248
  %313 = add nsw i64 %239, 1
  %314 = xor i64 %238, -1
  %315 = add i64 %237, %314
  br i1 %312, label %317, label %316

316:                                              ; preds = %278, %311, %285
  br label %317

317:                                              ; preds = %311, %274, %285, %316
  %318 = phi i64 [ %238, %316 ], [ %277, %274 ], [ %315, %311 ], [ %310, %285 ]
  %319 = phi i64 [ %236, %316 ], [ %275, %274 ], [ %313, %311 ], [ %308, %285 ]
  %320 = icmp eq i64 %318, 0
  br i1 %320, label %321, label %235

321:                                              ; preds = %317, %221
  %322 = phi i64 [ 0, %221 ], [ %319, %317 ]
  %323 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %322
  %324 = ptrtoint %"class.std::__1::basic_string.8"* %323 to i64
  %325 = sub i64 %324, %18
  %326 = sdiv exact i64 %325, 24
  br label %327

327:                                              ; preds = %321, %200
  %328 = phi i64 [ %324, %321 ], [ %205, %200 ]
  %329 = phi i64 [ %224, %321 ], [ %202, %200 ]
  %330 = phi i64 [ %322, %321 ], [ %112, %200 ]
  %331 = phi i64 [ %326, %321 ], [ %112, %200 ]
  %332 = phi i64 [ %222, %321 ], [ %204, %200 ]
  %333 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 %330
  %334 = sub nsw i64 %36, %332
  %335 = sub nsw i64 %17, %331
  %336 = inttoptr i64 %329 to %"class.std::__1::basic_string.8"*
  %337 = icmp eq %"class.std::__1::basic_string.8"* %336, %26
  br i1 %337, label %408, label %338

338:                                              ; preds = %327
  %339 = icmp eq i64 %330, 0
  br i1 %339, label %408, label %340

340:                                              ; preds = %338
  %341 = inttoptr i64 %329 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %336, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %344 = bitcast i64* %343 to <2 x i64>*
  %345 = load <2 x i64>, <2 x i64>* %344, align 8
  %346 = inttoptr i64 %329 to i8*
  %347 = inttoptr i64 %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* align 8 %347, i64 24, i1 false) #16
  %348 = inttoptr i64 %18 to i64*
  store i64 %342, i64* %348, align 8
  %349 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> %345, <2 x i64>* %349, align 8
  %350 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %336, i64 1
  %351 = icmp eq i64 %330, 1
  br i1 %351, label %376, label %352

352:                                              ; preds = %340
  %353 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %26, i64 1
  br label %354

354:                                              ; preds = %352, %354
  %355 = phi %"class.std::__1::basic_string.8"* [ %373, %354 ], [ %26, %352 ]
  %356 = phi %"class.std::__1::basic_string.8"* [ %371, %354 ], [ %353, %352 ]
  %357 = phi %"class.std::__1::basic_string.8"* [ %370, %354 ], [ %350, %352 ]
  %358 = phi i64 [ %361, %354 ], [ %18, %352 ]
  %359 = ptrtoint %"class.std::__1::basic_string.8"* %356 to i64
  %360 = icmp eq %"class.std::__1::basic_string.8"* %357, %355
  %361 = select i1 %360, i64 %359, i64 %358
  %362 = bitcast %"class.std::__1::basic_string.8"* %357 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 8
  %364 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %357, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %365 = load i64, i64* %364, align 8
  %366 = bitcast %"class.std::__1::basic_string.8"* %357 to i8*
  %367 = bitcast %"class.std::__1::basic_string.8"* %356 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %366, i8* align 8 %367, i64 24, i1 false) #16
  %368 = bitcast %"class.std::__1::basic_string.8"* %356 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %356, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %365, i64* %369, align 8
  %370 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %357, i64 1
  %371 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %356, i64 1
  %372 = icmp eq %"class.std::__1::basic_string.8"* %371, %333
  %373 = inttoptr i64 %361 to %"class.std::__1::basic_string.8"*
  br i1 %372, label %374, label %354

374:                                              ; preds = %354
  %375 = inttoptr i64 %361 to %"class.std::__1::basic_string.8"*
  br label %376

376:                                              ; preds = %374, %340
  %377 = phi i64 [ %18, %340 ], [ %361, %374 ]
  %378 = phi %"class.std::__1::basic_string.8"* [ %350, %340 ], [ %370, %374 ]
  %379 = phi %"class.std::__1::basic_string.8"* [ %26, %340 ], [ %375, %374 ]
  %380 = icmp eq %"class.std::__1::basic_string.8"* %378, %379
  br i1 %380, label %408, label %381

381:                                              ; preds = %376, %405
  %382 = phi i64 [ %407, %405 ], [ %377, %376 ]
  %383 = phi %"class.std::__1::basic_string.8"* [ %400, %405 ], [ %378, %376 ]
  %384 = phi i64 [ %406, %405 ], [ %377, %376 ]
  %385 = inttoptr i64 %382 to %"class.std::__1::basic_string.8"*
  br label %386

386:                                              ; preds = %381, %404
  %387 = phi %"class.std::__1::basic_string.8"* [ %400, %404 ], [ %383, %381 ]
  %388 = phi i64 [ %382, %404 ], [ %384, %381 ]
  %389 = inttoptr i64 %388 to %"class.std::__1::basic_string.8"*
  %390 = bitcast %"class.std::__1::basic_string.8"* %387 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = bitcast i64* %392 to <2 x i64>*
  %394 = load <2 x i64>, <2 x i64>* %393, align 8
  %395 = bitcast %"class.std::__1::basic_string.8"* %387 to i8*
  %396 = inttoptr i64 %388 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %395, i8* align 8 %396, i64 24, i1 false) #16
  %397 = inttoptr i64 %388 to i64*
  store i64 %391, i64* %397, align 8
  %398 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %389, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %399 = bitcast i64* %398 to <2 x i64>*
  store <2 x i64> %394, <2 x i64>* %399, align 8
  %400 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %387, i64 1
  %401 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %389, i64 1
  %402 = icmp eq %"class.std::__1::basic_string.8"* %401, %333
  %403 = icmp eq %"class.std::__1::basic_string.8"* %400, %385
  br i1 %402, label %404, label %405

404:                                              ; preds = %386
  br i1 %403, label %408, label %386

405:                                              ; preds = %386
  %406 = ptrtoint %"class.std::__1::basic_string.8"* %401 to i64
  %407 = select i1 %403, i64 %406, i64 %382
  br label %381

408:                                              ; preds = %404, %327, %338, %376
  %409 = phi %"class.std::__1::basic_string.8"* [ %336, %338 ], [ %333, %327 ], [ %378, %376 ], [ %378, %404 ]
  %410 = add nsw i64 %332, %331
  %411 = add nsw i64 %334, %335
  %412 = icmp slt i64 %410, %411
  br i1 %412, label %413, label %415

413:                                              ; preds = %408
  %414 = ptrtoint %"class.std::__1::basic_string.8"* %409 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %109, %"class.std::__1::basic_string.8"* %336, %"class.std::__1::basic_string.8"* %409, %"class.l10n_util::StringComparator"* dereferenceable(8) %3, i64 %332, i64 %331, %"class.std::__1::basic_string.8"* %6, i64 %7)
  br label %416

415:                                              ; preds = %408
  tail call void @_ZNSt3__115__inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::basic_string.8"* %409, %"class.std::__1::basic_string.8"* %333, %"class.std::__1::basic_string.8"* %15, %"class.l10n_util::StringComparator"* dereferenceable(8) %3, i64 %334, i64 %335, %"class.std::__1::basic_string.8"* %6, i64 %7)
  br label %416

416:                                              ; preds = %413, %415
  %417 = phi i64 [ %414, %413 ], [ %37, %415 ]
  %418 = phi i64 [ %328, %413 ], [ %329, %415 ]
  %419 = phi i64 [ %335, %413 ], [ %331, %415 ]
  %420 = phi i64 [ %334, %413 ], [ %332, %415 ]
  %421 = phi %"class.std::__1::basic_string.8"* [ %15, %413 ], [ %409, %415 ]
  %422 = icmp eq i64 %419, 0
  br i1 %422, label %423, label %14

423:                                              ; preds = %416, %23, %103, %8, %208, %32
  ret void
}

declare i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* dereferenceable(8), i16*, i64, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %5, label %205, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  %8 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #16
  %9 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %10 = icmp eq %"class.std::__1::basic_string.8"* %9, %1
  br i1 %10, label %205, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %3, i64 0, i32 0
  br label %13

13:                                               ; preds = %11, %202
  %14 = phi %"class.std::__1::basic_string.8"* [ %9, %11 ], [ %203, %202 ]
  %15 = phi %"class.std::__1::basic_string.8"* [ %2, %11 ], [ %17, %202 ]
  %16 = phi %"class.std::__1::basic_string.8"* [ %0, %11 ], [ %14, %202 ]
  %17 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 1
  %18 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %12, align 8
  %19 = icmp eq %"class.icu_69::Collator"* %18, null
  br i1 %19, label %20, label %63

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string.8"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = bitcast %"class.std::__1::basic_string.8"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ult i64 %28, %36
  %38 = select i1 %37, i64 %28, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %90, label %40

40:                                               ; preds = %20
  %41 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string.8"* %14 to i16*
  %44 = select i1 %32, i16* %42, i16* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string.8"* %15 to i16*
  %48 = select i1 %24, i16* %46, i16* %47
  br label %49

49:                                               ; preds = %58, %40
  %50 = phi i64 [ %59, %58 ], [ %38, %40 ]
  %51 = phi i16* [ %61, %58 ], [ %48, %40 ]
  %52 = phi i16* [ %60, %58 ], [ %44, %40 ]
  %53 = load i16, i16* %52, align 2
  %54 = load i16, i16* %51, align 2
  %55 = icmp ult i16 %53, %54
  br i1 %55, label %92, label %56

56:                                               ; preds = %49
  %57 = icmp ult i16 %54, %53
  br i1 %57, label %199, label %58

58:                                               ; preds = %56
  %59 = add i64 %50, -1
  %60 = getelementptr inbounds i16, i16* %52, i64 1
  %61 = getelementptr inbounds i16, i16* %51, i64 1
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %90, label %49

63:                                               ; preds = %13
  %64 = bitcast %"class.std::__1::basic_string.8"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string.8"* %14 to i16*
  %71 = select i1 %67, i16* %69, i16* %70
  %72 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %66 to i64
  %75 = select i1 %67, i64 %73, i64 %74
  %76 = bitcast %"class.std::__1::basic_string.8"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i16*, i16** %80, align 8
  %82 = bitcast %"class.std::__1::basic_string.8"* %15 to i16*
  %83 = select i1 %79, i16* %81, i16* %82
  %84 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %78 to i64
  %87 = select i1 %79, i64 %85, i64 %86
  %88 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %18, i16* %71, i64 %75, i16* %83, i64 %87) #16
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %92, label %199

90:                                               ; preds = %58, %20
  %91 = icmp ult i64 %36, %28
  br i1 %91, label %92, label %199

92:                                               ; preds = %49, %63, %90
  %93 = bitcast %"class.std::__1::basic_string.8"* %17 to i8*
  %94 = bitcast %"class.std::__1::basic_string.8"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #16
  %95 = icmp eq %"class.std::__1::basic_string.8"* %15, %2
  br i1 %95, label %184, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::basic_string.8"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::basic_string.8"* %14 to i16*
  %101 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %102

102:                                              ; preds = %96, %177
  %103 = phi %"class.std::__1::basic_string.8"* [ %15, %96 ], [ %104, %177 ]
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %103, i64 -1
  %105 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %12, align 8
  %106 = icmp eq %"class.icu_69::Collator"* %105, null
  br i1 %106, label %107, label %145

107:                                              ; preds = %102
  %108 = bitcast %"class.std::__1::basic_string.8"* %104 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %103, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %110 to i64
  %115 = select i1 %111, i64 %113, i64 %114
  %116 = load i8, i8* %98, align 1
  %117 = icmp slt i8 %116, 0
  %118 = load i64, i64* %101, align 8
  %119 = zext i8 %116 to i64
  %120 = select i1 %117, i64 %118, i64 %119
  %121 = icmp ult i64 %115, %120
  %122 = select i1 %121, i64 %115, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %167, label %124

124:                                              ; preds = %107
  %125 = load i16*, i16** %99, align 8
  %126 = select i1 %117, i16* %125, i16* %100
  %127 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i16*, i16** %127, align 8
  %129 = bitcast %"class.std::__1::basic_string.8"* %104 to i16*
  %130 = select i1 %111, i16* %128, i16* %129
  br label %131

131:                                              ; preds = %140, %124
  %132 = phi i64 [ %141, %140 ], [ %122, %124 ]
  %133 = phi i16* [ %143, %140 ], [ %130, %124 ]
  %134 = phi i16* [ %142, %140 ], [ %126, %124 ]
  %135 = load i16, i16* %134, align 2
  %136 = load i16, i16* %133, align 2
  %137 = icmp ult i16 %135, %136
  br i1 %137, label %177, label %138

138:                                              ; preds = %131
  %139 = icmp ult i16 %136, %135
  br i1 %139, label %184, label %140

140:                                              ; preds = %138
  %141 = add i64 %132, -1
  %142 = getelementptr inbounds i16, i16* %134, i64 1
  %143 = getelementptr inbounds i16, i16* %133, i64 1
  %144 = icmp eq i64 %141, 0
  br i1 %144, label %167, label %131

145:                                              ; preds = %102
  %146 = load i8, i8* %98, align 1
  %147 = icmp slt i8 %146, 0
  %148 = load i16*, i16** %99, align 8
  %149 = select i1 %147, i16* %148, i16* %100
  %150 = load i64, i64* %101, align 8
  %151 = zext i8 %146 to i64
  %152 = select i1 %147, i64 %150, i64 %151
  %153 = bitcast %"class.std::__1::basic_string.8"* %104 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i16*, i16** %157, align 8
  %159 = bitcast %"class.std::__1::basic_string.8"* %104 to i16*
  %160 = select i1 %156, i16* %158, i16* %159
  %161 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %103, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = zext i8 %155 to i64
  %164 = select i1 %156, i64 %162, i64 %163
  %165 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %105, i16* %149, i64 %152, i16* %160, i64 %164) #16
  %166 = icmp eq i32 %165, -1
  br i1 %166, label %169, label %184

167:                                              ; preds = %140, %107
  %168 = icmp ult i64 %120, %115
  br i1 %168, label %177, label %184

169:                                              ; preds = %145
  %170 = bitcast %"class.std::__1::basic_string.8"* %103 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %170, i64 0, i32 1, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = bitcast %"class.std::__1::basic_string.8"* %103 to i8**
  %176 = load i8*, i8** %175, align 8
  tail call void @_ZdlPv(i8* %176) #18
  br label %177

177:                                              ; preds = %131, %167, %169, %174
  %178 = bitcast %"class.std::__1::basic_string.8"* %103 to i8*
  %179 = bitcast %"class.std::__1::basic_string.8"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false) #16
  %180 = bitcast %"class.std::__1::basic_string.8"* %104 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %180, i64 0, i32 1, i32 1
  store i8 0, i8* %181, align 1
  %182 = bitcast %"class.std::__1::basic_string.8"* %104 to i16*
  store i16 0, i16* %182, align 2
  %183 = icmp eq %"class.std::__1::basic_string.8"* %104, %2
  br i1 %183, label %184, label %102

184:                                              ; preds = %167, %177, %145, %138, %92
  %185 = phi %"class.std::__1::basic_string.8"* [ %2, %92 ], [ %103, %138 ], [ %103, %167 ], [ %2, %177 ], [ %103, %145 ]
  %186 = bitcast %"class.std::__1::basic_string.8"* %185 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %186, i64 0, i32 1, i32 1
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = bitcast %"class.std::__1::basic_string.8"* %185 to i8**
  %192 = load i8*, i8** %191, align 8
  tail call void @_ZdlPv(i8* %192) #18
  br label %193

193:                                              ; preds = %184, %190
  %194 = bitcast %"class.std::__1::basic_string.8"* %185 to i8*
  %195 = bitcast %"class.std::__1::basic_string.8"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #16
  %196 = bitcast %"class.std::__1::basic_string.8"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %196, i64 0, i32 1, i32 1
  store i8 0, i8* %197, align 1
  %198 = bitcast %"class.std::__1::basic_string.8"* %14 to i16*
  store i16 0, i16* %198, align 2
  br label %202

199:                                              ; preds = %56, %63, %90
  %200 = bitcast %"class.std::__1::basic_string.8"* %17 to i8*
  %201 = bitcast %"class.std::__1::basic_string.8"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 24, i1 false) #16
  br label %202

202:                                              ; preds = %199, %193
  %203 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %14, i64 1
  %204 = icmp eq %"class.std::__1::basic_string.8"* %203, %1
  br i1 %204, label %205, label %13

205:                                              ; preds = %202, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__122__merge_move_constructIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EESD_EEvT0_SE_T1_SF_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %5, i64 0, i32 0
  br label %22

10:                                               ; preds = %120, %6
  %11 = phi %"class.std::__1::basic_string.8"* [ %2, %6 ], [ %121, %120 ]
  %12 = phi %"class.std::__1::basic_string.8"* [ %4, %6 ], [ %123, %120 ]
  %13 = icmp eq %"class.std::__1::basic_string.8"* %11, %3
  br i1 %13, label %125, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"class.std::__1::basic_string.8"* [ %20, %14 ], [ %12, %10 ]
  %16 = phi %"class.std::__1::basic_string.8"* [ %19, %14 ], [ %11, %10 ]
  %17 = bitcast %"class.std::__1::basic_string.8"* %15 to i8*
  %18 = bitcast %"class.std::__1::basic_string.8"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #16
  %19 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %15, i64 1
  %21 = icmp eq %"class.std::__1::basic_string.8"* %19, %3
  br i1 %21, label %125, label %14

22:                                               ; preds = %8, %120
  %23 = phi %"class.std::__1::basic_string.8"* [ %4, %8 ], [ %123, %120 ]
  %24 = phi %"class.std::__1::basic_string.8"* [ %0, %8 ], [ %122, %120 ]
  %25 = phi %"class.std::__1::basic_string.8"* [ %2, %8 ], [ %121, %120 ]
  %26 = icmp eq %"class.std::__1::basic_string.8"* %25, %3
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = icmp eq %"class.std::__1::basic_string.8"* %24, %1
  br i1 %28, label %125, label %29

29:                                               ; preds = %27, %29
  %30 = phi %"class.std::__1::basic_string.8"* [ %35, %29 ], [ %23, %27 ]
  %31 = phi %"class.std::__1::basic_string.8"* [ %34, %29 ], [ %24, %27 ]
  %32 = bitcast %"class.std::__1::basic_string.8"* %30 to i8*
  %33 = bitcast %"class.std::__1::basic_string.8"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #16
  %34 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %31, i64 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %30, i64 1
  %36 = icmp eq %"class.std::__1::basic_string.8"* %34, %1
  br i1 %36, label %125, label %29

37:                                               ; preds = %22
  %38 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %9, align 8
  %39 = icmp eq %"class.icu_69::Collator"* %38, null
  br i1 %39, label %40, label %83

40:                                               ; preds = %37
  %41 = bitcast %"class.std::__1::basic_string.8"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.std::__1::basic_string.8"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp ult i64 %48, %56
  %58 = select i1 %57, i64 %48, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %110, label %60

60:                                               ; preds = %40
  %61 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string.8"* %25 to i16*
  %64 = select i1 %52, i16* %62, i16* %63
  %65 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i16*, i16** %65, align 8
  %67 = bitcast %"class.std::__1::basic_string.8"* %24 to i16*
  %68 = select i1 %44, i16* %66, i16* %67
  br label %69

69:                                               ; preds = %78, %60
  %70 = phi i64 [ %79, %78 ], [ %58, %60 ]
  %71 = phi i16* [ %81, %78 ], [ %68, %60 ]
  %72 = phi i16* [ %80, %78 ], [ %64, %60 ]
  %73 = load i16, i16* %72, align 2
  %74 = load i16, i16* %71, align 2
  %75 = icmp ult i16 %73, %74
  br i1 %75, label %112, label %76

76:                                               ; preds = %69
  %77 = icmp ult i16 %74, %73
  br i1 %77, label %116, label %78

78:                                               ; preds = %76
  %79 = add i64 %70, -1
  %80 = getelementptr inbounds i16, i16* %72, i64 1
  %81 = getelementptr inbounds i16, i16* %71, i64 1
  %82 = icmp eq i64 %79, 0
  br i1 %82, label %110, label %69

83:                                               ; preds = %37
  %84 = bitcast %"class.std::__1::basic_string.8"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i16*, i16** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string.8"* %25 to i16*
  %91 = select i1 %87, i16* %89, i16* %90
  %92 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = zext i8 %86 to i64
  %95 = select i1 %87, i64 %93, i64 %94
  %96 = bitcast %"class.std::__1::basic_string.8"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string.8"* %24 to i16*
  %103 = select i1 %99, i16* %101, i16* %102
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %98 to i64
  %107 = select i1 %99, i64 %105, i64 %106
  %108 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %38, i16* %91, i64 %95, i16* %103, i64 %107) #16
  %109 = icmp eq i32 %108, -1
  br i1 %109, label %112, label %116

110:                                              ; preds = %78, %40
  %111 = icmp ult i64 %56, %48
  br i1 %111, label %112, label %116

112:                                              ; preds = %69, %83, %110
  %113 = bitcast %"class.std::__1::basic_string.8"* %23 to i8*
  %114 = bitcast %"class.std::__1::basic_string.8"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #16
  %115 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 1
  br label %120

116:                                              ; preds = %76, %83, %110
  %117 = bitcast %"class.std::__1::basic_string.8"* %23 to i8*
  %118 = bitcast %"class.std::__1::basic_string.8"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #16
  %119 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 1
  br label %120

120:                                              ; preds = %112, %116
  %121 = phi %"class.std::__1::basic_string.8"* [ %115, %112 ], [ %25, %116 ]
  %122 = phi %"class.std::__1::basic_string.8"* [ %24, %112 ], [ %119, %116 ]
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %23, i64 1
  %124 = icmp eq %"class.std::__1::basic_string.8"* %122, %1
  br i1 %124, label %10, label %22

125:                                              ; preds = %29, %14, %27, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_11__wrap_iterIPS8_EEEEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8), i64, i64, %"class.std::__1::basic_string.8"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator.109", align 8
  %9 = alloca %"class.std::__1::reverse_iterator.109", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::basic_string.8"* %1, %2
  br i1 %14, label %28, label %36

15:                                               ; preds = %18, %11
  %16 = phi i64 [ 0, %11 ], [ %24, %18 ]
  %17 = phi %"class.std::__1::basic_string.8"* [ %6, %11 ], [ %26, %18 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_NS_11__wrap_iterISB_EESD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::basic_string.8"* %6, %"class.std::__1::basic_string.8"* %17, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %2, %"class.std::__1::basic_string.8"* %0, %"class.l10n_util::StringComparator"* dereferenceable(8) %3)
  br label %46

18:                                               ; preds = %11, %18
  %19 = phi %"class.std::__1::basic_string.8"* [ %26, %18 ], [ %6, %11 ]
  %20 = phi %"class.std::__1::basic_string.8"* [ %25, %18 ], [ %0, %11 ]
  %21 = phi i64 [ %24, %18 ], [ 0, %11 ]
  %22 = bitcast %"class.std::__1::basic_string.8"* %19 to i8*
  %23 = bitcast %"class.std::__1::basic_string.8"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #16
  %24 = add nuw nsw i64 %21, 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %20, i64 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %19, i64 1
  %27 = icmp eq %"class.std::__1::basic_string.8"* %25, %1
  br i1 %27, label %15, label %18

28:                                               ; preds = %36, %13
  %29 = phi i64 [ 0, %13 ], [ %42, %36 ]
  %30 = phi %"class.std::__1::basic_string.8"* [ %6, %13 ], [ %44, %36 ]
  %31 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string.8"* %2, %"class.std::__1::basic_string.8"** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %9, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string.8"* %2, %"class.std::__1::basic_string.8"** %34, align 8
  %35 = ptrtoint %"class.l10n_util::StringComparator"* %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_16reverse_iteratorIPS9_EENSD_INS_11__wrap_iterISE_EEEESI_EEvT0_SJ_T1_SK_T2_T_(%"class.std::__1::basic_string.8"* %30, %"class.std::__1::basic_string.8"* %30, %"class.std::__1::basic_string.8"* %6, %"class.std::__1::basic_string.8"* %6, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::reverse_iterator.109"* nonnull byval(%"class.std::__1::reverse_iterator.109") align 8 %8, %"class.std::__1::reverse_iterator.109"* nonnull byval(%"class.std::__1::reverse_iterator.109") align 8 %9, i64 %35)
  br label %46

36:                                               ; preds = %13, %36
  %37 = phi %"class.std::__1::basic_string.8"* [ %44, %36 ], [ %6, %13 ]
  %38 = phi %"class.std::__1::basic_string.8"* [ %43, %36 ], [ %1, %13 ]
  %39 = phi i64 [ %42, %36 ], [ 0, %13 ]
  %40 = bitcast %"class.std::__1::basic_string.8"* %37 to i8*
  %41 = bitcast %"class.std::__1::basic_string.8"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #16
  %42 = add nuw nsw i64 %39, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %38, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %37, i64 1
  %45 = icmp eq %"class.std::__1::basic_string.8"* %43, %2
  br i1 %45, label %28, label %36

46:                                               ; preds = %28, %15
  %47 = phi i64 [ %29, %28 ], [ %16, %15 ]
  %48 = icmp eq %"class.std::__1::basic_string.8"* %6, null
  %49 = icmp eq i64 %47, 0
  %50 = or i1 %48, %49
  br i1 %50, label %67, label %51

51:                                               ; preds = %46, %62
  %52 = phi i64 [ %63, %62 ], [ %47, %46 ]
  %53 = phi i64 [ %64, %62 ], [ 0, %46 ]
  %54 = phi %"class.std::__1::basic_string.8"* [ %65, %62 ], [ %6, %46 ]
  %55 = bitcast %"class.std::__1::basic_string.8"* %54 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = bitcast %"class.std::__1::basic_string.8"* %54 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i64 [ %52, %51 ], [ %47, %59 ]
  %64 = add nuw i64 %53, 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %54, i64 1
  %66 = icmp ult i64 %64, %63
  br i1 %66, label %51, label %67

67:                                               ; preds = %62, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_NS_11__wrap_iterISB_EESD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string.8"* %0, %1
  br i1 %7, label %144, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %5, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %139
  %11 = phi %"class.std::__1::basic_string.8"* [ %0, %8 ], [ %141, %139 ]
  %12 = phi %"class.std::__1::basic_string.8"* [ %4, %8 ], [ %142, %139 ]
  %13 = phi %"class.std::__1::basic_string.8"* [ %2, %8 ], [ %140, %139 ]
  %14 = icmp eq %"class.std::__1::basic_string.8"* %13, %3
  br i1 %14, label %15, label %34

15:                                               ; preds = %10, %25
  %16 = phi %"class.std::__1::basic_string.8"* [ %32, %25 ], [ %12, %10 ]
  %17 = phi %"class.std::__1::basic_string.8"* [ %31, %25 ], [ %11, %10 ]
  %18 = bitcast %"class.std::__1::basic_string.8"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::basic_string.8"* %16 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %22, %15
  %26 = bitcast %"class.std::__1::basic_string.8"* %16 to i8*
  %27 = bitcast %"class.std::__1::basic_string.8"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #16
  %28 = bitcast %"class.std::__1::basic_string.8"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  store i8 0, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string.8"* %17 to i16*
  store i16 0, i16* %30, align 2
  %31 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %17, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %16, i64 1
  %33 = icmp eq %"class.std::__1::basic_string.8"* %31, %1
  br i1 %33, label %144, label %15

34:                                               ; preds = %10
  %35 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %9, align 8
  %36 = icmp eq %"class.icu_69::Collator"* %35, null
  br i1 %36, label %37, label %80

37:                                               ; preds = %34
  %38 = bitcast %"class.std::__1::basic_string.8"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = bitcast %"class.std::__1::basic_string.8"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp ult i64 %45, %53
  %55 = select i1 %54, i64 %45, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %107, label %57

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string.8"* %13 to i16*
  %61 = select i1 %49, i16* %59, i16* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.8"* %11 to i16*
  %65 = select i1 %41, i16* %63, i16* %64
  br label %66

66:                                               ; preds = %75, %57
  %67 = phi i64 [ %76, %75 ], [ %55, %57 ]
  %68 = phi i16* [ %78, %75 ], [ %65, %57 ]
  %69 = phi i16* [ %77, %75 ], [ %61, %57 ]
  %70 = load i16, i16* %69, align 2
  %71 = load i16, i16* %68, align 2
  %72 = icmp ult i16 %70, %71
  br i1 %72, label %109, label %73

73:                                               ; preds = %66
  %74 = icmp ult i16 %71, %70
  br i1 %74, label %124, label %75

75:                                               ; preds = %73
  %76 = add i64 %67, -1
  %77 = getelementptr inbounds i16, i16* %69, i64 1
  %78 = getelementptr inbounds i16, i16* %68, i64 1
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %107, label %66

80:                                               ; preds = %34
  %81 = bitcast %"class.std::__1::basic_string.8"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string.8"* %13 to i16*
  %88 = select i1 %84, i16* %86, i16* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  %93 = bitcast %"class.std::__1::basic_string.8"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %93, i64 0, i32 1, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i16*, i16** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string.8"* %11 to i16*
  %100 = select i1 %96, i16* %98, i16* %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %95 to i64
  %104 = select i1 %96, i64 %102, i64 %103
  %105 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %35, i16* %88, i64 %92, i16* %100, i64 %104) #16
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %109, label %124

107:                                              ; preds = %75, %37
  %108 = icmp ult i64 %53, %45
  br i1 %108, label %109, label %124

109:                                              ; preds = %66, %80, %107
  %110 = bitcast %"class.std::__1::basic_string.8"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::basic_string.8"* %12 to i8**
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %109, %114
  %118 = bitcast %"class.std::__1::basic_string.8"* %12 to i8*
  %119 = bitcast %"class.std::__1::basic_string.8"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 24, i1 false) #16
  %120 = bitcast %"class.std::__1::basic_string.8"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %120, i64 0, i32 1, i32 1
  store i8 0, i8* %121, align 1
  %122 = bitcast %"class.std::__1::basic_string.8"* %13 to i16*
  store i16 0, i16* %122, align 2
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %13, i64 1
  br label %139

124:                                              ; preds = %73, %80, %107
  %125 = bitcast %"class.std::__1::basic_string.8"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %124
  %130 = bitcast %"class.std::__1::basic_string.8"* %12 to i8**
  %131 = load i8*, i8** %130, align 8
  tail call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %124, %129
  %133 = bitcast %"class.std::__1::basic_string.8"* %12 to i8*
  %134 = bitcast %"class.std::__1::basic_string.8"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 24, i1 false) #16
  %135 = bitcast %"class.std::__1::basic_string.8"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  store i8 0, i8* %136, align 1
  %137 = bitcast %"class.std::__1::basic_string.8"* %11 to i16*
  store i16 0, i16* %137, align 2
  %138 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %11, i64 1
  br label %139

139:                                              ; preds = %117, %132
  %140 = phi %"class.std::__1::basic_string.8"* [ %123, %117 ], [ %13, %132 ]
  %141 = phi %"class.std::__1::basic_string.8"* [ %11, %117 ], [ %138, %132 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %12, i64 1
  %143 = icmp eq %"class.std::__1::basic_string.8"* %141, %1
  br i1 %143, label %144, label %10

144:                                              ; preds = %139, %25, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEEENS_16reverse_iteratorIPS9_EENSD_INS_11__wrap_iterISE_EEEESI_EEvT0_SJ_T1_SK_T2_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::reverse_iterator.109"* byval(%"class.std::__1::reverse_iterator.109") align 8, %"class.std::__1::reverse_iterator.109"* byval(%"class.std::__1::reverse_iterator.109") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = icmp eq %"class.std::__1::basic_string.8"* %1, %3
  br i1 %10, label %152, label %11

11:                                               ; preds = %9
  %12 = inttoptr i64 %8 to %"class.l10n_util::StringComparator"*
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %12, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::reverse_iterator.109", %"class.std::__1::reverse_iterator.109"* %7, i64 0, i32 1, i32 0
  br label %16

16:                                               ; preds = %11, %139
  %17 = phi %"class.std::__1::basic_string.8"* [ %1, %11 ], [ %143, %139 ]
  %18 = phi %"class.std::__1::basic_string.8"* [ %5, %11 ], [ %142, %139 ]
  %19 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %13, align 8
  %20 = icmp eq %"class.std::__1::basic_string.8"* %18, %19
  br i1 %20, label %21, label %42

21:                                               ; preds = %16
  %22 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %15, align 8
  br label %23

23:                                               ; preds = %21, %35
  %24 = phi %"class.std::__1::basic_string.8"* [ %26, %35 ], [ %17, %21 ]
  %25 = phi %"class.std::__1::basic_string.8"* [ %27, %35 ], [ %22, %21 ]
  %26 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %24, i64 -1
  %27 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %25, i64 -1
  %28 = bitcast %"class.std::__1::basic_string.8"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::basic_string.8"* %27 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %32, %23
  %36 = bitcast %"class.std::__1::basic_string.8"* %27 to i8*
  %37 = bitcast %"class.std::__1::basic_string.8"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #16
  %38 = bitcast %"class.std::__1::basic_string.8"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string.8"* %26 to i16*
  store i16 0, i16* %40, align 2
  %41 = icmp eq %"class.std::__1::basic_string.8"* %26, %3
  br i1 %41, label %152, label %23

42:                                               ; preds = %16
  %43 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %18, i64 -1
  %44 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %17, i64 -1
  %45 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %14, align 8
  %46 = icmp eq %"class.icu_69::Collator"* %45, null
  br i1 %46, label %47, label %90

47:                                               ; preds = %42
  %48 = bitcast %"class.std::__1::basic_string.8"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %18, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  %56 = bitcast %"class.std::__1::basic_string.8"* %44 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %17, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = icmp ult i64 %55, %63
  %65 = select i1 %64, i64 %55, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %117, label %67

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string.8"* %44 to i16*
  %71 = select i1 %59, i16* %69, i16* %70
  %72 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = bitcast %"class.std::__1::basic_string.8"* %43 to i16*
  %75 = select i1 %51, i16* %73, i16* %74
  br label %76

76:                                               ; preds = %85, %67
  %77 = phi i64 [ %86, %85 ], [ %65, %67 ]
  %78 = phi i16* [ %88, %85 ], [ %75, %67 ]
  %79 = phi i16* [ %87, %85 ], [ %71, %67 ]
  %80 = load i16, i16* %79, align 2
  %81 = load i16, i16* %78, align 2
  %82 = icmp ult i16 %80, %81
  br i1 %82, label %119, label %83

83:                                               ; preds = %76
  %84 = icmp ult i16 %81, %80
  br i1 %84, label %129, label %85

85:                                               ; preds = %83
  %86 = add i64 %77, -1
  %87 = getelementptr inbounds i16, i16* %79, i64 1
  %88 = getelementptr inbounds i16, i16* %78, i64 1
  %89 = icmp eq i64 %86, 0
  br i1 %89, label %117, label %76

90:                                               ; preds = %42
  %91 = bitcast %"class.std::__1::basic_string.8"* %44 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string.8"* %44 to i16*
  %98 = select i1 %94, i16* %96, i16* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %17, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %93 to i64
  %102 = select i1 %94, i64 %100, i64 %101
  %103 = bitcast %"class.std::__1::basic_string.8"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i16*, i16** %107, align 8
  %109 = bitcast %"class.std::__1::basic_string.8"* %43 to i16*
  %110 = select i1 %106, i16* %108, i16* %109
  %111 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %18, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %105 to i64
  %114 = select i1 %106, i64 %112, i64 %113
  %115 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %45, i16* %98, i64 %102, i16* %110, i64 %114) #16
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %119, label %129

117:                                              ; preds = %85, %47
  %118 = icmp ult i64 %63, %55
  br i1 %118, label %119, label %129

119:                                              ; preds = %76, %90, %117
  %120 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %15, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %120, i64 -1
  %122 = bitcast %"class.std::__1::basic_string.8"* %121 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %139

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::basic_string.8"* %121 to i8**
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #18
  br label %139

129:                                              ; preds = %83, %90, %117
  %130 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %15, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 -1
  %132 = bitcast %"class.std::__1::basic_string.8"* %131 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %129
  %137 = bitcast %"class.std::__1::basic_string.8"* %131 to i8**
  %138 = load i8*, i8** %137, align 8
  tail call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %136, %129, %126, %119
  %140 = phi %"class.std::__1::basic_string.8"* [ %121, %119 ], [ %121, %126 ], [ %131, %129 ], [ %131, %136 ]
  %141 = phi %"class.std::__1::basic_string.8"* [ %43, %119 ], [ %43, %126 ], [ %44, %129 ], [ %44, %136 ]
  %142 = phi %"class.std::__1::basic_string.8"* [ %43, %119 ], [ %43, %126 ], [ %18, %129 ], [ %18, %136 ]
  %143 = phi %"class.std::__1::basic_string.8"* [ %17, %119 ], [ %17, %126 ], [ %44, %129 ], [ %44, %136 ]
  %144 = bitcast %"class.std::__1::basic_string.8"* %140 to i8*
  %145 = bitcast %"class.std::__1::basic_string.8"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false) #16
  %146 = bitcast %"class.std::__1::basic_string.8"* %141 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  store i8 0, i8* %147, align 1
  %148 = bitcast %"class.std::__1::basic_string.8"* %141 to i16*
  store i16 0, i16* %148, align 2
  %149 = load %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"** %15, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %149, i64 -1
  store %"class.std::__1::basic_string.8"* %150, %"class.std::__1::basic_string.8"** %15, align 8
  %151 = icmp eq %"class.std::__1::basic_string.8"* %143, %3
  br i1 %151, label %152, label %16

152:                                              ; preds = %139, %35, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %907, %3
  %6 = phi %"class.std::__1::basic_string.8"* [ %1, %3 ], [ %808, %907 ]
  %7 = phi %"class.std::__1::basic_string.8"* [ %0, %3 ], [ %29, %907 ]
  %8 = ptrtoint %"class.std::__1::basic_string.8"* %6 to i64
  %9 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -2
  %11 = bitcast %"class.std::__1::basic_string.8"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string.8"* %9 to i16*
  %15 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string.8"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string.8"* %9 to i16*
  %21 = bitcast %"class.std::__1::basic_string.8"* %9 to i8*
  %22 = bitcast %"class.std::__1::basic_string.8"* %9 to i64*
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = ptrtoint %"class.std::__1::basic_string.8"* %6 to i64
  br label %26

26:                                               ; preds = %918, %5
  %27 = phi %"class.std::__1::basic_string.8"* [ %7, %5 ], [ %919, %918 ]
  br label %28

28:                                               ; preds = %543, %26
  %29 = phi %"class.std::__1::basic_string.8"* [ %27, %26 ], [ %407, %543 ]
  %30 = ptrtoint %"class.std::__1::basic_string.8"* %29 to i64
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 24
  switch i64 %32, label %137 [
    i64 0, label %922
    i64 1, label %922
    i64 2, label %33
    i64 3, label %122
    i64 4, label %126
    i64 5, label %131
  ]

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1
  %35 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %36 = icmp eq %"class.icu_69::Collator"* %35, null
  br i1 %36, label %37, label %80

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = bitcast %"class.std::__1::basic_string.8"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp ult i64 %45, %53
  %55 = select i1 %54, i64 %45, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %109, label %57

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string.8"* %34 to i16*
  %61 = select i1 %49, i16* %59, i16* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %65 = select i1 %41, i16* %63, i16* %64
  br label %66

66:                                               ; preds = %75, %57
  %67 = phi i64 [ %76, %75 ], [ %55, %57 ]
  %68 = phi i16* [ %78, %75 ], [ %65, %57 ]
  %69 = phi i16* [ %77, %75 ], [ %61, %57 ]
  %70 = load i16, i16* %69, align 2
  %71 = load i16, i16* %68, align 2
  %72 = icmp ult i16 %70, %71
  br i1 %72, label %111, label %73

73:                                               ; preds = %66
  %74 = icmp ult i16 %71, %70
  br i1 %74, label %922, label %75

75:                                               ; preds = %73
  %76 = add i64 %67, -1
  %77 = getelementptr inbounds i16, i16* %69, i64 1
  %78 = getelementptr inbounds i16, i16* %68, i64 1
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %109, label %66

80:                                               ; preds = %33
  %81 = bitcast %"class.std::__1::basic_string.8"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string.8"* %34 to i16*
  %88 = select i1 %84, i16* %86, i16* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  %93 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %93, i64 0, i32 1, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i16*, i16** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %100 = select i1 %96, i16* %98, i16* %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %95 to i64
  %104 = select i1 %96, i64 %102, i64 %103
  %105 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %35, i16* %88, i64 %92, i16* %100, i64 %104) #16
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %107, label %922

107:                                              ; preds = %80
  %108 = load i64, i64* %101, align 8
  br label %111

109:                                              ; preds = %75, %37
  %110 = icmp ult i64 %53, %45
  br i1 %110, label %111, label %922

111:                                              ; preds = %66, %107, %109
  %112 = phi i64 [ %108, %107 ], [ %43, %109 ], [ %43, %66 ]
  %113 = bitcast %"class.std::__1::basic_string.8"* %29 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::basic_string.8"* %29 to i8*
  %118 = bitcast %"class.std::__1::basic_string.8"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #16
  %119 = bitcast %"class.std::__1::basic_string.8"* %34 to i64*
  store i64 %114, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %112, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %116, i64* %121, align 8
  br label %922

122:                                              ; preds = %28
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 1
  %124 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1
  %125 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %123, %"class.std::__1::basic_string.8"* %124, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %922

126:                                              ; preds = %28
  %127 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 1
  %128 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 2
  %129 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1
  %130 = tail call i32 @_ZNSt3__17__sort4IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %127, %"class.std::__1::basic_string.8"* %128, %"class.std::__1::basic_string.8"* %129, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %922

131:                                              ; preds = %28
  %132 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 1
  %133 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 2
  %134 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 3
  %135 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %6, i64 -1
  %136 = tail call i32 @_ZNSt3__17__sort5IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %132, %"class.std::__1::basic_string.8"* %133, %"class.std::__1::basic_string.8"* %134, %"class.std::__1::basic_string.8"* %135, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %922

137:                                              ; preds = %28
  %138 = icmp slt i64 %31, 168
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  tail call void @_ZNSt3__118__insertion_sort_3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %6, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %922

140:                                              ; preds = %137
  %141 = icmp sgt i64 %31, 23976
  %142 = udiv i64 %31, 48
  %143 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 %142
  br i1 %141, label %144, label %149

144:                                              ; preds = %140
  %145 = udiv i64 %31, 96
  %146 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 %145
  %147 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %143, i64 %145
  %148 = tail call i32 @_ZNSt3__17__sort5IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %146, %"class.std::__1::basic_string.8"* %143, %"class.std::__1::basic_string.8"* %147, %"class.std::__1::basic_string.8"* %9, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %151

149:                                              ; preds = %140
  %150 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %143, %"class.std::__1::basic_string.8"* %9, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %151

151:                                              ; preds = %149, %144
  %152 = phi i32 [ %148, %144 ], [ %150, %149 ]
  %153 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %154 = icmp eq %"class.icu_69::Collator"* %153, null
  br i1 %154, label %155, label %200

155:                                              ; preds = %151
  %156 = bitcast %"class.std::__1::basic_string.8"* %143 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %156, i64 0, i32 1, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  %160 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 %142, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = zext i8 %158 to i64
  %163 = select i1 %159, i64 %161, i64 %162
  %164 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %164, i64 0, i32 1, i32 1
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = load i64, i64* %168, align 8
  %170 = zext i8 %166 to i64
  %171 = select i1 %167, i64 %169, i64 %170
  %172 = icmp ult i64 %163, %171
  %173 = select i1 %172, i64 %163, i64 %171
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %198, label %175

175:                                              ; preds = %155
  %176 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i16*, i16** %176, align 8
  %178 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %179 = select i1 %167, i16* %177, i16* %178
  %180 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i16*, i16** %180, align 8
  %182 = bitcast %"class.std::__1::basic_string.8"* %143 to i16*
  %183 = select i1 %159, i16* %181, i16* %182
  br label %184

184:                                              ; preds = %193, %175
  %185 = phi i64 [ %194, %193 ], [ %173, %175 ]
  %186 = phi i16* [ %196, %193 ], [ %183, %175 ]
  %187 = phi i16* [ %195, %193 ], [ %179, %175 ]
  %188 = load i16, i16* %187, align 2
  %189 = load i16, i16* %186, align 2
  %190 = icmp ult i16 %188, %189
  br i1 %190, label %637, label %191

191:                                              ; preds = %184
  %192 = icmp ult i16 %189, %188
  br i1 %192, label %227, label %193

193:                                              ; preds = %191
  %194 = add i64 %185, -1
  %195 = getelementptr inbounds i16, i16* %187, i64 1
  %196 = getelementptr inbounds i16, i16* %186, i64 1
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %184

198:                                              ; preds = %193, %155
  %199 = icmp ult i64 %171, %163
  br i1 %199, label %637, label %227

200:                                              ; preds = %151
  %201 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  %205 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %208 = select i1 %204, i16* %206, i16* %207
  %209 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = zext i8 %203 to i64
  %212 = select i1 %204, i64 %210, i64 %211
  %213 = bitcast %"class.std::__1::basic_string.8"* %143 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %213, i64 0, i32 1, i32 1
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  %217 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i16*, i16** %217, align 8
  %219 = bitcast %"class.std::__1::basic_string.8"* %143 to i16*
  %220 = select i1 %216, i16* %218, i16* %219
  %221 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 %142, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = zext i8 %215 to i64
  %224 = select i1 %216, i64 %222, i64 %223
  %225 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %153, i16* %208, i64 %212, i16* %220, i64 %224) #16
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %637, label %227

227:                                              ; preds = %191, %200, %198
  %228 = icmp eq %"class.std::__1::basic_string.8"* %29, %10
  br i1 %228, label %235, label %229

229:                                              ; preds = %227
  %230 = bitcast %"class.std::__1::basic_string.8"* %143 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %230, i64 0, i32 1, i32 1
  %232 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = bitcast %"class.std::__1::basic_string.8"* %143 to i16*
  %234 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 %142, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %555

235:                                              ; preds = %622, %227
  %236 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 1
  %237 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %238 = icmp eq %"class.icu_69::Collator"* %237, null
  br i1 %238, label %239, label %279

239:                                              ; preds = %235
  %240 = load i8, i8* %17, align 1
  %241 = icmp slt i8 %240, 0
  %242 = load i64, i64* %18, align 8
  %243 = zext i8 %240 to i64
  %244 = select i1 %241, i64 %242, i64 %243
  %245 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %245, i64 0, i32 1, i32 1
  %247 = load i8, i8* %246, align 1
  %248 = icmp slt i8 %247, 0
  %249 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = zext i8 %247 to i64
  %252 = select i1 %248, i64 %250, i64 %251
  %253 = icmp ult i64 %244, %252
  %254 = select i1 %253, i64 %244, i64 %252
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %277, label %256

256:                                              ; preds = %239
  %257 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i16*, i16** %257, align 8
  %259 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %260 = select i1 %248, i16* %258, i16* %259
  %261 = load i16*, i16** %19, align 8
  %262 = select i1 %241, i16* %261, i16* %20
  br label %263

263:                                              ; preds = %272, %256
  %264 = phi i64 [ %273, %272 ], [ %254, %256 ]
  %265 = phi i16* [ %275, %272 ], [ %262, %256 ]
  %266 = phi i16* [ %274, %272 ], [ %260, %256 ]
  %267 = load i16, i16* %266, align 2
  %268 = load i16, i16* %265, align 2
  %269 = icmp ult i16 %267, %268
  br i1 %269, label %394, label %270

270:                                              ; preds = %263
  %271 = icmp ult i16 %268, %267
  br i1 %271, label %301, label %272

272:                                              ; preds = %270
  %273 = add i64 %264, -1
  %274 = getelementptr inbounds i16, i16* %266, i64 1
  %275 = getelementptr inbounds i16, i16* %265, i64 1
  %276 = icmp eq i64 %273, 0
  br i1 %276, label %277, label %263

277:                                              ; preds = %272, %239
  %278 = icmp ult i64 %252, %244
  br i1 %278, label %394, label %301

279:                                              ; preds = %235
  %280 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %280, i64 0, i32 1, i32 1
  %282 = load i8, i8* %281, align 1
  %283 = icmp slt i8 %282, 0
  %284 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load i16*, i16** %284, align 8
  %286 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %287 = select i1 %283, i16* %285, i16* %286
  %288 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = zext i8 %282 to i64
  %291 = select i1 %283, i64 %289, i64 %290
  %292 = load i8, i8* %12, align 1
  %293 = icmp slt i8 %292, 0
  %294 = load i16*, i16** %13, align 8
  %295 = select i1 %293, i16* %294, i16* %14
  %296 = load i64, i64* %15, align 8
  %297 = zext i8 %292 to i64
  %298 = select i1 %293, i64 %296, i64 %297
  %299 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %237, i16* %287, i64 %291, i16* %295, i64 %298) #16
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %394, label %301

301:                                              ; preds = %270, %279, %277
  %302 = icmp eq %"class.std::__1::basic_string.8"* %236, %9
  br i1 %302, label %922, label %303

303:                                              ; preds = %301
  %304 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %304, i64 0, i32 1, i32 1
  %306 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %308 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %309

309:                                              ; preds = %303, %391
  %310 = phi %"class.std::__1::basic_string.8"* [ %236, %303 ], [ %392, %391 ]
  %311 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %312 = icmp eq %"class.icu_69::Collator"* %311, null
  br i1 %312, label %313, label %351

313:                                              ; preds = %309
  %314 = bitcast %"class.std::__1::basic_string.8"* %310 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %314, i64 0, i32 1, i32 1
  %316 = load i8, i8* %315, align 1
  %317 = icmp slt i8 %316, 0
  %318 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %319 = load i64, i64* %318, align 8
  %320 = zext i8 %316 to i64
  %321 = select i1 %317, i64 %319, i64 %320
  %322 = load i8, i8* %305, align 1
  %323 = icmp slt i8 %322, 0
  %324 = load i64, i64* %308, align 8
  %325 = zext i8 %322 to i64
  %326 = select i1 %323, i64 %324, i64 %325
  %327 = icmp ult i64 %321, %326
  %328 = select i1 %327, i64 %321, i64 %326
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %376, label %330

330:                                              ; preds = %313
  %331 = load i16*, i16** %306, align 8
  %332 = select i1 %323, i16* %331, i16* %307
  %333 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load i16*, i16** %333, align 8
  %335 = bitcast %"class.std::__1::basic_string.8"* %310 to i16*
  %336 = select i1 %317, i16* %334, i16* %335
  br label %337

337:                                              ; preds = %346, %330
  %338 = phi i64 [ %347, %346 ], [ %328, %330 ]
  %339 = phi i16* [ %349, %346 ], [ %336, %330 ]
  %340 = phi i16* [ %348, %346 ], [ %332, %330 ]
  %341 = load i16, i16* %340, align 2
  %342 = load i16, i16* %339, align 2
  %343 = icmp ult i16 %341, %342
  br i1 %343, label %382, label %344

344:                                              ; preds = %337
  %345 = icmp ult i16 %342, %341
  br i1 %345, label %391, label %346

346:                                              ; preds = %344
  %347 = add i64 %338, -1
  %348 = getelementptr inbounds i16, i16* %340, i64 1
  %349 = getelementptr inbounds i16, i16* %339, i64 1
  %350 = icmp eq i64 %347, 0
  br i1 %350, label %376, label %337

351:                                              ; preds = %309
  %352 = load i8, i8* %305, align 1
  %353 = icmp slt i8 %352, 0
  %354 = load i16*, i16** %306, align 8
  %355 = select i1 %353, i16* %354, i16* %307
  %356 = load i64, i64* %308, align 8
  %357 = zext i8 %352 to i64
  %358 = select i1 %353, i64 %356, i64 %357
  %359 = bitcast %"class.std::__1::basic_string.8"* %310 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %360 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %359, i64 0, i32 1, i32 1
  %361 = load i8, i8* %360, align 1
  %362 = icmp slt i8 %361, 0
  %363 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load i16*, i16** %363, align 8
  %365 = bitcast %"class.std::__1::basic_string.8"* %310 to i16*
  %366 = select i1 %362, i16* %364, i16* %365
  %367 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = zext i8 %361 to i64
  %370 = select i1 %362, i64 %368, i64 %369
  %371 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %311, i16* %355, i64 %358, i16* %366, i64 %370) #16
  %372 = icmp eq i32 %371, -1
  br i1 %372, label %373, label %391

373:                                              ; preds = %351
  %374 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %375 = load i64, i64* %374, align 8
  br label %378

376:                                              ; preds = %346, %313
  %377 = icmp ult i64 %326, %321
  br i1 %377, label %378, label %391

378:                                              ; preds = %376, %373
  %379 = phi i64 [ %375, %373 ], [ %319, %376 ]
  %380 = bitcast %"class.std::__1::basic_string.8"* %310 to i64*
  %381 = load i64, i64* %380, align 8
  br label %384

382:                                              ; preds = %337
  %383 = ptrtoint i16* %334 to i64
  br label %384

384:                                              ; preds = %382, %378
  %385 = phi i64 [ %379, %378 ], [ %319, %382 ]
  %386 = phi i64 [ %381, %378 ], [ %383, %382 ]
  %387 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.std::__1::basic_string.8"* %310 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* align 8 %21, i64 24, i1 false) #16
  store i64 %386, i64* %22, align 8
  store i64 %385, i64* %23, align 8
  store i64 %388, i64* %24, align 8
  %390 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 1
  br label %394

391:                                              ; preds = %344, %351, %376
  %392 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %310, i64 1
  %393 = icmp eq %"class.std::__1::basic_string.8"* %392, %9
  br i1 %393, label %922, label %309

394:                                              ; preds = %263, %277, %279, %384
  %395 = phi %"class.std::__1::basic_string.8"* [ %390, %384 ], [ %236, %279 ], [ %236, %277 ], [ %236, %263 ]
  %396 = icmp eq %"class.std::__1::basic_string.8"* %395, %9
  br i1 %396, label %922, label %397

397:                                              ; preds = %394
  %398 = bitcast %"class.std::__1::basic_string.8"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %398, i64 0, i32 1, i32 1
  %400 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = bitcast %"class.std::__1::basic_string.8"* %29 to i16*
  %402 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %403

403:                                              ; preds = %397, %545
  %404 = phi %"class.std::__1::basic_string.8"* [ %554, %545 ], [ %395, %397 ]
  %405 = phi %"class.std::__1::basic_string.8"* [ %477, %545 ], [ %9, %397 ]
  br label %406

406:                                              ; preds = %472, %403
  %407 = phi %"class.std::__1::basic_string.8"* [ %404, %403 ], [ %473, %472 ]
  %408 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %409 = icmp eq %"class.icu_69::Collator"* %408, null
  br i1 %409, label %410, label %450

410:                                              ; preds = %406
  %411 = bitcast %"class.std::__1::basic_string.8"* %407 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %411, i64 0, i32 1, i32 1
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  %415 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %416 = load i64, i64* %415, align 8
  %417 = zext i8 %413 to i64
  %418 = select i1 %414, i64 %416, i64 %417
  %419 = load i8, i8* %399, align 1
  %420 = icmp slt i8 %419, 0
  %421 = load i64, i64* %402, align 8
  %422 = zext i8 %419 to i64
  %423 = select i1 %420, i64 %421, i64 %422
  %424 = icmp ult i64 %418, %423
  %425 = select i1 %424, i64 %418, i64 %423
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %448, label %427

427:                                              ; preds = %410
  %428 = load i16*, i16** %400, align 8
  %429 = select i1 %420, i16* %428, i16* %401
  %430 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = load i16*, i16** %430, align 8
  %432 = bitcast %"class.std::__1::basic_string.8"* %407 to i16*
  %433 = select i1 %414, i16* %431, i16* %432
  br label %434

434:                                              ; preds = %443, %427
  %435 = phi i64 [ %444, %443 ], [ %425, %427 ]
  %436 = phi i16* [ %446, %443 ], [ %433, %427 ]
  %437 = phi i16* [ %445, %443 ], [ %429, %427 ]
  %438 = load i16, i16* %437, align 2
  %439 = load i16, i16* %436, align 2
  %440 = icmp ult i16 %438, %439
  br i1 %440, label %474, label %441

441:                                              ; preds = %434
  %442 = icmp ult i16 %439, %438
  br i1 %442, label %472, label %443

443:                                              ; preds = %441
  %444 = add i64 %435, -1
  %445 = getelementptr inbounds i16, i16* %437, i64 1
  %446 = getelementptr inbounds i16, i16* %436, i64 1
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %434

448:                                              ; preds = %443, %410
  %449 = icmp ult i64 %423, %418
  br i1 %449, label %474, label %472

450:                                              ; preds = %406
  %451 = load i8, i8* %399, align 1
  %452 = icmp slt i8 %451, 0
  %453 = load i16*, i16** %400, align 8
  %454 = select i1 %452, i16* %453, i16* %401
  %455 = load i64, i64* %402, align 8
  %456 = zext i8 %451 to i64
  %457 = select i1 %452, i64 %455, i64 %456
  %458 = bitcast %"class.std::__1::basic_string.8"* %407 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %459 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %458, i64 0, i32 1, i32 1
  %460 = load i8, i8* %459, align 1
  %461 = icmp slt i8 %460, 0
  %462 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load i16*, i16** %462, align 8
  %464 = bitcast %"class.std::__1::basic_string.8"* %407 to i16*
  %465 = select i1 %461, i16* %463, i16* %464
  %466 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8
  %468 = zext i8 %460 to i64
  %469 = select i1 %461, i64 %467, i64 %468
  %470 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %408, i16* %454, i64 %457, i16* %465, i64 %469) #16
  %471 = icmp eq i32 %470, -1
  br i1 %471, label %474, label %472

472:                                              ; preds = %441, %448, %450
  %473 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 1
  br label %406

474:                                              ; preds = %450, %448, %434
  br label %475

475:                                              ; preds = %542, %474
  %476 = phi %"class.std::__1::basic_string.8"* [ %405, %474 ], [ %477, %542 ]
  %477 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %476, i64 -1
  %478 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %479 = icmp eq %"class.icu_69::Collator"* %478, null
  br i1 %479, label %480, label %520

480:                                              ; preds = %475
  %481 = bitcast %"class.std::__1::basic_string.8"* %477 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %482 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %481, i64 0, i32 1, i32 1
  %483 = load i8, i8* %482, align 1
  %484 = icmp slt i8 %483, 0
  %485 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %476, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %486 = load i64, i64* %485, align 8
  %487 = zext i8 %483 to i64
  %488 = select i1 %484, i64 %486, i64 %487
  %489 = load i8, i8* %399, align 1
  %490 = icmp slt i8 %489, 0
  %491 = load i64, i64* %402, align 8
  %492 = zext i8 %489 to i64
  %493 = select i1 %490, i64 %491, i64 %492
  %494 = icmp ult i64 %488, %493
  %495 = select i1 %494, i64 %488, i64 %493
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %518, label %497

497:                                              ; preds = %480
  %498 = load i16*, i16** %400, align 8
  %499 = select i1 %490, i16* %498, i16* %401
  %500 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load i16*, i16** %500, align 8
  %502 = bitcast %"class.std::__1::basic_string.8"* %477 to i16*
  %503 = select i1 %484, i16* %501, i16* %502
  br label %504

504:                                              ; preds = %513, %497
  %505 = phi i64 [ %514, %513 ], [ %495, %497 ]
  %506 = phi i16* [ %516, %513 ], [ %503, %497 ]
  %507 = phi i16* [ %515, %513 ], [ %499, %497 ]
  %508 = load i16, i16* %507, align 2
  %509 = load i16, i16* %506, align 2
  %510 = icmp ult i16 %508, %509
  br i1 %510, label %542, label %511

511:                                              ; preds = %504
  %512 = icmp ult i16 %509, %508
  br i1 %512, label %543, label %513

513:                                              ; preds = %511
  %514 = add i64 %505, -1
  %515 = getelementptr inbounds i16, i16* %507, i64 1
  %516 = getelementptr inbounds i16, i16* %506, i64 1
  %517 = icmp eq i64 %514, 0
  br i1 %517, label %518, label %504

518:                                              ; preds = %513, %480
  %519 = icmp ult i64 %493, %488
  br i1 %519, label %542, label %543

520:                                              ; preds = %475
  %521 = load i8, i8* %399, align 1
  %522 = icmp slt i8 %521, 0
  %523 = load i16*, i16** %400, align 8
  %524 = select i1 %522, i16* %523, i16* %401
  %525 = load i64, i64* %402, align 8
  %526 = zext i8 %521 to i64
  %527 = select i1 %522, i64 %525, i64 %526
  %528 = bitcast %"class.std::__1::basic_string.8"* %477 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %529 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %528, i64 0, i32 1, i32 1
  %530 = load i8, i8* %529, align 1
  %531 = icmp slt i8 %530, 0
  %532 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load i16*, i16** %532, align 8
  %534 = bitcast %"class.std::__1::basic_string.8"* %477 to i16*
  %535 = select i1 %531, i16* %533, i16* %534
  %536 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %476, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %537 = load i64, i64* %536, align 8
  %538 = zext i8 %530 to i64
  %539 = select i1 %531, i64 %537, i64 %538
  %540 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %478, i16* %524, i64 %527, i16* %535, i64 %539) #16
  %541 = icmp eq i32 %540, -1
  br i1 %541, label %542, label %543

542:                                              ; preds = %504, %520, %518
  br label %475

543:                                              ; preds = %518, %520, %511
  %544 = icmp ult %"class.std::__1::basic_string.8"* %407, %477
  br i1 %544, label %545, label %28

545:                                              ; preds = %543
  %546 = bitcast %"class.std::__1::basic_string.8"* %407 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8
  %548 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %549 = load i64, i64* %548, align 8
  %550 = bitcast %"class.std::__1::basic_string.8"* %407 to i8*
  %551 = bitcast %"class.std::__1::basic_string.8"* %477 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %550, i8* align 8 %551, i64 24, i1 false) #16
  %552 = bitcast %"class.std::__1::basic_string.8"* %477 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %552, align 8
  %553 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %476, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %549, i64* %553, align 8
  %554 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %407, i64 1
  br label %403

555:                                              ; preds = %229, %622
  %556 = phi %"class.std::__1::basic_string.8"* [ %10, %229 ], [ %623, %622 ]
  %557 = phi %"class.std::__1::basic_string.8"* [ %9, %229 ], [ %556, %622 ]
  %558 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %559 = icmp eq %"class.icu_69::Collator"* %558, null
  br i1 %559, label %560, label %600

560:                                              ; preds = %555
  %561 = load i8, i8* %231, align 1
  %562 = icmp slt i8 %561, 0
  %563 = load i64, i64* %234, align 8
  %564 = zext i8 %561 to i64
  %565 = select i1 %562, i64 %563, i64 %564
  %566 = bitcast %"class.std::__1::basic_string.8"* %556 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %567 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %566, i64 0, i32 1, i32 1
  %568 = load i8, i8* %567, align 1
  %569 = icmp slt i8 %568, 0
  %570 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %557, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %571 = load i64, i64* %570, align 8
  %572 = zext i8 %568 to i64
  %573 = select i1 %569, i64 %571, i64 %572
  %574 = icmp ult i64 %565, %573
  %575 = select i1 %574, i64 %565, i64 %573
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %598, label %577

577:                                              ; preds = %560
  %578 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %556, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load i16*, i16** %578, align 8
  %580 = bitcast %"class.std::__1::basic_string.8"* %556 to i16*
  %581 = select i1 %569, i16* %579, i16* %580
  %582 = load i16*, i16** %232, align 8
  %583 = select i1 %562, i16* %582, i16* %233
  br label %584

584:                                              ; preds = %593, %577
  %585 = phi i64 [ %594, %593 ], [ %575, %577 ]
  %586 = phi i16* [ %596, %593 ], [ %583, %577 ]
  %587 = phi i16* [ %595, %593 ], [ %581, %577 ]
  %588 = load i16, i16* %587, align 2
  %589 = load i16, i16* %586, align 2
  %590 = icmp ult i16 %588, %589
  br i1 %590, label %625, label %591

591:                                              ; preds = %584
  %592 = icmp ult i16 %589, %588
  br i1 %592, label %622, label %593

593:                                              ; preds = %591
  %594 = add i64 %585, -1
  %595 = getelementptr inbounds i16, i16* %587, i64 1
  %596 = getelementptr inbounds i16, i16* %586, i64 1
  %597 = icmp eq i64 %594, 0
  br i1 %597, label %598, label %584

598:                                              ; preds = %593, %560
  %599 = icmp ult i64 %573, %565
  br i1 %599, label %625, label %622

600:                                              ; preds = %555
  %601 = bitcast %"class.std::__1::basic_string.8"* %556 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %602 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %601, i64 0, i32 1, i32 1
  %603 = load i8, i8* %602, align 1
  %604 = icmp slt i8 %603, 0
  %605 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %556, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load i16*, i16** %605, align 8
  %607 = bitcast %"class.std::__1::basic_string.8"* %556 to i16*
  %608 = select i1 %604, i16* %606, i16* %607
  %609 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %557, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %610 = load i64, i64* %609, align 8
  %611 = zext i8 %603 to i64
  %612 = select i1 %604, i64 %610, i64 %611
  %613 = load i8, i8* %231, align 1
  %614 = icmp slt i8 %613, 0
  %615 = load i16*, i16** %232, align 8
  %616 = select i1 %614, i16* %615, i16* %233
  %617 = load i64, i64* %234, align 8
  %618 = zext i8 %613 to i64
  %619 = select i1 %614, i64 %617, i64 %618
  %620 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %558, i16* %608, i64 %612, i16* %616, i64 %619) #16
  %621 = icmp eq i32 %620, -1
  br i1 %621, label %625, label %622

622:                                              ; preds = %591, %600, %598
  %623 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %556, i64 -1
  %624 = icmp eq %"class.std::__1::basic_string.8"* %29, %623
  br i1 %624, label %235, label %555

625:                                              ; preds = %598, %600, %584
  %626 = bitcast %"class.std::__1::basic_string.8"* %29 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %629 = bitcast i64* %628 to <2 x i64>*
  %630 = load <2 x i64>, <2 x i64>* %629, align 8
  %631 = bitcast %"class.std::__1::basic_string.8"* %29 to i8*
  %632 = bitcast %"class.std::__1::basic_string.8"* %556 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 24, i1 false) #16
  %633 = bitcast %"class.std::__1::basic_string.8"* %556 to i64*
  store i64 %627, i64* %633, align 8
  %634 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %557, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %635 = bitcast i64* %634 to <2 x i64>*
  store <2 x i64> %630, <2 x i64>* %635, align 8
  %636 = add i32 %152, 1
  br label %637

637:                                              ; preds = %198, %200, %184, %625
  %638 = phi i32 [ %636, %625 ], [ %152, %184 ], [ %152, %200 ], [ %152, %198 ]
  %639 = phi %"class.std::__1::basic_string.8"* [ %556, %625 ], [ %9, %184 ], [ %9, %200 ], [ %9, %198 ]
  %640 = ptrtoint %"class.std::__1::basic_string.8"* %29 to i64
  %641 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %29, i64 1
  %642 = icmp ult %"class.std::__1::basic_string.8"* %641, %639
  br i1 %642, label %643, label %805

643:                                              ; preds = %637, %792
  %644 = phi %"class.std::__1::basic_string.8"* [ %803, %792 ], [ %143, %637 ]
  %645 = phi i32 [ %801, %792 ], [ %638, %637 ]
  %646 = phi %"class.std::__1::basic_string.8"* [ %804, %792 ], [ %641, %637 ]
  %647 = phi %"class.std::__1::basic_string.8"* [ %724, %792 ], [ %639, %637 ]
  %648 = bitcast %"class.std::__1::basic_string.8"* %644 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %649 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %648, i64 0, i32 1, i32 1
  %650 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %644, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = bitcast %"class.std::__1::basic_string.8"* %644 to i16*
  %652 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %644, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %653

653:                                              ; preds = %719, %643
  %654 = phi %"class.std::__1::basic_string.8"* [ %646, %643 ], [ %720, %719 ]
  %655 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %656 = icmp eq %"class.icu_69::Collator"* %655, null
  br i1 %656, label %657, label %697

657:                                              ; preds = %653
  %658 = load i8, i8* %649, align 1
  %659 = icmp slt i8 %658, 0
  %660 = load i64, i64* %652, align 8
  %661 = zext i8 %658 to i64
  %662 = select i1 %659, i64 %660, i64 %661
  %663 = bitcast %"class.std::__1::basic_string.8"* %654 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %664 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %663, i64 0, i32 1, i32 1
  %665 = load i8, i8* %664, align 1
  %666 = icmp slt i8 %665, 0
  %667 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %668 = load i64, i64* %667, align 8
  %669 = zext i8 %665 to i64
  %670 = select i1 %666, i64 %668, i64 %669
  %671 = icmp ult i64 %662, %670
  %672 = select i1 %671, i64 %662, i64 %670
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %695, label %674

674:                                              ; preds = %657
  %675 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load i16*, i16** %675, align 8
  %677 = bitcast %"class.std::__1::basic_string.8"* %654 to i16*
  %678 = select i1 %666, i16* %676, i16* %677
  %679 = load i16*, i16** %650, align 8
  %680 = select i1 %659, i16* %679, i16* %651
  br label %681

681:                                              ; preds = %690, %674
  %682 = phi i64 [ %691, %690 ], [ %672, %674 ]
  %683 = phi i16* [ %693, %690 ], [ %680, %674 ]
  %684 = phi i16* [ %692, %690 ], [ %678, %674 ]
  %685 = load i16, i16* %684, align 2
  %686 = load i16, i16* %683, align 2
  %687 = icmp ult i16 %685, %686
  br i1 %687, label %719, label %688

688:                                              ; preds = %681
  %689 = icmp ult i16 %686, %685
  br i1 %689, label %721, label %690

690:                                              ; preds = %688
  %691 = add i64 %682, -1
  %692 = getelementptr inbounds i16, i16* %684, i64 1
  %693 = getelementptr inbounds i16, i16* %683, i64 1
  %694 = icmp eq i64 %691, 0
  br i1 %694, label %695, label %681

695:                                              ; preds = %690, %657
  %696 = icmp ult i64 %670, %662
  br i1 %696, label %719, label %721

697:                                              ; preds = %653
  %698 = bitcast %"class.std::__1::basic_string.8"* %654 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %699 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %698, i64 0, i32 1, i32 1
  %700 = load i8, i8* %699, align 1
  %701 = icmp slt i8 %700, 0
  %702 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load i16*, i16** %702, align 8
  %704 = bitcast %"class.std::__1::basic_string.8"* %654 to i16*
  %705 = select i1 %701, i16* %703, i16* %704
  %706 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %707 = load i64, i64* %706, align 8
  %708 = zext i8 %700 to i64
  %709 = select i1 %701, i64 %707, i64 %708
  %710 = load i8, i8* %649, align 1
  %711 = icmp slt i8 %710, 0
  %712 = load i16*, i16** %650, align 8
  %713 = select i1 %711, i16* %712, i16* %651
  %714 = load i64, i64* %652, align 8
  %715 = zext i8 %710 to i64
  %716 = select i1 %711, i64 %714, i64 %715
  %717 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %655, i16* %705, i64 %709, i16* %713, i64 %716) #16
  %718 = icmp eq i32 %717, -1
  br i1 %718, label %719, label %721

719:                                              ; preds = %681, %695, %697
  %720 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 1
  br label %653

721:                                              ; preds = %697, %695, %688
  br label %722

722:                                              ; preds = %789, %721
  %723 = phi %"class.std::__1::basic_string.8"* [ %647, %721 ], [ %724, %789 ]
  %724 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %723, i64 -1
  %725 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %726 = icmp eq %"class.icu_69::Collator"* %725, null
  br i1 %726, label %727, label %767

727:                                              ; preds = %722
  %728 = load i8, i8* %649, align 1
  %729 = icmp slt i8 %728, 0
  %730 = load i64, i64* %652, align 8
  %731 = zext i8 %728 to i64
  %732 = select i1 %729, i64 %730, i64 %731
  %733 = bitcast %"class.std::__1::basic_string.8"* %724 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %734 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %733, i64 0, i32 1, i32 1
  %735 = load i8, i8* %734, align 1
  %736 = icmp slt i8 %735, 0
  %737 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %723, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %738 = load i64, i64* %737, align 8
  %739 = zext i8 %735 to i64
  %740 = select i1 %736, i64 %738, i64 %739
  %741 = icmp ult i64 %732, %740
  %742 = select i1 %741, i64 %732, i64 %740
  %743 = icmp eq i64 %742, 0
  br i1 %743, label %765, label %744

744:                                              ; preds = %727
  %745 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load i16*, i16** %745, align 8
  %747 = bitcast %"class.std::__1::basic_string.8"* %724 to i16*
  %748 = select i1 %736, i16* %746, i16* %747
  %749 = load i16*, i16** %650, align 8
  %750 = select i1 %729, i16* %749, i16* %651
  br label %751

751:                                              ; preds = %760, %744
  %752 = phi i64 [ %761, %760 ], [ %742, %744 ]
  %753 = phi i16* [ %763, %760 ], [ %750, %744 ]
  %754 = phi i16* [ %762, %760 ], [ %748, %744 ]
  %755 = load i16, i16* %754, align 2
  %756 = load i16, i16* %753, align 2
  %757 = icmp ult i16 %755, %756
  br i1 %757, label %790, label %758

758:                                              ; preds = %751
  %759 = icmp ult i16 %756, %755
  br i1 %759, label %789, label %760

760:                                              ; preds = %758
  %761 = add i64 %752, -1
  %762 = getelementptr inbounds i16, i16* %754, i64 1
  %763 = getelementptr inbounds i16, i16* %753, i64 1
  %764 = icmp eq i64 %761, 0
  br i1 %764, label %765, label %751

765:                                              ; preds = %760, %727
  %766 = icmp ult i64 %740, %732
  br i1 %766, label %790, label %789

767:                                              ; preds = %722
  %768 = bitcast %"class.std::__1::basic_string.8"* %724 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %769 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %768, i64 0, i32 1, i32 1
  %770 = load i8, i8* %769, align 1
  %771 = icmp slt i8 %770, 0
  %772 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load i16*, i16** %772, align 8
  %774 = bitcast %"class.std::__1::basic_string.8"* %724 to i16*
  %775 = select i1 %771, i16* %773, i16* %774
  %776 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %723, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %777 = load i64, i64* %776, align 8
  %778 = zext i8 %770 to i64
  %779 = select i1 %771, i64 %777, i64 %778
  %780 = load i8, i8* %649, align 1
  %781 = icmp slt i8 %780, 0
  %782 = load i16*, i16** %650, align 8
  %783 = select i1 %781, i16* %782, i16* %651
  %784 = load i64, i64* %652, align 8
  %785 = zext i8 %780 to i64
  %786 = select i1 %781, i64 %784, i64 %785
  %787 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %725, i16* %775, i64 %779, i16* %783, i64 %786) #16
  %788 = icmp eq i32 %787, -1
  br i1 %788, label %790, label %789

789:                                              ; preds = %758, %767, %765
  br label %722

790:                                              ; preds = %765, %767, %751
  %791 = icmp ugt %"class.std::__1::basic_string.8"* %654, %724
  br i1 %791, label %805, label %792

792:                                              ; preds = %790
  %793 = bitcast %"class.std::__1::basic_string.8"* %654 to <2 x i64>*
  %794 = load <2 x i64>, <2 x i64>* %793, align 8
  %795 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %796 = load i64, i64* %795, align 8
  %797 = bitcast %"class.std::__1::basic_string.8"* %654 to i8*
  %798 = bitcast %"class.std::__1::basic_string.8"* %724 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %797, i8* align 8 %798, i64 24, i1 false) #16
  %799 = bitcast %"class.std::__1::basic_string.8"* %724 to <2 x i64>*
  store <2 x i64> %794, <2 x i64>* %799, align 8
  %800 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %723, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %796, i64* %800, align 8
  %801 = add i32 %645, 1
  %802 = icmp eq %"class.std::__1::basic_string.8"* %644, %654
  %803 = select i1 %802, %"class.std::__1::basic_string.8"* %724, %"class.std::__1::basic_string.8"* %644
  %804 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %654, i64 1
  br label %643

805:                                              ; preds = %790, %637
  %806 = phi %"class.std::__1::basic_string.8"* [ %143, %637 ], [ %644, %790 ]
  %807 = phi i32 [ %638, %637 ], [ %645, %790 ]
  %808 = phi %"class.std::__1::basic_string.8"* [ %641, %637 ], [ %654, %790 ]
  %809 = icmp eq %"class.std::__1::basic_string.8"* %808, %806
  br i1 %809, label %899, label %810

810:                                              ; preds = %805
  %811 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %4, align 8
  %812 = icmp eq %"class.icu_69::Collator"* %811, null
  br i1 %812, label %813, label %856

813:                                              ; preds = %810
  %814 = bitcast %"class.std::__1::basic_string.8"* %808 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %815 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %814, i64 0, i32 1, i32 1
  %816 = load i8, i8* %815, align 1
  %817 = icmp slt i8 %816, 0
  %818 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %819 = load i64, i64* %818, align 8
  %820 = zext i8 %816 to i64
  %821 = select i1 %817, i64 %819, i64 %820
  %822 = bitcast %"class.std::__1::basic_string.8"* %806 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %823 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %822, i64 0, i32 1, i32 1
  %824 = load i8, i8* %823, align 1
  %825 = icmp slt i8 %824, 0
  %826 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %827 = load i64, i64* %826, align 8
  %828 = zext i8 %824 to i64
  %829 = select i1 %825, i64 %827, i64 %828
  %830 = icmp ult i64 %821, %829
  %831 = select i1 %830, i64 %821, i64 %829
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %885, label %833

833:                                              ; preds = %813
  %834 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %835 = load i16*, i16** %834, align 8
  %836 = bitcast %"class.std::__1::basic_string.8"* %806 to i16*
  %837 = select i1 %825, i16* %835, i16* %836
  %838 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %839 = load i16*, i16** %838, align 8
  %840 = bitcast %"class.std::__1::basic_string.8"* %808 to i16*
  %841 = select i1 %817, i16* %839, i16* %840
  br label %842

842:                                              ; preds = %851, %833
  %843 = phi i64 [ %852, %851 ], [ %831, %833 ]
  %844 = phi i16* [ %854, %851 ], [ %841, %833 ]
  %845 = phi i16* [ %853, %851 ], [ %837, %833 ]
  %846 = load i16, i16* %845, align 2
  %847 = load i16, i16* %844, align 2
  %848 = icmp ult i16 %846, %847
  br i1 %848, label %887, label %849

849:                                              ; preds = %842
  %850 = icmp ult i16 %847, %846
  br i1 %850, label %899, label %851

851:                                              ; preds = %849
  %852 = add i64 %843, -1
  %853 = getelementptr inbounds i16, i16* %845, i64 1
  %854 = getelementptr inbounds i16, i16* %844, i64 1
  %855 = icmp eq i64 %852, 0
  br i1 %855, label %885, label %842

856:                                              ; preds = %810
  %857 = bitcast %"class.std::__1::basic_string.8"* %806 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %858 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %857, i64 0, i32 1, i32 1
  %859 = load i8, i8* %858, align 1
  %860 = icmp slt i8 %859, 0
  %861 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i16*, i16** %861, align 8
  %863 = bitcast %"class.std::__1::basic_string.8"* %806 to i16*
  %864 = select i1 %860, i16* %862, i16* %863
  %865 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %866 = load i64, i64* %865, align 8
  %867 = zext i8 %859 to i64
  %868 = select i1 %860, i64 %866, i64 %867
  %869 = bitcast %"class.std::__1::basic_string.8"* %808 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %870 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %869, i64 0, i32 1, i32 1
  %871 = load i8, i8* %870, align 1
  %872 = icmp slt i8 %871, 0
  %873 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load i16*, i16** %873, align 8
  %875 = bitcast %"class.std::__1::basic_string.8"* %808 to i16*
  %876 = select i1 %872, i16* %874, i16* %875
  %877 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %878 = load i64, i64* %877, align 8
  %879 = zext i8 %871 to i64
  %880 = select i1 %872, i64 %878, i64 %879
  %881 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %811, i16* %864, i64 %868, i16* %876, i64 %880) #16
  %882 = icmp eq i32 %881, -1
  br i1 %882, label %883, label %899

883:                                              ; preds = %856
  %884 = load i64, i64* %877, align 8
  br label %887

885:                                              ; preds = %851, %813
  %886 = icmp ult i64 %829, %821
  br i1 %886, label %887, label %899

887:                                              ; preds = %842, %883, %885
  %888 = phi i64 [ %884, %883 ], [ %819, %885 ], [ %819, %842 ]
  %889 = bitcast %"class.std::__1::basic_string.8"* %808 to i64*
  %890 = load i64, i64* %889, align 8
  %891 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %892 = load i64, i64* %891, align 8
  %893 = bitcast %"class.std::__1::basic_string.8"* %808 to i8*
  %894 = bitcast %"class.std::__1::basic_string.8"* %806 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %893, i8* align 8 %894, i64 24, i1 false) #16
  %895 = bitcast %"class.std::__1::basic_string.8"* %806 to i64*
  store i64 %890, i64* %895, align 8
  %896 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %888, i64* %896, align 8
  %897 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %806, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %892, i64* %897, align 8
  %898 = add i32 %807, 1
  br label %899

899:                                              ; preds = %849, %856, %805, %887, %885
  %900 = phi i32 [ %898, %887 ], [ %807, %885 ], [ %807, %805 ], [ %807, %856 ], [ %807, %849 ]
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %909

902:                                              ; preds = %899
  %903 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEbT0_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %808, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  %904 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 1
  %905 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEbT0_SC_T_(%"class.std::__1::basic_string.8"* %904, %"class.std::__1::basic_string.8"* %6, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br i1 %905, label %906, label %908

906:                                              ; preds = %902
  br i1 %903, label %922, label %907

907:                                              ; preds = %906, %920
  br label %5

908:                                              ; preds = %902
  br i1 %903, label %918, label %909

909:                                              ; preds = %908, %899
  %910 = ptrtoint %"class.std::__1::basic_string.8"* %808 to i64
  %911 = sub i64 %910, %640
  %912 = sdiv exact i64 %911, 24
  %913 = sub i64 %25, %910
  %914 = sdiv exact i64 %913, 24
  %915 = icmp slt i64 %912, %914
  br i1 %915, label %916, label %920

916:                                              ; preds = %909
  tail call void @_ZNSt3__16__sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"* %29, %"class.std::__1::basic_string.8"* %808, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  %917 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 1
  br label %918

918:                                              ; preds = %916, %908
  %919 = phi %"class.std::__1::basic_string.8"* [ %904, %908 ], [ %917, %916 ]
  br label %26

920:                                              ; preds = %909
  %921 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %808, i64 1
  tail call void @_ZNSt3__16__sortIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"* %921, %"class.std::__1::basic_string.8"* %6, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %907

922:                                              ; preds = %906, %394, %28, %28, %301, %391, %73, %80, %109, %111, %122, %126, %131, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %3, i64 0, i32 0
  %6 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %5, align 8
  %7 = icmp eq %"class.icu_69::Collator"* %6, null
  br i1 %7, label %8, label %53

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp ult i64 %16, %24
  %26 = select i1 %25, i64 %16, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %32 = select i1 %20, i16* %30, i16* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %36 = select i1 %12, i16* %34, i16* %35
  br label %37

37:                                               ; preds = %46, %28
  %38 = phi i64 [ %47, %46 ], [ %26, %28 ]
  %39 = phi i16* [ %49, %46 ], [ %36, %28 ]
  %40 = phi i16* [ %48, %46 ], [ %32, %28 ]
  %41 = load i16, i16* %40, align 2
  %42 = load i16, i16* %39, align 2
  %43 = icmp ult i16 %41, %42
  br i1 %43, label %82, label %44

44:                                               ; preds = %37
  %45 = icmp ult i16 %42, %41
  br i1 %45, label %82, label %46

46:                                               ; preds = %44
  %47 = add i64 %38, -1
  %48 = getelementptr inbounds i16, i16* %40, i64 1
  %49 = getelementptr inbounds i16, i16* %39, i64 1
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %51, label %37

51:                                               ; preds = %46, %8
  %52 = icmp ult i64 %24, %16
  br label %82

53:                                               ; preds = %4
  %54 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %61 = select i1 %57, i16* %59, i16* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %56 to i64
  %65 = select i1 %57, i64 %63, i64 %64
  %66 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %73 = select i1 %69, i16* %71, i16* %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  %78 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %6, i16* %61, i64 %65, i16* %73, i64 %77) #16
  %79 = icmp eq i32 %78, -1
  %80 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %5, align 8
  %81 = icmp eq %"class.icu_69::Collator"* %80, null
  br i1 %81, label %82, label %128

82:                                               ; preds = %37, %44, %51, %53
  %83 = phi i1 [ %79, %53 ], [ %52, %51 ], [ true, %37 ], [ false, %44 ]
  %84 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = zext i8 %86 to i64
  %91 = select i1 %87, i64 %89, i64 %90
  %92 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = icmp ult i64 %91, %99
  %101 = select i1 %100, i64 %91, i64 %99
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %126, label %103

103:                                              ; preds = %82
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i16*, i16** %104, align 8
  %106 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %107 = select i1 %95, i16* %105, i16* %106
  %108 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i16*, i16** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %111 = select i1 %87, i16* %109, i16* %110
  br label %112

112:                                              ; preds = %121, %103
  %113 = phi i64 [ %122, %121 ], [ %101, %103 ]
  %114 = phi i16* [ %124, %121 ], [ %111, %103 ]
  %115 = phi i16* [ %123, %121 ], [ %107, %103 ]
  %116 = load i16, i16* %115, align 2
  %117 = load i16, i16* %114, align 2
  %118 = icmp ult i16 %116, %117
  br i1 %118, label %155, label %119

119:                                              ; preds = %112
  %120 = icmp ult i16 %117, %116
  br i1 %120, label %155, label %121

121:                                              ; preds = %119
  %122 = add i64 %113, -1
  %123 = getelementptr inbounds i16, i16* %115, i64 1
  %124 = getelementptr inbounds i16, i16* %114, i64 1
  %125 = icmp eq i64 %122, 0
  br i1 %125, label %126, label %112

126:                                              ; preds = %121, %82
  %127 = icmp ult i64 %99, %91
  br i1 %83, label %251, label %157

128:                                              ; preds = %53
  %129 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %129, i64 0, i32 1, i32 1
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i16*, i16** %133, align 8
  %135 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %136 = select i1 %132, i16* %134, i16* %135
  %137 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %131 to i64
  %140 = select i1 %132, i64 %138, i64 %139
  %141 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i16*, i16** %145, align 8
  %147 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %148 = select i1 %144, i16* %146, i16* %147
  %149 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = zext i8 %143 to i64
  %152 = select i1 %144, i64 %150, i64 %151
  %153 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %80, i16* %136, i64 %140, i16* %148, i64 %152) #16
  %154 = icmp eq i32 %153, -1
  br i1 %79, label %251, label %157

155:                                              ; preds = %112, %119
  %156 = phi i1 [ true, %112 ], [ false, %119 ]
  br i1 %83, label %251, label %157

157:                                              ; preds = %126, %128, %155
  %158 = phi i1 [ %154, %128 ], [ %156, %155 ], [ %127, %126 ]
  br i1 %158, label %159, label %343

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::basic_string.8"* %1 to i64*
  %161 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast %"class.std::__1::basic_string.8"* %1 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::basic_string.8"* %1 to i8*
  %167 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #16
  %168 = bitcast %"class.std::__1::basic_string.8"* %2 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %165, i64* %169, align 8
  %170 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %5, align 8
  %171 = icmp eq %"class.icu_69::Collator"* %170, null
  br i1 %171, label %172, label %214

172:                                              ; preds = %159
  %173 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %173, i64 0, i32 1, i32 1
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  %177 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = zext i8 %175 to i64
  %180 = select i1 %176, i64 %178, i64 %179
  %181 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %181, i64 0, i32 1, i32 1
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = load i64, i64* %161, align 8
  %186 = zext i8 %183 to i64
  %187 = select i1 %184, i64 %185, i64 %186
  %188 = icmp ult i64 %180, %187
  %189 = select i1 %188, i64 %180, i64 %187
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %242, label %191

191:                                              ; preds = %172
  %192 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i16*, i16** %192, align 8
  %194 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %195 = select i1 %184, i16* %193, i16* %194
  %196 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %199 = select i1 %176, i16* %197, i16* %198
  br label %200

200:                                              ; preds = %209, %191
  %201 = phi i64 [ %210, %209 ], [ %189, %191 ]
  %202 = phi i16* [ %212, %209 ], [ %199, %191 ]
  %203 = phi i16* [ %211, %209 ], [ %195, %191 ]
  %204 = load i16, i16* %203, align 2
  %205 = load i16, i16* %202, align 2
  %206 = icmp ult i16 %204, %205
  br i1 %206, label %244, label %207

207:                                              ; preds = %200
  %208 = icmp ult i16 %205, %204
  br i1 %208, label %343, label %209

209:                                              ; preds = %207
  %210 = add i64 %201, -1
  %211 = getelementptr inbounds i16, i16* %203, i64 1
  %212 = getelementptr inbounds i16, i16* %202, i64 1
  %213 = icmp eq i64 %210, 0
  br i1 %213, label %242, label %200

214:                                              ; preds = %159
  %215 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %215, i64 0, i32 1, i32 1
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  %219 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i16*, i16** %219, align 8
  %221 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %222 = select i1 %218, i16* %220, i16* %221
  %223 = load i64, i64* %161, align 8
  %224 = zext i8 %217 to i64
  %225 = select i1 %218, i64 %223, i64 %224
  %226 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %226, i64 0, i32 1, i32 1
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  %230 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i16*, i16** %230, align 8
  %232 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %233 = select i1 %229, i16* %231, i16* %232
  %234 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = zext i8 %228 to i64
  %237 = select i1 %229, i64 %235, i64 %236
  %238 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %170, i16* %222, i64 %225, i16* %233, i64 %237) #16
  %239 = icmp eq i32 %238, -1
  br i1 %239, label %240, label %343

240:                                              ; preds = %214
  %241 = load i64, i64* %234, align 8
  br label %244

242:                                              ; preds = %209, %172
  %243 = icmp ult i64 %187, %180
  br i1 %243, label %244, label %343

244:                                              ; preds = %200, %240, %242
  %245 = phi i64 [ %241, %240 ], [ %178, %242 ], [ %178, %200 ]
  %246 = bitcast %"class.std::__1::basic_string.8"* %0 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %166, i64 24, i1 false) #16
  store i64 %247, i64* %160, align 8
  store i64 %245, i64* %161, align 8
  store i64 %249, i64* %164, align 8
  br label %343

251:                                              ; preds = %126, %128, %155
  %252 = phi i1 [ %154, %128 ], [ %156, %155 ], [ %127, %126 ]
  %253 = bitcast %"class.std::__1::basic_string.8"* %0 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8
  %255 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  br i1 %252, label %258, label %265

258:                                              ; preds = %251
  %259 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %259, i64 24, i1 false) #16
  %260 = bitcast %"class.std::__1::basic_string.8"* %2 to i64*
  %261 = extractelement <2 x i64> %254, i32 0
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %263 = extractelement <2 x i64> %254, i32 1
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %256, i64* %264, align 8
  br label %343

265:                                              ; preds = %251
  %266 = bitcast %"class.std::__1::basic_string.8"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %266, i64 24, i1 false) #16
  %267 = bitcast %"class.std::__1::basic_string.8"* %1 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %267, align 8
  %268 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %256, i64* %268, align 8
  %269 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %5, align 8
  %270 = icmp eq %"class.icu_69::Collator"* %269, null
  %271 = lshr i64 %256, 56
  %272 = trunc i64 %271 to i8
  %273 = extractelement <2 x i64> %254, i32 0
  %274 = inttoptr i64 %273 to i16*
  br i1 %270, label %275, label %311

275:                                              ; preds = %265
  %276 = icmp slt i8 %272, 0
  %277 = extractelement <2 x i64> %254, i32 1
  %278 = select i1 %276, i64 %277, i64 %271
  %279 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %279, i64 0, i32 1, i32 1
  %281 = load i8, i8* %280, align 1
  %282 = icmp slt i8 %281, 0
  %283 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  %285 = zext i8 %281 to i64
  %286 = select i1 %282, i64 %284, i64 %285
  %287 = icmp ult i64 %278, %286
  %288 = select i1 %287, i64 %278, i64 %286
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %335, label %290

290:                                              ; preds = %275
  %291 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i16*, i16** %291, align 8
  %293 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %294 = select i1 %282, i16* %292, i16* %293
  %295 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %296 = select i1 %276, i16* %274, i16* %295
  br label %297

297:                                              ; preds = %306, %290
  %298 = phi i64 [ %307, %306 ], [ %288, %290 ]
  %299 = phi i16* [ %309, %306 ], [ %296, %290 ]
  %300 = phi i16* [ %308, %306 ], [ %294, %290 ]
  %301 = load i16, i16* %300, align 2
  %302 = load i16, i16* %299, align 2
  %303 = icmp ult i16 %301, %302
  br i1 %303, label %337, label %304

304:                                              ; preds = %297
  %305 = icmp ult i16 %302, %301
  br i1 %305, label %343, label %306

306:                                              ; preds = %304
  %307 = add i64 %298, -1
  %308 = getelementptr inbounds i16, i16* %300, i64 1
  %309 = getelementptr inbounds i16, i16* %299, i64 1
  %310 = icmp eq i64 %307, 0
  br i1 %310, label %335, label %297

311:                                              ; preds = %265
  %312 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  %316 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i16*, i16** %316, align 8
  %318 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %319 = select i1 %315, i16* %317, i16* %318
  %320 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = zext i8 %314 to i64
  %323 = select i1 %315, i64 %321, i64 %322
  %324 = icmp slt i8 %272, 0
  %325 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %326 = select i1 %324, i16* %274, i16* %325
  %327 = extractelement <2 x i64> %254, i32 1
  %328 = select i1 %324, i64 %327, i64 %271
  %329 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %269, i16* %319, i64 %323, i16* %326, i64 %328) #16
  %330 = icmp eq i32 %329, -1
  br i1 %330, label %331, label %343

331:                                              ; preds = %311
  %332 = bitcast %"class.std::__1::basic_string.8"* %1 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8
  %334 = load i64, i64* %268, align 8
  br label %337

335:                                              ; preds = %306, %275
  %336 = icmp ult i64 %286, %278
  br i1 %336, label %337, label %343

337:                                              ; preds = %297, %331, %335
  %338 = phi i64 [ %334, %331 ], [ %256, %335 ], [ %256, %297 ]
  %339 = phi <2 x i64> [ %333, %331 ], [ %254, %335 ], [ %254, %297 ]
  %340 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %340, i64 24, i1 false) #16
  %341 = bitcast %"class.std::__1::basic_string.8"* %2 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %341, align 8
  %342 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %338, i64* %342, align 8
  br label %343

343:                                              ; preds = %207, %304, %311, %214, %335, %337, %242, %244, %157, %258
  %344 = phi i32 [ 1, %258 ], [ 0, %157 ], [ 2, %244 ], [ 1, %242 ], [ 2, %337 ], [ 1, %335 ], [ 1, %214 ], [ 1, %311 ], [ 1, %304 ], [ 1, %207 ]
  ret i32 %344
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %2, %"class.l10n_util::StringComparator"* dereferenceable(8) %4)
  %7 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %4, i64 0, i32 0
  %8 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %7, align 8
  %9 = icmp eq %"class.icu_69::Collator"* %8, null
  br i1 %9, label %10, label %53

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp ult i64 %18, %26
  %28 = select i1 %27, i64 %18, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %82, label %30

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %34 = select i1 %22, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %38 = select i1 %14, i16* %36, i16* %37
  br label %39

39:                                               ; preds = %48, %30
  %40 = phi i64 [ %49, %48 ], [ %28, %30 ]
  %41 = phi i16* [ %51, %48 ], [ %38, %30 ]
  %42 = phi i16* [ %50, %48 ], [ %34, %30 ]
  %43 = load i16, i16* %42, align 2
  %44 = load i16, i16* %41, align 2
  %45 = icmp ult i16 %43, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %39
  %47 = icmp ult i16 %44, %43
  br i1 %47, label %262, label %48

48:                                               ; preds = %46
  %49 = add i64 %40, -1
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i16, i16* %41, i64 1
  %52 = icmp eq i64 %49, 0
  br i1 %52, label %82, label %39

53:                                               ; preds = %5
  %54 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %61 = select i1 %57, i16* %59, i16* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %56 to i64
  %65 = select i1 %57, i64 %63, i64 %64
  %66 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %73 = select i1 %69, i16* %71, i16* %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  %78 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %8, i16* %61, i64 %65, i16* %73, i64 %77) #16
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %262

80:                                               ; preds = %53
  %81 = load i64, i64* %74, align 8
  br label %84

82:                                               ; preds = %48, %10
  %83 = icmp ult i64 %26, %18
  br i1 %83, label %84, label %262

84:                                               ; preds = %39, %80, %82
  %85 = phi i64 [ %81, %80 ], [ %16, %82 ], [ %16, %39 ]
  %86 = bitcast %"class.std::__1::basic_string.8"* %2 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  %92 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #16
  %93 = bitcast %"class.std::__1::basic_string.8"* %3 to i64*
  store i64 %87, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %85, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %90, i64* %95, align 8
  %96 = add i32 %6, 1
  %97 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %7, align 8
  %98 = icmp eq %"class.icu_69::Collator"* %97, null
  br i1 %98, label %99, label %141

99:                                               ; preds = %84
  %100 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i64 %105, i64 %106
  %108 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = load i64, i64* %88, align 8
  %113 = zext i8 %110 to i64
  %114 = select i1 %111, i64 %112, i64 %113
  %115 = icmp ult i64 %107, %114
  %116 = select i1 %115, i64 %107, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %169, label %118

118:                                              ; preds = %99
  %119 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %122 = select i1 %111, i16* %120, i16* %121
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %126 = select i1 %103, i16* %124, i16* %125
  br label %127

127:                                              ; preds = %136, %118
  %128 = phi i64 [ %137, %136 ], [ %116, %118 ]
  %129 = phi i16* [ %139, %136 ], [ %126, %118 ]
  %130 = phi i16* [ %138, %136 ], [ %122, %118 ]
  %131 = load i16, i16* %130, align 2
  %132 = load i16, i16* %129, align 2
  %133 = icmp ult i16 %131, %132
  br i1 %133, label %171, label %134

134:                                              ; preds = %127
  %135 = icmp ult i16 %132, %131
  br i1 %135, label %262, label %136

136:                                              ; preds = %134
  %137 = add i64 %128, -1
  %138 = getelementptr inbounds i16, i16* %130, i64 1
  %139 = getelementptr inbounds i16, i16* %129, i64 1
  %140 = icmp eq i64 %137, 0
  br i1 %140, label %169, label %127

141:                                              ; preds = %84
  %142 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %142, i64 0, i32 1, i32 1
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  %146 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i16*, i16** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %149 = select i1 %145, i16* %147, i16* %148
  %150 = load i64, i64* %88, align 8
  %151 = zext i8 %144 to i64
  %152 = select i1 %145, i64 %150, i64 %151
  %153 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i16*, i16** %157, align 8
  %159 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %160 = select i1 %156, i16* %158, i16* %159
  %161 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = zext i8 %155 to i64
  %164 = select i1 %156, i64 %162, i64 %163
  %165 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %97, i16* %149, i64 %152, i16* %160, i64 %164) #16
  %166 = icmp eq i32 %165, -1
  br i1 %166, label %167, label %262

167:                                              ; preds = %141
  %168 = load i64, i64* %161, align 8
  br label %171

169:                                              ; preds = %136, %99
  %170 = icmp ult i64 %114, %107
  br i1 %170, label %171, label %262

171:                                              ; preds = %127, %167, %169
  %172 = phi i64 [ %168, %167 ], [ %105, %169 ], [ %105, %127 ]
  %173 = bitcast %"class.std::__1::basic_string.8"* %1 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.std::__1::basic_string.8"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %91, i64 24, i1 false) #16
  store i64 %174, i64* %86, align 8
  store i64 %172, i64* %88, align 8
  store i64 %177, i64* %89, align 8
  %179 = add i32 %6, 2
  %180 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %7, align 8
  %181 = icmp eq %"class.icu_69::Collator"* %180, null
  br i1 %181, label %182, label %224

182:                                              ; preds = %171
  %183 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %183, i64 0, i32 1, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  %187 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = zext i8 %185 to i64
  %190 = select i1 %186, i64 %188, i64 %189
  %191 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i64, i64* %175, align 8
  %196 = zext i8 %193 to i64
  %197 = select i1 %194, i64 %195, i64 %196
  %198 = icmp ult i64 %190, %197
  %199 = select i1 %198, i64 %190, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %252, label %201

201:                                              ; preds = %182
  %202 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %205 = select i1 %194, i16* %203, i16* %204
  %206 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i16*, i16** %206, align 8
  %208 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %209 = select i1 %186, i16* %207, i16* %208
  br label %210

210:                                              ; preds = %219, %201
  %211 = phi i64 [ %220, %219 ], [ %199, %201 ]
  %212 = phi i16* [ %222, %219 ], [ %209, %201 ]
  %213 = phi i16* [ %221, %219 ], [ %205, %201 ]
  %214 = load i16, i16* %213, align 2
  %215 = load i16, i16* %212, align 2
  %216 = icmp ult i16 %214, %215
  br i1 %216, label %254, label %217

217:                                              ; preds = %210
  %218 = icmp ult i16 %215, %214
  br i1 %218, label %262, label %219

219:                                              ; preds = %217
  %220 = add i64 %211, -1
  %221 = getelementptr inbounds i16, i16* %213, i64 1
  %222 = getelementptr inbounds i16, i16* %212, i64 1
  %223 = icmp eq i64 %220, 0
  br i1 %223, label %252, label %210

224:                                              ; preds = %171
  %225 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %225, i64 0, i32 1, i32 1
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  %229 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i16*, i16** %229, align 8
  %231 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %232 = select i1 %228, i16* %230, i16* %231
  %233 = load i64, i64* %175, align 8
  %234 = zext i8 %227 to i64
  %235 = select i1 %228, i64 %233, i64 %234
  %236 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %236, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  %240 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i16*, i16** %240, align 8
  %242 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %243 = select i1 %239, i16* %241, i16* %242
  %244 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = zext i8 %238 to i64
  %247 = select i1 %239, i64 %245, i64 %246
  %248 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %180, i16* %232, i64 %235, i16* %243, i64 %247) #16
  %249 = icmp eq i32 %248, -1
  br i1 %249, label %250, label %262

250:                                              ; preds = %224
  %251 = load i64, i64* %244, align 8
  br label %254

252:                                              ; preds = %219, %182
  %253 = icmp ult i64 %197, %190
  br i1 %253, label %254, label %262

254:                                              ; preds = %210, %250, %252
  %255 = phi i64 [ %251, %250 ], [ %188, %252 ], [ %188, %210 ]
  %256 = bitcast %"class.std::__1::basic_string.8"* %0 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %178, i64 24, i1 false) #16
  store i64 %257, i64* %173, align 8
  store i64 %255, i64* %175, align 8
  store i64 %259, i64* %176, align 8
  %261 = add i32 %6, 3
  br label %262

262:                                              ; preds = %46, %134, %217, %224, %141, %53, %169, %254, %252, %82
  %263 = phi i32 [ %261, %254 ], [ %179, %252 ], [ %96, %169 ], [ %6, %82 ], [ %6, %53 ], [ %96, %141 ], [ %179, %224 ], [ %179, %217 ], [ %96, %134 ], [ %6, %46 ]
  ret i32 %263
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %1, %"class.std::__1::basic_string.8"* %2, %"class.std::__1::basic_string.8"* %3, %"class.l10n_util::StringComparator"* dereferenceable(8) %5)
  %8 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %5, i64 0, i32 0
  %9 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %8, align 8
  %10 = icmp eq %"class.icu_69::Collator"* %9, null
  br i1 %10, label %11, label %54

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %83, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %35 = select i1 %23, i16* %33, i16* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %39 = select i1 %15, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i64 [ %50, %49 ], [ %29, %31 ]
  %42 = phi i16* [ %52, %49 ], [ %39, %31 ]
  %43 = phi i16* [ %51, %49 ], [ %35, %31 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %85, label %47

47:                                               ; preds = %40
  %48 = icmp ult i16 %45, %44
  br i1 %48, label %346, label %49

49:                                               ; preds = %47
  %50 = add i64 %41, -1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = getelementptr inbounds i16, i16* %42, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %83, label %40

54:                                               ; preds = %6
  %55 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %62 = select i1 %58, i16* %60, i16* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  %67 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i16*, i16** %71, align 8
  %73 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %74 = select i1 %70, i16* %72, i16* %73
  %75 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %69 to i64
  %78 = select i1 %70, i64 %76, i64 %77
  %79 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %9, i16* %62, i64 %66, i16* %74, i64 %78) #16
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %346

81:                                               ; preds = %54
  %82 = load i64, i64* %75, align 8
  br label %85

83:                                               ; preds = %49, %11
  %84 = icmp ult i64 %27, %19
  br i1 %84, label %85, label %346

85:                                               ; preds = %40, %81, %83
  %86 = phi i64 [ %82, %81 ], [ %17, %83 ], [ %17, %40 ]
  %87 = bitcast %"class.std::__1::basic_string.8"* %3 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::basic_string.8"* %3 to i8*
  %93 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #16
  %94 = bitcast %"class.std::__1::basic_string.8"* %4 to i64*
  store i64 %88, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %91, i64* %96, align 8
  %97 = add i32 %7, 1
  %98 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %8, align 8
  %99 = icmp eq %"class.icu_69::Collator"* %98, null
  br i1 %99, label %100, label %142

100:                                              ; preds = %85
  %101 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = load i64, i64* %89, align 8
  %114 = zext i8 %111 to i64
  %115 = select i1 %112, i64 %113, i64 %114
  %116 = icmp ult i64 %108, %115
  %117 = select i1 %116, i64 %108, i64 %115
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %170, label %119

119:                                              ; preds = %100
  %120 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i16*, i16** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %123 = select i1 %112, i16* %121, i16* %122
  %124 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %127 = select i1 %104, i16* %125, i16* %126
  br label %128

128:                                              ; preds = %137, %119
  %129 = phi i64 [ %138, %137 ], [ %117, %119 ]
  %130 = phi i16* [ %140, %137 ], [ %127, %119 ]
  %131 = phi i16* [ %139, %137 ], [ %123, %119 ]
  %132 = load i16, i16* %131, align 2
  %133 = load i16, i16* %130, align 2
  %134 = icmp ult i16 %132, %133
  br i1 %134, label %172, label %135

135:                                              ; preds = %128
  %136 = icmp ult i16 %133, %132
  br i1 %136, label %346, label %137

137:                                              ; preds = %135
  %138 = add i64 %129, -1
  %139 = getelementptr inbounds i16, i16* %131, i64 1
  %140 = getelementptr inbounds i16, i16* %130, i64 1
  %141 = icmp eq i64 %138, 0
  br i1 %141, label %170, label %128

142:                                              ; preds = %85
  %143 = bitcast %"class.std::__1::basic_string.8"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %143, i64 0, i32 1, i32 1
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  %147 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i16*, i16** %147, align 8
  %149 = bitcast %"class.std::__1::basic_string.8"* %3 to i16*
  %150 = select i1 %146, i16* %148, i16* %149
  %151 = load i64, i64* %89, align 8
  %152 = zext i8 %145 to i64
  %153 = select i1 %146, i64 %151, i64 %152
  %154 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %154, i64 0, i32 1, i32 1
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  %158 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i16*, i16** %158, align 8
  %160 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %161 = select i1 %157, i16* %159, i16* %160
  %162 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = zext i8 %156 to i64
  %165 = select i1 %157, i64 %163, i64 %164
  %166 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %98, i16* %150, i64 %153, i16* %161, i64 %165) #16
  %167 = icmp eq i32 %166, -1
  br i1 %167, label %168, label %346

168:                                              ; preds = %142
  %169 = load i64, i64* %162, align 8
  br label %172

170:                                              ; preds = %137, %100
  %171 = icmp ult i64 %115, %108
  br i1 %171, label %172, label %346

172:                                              ; preds = %128, %168, %170
  %173 = phi i64 [ %169, %168 ], [ %106, %170 ], [ %106, %128 ]
  %174 = bitcast %"class.std::__1::basic_string.8"* %2 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::basic_string.8"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %92, i64 24, i1 false) #16
  store i64 %175, i64* %87, align 8
  store i64 %173, i64* %89, align 8
  store i64 %178, i64* %90, align 8
  %180 = add i32 %7, 2
  %181 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %8, align 8
  %182 = icmp eq %"class.icu_69::Collator"* %181, null
  br i1 %182, label %183, label %225

183:                                              ; preds = %172
  %184 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %186 to i64
  %191 = select i1 %187, i64 %189, i64 %190
  %192 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = load i64, i64* %176, align 8
  %197 = zext i8 %194 to i64
  %198 = select i1 %195, i64 %196, i64 %197
  %199 = icmp ult i64 %191, %198
  %200 = select i1 %199, i64 %191, i64 %198
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %253, label %202

202:                                              ; preds = %183
  %203 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i16*, i16** %203, align 8
  %205 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %206 = select i1 %195, i16* %204, i16* %205
  %207 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i16*, i16** %207, align 8
  %209 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %210 = select i1 %187, i16* %208, i16* %209
  br label %211

211:                                              ; preds = %220, %202
  %212 = phi i64 [ %221, %220 ], [ %200, %202 ]
  %213 = phi i16* [ %223, %220 ], [ %210, %202 ]
  %214 = phi i16* [ %222, %220 ], [ %206, %202 ]
  %215 = load i16, i16* %214, align 2
  %216 = load i16, i16* %213, align 2
  %217 = icmp ult i16 %215, %216
  br i1 %217, label %255, label %218

218:                                              ; preds = %211
  %219 = icmp ult i16 %216, %215
  br i1 %219, label %346, label %220

220:                                              ; preds = %218
  %221 = add i64 %212, -1
  %222 = getelementptr inbounds i16, i16* %214, i64 1
  %223 = getelementptr inbounds i16, i16* %213, i64 1
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %253, label %211

225:                                              ; preds = %172
  %226 = bitcast %"class.std::__1::basic_string.8"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %226, i64 0, i32 1, i32 1
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  %230 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i16*, i16** %230, align 8
  %232 = bitcast %"class.std::__1::basic_string.8"* %2 to i16*
  %233 = select i1 %229, i16* %231, i16* %232
  %234 = load i64, i64* %176, align 8
  %235 = zext i8 %228 to i64
  %236 = select i1 %229, i64 %234, i64 %235
  %237 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %237, i64 0, i32 1, i32 1
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  %241 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i16*, i16** %241, align 8
  %243 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %244 = select i1 %240, i16* %242, i16* %243
  %245 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = zext i8 %239 to i64
  %248 = select i1 %240, i64 %246, i64 %247
  %249 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %181, i16* %233, i64 %236, i16* %244, i64 %248) #16
  %250 = icmp eq i32 %249, -1
  br i1 %250, label %251, label %346

251:                                              ; preds = %225
  %252 = load i64, i64* %245, align 8
  br label %255

253:                                              ; preds = %220, %183
  %254 = icmp ult i64 %198, %191
  br i1 %254, label %255, label %346

255:                                              ; preds = %211, %251, %253
  %256 = phi i64 [ %252, %251 ], [ %189, %253 ], [ %189, %211 ]
  %257 = bitcast %"class.std::__1::basic_string.8"* %1 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %260 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.std::__1::basic_string.8"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %179, i64 24, i1 false) #16
  store i64 %258, i64* %174, align 8
  store i64 %256, i64* %176, align 8
  store i64 %261, i64* %177, align 8
  %263 = add i32 %7, 3
  %264 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %8, align 8
  %265 = icmp eq %"class.icu_69::Collator"* %264, null
  br i1 %265, label %266, label %308

266:                                              ; preds = %255
  %267 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %267, i64 0, i32 1, i32 1
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  %271 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = zext i8 %269 to i64
  %274 = select i1 %270, i64 %272, i64 %273
  %275 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %275, i64 0, i32 1, i32 1
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  %279 = load i64, i64* %259, align 8
  %280 = zext i8 %277 to i64
  %281 = select i1 %278, i64 %279, i64 %280
  %282 = icmp ult i64 %274, %281
  %283 = select i1 %282, i64 %274, i64 %281
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %336, label %285

285:                                              ; preds = %266
  %286 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i16*, i16** %286, align 8
  %288 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %289 = select i1 %278, i16* %287, i16* %288
  %290 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i16*, i16** %290, align 8
  %292 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %293 = select i1 %270, i16* %291, i16* %292
  br label %294

294:                                              ; preds = %303, %285
  %295 = phi i64 [ %304, %303 ], [ %283, %285 ]
  %296 = phi i16* [ %306, %303 ], [ %293, %285 ]
  %297 = phi i16* [ %305, %303 ], [ %289, %285 ]
  %298 = load i16, i16* %297, align 2
  %299 = load i16, i16* %296, align 2
  %300 = icmp ult i16 %298, %299
  br i1 %300, label %338, label %301

301:                                              ; preds = %294
  %302 = icmp ult i16 %299, %298
  br i1 %302, label %346, label %303

303:                                              ; preds = %301
  %304 = add i64 %295, -1
  %305 = getelementptr inbounds i16, i16* %297, i64 1
  %306 = getelementptr inbounds i16, i16* %296, i64 1
  %307 = icmp eq i64 %304, 0
  br i1 %307, label %336, label %294

308:                                              ; preds = %255
  %309 = bitcast %"class.std::__1::basic_string.8"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %309, i64 0, i32 1, i32 1
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  %313 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load i16*, i16** %313, align 8
  %315 = bitcast %"class.std::__1::basic_string.8"* %1 to i16*
  %316 = select i1 %312, i16* %314, i16* %315
  %317 = load i64, i64* %259, align 8
  %318 = zext i8 %311 to i64
  %319 = select i1 %312, i64 %317, i64 %318
  %320 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %320, i64 0, i32 1, i32 1
  %322 = load i8, i8* %321, align 1
  %323 = icmp slt i8 %322, 0
  %324 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i16*, i16** %324, align 8
  %326 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %327 = select i1 %323, i16* %325, i16* %326
  %328 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %329 = load i64, i64* %328, align 8
  %330 = zext i8 %322 to i64
  %331 = select i1 %323, i64 %329, i64 %330
  %332 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %264, i16* %316, i64 %319, i16* %327, i64 %331) #16
  %333 = icmp eq i32 %332, -1
  br i1 %333, label %334, label %346

334:                                              ; preds = %308
  %335 = load i64, i64* %328, align 8
  br label %338

336:                                              ; preds = %303, %266
  %337 = icmp ult i64 %281, %274
  br i1 %337, label %338, label %346

338:                                              ; preds = %294, %334, %336
  %339 = phi i64 [ %335, %334 ], [ %272, %336 ], [ %272, %294 ]
  %340 = bitcast %"class.std::__1::basic_string.8"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %344, i8* align 8 %262, i64 24, i1 false) #16
  store i64 %341, i64* %257, align 8
  store i64 %339, i64* %259, align 8
  store i64 %343, i64* %260, align 8
  %345 = add i32 %7, 4
  br label %346

346:                                              ; preds = %47, %135, %218, %301, %308, %225, %142, %54, %170, %336, %338, %253, %83
  %347 = phi i32 [ %345, %338 ], [ %263, %336 ], [ %180, %253 ], [ %97, %170 ], [ %7, %83 ], [ %7, %54 ], [ %97, %142 ], [ %180, %225 ], [ %263, %308 ], [ %263, %301 ], [ %180, %218 ], [ %97, %135 ], [ %7, %47 ]
  ret i32 %347
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEvT0_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 2
  %6 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %6, %"class.std::__1::basic_string.8"* %5, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  %8 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 3
  %9 = icmp eq %"class.std::__1::basic_string.8"* %8, %1
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %18 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  br label %20

19:                                               ; preds = %197, %3
  ret void

20:                                               ; preds = %10, %197
  %21 = phi %"class.std::__1::basic_string.8"* [ %8, %10 ], [ %198, %197 ]
  %22 = phi %"class.std::__1::basic_string.8"* [ %5, %10 ], [ %21, %197 ]
  %23 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %11, align 8
  %24 = icmp eq %"class.icu_69::Collator"* %23, null
  br i1 %24, label %25, label %68

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::basic_string.8"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = bitcast %"class.std::__1::basic_string.8"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp ult i64 %33, %41
  %43 = select i1 %42, i64 %33, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %95, label %45

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string.8"* %21 to i16*
  %49 = select i1 %37, i16* %47, i16* %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string.8"* %22 to i16*
  %53 = select i1 %29, i16* %51, i16* %52
  br label %54

54:                                               ; preds = %63, %45
  %55 = phi i64 [ %64, %63 ], [ %43, %45 ]
  %56 = phi i16* [ %66, %63 ], [ %53, %45 ]
  %57 = phi i16* [ %65, %63 ], [ %49, %45 ]
  %58 = load i16, i16* %57, align 2
  %59 = load i16, i16* %56, align 2
  %60 = icmp ult i16 %58, %59
  br i1 %60, label %97, label %61

61:                                               ; preds = %54
  %62 = icmp ult i16 %59, %58
  br i1 %62, label %197, label %63

63:                                               ; preds = %61
  %64 = add i64 %55, -1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = getelementptr inbounds i16, i16* %56, i64 1
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %95, label %54

68:                                               ; preds = %20
  %69 = bitcast %"class.std::__1::basic_string.8"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string.8"* %21 to i16*
  %76 = select i1 %72, i16* %74, i16* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %71 to i64
  %80 = select i1 %72, i64 %78, i64 %79
  %81 = bitcast %"class.std::__1::basic_string.8"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string.8"* %22 to i16*
  %88 = select i1 %84, i16* %86, i16* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  %93 = call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %23, i16* %76, i64 %80, i16* %88, i64 %92) #16
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %97, label %197

95:                                               ; preds = %63, %25
  %96 = icmp ult i64 %41, %33
  br i1 %96, label %97, label %197

97:                                               ; preds = %54, %68, %95
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %98 = bitcast %"class.std::__1::basic_string.8"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %98, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #16
  br label %99

99:                                               ; preds = %182, %97
  %100 = phi i8 [ 0, %97 ], [ %183, %182 ]
  %101 = phi %"class.std::__1::basic_string.8"* [ %21, %97 ], [ %102, %182 ]
  %102 = phi %"class.std::__1::basic_string.8"* [ %22, %97 ], [ %115, %182 ]
  %103 = icmp slt i8 %100, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = bitcast %"class.std::__1::basic_string.8"* %101 to i8**
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #18
  br label %107

107:                                              ; preds = %99, %104
  %108 = bitcast %"class.std::__1::basic_string.8"* %101 to i8*
  %109 = bitcast %"class.std::__1::basic_string.8"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 24, i1 false) #16
  %110 = bitcast %"class.std::__1::basic_string.8"* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  store i8 0, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string.8"* %102 to i16*
  store i16 0, i16* %112, align 2
  %113 = icmp eq %"class.std::__1::basic_string.8"* %102, %0
  br i1 %113, label %195, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %102, i64 -1
  %116 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %11, align 8
  %117 = icmp eq %"class.icu_69::Collator"* %116, null
  br i1 %117, label %118, label %158

118:                                              ; preds = %114
  %119 = bitcast %"class.std::__1::basic_string.8"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %102, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = zext i8 %121 to i64
  %126 = select i1 %122, i64 %124, i64 %125
  %127 = load i8, i8* %16, align 1
  %128 = icmp slt i8 %127, 0
  %129 = load i64, i64* %14, align 8
  %130 = zext i8 %127 to i64
  %131 = select i1 %128, i64 %129, i64 %130
  %132 = icmp ult i64 %126, %131
  %133 = select i1 %132, i64 %126, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %156, label %135

135:                                              ; preds = %118
  %136 = load i16*, i16** %13, align 8
  %137 = select i1 %128, i16* %136, i16* %17
  %138 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i16*, i16** %138, align 8
  %140 = bitcast %"class.std::__1::basic_string.8"* %115 to i16*
  %141 = select i1 %122, i16* %139, i16* %140
  br label %142

142:                                              ; preds = %151, %135
  %143 = phi i64 [ %152, %151 ], [ %133, %135 ]
  %144 = phi i16* [ %154, %151 ], [ %141, %135 ]
  %145 = phi i16* [ %153, %151 ], [ %137, %135 ]
  %146 = load i16, i16* %145, align 2
  %147 = load i16, i16* %144, align 2
  %148 = icmp ult i16 %146, %147
  br i1 %148, label %182, label %149

149:                                              ; preds = %142
  %150 = icmp ult i16 %147, %146
  br i1 %150, label %191, label %151

151:                                              ; preds = %149
  %152 = add i64 %143, -1
  %153 = getelementptr inbounds i16, i16* %145, i64 1
  %154 = getelementptr inbounds i16, i16* %144, i64 1
  %155 = icmp eq i64 %152, 0
  br i1 %155, label %156, label %142

156:                                              ; preds = %151, %118
  %157 = icmp ult i64 %131, %126
  br i1 %157, label %182, label %193

158:                                              ; preds = %114
  %159 = load i8, i8* %16, align 1
  %160 = icmp slt i8 %159, 0
  %161 = load i16*, i16** %13, align 8
  %162 = select i1 %160, i16* %161, i16* %17
  %163 = load i64, i64* %14, align 8
  %164 = zext i8 %159 to i64
  %165 = select i1 %160, i64 %163, i64 %164
  %166 = bitcast %"class.std::__1::basic_string.8"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %166, i64 0, i32 1, i32 1
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  %170 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i16*, i16** %170, align 8
  %172 = bitcast %"class.std::__1::basic_string.8"* %115 to i16*
  %173 = select i1 %169, i16* %171, i16* %172
  %174 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %102, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = zext i8 %168 to i64
  %177 = select i1 %169, i64 %175, i64 %176
  %178 = call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %116, i16* %162, i64 %165, i16* %173, i64 %177) #16
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %180, label %184

180:                                              ; preds = %158
  %181 = load i8, i8* %111, align 1
  br label %182

182:                                              ; preds = %142, %180, %156
  %183 = phi i8 [ %181, %180 ], [ 0, %156 ], [ 0, %142 ]
  br label %99

184:                                              ; preds = %158
  %185 = bitcast %"class.std::__1::basic_string.8"* %102 to i8*
  %186 = load i8, i8* %111, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %195

188:                                              ; preds = %184
  %189 = bitcast %"class.std::__1::basic_string.8"* %102 to i8**
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #18
  br label %195

191:                                              ; preds = %149
  %192 = bitcast %"class.std::__1::basic_string.8"* %102 to i8*
  br label %195

193:                                              ; preds = %156
  %194 = bitcast %"class.std::__1::basic_string.8"* %102 to i8*
  br label %195

195:                                              ; preds = %107, %193, %191, %188, %184
  %196 = phi i8* [ %185, %188 ], [ %185, %184 ], [ %192, %191 ], [ %194, %193 ], [ %18, %107 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %12, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  br label %197

197:                                              ; preds = %61, %68, %195, %95
  %198 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %21, i64 1
  %199 = icmp eq %"class.std::__1::basic_string.8"* %198, %1
  br i1 %199, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEbT0_SC_T_(%"class.std::__1::basic_string.8"*, %"class.std::__1::basic_string.8"*, %"class.l10n_util::StringComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string.8", align 8
  %5 = ptrtoint %"class.std::__1::basic_string.8"* %1 to i64
  %6 = ptrtoint %"class.std::__1::basic_string.8"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 24
  switch i64 %8, label %114 [
    i64 0, label %316
    i64 1, label %316
    i64 2, label %9
    i64 3, label %99
    i64 4, label %103
    i64 5, label %108
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %11 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %12 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %11, align 8
  %13 = icmp eq %"class.icu_69::Collator"* %12, null
  br i1 %13, label %14, label %57

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string.8"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %22, %30
  %32 = select i1 %31, i64 %22, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %86, label %34

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string.8"* %10 to i16*
  %38 = select i1 %26, i16* %36, i16* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %42 = select i1 %18, i16* %40, i16* %41
  br label %43

43:                                               ; preds = %52, %34
  %44 = phi i64 [ %53, %52 ], [ %32, %34 ]
  %45 = phi i16* [ %55, %52 ], [ %42, %34 ]
  %46 = phi i16* [ %54, %52 ], [ %38, %34 ]
  %47 = load i16, i16* %46, align 2
  %48 = load i16, i16* %45, align 2
  %49 = icmp ult i16 %47, %48
  br i1 %49, label %88, label %50

50:                                               ; preds = %43
  %51 = icmp ult i16 %48, %47
  br i1 %51, label %316, label %52

52:                                               ; preds = %50
  %53 = add i64 %44, -1
  %54 = getelementptr inbounds i16, i16* %46, i64 1
  %55 = getelementptr inbounds i16, i16* %45, i64 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %86, label %43

57:                                               ; preds = %9
  %58 = bitcast %"class.std::__1::basic_string.8"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.8"* %10 to i16*
  %65 = select i1 %61, i16* %63, i16* %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %60 to i64
  %69 = select i1 %61, i64 %67, i64 %68
  %70 = bitcast %"class.std::__1::basic_string.8"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string.8"* %0 to i16*
  %77 = select i1 %73, i16* %75, i16* %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %72 to i64
  %81 = select i1 %73, i64 %79, i64 %80
  %82 = tail call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %12, i16* %65, i64 %69, i16* %77, i64 %81) #16
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %316

84:                                               ; preds = %57
  %85 = load i64, i64* %78, align 8
  br label %88

86:                                               ; preds = %52, %14
  %87 = icmp ult i64 %30, %22
  br i1 %87, label %88, label %316

88:                                               ; preds = %43, %84, %86
  %89 = phi i64 [ %85, %84 ], [ %20, %86 ], [ %20, %43 ]
  %90 = bitcast %"class.std::__1::basic_string.8"* %0 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  %95 = bitcast %"class.std::__1::basic_string.8"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #16
  %96 = bitcast %"class.std::__1::basic_string.8"* %10 to i64*
  store i64 %91, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %89, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %93, i64* %98, align 8
  br label %316

99:                                               ; preds = %3
  %100 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %101 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %102 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %100, %"class.std::__1::basic_string.8"* %101, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %316

103:                                              ; preds = %3
  %104 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %105 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 2
  %106 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %107 = tail call i32 @_ZNSt3__17__sort4IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %104, %"class.std::__1::basic_string.8"* %105, %"class.std::__1::basic_string.8"* %106, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %316

108:                                              ; preds = %3
  %109 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %110 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 2
  %111 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 3
  %112 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %1, i64 -1
  %113 = tail call i32 @_ZNSt3__17__sort5IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %109, %"class.std::__1::basic_string.8"* %110, %"class.std::__1::basic_string.8"* %111, %"class.std::__1::basic_string.8"* %112, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  br label %316

114:                                              ; preds = %3
  %115 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 2
  %116 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 1
  %117 = tail call i32 @_ZNSt3__17__sort3IRN9l10n_util16StringComparatorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPS8_EEjT0_SC_SC_T_(%"class.std::__1::basic_string.8"* %0, %"class.std::__1::basic_string.8"* %116, %"class.std::__1::basic_string.8"* %115, %"class.l10n_util::StringComparator"* dereferenceable(8) %2)
  %118 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %0, i64 3
  %119 = icmp eq %"class.std::__1::basic_string.8"* %118, %1
  br i1 %119, label %316, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.l10n_util::StringComparator", %"class.l10n_util::StringComparator"* %2, i64 0, i32 0
  %122 = bitcast %"class.std::__1::basic_string.8"* %4 to i8*
  %123 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = bitcast %"class.std::__1::basic_string.8"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = bitcast %"class.std::__1::basic_string.8"* %4 to i16*
  %128 = bitcast %"class.std::__1::basic_string.8"* %0 to i8*
  br label %129

129:                                              ; preds = %120, %309
  %130 = phi %"class.std::__1::basic_string.8"* [ %118, %120 ], [ %311, %309 ]
  %131 = phi i32 [ 0, %120 ], [ %310, %309 ]
  %132 = phi %"class.std::__1::basic_string.8"* [ %115, %120 ], [ %130, %309 ]
  %133 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %121, align 8
  %134 = icmp eq %"class.icu_69::Collator"* %133, null
  br i1 %134, label %135, label %178

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::basic_string.8"* %132 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %136, i64 0, i32 1, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  %140 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = zext i8 %138 to i64
  %143 = select i1 %139, i64 %141, i64 %142
  %144 = bitcast %"class.std::__1::basic_string.8"* %130 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %144, i64 0, i32 1, i32 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = zext i8 %146 to i64
  %151 = select i1 %147, i64 %149, i64 %150
  %152 = icmp ult i64 %143, %151
  %153 = select i1 %152, i64 %143, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %205, label %155

155:                                              ; preds = %135
  %156 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i16*, i16** %156, align 8
  %158 = bitcast %"class.std::__1::basic_string.8"* %130 to i16*
  %159 = select i1 %147, i16* %157, i16* %158
  %160 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i16*, i16** %160, align 8
  %162 = bitcast %"class.std::__1::basic_string.8"* %132 to i16*
  %163 = select i1 %139, i16* %161, i16* %162
  br label %164

164:                                              ; preds = %173, %155
  %165 = phi i64 [ %174, %173 ], [ %153, %155 ]
  %166 = phi i16* [ %176, %173 ], [ %163, %155 ]
  %167 = phi i16* [ %175, %173 ], [ %159, %155 ]
  %168 = load i16, i16* %167, align 2
  %169 = load i16, i16* %166, align 2
  %170 = icmp ult i16 %168, %169
  br i1 %170, label %207, label %171

171:                                              ; preds = %164
  %172 = icmp ult i16 %169, %168
  br i1 %172, label %309, label %173

173:                                              ; preds = %171
  %174 = add i64 %165, -1
  %175 = getelementptr inbounds i16, i16* %167, i64 1
  %176 = getelementptr inbounds i16, i16* %166, i64 1
  %177 = icmp eq i64 %174, 0
  br i1 %177, label %205, label %164

178:                                              ; preds = %129
  %179 = bitcast %"class.std::__1::basic_string.8"* %130 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %179, i64 0, i32 1, i32 1
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  %183 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i16*, i16** %183, align 8
  %185 = bitcast %"class.std::__1::basic_string.8"* %130 to i16*
  %186 = select i1 %182, i16* %184, i16* %185
  %187 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = zext i8 %181 to i64
  %190 = select i1 %182, i64 %188, i64 %189
  %191 = bitcast %"class.std::__1::basic_string.8"* %132 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i16*, i16** %195, align 8
  %197 = bitcast %"class.std::__1::basic_string.8"* %132 to i16*
  %198 = select i1 %194, i16* %196, i16* %197
  %199 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = zext i8 %193 to i64
  %202 = select i1 %194, i64 %200, i64 %201
  %203 = call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %133, i16* %186, i64 %190, i16* %198, i64 %202) #16
  %204 = icmp eq i32 %203, -1
  br i1 %204, label %207, label %309

205:                                              ; preds = %173, %135
  %206 = icmp ult i64 %151, %143
  br i1 %206, label %207, label %309

207:                                              ; preds = %164, %178, %205
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #16
  %208 = bitcast %"class.std::__1::basic_string.8"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* align 8 %208, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 24, i1 false) #16
  br label %209

209:                                              ; preds = %292, %207
  %210 = phi i8 [ 0, %207 ], [ %293, %292 ]
  %211 = phi %"class.std::__1::basic_string.8"* [ %130, %207 ], [ %212, %292 ]
  %212 = phi %"class.std::__1::basic_string.8"* [ %132, %207 ], [ %225, %292 ]
  %213 = icmp slt i8 %210, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = bitcast %"class.std::__1::basic_string.8"* %211 to i8**
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #18
  br label %217

217:                                              ; preds = %209, %214
  %218 = bitcast %"class.std::__1::basic_string.8"* %211 to i8*
  %219 = bitcast %"class.std::__1::basic_string.8"* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #16
  %220 = bitcast %"class.std::__1::basic_string.8"* %212 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %220, i64 0, i32 1, i32 1
  store i8 0, i8* %221, align 1
  %222 = bitcast %"class.std::__1::basic_string.8"* %212 to i16*
  store i16 0, i16* %222, align 2
  %223 = icmp eq %"class.std::__1::basic_string.8"* %212, %0
  br i1 %223, label %305, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %212, i64 -1
  %226 = load %"class.icu_69::Collator"*, %"class.icu_69::Collator"** %121, align 8
  %227 = icmp eq %"class.icu_69::Collator"* %226, null
  br i1 %227, label %228, label %268

228:                                              ; preds = %224
  %229 = bitcast %"class.std::__1::basic_string.8"* %225 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %229, i64 0, i32 1, i32 1
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  %233 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %212, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = zext i8 %231 to i64
  %236 = select i1 %232, i64 %234, i64 %235
  %237 = load i8, i8* %126, align 1
  %238 = icmp slt i8 %237, 0
  %239 = load i64, i64* %124, align 8
  %240 = zext i8 %237 to i64
  %241 = select i1 %238, i64 %239, i64 %240
  %242 = icmp ult i64 %236, %241
  %243 = select i1 %242, i64 %236, i64 %241
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %266, label %245

245:                                              ; preds = %228
  %246 = load i16*, i16** %123, align 8
  %247 = select i1 %238, i16* %246, i16* %127
  %248 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i16*, i16** %248, align 8
  %250 = bitcast %"class.std::__1::basic_string.8"* %225 to i16*
  %251 = select i1 %232, i16* %249, i16* %250
  br label %252

252:                                              ; preds = %261, %245
  %253 = phi i64 [ %262, %261 ], [ %243, %245 ]
  %254 = phi i16* [ %264, %261 ], [ %251, %245 ]
  %255 = phi i16* [ %263, %261 ], [ %247, %245 ]
  %256 = load i16, i16* %255, align 2
  %257 = load i16, i16* %254, align 2
  %258 = icmp ult i16 %256, %257
  br i1 %258, label %292, label %259

259:                                              ; preds = %252
  %260 = icmp ult i16 %257, %256
  br i1 %260, label %301, label %261

261:                                              ; preds = %259
  %262 = add i64 %253, -1
  %263 = getelementptr inbounds i16, i16* %255, i64 1
  %264 = getelementptr inbounds i16, i16* %254, i64 1
  %265 = icmp eq i64 %262, 0
  br i1 %265, label %266, label %252

266:                                              ; preds = %261, %228
  %267 = icmp ult i64 %241, %236
  br i1 %267, label %292, label %303

268:                                              ; preds = %224
  %269 = load i8, i8* %126, align 1
  %270 = icmp slt i8 %269, 0
  %271 = load i16*, i16** %123, align 8
  %272 = select i1 %270, i16* %271, i16* %127
  %273 = load i64, i64* %124, align 8
  %274 = zext i8 %269 to i64
  %275 = select i1 %270, i64 %273, i64 %274
  %276 = bitcast %"class.std::__1::basic_string.8"* %225 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %276, i64 0, i32 1, i32 1
  %278 = load i8, i8* %277, align 1
  %279 = icmp slt i8 %278, 0
  %280 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i16*, i16** %280, align 8
  %282 = bitcast %"class.std::__1::basic_string.8"* %225 to i16*
  %283 = select i1 %279, i16* %281, i16* %282
  %284 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %212, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = zext i8 %278 to i64
  %287 = select i1 %279, i64 %285, i64 %286
  %288 = call i32 @_ZN4base4i18n27CompareString16WithCollatorERKN6icu_698CollatorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES9_(%"class.icu_69::Collator"* nonnull dereferenceable(8) %226, i16* %272, i64 %275, i16* %283, i64 %287) #16
  %289 = icmp eq i32 %288, -1
  br i1 %289, label %290, label %294

290:                                              ; preds = %268
  %291 = load i8, i8* %221, align 1
  br label %292

292:                                              ; preds = %252, %290, %266
  %293 = phi i8 [ %291, %290 ], [ 0, %266 ], [ 0, %252 ]
  br label %209

294:                                              ; preds = %268
  %295 = bitcast %"class.std::__1::basic_string.8"* %212 to i8*
  %296 = load i8, i8* %221, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %305

298:                                              ; preds = %294
  %299 = bitcast %"class.std::__1::basic_string.8"* %212 to i8**
  %300 = load i8*, i8** %299, align 8
  call void @_ZdlPv(i8* %300) #18
  br label %305

301:                                              ; preds = %259
  %302 = bitcast %"class.std::__1::basic_string.8"* %212 to i8*
  br label %305

303:                                              ; preds = %266
  %304 = bitcast %"class.std::__1::basic_string.8"* %212 to i8*
  br label %305

305:                                              ; preds = %217, %303, %301, %298, %294
  %306 = phi i8* [ %295, %298 ], [ %295, %294 ], [ %302, %301 ], [ %304, %303 ], [ %128, %217 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* nonnull align 8 %122, i64 24, i1 false) #16
  %307 = add i32 %131, 1
  %308 = icmp eq i32 %307, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #16
  br i1 %308, label %313, label %309

309:                                              ; preds = %171, %305, %178, %205
  %310 = phi i32 [ %307, %305 ], [ %131, %205 ], [ %131, %178 ], [ %131, %171 ]
  %311 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 1
  %312 = icmp eq %"class.std::__1::basic_string.8"* %311, %1
  br i1 %312, label %316, label %129

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %130, i64 1
  %315 = icmp eq %"class.std::__1::basic_string.8"* %314, %1
  br label %316

316:                                              ; preds = %50, %309, %313, %114, %57, %86, %88, %3, %3, %108, %103, %99
  %317 = phi i1 [ true, %108 ], [ true, %103 ], [ true, %99 ], [ true, %3 ], [ true, %3 ], [ true, %88 ], [ true, %86 ], [ true, %57 ], [ true, %114 ], [ %315, %313 ], [ true, %309 ], [ true, %50 ]
  ret i1 %317
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12LazyInstanceINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN12_GLOBAL__N_122AvailableLocalesTraitsEE6OnExitEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.std::__1::vector"*
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %11, %6
  br i1 %12, label %28, label %13

13:                                               ; preds = %8, %23
  %14 = phi %"class.std::__1::basic_string"* [ %15, %23 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 -1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %20, %13
  %24 = icmp eq %"class.std::__1::basic_string"* %15, %6
  br i1 %24, label %25, label %13

25:                                               ; preds = %23
  %26 = inttoptr i64 %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %8
  %29 = phi i8* [ %27, %25 ], [ %9, %8 ]
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %10, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %1, %28
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

declare i32 @uloc_countAvailable_69() local_unnamed_addr #3

declare i8* @uloc_getAvailable_69(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_115IsDuplicateNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %10, i64 %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i64 0, i64 0), i64 3, i32 1) #16
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %30

18:                                               ; preds = %1
  %19 = load i8, i8* %4, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %7, align 8
  %22 = select i1 %20, i8* %21, i8* %9
  %23 = load i64, i64* %11, align 8
  %24 = zext i8 %19 to i64
  %25 = select i1 %20, i64 %23, i64 %24
  %26 = tail call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %22, i64 %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.204, i64 0, i64 0), i64 3, i32 0) #16
  %27 = xor i1 %26, true
  ret i1 %27

28:                                               ; preds = %38
  %29 = icmp eq i8** %48, getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN12_GLOBAL__N_115IsDuplicateNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15kDuplicateNames, i64 1, i64 0)
  br i1 %29, label %49, label %30

30:                                               ; preds = %16, %28
  %31 = phi i8** [ getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN12_GLOBAL__N_115IsDuplicateNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15kDuplicateNames, i64 0, i64 0), %16 ], [ %48, %28 ]
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = call i64 @strlen(i8* nonnull %32) #16
  br label %38

36:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ 0, %36 ], [ %35, %34 ]
  %40 = load i8, i8* %4, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %7, align 8
  %43 = select i1 %41, i8* %42, i8* %9
  %44 = load i64, i64* %11, align 8
  %45 = zext i8 %40 to i64
  %46 = select i1 %41, i64 %44, i64 %45
  %47 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %32, i64 %39, i8* %43, i64 %46) #16
  %48 = getelementptr inbounds i8*, i8** %31, i64 1
  br i1 %47, label %49, label %28

49:                                               ; preds = %38, %28
  %50 = phi i1 [ true, %38 ], [ false, %28 ]
  ret i1 %50
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9l10n_util11GetLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN9l10n_util11GetLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9l10n_util20GetApplicationLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb: argument 0"}
!7 = distinct !{!7, !"_ZN9l10n_util20GetApplicationLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN9l10n_util15NormalizeLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!14 = distinct !{!14, !"_ZN9l10n_util15NormalizeLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!15 = distinct !{!15, !9}
!16 = distinct !{!16, !11, !9}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN9l10n_util15NormalizeLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!19 = distinct !{!19, !"_ZN9l10n_util15NormalizeLocaleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!20 = distinct !{!20, !9}
!21 = distinct !{!21, !11, !9}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN9l10n_util14GetStringUTF16Ei: argument 0"}
!24 = distinct !{!24, !"_ZN9l10n_util14GetStringUTF16Ei"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN9l10n_util12FormatStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS9_ImNS4_ImEEEE: argument 0"}
!27 = distinct !{!27, !"_ZN9l10n_util12FormatStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS9_ImNS4_ImEEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.disable"}
!36 = distinct !{!36, !35}
!37 = distinct !{!37, !9}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !9}
!44 = distinct !{!44, !35}
!45 = distinct !{!45, !35}
!46 = distinct !{!46, !9}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !9}
!53 = distinct !{!53, !35}
!54 = distinct !{!54, !35}
!55 = distinct !{!55, !9}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !9}
!62 = distinct !{!62, !35}
!63 = distinct !{!63, !35}
!64 = distinct !{!64, !9}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !9}
!71 = distinct !{!71, !35}
!72 = distinct !{!72, !35}
!73 = distinct !{!73, !9}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !9}
!80 = distinct !{!80, !35}
!81 = distinct !{!81, !35}
!82 = distinct !{!82, !9}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !9}
!89 = distinct !{!89, !35}
!90 = distinct !{!90, !35}
!91 = distinct !{!91, !9}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !9}
!98 = distinct !{!98, !35}
!99 = distinct !{!99, !35}
!100 = distinct !{!100, !9}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !9}
!107 = distinct !{!107, !35}
!108 = distinct !{!108, !35}
!109 = distinct !{!109, !9}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !9}
!116 = distinct !{!116, !35}
!117 = distinct !{!117, !35}
!118 = distinct !{!118, !9}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !9}
!125 = distinct !{!125, !35}
!126 = distinct !{!126, !35}
!127 = distinct !{!127, !9}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !9}
!134 = distinct !{!134, !35}
!135 = distinct !{!135, !35}
!136 = distinct !{!136, !9}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !9}
!143 = distinct !{!143, !35}
!144 = distinct !{!144, !35}
!145 = distinct !{!145, !9}
!146 = !{!147}
!147 = distinct !{!147, !148}
!148 = distinct !{!148, !"LVerDomain"}
!149 = !{!150}
!150 = distinct !{!150, !148}
!151 = distinct !{!151, !9}
!152 = distinct !{!152, !35}
!153 = distinct !{!153, !35}
!154 = distinct !{!154, !9}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !9}
!161 = distinct !{!161, !35}
!162 = distinct !{!162, !35}
!163 = distinct !{!163, !9}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !9}
!170 = distinct !{!170, !35}
!171 = distinct !{!171, !35}
!172 = distinct !{!172, !9}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !9}
!179 = distinct !{!179, !35}
!180 = distinct !{!180, !35}
!181 = distinct !{!181, !9}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !9}
!188 = distinct !{!188, !35}
!189 = distinct !{!189, !35}
!190 = distinct !{!190, !9}
!191 = !{!192}
!192 = distinct !{!192, !193}
!193 = distinct !{!193, !"LVerDomain"}
!194 = !{!195}
!195 = distinct !{!195, !193}
!196 = distinct !{!196, !9}
!197 = distinct !{!197, !35}
!198 = distinct !{!198, !35}
!199 = distinct !{!199, !9}
!200 = !{!201}
!201 = distinct !{!201, !202}
!202 = distinct !{!202, !"LVerDomain"}
!203 = !{!204}
!204 = distinct !{!204, !202}
!205 = distinct !{!205, !9}
!206 = distinct !{!206, !35}
!207 = distinct !{!207, !35}
!208 = distinct !{!208, !9}
!209 = !{!210}
!210 = distinct !{!210, !211}
!211 = distinct !{!211, !"LVerDomain"}
!212 = !{!213}
!213 = distinct !{!213, !211}
!214 = distinct !{!214, !9}
!215 = distinct !{!215, !35}
!216 = distinct !{!216, !35}
!217 = distinct !{!217, !9}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!222}
!222 = distinct !{!222, !220}
!223 = distinct !{!223, !9}
!224 = distinct !{!224, !35}
!225 = distinct !{!225, !35}
!226 = distinct !{!226, !9}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !9}
!233 = distinct !{!233, !35}
!234 = distinct !{!234, !35}
!235 = distinct !{!235, !9}
!236 = !{!237}
!237 = distinct !{!237, !238}
!238 = distinct !{!238, !"LVerDomain"}
!239 = !{!240}
!240 = distinct !{!240, !238}
!241 = distinct !{!241, !9}
!242 = distinct !{!242, !35}
!243 = distinct !{!243, !35}
!244 = distinct !{!244, !9}
!245 = !{!246}
!246 = distinct !{!246, !247}
!247 = distinct !{!247, !"LVerDomain"}
!248 = !{!249}
!249 = distinct !{!249, !247}
!250 = distinct !{!250, !9}
!251 = distinct !{!251, !35}
!252 = distinct !{!252, !35}
!253 = distinct !{!253, !9}
!254 = !{!255}
!255 = distinct !{!255, !256}
!256 = distinct !{!256, !"LVerDomain"}
!257 = !{!258}
!258 = distinct !{!258, !256}
!259 = distinct !{!259, !9}
!260 = distinct !{!260, !35}
!261 = distinct !{!261, !35}
!262 = distinct !{!262, !9}
!263 = !{!264}
!264 = distinct !{!264, !265}
!265 = distinct !{!265, !"LVerDomain"}
!266 = !{!267}
!267 = distinct !{!267, !265}
!268 = distinct !{!268, !9}
!269 = distinct !{!269, !35}
!270 = distinct !{!270, !35}
!271 = distinct !{!271, !9}
!272 = !{!273}
!273 = distinct !{!273, !274}
!274 = distinct !{!274, !"LVerDomain"}
!275 = !{!276}
!276 = distinct !{!276, !274}
!277 = distinct !{!277, !9}
!278 = distinct !{!278, !35}
!279 = distinct !{!279, !35}
!280 = distinct !{!280, !9}
!281 = !{!282}
!282 = distinct !{!282, !283, !"_ZN9l10n_util14GetStringUTF16Ei: argument 0"}
!283 = distinct !{!283, !"_ZN9l10n_util14GetStringUTF16Ei"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"_ZN9l10n_util14GetStringUTF16Ei: argument 0"}
!286 = distinct !{!286, !"_ZN9l10n_util14GetStringUTF16Ei"}
!287 = distinct !{!287, !9}
!288 = distinct !{!288, !11, !9}
!289 = !{!"branch_weights", i32 1, i32 1048575}
!290 = !{!291}
!291 = distinct !{!291, !292, !"_ZZN9l10n_util21GetLocalesWithStringsEvENK3$_0clEv: argument 0"}
!292 = distinct !{!292, !"_ZZN9l10n_util21GetLocalesWithStringsEvENK3$_0clEv"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"_ZN9l10n_util11GetLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!295 = distinct !{!295, !"_ZN9l10n_util11GetLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
!296 = !{!294, !291}
!297 = !{!298}
!298 = distinct !{!298, !299}
!299 = distinct !{!299, !"LVerDomain"}
!300 = !{!301}
!301 = distinct !{!301, !299}
!302 = distinct !{!302, !9}
!303 = distinct !{!303, !35}
!304 = distinct !{!304, !35}
!305 = distinct !{!305, !9}
!306 = !{!307}
!307 = distinct !{!307, !308}
!308 = distinct !{!308, !"LVerDomain"}
!309 = !{!310}
!310 = distinct !{!310, !308}
!311 = distinct !{!311, !9}
!312 = distinct !{!312, !35}
!313 = distinct !{!313, !9}
!314 = distinct !{!314, !9}
!315 = distinct !{!315, !35}
!316 = distinct !{!316, !11, !9}
!317 = !{!318}
!318 = distinct !{!318, !319}
!319 = distinct !{!319, !"LVerDomain"}
!320 = !{!321}
!321 = distinct !{!321, !319}
!322 = distinct !{!322, !9}
!323 = distinct !{!323, !35}
!324 = distinct !{!324, !35}
!325 = distinct !{!325, !9}
!326 = !{!327}
!327 = distinct !{!327, !328}
!328 = distinct !{!328, !"LVerDomain"}
!329 = !{!330}
!330 = distinct !{!330, !328}
!331 = distinct !{!331, !9}
!332 = distinct !{!332, !35}
!333 = distinct !{!333, !35}
!334 = distinct !{!334, !9}
