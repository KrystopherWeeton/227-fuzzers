; ModuleID = '../../net/dns/dns_config_service.cc'
source_filename = "../../net/dns/dns_config_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::DnsConfigService" = type { i32 (...)**, %"class.base::RepeatingCallback", %"struct.net::DnsConfig", i8, i8, i8, i8, i8, %"class.absl::optional", %"class.base::FilePath", %class.scoped_refptr.40, %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.56" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.7", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.32", i32, i8, %"class.std::__1::vector.7" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.29", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { float }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.34" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.base::TimeDelta" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.scoped_refptr.40 = type { %"class.net::DnsConfigService::HostsReader"* }
%"class.net::DnsConfigService::HostsReader" = type { %"class.net::SerialWorker", %"class.net::DnsConfigService"*, %"class.absl::optional.50", %"class.base::FilePath" }
%"class.net::SerialWorker" = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", i32, %"class.base::WeakPtrFactory" }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.42" }>
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.44", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.45" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i8 }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, [7 x i8], %union.anon.54 }
%union.anon.54 = type { %"class.std::__1::unordered_map" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.41, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.55" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.55" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.56" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::DnsConfigService::Watcher" = type { i32 (...)**, %"class.net::DnsConfigService"* }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.42", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional.81" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.64" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.58 }
%struct.anon.58 = type { i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.75", i32, i64, i64 }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.86 }
%class.scoped_refptr.86 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.91", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.86, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.std::__1::pair.93", %"class.net::IPAddress", [7 x i8] }
%"struct.std::__1::pair.93" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }

$_ZN4absl17optional_internal13optional_dataINSt3__113unordered_mapINS2_4pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEEENSB_9IPAddressENSB_15DnsHostsKeyHashENS2_8equal_toISD_EENS8_INS4_IKSD_SE_EEEEEELb0EEaSEOSM_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base12DeleteHelperIN3net12SerialWorkerEE8DoDeleteEPKv = comdat any

$_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZN3net16DnsConfigService20kInvalidationTimeoutE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 150000 }, align 8
@_ZTVN3net16DnsConfigServiceE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigServiceD2Ev to i8*), i8* bitcast (void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigServiceD0Ev to i8*), i8* bitcast (void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigService13RefreshConfigEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigService12ReadHostsNowEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net16DnsConfigService7WatcherE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DnsConfigService::Watcher"*)* @_ZN3net16DnsConfigService7WatcherD2Ev to i8*), i8* bitcast (void (%"class.net::DnsConfigService::Watcher"*)* @_ZN3net16DnsConfigService7WatcherD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net16DnsConfigService11HostsReaderE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SerialWorker"*)* @_ZN3net12SerialWorker7WorkNowEv to i8*), i8* bitcast (void (%"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReaderD2Ev to i8*), i8* bitcast (void (%"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReaderD0Ev to i8*), i8* bitcast (void (%"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReader6DoWorkEv to i8*), i8* bitcast (void (%"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReader14OnWorkFinishedEv to i8*), i8* bitcast (void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReader9ReadHostsEv to i8*), i8* bitcast (i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)* @_ZN3net16DnsConfigService11HostsReader20AddAdditionalHostsToERNSt3__113unordered_mapINS2_4pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS2_8equal_toISC_EENS8_INS4_IKSC_SD_EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"ReadHosts\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../net/dns/dns_config_service.cc\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Failed to read DnsHosts.\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"StartTimer\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"OnConfigChanged\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"DNS hosts watch failed.\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"DNS config watch failed.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.8 = private unnamed_addr constant [19 x i8] c"DestructOnSequence\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"../../base/memory/ref_counted_delete_on_sequence.h\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3net16DnsConfigServiceD1Ev = hidden unnamed_addr alias void (%"class.net::DnsConfigService"*), void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigServiceD2Ev
@_ZN3net16DnsConfigService7WatcherD1Ev = hidden unnamed_addr alias void (%"class.net::DnsConfigService::Watcher"*), void (%"class.net::DnsConfigService::Watcher"*)* @_ZN3net16DnsConfigService7WatcherD2Ev
@_ZN3net16DnsConfigService11HostsReaderC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERS0_ = hidden unnamed_addr alias void (%"class.net::DnsConfigService::HostsReader"*, i8*, i64, %"class.net::DnsConfigService"*), void (%"class.net::DnsConfigService::HostsReader"*, i8*, i64, %"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigService11HostsReaderC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERS0_
@_ZN3net16DnsConfigService11HostsReaderD1Ev = hidden unnamed_addr alias void (%"class.net::DnsConfigService::HostsReader"*), void (%"class.net::DnsConfigService::HostsReader"*)* @_ZN3net16DnsConfigService11HostsReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigServiceC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN4absl8optionalINS1_9TimeDeltaEEE(%"class.net::DnsConfigService"*, i8*, i64, i8, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16DnsConfigServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %8 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2
  tail call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* %8) #13
  %9 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  %11 = bitcast i8* %9 to i32*
  store i32 0, i32* %11, align 8
  store i8 1, i8* %10, align 4
  %12 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 %3, i8* %12, align 8
  %13 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 9
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %14, i8* %1, i64 %2) #13
  %15 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 10, i32 0
  store %"class.net::DnsConfigService::HostsReader"* null, %"class.net::DnsConfigService::HostsReader"** %15, align 8
  %16 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %16) #13
  %17 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 12, i32 0
  %18 = ptrtoint %"class.net::DnsConfigService"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %17, i64 %18) #13
  ret void
}

declare void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"*) unnamed_addr #1

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigServiceD2Ev(%"class.net::DnsConfigService"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net16DnsConfigServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 10, i32 0
  %5 = load %"class.net::DnsConfigService::HostsReader"*, %"class.net::DnsConfigService::HostsReader"** %4, align 8
  %6 = icmp eq %"class.net::DnsConfigService::HostsReader"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %5, i64 0, i32 0
  tail call void @_ZN3net12SerialWorker6CancelEv(%"class.net::SerialWorker"* %8) #13
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %10) #13
  %11 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %11) #13
  %12 = load %"class.net::DnsConfigService::HostsReader"*, %"class.net::DnsConfigService::HostsReader"** %4, align 8
  %13 = icmp eq %"class.net::DnsConfigService::HostsReader"* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %12, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %39

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %15, i64 -1, i32 1
  %21 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %12, i64 0, i32 0, i32 1, i32 1, i32 0
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  %23 = bitcast %"class.base::SequencedTaskRunner"* %22 to i1 (%"class.base::SequencedTaskRunner"*)***
  %24 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %24, i64 5
  %26 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.base::SequencedTaskRunner"* %22) #13
  br i1 %27, label %28, label %34

28:                                               ; preds = %19
  %29 = bitcast %class.scoped_refptr.41* %20 to %"class.net::SerialWorker"*
  %30 = bitcast %class.scoped_refptr.41* %20 to void (%"class.net::SerialWorker"*)***
  %31 = load void (%"class.net::SerialWorker"*)**, void (%"class.net::SerialWorker"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %31, i64 2
  %33 = load void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %32, align 8
  tail call void %33(%"class.net::SerialWorker"* nonnull %29) #13
  br label %39

34:                                               ; preds = %19
  %35 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  %36 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 72) #13
  %37 = bitcast %class.scoped_refptr.41* %20 to i8*
  %38 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %35, %"class.base::Location"* nonnull dereferenceable(32) %2, void (i8*)* nonnull @_ZN4base12DeleteHelperIN3net12SerialWorkerEE8DoDeleteEPKv, i8* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #13
  br label %39

39:                                               ; preds = %9, %14, %28, %34
  %40 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %40) #13
  %41 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %41) #13
  %42 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #13
  ret void
}

declare void @_ZN3net12SerialWorker6CancelEv(%"class.net::SerialWorker"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigServiceD0Ev(%"class.net::DnsConfigService"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService10ReadConfigERKN4base17RepeatingCallbackIFvRKNS_9DnsConfigEEEE(%"class.net::DnsConfigService"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #13
  %6 = bitcast %"class.net::DnsConfigService"* %0 to void (%"class.net::DnsConfigService"*)***
  %7 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %7, i64 3
  %9 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %8, align 8
  tail call void %9(%"class.net::DnsConfigService"* %0) #13
  %10 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %10, i64 4
  %12 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %11, align 8
  tail call void %12(%"class.net::DnsConfigService"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11WatchConfigERKN4base17RepeatingCallbackIFvRKNS_9DnsConfigEEEE(%"class.net::DnsConfigService"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #13
  %6 = bitcast %"class.net::DnsConfigService"* %0 to i1 (%"class.net::DnsConfigService"*)***
  %7 = load i1 (%"class.net::DnsConfigService"*)**, i1 (%"class.net::DnsConfigService"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.net::DnsConfigService"*)*, i1 (%"class.net::DnsConfigService"*)** %7, i64 5
  %9 = load i1 (%"class.net::DnsConfigService"*)*, i1 (%"class.net::DnsConfigService"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.net::DnsConfigService"* %0) #13
  %11 = xor i1 %10, true
  %12 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %13 = zext i1 %11 to i8
  store i8 %13, i8* %12, align 8
  %14 = bitcast %"class.net::DnsConfigService"* %0 to void (%"class.net::DnsConfigService"*)***
  %15 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %15, i64 3
  %17 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %16, align 8
  tail call void %17(%"class.net::DnsConfigService"* %0) #13
  %18 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %14, align 8
  %19 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %18, i64 4
  %20 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %19, align 8
  tail call void %20(%"class.net::DnsConfigService"* %0) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net16DnsConfigService13RefreshConfigEv(%"class.net::DnsConfigService"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net16DnsConfigService7WatcherC2ERS0_(%"class.net::DnsConfigService::Watcher"* nocapture, %"class.net::DnsConfigService"* dereferenceable(424)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsConfigService::Watcher", %"class.net::DnsConfigService::Watcher"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16DnsConfigService7WatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService::Watcher", %"class.net::DnsConfigService::Watcher"* %0, i64 0, i32 1
  store %"class.net::DnsConfigService"* %1, %"class.net::DnsConfigService"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net16DnsConfigService7WatcherD2Ev(%"class.net::DnsConfigService::Watcher"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsConfigService::Watcher", %"class.net::DnsConfigService::Watcher"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16DnsConfigService7WatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService7WatcherD0Ev(%"class.net::DnsConfigService::Watcher"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService7Watcher15OnConfigChangedEb(%"class.net::DnsConfigService::Watcher"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DnsConfigService::Watcher", %"class.net::DnsConfigService::Watcher"* %0, i64 0, i32 1
  %4 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %3, align 8
  tail call void @_ZN3net16DnsConfigService15OnConfigChangedEb(%"class.net::DnsConfigService"* %4, i1 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService15OnConfigChangedEb(%"class.net::DnsConfigService"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %48, label %11

11:                                               ; preds = %2
  %12 = zext i1 %1 to i8
  %13 = tail call dereferenceable(8) %class.scoped_refptr.41* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #13
  %14 = getelementptr inbounds %class.scoped_refptr.41, %class.scoped_refptr.41* %13, i64 0, i32 0
  %15 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 235) #13
  %17 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13, !noalias !3
  %19 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 12, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %19) #13, !noalias !3
  %20 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 12, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !3
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %21) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13, !noalias !3
  %23 = call i8* @_Znwm(i64 72) #15, !noalias !6
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !6
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::DnsConfigService"*, i1)* @_ZN3net16DnsConfigService22OnConfigChangedDelayedEb to i64), i64 0>, <2 x i64>* %26, align 8, !noalias !6
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to %"class.base::internal::WeakReference"*
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %28, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %29) #13, !noalias !6
  %30 = getelementptr inbounds i8, i8* %23, i64 56
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !6
  store i64 %33, i64* %31, align 8, !noalias !6
  %34 = getelementptr inbounds i8, i8* %23, i64 64
  store i8 %12, i8* %34, align 1, !noalias !6
  %35 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %23, i8** %35, align 8, !alias.scope !6
  %36 = load i8, i8* %8, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %11
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

39:                                               ; preds = %11
  %40 = bitcast %"class.base::SequencedTaskRunner"* %15 to %"class.base::TaskRunner"*
  %41 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::SequencedTaskRunner"* %15 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %44 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %43, align 8
  %45 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %44, align 8
  %46 = call zeroext i1 %45(%"class.base::TaskRunner"* %40, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6, i64 %42) #13
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #13
  br label %68

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  store i8 0, i8* %49, align 1
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %0) #13
  br label %53

53:                                               ; preds = %52, %48
  br i1 %1, label %54, label %59

54:                                               ; preds = %53
  %55 = bitcast %"class.net::DnsConfigService"* %0 to void (%"class.net::DnsConfigService"*)***
  %56 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %56, i64 3
  %58 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %57, align 8
  tail call void %58(%"class.net::DnsConfigService"* %0) #13
  br label %68

59:                                               ; preds = %53
  %60 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %60, label %61, label %66

61:                                               ; preds = %59
  %62 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %62) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 259, i32 2) #13
  %63 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_ostringstream"* %63 to %"class.std::__1::basic_ostream"*
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i64 24) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %62) #13
  br label %66

66:                                               ; preds = %61, %59
  %67 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  store i8 1, i8* %67, align 8
  br label %68

68:                                               ; preds = %66, %54, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService7Watcher14OnHostsChangedEb(%"class.net::DnsConfigService::Watcher"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService::Watcher", %"class.net::DnsConfigService::Watcher"* %0, i64 0, i32 1
  %5 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %4, align 8
  %6 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  store i8 0, i8* %6, align 2
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %5) #13
  br label %10

10:                                               ; preds = %9, %2
  br i1 %1, label %11, label %16

11:                                               ; preds = %10
  %12 = bitcast %"class.net::DnsConfigService"* %5 to void (%"class.net::DnsConfigService"*)***
  %13 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %13, i64 4
  %15 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %14, align 8
  tail call void %15(%"class.net::DnsConfigService"* %5) #13
  br label %25

16:                                               ; preds = %10
  %17 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 249, i32 2) #13
  %20 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 23) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #13
  br label %23

23:                                               ; preds = %18, %16
  %24 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %5, i64 0, i32 3
  store i8 1, i8* %24, align 8
  br label %25

25:                                               ; preds = %11, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService14OnHostsChangedEb(%"class.net::DnsConfigService"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i8 0, i8* %4, align 2
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %0) #13
  br label %8

8:                                                ; preds = %2, %7
  br i1 %1, label %9, label %14

9:                                                ; preds = %8
  %10 = bitcast %"class.net::DnsConfigService"* %0 to void (%"class.net::DnsConfigService"*)***
  %11 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %11, i64 4
  %13 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %12, align 8
  tail call void %13(%"class.net::DnsConfigService"* %0) #13
  br label %23

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 249, i32 2) #13
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 23) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #13
  br label %21

21:                                               ; preds = %14, %16
  %22 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  store i8 1, i8* %22, align 8
  br label %23

23:                                               ; preds = %21, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net16DnsConfigService7Watcher22CheckOnCorrectSequenceEv(%"class.net::DnsConfigService::Watcher"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReaderC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERS0_(%"class.net::DnsConfigService::HostsReader"*, i8*, i64, %"class.net::DnsConfigService"* dereferenceable(424)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 0
  tail call void @_ZN3net12SerialWorkerC2Ev(%"class.net::SerialWorker"* %5) #13
  %6 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net16DnsConfigService11HostsReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 1
  store %"class.net::DnsConfigService"* %3, %"class.net::DnsConfigService"** %7, align 8
  %8 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast %union.anon.54* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #13
  %11 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 3
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %11, i8* %1, i64 %2) #13
  ret void
}

declare void @_ZN3net12SerialWorkerC2Ev(%"class.net::SerialWorker"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReaderD2Ev(%"class.net::DnsConfigService::HostsReader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net16DnsConfigService11HostsReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 3
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %3) #13
  %4 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %7, %25
  %12 = phi %"struct.std::__1::__hash_node_base"* [ %14, %25 ], [ %9, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 2
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 6
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %16 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %17) #13
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %11
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %22, %11
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %12 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %14, null
  br i1 %27, label %28, label %11

28:                                               ; preds = %25, %7
  %29 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %29, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %32, %28
  store i8 0, i8* %4, align 8
  br label %35

35:                                               ; preds = %1, %34
  %36 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 0
  tail call void @_ZN3net12SerialWorkerD2Ev(%"class.net::SerialWorker"* %36) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12SerialWorkerD2Ev(%"class.net::SerialWorker"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReaderD0Ev(%"class.net::DnsConfigService::HostsReader"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net16DnsConfigService11HostsReaderD2Ev(%"class.net::DnsConfigService::HostsReader"* %0) #13
  %2 = bitcast %"class.net::DnsConfigService::HostsReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReader9ReadHostsEv(%"class.absl::optional.50"* noalias sret, %"class.net::DnsConfigService::HostsReader"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ScopedBlockingCall", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.std::__1::unordered_map", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 102) #13
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %4, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  %8 = bitcast %"class.std::__1::unordered_map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 4, i64 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 3
  %13 = bitcast %"class.std::__1::__compressed_pair.29"* %12 to i32*
  %14 = bitcast i8* %11 to i32*
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %13, align 8
  %15 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %1, i64 0, i32 3
  %16 = call zeroext i1 @_ZN3net14ParseHostsFileERKN4base8FilePathEPNSt3__113unordered_mapINS4_4pairINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS4_8equal_toISE_EENSA_INS6_IKSE_SF_EEEEEE(%"class.base::FilePath"* dereferenceable(24) %15, %"class.std::__1::unordered_map"* nonnull %5) #13
  %17 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %16, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %20 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = bitcast %union.anon.54* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false) #13
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %19, align 8
  br label %62

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %17, align 8
  %25 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %26 = bitcast %"class.std::__1::unordered_map"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %28 = bitcast %"class.std::__1::unordered_map"* %25 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %10, align 8
  store i64 %30, i64* %29, align 8
  store i64 0, i64* %10, align 8
  %31 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__compressed_pair.22"* %32 to i64*
  %34 = bitcast %"class.std::__1::__compressed_pair.22"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %24, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %39 = bitcast %"class.std::__1::__compressed_pair.29"* %38 to i32*
  %40 = load i32, i32* %13, align 8
  store i32 %40, i32* %39, align 8
  %41 = icmp eq i64 %37, 0
  %42 = inttoptr i64 %27 to %"struct.std::__1::__hash_node_base"**
  %43 = inttoptr i64 %35 to %"struct.std::__1::__hash_node_base"*
  br i1 %41, label %62, label %44

44:                                               ; preds = %23
  %45 = getelementptr inbounds %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.22"* %31, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @llvm.ctpop.i64(i64 %30) #13, !range !11
  %50 = icmp ugt i64 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = add i64 %30, -1
  %53 = and i64 %48, %52
  br label %58

54:                                               ; preds = %44
  %55 = icmp ult i64 %48, %30
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %48, %30
  br label %58

58:                                               ; preds = %51, %54, %56
  %59 = phi i64 [ %53, %51 ], [ %57, %56 ], [ %48, %54 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, i64 %59
  store %"struct.std::__1::__hash_node_base"* %45, %"struct.std::__1::__hash_node_base"** %60, align 8
  %61 = bitcast %"class.std::__1::__compressed_pair.22"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #13
  br label %82

62:                                               ; preds = %23, %18
  %63 = phi %"struct.std::__1::__hash_node_base"* [ %43, %23 ], [ %22, %18 ]
  %64 = icmp eq %"struct.std::__1::__hash_node_base"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %62, %79
  %66 = phi %"struct.std::__1::__hash_node_base"* [ %68, %79 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 2
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 6
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %71) #13
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %65
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %76, %65
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i8*
  call void @_ZdlPv(i8* %80) #15
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %81, label %82, label %65

82:                                               ; preds = %79, %58, %62
  %83 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"struct.std::__1::__hash_node_base"** %83 to i8*
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #13
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

declare zeroext i1 @_ZN3net14ParseHostsFileERKN4base8FilePathEPNSt3__113unordered_mapINS4_4pairINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS4_8equal_toISE_EENSA_INS6_IKSE_SF_EEEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::unordered_map"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net16DnsConfigService11HostsReader20AddAdditionalHostsToERNSt3__113unordered_mapINS2_4pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS2_8equal_toISC_EENS8_INS4_IKSC_SD_EEEEEE(%"class.net::DnsConfigService::HostsReader"* nocapture readnone, %"class.std::__1::unordered_map"* nocapture readnone dereferenceable(40)) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReader6DoWorkEv(%"class.net::DnsConfigService::HostsReader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.50", align 8
  %3 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #13
  %4 = bitcast %"class.net::DnsConfigService::HostsReader"* %0 to void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)***
  %5 = load void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)**, void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)*, void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)** %5, i64 5
  %7 = load void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)*, void (%"class.absl::optional.50"*, %"class.net::DnsConfigService::HostsReader"*)** %6, align 8
  call void %7(%"class.absl::optional.50"* nonnull sret %2, %"class.net::DnsConfigService::HostsReader"* %0) #13
  %8 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %2, i64 0, i32 0
  %11 = call dereferenceable(48) %"class.absl::optional_internal::optional_data.51"* @_ZN4absl17optional_internal13optional_dataINSt3__113unordered_mapINS2_4pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEEENSB_9IPAddressENSB_15DnsHostsKeyHashENS2_8equal_toISD_EENS8_INS4_IKSD_SE_EEEEEELb0EEaSEOSM_(%"class.absl::optional_internal::optional_data.51"* %9, %"class.absl::optional_internal::optional_data.51"* nonnull dereferenceable(48) %10) #13
  %12 = load i8, i8* %3, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %14, %32
  %19 = phi %"struct.std::__1::__hash_node_base"* [ %21, %32 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 2
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 6
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %24) #13
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %29, %18
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i8*
  call void @_ZdlPv(i8* %33) #15
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %21, null
  br i1 %34, label %35, label %18

35:                                               ; preds = %32, %14
  %36 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"** %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.std::__1::__hash_node_base"** %37 to i8*
  call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %39, %35
  store i8 0, i8* %3, align 8
  br label %42

42:                                               ; preds = %1, %41
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #13
  %43 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %84, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  %48 = bitcast %"class.net::DnsConfigService::HostsReader"* %0 to i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)***
  %49 = load i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)**, i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)*, i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)** %49, i64 6
  %51 = load i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)*, i1 (%"class.net::DnsConfigService::HostsReader"*, %"class.std::__1::unordered_map"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.net::DnsConfigService::HostsReader"* %0, %"class.std::__1::unordered_map"* dereferenceable(40) %47) #13
  br i1 %52, label %84, label %53

53:                                               ; preds = %46
  %54 = load i8, i8* %43, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %84, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %56, %74
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %63, %74 ], [ %58, %56 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 2
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 6
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %66) #13
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %71, %60
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i8*
  call void @_ZdlPv(i8* %75) #15
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %63, null
  br i1 %76, label %77, label %60

77:                                               ; preds = %74, %56
  %78 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %78, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"** %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"struct.std::__1::__hash_node_base"** %79 to i8*
  call void @_ZdlPv(i8* %82) #15
  br label %83

83:                                               ; preds = %81, %77
  store i8 0, i8* %43, align 8
  br label %84

84:                                               ; preds = %42, %83, %53, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11HostsReader14OnWorkFinishedEv(%"class.net::DnsConfigService::HostsReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_map", align 8
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %79, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 1
  %9 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %8, align 8
  %10 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unordered_map"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %14 = bitcast %"class.std::__1::unordered_map"* %2 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  store i64 0, i64* %15, align 8
  %18 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__compressed_pair.22"* %19 to i64*
  %21 = bitcast %"class.std::__1::__compressed_pair.22"* %18 to i64*
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %28 = bitcast %"class.std::__1::__compressed_pair.29"* %27 to i32*
  %29 = bitcast %"class.std::__1::__compressed_pair.29"* %26 to i32*
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %29, align 8
  %31 = icmp eq i64 %25, 0
  %32 = inttoptr i64 %13 to %"struct.std::__1::__hash_node_base"**
  br i1 %31, label %52, label %33

33:                                               ; preds = %7
  %34 = inttoptr i64 %22 to %"struct.std::__1::__hash_node_base"*
  %35 = getelementptr inbounds %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.22"* %18, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = tail call i64 @llvm.ctpop.i64(i64 %17) #13, !range !11
  %40 = icmp ugt i64 %39, 1
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = add i64 %17, -1
  %43 = and i64 %38, %42
  br label %48

44:                                               ; preds = %33
  %45 = icmp ult i64 %38, %17
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %38, %17
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %38, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %49
  store %"struct.std::__1::__hash_node_base"* %35, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = bitcast %"class.std::__1::__compressed_pair.22"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  br label %52

52:                                               ; preds = %7, %48
  call void @_ZN3net16DnsConfigService11OnHostsReadENSt3__113unordered_mapINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISB_EENS7_INS3_IKSB_SC_EEEEEE(%"class.net::DnsConfigService"* %9, %"class.std::__1::unordered_map"* nonnull %2)
  %53 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %52, %70
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %59, %70 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 6
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %62) #13
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %56
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %67, %56
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i8*
  call void @_ZdlPv(i8* %71) #15
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %72, label %73, label %56

73:                                               ; preds = %70, %52
  %74 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %74, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"** %75, null
  br i1 %76, label %86, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.std::__1::__hash_node_base"** %75 to i8*
  call void @_ZdlPv(i8* %78) #15
  br label %86

79:                                               ; preds = %1
  %80 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #13
  br i1 %80, label %81, label %86

81:                                               ; preds = %79
  %82 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %82) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 131, i32 1) #13
  %83 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %84 = bitcast %"class.std::__1::basic_ostringstream"* %83 to %"class.std::__1::basic_ostream"*
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i64 24) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %82) #13
  br label %86

86:                                               ; preds = %81, %79, %77, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService11OnHostsReadENSt3__113unordered_mapINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISB_EENS7_INS3_IKSB_SC_EEEEEE(%"class.net::DnsConfigService"*, %"class.std::__1::unordered_map"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::DnsConfig", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2, i32 4
  %5 = tail call zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40) %1, %"class.std::__1::unordered_map"* dereferenceable(40) %4) #13
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %4, i64 0, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"* %8, %"class.std::__1::__hash_table"* dereferenceable(40) %7) #13
  %9 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 5
  store i8 1, i8* %11, align 2
  %12 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %15, %10
  %20 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %20) #13
  %21 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %19
  store i8 0, i8* %21, align 1
  %25 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1
  br i1 %28, label %37, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.net::DnsConfig"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %31) #13
  call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* nonnull %3) #13
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %32, align 8
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %35, align 8
  call void %36(%"class.base::internal::BindStateBase"* %33, %"struct.net::DnsConfig"* nonnull dereferenceable(208) %3) #13
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %31) #13
  br label %44

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %39, align 8
  %41 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %40, i64 0, i32 1
  %42 = bitcast void ()** %41 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %43 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %42, align 8
  tail call void %43(%"class.base::internal::BindStateBase"* %40, %"struct.net::DnsConfig"* dereferenceable(208) %38) #13
  br label %44

44:                                               ; preds = %37, %30, %19, %15
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService12ReadHostsNowEv(%"class.net::DnsConfigService"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %class.scoped_refptr.40, %class.scoped_refptr.40* %3, i64 0, i32 0
  %5 = load %"class.net::DnsConfigService::HostsReader"*, %"class.net::DnsConfigService::HostsReader"** %4, align 8
  %6 = icmp eq %"class.net::DnsConfigService::HostsReader"* %5, null
  br i1 %6, label %7, label %62

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 9, i32 0
  %9 = tail call i8* @_Znwm(i64 128) #15
  %10 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = bitcast i8* %9 to %"class.net::SerialWorker"*
  tail call void @_ZN3net12SerialWorkerC2Ev(%"class.net::SerialWorker"* nonnull %22) #13
  %23 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net16DnsConfigService11HostsReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %9, i64 48
  %25 = bitcast i8* %24 to %"class.net::DnsConfigService"**
  store %"class.net::DnsConfigService"* %0, %"class.net::DnsConfigService"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 40, i1 false) #13
  %28 = getelementptr inbounds i8, i8* %9, i64 104
  %29 = bitcast i8* %28 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %29, i8* %17, i64 %21) #13
  %30 = getelementptr inbounds i8, i8* %9, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  %33 = ptrtoint i8* %9 to i64
  %34 = bitcast %class.scoped_refptr.40* %3 to i64*
  %35 = load %"class.net::DnsConfigService::HostsReader"*, %"class.net::DnsConfigService::HostsReader"** %4, align 8
  store i64 %33, i64* %34, align 8
  %36 = icmp eq %"class.net::DnsConfigService::HostsReader"* %35, null
  br i1 %36, label %62, label %37

37:                                               ; preds = %7
  %38 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %35, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %62

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedDeleteOnSequence", %"class.base::RefCountedDeleteOnSequence"* %38, i64 -1, i32 1
  %44 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %35, i64 0, i32 0, i32 1, i32 1, i32 0
  %45 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %44, align 8
  %46 = bitcast %"class.base::SequencedTaskRunner"* %45 to i1 (%"class.base::SequencedTaskRunner"*)***
  %47 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %47, i64 5
  %49 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.base::SequencedTaskRunner"* %45) #13
  br i1 %50, label %51, label %57

51:                                               ; preds = %42
  %52 = bitcast %class.scoped_refptr.41* %43 to %"class.net::SerialWorker"*
  %53 = bitcast %class.scoped_refptr.41* %43 to void (%"class.net::SerialWorker"*)***
  %54 = load void (%"class.net::SerialWorker"*)**, void (%"class.net::SerialWorker"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %54, i64 2
  %56 = load void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %55, align 8
  tail call void %56(%"class.net::SerialWorker"* nonnull %52) #13
  br label %62

57:                                               ; preds = %42
  %58 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %44, align 8
  %59 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 72) #13
  %60 = bitcast %class.scoped_refptr.41* %43 to i8*
  %61 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %58, %"class.base::Location"* nonnull dereferenceable(32) %2, void (i8*)* nonnull @_ZN4base12DeleteHelperIN3net12SerialWorkerEE8DoDeleteEPKv, i8* %60) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #13
  br label %62

62:                                               ; preds = %1, %57, %51, %37, %7
  %63 = load %"class.net::DnsConfigService::HostsReader"*, %"class.net::DnsConfigService::HostsReader"** %4, align 8
  %64 = getelementptr inbounds %"class.net::DnsConfigService::HostsReader", %"class.net::DnsConfigService::HostsReader"* %63, i64 0, i32 0
  %65 = bitcast %"class.net::DnsConfigService::HostsReader"* %63 to void (%"class.net::SerialWorker"*)***
  %66 = load void (%"class.net::SerialWorker"*)**, void (%"class.net::SerialWorker"*)*** %65, align 8
  %67 = load void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %66, align 8
  call void %67(%"class.net::SerialWorker"* %64) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService16InvalidateConfigEv(%"class.net::DnsConfigService"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 1
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %9) #13
  %10 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 202) #13
  %11 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = ptrtoint %"class.net::DnsConfigService"* %0 to i64
  %13 = call i8* @_Znwm(i64 56) #15, !noalias !12
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !12
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::DnsConfigService"*)* @_ZN3net16DnsConfigService9OnTimeoutEv to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !12
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %12, i64* %18, align 8, !noalias !12
  %19 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !12
  %20 = bitcast %"class.base::OneShotTimer"* %8 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %21, i64 7
  %23 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.base::OneShotTimer"* %8, %"class.base::Location"* nonnull dereferenceable(32) %3, i64 150000, %"class.base::OnceCallback"* nonnull %2) #13
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  br label %25

25:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService15InvalidateHostsEv(%"class.net::DnsConfigService"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService12OnConfigReadENS_9DnsConfigE(%"class.net::DnsConfigService"*, %"struct.net::DnsConfig"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::DnsConfig", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2
  %5 = tail call zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"* %1, %"struct.net::DnsConfig"* dereferenceable(208) %4) #13
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN3net9DnsConfig15CopyIgnoreHostsERKS0_(%"struct.net::DnsConfig"* %4, %"struct.net::DnsConfig"* dereferenceable(208) %1) #13
  %7 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  store i8 1, i8* %7, align 1
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 4
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %13, %8
  %18 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %18) #13
  %19 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %17
  store i8 0, i8* %19, align 1
  %23 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1
  br i1 %26, label %35, label %28

28:                                               ; preds = %22
  %29 = bitcast %"struct.net::DnsConfig"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %29) #13
  call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* nonnull %3) #13
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %30, align 8
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %33 = bitcast void ()** %32 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %34 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %33, align 8
  call void %34(%"class.base::internal::BindStateBase"* %31, %"struct.net::DnsConfig"* nonnull dereferenceable(208) %3) #13
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %29) #13
  br label %41

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %36, align 8
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %39 = bitcast void ()** %38 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %40 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %39, align 8
  tail call void %40(%"class.base::internal::BindStateBase"* %37, %"struct.net::DnsConfig"* dereferenceable(208) %4) #13
  br label %41

41:                                               ; preds = %35, %28, %17, %13
  ret void
}

declare zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #1

declare void @_ZN3net9DnsConfig15CopyIgnoreHostsERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService16OnCompleteConfigEv(%"class.net::DnsConfigService"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::DnsConfig", align 8
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %3) #13
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  store i8 0, i8* %4, align 1
  %8 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1
  br i1 %11, label %20, label %13

13:                                               ; preds = %7
  %14 = bitcast %"struct.net::DnsConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %14) #13
  call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* nonnull %2) #13
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, %"struct.net::DnsConfig"* nonnull dereferenceable(208) %2) #13
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %14) #13
  br label %27

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %23, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %26 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %25, align 8
  tail call void %26(%"class.base::internal::BindStateBase"* %23, %"struct.net::DnsConfig"* dereferenceable(208) %21) #13
  br label %27

27:                                               ; preds = %1, %20, %13
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService9OnTimeoutEv(%"class.net::DnsConfigService"* nocapture) #0 align 2 {
  %2 = alloca %"struct.net::DnsConfig", align 8
  %3 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 6
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 7
  store i8 1, i8* %4, align 4
  %5 = bitcast %"struct.net::DnsConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %5) #13
  call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* nonnull %2) #13
  %6 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %9 = bitcast void ()** %8 to void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)**
  %10 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)** %9, align 8
  call void %10(%"class.base::internal::BindStateBase"* %7, %"struct.net::DnsConfig"* nonnull dereferenceable(208) %2) #13
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %5) #13
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.41* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16DnsConfigService22OnConfigChangedDelayedEb(%"class.net::DnsConfigService"*, i1 zeroext) #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store i8 0, i8* %4, align 1
  tail call void @_ZN3net16DnsConfigService10StartTimerEv(%"class.net::DnsConfigService"* %0) #13
  br label %8

8:                                                ; preds = %2, %7
  br i1 %1, label %9, label %14

9:                                                ; preds = %8
  %10 = bitcast %"class.net::DnsConfigService"* %0 to void (%"class.net::DnsConfigService"*)***
  %11 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %11, i64 3
  %13 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %12, align 8
  tail call void %13(%"class.net::DnsConfigService"* %0) #13
  br label %23

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 259, i32 2) #13
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i64 24) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #13
  br label %21

21:                                               ; preds = %14, %16
  %22 = getelementptr inbounds %"class.net::DnsConfigService", %"class.net::DnsConfigService"* %0, i64 0, i32 3
  store i8 1, i8* %22, align 8
  br label %23

23:                                               ; preds = %21, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3net12SerialWorker7WorkNowEv(%"class.net::SerialWorker"*) unnamed_addr #1

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.absl::optional_internal::optional_data.51"* @_ZN4absl17optional_internal13optional_dataINSt3__113unordered_mapINS2_4pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN3net13AddressFamilyEEENSB_9IPAddressENSB_15DnsHostsKeyHashENS2_8equal_toISD_EENS8_INS4_IKSD_SE_EEEEEELb0EEaSEOSM_(%"class.absl::optional_internal::optional_data.51"*, %"class.absl::optional_internal::optional_data.51"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  br i1 %10, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %11, i64 0, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"* %14, %"class.std::__1::__hash_table"* dereferenceable(40) %13) #13
  br label %92

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unordered_map"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %16, align 8
  %19 = bitcast %"class.std::__1::unordered_map"* %11 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  store i64 0, i64* %20, align 8
  %23 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__compressed_pair.22"* %24 to i64*
  %26 = bitcast %"class.std::__1::__compressed_pair.22"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.29"* %32 to i32*
  %34 = bitcast %"class.std::__1::__compressed_pair.29"* %31 to i32*
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %34, align 8
  %36 = icmp eq i64 %30, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %15
  %38 = inttoptr i64 %27 to %"struct.std::__1::__hash_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.22"* %23, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %21, align 8
  %44 = tail call i64 @llvm.ctpop.i64(i64 %43) #13, !range !11
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %37
  %47 = add i64 %43, -1
  %48 = and i64 %47, %42
  br label %53

49:                                               ; preds = %37
  %50 = icmp ult i64 %42, %43
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %42, %43
  br label %53

53:                                               ; preds = %51, %49, %46
  %54 = phi i64 [ %48, %46 ], [ %52, %51 ], [ %42, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %54
  store %"struct.std::__1::__hash_node_base"* %39, %"struct.std::__1::__hash_node_base"** %57, align 8
  %58 = bitcast %"class.std::__1::__compressed_pair.22"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #13
  br label %59

59:                                               ; preds = %53, %15
  store i8 1, i8* %8, align 8
  br label %92

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %92, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %64, %82
  %69 = phi %"struct.std::__1::__hash_node_base"* [ %71, %82 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %69, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %69, i64 2
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %69, i64 6
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %74) #13
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %68
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %79, %68
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  %84 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %84, label %85, label %68

85:                                               ; preds = %82, %64
  %86 = getelementptr inbounds %"class.absl::optional_internal::optional_data.51", %"class.absl::optional_internal::optional_data.51"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %86, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base"** %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = bitcast %"struct.std::__1::__hash_node_base"** %87 to i8*
  tail call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %89, %85
  store i8 0, i8* %61, align 8
  br label %92

92:                                               ; preds = %91, %60, %59, %12
  ret %"class.absl::optional_internal::optional_data.51"* %0
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperIN3net12SerialWorkerEE8DoDeleteEPKv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.net::SerialWorker"*
  %5 = bitcast i8* %0 to void (%"class.net::SerialWorker"*)***
  %6 = load void (%"class.net::SerialWorker"*)**, void (%"class.net::SerialWorker"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %6, i64 2
  %8 = load void (%"class.net::SerialWorker"*)*, void (%"class.net::SerialWorker"*)** %7, align 8
  tail call void %8(%"class.net::SerialWorker"* nonnull %4) #13
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40), %"class.std::__1::unordered_map"* dereferenceable(40)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %90

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %90, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0
  br label %15

15:                                               ; preds = %13, %86
  %16 = phi i64 [ %11, %13 ], [ %88, %86 ]
  %17 = inttoptr i64 %16 to %"struct.std::__1::__hash_node"*
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0
  %20 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"* %14, %"struct.std::__1::pair.93"* dereferenceable(32) %19) #13
  %21 = icmp eq %"struct.std::__1::__hash_node_base"* %20, null
  br i1 %21, label %90, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 2
  %24 = bitcast %"struct.std::__1::pair"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %34 to i64
  %40 = select i1 %35, i64 %38, i64 %39
  %41 = icmp eq i64 %31, %40
  br i1 %41, label %42, label %90

42:                                               ; preds = %22
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"struct.std::__1::pair"* %18 to i8*
  %46 = select i1 %27, i8* %44, i8* %45
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8*
  %50 = select i1 %35, i8* %48, i8* %49
  %51 = icmp eq i64 %31, 0
  br i1 %27, label %58, label %52

52:                                               ; preds = %42
  br i1 %51, label %74, label %53

53:                                               ; preds = %52
  %54 = ptrtoint i8* %44 to i64
  %55 = trunc i64 %54 to i8
  %56 = load i8, i8* %50, align 1
  %57 = icmp eq i8 %56, %55
  br i1 %57, label %59, label %90

58:                                               ; preds = %42
  br i1 %51, label %74, label %71

59:                                               ; preds = %53, %66
  %60 = phi i64 [ %63, %66 ], [ %30, %53 ]
  %61 = phi i8* [ %64, %66 ], [ %45, %53 ]
  %62 = phi i8* [ %67, %66 ], [ %50, %53 ]
  %63 = add i64 %60, -1
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = load i8, i8* %64, align 1
  %69 = load i8, i8* %67, align 1
  %70 = icmp eq i8 %68, %69
  br i1 %70, label %59, label %90

71:                                               ; preds = %58
  %72 = tail call i32 @bcmp(i8* %46, i8* %50, i64 %31) #13
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %59, %71, %58, %52
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %76, %79
  br i1 %80, label %81, label %90

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 6
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to %"class.net::IPAddress"*
  %85 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %82, %"class.net::IPAddress"* dereferenceable(17) %84) #13
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = inttoptr i64 %16 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %15

90:                                               ; preds = %15, %81, %74, %71, %22, %53, %86, %66, %8, %2
  %91 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %66 ], [ false, %15 ], [ false, %81 ], [ false, %74 ], [ false, %71 ], [ false, %22 ], [ false, %53 ], [ true, %86 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair.93"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.93"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.93", %"struct.std::__1::pair.93"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"struct.std::__1::pair.93"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"struct.std::__1::pair.93", %"struct.std::__1::pair.93"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %84, label %16

16:                                               ; preds = %2
  %17 = add i64 %14, -1
  %18 = and i64 %14, 7
  %19 = icmp ult i64 %17, 7
  br i1 %19, label %68, label %20

20:                                               ; preds = %16
  %21 = sub i64 %14, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %64, %22 ]
  %24 = phi i8* [ %10, %20 ], [ %65, %22 ]
  %25 = phi i64 [ %21, %20 ], [ %66, %22 ]
  %26 = load i8, i8* %24, align 1
  %27 = mul i64 %23, 131
  %28 = sext i8 %26 to i64
  %29 = add i64 %27, %28
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = mul i64 %29, 131
  %33 = sext i8 %31 to i64
  %34 = add i64 %32, %33
  %35 = getelementptr inbounds i8, i8* %24, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = mul i64 %34, 131
  %38 = sext i8 %36 to i64
  %39 = add i64 %37, %38
  %40 = getelementptr inbounds i8, i8* %24, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = mul i64 %39, 131
  %43 = sext i8 %41 to i64
  %44 = add i64 %42, %43
  %45 = getelementptr inbounds i8, i8* %24, i64 4
  %46 = load i8, i8* %45, align 1
  %47 = mul i64 %44, 131
  %48 = sext i8 %46 to i64
  %49 = add i64 %47, %48
  %50 = getelementptr inbounds i8, i8* %24, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = mul i64 %49, 131
  %53 = sext i8 %51 to i64
  %54 = add i64 %52, %53
  %55 = getelementptr inbounds i8, i8* %24, i64 6
  %56 = load i8, i8* %55, align 1
  %57 = mul i64 %54, 131
  %58 = sext i8 %56 to i64
  %59 = add i64 %57, %58
  %60 = getelementptr inbounds i8, i8* %24, i64 7
  %61 = load i8, i8* %60, align 1
  %62 = mul i64 %59, 131
  %63 = sext i8 %61 to i64
  %64 = add i64 %62, %63
  %65 = getelementptr inbounds i8, i8* %24, i64 8
  %66 = add i64 %25, -8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %22

68:                                               ; preds = %22, %16
  %69 = phi i64 [ undef, %16 ], [ %64, %22 ]
  %70 = phi i64 [ 0, %16 ], [ %64, %22 ]
  %71 = phi i8* [ %10, %16 ], [ %65, %22 ]
  %72 = icmp eq i64 %18, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %68, %73
  %74 = phi i64 [ %80, %73 ], [ %70, %68 ]
  %75 = phi i8* [ %81, %73 ], [ %71, %68 ]
  %76 = phi i64 [ %82, %73 ], [ %18, %68 ]
  %77 = load i8, i8* %75, align 1
  %78 = mul i64 %74, 131
  %79 = sext i8 %77 to i64
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 1
  %82 = add i64 %76, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %73, !llvm.loop !17

84:                                               ; preds = %68, %73, %2
  %85 = phi i64 [ 0, %2 ], [ %69, %68 ], [ %80, %73 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair.93", %"struct.std::__1::pair.93"* %1, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = zext i32 %87 to i64
  %89 = add i64 %85, %88
  %90 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %180, label %93

93:                                               ; preds = %84
  %94 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !11
  %95 = icmp ugt i64 %94, 1
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = add i64 %91, -1
  %98 = and i64 %97, %89
  br label %103

99:                                               ; preds = %93
  %100 = icmp ult i64 %89, %91
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = urem i64 %89, %91
  br label %103

103:                                              ; preds = %96, %99, %101
  %104 = phi i64 [ %98, %96 ], [ %102, %101 ], [ %89, %99 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %180, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %180, label %114

114:                                              ; preds = %110
  %115 = add i64 %91, -1
  br label %116

116:                                              ; preds = %114, %176
  %117 = phi %"struct.std::__1::__hash_node_base"* [ %112, %114 ], [ %178, %176 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %89, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  br i1 %95, label %125, label %123

123:                                              ; preds = %122
  %124 = and i64 %120, %115
  br label %129

125:                                              ; preds = %122
  %126 = icmp ult i64 %120, %91
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %120, %91
  br label %129

129:                                              ; preds = %123, %125, %127
  %130 = phi i64 [ %124, %123 ], [ %128, %127 ], [ %120, %125 ]
  %131 = icmp eq i64 %130, %104
  br i1 %131, label %176, label %180

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 2
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 3
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %136 to i64
  %142 = select i1 %137, i64 %140, i64 %141
  %143 = icmp eq i64 %142, %14
  br i1 %143, label %144, label %176

144:                                              ; preds = %132
  %145 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8*
  %148 = select i1 %137, i8* %146, i8* %147
  br i1 %137, label %155, label %149

149:                                              ; preds = %144
  br i1 %15, label %171, label %150

150:                                              ; preds = %149
  %151 = ptrtoint i8* %146 to i64
  %152 = trunc i64 %151 to i8
  %153 = load i8, i8* %10, align 1
  %154 = icmp eq i8 %153, %152
  br i1 %154, label %156, label %176

155:                                              ; preds = %144
  br i1 %15, label %171, label %168

156:                                              ; preds = %150, %163
  %157 = phi i64 [ %160, %163 ], [ %141, %150 ]
  %158 = phi i8* [ %161, %163 ], [ %147, %150 ]
  %159 = phi i8* [ %164, %163 ], [ %10, %150 ]
  %160 = add i64 %157, -1
  %161 = getelementptr inbounds i8, i8* %158, i64 1
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %159, i64 1
  %165 = load i8, i8* %161, align 1
  %166 = load i8, i8* %164, align 1
  %167 = icmp eq i8 %165, %166
  br i1 %167, label %156, label %176

168:                                              ; preds = %155
  %169 = tail call i32 @bcmp(i8* %148, i8* %10, i64 %14) #13
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %156, %149, %155, %168
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 5
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %172 to i32*
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, %87
  br i1 %175, label %180, label %176

176:                                              ; preds = %163, %150, %132, %168, %129, %171
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base"* %178, null
  br i1 %179, label %180, label %116

180:                                              ; preds = %171, %176, %129, %110, %84, %103
  %181 = phi %"struct.std::__1::__hash_node_base"* [ null, %103 ], [ null, %84 ], [ null, %110 ], [ %117, %171 ], [ null, %176 ], [ null, %129 ]
  ret %"struct.std::__1::__hash_node_base"* %181
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"*, %"class.std::__1::__hash_table"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %67, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6, %24
  %11 = phi %"struct.std::__1::__hash_node_base"* [ %13, %24 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 2
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 6
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %16) #13
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %10
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %21, %10
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %11 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %26, label %27, label %10

27:                                               ; preds = %24, %6
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %7, align 8
  %28 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = add i64 %29, -1
  %34 = and i64 %29, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = sub i64 %29, %34
  br label %50

38:                                               ; preds = %50, %31
  %39 = phi i64 [ 0, %31 ], [ %64, %50 ]
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %46, %41 ], [ %39, %38 ]
  %43 = phi i64 [ %47, %41 ], [ %34, %38 ]
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = add nuw i64 %42, 1
  %47 = add i64 %43, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41, !llvm.loop !19

49:                                               ; preds = %38, %41, %27
  store i64 0, i64* %3, align 8
  br label %67

50:                                               ; preds = %50, %36
  %51 = phi i64 [ 0, %36 ], [ %64, %50 ]
  %52 = phi i64 [ %37, %36 ], [ %65, %50 ]
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = or i64 %51, 1
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %57, align 8
  %58 = or i64 %51, 2
  %59 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %60, align 8
  %61 = or i64 %51, 3
  %62 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %62, i64 %61
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %63, align 8
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %38, label %50

67:                                               ; preds = %2, %49
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__hash_table"* %1 to i64*
  %70 = load i64, i64* %69, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %68, align 8
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %73 = bitcast %"class.std::__1::__hash_table"* %0 to i64*
  store i64 %70, i64* %73, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"** %72, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  %76 = bitcast %"struct.std::__1::__hash_node_base"** %72 to i8*
  tail call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %67, %75
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %79, i64* %80, align 8
  store i64 0, i64* %78, align 8
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %3, align 8
  %83 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 3, i32 0, i32 0
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = bitcast float* %86 to i32*
  store i32 %85, i32* %87, align 4
  %88 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = icmp eq i64 %82, 0
  br i1 %93, label %114, label %94

94:                                               ; preds = %77
  %95 = inttoptr i64 %90 to %"struct.std::__1::__hash_node_base"*
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %95, i64 1
  %97 = bitcast %"struct.std::__1::__hash_node_base"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %80, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !11
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = add i64 %99, -1
  %104 = and i64 %103, %98
  br label %109

105:                                              ; preds = %94
  %106 = icmp ult i64 %98, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %98, %99
  br label %109

109:                                              ; preds = %102, %105, %107
  %110 = phi i64 [ %104, %102 ], [ %108, %107 ], [ %98, %105 ]
  %111 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, i64 %110
  store %"struct.std::__1::__hash_node_base"* %91, %"struct.std::__1::__hash_node_base"** %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false)
  br label %114

114:                                              ; preds = %77, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::DnsConfigService"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::DnsConfigService"*)**
  %21 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::DnsConfigService"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::DnsConfigService"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::DnsConfigService"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  br i1 %8, label %9, label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::DnsConfigService"**
  %12 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %11, align 8
  %13 = icmp eq %"class.net::DnsConfigService"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #13
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::DnsConfigService"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::DnsConfigService"*, i1)**
  %39 = load void (%"class.net::DnsConfigService"*, i1)*, void (%"class.net::DnsConfigService"*, i1)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::DnsConfigService"*, i1)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::DnsConfigService"*, i1)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i8, i8* %6, align 1, !range !2
  %45 = icmp ne i8 %44, 0
  call void %43(%"class.net::DnsConfigService"* %30, i1 zeroext %45) #13
  br label %46

46:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS3_EEbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EEbEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::DnsConfigService"**
  %9 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %8, align 8
  %10 = icmp ne %"class.net::DnsConfigService"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN3net16DnsConfigServiceEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN3net16DnsConfigServiceEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EERbEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS4_EERbEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS2_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN3net16DnsConfigServiceEFvbEJNS_7WeakPtrIS2_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!11 = !{i64 0, i64 65}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net16DnsConfigServiceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIRMN3net16DnsConfigServiceEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIRMN3net16DnsConfigServiceEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
