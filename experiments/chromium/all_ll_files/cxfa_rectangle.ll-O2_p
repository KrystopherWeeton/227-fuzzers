; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_rectangle.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_rectangle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i16 }
%class.CXFA_Rectangle = type { %class.CXFA_Box }
%class.CXFA_Box = type { %class.CXFA_Node }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.2", %"class.pdfium::span.4", i32, %"class.fxcrt::UnownedPtr.6", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.1", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.8", %"class.cppgc::internal::BasicMember.9" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1" }
%"class.pdfium::span.2" = type { %"class.fxcrt::UnownedPtr.3", i64 }
%"class.fxcrt::UnownedPtr.3" = type { %"struct.CXFA_Node::PropertyData"* }
%"class.pdfium::span.4" = type { %"class.fxcrt::UnownedPtr.5", i64 }
%"class.fxcrt::UnownedPtr.5" = type { %"struct.CXFA_Node::AttributeData"* }
%"class.fxcrt::UnownedPtr.6" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.1"* }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.9" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Document = type { %"class.fxcrt::UnownedPtr.11", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13", %"class.cppgc::internal::BasicMember.1", %"class.std::__1::unique_ptr", %"class.cppgc::internal::BasicMember.71", %"class.cppgc::internal::BasicMember.72", %"class.cppgc::internal::BasicMember.73", %"class.cppgc::internal::BasicMember.74", %"class.cppgc::internal::BasicMember.75", %"class.cppgc::internal::BasicMember.76", %"class.cppgc::internal::BasicMember.77", %"class.cppgc::internal::BasicMember.78", %"class.std::__1::map.79", %"class.std::__1::vector", i32, %"class.pdfium::Optional", i8, i8 }
%"class.fxcrt::UnownedPtr.11" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.CFXJSE_Engine* }
%class.CFXJSE_Engine = type <{ %class.CFX_V8, %"class.fxcrt::UnownedPtr.17", %"class.cppgc::internal::BasicPersistent", %"class.std::__1::unique_ptr.18", %"class.fxcrt::UnownedPtr.22", i32, [4 x i8], %"class.std::__1::map", %"class.std::__1::map.31", %"class.fxcrt::UnownedPtr.40", %"class.std::__1::vector.46", %"class.fxcrt::UnownedPtr.54", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.cppgc::internal::BasicPersistent.67", i16, [6 x i8] }>
%class.CFX_V8 = type { i32 (...)**, %"class.fxcrt::UnownedPtr.16" }
%"class.fxcrt::UnownedPtr.16" = type { %"class.v8::Isolate"* }
%"class.v8::Isolate" = type { i8 }
%"class.fxcrt::UnownedPtr.17" = type { %class.CJS_Runtime* }
%class.CJS_Runtime = type opaque
%"class.cppgc::internal::BasicPersistent" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::PersistentBase" = type { i8*, %"class.cppgc::internal::PersistentNode"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFXJSE_Context* }
%class.CFXJSE_Context = type opaque
%"class.fxcrt::UnownedPtr.22" = type { %class.CFXJSE_Class* }
%class.CFXJSE_Class = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::map.31" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.fxcrt::UnownedPtr.40" = type { %class.CXFA_EventParam* }
%class.CXFA_EventParam = type { i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.41", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::UnownedPtr.41" = type { %class.CXFA_Node* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.cppgc::internal::BasicPersistent.48"*, %"class.cppgc::internal::BasicPersistent.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.cppgc::internal::BasicPersistent.48" = type { %"class.cppgc::internal::PersistentBase" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.cppgc::internal::BasicPersistent.48"* }
%"class.fxcrt::UnownedPtr.54" = type { %"class.std::__1::vector.46"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CFXJSE_ResolveProcessor* }
%class.CFXJSE_ResolveProcessor = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.CFXJSE_FormCalcContext* }
%class.CFXJSE_FormCalcContext = type opaque
%"class.cppgc::internal::BasicPersistent.67" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::BasicMember.71" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.72" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.73" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.74" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.75" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.76" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.77" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.78" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon.90 }
%union.anon.90 = type { %"struct.pdfium::internal::DummyUnionMember" }
%"struct.pdfium::internal::DummyUnionMember" = type { i8 }
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.92", %"class.cppgc::internal::BasicMember.93", %"class.cppgc::internal::BasicMember.94", %"class.std::__1::unique_ptr.95", %"class.std::__1::map.101", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.92" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.93" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.94" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.cppgc::AllocationHandle" = type opaque
%class.CJX_Node = type { %class.CJX_Tree }
%class.CJX_Tree = type { %class.CJX_Object }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %class.CXFA_Stroke**, %class.CXFA_Stroke**, %"class.std::__1::__compressed_pair.114" }
%class.CXFA_Stroke = type { %class.CXFA_Node }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.CXFA_Stroke** }
%class.CFX_RectF = type { float, float, float, float }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.121" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.FX_PATHPOINT* }
%class.CFX_STemplate = type { float, float }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.126", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.136" }
%"class.fxcrt::UnownedPtr.126" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.127" }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { float*, float*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.134", %"class.fxcrt::UnownedPtr.135" }
%"class.fxcrt::UnownedPtr.134" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.135" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::unique_ptr.138" = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::unique_ptr.138"* }

$_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index = comdat any

@_ZTV14CXFA_Rectangle = hidden unnamed_addr constant { [7 x i8*], [5 x i8*], [4 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZN14CXFA_RectangleD2Ev to i8*), i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZN14CXFA_RectangleD0Ev to i8*), i8* bitcast (void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)* @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (i16 (%class.CXFA_Node*)* @_ZNK9CXFA_Node16GetValueNodeTypeEv to i8*), i8* bitcast (i32 (%class.CXFA_Node*)* @_ZNK9CXFA_Node22GetDefaultFFWidgetTypeEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)* @_ZThn56_NK9CXFA_Node5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZThn56_N14CXFA_RectangleD1Ev to i8*), i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZThn56_N14CXFA_RectangleD0Ev to i8*)], [4 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZThn64_N14CXFA_RectangleD1Ev to i8*), i8* bitcast (void (%class.CXFA_Rectangle*)* @_ZThn64_N14CXFA_RectangleD0Ev to i8*)] }, align 8
@_ZN12_GLOBAL__N_122kRectanglePropertyDataE = internal constant [3 x %"struct.CXFA_Node::PropertyData"] [%"struct.CXFA_Node::PropertyData" { i16 102, i8 4, i8 0 }, %"struct.CXFA_Node::PropertyData" { i16 148, i8 4, i8 0 }, %"struct.CXFA_Node::PropertyData" { i16 245, i8 1, i8 0 }], align 2
@_ZN12_GLOBAL__N_123kRectangleAttributeDataE = internal constant [4 x %"struct.CXFA_Node::AttributeData"] [%"struct.CXFA_Node::AttributeData" { i16 5, i8 1, i8* null }, %"struct.CXFA_Node::AttributeData" { i16 30, i8 1, i8* null }, %"struct.CXFA_Node::AttributeData" { i16 229, i8 1, i8* null }, %"struct.CXFA_Node::AttributeData" { i16 274, i8 0, i8* inttoptr (i64 97 to i8*) }], align 16
@_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1

@_ZN14CXFA_RectangleC1EP13CXFA_Document14XFA_PacketType = hidden unnamed_addr alias void (%class.CXFA_Rectangle*, %class.CXFA_Document*, i8), void (%class.CXFA_Rectangle*, %class.CXFA_Document*, i8)* @_ZN14CXFA_RectangleC2EP13CXFA_Document14XFA_PacketType
@_ZN14CXFA_RectangleC1EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object = hidden unnamed_addr alias void (%class.CXFA_Rectangle*, %class.CXFA_Document*, i8, i32, i32, i16, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*), void (%class.CXFA_Rectangle*, %class.CXFA_Document*, i8, i32, i32, i16, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*)* @_ZN14CXFA_RectangleC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object
@_ZN14CXFA_RectangleD1Ev = hidden unnamed_addr alias void (%class.CXFA_Rectangle*), void (%class.CXFA_Rectangle*)* @_ZN14CXFA_RectangleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_RectangleC2EP13CXFA_Document14XFA_PacketType(%class.CXFA_Rectangle*, %class.CXFA_Document*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::span.2", align 8
  %5 = alloca %"class.pdfium::span.4", align 8
  %6 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast i32 (...)*** %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.pdfium::span.2", %"class.pdfium::span.2"* %4, i64 0, i32 0, i32 0
  store %"struct.CXFA_Node::PropertyData"* getelementptr inbounds ([3 x %"struct.CXFA_Node::PropertyData"], [3 x %"struct.CXFA_Node::PropertyData"]* @_ZN12_GLOBAL__N_122kRectanglePropertyDataE, i64 0, i64 0), %"struct.CXFA_Node::PropertyData"** %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::span.2", %"class.pdfium::span.2"* %4, i64 0, i32 1
  store i64 3, i64* %11, align 8
  %12 = getelementptr inbounds %"class.pdfium::span.4", %"class.pdfium::span.4"* %5, i64 0, i32 0, i32 0
  store %"struct.CXFA_Node::AttributeData"* getelementptr inbounds ([4 x %"struct.CXFA_Node::AttributeData"], [4 x %"struct.CXFA_Node::AttributeData"]* @_ZN12_GLOBAL__N_123kRectangleAttributeDataE, i64 0, i64 0), %"struct.CXFA_Node::AttributeData"** %12, align 8
  %13 = getelementptr inbounds %"class.pdfium::span.4", %"class.pdfium::span.4"* %5, i64 0, i32 1
  store i64 4, i64* %13, align 8
  %14 = tail call %"class.cppgc::Heap"* @_ZNK13CXFA_Document7GetHeapEv(%class.CXFA_Document* %1) #6
  %15 = tail call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %14) #6
  %16 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = tail call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv, i1 zeroext true) #6
  br label %20

20:                                               ; preds = %3, %18
  %21 = phi i16 [ %19, %18 ], [ %16, %3 ]
  %22 = tail call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %15, i64 72, i16 zeroext %21) #6
  %23 = bitcast i8* %22 to %class.CJX_Node*
  %24 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8CJX_NodeC1EP9CXFA_Node(%class.CJX_Node* %23, %class.CXFA_Node* %24) #6
  %25 = getelementptr inbounds i8, i8* %22, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = atomicrmw or i16* %26, i16 1 release
  %28 = bitcast i8* %22 to %class.CJX_Object*
  call void @_ZN8CXFA_BoxC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object(%class.CXFA_Box* %9, %class.CXFA_Document* %1, i8 zeroext %2, i32 4608, i32 2, i16 signext 221, %"class.pdfium::span.2"* nonnull %4, %"class.pdfium::span.4"* nonnull %5, %class.CJX_Object* %28) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %29 = bitcast i32 (...)*** %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %29, align 8
  ret void
}

declare %"class.cppgc::Heap"* @_ZNK13CXFA_Document7GetHeapEv(%class.CXFA_Document*) local_unnamed_addr #1

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN8CXFA_BoxC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object(%class.CXFA_Box*, %class.CXFA_Document*, i8 zeroext, i32, i32, i16 signext, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_RectangleC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object(%class.CXFA_Rectangle*, %class.CXFA_Document*, i8 zeroext, i32, i32, i16 signext, %"class.pdfium::span.2"* nocapture readonly, %"class.pdfium::span.4"* nocapture readonly, %class.CJX_Object*) unnamed_addr #0 align 2 {
  %10 = alloca %"class.pdfium::span.2", align 8
  %11 = alloca %"class.pdfium::span.4", align 8
  %12 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  %13 = bitcast %"class.pdfium::span.2"* %10 to i8*
  %14 = bitcast %"class.pdfium::span.2"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast %"class.pdfium::span.4"* %11 to i8*
  %16 = bitcast %"class.pdfium::span.4"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 16, i1 false)
  call void @_ZN8CXFA_BoxC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object(%class.CXFA_Box* %12, %class.CXFA_Document* %1, i8 zeroext %2, i32 %3, i32 %4, i16 signext %5, %"class.pdfium::span.2"* nonnull %10, %"class.pdfium::span.4"* nonnull %11, %class.CJX_Object* %8) #6
  %17 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast i32 (...)*** %18 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV14CXFA_Rectangle, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_RectangleD2Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N14CXFA_RectangleD1Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 -1, i32 0, i32 0, i32 10
  %3 = bitcast i8* %2 to %class.CXFA_Box*
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N14CXFA_RectangleD1Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 -1, i32 0, i32 0, i32 9
  %3 = bitcast %"class.fxcrt::UnownedPtr.6"* %2 to %class.CXFA_Box*
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_RectangleD0Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N14CXFA_RectangleD0Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 -1, i32 0, i32 0, i32 10
  %3 = bitcast i8* %2 to %class.CXFA_Box*
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N14CXFA_RectangleD0Ev(%class.CXFA_Rectangle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 -1, i32 0, i32 0, i32 9
  %3 = bitcast %"class.fxcrt::UnownedPtr.6"* %2 to %class.CXFA_Box*
  tail call void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle11GetFillPathERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEERK9CFX_RectFP12CFGAS_GEPath(%class.CXFA_Rectangle* nocapture readnone, %"class.std::__1::vector.112"* nocapture readonly dereferenceable(24), %class.CFX_RectF* readonly dereferenceable(16), %class.CFGAS_GEPath*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = alloca %class.CFX_STemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %1, i64 0, i32 0, i32 0
  %12 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %13 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %12, align 8
  %14 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %12, i64 1
  %15 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %14, align 8
  %16 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %13, %class.CXFA_Stroke* %15, i32 0) #6
  %17 = zext i1 %16 to i8
  br i1 %16, label %18, label %30

18:                                               ; preds = %4, %18
  %19 = phi i64 [ %27, %18 ], [ 2, %4 ]
  %20 = phi i8 [ %26, %18 ], [ %17, %4 ]
  %21 = phi %class.CXFA_Stroke* [ %24, %18 ], [ %15, %4 ]
  %22 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %23 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %22, i64 %19
  %24 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %23, align 8
  %25 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %21, %class.CXFA_Stroke* %24, i32 0) #6
  %26 = select i1 %25, i8 %20, i8 0
  %27 = add nuw nsw i64 %19, 1
  %28 = icmp ult i64 %27, 8
  %29 = and i1 %25, %28
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %4
  %31 = phi i8 [ %17, %4 ], [ %26, %18 ]
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %30
  %35 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %36 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %35, align 8
  %37 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %35, i64 2
  %38 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %37, align 8
  %39 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %36, %class.CXFA_Stroke* %38, i32 3) #6
  %40 = select i1 %39, i8 %31, i8 0
  br i1 %39, label %41, label %53

41:                                               ; preds = %34, %41
  %42 = phi i64 [ %50, %41 ], [ 4, %34 ]
  %43 = phi i8 [ %49, %41 ], [ %40, %34 ]
  %44 = phi %class.CXFA_Stroke* [ %47, %41 ], [ %38, %34 ]
  %45 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %46 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %45, i64 %42
  %47 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %46, align 8
  %48 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %44, %class.CXFA_Stroke* %47, i32 3) #6
  %49 = select i1 %48, i8 %43, i8 0
  %50 = add nuw nsw i64 %42, 2
  %51 = icmp ult i64 %50, 8
  %52 = and i1 %48, %51
  br i1 %52, label %41, label %53

53:                                               ; preds = %41, %34
  %54 = phi i8 [ %40, %34 ], [ %49, %41 ]
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %59 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %58, align 8
  %60 = tail call zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke* %59) #6
  %61 = select i1 %60, i8 0, i8 %54
  %62 = tail call zeroext i16 @_ZN11CXFA_Stroke11GetJoinTypeEv(%class.CXFA_Stroke* %59) #6
  %63 = icmp eq i16 %62, 245
  %64 = select i1 %63, i8 %61, i8 0
  br label %65

65:                                               ; preds = %57, %53, %30
  %66 = phi i8 [ %54, %53 ], [ %31, %30 ], [ %64, %57 ]
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %97

69:                                               ; preds = %65
  %70 = bitcast %class.CFX_RectF* %2 to i32*
  %71 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %72 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %73 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %74 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %75 = bitcast float* %71 to i32*
  %76 = bitcast %class.CFX_PTemplate* %5 to i8*
  %77 = bitcast %class.CFX_PTemplate* %5 to i32*
  %78 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %79 = bitcast %class.CFX_PTemplate* %8 to i8*
  %80 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  %81 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  %82 = bitcast %class.CFX_PTemplate* %8 to i32*
  %83 = bitcast float* %81 to i32*
  %84 = bitcast %class.CFX_PTemplate* %9 to i8*
  %85 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  %86 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  %87 = bitcast %class.CFX_PTemplate* %6 to i8*
  %88 = bitcast %class.CFX_PTemplate* %6 to i32*
  %89 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  %90 = bitcast float* %89 to i32*
  %91 = bitcast %class.CFX_STemplate* %7 to i8*
  %92 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %7, i64 0, i32 0
  %93 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %7, i64 0, i32 1
  %94 = bitcast %class.CFX_PTemplate* %10 to i8*
  %95 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  %96 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  br label %106

97:                                               ; preds = %65
  %98 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %105 = load float, float* %104, align 4
  tail call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* %3, float %99, float %101, float %103, float %105) #6
  br label %247

106:                                              ; preds = %69, %237
  %107 = phi i64 [ 0, %69 ], [ %111, %237 ]
  %108 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %11, align 8
  %109 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %108, i64 %107
  %110 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %109, align 8
  %111 = add nuw nsw i64 %107, 2
  %112 = and i64 %111, 6
  %113 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %108, i64 %112
  %114 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %113, align 8
  %115 = call float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke* %110) #6
  %116 = call float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke* %114) #6
  %117 = call zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke* %110) #6
  %118 = call zeroext i16 @_ZN11CXFA_Stroke11GetJoinTypeEv(%class.CXFA_Stroke* %110) #6
  %119 = icmp eq i16 %118, 93
  %120 = select i1 %119, float 0x3FF921FB60000000, float 0.000000e+00
  %121 = trunc i64 %107 to i32
  switch i32 %121, label %168 [
    i32 0, label %122
    i32 2, label %133
    i32 4, label %146
    i32 6, label %158
  ]

122:                                              ; preds = %106
  %123 = load i32, i32* %70, align 4, !noalias !2
  %124 = load i32, i32* %75, align 4, !noalias !3
  %125 = bitcast i32 %123 to float
  %126 = load float, float* %74, align 4, !noalias !6
  %127 = fadd float %126, %125
  %128 = bitcast float %127 to i32
  %129 = select i1 %117, float 0x3FF921FB60000000, float 0x400921FB60000000
  %130 = select i1 %119, float %129, float 1.000000e+00
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #6
  %131 = bitcast i32 %124 to float
  %132 = fadd float %115, %131
  store i32 %123, i32* %77, align 4
  store float %132, float* %78, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #6
  br label %168

133:                                              ; preds = %106
  %134 = load float, float* %73, align 4, !noalias !9
  %135 = load float, float* %74, align 4, !noalias !9
  %136 = fadd float %134, %135
  %137 = load i32, i32* %75, align 4, !noalias !2
  %138 = bitcast float %136 to i32
  %139 = bitcast i32 %137 to float
  %140 = load float, float* %72, align 4, !noalias !12
  %141 = fadd float %140, %139
  %142 = bitcast float %141 to i32
  %143 = select i1 %117, float 0x400921FB60000000, float 0x4012D97C80000000
  %144 = select i1 %119, float %143, float 0.000000e+00
  %145 = select i1 %119, float 0x3FF921FB60000000, float 1.000000e+00
  br label %168

146:                                              ; preds = %106
  %147 = load float, float* %73, align 4, !noalias !15
  %148 = load float, float* %74, align 4, !noalias !15
  %149 = fadd float %147, %148
  %150 = load float, float* %71, align 4, !noalias !15
  %151 = load float, float* %72, align 4, !noalias !15
  %152 = fadd float %150, %151
  %153 = bitcast float %149 to i32
  %154 = bitcast float %152 to i32
  %155 = bitcast float %147 to i32
  %156 = select i1 %117, float 0x4012D97C80000000, float 0.000000e+00
  %157 = select i1 %119, float %156, float -1.000000e+00
  br label %168

158:                                              ; preds = %106
  %159 = load i32, i32* %70, align 4, !noalias !18
  %160 = load float, float* %71, align 4, !noalias !2
  %161 = load float, float* %72, align 4, !noalias !18
  %162 = fadd float %160, %161
  %163 = bitcast float %162 to i32
  %164 = bitcast float %160 to i32
  %165 = select i1 %117, float 0.000000e+00, float 0x3FF921FB60000000
  %166 = select i1 %119, float %165, float 0.000000e+00
  %167 = select i1 %119, float 0x3FF921FB60000000, float -1.000000e+00
  br label %168

168:                                              ; preds = %106, %133, %146, %158, %122
  %169 = phi float [ 0.000000e+00, %122 ], [ 1.000000e+00, %158 ], [ 0.000000e+00, %146 ], [ -1.000000e+00, %133 ], [ 1.000000e+00, %106 ]
  %170 = phi float [ -1.000000e+00, %122 ], [ 0.000000e+00, %158 ], [ 1.000000e+00, %146 ], [ 0.000000e+00, %133 ], [ 1.000000e+00, %106 ]
  %171 = phi float [ 1.000000e+00, %122 ], [ -1.000000e+00, %158 ], [ -1.000000e+00, %146 ], [ 1.000000e+00, %133 ], [ 1.000000e+00, %106 ]
  %172 = phi float [ 1.000000e+00, %122 ], [ 1.000000e+00, %158 ], [ -1.000000e+00, %146 ], [ -1.000000e+00, %133 ], [ 1.000000e+00, %106 ]
  %173 = phi float [ %120, %122 ], [ %167, %158 ], [ %120, %146 ], [ %145, %133 ], [ %120, %106 ]
  %174 = phi float [ %130, %122 ], [ %166, %158 ], [ %157, %146 ], [ %144, %133 ], [ 0.000000e+00, %106 ]
  %175 = phi i32 [ %124, %122 ], [ %163, %158 ], [ %154, %146 ], [ %137, %133 ], [ 0, %106 ]
  %176 = phi i32 [ %123, %122 ], [ %159, %158 ], [ %153, %146 ], [ %138, %133 ], [ 0, %106 ]
  %177 = phi i32 [ %124, %122 ], [ %164, %158 ], [ %154, %146 ], [ %142, %133 ], [ 0, %106 ]
  %178 = phi i32 [ %128, %122 ], [ %159, %158 ], [ %155, %146 ], [ %138, %133 ], [ 0, %106 ]
  br i1 %119, label %179, label %219

179:                                              ; preds = %168
  %180 = fcmp olt float %115, 0.000000e+00
  %181 = fadd float %174, 0xC00921FB60000000
  %182 = select i1 %180, float %181, float %174
  %183 = fsub float -0.000000e+00, %173
  %184 = select i1 %117, float %183, float %173
  %185 = bitcast i32 %175 to float
  %186 = fmul float %115, 2.000000e+00
  %187 = fmul float %186, %172
  %188 = fmul float %186, %171
  %189 = fcmp olt float %187, 0.000000e+00
  br i1 %189, label %190, label %195

190:                                              ; preds = %179
  %191 = bitcast i32 %176 to float
  %192 = fadd float %187, %191
  %193 = bitcast float %192 to i32
  %194 = fsub float -0.000000e+00, %187
  br label %195

195:                                              ; preds = %190, %179
  %196 = phi float [ %194, %190 ], [ %187, %179 ]
  %197 = phi i32 [ %193, %190 ], [ %176, %179 ]
  %198 = fcmp olt float %188, 0.000000e+00
  br i1 %198, label %199, label %203

199:                                              ; preds = %195
  %200 = fadd float %188, %185
  %201 = bitcast float %200 to i32
  %202 = fsub float -0.000000e+00, %188
  br label %203

203:                                              ; preds = %195, %199
  %204 = phi float [ %202, %199 ], [ %188, %195 ]
  %205 = phi i32 [ %201, %199 ], [ %175, %195 ]
  br i1 %117, label %206, label %216

206:                                              ; preds = %203
  %207 = fsub float -0.000000e+00, %115
  %208 = fmul float %172, %207
  %209 = fmul float %171, %207
  %210 = bitcast i32 %197 to float
  %211 = fadd float %208, %210
  %212 = bitcast float %211 to i32
  %213 = bitcast i32 %205 to float
  %214 = fadd float %209, %213
  %215 = bitcast float %214 to i32
  br label %216

216:                                              ; preds = %206, %203
  %217 = phi i32 [ %215, %206 ], [ %205, %203 ]
  %218 = phi i32 [ %212, %206 ], [ %197, %203 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #6
  store i32 %218, i32* %88, align 4, !alias.scope !21
  store i32 %217, i32* %90, align 4, !alias.scope !21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #6
  store float %196, float* %92, align 4, !alias.scope !24
  store float %204, float* %93, align 4, !alias.scope !24
  call void @_ZN12CFGAS_GEPath5ArcToERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %6, %class.CFX_STemplate* nonnull dereferenceable(8) %7, float %182, float %184) #6
  br label %237

219:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #6
  store float 0.000000e+00, float* %80, align 4
  store float 0.000000e+00, float* %81, align 4
  br i1 %117, label %220, label %227

220:                                              ; preds = %219
  %221 = bitcast i32 %176 to float
  %222 = fmul float %115, %172
  %223 = fadd float %222, %221
  store float %223, float* %80, align 4
  %224 = bitcast i32 %175 to float
  %225 = fmul float %115, %171
  %226 = fadd float %225, %224
  store float %226, float* %81, align 4
  br label %230

227:                                              ; preds = %219
  store i32 %176, i32* %82, align 4
  store i32 %175, i32* %83, align 4
  %228 = bitcast i32 %176 to float
  %229 = bitcast i32 %175 to float
  br label %230

230:                                              ; preds = %227, %220
  %231 = phi float [ %229, %227 ], [ %224, %220 ]
  %232 = phi float [ %228, %227 ], [ %221, %220 ]
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #6
  %233 = fmul float %115, %174
  %234 = fadd float %233, %232
  %235 = fmul float %115, %173
  %236 = fadd float %235, %231
  store float %234, float* %85, align 4
  store float %236, float* %86, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #6
  br label %237

237:                                              ; preds = %230, %216
  %238 = phi i8* [ %84, %230 ], [ %91, %216 ]
  %239 = phi i8* [ %79, %230 ], [ %87, %216 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #6
  %240 = bitcast i32 %178 to float
  %241 = fmul float %116, %170
  %242 = fadd float %241, %240
  %243 = bitcast i32 %177 to float
  %244 = fmul float %116, %169
  %245 = fadd float %244, %243
  store float %242, float* %95, align 4
  store float %245, float* %96, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #6
  %246 = icmp ult i64 %111, 8
  br i1 %246, label %106, label %247

247:                                              ; preds = %237, %97
  ret void
}

declare zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke*, %class.CXFA_Stroke*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke*) local_unnamed_addr #1

declare zeroext i16 @_ZN11CXFA_Stroke11GetJoinTypeEv(%class.CXFA_Stroke*) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath*, float, float, float, float) local_unnamed_addr #1

declare float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke*) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath5ArcToERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_STemplate* dereferenceable(8), float, float) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle4DrawERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrix(%class.CXFA_Rectangle*, %"class.std::__1::vector.112"* nocapture readonly dereferenceable(24), %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %1, i64 0, i32 0, i32 0
  %8 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %7, align 8
  %9 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %8, i64 1
  %10 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %9, align 8
  %11 = tail call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* %10) #6
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %7, align 8
  %14 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %13, i64 3
  %15 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %14, align 8
  %16 = tail call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* %15) #6
  br i1 %16, label %17, label %88

17:                                               ; preds = %93, %88, %12, %6
  %18 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  br label %20

19:                                               ; preds = %82
  tail call void @_ZN14CXFA_Rectangle6StrokeERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrix(%class.CXFA_Rectangle* %0, %"class.std::__1::vector.112"* dereferenceable(24) %1, %class.CFGAS_GEGraphics* %2, <2 x float> %83, <2 x float> %84, %class.CFX_Matrix* dereferenceable(24) %5)
  br label %87

20:                                               ; preds = %17, %82
  %21 = phi i64 [ 1, %17 ], [ %85, %82 ]
  %22 = phi <2 x float> [ %4, %17 ], [ %84, %82 ]
  %23 = phi <2 x float> [ %3, %17 ], [ %83, %82 ]
  %24 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %7, align 8
  %25 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %24, i64 %21
  %26 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %25, align 8
  %27 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %26) #6
  %28 = fpext float %27 to double
  %29 = tail call double @llvm.maxnum.f64(double %28, double 0.000000e+00) #6
  %30 = fptrunc double %29 to float
  %31 = fmul float %30, 5.000000e-01
  %32 = tail call zeroext i16 @_ZN8CXFA_Box7GetHandEv(%class.CXFA_Box* %18) #6
  %33 = trunc i64 %21 to i32
  switch i32 %33, label %82 [
    i32 1, label %34
    i32 3, label %49
    i32 5, label %58
    i32 7, label %67
  ]

34:                                               ; preds = %20
  switch i16 %32, label %82 [
    i16 252, label %35
    i16 54, label %42
  ]

35:                                               ; preds = %34
  %36 = extractelement <2 x float> %23, i32 1
  %37 = fsub float %36, %31
  %38 = insertelement <2 x float> %23, float %37, i32 1
  %39 = extractelement <2 x float> %22, i32 1
  %40 = fadd float %39, %31
  %41 = insertelement <2 x float> %22, float %40, i32 1
  br label %82

42:                                               ; preds = %34
  %43 = extractelement <2 x float> %23, i32 1
  %44 = fadd float %43, %31
  %45 = insertelement <2 x float> %23, float %44, i32 1
  %46 = extractelement <2 x float> %22, i32 1
  %47 = fsub float %46, %31
  %48 = insertelement <2 x float> %22, float %47, i32 1
  br label %82

49:                                               ; preds = %20
  switch i16 %32, label %82 [
    i16 252, label %50
    i16 54, label %54
  ]

50:                                               ; preds = %49
  %51 = extractelement <2 x float> %22, i32 0
  %52 = fadd float %51, %31
  %53 = insertelement <2 x float> %22, float %52, i32 0
  br label %82

54:                                               ; preds = %49
  %55 = extractelement <2 x float> %22, i32 0
  %56 = fsub float %55, %31
  %57 = insertelement <2 x float> %22, float %56, i32 0
  br label %82

58:                                               ; preds = %20
  switch i16 %32, label %82 [
    i16 252, label %59
    i16 54, label %63
  ]

59:                                               ; preds = %58
  %60 = extractelement <2 x float> %22, i32 1
  %61 = fadd float %60, %31
  %62 = insertelement <2 x float> %22, float %61, i32 1
  br label %82

63:                                               ; preds = %58
  %64 = extractelement <2 x float> %22, i32 1
  %65 = fsub float %64, %31
  %66 = insertelement <2 x float> %22, float %65, i32 1
  br label %82

67:                                               ; preds = %20
  switch i16 %32, label %82 [
    i16 252, label %68
    i16 54, label %75
  ]

68:                                               ; preds = %67
  %69 = extractelement <2 x float> %23, i32 0
  %70 = fsub float %69, %31
  %71 = insertelement <2 x float> %23, float %70, i32 0
  %72 = extractelement <2 x float> %22, i32 0
  %73 = fadd float %72, %31
  %74 = insertelement <2 x float> %22, float %73, i32 0
  br label %82

75:                                               ; preds = %67
  %76 = extractelement <2 x float> %23, i32 0
  %77 = fadd float %76, %31
  %78 = insertelement <2 x float> %23, float %77, i32 0
  %79 = extractelement <2 x float> %22, i32 0
  %80 = fsub float %79, %31
  %81 = insertelement <2 x float> %22, float %80, i32 0
  br label %82

82:                                               ; preds = %67, %58, %49, %34, %68, %75, %59, %63, %50, %54, %35, %42, %20
  %83 = phi <2 x float> [ %23, %20 ], [ %71, %68 ], [ %78, %75 ], [ %23, %59 ], [ %23, %63 ], [ %23, %50 ], [ %23, %54 ], [ %38, %35 ], [ %45, %42 ], [ %23, %34 ], [ %23, %49 ], [ %23, %58 ], [ %23, %67 ]
  %84 = phi <2 x float> [ %22, %20 ], [ %74, %68 ], [ %81, %75 ], [ %62, %59 ], [ %66, %63 ], [ %53, %50 ], [ %57, %54 ], [ %41, %35 ], [ %48, %42 ], [ %22, %34 ], [ %22, %49 ], [ %22, %58 ], [ %22, %67 ]
  %85 = add nuw nsw i64 %21, 2
  %86 = icmp ult i64 %85, 8
  br i1 %86, label %20, label %19

87:                                               ; preds = %93, %19
  ret void

88:                                               ; preds = %12
  %89 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %7, align 8
  %90 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %89, i64 5
  %91 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %90, align 8
  %92 = tail call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* %91) #6
  br i1 %92, label %17, label %93

93:                                               ; preds = %88
  %94 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %7, align 8
  %95 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %94, i64 7
  %96 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %95, align 8
  %97 = tail call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* %96) #6
  br i1 %97, label %17, label %87
}

declare zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke*) local_unnamed_addr #1

declare float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke*) local_unnamed_addr #1

declare zeroext i16 @_ZN8CXFA_Box7GetHandEv(%class.CXFA_Box*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle6StrokeERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrix(%class.CXFA_Rectangle*, %"class.std::__1::vector.112"* nocapture readonly dereferenceable(24), %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca <4 x float>, align 16
  %9 = bitcast <4 x float>* %8 to %class.CFX_RectF*
  %10 = alloca %class.CFX_RectF, align 8
  %11 = alloca %class.CFGAS_GEPath, align 8
  %12 = alloca %class.CFGAS_GEColor, align 8
  %13 = alloca %class.CFX_RectF, align 8
  %14 = alloca %class.CFGAS_GEPath, align 8
  %15 = alloca %class.CFGAS_GEColor, align 8
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = alloca <4 x float>, align 16
  %18 = bitcast <4 x float>* %17 to %class.CFX_RectF*
  %19 = alloca %class.CFGAS_GEPath, align 8
  %20 = getelementptr inbounds %class.CXFA_Rectangle, %class.CXFA_Rectangle* %0, i64 0, i32 0
  %21 = tail call i64 @_ZN8CXFA_Box10Get3DStyleEv(%class.CXFA_Box* %20) #6
  %22 = trunc i64 %21 to i16
  %23 = icmp eq i16 %22, 165
  br i1 %23, label %99, label %24

24:                                               ; preds = %6
  %25 = lshr i64 %21, 32
  %26 = trunc i64 %25 to i32
  %27 = and i64 %21, 16711680
  %28 = icmp eq i64 %27, 0
  %29 = bitcast i32 %26 to float
  %30 = fcmp olt float %29, 0x3F50624DE0000000
  %31 = or i1 %28, %30
  br i1 %31, label %208, label %32

32:                                               ; preds = %24
  switch i16 %22, label %208 [
    i16 265, label %33
    i16 156, label %51
    i16 248, label %69
    i16 105, label %84
  ]

33:                                               ; preds = %32
  %34 = fmul float %29, 5.000000e-01
  %35 = bitcast %class.CFX_RectF* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #6
  %36 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %13, i64 0, i32 0
  %37 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %13, i64 0, i32 1
  %38 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %13, i64 0, i32 2
  %39 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %13, i64 0, i32 3
  %40 = extractelement <2 x float> %3, i32 0
  %41 = fadd float %40, %34
  store float %41, float* %36, align 8
  %42 = fmul float %34, 2.000000e+00
  %43 = extractelement <2 x float> %4, i32 0
  %44 = fsub float %43, %42
  store float %44, float* %38, align 8
  %45 = extractelement <2 x float> %3, i32 1
  %46 = fadd float %45, %34
  store float %46, float* %37, align 4
  %47 = extractelement <2 x float> %4, i32 1
  %48 = fsub float %47, %42
  store float %48, float* %39, align 4
  %49 = bitcast %class.CFGAS_GEPath* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #6
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %14) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %14, float %40, float %45, float %43, float %47) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %14, float %41, float %46, float %44, float %48) #6
  %50 = bitcast %class.CFGAS_GEColor* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %15, i32 -16777216) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEColor* nonnull dereferenceable(24) %15) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %14, i8 zeroext 1, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %13, float %34, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -4144960) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #6
  br label %208

51:                                               ; preds = %32
  %52 = fmul float %29, 5.000000e-01
  %53 = bitcast %class.CFX_RectF* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #6
  %54 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %10, i64 0, i32 0
  %55 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %10, i64 0, i32 1
  %56 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %10, i64 0, i32 2
  %57 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %10, i64 0, i32 3
  %58 = extractelement <2 x float> %3, i32 0
  %59 = fadd float %58, %52
  store float %59, float* %54, align 8
  %60 = fmul float %52, 2.000000e+00
  %61 = extractelement <2 x float> %4, i32 0
  %62 = fsub float %61, %60
  store float %62, float* %56, align 8
  %63 = extractelement <2 x float> %3, i32 1
  %64 = fadd float %63, %52
  store float %64, float* %55, align 4
  %65 = extractelement <2 x float> %4, i32 1
  %66 = fsub float %65, %60
  store float %66, float* %57, align 4
  %67 = bitcast %class.CFGAS_GEPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false) #6
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %11) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %11, float %58, float %63, float %61, float %65) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %11, float %59, float %64, float %62, float %66) #6
  %68 = bitcast %class.CFGAS_GEColor* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %12, i32 -16777216) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEColor* nonnull dereferenceable(24) %12) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %11, i8 zeroext 1, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %10, float %52, %class.CFX_Matrix* dereferenceable(24) %5, i32 -1, i32 -8355712) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #6
  br label %208

69:                                               ; preds = %32
  %70 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70)
  %71 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_RectF*
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %3, <2 x float>* %72, align 8
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %73, align 8
  %74 = fmul float %29, 5.000000e-01
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %71, float %29, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -1) #6
  %75 = bitcast <4 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %75, i8* nonnull align 8 %70, i64 16, i1 false) #6
  %76 = fmul float %74, 2.000000e+00
  %77 = load <4 x float>, <4 x float>* %8, align 16
  %78 = insertelement <2 x float> undef, float %74, i32 0
  %79 = insertelement <2 x float> %78, float %76, i32 1
  %80 = shufflevector <2 x float> %79, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %81 = fadd <4 x float> %77, %80
  %82 = fsub <4 x float> %77, %80
  %83 = shufflevector <4 x float> %81, <4 x float> %82, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %83, <4 x float>* %8, align 16
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %9, float %74, %class.CFX_Matrix* dereferenceable(24) %5, i32 -1, i32 -8355712) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70)
  br label %208

84:                                               ; preds = %32
  %85 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85)
  %86 = bitcast { <2 x float>, <2 x float> }* %16 to %class.CFX_RectF*
  %87 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %3, <2 x float>* %87, align 8
  %88 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %88, align 8
  %89 = fmul float %29, 5.000000e-01
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %86, float %29, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -16777216) #6
  %90 = bitcast <4 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %90, i8* nonnull align 8 %85, i64 16, i1 false) #6
  %91 = fmul float %89, 2.000000e+00
  %92 = load <4 x float>, <4 x float>* %17, align 16
  %93 = insertelement <2 x float> undef, float %89, i32 0
  %94 = insertelement <2 x float> %93, float %91, i32 1
  %95 = shufflevector <2 x float> %94, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %96 = fadd <4 x float> %92, %95
  %97 = fsub <4 x float> %92, %95
  %98 = shufflevector <4 x float> %96, <4 x float> %97, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %98, <4 x float>* %17, align 16
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %2, %class.CFX_RectF* nonnull dereferenceable(16) %18, float %89, %class.CFX_Matrix* dereferenceable(24) %5, i32 -16777216, i32 -8355712) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85)
  br label %208

99:                                               ; preds = %6
  %100 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %1, i64 0, i32 0, i32 0
  %101 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %102 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %101, align 8
  %103 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %101, i64 1
  %104 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %103, align 8
  %105 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %102, %class.CXFA_Stroke* %104, i32 0) #6
  %106 = zext i1 %105 to i8
  br i1 %105, label %107, label %119

107:                                              ; preds = %99, %107
  %108 = phi i64 [ %116, %107 ], [ 2, %99 ]
  %109 = phi i8 [ %115, %107 ], [ %106, %99 ]
  %110 = phi %class.CXFA_Stroke* [ %113, %107 ], [ %104, %99 ]
  %111 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %112 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %111, i64 %108
  %113 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %112, align 8
  %114 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %110, %class.CXFA_Stroke* %113, i32 0) #6
  %115 = select i1 %114, i8 %109, i8 0
  %116 = add nuw nsw i64 %108, 1
  %117 = icmp ult i64 %116, 8
  %118 = and i1 %114, %117
  br i1 %118, label %107, label %119

119:                                              ; preds = %107, %99
  %120 = phi i8 [ %106, %99 ], [ %115, %107 ]
  %121 = and i8 %120, 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %156, label %123

123:                                              ; preds = %119
  %124 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %125 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %124, align 8
  %126 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %124, i64 2
  %127 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %126, align 8
  %128 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %125, %class.CXFA_Stroke* %127, i32 3) #6
  %129 = select i1 %128, i8 %120, i8 0
  br i1 %128, label %130, label %142

130:                                              ; preds = %123, %130
  %131 = phi i64 [ %139, %130 ], [ 4, %123 ]
  %132 = phi i8 [ %138, %130 ], [ %129, %123 ]
  %133 = phi %class.CXFA_Stroke* [ %136, %130 ], [ %127, %123 ]
  %134 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %135 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %134, i64 %131
  %136 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %135, align 8
  %137 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %133, %class.CXFA_Stroke* %136, i32 3) #6
  %138 = select i1 %137, i8 %132, i8 0
  %139 = add nuw nsw i64 %131, 2
  %140 = icmp ult i64 %139, 8
  %141 = and i1 %137, %140
  br i1 %141, label %130, label %142

142:                                              ; preds = %130, %123
  %143 = phi i8 [ %129, %123 ], [ %138, %130 ]
  %144 = and i8 %143, 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %142
  %147 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %148 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %147, align 8
  %149 = tail call zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke* %148) #6
  %150 = tail call zeroext i16 @_ZN11CXFA_Stroke11GetJoinTypeEv(%class.CXFA_Stroke* %148) #6
  %151 = icmp ne i16 %150, 245
  %152 = and i8 %143, 1
  %153 = icmp eq i8 %152, 0
  %154 = or i1 %149, %153
  %155 = or i1 %154, %151
  br label %156

156:                                              ; preds = %146, %142, %119
  %157 = phi i1 [ %155, %146 ], [ true, %142 ], [ true, %119 ]
  %158 = phi i1 [ true, %146 ], [ true, %142 ], [ false, %119 ]
  %159 = bitcast %class.CFGAS_GEPath* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #6
  %160 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %class.CFGAS_GEPath, %class.CFGAS_GEPath* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast %class.CFGAS_GEPath* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %19) #6
  br label %167

163:                                              ; preds = %195
  %164 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %160, align 8
  %165 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %161, align 8
  %166 = icmp eq %class.FX_PATHPOINT* %164, %165
  br i1 %166, label %207, label %199

167:                                              ; preds = %195, %156
  %168 = phi i64 [ 0, %156 ], [ %197, %195 ]
  %169 = phi i1 [ true, %156 ], [ %196, %195 ]
  %170 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %171 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %170, i64 %168
  %172 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %171, align 8
  %173 = call float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke* %172) #6
  %174 = fcmp olt float %173, 0.000000e+00
  br i1 %174, label %175, label %183

175:                                              ; preds = %167
  %176 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %160, align 8
  %177 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %161, align 8
  %178 = icmp eq %class.FX_PATHPOINT* %176, %177
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = icmp eq %class.CXFA_Stroke* %172, null
  br i1 %180, label %182, label %181

181:                                              ; preds = %179
  call void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke* nonnull %172, %class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %19, %class.CFX_Matrix* dereferenceable(24) %5) #6
  br label %182

182:                                              ; preds = %179, %181
  call void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath* nonnull %19) #6
  br label %195

183:                                              ; preds = %167
  %184 = trunc i64 %168 to i32
  call void @_ZN14CXFA_Rectangle7GetPathERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEE9CFX_RectFR12CFGAS_GEPathibb(%class.CXFA_Rectangle* undef, %"class.std::__1::vector.112"* dereferenceable(24) %1, <2 x float> %3, <2 x float> %4, %class.CFGAS_GEPath* nonnull dereferenceable(24) %19, i32 %184, i1 zeroext %169, i1 zeroext %157)
  %185 = add nuw i64 %168, 1
  %186 = and i64 %185, 7
  %187 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %188 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %187, i64 %186
  %189 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %188, align 8
  %190 = call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %172, %class.CXFA_Stroke* %189, i32 0) #6
  br i1 %190, label %195, label %191

191:                                              ; preds = %183
  %192 = icmp eq %class.CXFA_Stroke* %172, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %191
  call void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke* nonnull %172, %class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %19, %class.CFX_Matrix* dereferenceable(24) %5) #6
  br label %194

194:                                              ; preds = %191, %193
  call void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath* nonnull %19) #6
  br label %195

195:                                              ; preds = %194, %183, %175, %182
  %196 = phi i1 [ true, %182 ], [ true, %175 ], [ false, %183 ], [ true, %194 ]
  %197 = add nuw nsw i64 %168, 1
  %198 = icmp eq i64 %197, 8
  br i1 %198, label %163, label %167

199:                                              ; preds = %163
  br i1 %158, label %200, label %201

200:                                              ; preds = %199
  call void @_ZN12CFGAS_GEPath5CloseEv(%class.CFGAS_GEPath* nonnull %19) #6
  br label %201

201:                                              ; preds = %200, %199
  %202 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %100, align 8
  %203 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %202, i64 7
  %204 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %203, align 8
  %205 = icmp eq %class.CXFA_Stroke* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %201
  call void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke* nonnull %204, %class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %19, %class.CFX_Matrix* dereferenceable(24) %5) #6
  br label %207

207:                                              ; preds = %201, %206, %163
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #6
  br label %208

208:                                              ; preds = %33, %51, %69, %84, %32, %24, %207
  ret void
}

declare i64 @_ZN8CXFA_Box10Get3DStyleEv(%class.CXFA_Box*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle13StrokeLoweredEP16CFGAS_GEGraphics9CFX_RectFfRK10CFX_Matrix(%class.CXFA_Rectangle* nocapture readnone, %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, float, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = alloca %class.CFX_RectF, align 8
  %8 = alloca %class.CFGAS_GEPath, align 8
  %9 = alloca %class.CFGAS_GEColor, align 8
  %10 = fmul float %4, 5.000000e-01
  %11 = bitcast %class.CFX_RectF* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 0
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 1
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 2
  %15 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 3
  %16 = extractelement <2 x float> %2, i32 0
  %17 = fadd float %10, %16
  store float %17, float* %12, align 8
  %18 = fmul float %10, 2.000000e+00
  %19 = extractelement <2 x float> %3, i32 0
  %20 = fsub float %19, %18
  store float %20, float* %14, align 8
  %21 = extractelement <2 x float> %2, i32 1
  %22 = fadd float %10, %21
  store float %22, float* %13, align 4
  %23 = extractelement <2 x float> %3, i32 1
  %24 = fsub float %23, %18
  store float %24, float* %15, align 4
  %25 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #6
  %26 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  %27 = extractelement <2 x float> %2, i32 0
  %28 = extractelement <2 x float> %2, i32 1
  %29 = extractelement <2 x float> %3, i32 0
  %30 = extractelement <2 x float> %3, i32 1
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %8, float %27, float %28, float %29, float %30) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %8, float %17, float %22, float %20, float %24) #6
  %31 = bitcast %class.CFGAS_GEColor* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %9, i32 -16777216) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %9) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, i8 zeroext 1, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %7, float %10, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -4144960)
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle12StrokeRaisedEP16CFGAS_GEGraphics9CFX_RectFfRK10CFX_Matrix(%class.CXFA_Rectangle* nocapture readnone, %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, float, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = alloca %class.CFX_RectF, align 8
  %8 = alloca %class.CFGAS_GEPath, align 8
  %9 = alloca %class.CFGAS_GEColor, align 8
  %10 = fmul float %4, 5.000000e-01
  %11 = bitcast %class.CFX_RectF* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 0
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 1
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 2
  %15 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 3
  %16 = extractelement <2 x float> %2, i32 0
  %17 = fadd float %10, %16
  store float %17, float* %12, align 8
  %18 = fmul float %10, 2.000000e+00
  %19 = extractelement <2 x float> %3, i32 0
  %20 = fsub float %19, %18
  store float %20, float* %14, align 8
  %21 = extractelement <2 x float> %2, i32 1
  %22 = fadd float %10, %21
  store float %22, float* %13, align 4
  %23 = extractelement <2 x float> %3, i32 1
  %24 = fsub float %23, %18
  store float %24, float* %15, align 4
  %25 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #6
  %26 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  %27 = extractelement <2 x float> %2, i32 0
  %28 = extractelement <2 x float> %2, i32 1
  %29 = extractelement <2 x float> %3, i32 0
  %30 = extractelement <2 x float> %3, i32 1
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %8, float %27, float %28, float %29, float %30) #6
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %8, float %17, float %22, float %20, float %24) #6
  %31 = bitcast %class.CFGAS_GEColor* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %9, i32 -16777216) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %9) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, i8 zeroext 1, %class.CFX_Matrix* dereferenceable(24) %5) #6
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %7, float %10, %class.CFX_Matrix* dereferenceable(24) %5, i32 -1, i32 -8355712)
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle12StrokeEtchedEP16CFGAS_GEGraphics9CFX_RectFfRK10CFX_Matrix(%class.CXFA_Rectangle* nocapture readnone, %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, float, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_RectF*
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %class.CFX_RectF*
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %2, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %3, <2 x float>* %12, align 8
  %13 = fmul float %4, 5.000000e-01
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %8, float %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -1)
  %14 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* nonnull align 8 %15, i64 16, i1 false)
  %16 = fmul float %13, 2.000000e+00
  %17 = load <4 x float>, <4 x float>* %9, align 16
  %18 = insertelement <2 x float> undef, float %13, i32 0
  %19 = insertelement <2 x float> %18, float %16, i32 1
  %20 = shufflevector <2 x float> %19, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %21 = fadd <4 x float> %17, %20
  %22 = fsub <4 x float> %17, %20
  %23 = shufflevector <4 x float> %21, <4 x float> %22, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %23, <4 x float>* %9, align 16
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %10, float %13, %class.CFX_Matrix* dereferenceable(24) %5, i32 -1, i32 -8355712)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle14StrokeEmbossedEP16CFGAS_GEGraphics9CFX_RectFfRK10CFX_Matrix(%class.CXFA_Rectangle* nocapture readnone, %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, float, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_RectF*
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %class.CFX_RectF*
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %2, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %3, <2 x float>* %12, align 8
  %13 = fmul float %4, 5.000000e-01
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %8, float %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 -8355712, i32 -16777216)
  %14 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* nonnull align 8 %15, i64 16, i1 false)
  %16 = fmul float %13, 2.000000e+00
  %17 = load <4 x float>, <4 x float>* %9, align 16
  %18 = insertelement <2 x float> undef, float %13, i32 0
  %19 = insertelement <2 x float> %18, float %16, i32 1
  %20 = shufflevector <2 x float> %19, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %21 = fadd <4 x float> %17, %20
  %22 = fsub <4 x float> %17, %20
  %23 = shufflevector <4 x float> %21, <4 x float> %22, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %23, <4 x float>* %9, align 16
  call void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* undef, %class.CFGAS_GEGraphics* %1, %class.CFX_RectF* nonnull dereferenceable(16) %10, float %13, %class.CFX_Matrix* dereferenceable(24) %5, i32 -16777216, i32 -8355712)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  ret void
}

declare void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath*) unnamed_addr #1

declare void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke*, %class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle7GetPathERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEE9CFX_RectFR12CFGAS_GEPathibb(%class.CXFA_Rectangle* nocapture readnone, %"class.std::__1::vector.112"* nocapture readonly dereferenceable(24), <2 x float>, <2 x float>, %class.CFGAS_GEPath* dereferenceable(24), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_STemplate, align 4
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = and i32 %5, 1
  %16 = icmp eq i32 %15, 0
  %17 = sub i32 %5, %15
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %1, i64 0, i32 0, i32 0
  %20 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %19, align 8
  %21 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %20, i64 %18
  %22 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %21, align 8
  br i1 %7, label %23, label %31

23:                                               ; preds = %8
  %24 = add nsw i32 %17, 2
  %25 = srem i32 %24, 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %20, i64 %26
  %28 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %27, align 8
  %29 = tail call float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke* %22) #6
  %30 = tail call float @_ZNK11CXFA_Stroke9GetRadiusEv(%class.CXFA_Stroke* %28) #6
  br label %31

31:                                               ; preds = %8, %23
  %32 = phi float [ %29, %23 ], [ 0.000000e+00, %8 ]
  %33 = phi float [ %30, %23 ], [ 0.000000e+00, %8 ]
  %34 = tail call zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke* %22) #6
  %35 = tail call zeroext i16 @_ZN11CXFA_Stroke11GetJoinTypeEv(%class.CXFA_Stroke* %22) #6
  %36 = icmp eq i16 %35, 93
  %37 = sext i32 %5 to i64
  %38 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %19, align 8
  %39 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %38, i64 %37
  %40 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %39, align 8
  %41 = getelementptr inbounds %class.CXFA_Stroke, %class.CXFA_Stroke* %40, i64 0, i32 0, i32 0, i32 2
  %42 = load i16, i16* %41, align 4
  %43 = icmp eq i16 %42, 148
  br i1 %43, label %44, label %66

44:                                               ; preds = %31
  %45 = add nsw i32 %5, 7
  %46 = srem i32 %45, 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %38, i64 %47
  %49 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %48, align 8
  %50 = add nsw i32 %5, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %38, i64 %51
  %53 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %52, align 8
  %54 = tail call zeroext i1 @_ZN11CXFA_Stroke10IsInvertedEv(%class.CXFA_Stroke* %40) #6
  br i1 %54, label %55, label %83

55:                                               ; preds = %44
  %56 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %40, %class.CXFA_Stroke* %49, i32 0) #6
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %49) #6
  %59 = fmul float %58, 5.000000e-01
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi float [ 0.000000e+00, %55 ], [ %59, %57 ]
  %62 = tail call zeroext i1 @_ZN11CXFA_Stroke10SameStylesEPS_j(%class.CXFA_Stroke* %40, %class.CXFA_Stroke* %53, i32 0) #6
  br i1 %62, label %83, label %63

63:                                               ; preds = %60
  %64 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %53) #6
  %65 = fmul float %64, 5.000000e-01
  br label %83

66:                                               ; preds = %31
  %67 = or i1 %34, %36
  br i1 %67, label %83, label %68

68:                                               ; preds = %66
  %69 = add nsw i32 %5, 2
  %70 = srem i32 %69, 8
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %38, i64 %71
  %73 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %72, align 8
  %74 = add nsw i32 %5, 6
  %75 = srem i32 %74, 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %38, i64 %76
  %78 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %77, align 8
  %79 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %78) #6
  %80 = fmul float %79, 5.000000e-01
  %81 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %73) #6
  %82 = fmul float %81, 5.000000e-01
  br label %83

83:                                               ; preds = %68, %66, %44, %63, %60
  %84 = phi float [ 0.000000e+00, %60 ], [ %65, %63 ], [ 0.000000e+00, %44 ], [ 0.000000e+00, %66 ], [ %82, %68 ]
  %85 = phi float [ %61, %60 ], [ %61, %63 ], [ 0.000000e+00, %44 ], [ 0.000000e+00, %66 ], [ %80, %68 ]
  %86 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #6
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float 0.000000e+00, float* %87, align 4
  store float 0.000000e+00, float* %88, align 4
  %89 = select i1 %36, float 0x3FF921FB60000000, float 0.000000e+00
  switch i32 %5, label %168 [
    i32 0, label %90
    i32 1, label %90
    i32 2, label %108
    i32 3, label %108
    i32 4, label %128
    i32 5, label %128
    i32 6, label %148
    i32 7, label %148
  ]

90:                                               ; preds = %83, %83
  %91 = extractelement <2 x float> %2, i32 0
  %92 = extractelement <2 x float> %2, i32 1
  %93 = extractelement <2 x float> %3, i32 0
  %94 = fadd float %91, %93
  %95 = icmp eq i32 %5, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = fsub float %91, %85
  store float %97, float* %87, align 4
  %98 = fadd float %92, %32
  store float %98, float* %88, align 4
  %99 = fsub float -0.000000e+00, %84
  br label %103

100:                                              ; preds = %90
  %101 = fadd float %91, %32
  %102 = fsub float %101, %85
  store float %102, float* %87, align 4
  store float %92, float* %88, align 4
  br label %103

103:                                              ; preds = %100, %96
  %104 = phi float [ %99, %96 ], [ 0.000000e+00, %100 ]
  %105 = phi float [ 0.000000e+00, %96 ], [ %84, %100 ]
  %106 = select i1 %34, float 0x3FF921FB60000000, float 0x400921FB60000000
  %107 = select i1 %36, float %106, float 1.000000e+00
  br label %168

108:                                              ; preds = %83, %83
  %109 = extractelement <2 x float> %2, i32 0
  %110 = extractelement <2 x float> %3, i32 0
  %111 = fadd float %109, %110
  %112 = extractelement <2 x float> %2, i32 1
  %113 = extractelement <2 x float> %3, i32 1
  %114 = fadd float %112, %113
  %115 = icmp eq i32 %5, 2
  br i1 %115, label %116, label %118

116:                                              ; preds = %108
  %117 = fsub float %111, %32
  store float %117, float* %87, align 4
  br label %120

118:                                              ; preds = %108
  store float %111, float* %87, align 4
  %119 = fadd float %112, %32
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi float [ %119, %118 ], [ %112, %116 ]
  %122 = phi float [ 0.000000e+00, %118 ], [ %84, %116 ]
  %123 = phi float [ %84, %118 ], [ 0.000000e+00, %116 ]
  %124 = fsub float %121, %85
  store float %124, float* %88, align 4
  %125 = select i1 %34, float 0x400921FB60000000, float 0x4012D97C80000000
  %126 = select i1 %36, float %125, float 0.000000e+00
  %127 = select i1 %36, float 0x3FF921FB60000000, float 1.000000e+00
  br label %168

128:                                              ; preds = %83, %83
  %129 = extractelement <2 x float> %2, i32 0
  %130 = extractelement <2 x float> %3, i32 0
  %131 = fadd float %129, %130
  %132 = extractelement <2 x float> %2, i32 1
  %133 = extractelement <2 x float> %3, i32 1
  %134 = fadd float %132, %133
  %135 = icmp eq i32 %5, 4
  br i1 %135, label %136, label %139

136:                                              ; preds = %128
  %137 = fadd float %131, %85
  store float %137, float* %87, align 4
  %138 = fsub float %134, %32
  store float %138, float* %88, align 4
  br label %143

139:                                              ; preds = %128
  %140 = fsub float %131, %32
  %141 = fadd float %140, %85
  store float %141, float* %87, align 4
  store float %134, float* %88, align 4
  %142 = fsub float -0.000000e+00, %84
  br label %143

143:                                              ; preds = %139, %136
  %144 = phi float [ %84, %136 ], [ 0.000000e+00, %139 ]
  %145 = phi float [ 0.000000e+00, %136 ], [ %142, %139 ]
  %146 = select i1 %34, float 0x4012D97C80000000, float 0.000000e+00
  %147 = select i1 %36, float %146, float -1.000000e+00
  br label %168

148:                                              ; preds = %83, %83
  %149 = extractelement <2 x float> %2, i32 0
  %150 = extractelement <2 x float> %2, i32 1
  %151 = extractelement <2 x float> %3, i32 1
  %152 = fadd float %150, %151
  %153 = icmp eq i32 %5, 6
  br i1 %153, label %154, label %158

154:                                              ; preds = %148
  %155 = fadd float %149, %32
  store float %155, float* %87, align 4
  %156 = fadd float %152, %85
  store float %156, float* %88, align 4
  %157 = fsub float -0.000000e+00, %84
  br label %162

158:                                              ; preds = %148
  store float %149, float* %87, align 4
  %159 = fsub float %152, %32
  %160 = fadd float %159, %85
  store float %160, float* %88, align 4
  %161 = fsub float -0.000000e+00, %84
  br label %162

162:                                              ; preds = %158, %154
  %163 = phi float [ %157, %154 ], [ 0.000000e+00, %158 ]
  %164 = phi float [ 0.000000e+00, %154 ], [ %161, %158 ]
  %165 = select i1 %34, float 0.000000e+00, float 0x3FF921FB60000000
  %166 = select i1 %36, float %165, float 0.000000e+00
  %167 = select i1 %36, float 0x3FF921FB60000000, float -1.000000e+00
  br label %168

168:                                              ; preds = %162, %143, %120, %103, %83
  %169 = phi float [ 0.000000e+00, %83 ], [ %149, %162 ], [ %129, %143 ], [ %111, %120 ], [ %94, %103 ]
  %170 = phi float [ 0.000000e+00, %83 ], [ %150, %162 ], [ %134, %143 ], [ %114, %120 ], [ %92, %103 ]
  %171 = phi float [ 0.000000e+00, %83 ], [ %149, %162 ], [ %131, %143 ], [ %111, %120 ], [ %91, %103 ]
  %172 = phi float [ 0.000000e+00, %83 ], [ %152, %162 ], [ %134, %143 ], [ %112, %120 ], [ %92, %103 ]
  %173 = phi float [ 0.000000e+00, %83 ], [ 0.000000e+00, %162 ], [ %144, %143 ], [ 0.000000e+00, %120 ], [ %104, %103 ]
  %174 = phi float [ 0.000000e+00, %83 ], [ %163, %162 ], [ 0.000000e+00, %143 ], [ %122, %120 ], [ 0.000000e+00, %103 ]
  %175 = phi float [ 0.000000e+00, %83 ], [ 0.000000e+00, %162 ], [ %145, %143 ], [ 0.000000e+00, %120 ], [ %105, %103 ]
  %176 = phi float [ 0.000000e+00, %83 ], [ %164, %162 ], [ 0.000000e+00, %143 ], [ %123, %120 ], [ 0.000000e+00, %103 ]
  %177 = phi float [ 0.000000e+00, %83 ], [ %166, %162 ], [ %147, %143 ], [ %126, %120 ], [ %107, %103 ]
  %178 = phi float [ %89, %83 ], [ %167, %162 ], [ %89, %143 ], [ %127, %120 ], [ %89, %103 ]
  %179 = phi float [ 1.000000e+00, %83 ], [ 1.000000e+00, %162 ], [ -1.000000e+00, %143 ], [ -1.000000e+00, %120 ], [ 1.000000e+00, %103 ]
  %180 = phi float [ 1.000000e+00, %83 ], [ -1.000000e+00, %162 ], [ -1.000000e+00, %143 ], [ 1.000000e+00, %120 ], [ 1.000000e+00, %103 ]
  %181 = phi float [ 1.000000e+00, %83 ], [ 0.000000e+00, %162 ], [ 1.000000e+00, %143 ], [ 0.000000e+00, %120 ], [ -1.000000e+00, %103 ]
  %182 = phi float [ 1.000000e+00, %83 ], [ 1.000000e+00, %162 ], [ 0.000000e+00, %143 ], [ -1.000000e+00, %120 ], [ 0.000000e+00, %103 ]
  br i1 %6, label %183, label %184

183:                                              ; preds = %168
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #6
  br label %184

184:                                              ; preds = %183, %168
  br i1 %16, label %195, label %185

185:                                              ; preds = %184
  %186 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #6
  %187 = fmul float %33, %181
  %188 = fadd float %169, %187
  %189 = fadd float %175, %188
  %190 = fmul float %33, %182
  %191 = fadd float %170, %190
  %192 = fadd float %176, %191
  %193 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %189, float* %193, align 4
  %194 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %192, float* %194, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #6
  br label %257

195:                                              ; preds = %184
  br i1 %36, label %196, label %236

196:                                              ; preds = %195
  %197 = fcmp olt float %32, 0.000000e+00
  %198 = fadd float %177, 0xC00921FB60000000
  %199 = select i1 %197, float %198, float %177
  %200 = fsub float -0.000000e+00, %178
  %201 = select i1 %34, float %200, float %178
  %202 = fmul float %174, 2.000000e+00
  %203 = fadd float %171, %202
  %204 = fmul float %173, 2.000000e+00
  %205 = fadd float %172, %204
  %206 = fmul float %32, 2.000000e+00
  %207 = fmul float %206, %179
  %208 = fsub float %207, %202
  %209 = fmul float %206, %180
  %210 = fsub float %209, %204
  %211 = fcmp olt float %208, 0.000000e+00
  %212 = fadd float %203, %208
  %213 = fsub float -0.000000e+00, %208
  %214 = select i1 %211, float %213, float %208
  %215 = select i1 %211, float %212, float %203
  %216 = fcmp olt float %210, 0.000000e+00
  %217 = fadd float %205, %210
  %218 = fsub float -0.000000e+00, %210
  %219 = select i1 %216, float %218, float %210
  %220 = select i1 %216, float %217, float %205
  br i1 %34, label %221, label %227

221:                                              ; preds = %196
  %222 = fsub float -0.000000e+00, %32
  %223 = fmul float %179, %222
  %224 = fmul float %180, %222
  %225 = fadd float %223, %215
  %226 = fadd float %224, %220
  br label %227

227:                                              ; preds = %221, %196
  %228 = phi float [ %226, %221 ], [ %220, %196 ]
  %229 = phi float [ %225, %221 ], [ %215, %196 ]
  %230 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #6
  %231 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float %229, float* %231, align 4, !alias.scope !27
  %232 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  store float %228, float* %232, align 4, !alias.scope !27
  %233 = bitcast %class.CFX_STemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #6
  %234 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %12, i64 0, i32 0
  store float %214, float* %234, align 4, !alias.scope !30
  %235 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %12, i64 0, i32 1
  store float %219, float* %235, align 4, !alias.scope !30
  call void @_ZN12CFGAS_GEPath5ArcToERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %11, %class.CFX_STemplate* nonnull dereferenceable(8) %12, float %199, float %201) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #6
  br label %257

236:                                              ; preds = %195
  %237 = bitcast %class.CFX_PTemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #6
  %238 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 0
  %239 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 1
  store float 0.000000e+00, float* %238, align 4
  store float 0.000000e+00, float* %239, align 4
  br i1 %34, label %240, label %245

240:                                              ; preds = %236
  %241 = fmul float %32, %179
  %242 = fadd float %171, %241
  store float %242, float* %238, align 4
  %243 = fmul float %32, %180
  %244 = fadd float %172, %243
  br label %246

245:                                              ; preds = %236
  store float %171, float* %238, align 4
  br label %246

246:                                              ; preds = %245, %240
  %247 = phi float [ %172, %245 ], [ %244, %240 ]
  store float %247, float* %239, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %13) #6
  %248 = bitcast %class.CFX_PTemplate* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #6
  %249 = fmul float %32, %177
  %250 = fadd float %171, %249
  %251 = fadd float %174, %250
  %252 = fmul float %32, %178
  %253 = fadd float %172, %252
  %254 = fadd float %173, %253
  %255 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  store float %251, float* %255, align 4
  %256 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  store float %254, float* %256, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #6
  br label %257

257:                                              ; preds = %227, %246, %185
  %258 = phi i8* [ %230, %227 ], [ %237, %246 ], [ %186, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #6
  ret void
}

declare void @_ZN12CFGAS_GEPath5CloseEv(%class.CFGAS_GEPath*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_Rectangle10StrokeRectEP16CFGAS_GEGraphicsRK9CFX_RectFfRK10CFX_Matrixjj(%class.CXFA_Rectangle* nocapture readnone, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), float, %class.CFX_Matrix* dereferenceable(24), i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.CFGAS_GEPath, align 8
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %class.CFX_PTemplate, align 4
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFGAS_GEColor, align 8
  %17 = alloca %class.CFGAS_GEPath, align 8
  %18 = alloca %class.CFX_PTemplate, align 4
  %19 = alloca %class.CFX_PTemplate, align 4
  %20 = alloca %class.CFX_PTemplate, align 4
  %21 = alloca %class.CFX_PTemplate, align 4
  %22 = alloca %class.CFX_PTemplate, align 4
  %23 = alloca %class.CFX_PTemplate, align 4
  %24 = alloca %class.CFX_PTemplate, align 4
  %25 = alloca %class.CFGAS_GEColor, align 8
  %26 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fadd float %27, %29
  %31 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fadd float %32, %34
  %36 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #6
  %37 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  %38 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  %39 = bitcast %class.CFX_RectF* %2 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = bitcast %class.CFX_PTemplate* %9 to i32*
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %30, float* %42, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  %43 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  %44 = load i32, i32* %39, align 4
  %45 = bitcast float* %26 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %class.CFX_PTemplate* %10 to i32*
  store i32 %44, i32* %47, align 4
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %49 = bitcast float* %48 to i32*
  store i32 %46, i32* %49, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  %50 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  %51 = load i32, i32* %45, align 4
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float %35, float* %52, align 4
  %53 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  %54 = bitcast float* %53 to i32*
  store i32 %51, i32* %54, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  %55 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #6
  %56 = fsub float %35, %3
  %57 = load float, float* %26, align 4
  %58 = fadd float %57, %3
  %59 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  store float %56, float* %59, align 4
  %60 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  store float %58, float* %60, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  %61 = bitcast %class.CFX_PTemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #6
  %62 = load float, float* %31, align 4
  %63 = fadd float %62, %3
  %64 = load float, float* %26, align 4
  %65 = fadd float %64, %3
  %66 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 0
  store float %63, float* %66, align 4
  %67 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %13, i64 0, i32 1
  store float %65, float* %67, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #6
  %68 = bitcast %class.CFX_PTemplate* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #6
  %69 = load float, float* %31, align 4
  %70 = fadd float %69, %3
  %71 = fsub float %30, %3
  %72 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  store float %70, float* %72, align 4
  %73 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  store float %71, float* %73, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #6
  %74 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #6
  %75 = load i32, i32* %39, align 4
  %76 = bitcast %class.CFX_PTemplate* %15 to i32*
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  store float %30, float* %77, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #6
  %78 = bitcast %class.CFGAS_GEColor* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %16, i32 %5) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %16) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  %79 = bitcast %class.CFGAS_GEPath* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #6
  %80 = bitcast %class.CFGAS_GEPath* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %17) #6
  %81 = bitcast %class.CFX_PTemplate* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #6
  %82 = load i32, i32* %45, align 4
  %83 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 0
  store float %35, float* %83, align 4
  %84 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  %85 = bitcast float* %84 to i32*
  store i32 %82, i32* %85, align 4
  call void @_ZN12CFGAS_GEPath6MoveToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %18) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #6
  %86 = bitcast %class.CFX_PTemplate* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #6
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %19, i64 0, i32 0
  store float %35, float* %87, align 4
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %19, i64 0, i32 1
  store float %30, float* %88, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #6
  %89 = bitcast %class.CFX_PTemplate* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #6
  %90 = load i32, i32* %39, align 4
  %91 = bitcast %class.CFX_PTemplate* %20 to i32*
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %20, i64 0, i32 1
  store float %30, float* %92, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %20) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #6
  %93 = bitcast %class.CFX_PTemplate* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #6
  %94 = load float, float* %31, align 4
  %95 = fadd float %94, %3
  %96 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 0
  store float %95, float* %96, align 4
  %97 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %21, i64 0, i32 1
  store float %71, float* %97, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %21) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #6
  %98 = bitcast %class.CFX_PTemplate* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #6
  %99 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 0
  store float %56, float* %99, align 4
  %100 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %22, i64 0, i32 1
  store float %71, float* %100, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %22) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #6
  %101 = bitcast %class.CFX_PTemplate* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #6
  %102 = load float, float* %26, align 4
  %103 = fadd float %102, %3
  %104 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 0
  store float %56, float* %104, align 4
  %105 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %23, i64 0, i32 1
  store float %103, float* %105, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #6
  %106 = bitcast %class.CFX_PTemplate* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #6
  %107 = load i32, i32* %45, align 4
  %108 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 0
  store float %35, float* %108, align 4
  %109 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 1
  %110 = bitcast float* %109 to i32*
  store i32 %107, i32* %110, align 4
  call void @_ZN12CFGAS_GEPath6LineToERK13CFX_PTemplateIfE(%class.CFGAS_GEPath* nonnull %17, %class.CFX_PTemplate* nonnull dereferenceable(8) %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #6
  %111 = bitcast %class.CFGAS_GEColor* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #6
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %25, i32 %6) #6
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %25) #6
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #6
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %17, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %4) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #6
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #6
  ret void
}

declare void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #3

declare void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare signext i16 @_ZNK9CXFA_Node16GetValueNodeTypeEv(%class.CXFA_Node*) unnamed_addr #1

declare i32 @_ZNK9CXFA_Node22GetDefaultFFWidgetTypeEv(%class.CXFA_Node*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn56_NK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2

declare void @_ZN8CJX_NodeC1EP9CXFA_Node(%class.CJX_Node*, %class.CXFA_Node*) unnamed_addr #1

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CJX_Object*
  %3 = bitcast i8* %0 to void (%class.CJX_Object*)***
  %4 = load void (%class.CJX_Object*)**, void (%class.CJX_Object*)*** %3, align 8
  %5 = load void (%class.CJX_Object*)*, void (%class.CJX_Object*)** %4, align 8
  tail call void %5(%class.CJX_Object* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CJX_Object*
  %4 = bitcast i8* %1 to void (%class.CJX_Object*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CJX_Object*, %"class.cppgc::Visitor"*)**, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)** %5, i64 4
  %7 = load void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.CJX_Object* %3, %"class.cppgc::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.maxnum.f64(double, double) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!5 = distinct !{!5, !"_ZNK9CFX_RectF7TopLeftEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK9CFX_RectF8TopRightEv: argument 0"}
!8 = distinct !{!8, !"_ZNK9CFX_RectF8TopRightEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK9CFX_RectF8TopRightEv: argument 0"}
!11 = distinct !{!11, !"_ZNK9CFX_RectF8TopRightEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK9CFX_RectF11BottomRightEv: argument 0"}
!14 = distinct !{!14, !"_ZNK9CFX_RectF11BottomRightEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK9CFX_RectF11BottomRightEv: argument 0"}
!17 = distinct !{!17, !"_ZNK9CFX_RectF11BottomRightEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK9CFX_RectF10BottomLeftEv: argument 0"}
!20 = distinct !{!20, !"_ZNK9CFX_RectF10BottomLeftEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!23 = distinct !{!23, !"_ZNK9CFX_RectF7TopLeftEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!26 = distinct !{!26, !"_ZNK9CFX_RectF4SizeEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!29 = distinct !{!29, !"_ZNK9CFX_RectF7TopLeftEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!32 = distinct !{!32, !"_ZNK9CFX_RectF4SizeEv"}
