; ModuleID = '../../ui/views/accessibility/ax_virtual_view.cc'
source_filename = "../../ui/views/accessibility/ax_virtual_view.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.259", %"class.std::__1::vector.267", %"class.std::__1::vector.275", %"class.std::__1::vector.283", %"class.std::__1::vector.291", %"class.std::__1::vector.299", %"class.std::__1::vector.307", %"class.std::__1::vector.315", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.259" = type { %"class.std::__1::__vector_base.260" }
%"class.std::__1::__vector_base.260" = type { %"struct.std::__1::pair.261"*, %"struct.std::__1::pair.261"*, %"class.std::__1::__compressed_pair.262" }
%"struct.std::__1::pair.261" = type opaque
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::pair.261"* }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.std::__1::pair.269"*, %"struct.std::__1::pair.269"*, %"class.std::__1::__compressed_pair.270" }
%"struct.std::__1::pair.269" = type opaque
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::pair.269"* }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"struct.std::__1::pair.277"*, %"struct.std::__1::pair.277"*, %"class.std::__1::__compressed_pair.278" }
%"struct.std::__1::pair.277" = type opaque
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::pair.277"* }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.std::__1::pair.285"*, %"struct.std::__1::pair.285"*, %"class.std::__1::__compressed_pair.286" }
%"struct.std::__1::pair.285" = type opaque
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::pair.285"* }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.std::__1::pair.293"*, %"struct.std::__1::pair.293"*, %"class.std::__1::__compressed_pair.294" }
%"struct.std::__1::pair.293" = type opaque
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::pair.293"* }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"struct.std::__1::pair.301"*, %"struct.std::__1::pair.301"*, %"class.std::__1::__compressed_pair.302" }
%"struct.std::__1::pair.301" = type opaque
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::pair.301"* }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*, %"class.std::__1::__compressed_pair.310" }
%"struct.std::__1::pair.309" = type opaque
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::pair.309"* }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { i32*, i32*, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.322" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.views::AXVirtualView" = type { %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*, %"class.std::__1::vector.246", %"class.views::AXAuraObjCache"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", %"class.base::RepeatingCallback.410" }
%"class.ui::AXPlatformNodeDelegateBase" = type { %"class.ui::AXPlatformNodeDelegate" }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXPlatformNode" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.views::ViewAccessibility" = type { i32 (...)**, %"class.base::RepeatingCallback", %"class.views::View"*, %"class.std::__1::vector.246", %"class.views::AXVirtualView"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", i8, i8, %"class.absl::optional.129", %"class.views::Widget"*, %"class.views::Widget"*, %"class.absl::optional.328", %"class.std::__1::unique_ptr.338" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.61", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.68", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.absl::optional.92", i8, [7 x i8], %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.129", i8, i8, [3 x i8], %"class.std::__1::vector.134", %"class.std::__1::unique_ptr.141", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.217", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.base::ObserverList.242", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.8" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.13", %"class.std::__1::vector.29", %"class.ui::EventHandler"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.36" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.29" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.22" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::flat_map.25"* }
%"class.base::flat_map.25" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.41" }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.52" }
%"class.std::__1::map.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::vector.61"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.76", %"struct.std::__1::atomic.76", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.74, %class.SkTDArray.75, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.74 = type { i8*, i32, i32 }
%class.SkTDArray.75 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.81 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.76" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.81 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.82", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i8 }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i8 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.109, float, [4 x i8] }>
%class.sk_sp.109 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.110", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.114", %"class.base::ObserverList.125", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.114" = type { %"class.std::__1::__tree.115" }
%"class.std::__1::__tree.115" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.125" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.126", i64, i32, [4 x i8] }>
%"class.base::LinkedList.126" = type { %"class.base::LinkNode.127" }
%"class.base::LinkNode.127" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.190", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.207", i32, [4 x i8], %"class.base::ObserverList.213", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.196" }
%"class.std::__1::map.196" = type { %"class.std::__1::__tree.197" }
%"class.std::__1::__tree.197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.213" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.214", i64, i32, [4 x i8] }>
%"class.base::LinkedList.214" = type { %"class.base::LinkNode.215" }
%"class.base::LinkNode.215" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::vector.220"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.222" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.views::ViewAccessibility"* }
%"class.base::ObserverList.242" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.243", i64, i32, [4 x i8] }>
%"class.base::LinkedList.243" = type { %"class.base::LinkNode.244" }
%"class.base::LinkNode.244" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i8 }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.151", %"class.base::ObserverList.164", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.177", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.183", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.61", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.189" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.147" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.151" = type <{ %"class.std::__1::vector.152", %"class.base::LinkedList.161", i64, i32, [4 x i8] }>
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.156" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.154 }
%class.scoped_refptr.154 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.155", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.76" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.161" = type { %"class.base::LinkNode.162" }
%"class.base::LinkNode.162" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.164" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.165", i64, i32, [4 x i8] }>
%"class.base::LinkedList.165" = type { %"class.base::LinkNode.166" }
%"class.base::LinkNode.166" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.168", i8, %"class.base::RepeatingCallback.175", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.168" = type { %"class.std::__1::__list_imp.169" }
%"class.std::__1::__list_imp.169" = type { %"struct.std::__1::__list_node_base.170", %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::__list_node_base.170" = type { %"struct.std::__1::__list_node_base.170"*, %"struct.std::__1::__list_node_base.170"* }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback.175" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.411", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.61", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.68", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.absl::optional.92", i8, [7 x i8], %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.129", i8, i8, [3 x i8], %"class.std::__1::vector.134", %"class.std::__1::unique_ptr.141", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.217", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.base::ObserverList.242", i32 }>
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.419 }
%union.anon.419 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.189" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.328" = type { %"class.absl::optional_internal::optional_data.329" }
%"class.absl::optional_internal::optional_data.329" = type { %"class.absl::optional_internal::optional_data_base.330" }
%"class.absl::optional_internal::optional_data_base.330" = type { %"class.absl::optional_internal::optional_data_dtor_base.331" }
%"class.absl::optional_internal::optional_data_dtor_base.331" = type { i8, %union.anon.332 }
%union.anon.332 = type { %"class.ui::AXTreeID" }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional.333" }
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.views::ViewsAXTreeManager"* }
%"class.views::ViewsAXTreeManager" = type opaque
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.views::AXVirtualView"* }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::unique_ptr.248"* }
%"class.views::AXAuraObjCache" = type { %"class.aura::client::FocusChangeObserver", %"class.aura::Window"*, %"class.std::__1::unique_ptr.344", %"class.std::__1::map.350", %"class.std::__1::map.361", %"class.std::__1::map.372", %"class.std::__1::map.383", %"class.std::__1::map.394", %"class.views::AXAuraObjCache::Delegate"*, %"class.std::__1::set", %"class.aura::Window"*, %"class.views::Widget"* }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.views::AXAuraObjCache::A11yOverrideWindowObserver"* }
%"class.views::AXAuraObjCache::A11yOverrideWindowObserver" = type opaque
%"class.std::__1::map.350" = type { %"class.std::__1::__tree.351" }
%"class.std::__1::__tree.351" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.361" = type { %"class.std::__1::__tree.362" }
%"class.std::__1::__tree.362" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.372" = type { %"class.std::__1::__tree.373" }
%"class.std::__1::__tree.373" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.383" = type { %"class.std::__1::__tree.384" }
%"class.std::__1::__tree.384" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.394" = type { %"class.std::__1::__tree.395" }
%"class.std::__1::__tree.395" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.views::AXAuraObjCache::Delegate" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.403" }
%"class.std::__1::__tree.403" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.aura::Window" = type opaque
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.base::RepeatingCallback.410" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.423" }
%"struct.std::__1::pair.423" = type { i32, %"class.views::AXVirtualView"* }
%"class.std::__1::basic_string.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.427 }
%union.anon.427 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.428 }
%struct.anon.428 = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.424", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.255", %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.std::__1::allocator.257"* }
%"class.std::__1::allocator.257" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct._AtkObject = type opaque
%"class.views::AXEventManager" = type { %"class.base::ObserverList.434" }
%"class.base::ObserverList.434" = type <{ %"class.std::__1::vector.152", %"class.base::LinkedList.435", i64, i32, [4 x i8] }>
%"class.base::LinkedList.435" = type { %"class.base::LinkNode.436" }
%"class.base::LinkNode.436" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::ViewAXPlatformNodeDelegate" = type { %"class.views::ViewAccessibility", %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"struct.ui::AXNodeData" }
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string.424", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string.424", i32, i32, i32, i32 }
%"class.views::AXVirtualViewWrapper" = type { %"class.views::AXAuraObjWrapper", %"class.views::AXVirtualView"* }
%"class.views::AXAuraObjWrapper" = type { i32 (...)**, %"class.views::AXAuraObjCache"* }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.424", i8, [3 x i8], float, %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.ui::AXNode::OwnerTree::Selection" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5views13AXVirtualViewEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

@_ZZN5views8GetIdMapEvE13id_to_obj_map = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN5views8GetIdMapEvE13id_to_obj_map = internal global i64 0, align 8
@_ZN5views13AXVirtualView14kViewClassNameE = hidden constant [14 x i8] c"AXVirtualView\00", align 1
@_ZTVN5views13AXVirtualViewE = hidden unnamed_addr constant { [101 x i8*] } { [101 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualViewD2Ev to i8*), i8* bitcast (void (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualViewD0Ev to i8*), i8* bitcast (%"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView7GetDataEv to i8*), i8* bitcast (%"struct.ui::AXTreeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv to i8*), i8* bitcast (void (%"struct.ui::AXNode::OwnerTree::Selection"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualView11GetNSWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualView23GetNativeViewAccessibleEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualView9GetParentEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv to i8*), i8* bitcast (i32 (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView13GetChildCountEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*, i32)* @_ZN5views13AXVirtualView12ChildAtIndexEi to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase14HasModalDialogEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase9IsIgnoredEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20IsInvisibleOrIgnoredEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase9IsFocusedEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase23IsToplevelBrowserWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.424"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32)* @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.424"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv to i8*), i8* bitcast ({ i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)* @_ZNK5views13AXVirtualView13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)* @_ZNK5views13AXVirtualView11HitTestSyncEii to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView8GetFocusEv to i8*), i8* bitcast (i1 (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView11IsOffscreenEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11IsMinimizedEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.views::AXVirtualView"*, i32)* @_ZN5views13AXVirtualView13GetFromNodeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, %"class.ui::AXTreeID"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase22GetFromTreeIDAndNodeIDERKNS_8AXTreeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetAuthorUniqueIdEv to i8*), i8* bitcast (%"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView11GetUniqueIdEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.424"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv to i8*), i8* bitcast (i16 (%"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView32GetTableHasColumnOrRowHeaderNodeEv to i8*), i8* bitcast (void (%"class.std::__1::vector.315"*, %"class.views::AXVirtualView"*)* @_ZNK5views13AXVirtualView19GetColHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.315"*, %"class.views::AXVirtualView"*, i32)* @_ZNK5views13AXVirtualView19GetColHeaderNodeIdsEi to i8*), i8* bitcast (void (%"class.std::__1::vector.315"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.315"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv to i8*), i8* bitcast (i64 (%"class.views::AXVirtualView"*, i32, i32)* @_ZNK5views13AXVirtualView9GetCellIdEii to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16IsOrderedSetItemEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12IsOrderedSetEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetPosInSetEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase10GetSetSizeEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv to i8*), i8* bitcast (i32 (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualView36GetTargetForNativeAccessibilityEventEv to i8*), i8* bitcast (i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)* @_ZN5views13AXVirtualView26AccessibilityPerformActionERKN2ui12AXActionDataE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv to i8*), i8* bitcast (i1 (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualView34ShouldIgnoreHoveredStateForTestingEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.424"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)* @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm to i8*), i8* bitcast (i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)* @_ZN5views13AXVirtualView22HandleAccessibleActionERKN2ui12AXActionDataE to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"view.get() != this\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../ui/views/accessibility/ax_virtual_view.cc\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"You cannot add an AXVirtualView as its own child.\00", align 1
@_ZZNK5views13AXVirtualView7GetDataEvE9node_data = internal global %"struct.ui::AXNodeData" zeroinitializer, align 8
@_ZGVZNK5views13AXVirtualView7GetDataEvE9node_data = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5views13AXVirtualViewC1Ev = hidden unnamed_addr alias void (%"class.views::AXVirtualView"*), void (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualViewC2Ev
@_ZN5views13AXVirtualViewD1Ev = hidden unnamed_addr alias void (%"class.views::AXVirtualView"*), void (%"class.views::AXVirtualView"*)* @_ZN5views13AXVirtualViewD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::map"* @_ZN5views8GetIdMapEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views8GetIdMapEvE13id_to_obj_map to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #14
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.std::__1::map"* bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to %"class.std::__1::map"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView9GetFromIdEi(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views8GetIdMapEvE13id_to_obj_map to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #14
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %36, label %11

11:                                               ; preds = %8, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %22, %11 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %8 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %23, %11 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %0
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %21 = select i1 %16, %"class.std::__1::__tree_node"** %18, %"class.std::__1::__tree_node"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, %0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.views::AXVirtualView"**
  %35 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %34, align 8
  br label %36

36:                                               ; preds = %27, %25, %8, %32
  %37 = phi %"class.views::AXVirtualView"* [ %35, %32 ], [ null, %8 ], [ null, %25 ], [ null, %27 ]
  ret %"class.views::AXVirtualView"* %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualViewC2Ev(%"class.views::AXVirtualView"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.424", align 8
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %3) #14
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [101 x i8*] }, { [101 x i8*] }* @_ZTVN5views13AXVirtualViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 6
  %7 = bitcast %"class.views::ViewAccessibility"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  tail call void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"* %6) #14
  %8 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 7
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* %8) #14
  %9 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views8GetIdMapEvE13id_to_obj_map to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !2

12:                                               ; preds = %1
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #14
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  br label %16

16:                                               ; preds = %1, %12, %15
  %17 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 6, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %16, %43
  %22 = phi %"class.std::__1::__tree_node"* [ %46, %43 ], [ %19, %16 ]
  %23 = phi %"class.std::__1::__tree_node_base"** [ %45, %43 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node_base"**), %16 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %18, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

33:                                               ; preds = %21
  %34 = icmp slt i32 %25, %18
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  br label %47

43:                                               ; preds = %35, %27
  %44 = phi %"class.std::__1::__tree_node_base"* [ %29, %27 ], [ %37, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %28, %27 ], [ %36, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.std::__1::__tree_node"*
  br label %21

47:                                               ; preds = %16, %41, %39, %31
  %48 = phi %"class.std::__1::__tree_end_node"* [ %32, %31 ], [ %40, %39 ], [ %42, %41 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %16 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %28, %31 ], [ %36, %39 ], [ %23, %41 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node_base"**), %16 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node"* %51, null
  br i1 %52, label %53, label %76

53:                                               ; preds = %47
  %54 = tail call i8* @_Znwm(i64 48) #15, !noalias !3
  %55 = getelementptr inbounds i8, i8* %54, i64 32
  %56 = bitcast i8* %55 to i32*
  store i32 %18, i32* %56, align 8, !noalias !3
  %57 = getelementptr inbounds i8, i8* %54, i64 40
  %58 = bitcast i8* %57 to %"class.views::AXVirtualView"**
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %58, align 8, !noalias !3
  %59 = bitcast i8* %54 to %"class.std::__1::__tree_node"*
  %60 = bitcast i8* %54 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %54, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8**
  store i8* %54, i8** %63, align 8
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to %"class.std::__1::__tree_end_node"**), align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %53
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  store i64 %69, i64* bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i64*), align 8
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  br label %71

71:                                               ; preds = %68, %53
  %72 = phi %"class.std::__1::__tree_node_base"* [ %60, %53 ], [ %70, %68 ]
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node_base"**), align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %73, %"class.std::__1::__tree_node_base"* %72) #14
  %74 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 16) to i64*), align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 16) to i64*), align 8
  br label %76

76:                                               ; preds = %47, %71
  %77 = phi %"class.std::__1::__tree_node"* [ %59, %71 ], [ %51, %47 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 1, i32 0, i32 1
  store %"class.views::AXVirtualView"* %0, %"class.views::AXVirtualView"** %78, align 8
  %79 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0, i32 0
  %80 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode6CreateEPNS_22AXPlatformNodeDelegateE(%"class.ui::AXPlatformNodeDelegate"* %79) #14
  %81 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  store %"class.ui::AXPlatformNode"* %80, %"class.ui::AXPlatformNode"** %81, align 8
  %82 = bitcast %"class.std::__1::basic_string.424"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #14
  %83 = bitcast %"class.std::__1::basic_string.424"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 13, i8* %84, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN5views13AXVirtualView14kViewClassNameE, i64 0, i64 0), i64 13, i1 false) #14
  %85 = getelementptr inbounds i8, i8* %82, i64 13
  store i8 0, i8* %85, align 1
  call void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"* %8, i32 8, %"class.std::__1::basic_string.424"* nonnull dereferenceable(24) %2) #14
  %86 = load i8, i8* %84, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %76, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #14
  ret void
}

declare void @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"*) unnamed_addr #3

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #3

declare %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode6CreateEPNS_22AXPlatformNodeDelegateE(%"class.ui::AXPlatformNodeDelegate"*) local_unnamed_addr #3

declare void @_ZN2ui10AXNodeData18AddStringAttributeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::basic_string.424"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5views13AXVirtualView16GetViewClassNameEv(%"class.views::AXVirtualView"* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN5views13AXVirtualView14kViewClassNameE, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualViewD2Ev(%"class.views::AXVirtualView"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [101 x i8*] }, { [101 x i8*] }* @_ZTVN5views13AXVirtualViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views8GetIdMapEvE13id_to_obj_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #14
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 6, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  %15 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node_base"*
  br i1 %14, label %76, label %16

16:                                               ; preds = %9, %16
  %17 = phi %"class.std::__1::__tree_end_node"* [ %27, %16 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %9 ]
  %18 = phi %"class.std::__1::__tree_node"* [ %28, %16 ], [ %13, %9 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %12
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node"* %18 to %"class.std::__1::__tree_node"**
  %26 = select i1 %21, %"class.std::__1::__tree_node"** %23, %"class.std::__1::__tree_node"** %25
  %27 = select i1 %21, %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"* %24
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %27, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %31, label %76, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %12, %35
  br i1 %36, label %76, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 1, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_end_node"**
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, %42
  br i1 %48, label %65, label %56

49:                                               ; preds = %37, %49
  %50 = phi %"class.std::__1::__tree_node_base"* [ %52, %49 ], [ %39, %37 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %49

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 0
  br label %65

56:                                               ; preds = %41, %56
  %57 = phi %"class.std::__1::__tree_end_node"** [ %60, %56 ], [ %44, %41 ]
  %58 = bitcast %"class.std::__1::__tree_end_node"** %57 to %"class.std::__1::__tree_node_base"**
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 2
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, %59
  br i1 %64, label %65, label %56

65:                                               ; preds = %56, %54, %41
  %66 = phi %"class.std::__1::__tree_end_node"* [ %55, %54 ], [ %45, %41 ], [ %61, %56 ]
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to %"class.std::__1::__tree_end_node"**), align 8
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %67, %27
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = ptrtoint %"class.std::__1::__tree_end_node"* %66 to i64
  store i64 %70, i64* bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i64*), align 8
  br label %71

71:                                               ; preds = %69, %65
  %72 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 16) to i64*), align 8
  %73 = add i64 %72, -1
  store i64 %73, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 16) to i64*), align 8
  %74 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %15, %"class.std::__1::__tree_node_base"* %74) #14
  %75 = bitcast %"class.std::__1::__tree_end_node"* %27 to i8*
  tail call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %9, %30, %32, %71
  %77 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  %78 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %77, align 8
  %79 = icmp eq %"class.ui::AXPlatformNode"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.ui::AXPlatformNode"* %78 to void (%"class.ui::AXPlatformNode"*)***
  %82 = load void (%"class.ui::AXPlatformNode"*)**, void (%"class.ui::AXPlatformNode"*)*** %81, align 8
  %83 = load void (%"class.ui::AXPlatformNode"*)*, void (%"class.ui::AXPlatformNode"*)** %82, align 8
  tail call void %83(%"class.ui::AXPlatformNode"* nonnull %78) #14
  store %"class.ui::AXPlatformNode"* null, %"class.ui::AXPlatformNode"** %77, align 8
  br label %84

84:                                               ; preds = %76, %80
  %85 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 5
  %86 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %85, align 8
  %87 = icmp eq %"class.views::AXAuraObjCache"* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN5views14AXAuraObjCache6RemoveEPNS_13AXVirtualViewE(%"class.views::AXAuraObjCache"* nonnull %86, %"class.views::AXVirtualView"* %0) #14
  br label %89

89:                                               ; preds = %84, %88
  %90 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %90) #14
  %91 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 7
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %91) #14
  tail call void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"* %10) #14
  %92 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4
  %93 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %93, align 8
  %95 = icmp eq %"class.std::__1::unique_ptr.248"* %94, null
  br i1 %95, label %119, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::unique_ptr.248"* %94 to i8*
  %98 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.248"* %99, %94
  br i1 %100, label %117, label %101

101:                                              ; preds = %96, %112
  %102 = phi %"class.std::__1::unique_ptr.248"* [ %103, %112 ], [ %99, %96 ]
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 -1
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %104, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %104, align 8
  %106 = icmp eq %"class.views::AXVirtualView"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.views::AXVirtualView"* %105 to void (%"class.views::AXVirtualView"*)***
  %109 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %109, i64 1
  %111 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %110, align 8
  tail call void %111(%"class.views::AXVirtualView"* nonnull %105) #14
  br label %112

112:                                              ; preds = %107, %101
  %113 = icmp eq %"class.std::__1::unique_ptr.248"* %103, %94
  br i1 %113, label %114, label %101

114:                                              ; preds = %112
  %115 = bitcast %"class.std::__1::vector.246"* %92 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %96
  %118 = phi i8* [ %116, %114 ], [ %97, %96 ]
  store %"class.std::__1::unique_ptr.248"* %94, %"class.std::__1::unique_ptr.248"** %98, align 8
  tail call void @_ZdlPv(i8* %118) #15
  br label %119

119:                                              ; preds = %89, %117
  %120 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %120) #14
  ret void
}

declare void @_ZN5views14AXAuraObjCache6RemoveEPNS_13AXVirtualViewE(%"class.views::AXAuraObjCache"*, %"class.views::AXVirtualView"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualViewD0Ev(%"class.views::AXVirtualView"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5views13AXVirtualViewD2Ev(%"class.views::AXVirtualView"* %0) #14
  %2 = bitcast %"class.views::AXVirtualView"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView12AddChildViewENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.views::AXVirtualView"*, %"class.views::AXVirtualView"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %1, i64 0, i32 3
  %4 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %3, align 8
  %5 = icmp eq %"class.views::AXVirtualView"* %4, %0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.248"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.246"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  tail call void @_ZN5views13AXVirtualView14AddChildViewAtENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEi(%"class.views::AXVirtualView"* %0, %"class.views::AXVirtualView"* %1, i32 %15)
  br label %23

16:                                               ; preds = %2
  %17 = icmp eq %"class.views::AXVirtualView"* %1, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.views::AXVirtualView"* %1 to void (%"class.views::AXVirtualView"*)***
  %20 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %20, i64 1
  %22 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %21, align 8
  tail call void %22(%"class.views::AXVirtualView"* nonnull %1) #14
  br label %23

23:                                               ; preds = %6, %16, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView14AddChildViewAtENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEi(%"class.views::AXVirtualView"*, %"class.views::AXVirtualView"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr.248", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.views::AXVirtualView"*, align 8
  %8 = alloca %"class.views::AXVirtualView"*, align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.views::AXVirtualView"* %1, %"class.views::AXVirtualView"** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.views::AXVirtualView"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  store %"class.views::AXVirtualView"* %1, %"class.views::AXVirtualView"** %7, align 8
  %14 = bitcast %"class.views::AXVirtualView"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  store %"class.views::AXVirtualView"* %0, %"class.views::AXVirtualView"** %8, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp eq %"class.views::AXVirtualView"* %1, %0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* null, i8** %18, align 8
  br label %24

19:                                               ; preds = %3
  %20 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5views13AXVirtualViewEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #14
  %21 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5views13AXVirtualViewEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %20, i8* %21) #14
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i8* [ %23, %19 ], [ null, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %25, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %6) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i64 49) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %31

31:                                               ; preds = %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %32 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %10, align 8
  %33 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %32, i64 0, i32 3
  store %"class.views::AXVirtualView"* %0, %"class.views::AXVirtualView"** %33, align 8
  %34 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4
  %35 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %35, align 8
  %37 = sext i32 %2 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %36, i64 %37
  %39 = call %"class.std::__1::unique_ptr.248"* @_ZNSt3__16vectorINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector.246"* %34, %"class.std::__1::unique_ptr.248"* %38, %"class.std::__1::unique_ptr.248"* nonnull dereferenceable(8) %5)
  br label %40

40:                                               ; preds = %45, %31
  %41 = phi %"class.views::AXVirtualView"* [ %0, %31 ], [ %47, %45 ]
  %42 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %41, i64 0, i32 2
  %43 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %42, align 8
  %44 = icmp eq %"class.views::ViewAccessibility"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %41, i64 0, i32 3
  %47 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %46, align 8
  %48 = icmp eq %"class.views::AXVirtualView"* %47, null
  br i1 %48, label %67, label %40

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %43, i64 0, i32 2
  %51 = load %"class.views::View"*, %"class.views::View"** %50, align 8
  %52 = icmp eq %"class.views::View"* %51, null
  br i1 %52, label %67, label %53

53:                                               ; preds = %49, %61
  %54 = phi %"class.views::AXVirtualView"* [ %63, %61 ], [ %0, %49 ]
  %55 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %54, i64 0, i32 2
  %56 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %55, align 8
  %57 = icmp eq %"class.views::ViewAccessibility"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %56, i64 0, i32 2
  %60 = load %"class.views::View"*, %"class.views::View"** %59, align 8
  br label %65

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %54, i64 0, i32 3
  %63 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %62, align 8
  %64 = icmp eq %"class.views::AXVirtualView"* %63, null
  br i1 %64, label %65, label %53

65:                                               ; preds = %61, %58
  %66 = phi %"class.views::View"* [ %60, %58 ], [ null, %61 ]
  call void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"* %66, i32 7, i1 zeroext true) #14
  br label %67

67:                                               ; preds = %45, %49, %65
  %68 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %10, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %10, align 8
  %69 = icmp eq %"class.views::AXVirtualView"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.views::AXVirtualView"* %68 to void (%"class.views::AXVirtualView"*)***
  %72 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %72, i64 1
  %74 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %73, align 8
  call void %74(%"class.views::AXVirtualView"* nonnull %68) #14
  br label %75

75:                                               ; preds = %67, %70
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.248"* @_ZNSt3__16vectorINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector.246"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.248"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.248"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.248"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.248"* %10 to i64
  br i1 %11, label %14, label %150

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.248"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.248"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.248"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.248"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.248"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %382

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.248"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.248"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.248"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.views::AXVirtualView"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.248"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.248"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.248"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.248"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !6

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.248"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.248"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.248"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %85

60:                                               ; preds = %85, %55
  %61 = phi %"class.std::__1::unique_ptr.248"* [ %58, %55 ], [ %135, %85 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.248"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %137, label %66

66:                                               ; preds = %63, %83
  %67 = phi %"class.std::__1::unique_ptr.248"* [ %70, %83 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.248"* [ %69, %83 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.248"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.248"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.views::AXVirtualView"* %75, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.views::AXVirtualView"* %75 to void (%"class.views::AXVirtualView"*)***
  %80 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %80, i64 1
  %82 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %81, align 8
  tail call void %82(%"class.views::AXVirtualView"* nonnull %75) #14
  br label %83

83:                                               ; preds = %78, %66
  %84 = icmp eq %"class.std::__1::unique_ptr.248"* %69, %1
  br i1 %84, label %137, label %66

85:                                               ; preds = %55, %85
  %86 = phi %"class.std::__1::unique_ptr.248"* [ %135, %85 ], [ %56, %55 ]
  %87 = phi %"class.std::__1::unique_ptr.248"* [ %134, %85 ], [ %57, %55 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.248"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.248"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.248"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.248"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 2
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr.248"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr.248"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.248"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.248"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.248"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.248"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 5
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %116, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.248"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.248"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 6
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %122, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::unique_ptr.248"* %122 to i64*
  %126 = load i64, i64* %125, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %124, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.248"* %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 7
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %128, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.std::__1::unique_ptr.248"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %130, align 8
  %133 = bitcast %"class.std::__1::unique_ptr.248"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 8
  %136 = icmp ult %"class.std::__1::unique_ptr.248"* %134, %8
  br i1 %136, label %85, label %60

137:                                              ; preds = %83, %63
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %2, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.248"* %2 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %138, align 8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %141, align 8
  %143 = bitcast %"class.std::__1::unique_ptr.248"* %1 to i64*
  store i64 %140, i64* %143, align 8
  %144 = icmp eq %"class.views::AXVirtualView"* %142, null
  br i1 %144, label %382, label %145

145:                                              ; preds = %137
  %146 = bitcast %"class.views::AXVirtualView"* %142 to void (%"class.views::AXVirtualView"*)***
  %147 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %147, i64 1
  %149 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %148, align 8
  tail call void %149(%"class.views::AXVirtualView"* nonnull %142) #14
  br label %382

150:                                              ; preds = %3
  %151 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 2
  %152 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #14
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr.248"** %7 to i64*
  %159 = bitcast %"class.std::__1::vector.246"* %0 to i64*
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  %161 = load i64, i64* %159, align 8
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 3
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 2305843009213693951
  br i1 %165, label %166, label %168

166:                                              ; preds = %150
  %167 = bitcast %"class.std::__1::vector.246"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #16
  unreachable

168:                                              ; preds = %150
  %169 = bitcast %"class.std::__1::unique_ptr.248"** %9 to i64*
  %170 = sub i64 %13, %161
  %171 = ashr exact i64 %170, 3
  %172 = icmp ult i64 %171, 1152921504606846975
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = sub i64 %4, %161
  %175 = ashr exact i64 %174, 3
  store %"class.std::__1::unique_ptr.248"* null, %"class.std::__1::unique_ptr.248"** %156, align 8
  %176 = bitcast %"class.std::__1::allocator.257"** %157 to %"class.std::__1::__compressed_pair.254"**
  store %"class.std::__1::__compressed_pair.254"* %151, %"class.std::__1::__compressed_pair.254"** %176, align 8
  br label %188

177:                                              ; preds = %168
  %178 = ashr exact i64 %170, 2
  %179 = icmp ult i64 %178, %164
  %180 = select i1 %179, i64 %164, i64 %178
  %181 = sub i64 %4, %161
  %182 = ashr exact i64 %181, 3
  store %"class.std::__1::unique_ptr.248"* null, %"class.std::__1::unique_ptr.248"** %156, align 8
  %183 = bitcast %"class.std::__1::allocator.257"** %157 to %"class.std::__1::__compressed_pair.254"**
  store %"class.std::__1::__compressed_pair.254"* %151, %"class.std::__1::__compressed_pair.254"** %183, align 8
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %177
  %186 = icmp ugt i64 %180, 2305843009213693951
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  tail call void @abort() #16
  unreachable

188:                                              ; preds = %173, %185
  %189 = phi i64 [ 2305843009213693951, %173 ], [ %180, %185 ]
  %190 = phi i64 [ %175, %173 ], [ %182, %185 ]
  %191 = shl i64 %189, 3
  %192 = tail call i8* @_Znwm(i64 %191) #15
  %193 = bitcast i8* %192 to %"class.std::__1::unique_ptr.248"*
  br label %194

194:                                              ; preds = %177, %188
  %195 = phi i64 [ %190, %188 ], [ %182, %177 ]
  %196 = phi i64 [ %189, %188 ], [ 0, %177 ]
  %197 = phi %"class.std::__1::unique_ptr.248"* [ %193, %188 ], [ null, %177 ]
  store %"class.std::__1::unique_ptr.248"* %197, %"class.std::__1::unique_ptr.248"** %153, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %197, i64 %195
  store %"class.std::__1::unique_ptr.248"* %198, %"class.std::__1::unique_ptr.248"** %155, align 8
  store %"class.std::__1::unique_ptr.248"* %198, %"class.std::__1::unique_ptr.248"** %154, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %197, i64 %196
  store %"class.std::__1::unique_ptr.248"* %199, %"class.std::__1::unique_ptr.248"** %156, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.std::__1::unique_ptr.248"* dereferenceable(8) %2)
  %200 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %201 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %6, align 8
  %202 = icmp eq %"class.std::__1::unique_ptr.248"* %201, %1
  br i1 %202, label %267, label %203

203:                                              ; preds = %194
  %204 = ptrtoint %"class.std::__1::unique_ptr.248"* %201 to i64
  %205 = getelementptr %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 -1, i32 0, i32 0, i32 0
  %206 = ptrtoint %"class.views::AXVirtualView"** %205 to i64
  %207 = sub i64 %206, %204
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 3
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %226, label %212

212:                                              ; preds = %203, %212
  %213 = phi %"class.std::__1::unique_ptr.248"* [ %223, %212 ], [ %200, %203 ]
  %214 = phi %"class.std::__1::unique_ptr.248"* [ %217, %212 ], [ %1, %203 ]
  %215 = phi i64 [ %224, %212 ], [ %210, %203 ]
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %213, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %214, i64 -1
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr.248"* %217 to i64*
  %220 = load i64, i64* %219, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %218, align 8
  %221 = bitcast %"class.std::__1::unique_ptr.248"* %216 to i64*
  store i64 %220, i64* %221, align 8
  %222 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %222, i64 -1
  store %"class.std::__1::unique_ptr.248"* %223, %"class.std::__1::unique_ptr.248"** %154, align 8
  %224 = add i64 %215, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %212, !llvm.loop !8

226:                                              ; preds = %212, %203
  %227 = phi %"class.std::__1::unique_ptr.248"* [ undef, %203 ], [ %223, %212 ]
  %228 = phi %"class.std::__1::unique_ptr.248"* [ %200, %203 ], [ %223, %212 ]
  %229 = phi %"class.std::__1::unique_ptr.248"* [ %1, %203 ], [ %217, %212 ]
  %230 = icmp ult i64 %207, 24
  br i1 %230, label %267, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"class.std::__1::unique_ptr.248"* [ %265, %231 ], [ %228, %226 ]
  %233 = phi %"class.std::__1::unique_ptr.248"* [ %259, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %232, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %233, i64 -1
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.std::__1::unique_ptr.248"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %236, align 8
  %239 = bitcast %"class.std::__1::unique_ptr.248"* %234 to i64*
  store i64 %238, i64* %239, align 8
  %240 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %240, i64 -1
  store %"class.std::__1::unique_ptr.248"* %241, %"class.std::__1::unique_ptr.248"** %154, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %240, i64 -2
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %233, i64 -2
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %243, i64 0, i32 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::unique_ptr.248"* %243 to i64*
  %246 = load i64, i64* %245, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %244, align 8
  %247 = bitcast %"class.std::__1::unique_ptr.248"* %242 to i64*
  store i64 %246, i64* %247, align 8
  %248 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %248, i64 -1
  store %"class.std::__1::unique_ptr.248"* %249, %"class.std::__1::unique_ptr.248"** %154, align 8
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %248, i64 -2
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %233, i64 -3
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = bitcast %"class.std::__1::unique_ptr.248"* %251 to i64*
  %254 = load i64, i64* %253, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %252, align 8
  %255 = bitcast %"class.std::__1::unique_ptr.248"* %250 to i64*
  store i64 %254, i64* %255, align 8
  %256 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %256, i64 -1
  store %"class.std::__1::unique_ptr.248"* %257, %"class.std::__1::unique_ptr.248"** %154, align 8
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %256, i64 -2
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %233, i64 -4
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %259, i64 0, i32 0, i32 0, i32 0
  %261 = bitcast %"class.std::__1::unique_ptr.248"* %259 to i64*
  %262 = load i64, i64* %261, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %260, align 8
  %263 = bitcast %"class.std::__1::unique_ptr.248"* %258 to i64*
  store i64 %262, i64* %263, align 8
  %264 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %154, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %264, i64 -1
  store %"class.std::__1::unique_ptr.248"* %265, %"class.std::__1::unique_ptr.248"** %154, align 8
  %266 = icmp eq %"class.std::__1::unique_ptr.248"* %259, %201
  br i1 %266, label %267, label %231

267:                                              ; preds = %226, %231, %194
  %268 = phi %"class.std::__1::unique_ptr.248"* [ %200, %194 ], [ %227, %226 ], [ %265, %231 ]
  %269 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %7, align 8
  %270 = icmp eq %"class.std::__1::unique_ptr.248"* %269, %1
  br i1 %270, label %271, label %277

271:                                              ; preds = %267
  %272 = ptrtoint %"class.std::__1::unique_ptr.248"* %269 to i64
  %273 = ptrtoint %"class.std::__1::unique_ptr.248"* %268 to i64
  %274 = bitcast %"class.std::__1::unique_ptr.248"** %154 to i64*
  %275 = bitcast %"class.std::__1::unique_ptr.248"** %155 to i64*
  %276 = load i64, i64* %275, align 8
  br label %346

277:                                              ; preds = %267
  %278 = bitcast %"class.std::__1::unique_ptr.248"** %155 to i64**
  %279 = load i64*, i64** %278, align 8
  %280 = getelementptr %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %269, i64 -1, i32 0, i32 0, i32 0
  %281 = ptrtoint %"class.views::AXVirtualView"** %280 to i64
  %282 = sub i64 %281, %4
  %283 = lshr i64 %282, 3
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %302, label %287

287:                                              ; preds = %277, %287
  %288 = phi i64* [ %297, %287 ], [ %279, %277 ]
  %289 = phi %"class.std::__1::unique_ptr.248"* [ %294, %287 ], [ %1, %277 ]
  %290 = phi i64 [ %298, %287 ], [ %285, %277 ]
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %289, i64 0, i32 0, i32 0, i32 0
  %292 = bitcast %"class.std::__1::unique_ptr.248"* %289 to i64*
  %293 = load i64, i64* %292, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %291, align 8
  store i64 %293, i64* %288, align 8
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %289, i64 1
  %295 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %295, i64 1
  store %"class.std::__1::unique_ptr.248"* %296, %"class.std::__1::unique_ptr.248"** %155, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.248"* %296 to i64*
  %298 = add i64 %290, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %287, !llvm.loop !9

300:                                              ; preds = %287
  %301 = bitcast %"class.std::__1::unique_ptr.248"* %296 to i64*
  br label %302

302:                                              ; preds = %277, %300
  %303 = phi %"class.std::__1::unique_ptr.248"* [ undef, %277 ], [ %296, %300 ]
  %304 = phi i64* [ %279, %277 ], [ %301, %300 ]
  %305 = phi %"class.std::__1::unique_ptr.248"* [ %1, %277 ], [ %294, %300 ]
  %306 = icmp ult i64 %282, 24
  br i1 %306, label %339, label %307

307:                                              ; preds = %302, %307
  %308 = phi i64* [ %338, %307 ], [ %304, %302 ]
  %309 = phi %"class.std::__1::unique_ptr.248"* [ %334, %307 ], [ %305, %302 ]
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = bitcast %"class.std::__1::unique_ptr.248"* %309 to i64*
  %312 = load i64, i64* %311, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %310, align 8
  store i64 %312, i64* %308, align 8
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %309, i64 1
  %314 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %314, i64 1
  store %"class.std::__1::unique_ptr.248"* %315, %"class.std::__1::unique_ptr.248"** %155, align 8
  %316 = bitcast %"class.std::__1::unique_ptr.248"* %315 to i64*
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %313, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr.248"* %313 to i64*
  %319 = load i64, i64* %318, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %317, align 8
  store i64 %319, i64* %316, align 8
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %309, i64 2
  %321 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %321, i64 1
  store %"class.std::__1::unique_ptr.248"* %322, %"class.std::__1::unique_ptr.248"** %155, align 8
  %323 = bitcast %"class.std::__1::unique_ptr.248"* %322 to i64*
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %320, i64 0, i32 0, i32 0, i32 0
  %325 = bitcast %"class.std::__1::unique_ptr.248"* %320 to i64*
  %326 = load i64, i64* %325, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %324, align 8
  store i64 %326, i64* %323, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %309, i64 3
  %328 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %328, i64 1
  store %"class.std::__1::unique_ptr.248"* %329, %"class.std::__1::unique_ptr.248"** %155, align 8
  %330 = bitcast %"class.std::__1::unique_ptr.248"* %329 to i64*
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %327, i64 0, i32 0, i32 0, i32 0
  %332 = bitcast %"class.std::__1::unique_ptr.248"* %327 to i64*
  %333 = load i64, i64* %332, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %331, align 8
  store i64 %333, i64* %330, align 8
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %309, i64 4
  %335 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %335, i64 1
  store %"class.std::__1::unique_ptr.248"* %336, %"class.std::__1::unique_ptr.248"** %155, align 8
  %337 = icmp eq %"class.std::__1::unique_ptr.248"* %334, %269
  %338 = bitcast %"class.std::__1::unique_ptr.248"* %336 to i64*
  br i1 %337, label %339, label %307

339:                                              ; preds = %307, %302
  %340 = phi %"class.std::__1::unique_ptr.248"* [ %303, %302 ], [ %336, %307 ]
  %341 = ptrtoint %"class.std::__1::unique_ptr.248"* %340 to i64
  %342 = bitcast %"class.std::__1::unique_ptr.248"** %154 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = load i64, i64* %158, align 8
  %345 = bitcast %"class.std::__1::unique_ptr.248"** %155 to i64*
  br label %346

346:                                              ; preds = %271, %339
  %347 = phi i64* [ %275, %271 ], [ %345, %339 ]
  %348 = phi i64 [ %276, %271 ], [ %341, %339 ]
  %349 = phi i64 [ %272, %271 ], [ %344, %339 ]
  %350 = phi i64* [ %274, %271 ], [ %342, %339 ]
  %351 = phi i64 [ %273, %271 ], [ %343, %339 ]
  %352 = load i64, i64* %159, align 8
  store i64 %351, i64* %159, align 8
  store i64 %352, i64* %350, align 8
  store i64 %348, i64* %158, align 8
  store i64 %349, i64* %347, align 8
  %353 = load i64, i64* %169, align 8
  %354 = bitcast %"class.std::__1::unique_ptr.248"** %156 to i64*
  %355 = load i64, i64* %354, align 8
  store i64 %355, i64* %169, align 8
  store i64 %353, i64* %354, align 8
  %356 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %352, i64* %356, align 8
  %357 = inttoptr i64 %352 to %"class.std::__1::unique_ptr.248"*
  %358 = inttoptr i64 %349 to %"class.std::__1::unique_ptr.248"*
  %359 = icmp eq %"class.std::__1::unique_ptr.248"* %358, %357
  br i1 %359, label %376, label %360

360:                                              ; preds = %346, %371
  %361 = phi %"class.std::__1::unique_ptr.248"* [ %372, %371 ], [ %358, %346 ]
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %361, i64 -1
  store %"class.std::__1::unique_ptr.248"* %362, %"class.std::__1::unique_ptr.248"** %155, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %363, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %363, align 8
  %365 = icmp eq %"class.views::AXVirtualView"* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %360
  %367 = bitcast %"class.views::AXVirtualView"* %364 to void (%"class.views::AXVirtualView"*)***
  %368 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %367, align 8
  %369 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %368, i64 1
  %370 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %369, align 8
  call void %370(%"class.views::AXVirtualView"* nonnull %364) #14
  br label %371

371:                                              ; preds = %366, %360
  %372 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %155, align 8
  %373 = icmp eq %"class.std::__1::unique_ptr.248"* %372, %357
  br i1 %373, label %374, label %360

374:                                              ; preds = %371
  %375 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %153, align 8
  br label %376

376:                                              ; preds = %374, %346
  %377 = phi %"class.std::__1::unique_ptr.248"* [ %375, %374 ], [ %357, %346 ]
  %378 = icmp eq %"class.std::__1::unique_ptr.248"* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = bitcast %"class.std::__1::unique_ptr.248"* %377 to i8*
  call void @_ZdlPv(i8* %380) #15
  br label %381

381:                                              ; preds = %376, %379
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #14
  br label %382

382:                                              ; preds = %145, %137, %16, %381
  %383 = phi %"class.std::__1::unique_ptr.248"* [ %1, %16 ], [ %200, %381 ], [ %1, %137 ], [ %1, %145 ]
  ret %"class.std::__1::unique_ptr.248"* %383
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.views::View"* @_ZNK5views13AXVirtualView12GetOwnerViewEv(%"class.views::AXVirtualView"* nocapture readonly) local_unnamed_addr #7 align 2 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.views::AXVirtualView"* [ %0, %1 ], [ %12, %10 ]
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 2
  %5 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %4, align 8
  %6 = icmp eq %"class.views::ViewAccessibility"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %5, i64 0, i32 2
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 3
  %12 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %13 = icmp eq %"class.views::AXVirtualView"* %12, null
  br i1 %13, label %14, label %2

14:                                               ; preds = %10, %7
  %15 = phi %"class.views::View"* [ %9, %7 ], [ null, %10 ]
  ret %"class.views::View"* %15
}

declare void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView16ReorderChildViewEPS0_i(%"class.views::AXVirtualView"*, %"class.views::AXVirtualView"* readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.248", align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.248"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.246"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %13, %2
  %15 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.248"*
  %16 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.248"*
  br i1 %14, label %17, label %125

17:                                               ; preds = %3
  %18 = icmp slt i32 %2, 0
  %19 = add nsw i32 %13, -1
  %20 = select i1 %18, i32 %19, i32 %2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %15, i64 %21, i32 0, i32 0, i32 0
  %24 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %23, align 8
  %25 = icmp eq %"class.views::AXVirtualView"* %24, %1
  br i1 %25, label %125, label %26

26:                                               ; preds = %17
  %27 = icmp eq %"class.std::__1::unique_ptr.248"* %15, %16
  br i1 %27, label %36, label %28

28:                                               ; preds = %26, %33
  %29 = phi %"class.std::__1::unique_ptr.248"* [ %34, %33 ], [ %15, %26 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %30, align 8
  %32 = icmp eq %"class.views::AXVirtualView"* %31, %1
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %29, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr.248"* %34, %16
  br i1 %35, label %125, label %28

36:                                               ; preds = %28, %26
  %37 = phi %"class.std::__1::unique_ptr.248"* [ %15, %26 ], [ %29, %28 ]
  %38 = icmp eq %"class.std::__1::unique_ptr.248"* %37, %16
  br i1 %38, label %125, label %39

39:                                               ; preds = %36
  %40 = ptrtoint %"class.std::__1::unique_ptr.248"* %37 to i64
  %41 = sub i64 %40, %10
  %42 = lshr exact i64 %41, 3
  %43 = trunc i64 %42 to i32
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %125, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::unique_ptr.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #14
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.views::AXVirtualView"* inttoptr (i64 -6148914691236517206 to %"class.views::AXVirtualView"*), %"class.views::AXVirtualView"** %47, align 8
  %48 = shl i64 %41, 29
  %49 = ashr exact i64 %48, 32
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %15, i64 %49
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::unique_ptr.248"* %50 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %51, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.248"* %4 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %22, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %55, i64 %49
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %56, i64 1
  %58 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %6, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.248"* %57, %58
  br i1 %59, label %82, label %60

60:                                               ; preds = %45, %75
  %61 = phi %"class.std::__1::unique_ptr.248"* [ %77, %75 ], [ %56, %45 ]
  %62 = phi %"class.std::__1::unique_ptr.248"* [ %76, %75 ], [ %57, %45 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.248"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %63, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.248"* %61 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq %"class.views::AXVirtualView"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %60
  %71 = bitcast %"class.views::AXVirtualView"* %67 to void (%"class.views::AXVirtualView"*)***
  %72 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %72, i64 1
  %74 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %73, align 8
  tail call void %74(%"class.views::AXVirtualView"* nonnull %67) #14
  br label %75

75:                                               ; preds = %70, %60
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %62, i64 1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %61, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr.248"* %76, %58
  br i1 %78, label %79, label %60

79:                                               ; preds = %75
  %80 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %6, align 8
  %81 = icmp eq %"class.std::__1::unique_ptr.248"* %80, %77
  br i1 %81, label %98, label %82

82:                                               ; preds = %79, %45
  %83 = phi %"class.std::__1::unique_ptr.248"* [ %77, %79 ], [ %56, %45 ]
  %84 = phi %"class.std::__1::unique_ptr.248"* [ %80, %79 ], [ %57, %45 ]
  br label %85

85:                                               ; preds = %96, %82
  %86 = phi %"class.std::__1::unique_ptr.248"* [ %87, %96 ], [ %84, %82 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %88, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %88, align 8
  %90 = icmp eq %"class.views::AXVirtualView"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.views::AXVirtualView"* %89 to void (%"class.views::AXVirtualView"*)***
  %93 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %93, i64 1
  %95 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %94, align 8
  tail call void %95(%"class.views::AXVirtualView"* nonnull %89) #14
  br label %96

96:                                               ; preds = %91, %85
  %97 = icmp eq %"class.std::__1::unique_ptr.248"* %87, %83
  br i1 %97, label %98, label %85

98:                                               ; preds = %96, %79
  %99 = phi %"class.std::__1::unique_ptr.248"* [ %77, %79 ], [ %83, %96 ]
  store %"class.std::__1::unique_ptr.248"* %99, %"class.std::__1::unique_ptr.248"** %6, align 8
  %100 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %22, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %100, i64 %21
  %102 = call %"class.std::__1::unique_ptr.248"* @_ZNSt3__16vectorINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector.246"* %5, %"class.std::__1::unique_ptr.248"* %101, %"class.std::__1::unique_ptr.248"* nonnull dereferenceable(8) %4)
  br label %103

103:                                              ; preds = %111, %98
  %104 = phi %"class.views::AXVirtualView"* [ %0, %98 ], [ %113, %111 ]
  %105 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %104, i64 0, i32 2
  %106 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %105, align 8
  %107 = icmp eq %"class.views::ViewAccessibility"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %106, i64 0, i32 2
  %110 = load %"class.views::View"*, %"class.views::View"** %109, align 8
  br label %115

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %104, i64 0, i32 3
  %113 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %112, align 8
  %114 = icmp eq %"class.views::AXVirtualView"* %113, null
  br i1 %114, label %115, label %103

115:                                              ; preds = %111, %108
  %116 = phi %"class.views::View"* [ %110, %108 ], [ null, %111 ]
  call void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"* %116, i32 7, i1 zeroext true) #14
  %117 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %47, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %47, align 8
  %118 = icmp eq %"class.views::AXVirtualView"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.views::AXVirtualView"* %117 to void (%"class.views::AXVirtualView"*)***
  %121 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %121, i64 1
  %123 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %122, align 8
  call void %123(%"class.views::AXVirtualView"* nonnull %117) #14
  br label %124

124:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #14
  br label %125

125:                                              ; preds = %33, %36, %124, %39, %3, %17
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views13AXVirtualView10GetIndexOfEPKS0_(%"class.views::AXVirtualView"* nocapture readonly, %"class.views::AXVirtualView"* readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.248"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.std::__1::unique_ptr.248"* [ %14, %13 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %10, align 8
  %12 = icmp eq %"class.views::AXVirtualView"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %9, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.248"* %14, %6
  br i1 %15, label %25, label %8

16:                                               ; preds = %8, %2
  %17 = phi %"class.std::__1::unique_ptr.248"* [ %4, %2 ], [ %9, %8 ]
  %18 = icmp eq %"class.std::__1::unique_ptr.248"* %17, %6
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = ptrtoint %"class.std::__1::unique_ptr.248"* %17 to i64
  %21 = ptrtoint %"class.std::__1::unique_ptr.248"* %4 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  br label %25

25:                                               ; preds = %13, %16, %19
  %26 = phi i32 [ %24, %19 ], [ -1, %16 ], [ -1, %13 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView20RemoveFromParentViewEv(%"class.views::AXVirtualView"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 2
  %3 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %2, align 8
  %4 = icmp eq %"class.views::ViewAccessibility"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.views::AXVirtualView"* @_ZN5views17ViewAccessibility22RemoveVirtualChildViewEPNS_13AXVirtualViewE(%"class.views::ViewAccessibility"* nonnull %3, %"class.views::AXVirtualView"* %0) #14
  %7 = ptrtoint %"class.views::AXVirtualView"* %6 to i64
  br label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 3
  %10 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %9, align 8
  %11 = icmp eq %"class.views::AXVirtualView"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = tail call %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView15RemoveChildViewEPS0_(%"class.views::AXVirtualView"* nonnull %10, %"class.views::AXVirtualView"* %0)
  %14 = ptrtoint %"class.views::AXVirtualView"* %13 to i64
  br label %15

15:                                               ; preds = %8, %12, %5
  %16 = phi i64 [ %14, %12 ], [ %7, %5 ], [ 0, %8 ]
  %17 = inttoptr i64 %16 to %"class.views::AXVirtualView"*
  ret %"class.views::AXVirtualView"* %17
}

declare %"class.views::AXVirtualView"* @_ZN5views17ViewAccessibility22RemoveVirtualChildViewEPNS_13AXVirtualViewE(%"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView15RemoveChildViewEPS0_(%"class.views::AXVirtualView"*, %"class.views::AXVirtualView"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.248"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.std::__1::unique_ptr.248"* [ %14, %13 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %10, align 8
  %12 = icmp eq %"class.views::AXVirtualView"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %9, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.248"* %14, %6
  br i1 %15, label %165, label %8

16:                                               ; preds = %8, %2
  %17 = phi %"class.std::__1::unique_ptr.248"* [ %4, %2 ], [ %9, %8 ]
  %18 = icmp eq %"class.std::__1::unique_ptr.248"* %17, %6
  br i1 %18, label %165, label %19

19:                                               ; preds = %16
  %20 = ptrtoint %"class.std::__1::unique_ptr.248"* %17 to i64
  %21 = ptrtoint %"class.std::__1::unique_ptr.248"* %4 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %165, label %26

26:                                               ; preds = %19, %31
  %27 = phi %"class.views::AXVirtualView"* [ %33, %31 ], [ %0, %19 ]
  %28 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %27, i64 0, i32 2
  %29 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %28, align 8
  %30 = icmp eq %"class.views::ViewAccessibility"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %27, i64 0, i32 3
  %33 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %32, align 8
  %34 = icmp eq %"class.views::AXVirtualView"* %33, null
  br i1 %34, label %64, label %26

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %29, i64 0, i32 2
  %37 = load %"class.views::View"*, %"class.views::View"** %36, align 8
  %38 = icmp eq %"class.views::View"* %37, null
  br i1 %38, label %64, label %39

39:                                               ; preds = %35, %47
  %40 = phi %"class.views::AXVirtualView"* [ %49, %47 ], [ %0, %35 ]
  %41 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %40, i64 0, i32 2
  %42 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %41, align 8
  %43 = icmp eq %"class.views::ViewAccessibility"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %42, i64 0, i32 2
  %46 = load %"class.views::View"*, %"class.views::View"** %45, align 8
  br label %51

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %40, i64 0, i32 3
  %49 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %48, align 8
  %50 = icmp eq %"class.views::AXVirtualView"* %49, null
  br i1 %50, label %51, label %39

51:                                               ; preds = %47, %44
  %52 = phi %"class.views::View"* [ %46, %44 ], [ null, %47 ]
  %53 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %52) #14
  %54 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %53, i64 0, i32 4
  %55 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %54, align 8
  %56 = icmp eq %"class.views::AXVirtualView"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %51, %60
  %58 = phi %"class.views::AXVirtualView"* [ %62, %60 ], [ %55, %51 ]
  %59 = icmp eq %"class.views::AXVirtualView"* %58, %0
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %58, i64 0, i32 3
  %62 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %61, align 8
  %63 = icmp eq %"class.views::AXVirtualView"* %62, null
  br i1 %63, label %64, label %57

64:                                               ; preds = %31, %60, %57, %51, %35
  %65 = phi i1 [ false, %35 ], [ false, %51 ], [ true, %57 ], [ false, %60 ], [ false, %31 ]
  %66 = shl i64 %22, 29
  %67 = ashr exact i64 %66, 32
  %68 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %68, i64 %67
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr.248"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %70, align 8
  %73 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %73, i64 %67
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %74, i64 1
  %76 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %77 = icmp eq %"class.std::__1::unique_ptr.248"* %75, %76
  br i1 %77, label %100, label %78

78:                                               ; preds = %64, %93
  %79 = phi %"class.std::__1::unique_ptr.248"* [ %95, %93 ], [ %74, %64 ]
  %80 = phi %"class.std::__1::unique_ptr.248"* [ %94, %93 ], [ %75, %64 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.248"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %81, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %79, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.248"* %79 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %"class.views::AXVirtualView"* %85, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %78
  %89 = bitcast %"class.views::AXVirtualView"* %85 to void (%"class.views::AXVirtualView"*)***
  %90 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %90, i64 1
  %92 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %91, align 8
  tail call void %92(%"class.views::AXVirtualView"* nonnull %85) #14
  br label %93

93:                                               ; preds = %88, %78
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %80, i64 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %79, i64 1
  %96 = icmp eq %"class.std::__1::unique_ptr.248"* %94, %76
  br i1 %96, label %97, label %78

97:                                               ; preds = %93
  %98 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %99 = icmp eq %"class.std::__1::unique_ptr.248"* %98, %95
  br i1 %99, label %116, label %100

100:                                              ; preds = %97, %64
  %101 = phi %"class.std::__1::unique_ptr.248"* [ %95, %97 ], [ %74, %64 ]
  %102 = phi %"class.std::__1::unique_ptr.248"* [ %98, %97 ], [ %75, %64 ]
  br label %103

103:                                              ; preds = %114, %100
  %104 = phi %"class.std::__1::unique_ptr.248"* [ %105, %114 ], [ %102, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 -1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %106, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %106, align 8
  %108 = icmp eq %"class.views::AXVirtualView"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %103
  %110 = bitcast %"class.views::AXVirtualView"* %107 to void (%"class.views::AXVirtualView"*)***
  %111 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %111, i64 1
  %113 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %112, align 8
  tail call void %113(%"class.views::AXVirtualView"* nonnull %107) #14
  br label %114

114:                                              ; preds = %109, %103
  %115 = icmp eq %"class.std::__1::unique_ptr.248"* %105, %101
  br i1 %115, label %116, label %103

116:                                              ; preds = %114, %97
  %117 = phi %"class.std::__1::unique_ptr.248"* [ %95, %97 ], [ %101, %114 ]
  store %"class.std::__1::unique_ptr.248"* %117, %"class.std::__1::unique_ptr.248"** %5, align 8
  %118 = inttoptr i64 %72 to %"class.views::AXVirtualView"*
  %119 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %118, i64 0, i32 3
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %119, align 8
  %120 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %118, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %120) #14
  br label %121

121:                                              ; preds = %126, %116
  %122 = phi %"class.views::AXVirtualView"* [ %0, %116 ], [ %128, %126 ]
  %123 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %122, i64 0, i32 2
  %124 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %123, align 8
  %125 = icmp eq %"class.views::ViewAccessibility"* %124, null
  br i1 %125, label %126, label %130

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %122, i64 0, i32 3
  %128 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %127, align 8
  %129 = icmp eq %"class.views::AXVirtualView"* %128, null
  br i1 %129, label %165, label %121

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %124, i64 0, i32 2
  %132 = load %"class.views::View"*, %"class.views::View"** %131, align 8
  %133 = icmp eq %"class.views::View"* %132, null
  br i1 %133, label %165, label %134

134:                                              ; preds = %130
  br i1 %65, label %135, label %150

135:                                              ; preds = %134, %143
  %136 = phi %"class.views::AXVirtualView"* [ %145, %143 ], [ %0, %134 ]
  %137 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %136, i64 0, i32 2
  %138 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %137, align 8
  %139 = icmp eq %"class.views::ViewAccessibility"* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %138, i64 0, i32 2
  %142 = load %"class.views::View"*, %"class.views::View"** %141, align 8
  br label %147

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %136, i64 0, i32 3
  %145 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %144, align 8
  %146 = icmp eq %"class.views::AXVirtualView"* %145, null
  br i1 %146, label %147, label %135

147:                                              ; preds = %143, %140
  %148 = phi %"class.views::View"* [ %142, %140 ], [ null, %143 ]
  %149 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %148) #14
  tail call void @_ZN5views17ViewAccessibility13OverrideFocusEPNS_13AXVirtualViewE(%"class.views::ViewAccessibility"* %149, %"class.views::AXVirtualView"* null) #14
  br label %150

150:                                              ; preds = %147, %134
  br label %151

151:                                              ; preds = %150, %159
  %152 = phi %"class.views::AXVirtualView"* [ %161, %159 ], [ %0, %150 ]
  %153 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %152, i64 0, i32 2
  %154 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %153, align 8
  %155 = icmp eq %"class.views::ViewAccessibility"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %154, i64 0, i32 2
  %158 = load %"class.views::View"*, %"class.views::View"** %157, align 8
  br label %163

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %152, i64 0, i32 3
  %161 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %160, align 8
  %162 = icmp eq %"class.views::AXVirtualView"* %161, null
  br i1 %162, label %163, label %151

163:                                              ; preds = %159, %156
  %164 = phi %"class.views::View"* [ %158, %156 ], [ null, %159 ]
  tail call void @_ZN5views4View24NotifyAccessibilityEventEN2ax5mojom5EventEb(%"class.views::View"* %164, i32 7, i1 zeroext true) #14
  br label %165

165:                                              ; preds = %13, %126, %16, %130, %163, %19
  %166 = phi i64 [ 0, %19 ], [ %72, %163 ], [ %72, %130 ], [ 0, %16 ], [ %72, %126 ], [ 0, %13 ]
  %167 = inttoptr i64 %166 to %"class.views::AXVirtualView"*
  ret %"class.views::AXVirtualView"* %167
}

declare dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views13AXVirtualView8ContainsEPKS0_(%"class.views::AXVirtualView"* readnone, %"class.views::AXVirtualView"* readonly) local_unnamed_addr #8 align 2 {
  %3 = icmp eq %"class.views::AXVirtualView"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %7
  %5 = phi %"class.views::AXVirtualView"* [ %9, %7 ], [ %1, %2 ]
  %6 = icmp eq %"class.views::AXVirtualView"* %5, %0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %5, i64 0, i32 3
  %9 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %8, align 8
  %10 = icmp eq %"class.views::AXVirtualView"* %9, null
  br i1 %10, label %11, label %4

11:                                               ; preds = %4, %7, %2
  %12 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %4 ]
  ret i1 %12
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #3

declare void @_ZN5views17ViewAccessibility13OverrideFocusEPNS_13AXVirtualViewE(%"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView19RemoveAllChildViewsEv(%"class.views::AXVirtualView"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %2, align 8
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.248"* %3, %5
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::unique_ptr.248"* [ %20, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %8, i64 -1, i32 0, i32 0, i32 0
  %10 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %9, align 8
  %11 = tail call %"class.views::AXVirtualView"* @_ZN5views13AXVirtualView15RemoveChildViewEPS0_(%"class.views::AXVirtualView"* %0, %"class.views::AXVirtualView"* %10)
  %12 = icmp eq %"class.views::AXVirtualView"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.views::AXVirtualView"* %11 to void (%"class.views::AXVirtualView"*)***
  %15 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %15, i64 1
  %17 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %16, align 8
  tail call void %17(%"class.views::AXVirtualView"* nonnull %11) #14
  br label %18

18:                                               ; preds = %7, %13
  %19 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %2, align 8
  %20 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %4, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.248"* %19, %20
  br i1 %21, label %22, label %7

22:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views13AXVirtualView15GetNativeObjectEv(%"class.views::AXVirtualView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %2, align 8
  %4 = bitcast %"class.ui::AXPlatformNode"* %3 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %4, align 8
  %6 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %5, i64 1
  %7 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %6, align 8
  %8 = tail call %struct._AtkObject* %7(%"class.ui::AXPlatformNode"* %3) #14
  ret %struct._AtkObject* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView24NotifyAccessibilityEventEN2ax5mojom5EventE(%"class.views::AXVirtualView"*, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %8, %2
  %4 = phi %"class.views::AXVirtualView"* [ %0, %2 ], [ %10, %8 ]
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 2
  %6 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %5, align 8
  %7 = icmp eq %"class.views::ViewAccessibility"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 3
  %10 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %9, align 8
  %11 = icmp eq %"class.views::AXVirtualView"* %10, null
  br i1 %11, label %40, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %6, i64 0, i32 2
  %14 = load %"class.views::View"*, %"class.views::View"** %13, align 8
  %15 = icmp eq %"class.views::View"* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %12, %24
  %17 = phi %"class.views::AXVirtualView"* [ %26, %24 ], [ %0, %12 ]
  %18 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %17, i64 0, i32 2
  %19 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %18, align 8
  %20 = icmp eq %"class.views::ViewAccessibility"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %19, i64 0, i32 2
  %23 = load %"class.views::View"*, %"class.views::View"** %22, align 8
  br label %28

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %17, i64 0, i32 3
  %26 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %25, align 8
  %27 = icmp eq %"class.views::AXVirtualView"* %26, null
  br i1 %27, label %28, label %16

28:                                               ; preds = %24, %21
  %29 = phi %"class.views::View"* [ %23, %21 ], [ null, %24 ]
  %30 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %29) #14
  %31 = tail call dereferenceable(8) %"class.base::RepeatingCallback"* @_ZNK5views17ViewAccessibility29accessibility_events_callbackEv(%"class.views::ViewAccessibility"* %30) #14
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %32, align 8
  %34 = icmp eq %"class.base::internal::BindStateBase"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)**
  %39 = load void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)*, void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)** %38, align 8
  tail call void %39(%"class.base::internal::BindStateBase"* nonnull %33, %"class.ui::AXPlatformNodeDelegate"* %36, i32 %1) #14
  br label %40

40:                                               ; preds = %8, %28, %35, %12
  %41 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  %42 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %41, align 8
  %43 = bitcast %"class.ui::AXPlatformNode"* %42 to void (%"class.ui::AXPlatformNode"*, i32)***
  %44 = load void (%"class.ui::AXPlatformNode"*, i32)**, void (%"class.ui::AXPlatformNode"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %44, i64 2
  %46 = load void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %45, align 8
  tail call void %46(%"class.ui::AXPlatformNode"* %42, i32 %1) #14
  %47 = tail call %"class.views::AXEventManager"* @_ZN5views14AXEventManager3GetEv() #14
  tail call void @_ZN5views14AXEventManager22NotifyVirtualViewEventEPNS_13AXVirtualViewEN2ax5mojom5EventE(%"class.views::AXEventManager"* %47, %"class.views::AXVirtualView"* %0, i32 %1) #14
  ret void
}

declare dereferenceable(8) %"class.base::RepeatingCallback"* @_ZNK5views17ViewAccessibility29accessibility_events_callbackEv(%"class.views::ViewAccessibility"*) local_unnamed_addr #3

declare %"class.views::AXEventManager"* @_ZN5views14AXEventManager3GetEv() local_unnamed_addr #3

declare void @_ZN5views14AXEventManager22NotifyVirtualViewEventEPNS_13AXVirtualViewEN2ax5mojom5EventE(%"class.views::AXEventManager"*, %"class.views::AXVirtualView"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN5views13AXVirtualView13GetCustomDataEv(%"class.views::AXVirtualView"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 7
  ret %"struct.ui::AXNodeData"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView23SetPopulateDataCallbackEN4base17RepeatingCallbackIFvPN2ui10AXNodeDataEEEE(%"class.views::AXVirtualView"*, %"class.base::RepeatingCallback.410"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.410", %"class.base::RepeatingCallback.410"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views13AXVirtualView25UnsetPopulateDataCallbackEv(%"class.views::AXVirtualView"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(264) %"struct.ui::AXNodeData"* @_ZNK5views13AXVirtualView7GetDataEv(%"class.views::AXVirtualView"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5views13AXVirtualView7GetDataEvE9node_data to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5views13AXVirtualView7GetDataEvE9node_data) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data) #14
  %9 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.ui::AXNodeData"*)* @_ZN2ui10AXNodeDataD1Ev to void (i8*)*), i8* bitcast (%"struct.ui::AXNodeData"* @_ZZNK5views13AXVirtualView7GetDataEvE9node_data to i8*), i8* nonnull @__dso_handle) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5views13AXVirtualView7GetDataEvE9node_data) #14
  br label %10

10:                                               ; preds = %5, %8, %1
  %11 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 7
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %2, %"struct.ui::AXNodeData"* dereferenceable(264) %11) #14
  %12 = call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, %"struct.ui::AXNodeData"* nonnull %2) #14
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #14
  %13 = bitcast %"class.views::AXVirtualView"* %0 to %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)***
  %14 = load %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)**, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)** %14, i64 53
  %16 = load %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)*, %"class.ui::AXUniqueId"* (%"class.views::AXVirtualView"*)** %15, align 8
  %17 = call dereferenceable(16) %"class.ui::AXUniqueId"* %16(%"class.views::AXVirtualView"* %0) #14
  %18 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* getelementptr inbounds (%"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i64 0, i32 1), align 8
  br label %20

20:                                               ; preds = %25, %10
  %21 = phi %"class.views::AXVirtualView"* [ %0, %10 ], [ %27, %25 ]
  %22 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %21, i64 0, i32 2
  %23 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %22, align 8
  %24 = icmp eq %"class.views::ViewAccessibility"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %21, i64 0, i32 3
  %27 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %26, align 8
  %28 = icmp eq %"class.views::AXVirtualView"* %27, null
  br i1 %28, label %48, label %20

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %23, i64 0, i32 2
  %31 = load %"class.views::View"*, %"class.views::View"** %30, align 8
  %32 = icmp eq %"class.views::View"* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %29, %41
  %34 = phi %"class.views::AXVirtualView"* [ %43, %41 ], [ %0, %29 ]
  %35 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %34, i64 0, i32 2
  %36 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %35, align 8
  %37 = icmp eq %"class.views::ViewAccessibility"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %36, i64 0, i32 2
  %40 = load %"class.views::View"*, %"class.views::View"** %39, align 8
  br label %45

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %34, i64 0, i32 3
  %43 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %42, align 8
  %44 = icmp eq %"class.views::AXVirtualView"* %43, null
  br i1 %44, label %45, label %33

45:                                               ; preds = %41, %38
  %46 = phi %"class.views::View"* [ %40, %38 ], [ null, %41 ]
  %47 = call zeroext i1 @_ZNK5views4View10GetEnabledEv(%"class.views::View"* %46) #14
  br i1 %47, label %49, label %48

48:                                               ; preds = %25, %29, %45
  call void @_ZN2ui10AXNodeData14SetRestrictionEN2ax5mojom11RestrictionE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 2) #14
  br label %49

49:                                               ; preds = %48, %45
  br label %50

50:                                               ; preds = %49, %55
  %51 = phi %"class.views::AXVirtualView"* [ %57, %55 ], [ %0, %49 ]
  %52 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %51, i64 0, i32 2
  %53 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %52, align 8
  %54 = icmp eq %"class.views::ViewAccessibility"* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %51, i64 0, i32 3
  %57 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %56, align 8
  %58 = icmp eq %"class.views::AXVirtualView"* %57, null
  br i1 %58, label %83, label %50

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %53, i64 0, i32 2
  %61 = load %"class.views::View"*, %"class.views::View"** %60, align 8
  %62 = icmp eq %"class.views::View"* %61, null
  br i1 %62, label %83, label %63

63:                                               ; preds = %59, %72
  %64 = phi %"class.views::AXVirtualView"* [ %74, %72 ], [ %0, %59 ]
  %65 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %64, i64 0, i32 2
  %66 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %65, align 8
  %67 = icmp eq %"class.views::ViewAccessibility"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %66, i64 0, i32 2
  %70 = load %"class.views::View"*, %"class.views::View"** %69, align 8
  %71 = bitcast %"class.views::View"* %70 to i1 (%"class.views::View"*)***
  br label %76

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %64, i64 0, i32 3
  %74 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %73, align 8
  %75 = icmp eq %"class.views::AXVirtualView"* %74, null
  br i1 %75, label %76, label %63

76:                                               ; preds = %72, %68
  %77 = phi i1 (%"class.views::View"*)*** [ %71, %68 ], [ null, %72 ]
  %78 = phi %"class.views::View"* [ %70, %68 ], [ null, %72 ]
  %79 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %77, align 8
  %80 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %79, i64 22
  %81 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %80, align 8
  %82 = call zeroext i1 %81(%"class.views::View"* %78) #14
  br i1 %82, label %84, label %83

83:                                               ; preds = %55, %59, %76
  call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 10) #14
  br label %84

84:                                               ; preds = %83, %76
  br label %85

85:                                               ; preds = %84, %90
  %86 = phi %"class.views::AXVirtualView"* [ %92, %90 ], [ %0, %84 ]
  %87 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %86, i64 0, i32 2
  %88 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %87, align 8
  %89 = icmp eq %"class.views::ViewAccessibility"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %86, i64 0, i32 3
  %92 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %91, align 8
  %93 = icmp eq %"class.views::AXVirtualView"* %92, null
  br i1 %93, label %116, label %85

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %88, i64 0, i32 2
  %96 = load %"class.views::View"*, %"class.views::View"** %95, align 8
  %97 = icmp eq %"class.views::View"* %96, null
  br i1 %97, label %116, label %98

98:                                               ; preds = %94, %106
  %99 = phi %"class.views::AXVirtualView"* [ %108, %106 ], [ %0, %94 ]
  %100 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %99, i64 0, i32 2
  %101 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %100, align 8
  %102 = icmp eq %"class.views::ViewAccessibility"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %101, i64 0, i32 2
  %105 = load %"class.views::View"*, %"class.views::View"** %104, align 8
  br label %110

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %99, i64 0, i32 3
  %108 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %107, align 8
  %109 = icmp eq %"class.views::AXVirtualView"* %108, null
  br i1 %109, label %110, label %98

110:                                              ; preds = %106, %103
  %111 = phi %"class.views::View"* [ %105, %103 ], [ null, %106 ]
  %112 = getelementptr inbounds %"class.views::View", %"class.views::View"* %111, i64 0, i32 52
  %113 = load %"class.views::ContextMenuController"*, %"class.views::ContextMenuController"** %112, align 8
  %114 = icmp eq %"class.views::ContextMenuController"* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  call void @_ZN2ui10AXNodeData9AddActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 31) #14
  br label %116

116:                                              ; preds = %90, %110, %94, %115
  %117 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %117, align 8
  %119 = icmp eq %"class.base::internal::BindStateBase"* %118, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %116, %125
  %121 = phi %"class.views::AXVirtualView"* [ %127, %125 ], [ %0, %116 ]
  %122 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %121, i64 0, i32 2
  %123 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %122, align 8
  %124 = icmp eq %"class.views::ViewAccessibility"* %123, null
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %121, i64 0, i32 3
  %127 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %126, align 8
  %128 = icmp eq %"class.views::AXVirtualView"* %127, null
  br i1 %128, label %137, label %120

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %123, i64 0, i32 2
  %131 = load %"class.views::View"*, %"class.views::View"** %130, align 8
  %132 = icmp eq %"class.views::View"* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %118, i64 0, i32 1
  %135 = bitcast void ()** %134 to void (%"class.base::internal::BindStateBase"*, %"struct.ui::AXNodeData"*)**
  %136 = load void (%"class.base::internal::BindStateBase"*, %"struct.ui::AXNodeData"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.ui::AXNodeData"*)** %135, align 8
  call void %136(%"class.base::internal::BindStateBase"* nonnull %118, %"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data) #14
  br label %137

137:                                              ; preds = %125, %116, %129, %133
  %138 = call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 9) #14
  br i1 %138, label %139, label %142

139:                                              ; preds = %137
  %140 = call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 6) #14
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  call void @_ZN2ui10AXNodeData11RemoveStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* nonnull @_ZZNK5views13AXVirtualView7GetDataEvE9node_data, i32 9) #14
  br label %142

142:                                              ; preds = %141, %139, %137
  ret %"struct.ui::AXNodeData"* @_ZZNK5views13AXVirtualView7GetDataEvE9node_data
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #1

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #3

declare dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5views4View10GetEnabledEv(%"class.views::View"*) local_unnamed_addr #3

declare void @_ZN2ui10AXNodeData14SetRestrictionEN2ax5mojom11RestrictionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

declare void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

declare void @_ZN2ui10AXNodeData9AddActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

declare void @_ZN2ui10AXNodeData11RemoveStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views13AXVirtualView13GetChildCountEv(%"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %2, align 8
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.248"* %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %27, %1
  %8 = phi i32 [ 0, %1 ], [ %29, %27 ]
  ret i32 %8

9:                                                ; preds = %1, %27
  %10 = phi i32 [ %29, %27 ], [ 0, %1 ]
  %11 = phi %"class.std::__1::unique_ptr.248"* [ %30, %27 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %12, align 8
  %14 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %13, i64 0, i32 0
  %15 = bitcast %"class.views::AXVirtualView"* %13 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %16 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %16, i64 21
  %18 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.ui::AXPlatformNodeDelegateBase"* %14) #14
  br i1 %19, label %20, label %27

20:                                               ; preds = %9
  %21 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %12, align 8
  %22 = bitcast %"class.views::AXVirtualView"* %21 to i32 (%"class.views::AXVirtualView"*)***
  %23 = load i32 (%"class.views::AXVirtualView"*)**, i32 (%"class.views::AXVirtualView"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %23, i64 12
  %25 = load i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %24, align 8
  %26 = tail call i32 %25(%"class.views::AXVirtualView"* %21) #14
  br label %27

27:                                               ; preds = %9, %20
  %28 = phi i32 [ %26, %20 ], [ 1, %9 ]
  %29 = add nsw i32 %28, %10
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %11, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.248"* %30, %5
  br i1 %31, label %7, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views13AXVirtualView12ChildAtIndexEi(%"class.views::AXVirtualView"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.248"* %4, %6
  br i1 %7, label %53, label %8

8:                                                ; preds = %2, %49
  %9 = phi i32 [ %50, %49 ], [ %1, %2 ]
  %10 = phi %"class.std::__1::unique_ptr.248"* [ %51, %49 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %13 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %12, i64 0, i32 0
  %14 = bitcast %"class.views::AXVirtualView"* %12 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %15 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %15, i64 21
  %17 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.ui::AXPlatformNodeDelegateBase"* %13) #14
  br i1 %18, label %19, label %36

19:                                               ; preds = %8
  %20 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %21 = bitcast %"class.views::AXVirtualView"* %20 to i32 (%"class.views::AXVirtualView"*)***
  %22 = load i32 (%"class.views::AXVirtualView"*)**, i32 (%"class.views::AXVirtualView"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %22, i64 12
  %24 = load i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %23, align 8
  %25 = tail call i32 %24(%"class.views::AXVirtualView"* %20) #14
  %26 = icmp slt i32 %9, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  %28 = sub nsw i32 %9, %25
  br label %49

29:                                               ; preds = %19
  %30 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %31 = bitcast %"class.views::AXVirtualView"* %30 to %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)***
  %32 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)**, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*** %31, align 8
  %33 = getelementptr inbounds %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)** %32, i64 13
  %34 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)** %33, align 8
  %35 = tail call %struct._AtkObject* %34(%"class.views::AXVirtualView"* %30, i32 %9) #14
  br label %53

36:                                               ; preds = %8
  %37 = icmp eq i32 %9, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %36
  %39 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %40 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %39, i64 0, i32 1
  %41 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %40, align 8
  %42 = bitcast %"class.ui::AXPlatformNode"* %41 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %43 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %42, align 8
  %44 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %43, i64 1
  %45 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %44, align 8
  %46 = tail call %struct._AtkObject* %45(%"class.ui::AXPlatformNode"* %41) #14
  br label %53

47:                                               ; preds = %36
  %48 = add nsw i32 %9, -1
  br label %49

49:                                               ; preds = %27, %47
  %50 = phi i32 [ %28, %27 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %10, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.248"* %51, %6
  br i1 %52, label %53, label %8

53:                                               ; preds = %49, %2, %38, %29
  %54 = phi %struct._AtkObject* [ %46, %38 ], [ %35, %29 ], [ null, %2 ], [ null, %49 ]
  ret %struct._AtkObject* %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN5views13AXVirtualView11GetNSWindowEv(%"class.views::AXVirtualView"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views13AXVirtualView23GetNativeViewAccessibleEv(%"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %2, align 8
  %4 = bitcast %"class.ui::AXPlatformNode"* %3 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %4, align 8
  %6 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %5, i64 1
  %7 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %6, align 8
  %8 = tail call %struct._AtkObject* %7(%"class.ui::AXPlatformNode"* %3) #14
  ret %struct._AtkObject* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views13AXVirtualView9GetParentEv(%"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 2
  %3 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %2, align 8
  %4 = icmp eq %"class.views::ViewAccessibility"* %3, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.views::ViewAccessibility"* %3 to i1 (%"class.views::ViewAccessibility"*)***
  %7 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %7, i64 10
  %9 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.views::ViewAccessibility"* nonnull %3) #14
  br i1 %10, label %18, label %11

11:                                               ; preds = %5
  %12 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %2, align 8
  %13 = bitcast %"class.views::ViewAccessibility"* %12 to %struct._AtkObject* (%"class.views::ViewAccessibility"*)***
  %14 = load %struct._AtkObject* (%"class.views::ViewAccessibility"*)**, %struct._AtkObject* (%"class.views::ViewAccessibility"*)*** %13, align 8
  %15 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAccessibility"*)*, %struct._AtkObject* (%"class.views::ViewAccessibility"*)** %14, i64 12
  %16 = load %struct._AtkObject* (%"class.views::ViewAccessibility"*)*, %struct._AtkObject* (%"class.views::ViewAccessibility"*)** %15, align 8
  %17 = tail call %struct._AtkObject* %16(%"class.views::ViewAccessibility"* %12) #14
  br label %65

18:                                               ; preds = %5, %26
  %19 = phi %"class.views::AXVirtualView"* [ %28, %26 ], [ %0, %5 ]
  %20 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %19, i64 0, i32 2
  %21 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %20, align 8
  %22 = icmp eq %"class.views::ViewAccessibility"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %21, i64 0, i32 2
  %25 = load %"class.views::View"*, %"class.views::View"** %24, align 8
  br label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %19, i64 0, i32 3
  %28 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %27, align 8
  %29 = icmp eq %"class.views::AXVirtualView"* %28, null
  br i1 %29, label %30, label %18

30:                                               ; preds = %26, %23
  %31 = phi %"class.views::View"* [ %25, %23 ], [ null, %26 ]
  %32 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %31) #14
  %33 = bitcast %"class.views::ViewAccessibility"* %32 to %"class.views::ViewAXPlatformNodeDelegate"*
  %34 = bitcast %"class.views::ViewAccessibility"* %32 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %35 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %34, align 8
  %36 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %35, i64 22
  %37 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %36, align 8
  %38 = tail call %struct._AtkObject* %37(%"class.views::ViewAXPlatformNodeDelegate"* %33) #14
  br label %65

39:                                               ; preds = %1
  %40 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 3
  %41 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %40, align 8
  %42 = icmp eq %"class.views::AXVirtualView"* %41, null
  br i1 %42, label %65, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %41, i64 0, i32 0
  %45 = bitcast %"class.views::AXVirtualView"* %41 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %46 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %46, i64 21
  %48 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.ui::AXPlatformNodeDelegateBase"* %44) #14
  %50 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %40, align 8
  br i1 %49, label %51, label %57

51:                                               ; preds = %43
  %52 = bitcast %"class.views::AXVirtualView"* %50 to %struct._AtkObject* (%"class.views::AXVirtualView"*)***
  %53 = load %struct._AtkObject* (%"class.views::AXVirtualView"*)**, %struct._AtkObject* (%"class.views::AXVirtualView"*)*** %52, align 8
  %54 = getelementptr inbounds %struct._AtkObject* (%"class.views::AXVirtualView"*)*, %struct._AtkObject* (%"class.views::AXVirtualView"*)** %53, i64 10
  %55 = load %struct._AtkObject* (%"class.views::AXVirtualView"*)*, %struct._AtkObject* (%"class.views::AXVirtualView"*)** %54, align 8
  %56 = tail call %struct._AtkObject* %55(%"class.views::AXVirtualView"* %50) #14
  br label %65

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %50, i64 0, i32 1
  %59 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %58, align 8
  %60 = bitcast %"class.ui::AXPlatformNode"* %59 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %61 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %60, align 8
  %62 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %61, i64 1
  %63 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %62, align 8
  %64 = tail call %struct._AtkObject* %63(%"class.ui::AXPlatformNode"* %59) #14
  br label %65

65:                                               ; preds = %39, %57, %51, %30, %11
  %66 = phi %struct._AtkObject* [ %38, %30 ], [ %17, %11 ], [ %56, %51 ], [ %64, %57 ], [ null, %39 ]
  ret %struct._AtkObject* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::ViewAXPlatformNodeDelegate"* @_ZNK5views13AXVirtualView11GetDelegateEv(%"class.views::AXVirtualView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.views::AXVirtualView"* [ %0, %1 ], [ %12, %10 ]
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 2
  %5 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %4, align 8
  %6 = icmp eq %"class.views::ViewAccessibility"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %5, i64 0, i32 2
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 3
  %12 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %13 = icmp eq %"class.views::AXVirtualView"* %12, null
  br i1 %13, label %14, label %2

14:                                               ; preds = %10, %7
  %15 = phi %"class.views::View"* [ %9, %7 ], [ null, %10 ]
  %16 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %15) #14
  %17 = bitcast %"class.views::ViewAccessibility"* %16 to %"class.views::ViewAXPlatformNodeDelegate"*
  ret %"class.views::ViewAXPlatformNodeDelegate"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views13AXVirtualView13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE(%"class.views::AXVirtualView"*, i32, i32, i32* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = bitcast { i64, i64 }* %5 to i32*
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %11 = bitcast i64* %10 to i32*
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %13 = bitcast %"class.views::AXVirtualView"* %0 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %14 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %13, align 8
  %15 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %14, i64 2
  %16 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %15, align 8
  %17 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %16(%"class.views::AXVirtualView"* %0) #14
  %18 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %17, i64 0, i32 13, i32 2
  %19 = tail call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %18) #14
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %21 = extractvalue { i64, i64 } %19, 0
  store i64 %21, i64* %20, align 8
  %22 = extractvalue { i64, i64 } %19, 1
  store i64 %22, i64* %10, align 8
  br label %23

23:                                               ; preds = %28, %4
  %24 = phi %"class.views::AXVirtualView"* [ %0, %4 ], [ %30, %28 ]
  %25 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %24, i64 0, i32 2
  %26 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %25, align 8
  %27 = icmp eq %"class.views::ViewAccessibility"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %24, i64 0, i32 3
  %30 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %29, align 8
  %31 = icmp eq %"class.views::AXVirtualView"* %30, null
  br i1 %31, label %44, label %23

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %26, i64 0, i32 2
  %34 = load %"class.views::View"*, %"class.views::View"** %33, align 8
  %35 = icmp eq %"class.views::View"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.views::View"* %34 to %"class.views::Widget"* (%"class.views::View"*)***
  %38 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %38, i64 13
  %40 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %39, align 8
  %41 = tail call %"class.views::Widget"* %40(%"class.views::View"* nonnull %34) #14
  %42 = icmp eq %"class.views::Widget"* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %36
  call void @_ZN5views4View19ConvertRectToScreenEPKS0_PN3gfx4RectE(%"class.views::View"* nonnull %34, %"class.gfx::Rect"* nonnull %6) #14
  br label %44

44:                                               ; preds = %28, %32, %36, %43
  %45 = phi i1 [ true, %36 ], [ true, %43 ], [ false, %32 ], [ false, %28 ]
  %46 = phi %"class.views::View"* [ %34, %36 ], [ %34, %43 ], [ null, %32 ], [ null, %28 ]
  switch i32 %1, label %137 [
    i32 1, label %47
    i32 0, label %50
    i32 2, label %138
    i32 3, label %138
  ]

47:                                               ; preds = %44
  %48 = load i64, i64* %20, align 8
  %49 = load i64, i64* %10, align 8
  br label %138

50:                                               ; preds = %44
  br i1 %45, label %51, label %68

51:                                               ; preds = %50
  %52 = bitcast %"class.views::View"* %46 to %"class.views::Widget"* (%"class.views::View"*)***
  %53 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %53, i64 13
  %55 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %54, align 8
  %56 = call %"class.views::Widget"* %55(%"class.views::View"* nonnull %46) #14
  %57 = icmp eq %"class.views::Widget"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %51
  %59 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %52, align 8
  %60 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %59, i64 13
  %61 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %60, align 8
  %62 = call %"class.views::Widget"* %61(%"class.views::View"* nonnull %46) #14
  %63 = call %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"* %62) #14
  %64 = icmp eq %"class.aura::Window"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = call float @_ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE(%"class.aura::Window"* nonnull %63) #14
  %67 = fcmp oeq float %66, 1.000000e+00
  br i1 %67, label %68, label %74

68:                                               ; preds = %58, %50, %51, %65
  %69 = load i64, i64* %20, align 8
  %70 = trunc i64 %69 to i32
  %71 = lshr i64 %69, 32
  %72 = trunc i64 %71 to i32
  %73 = load i64, i64* %10, align 8
  br label %129

74:                                               ; preds = %65
  %75 = load i32, i32* %8, align 8
  %76 = sitofp i32 %75 to float
  %77 = fmul float %66, %76
  %78 = call float @llvm.floor.f32(float %77) #14
  %79 = fptosi float %78 to i32
  %80 = load i32, i32* %9, align 4
  %81 = sitofp i32 %80 to float
  %82 = fmul float %66, %81
  %83 = call float @llvm.floor.f32(float %82) #14
  %84 = fptosi float %83 to i32
  %85 = load i32, i32* %11, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %74
  %88 = add nsw i32 %85, %75
  %89 = sitofp i32 %88 to float
  %90 = fmul float %66, %89
  %91 = call float @llvm.ceil.f32(float %90) #14
  %92 = fptosi float %91 to i32
  br label %93

93:                                               ; preds = %87, %74
  %94 = phi i32 [ %92, %87 ], [ %79, %74 ]
  %95 = load i32, i32* %12, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = add nsw i32 %95, %80
  %99 = sitofp i32 %98 to float
  %100 = fmul float %66, %99
  %101 = call float @llvm.ceil.f32(float %100) #14
  %102 = fptosi float %101 to i32
  br label %103

103:                                              ; preds = %97, %93
  %104 = phi i32 [ %102, %97 ], [ %84, %93 ]
  %105 = sub nsw i32 %94, %79
  %106 = sub nsw i32 %104, %84
  %107 = icmp sgt i32 %79, 0
  %108 = icmp sgt i32 %105, 0
  %109 = and i1 %107, %108
  %110 = sub nuw nsw i32 2147483647, %79
  %111 = icmp ult i32 %110, %105
  %112 = and i1 %111, %109
  %113 = select i1 %112, i32 %110, i32 %105
  %114 = icmp sgt i32 %84, 0
  %115 = icmp sgt i32 %106, 0
  %116 = and i1 %114, %115
  %117 = sub nuw nsw i32 2147483647, %84
  %118 = icmp ult i32 %117, %106
  %119 = and i1 %118, %116
  %120 = select i1 %119, i32 %117, i32 %106
  %121 = icmp sgt i32 %113, 0
  %122 = select i1 %121, i32 %113, i32 0
  %123 = zext i32 %122 to i64
  %124 = icmp sgt i32 %120, 0
  %125 = select i1 %124, i32 %120, i32 0
  %126 = zext i32 %125 to i64
  %127 = shl nuw nsw i64 %126, 32
  %128 = or i64 %127, %123
  br label %129

129:                                              ; preds = %68, %103
  %130 = phi i32 [ %72, %68 ], [ %84, %103 ]
  %131 = phi i32 [ %70, %68 ], [ %79, %103 ]
  %132 = phi i64 [ %73, %68 ], [ %128, %103 ]
  %133 = zext i32 %130 to i64
  %134 = shl nuw i64 %133, 32
  %135 = zext i32 %131 to i64
  %136 = or i64 %134, %135
  br label %138

137:                                              ; preds = %44
  unreachable

138:                                              ; preds = %44, %44, %129, %47
  %139 = phi i64 [ %136, %129 ], [ %48, %47 ], [ 0, %44 ], [ 0, %44 ]
  %140 = phi i64 [ %132, %129 ], [ %49, %47 ], [ 0, %44 ], [ 0, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  %141 = insertvalue { i64, i64 } undef, i64 %139, 0
  %142 = insertvalue { i64, i64 } %141, i64 %140, 1
  ret { i64, i64 } %142
}

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5views4View19ConvertRectToScreenEPKS0_PN3gfx4RectE(%"class.views::View"*, %"class.gfx::Rect"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"*) local_unnamed_addr #3

declare float @_ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views13AXVirtualView11HitTestSyncEii(%"class.views::AXVirtualView"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = bitcast %"class.views::AXVirtualView"* %0 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %7 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %7, i64 2
  %9 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %8, align 8
  %10 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %9(%"class.views::AXVirtualView"* %0) #14
  %11 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"* %10) #14
  br i1 %11, label %63, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %13, align 8
  %15 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 4, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %15, align 8
  br label %17

17:                                               ; preds = %20, %12
  %18 = phi %"class.std::__1::unique_ptr.248"* [ %14, %12 ], [ %21, %20 ]
  %19 = icmp eq %"class.std::__1::unique_ptr.248"* %18, %16
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %18, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %22, align 8
  %24 = bitcast %"class.views::AXVirtualView"* %23 to %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)***
  %25 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)**, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*** %24, align 8
  %26 = getelementptr inbounds %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)** %25, i64 39
  %27 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)** %26, align 8
  %28 = tail call %struct._AtkObject* %27(%"class.views::AXVirtualView"* %23, i32 %1, i32 %2) #14
  %29 = icmp eq %struct._AtkObject* %28, null
  br i1 %29, label %17, label %63

30:                                               ; preds = %17
  %31 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #14
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %33 = bitcast %"class.views::AXVirtualView"* %0 to { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)***
  %34 = load { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)**, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*** %33, align 8
  %35 = getelementptr inbounds { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)** %34, i64 35
  %36 = load { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)** %35, align 8
  %37 = tail call { i64, i64 } %36(%"class.views::AXVirtualView"* %0, i32 0, i32 0, i32* null) #14
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %39 = extractvalue { i64, i64 } %37, 0
  store i64 %39, i64* %38, align 8
  %40 = extractvalue { i64, i64 } %37, 1
  store i64 %40, i64* %32, align 8
  %41 = sitofp i32 %1 to float
  %42 = fptosi float %41 to i32
  %43 = sitofp i32 %2 to float
  %44 = fptosi float %43 to i32
  %45 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %5, i32 %42, i32 %44) #14
  br i1 %45, label %46, label %61

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 0
  %48 = bitcast %"class.views::AXVirtualView"* %0 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %49 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %49, i64 21
  %51 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.ui::AXPlatformNodeDelegateBase"* %47) #14
  br i1 %52, label %61, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 1
  %55 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %54, align 8
  %56 = bitcast %"class.ui::AXPlatformNode"* %55 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %57 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %56, align 8
  %58 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %57, i64 1
  %59 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %58, align 8
  %60 = call %struct._AtkObject* %59(%"class.ui::AXPlatformNode"* %55) #14
  br label %61

61:                                               ; preds = %30, %46, %53
  %62 = phi %struct._AtkObject* [ %60, %53 ], [ null, %46 ], [ null, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #14
  br label %63

63:                                               ; preds = %20, %3, %61
  %64 = phi %struct._AtkObject* [ %62, %61 ], [ null, %3 ], [ %28, %20 ]
  ret %struct._AtkObject* %64
}

declare zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views13AXVirtualView8GetFocusEv(%"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.views::AXVirtualView"* [ %0, %1 ], [ %9, %7 ]
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 2
  %5 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %4, align 8
  %6 = icmp eq %"class.views::ViewAccessibility"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 3
  %9 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %8, align 8
  %10 = icmp eq %"class.views::AXVirtualView"* %9, null
  br i1 %10, label %24, label %2

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %5, i64 0, i32 2
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = icmp eq %"class.views::View"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.views::View"* %13 to i1 (%"class.views::View"*)***
  %17 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %17, i64 62
  %19 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.views::View"* nonnull %13) #14
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* nonnull %13) #14
  %23 = tail call %struct._AtkObject* @_ZN5views17ViewAccessibility20GetFocusedDescendantEv(%"class.views::ViewAccessibility"* %22) #14
  br label %24

24:                                               ; preds = %7, %11, %15, %21
  %25 = phi %struct._AtkObject* [ %23, %21 ], [ null, %15 ], [ null, %11 ], [ null, %7 ]
  ret %struct._AtkObject* %25
}

declare %struct._AtkObject* @_ZN5views17ViewAccessibility20GetFocusedDescendantEv(%"class.views::ViewAccessibility"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNode"* @_ZN5views13AXVirtualView13GetFromNodeIDEi(%"class.views::AXVirtualView"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views8GetIdMapEvE13id_to_obj_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #14
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views8GetIdMapEvE13id_to_obj_map) #14
  br label %9

9:                                                ; preds = %8, %5, %2
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %9, %12
  %13 = phi %"class.std::__1::__tree_end_node"* [ %23, %12 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %9 ]
  %14 = phi %"class.std::__1::__tree_node"* [ %24, %12 ], [ %10, %9 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %1
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__tree_node_base"** %18 to %"class.std::__1::__tree_node"**
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %22 = select i1 %17, %"class.std::__1::__tree_node"** %19, %"class.std::__1::__tree_node"** %21
  %23 = select i1 %17, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %20
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %12

26:                                               ; preds = %12
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %23, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views8GetIdMapEvE13id_to_obj_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %27, label %41, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %1
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 5
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.views::AXVirtualView"**
  %36 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %35, align 8
  %37 = icmp eq %"class.views::AXVirtualView"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %36, i64 0, i32 1
  %40 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %39, align 8
  br label %41

41:                                               ; preds = %28, %26, %9, %33, %38
  %42 = phi %"class.ui::AXPlatformNode"* [ %40, %38 ], [ null, %33 ], [ null, %9 ], [ null, %26 ], [ null, %28 ]
  ret %"class.ui::AXPlatformNode"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views13AXVirtualView26AccessibilityPerformActionERKN2ui12AXActionDataE(%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXActionData", align 8
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData9HasActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"* %4, i32 %6) #14
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = bitcast %"class.views::AXVirtualView"* %0 to i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)***
  %10 = load i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)** %10, i64 98
  %12 = load i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.views::AXVirtualView"* %0, %"struct.ui::AXActionData"* dereferenceable(168) %1) #14
  br i1 %13, label %58, label %14

14:                                               ; preds = %2, %8
  br label %15

15:                                               ; preds = %14, %20
  %16 = phi %"class.views::AXVirtualView"* [ %22, %20 ], [ %0, %14 ]
  %17 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %16, i64 0, i32 2
  %18 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %17, align 8
  %19 = icmp eq %"class.views::ViewAccessibility"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %16, i64 0, i32 3
  %22 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %21, align 8
  %23 = icmp eq %"class.views::AXVirtualView"* %22, null
  br i1 %23, label %58, label %15

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %18, i64 0, i32 2
  %26 = load %"class.views::View"*, %"class.views::View"** %25, align 8
  %27 = icmp eq %"class.views::View"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.ui::AXActionData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %29) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 168, i1 false) #14
  call void @_ZN2ui12AXActionDataC1ERKS0_(%"struct.ui::AXActionData"* nonnull %3, %"struct.ui::AXActionData"* dereferenceable(168) %1) #14
  %30 = bitcast %"class.views::AXVirtualView"* %0 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %31 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %30, align 8
  %32 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %31, i64 2
  %33 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %32, align 8
  %34 = call dereferenceable(264) %"struct.ui::AXNodeData"* %33(%"class.views::AXVirtualView"* %0) #14
  %35 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %3, i64 0, i32 3
  store i32 %36, i32* %37, align 8
  br label %38

38:                                               ; preds = %47, %28
  %39 = phi %"class.views::AXVirtualView"* [ %0, %28 ], [ %49, %47 ]
  %40 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %39, i64 0, i32 2
  %41 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %40, align 8
  %42 = icmp eq %"class.views::ViewAccessibility"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %41, i64 0, i32 2
  %45 = load %"class.views::View"*, %"class.views::View"** %44, align 8
  %46 = bitcast %"class.views::View"* %45 to i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)***
  br label %51

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %39, i64 0, i32 3
  %49 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %48, align 8
  %50 = icmp eq %"class.views::AXVirtualView"* %49, null
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %43
  %52 = phi i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** [ %46, %43 ], [ null, %47 ]
  %53 = phi %"class.views::View"* [ %45, %43 ], [ null, %47 ]
  %54 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** %52, align 8
  %55 = getelementptr inbounds i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %54, i64 82
  %56 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %55, align 8
  %57 = call zeroext i1 %56(%"class.views::View"* %53, %"struct.ui::AXActionData"* nonnull dereferenceable(168) %3) #14
  call void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %29) #14
  br label %58

58:                                               ; preds = %20, %8, %24, %51
  %59 = phi i1 [ %57, %51 ], [ false, %24 ], [ true, %8 ], [ false, %20 ]
  ret i1 %59
}

declare zeroext i1 @_ZNK2ui10AXNodeData9HasActionEN2ax5mojom6ActionE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views13AXVirtualView33HandleAccessibleActionInOwnerViewERKN2ui12AXActionDataE(%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXActionData", align 8
  %4 = bitcast %"struct.ui::AXActionData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 168, i1 false)
  call void @_ZN2ui12AXActionDataC1ERKS0_(%"struct.ui::AXActionData"* nonnull %3, %"struct.ui::AXActionData"* dereferenceable(168) %1) #14
  %5 = bitcast %"class.views::AXVirtualView"* %0 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %6 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %6, i64 2
  %8 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %7, align 8
  %9 = call dereferenceable(264) %"struct.ui::AXNodeData"* %8(%"class.views::AXVirtualView"* %0) #14
  %10 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %3, i64 0, i32 3
  store i32 %11, i32* %12, align 8
  br label %13

13:                                               ; preds = %22, %2
  %14 = phi %"class.views::AXVirtualView"* [ %0, %2 ], [ %24, %22 ]
  %15 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %14, i64 0, i32 2
  %16 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %15, align 8
  %17 = icmp eq %"class.views::ViewAccessibility"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %16, i64 0, i32 2
  %20 = load %"class.views::View"*, %"class.views::View"** %19, align 8
  %21 = bitcast %"class.views::View"* %20 to i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)***
  br label %26

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %14, i64 0, i32 3
  %24 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %23, align 8
  %25 = icmp eq %"class.views::AXVirtualView"* %24, null
  br i1 %25, label %26, label %13

26:                                               ; preds = %22, %18
  %27 = phi i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** [ %21, %18 ], [ null, %22 ]
  %28 = phi %"class.views::View"* [ %20, %18 ], [ null, %22 ]
  %29 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** %27, align 8
  %30 = getelementptr inbounds i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %29, i64 82
  %31 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %30, align 8
  %32 = call zeroext i1 %31(%"class.views::View"* %28, %"struct.ui::AXActionData"* nonnull dereferenceable(168) %3) #14
  call void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %4) #14
  ret i1 %32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5views13AXVirtualView34ShouldIgnoreHoveredStateForTestingEv(%"class.views::AXVirtualView"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5views13AXVirtualView11IsOffscreenEv(%"class.views::AXVirtualView"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK5views13AXVirtualView11GetUniqueIdEv(%"class.views::AXVirtualView"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %0, i64 0, i32 6
  ret %"class.ui::AXUniqueId"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5views13AXVirtualView36GetTargetForNativeAccessibilityEventEv(%"class.views::AXVirtualView"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZNK5views13AXVirtualView32GetTableHasColumnOrRowHeaderNodeEv(%"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi %"class.views::AXVirtualView"* [ %0, %1 ], [ %12, %10 ]
  %4 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 2
  %5 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %4, align 8
  %6 = icmp eq %"class.views::ViewAccessibility"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %5, i64 0, i32 2
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %3, i64 0, i32 3
  %12 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %11, align 8
  %13 = icmp eq %"class.views::AXVirtualView"* %12, null
  br i1 %13, label %14, label %2

14:                                               ; preds = %10, %7
  %15 = phi %"class.views::View"* [ %9, %7 ], [ null, %10 ]
  %16 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %15) #14
  %17 = bitcast %"class.views::ViewAccessibility"* %16 to %"class.views::ViewAXPlatformNodeDelegate"*
  %18 = bitcast %"class.views::ViewAccessibility"* %16 to i16 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %19 = load i16 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i16 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %18, align 8
  %20 = getelementptr inbounds i16 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i16 (%"class.views::ViewAXPlatformNodeDelegate"*)** %19, i64 36
  %21 = load i16 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i16 (%"class.views::ViewAXPlatformNodeDelegate"*)** %20, align 8
  %22 = tail call i16 %21(%"class.views::ViewAXPlatformNodeDelegate"* %17) #14
  ret i16 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views13AXVirtualView19GetColHeaderNodeIdsEv(%"class.std::__1::vector.315"* noalias sret, %"class.views::AXVirtualView"* nocapture readonly) unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %11, %2
  %4 = phi %"class.views::AXVirtualView"* [ %1, %2 ], [ %13, %11 ]
  %5 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 2
  %6 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %5, align 8
  %7 = icmp eq %"class.views::ViewAccessibility"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %6, i64 0, i32 2
  %10 = load %"class.views::View"*, %"class.views::View"** %9, align 8
  br label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %4, i64 0, i32 3
  %13 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %12, align 8
  %14 = icmp eq %"class.views::AXVirtualView"* %13, null
  br i1 %14, label %15, label %3

15:                                               ; preds = %11, %8
  %16 = phi %"class.views::View"* [ %10, %8 ], [ null, %11 ]
  %17 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %16) #14
  %18 = bitcast %"class.views::ViewAccessibility"* %17 to %"class.views::ViewAXPlatformNodeDelegate"*
  %19 = bitcast %"class.views::ViewAccessibility"* %17 to void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)***
  %20 = load void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)**, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %20, i64 37
  %22 = load void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %21, align 8
  tail call void %22(%"class.std::__1::vector.315"* sret %0, %"class.views::ViewAXPlatformNodeDelegate"* %18) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views13AXVirtualView19GetColHeaderNodeIdsEi(%"class.std::__1::vector.315"* noalias sret, %"class.views::AXVirtualView"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %12, %3
  %5 = phi %"class.views::AXVirtualView"* [ %1, %3 ], [ %14, %12 ]
  %6 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %5, i64 0, i32 2
  %7 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %6, align 8
  %8 = icmp eq %"class.views::ViewAccessibility"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %7, i64 0, i32 2
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  br label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %5, i64 0, i32 3
  %14 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %13, align 8
  %15 = icmp eq %"class.views::AXVirtualView"* %14, null
  br i1 %15, label %16, label %4

16:                                               ; preds = %12, %9
  %17 = phi %"class.views::View"* [ %11, %9 ], [ null, %12 ]
  %18 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %17) #14
  %19 = bitcast %"class.views::ViewAccessibility"* %18 to %"class.views::ViewAXPlatformNodeDelegate"*
  %20 = bitcast %"class.views::ViewAccessibility"* %18 to void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)***
  %21 = load void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)**, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)*, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)** %21, i64 38
  %23 = load void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)*, void (%"class.std::__1::vector.315"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)** %22, align 8
  tail call void %23(%"class.std::__1::vector.315"* sret %0, %"class.views::ViewAXPlatformNodeDelegate"* %19, i32 %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views13AXVirtualView9GetCellIdEii(%"class.views::AXVirtualView"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %12, %3
  %5 = phi %"class.views::AXVirtualView"* [ %0, %3 ], [ %14, %12 ]
  %6 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %5, i64 0, i32 2
  %7 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %6, align 8
  %8 = icmp eq %"class.views::ViewAccessibility"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %7, i64 0, i32 2
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  br label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %5, i64 0, i32 3
  %14 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %13, align 8
  %15 = icmp eq %"class.views::AXVirtualView"* %14, null
  br i1 %15, label %16, label %4

16:                                               ; preds = %12, %9
  %17 = phi %"class.views::View"* [ %11, %9 ], [ null, %12 ]
  %18 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %17) #14
  %19 = bitcast %"class.views::ViewAccessibility"* %18 to %"class.views::ViewAXPlatformNodeDelegate"*
  %20 = bitcast %"class.views::ViewAccessibility"* %18 to i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)***
  %21 = load i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)**, i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)*, i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)** %21, i64 39
  %23 = load i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)*, i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)** %22, align 8
  %24 = tail call i64 %23(%"class.views::ViewAXPlatformNodeDelegate"* %19, i32 %1, i32 %2) #14
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views13AXVirtualView22HandleAccessibleActionERKN2ui12AXActionDataE(%"class.views::AXVirtualView"*, %"struct.ui::AXActionData"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXActionData", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Point"*
  br label %8

8:                                                ; preds = %13, %2
  %9 = phi %"class.views::AXVirtualView"* [ %0, %2 ], [ %15, %13 ]
  %10 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %9, i64 0, i32 2
  %11 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %10, align 8
  %12 = icmp eq %"class.views::ViewAccessibility"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %9, i64 0, i32 3
  %15 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %14, align 8
  %16 = icmp eq %"class.views::AXVirtualView"* %15, null
  br i1 %16, label %92, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %11, i64 0, i32 2
  %19 = load %"class.views::View"*, %"class.views::View"** %18, align 8
  %20 = icmp eq %"class.views::View"* %19, null
  br i1 %20, label %92, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 31
  br i1 %24, label %25, label %62

25:                                               ; preds = %21
  %26 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %28 = bitcast %"class.views::AXVirtualView"* %0 to { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)***
  %29 = load { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)**, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*** %28, align 8
  %30 = getelementptr inbounds { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)** %29, i64 35
  %31 = load { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)*, { i64, i64 } (%"class.views::AXVirtualView"*, i32, i32, i32*)** %30, align 8
  %32 = tail call { i64, i64 } %31(%"class.views::AXVirtualView"* %0, i32 1, i32 1, i32* null) #14
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %34 = extractvalue { i64, i64 } %32, 0
  store i64 %34, i64* %33, align 8
  %35 = extractvalue { i64, i64 } %32, 1
  store i64 %35, i64* %27, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 0
  %38 = icmp ult i64 %35, 4294967296
  %39 = or i1 %37, %38
  br i1 %39, label %61, label %40

40:                                               ; preds = %25, %49
  %41 = phi %"class.views::AXVirtualView"* [ %51, %49 ], [ %0, %25 ]
  %42 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %41, i64 0, i32 2
  %43 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %42, align 8
  %44 = icmp eq %"class.views::ViewAccessibility"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %43, i64 0, i32 2
  %47 = load %"class.views::View"*, %"class.views::View"** %46, align 8
  %48 = bitcast %"class.views::View"* %47 to void (%"class.views::View"*, %"class.gfx::Point"*, i32)***
  br label %53

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %41, i64 0, i32 3
  %51 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %50, align 8
  %52 = icmp eq %"class.views::AXVirtualView"* %51, null
  br i1 %52, label %53, label %40

53:                                               ; preds = %49, %45
  %54 = phi void (%"class.views::View"*, %"class.gfx::Point"*, i32)*** [ %48, %45 ], [ null, %49 ]
  %55 = phi %"class.views::View"* [ %47, %45 ], [ null, %49 ]
  %56 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  %57 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %5) #14
  store i64 %57, i64* %6, align 8
  %58 = load void (%"class.views::View"*, %"class.gfx::Point"*, i32)**, void (%"class.views::View"*, %"class.gfx::Point"*, i32)*** %54, align 8
  %59 = getelementptr inbounds void (%"class.views::View"*, %"class.gfx::Point"*, i32)*, void (%"class.views::View"*, %"class.gfx::Point"*, i32)** %58, i64 70
  %60 = load void (%"class.views::View"*, %"class.gfx::Point"*, i32)*, void (%"class.views::View"*, %"class.gfx::Point"*, i32)** %59, align 8
  call void %60(%"class.views::View"* %55, %"class.gfx::Point"* nonnull dereferenceable(8) %7, i32 2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  br label %92

61:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  br label %62

62:                                               ; preds = %61, %21
  %63 = bitcast %"struct.ui::AXActionData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %63) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 168, i1 false) #14
  call void @_ZN2ui12AXActionDataC1ERKS0_(%"struct.ui::AXActionData"* nonnull %3, %"struct.ui::AXActionData"* dereferenceable(168) %1) #14
  %64 = bitcast %"class.views::AXVirtualView"* %0 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %65 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %64, align 8
  %66 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %65, i64 2
  %67 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %66, align 8
  %68 = call dereferenceable(264) %"struct.ui::AXNodeData"* %67(%"class.views::AXVirtualView"* %0) #14
  %69 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %3, i64 0, i32 3
  store i32 %70, i32* %71, align 8
  br label %72

72:                                               ; preds = %81, %62
  %73 = phi %"class.views::AXVirtualView"* [ %0, %62 ], [ %83, %81 ]
  %74 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %73, i64 0, i32 2
  %75 = load %"class.views::ViewAccessibility"*, %"class.views::ViewAccessibility"** %74, align 8
  %76 = icmp eq %"class.views::ViewAccessibility"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %75, i64 0, i32 2
  %79 = load %"class.views::View"*, %"class.views::View"** %78, align 8
  %80 = bitcast %"class.views::View"* %79 to i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)***
  br label %85

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %73, i64 0, i32 3
  %83 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %82, align 8
  %84 = icmp eq %"class.views::AXVirtualView"* %83, null
  br i1 %84, label %85, label %72

85:                                               ; preds = %81, %77
  %86 = phi i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** [ %80, %77 ], [ null, %81 ]
  %87 = phi %"class.views::View"* [ %79, %77 ], [ null, %81 ]
  %88 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** %86, align 8
  %89 = getelementptr inbounds i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %88, i64 82
  %90 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %89, align 8
  %91 = call zeroext i1 %90(%"class.views::View"* %87, %"struct.ui::AXActionData"* nonnull dereferenceable(168) %3) #14
  call void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %63) #14
  br label %92

92:                                               ; preds = %13, %53, %17, %85
  %93 = phi i1 [ %91, %85 ], [ false, %17 ], [ true, %53 ], [ false, %13 ]
  ret i1 %93
}

declare i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"*) local_unnamed_addr #3

declare void @_ZN2ui12AXActionDataC1ERKS0_(%"struct.ui::AXActionData"*, %"struct.ui::AXActionData"* dereferenceable(168)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::AXVirtualViewWrapper"* @_ZN5views13AXVirtualView18GetOrCreateWrapperEPNS_14AXAuraObjCacheE(%"class.views::AXVirtualView"*, %"class.views::AXAuraObjCache"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache11GetOrCreateEPNS_13AXVirtualViewE(%"class.views::AXAuraObjCache"* %1, %"class.views::AXVirtualView"* %0) #14
  %4 = bitcast %"class.views::AXAuraObjWrapper"* %3 to %"class.views::AXVirtualViewWrapper"*
  ret %"class.views::AXVirtualViewWrapper"* %4
}

declare %"class.views::AXAuraObjWrapper"* @_ZN5views14AXAuraObjCache11GetOrCreateEPNS_13AXVirtualViewE(%"class.views::AXAuraObjCache"*, %"class.views::AXVirtualView"*) local_unnamed_addr #3

declare dereferenceable(248) %"struct.ui::AXTreeData"* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv(%"struct.ui::AXNode::OwnerTree::Selection"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi() unnamed_addr

declare i32 @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase14HasModalDialogEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase9IsIgnoredEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase20IsInvisibleOrIgnoredEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase9IsFocusedEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase23IsToplevelBrowserWindowEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv(%"class.std::__1::basic_string.424"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv(%"class.std::__1::basic_string.424"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32*) unnamed_addr #3

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*) unnamed_addr #3

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase11IsMinimizedEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase22GetFromTreeIDAndNodeIDERKNS_8AXTreeIDEi(%"class.ui::AXPlatformNodeDelegateBase"*, %"class.ui::AXTreeID"* dereferenceable(32), i32) unnamed_addr #3

declare %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE(%"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #3

declare void @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase17GetAuthorUniqueIdEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv(%"class.std::__1::basic_string.424"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv(%"class.std::__1::vector.315"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi(%"class.std::__1::vector.315"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #3

declare %"class.ui::AXPlatformNode"* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi(%"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase16IsOrderedSetItemEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase12IsOrderedSetEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase11GetPosInSetEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase10GetSetSizeEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i32 @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare i32 @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #3

declare void @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm(%"class.std::__1::basic_string.424"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i64) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5views13AXVirtualViewEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #14
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.424", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.424"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.424"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.424", %"class.std::__1::basic_string.424"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.424"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.424"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !10
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !10
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !10
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !10
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !10
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !10
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !10
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !10
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !10
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !10
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !10
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !10
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !10
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN5views13AXVirtualViewENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.248"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.248"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.248"* %6 to i64
  br i1 %7, label %9, label %185

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.248"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.248"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.248"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.248"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %39
  %25 = phi %"class.std::__1::unique_ptr.248"* [ %41, %39 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.248"* [ %40, %39 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.248"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.248"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.views::AXVirtualView"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.views::AXVirtualView"* %31 to void (%"class.views::AXVirtualView"*)***
  %36 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %36, i64 1
  %38 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %37, align 8
  tail call void %38(%"class.views::AXVirtualView"* nonnull %31) #14
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr.248"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::unique_ptr.248"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::unique_ptr.248"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::unique_ptr.248"* %47, %"class.std::__1::unique_ptr.248"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %46, i64 %21
  store %"class.std::__1::unique_ptr.248"* %48, %"class.std::__1::unique_ptr.248"** %10, align 8
  br label %185

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::unique_ptr.248"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = ashr exact i64 %52, 2
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #16
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 3
  %61 = tail call i8* @_Znwm(i64 %60) #15
  %62 = bitcast i8* %61 to %"class.std::__1::unique_ptr.248"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::unique_ptr.248"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::unique_ptr.248"* %66 to i64
  %68 = ptrtoint %"class.std::__1::unique_ptr.248"* %11 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.248"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %58
  %75 = add i64 %70, -8
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.std::__1::unique_ptr.248"* [ %89, %80 ], [ %64, %74 ]
  %82 = phi i64 [ %90, %80 ], [ %65, %74 ]
  %83 = phi %"class.std::__1::unique_ptr.248"* [ %91, %80 ], [ %11, %74 ]
  %84 = phi i64 [ %92, %80 ], [ %78, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.248"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %85, align 8
  %88 = inttoptr i64 %82 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %81, i64 1
  %90 = ptrtoint %"class.std::__1::unique_ptr.248"* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %83, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !11

94:                                               ; preds = %80
  %95 = ptrtoint %"class.std::__1::unique_ptr.248"* %89 to i64
  br label %96

96:                                               ; preds = %74, %94
  %97 = phi %"class.std::__1::unique_ptr.248"* [ %64, %74 ], [ %89, %94 ]
  %98 = phi i64 [ %65, %74 ], [ %95, %94 ]
  %99 = phi %"class.std::__1::unique_ptr.248"* [ %11, %74 ], [ %91, %94 ]
  %100 = icmp ult i64 %75, 56
  br i1 %100, label %155, label %101

101:                                              ; preds = %96, %101
  %102 = phi %"class.std::__1::unique_ptr.248"* [ %151, %101 ], [ %97, %96 ]
  %103 = phi i64 [ %152, %101 ], [ %98, %96 ]
  %104 = phi %"class.std::__1::unique_ptr.248"* [ %153, %101 ], [ %99, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.248"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %105, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.248"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.248"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 2
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 2
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.248"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.248"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.248"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.248"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 4
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 4
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.248"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.248"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 5
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 5
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.248"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.248"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 6
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.248"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.248"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 7
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.248"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.248"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %102, i64 8
  %152 = ptrtoint %"class.std::__1::unique_ptr.248"* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %104, i64 8
  %154 = icmp eq %"class.std::__1::unique_ptr.248"* %72, %151
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %96
  %156 = ptrtoint %"class.std::__1::unique_ptr.248"* %72 to i64
  %157 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %12, align 8
  %158 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %10, align 8
  %159 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  br label %160

160:                                              ; preds = %58, %155
  %161 = phi %"class.std::__1::unique_ptr.248"* [ %159, %155 ], [ %4, %58 ]
  %162 = phi %"class.std::__1::unique_ptr.248"* [ %158, %155 ], [ %11, %58 ]
  %163 = phi %"class.std::__1::unique_ptr.248"* [ %157, %155 ], [ %13, %58 ]
  %164 = phi i64 [ %156, %155 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.248"** %10 to i64*
  store i64 %65, i64* %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.248"** %3 to i64*
  store i64 %164, i64* %166, align 8
  store i64 %67, i64* %50, align 8
  %167 = icmp eq %"class.std::__1::unique_ptr.248"* %161, %162
  br i1 %167, label %181, label %168

168:                                              ; preds = %160, %179
  %169 = phi %"class.std::__1::unique_ptr.248"* [ %170, %179 ], [ %161, %160 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %169, i64 -1
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %171, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %171, align 8
  %173 = icmp eq %"class.views::AXVirtualView"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.views::AXVirtualView"* %172 to void (%"class.views::AXVirtualView"*)***
  %176 = load void (%"class.views::AXVirtualView"*)**, void (%"class.views::AXVirtualView"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %176, i64 1
  %178 = load void (%"class.views::AXVirtualView"*)*, void (%"class.views::AXVirtualView"*)** %177, align 8
  tail call void %178(%"class.views::AXVirtualView"* nonnull %172) #14
  br label %179

179:                                              ; preds = %174, %168
  %180 = icmp eq %"class.std::__1::unique_ptr.248"* %170, %162
  br i1 %180, label %181, label %168

181:                                              ; preds = %179, %160
  %182 = icmp eq %"class.std::__1::unique_ptr.248"* %163, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr.248"* %163 to i8*
  tail call void @_ZdlPv(i8* %184) #15
  br label %185

185:                                              ; preds = %183, %181, %45, %2
  %186 = bitcast %"class.std::__1::unique_ptr.248"** %3 to i64**
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr.248"* %1 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.views::AXVirtualView"* null, %"class.views::AXVirtualView"** %188, align 8
  store i64 %190, i64* %187, align 8
  %191 = load %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"** %3, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248"* %191, i64 1
  store %"class.std::__1::unique_ptr.248"* %192, %"class.std::__1::unique_ptr.248"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIiPN5views13AXVirtualViewEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIiPN5views13AXVirtualViewEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISO_EEEEEEDpOT_"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{i8 0, i8 2}
!11 = distinct !{!11, !7}
