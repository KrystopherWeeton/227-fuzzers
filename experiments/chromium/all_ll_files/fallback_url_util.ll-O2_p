; ModuleID = '../../components/favicon/core/fallback_url_util.cc'
source_filename = "../../components/favicon/core/fallback_url_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"IP\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon19GetFallbackIconTextERK4GURL(%"class.std::__1::basic_string.4"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #4
  br label %110

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %4, %class.GURL* dereferenceable(120) %1, i32 1) #4
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i64, i64* %22, align 8
  %29 = zext i8 %26 to i64
  %30 = select i1 %27, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %57

32:                                               ; preds = %19
  %33 = call zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL* %1) #4
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #4
  br label %104

35:                                               ; preds = %32
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #4
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %38 = load i32, i32* %37, align 4, !noalias !2
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #4, !alias.scope !2
  br label %48

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %43 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %44 = load i32, i32* %43, align 4, !noalias !2
  %45 = sext i32 %44 to i64
  %46 = sext i32 %38 to i64
  %47 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #4, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %42, i64 %45, i64 %46, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #4, !noalias !2
  br label %48

48:                                               ; preds = %40, %41
  %49 = load i8, i8* %25, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %52) #5
  br label %53

53:                                               ; preds = %51, %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %36, i64 24, i1 false) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #4
  %54 = load i8, i8* %25, align 1
  %55 = load i64, i64* %22, align 8
  %56 = zext i8 %54 to i64
  br label %57

57:                                               ; preds = %53, %19
  %58 = phi i64 [ %56, %53 ], [ %29, %19 ]
  %59 = phi i64 [ %55, %53 ], [ %28, %19 ]
  %60 = phi i8 [ %54, %53 ], [ %26, %19 ]
  %61 = icmp slt i8 %60, 0
  %62 = select i1 %61, i64 %59, i64 %58
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #4
  br label %104

66:                                               ; preds = %57
  %67 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #4
  %68 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #4
  %69 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 0, i64 1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %69) #4
  %70 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = select i1 %73, i8* %75, i8* %68
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %72 to i64
  %80 = select i1 %73, i64 %78, i64 %79
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %6, i8* %76, i64 %80) #4
  %81 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string.4"* %6 to i16*
  %88 = select i1 %84, i16* %86, i16* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = zext i8 %83 to i64
  %92 = select i1 %84, i64 %90, i64 %91
  call void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.4"* sret %0, i16* %88, i64 %92) #4
  %93 = load i8, i8* %82, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %66
  %96 = bitcast %"class.std::__1::basic_string.4"* %6 to i8**
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #5
  br label %98

98:                                               ; preds = %66, %95
  %99 = load i8, i8* %71, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %102) #5
  br label %103

103:                                              ; preds = %98, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #4
  br label %104

104:                                              ; preds = %103, %64, %34
  %105 = load i8, i8* %25, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %108) #5
  br label %109

109:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #4
  br label %110

110:                                              ; preds = %109, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERK4GURLNS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.4"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base4i18n7ToUpperENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.4"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL4hostEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL4hostEv"}
