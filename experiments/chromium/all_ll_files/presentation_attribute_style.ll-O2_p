; ModuleID = '../../third_party/blink/renderer/core/dom/presentation_attribute_style.cc'
source_filename = "../../third_party/blink/renderer/core/dom/presentation_attribute_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashMap<unsigned int, blink::Member<blink::PresentationAttributeCacheEntry>, WTF::AlreadyHashed, WTF::HashTraits<unsigned int>, WTF::HashTraits<blink::Member<blink::PresentationAttributeCacheEntry> > > > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashMap<unsigned int, blink::Member<blink::PresentationAttributeCacheEntry>, WTF::AlreadyHashed, WTF::HashTraits<unsigned int>, WTF::HashTraits<blink::Member<blink::PresentationAttributeCacheEntry> > > > >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.122", i32, [4 x i8], %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.299", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.238", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i64 }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { float }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.241", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.280" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.530" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.10" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.4" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", %"class.blink::Member.23", %"class.blink::Member.2", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.71", %"class.WTF::Vector.71", i8, i32, %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.95", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.106", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.36", %"class.blink::Member.315", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::UserActionElementSet", %"class.blink::Member.324", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.331", i16, i8, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::TextLinkColors", %"class.blink::Member.346", i8, [7 x i8], %"class.blink::HeapHashMap.348", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.36", %"class.WTF::Vector.355", %"class.blink::Member.360", %"class.blink::Member.362", i8, %"class.blink::Member.36", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.364", %"class.blink::HeapVector.366", %"class.std::__1::unique_ptr.374", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.380", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.393", %"class.WTF::Vector.395", i8, i8, %"class.std::__1::unique_ptr.400", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.406", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.414", i8, i32, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.422", %"class.WTF::HashMap.424", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.437", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.std::__1::unique_ptr.454", i64, %"class.std::__1::unique_ptr.460", i32, i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.472", %"class.WTF::Vector.474", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.479", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", %"class.blink::Member.494", i8, i8, %"class.WTF::String", %"class.blink::Member.496", i8, [7 x i8], %"class.blink::HeapHashMap.498", %"class.blink::HeapObserverSet", %"class.blink::Member.512", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.514", i32, i8, i8, %"class.blink::WeakMember.516", %"class.blink::Member.517" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.64" }
%"class.blink::HeapHashMap.64" = type { %"class.WTF::HashMap.67" }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.70"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.70" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.75" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.535", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.576", i32, i8, [3 x i8], %"class.blink::HeapVector.578", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.597", %"class.blink::Member.603", %"class.blink::Member.605", i8, [7 x i8] }>
%"class.blink::Supplementable.535" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.536" }
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.551" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.543" }
%"class.blink::HeapObserverSet.543" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Supplementable.551" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.552" }
%"class.blink::HeapHashMap.552" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type { i8*, %"class.blink::Member.624" }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.626" }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.559, %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.566", %"class.std::__1::unique_ptr.566", %"class.blink::Member.84", i32, [4 x i8], %"class.WTF::HashSet.572", i32, i32 }
%class.scoped_refptr.559 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.578" = type { %"class.WTF::Vector.581" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.blink::Member.584"*, i32, i32 }
%"class.blink::Member.584" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.590", i32, i32 }
%"class.blink::HeapHashMap.590" = type { %"class.WTF::HashMap.593" }
%"class.WTF::HashMap.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"struct.WTF::KeyValuePair.596"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.596" = type opaque
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.110", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.317" }
%"class.blink::HeapHashMap.317" = type { %"class.WTF::HashMap.320" }
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::WeakMember.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.330" = type opaque
%"class.blink::HeapHashSet.331" = type { %"class.WTF::HashSet.334" }
%"class.WTF::HashSet.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.366" = type { %"class.WTF::Vector.369" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.blink::Member.372"*, i32, i32 }
%"class.blink::Member.372" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.380" = type { %"class.WTF::HashSet.383" }
%"class.WTF::HashSet.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"class.blink::WeakMember.386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.386" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.387", i32, [4 x i8] }>
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"struct.std::__1::pair.390"*, i32, i32 }
%"struct.std::__1::pair.390" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.36"*, i32, i32 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.23" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.314", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.305, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.305 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.306" }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.308", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.blink::WeakMember.314" = type { %"class.blink::MemberBase.24" }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::Member.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.443" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.479" = type { %"class.WTF::HashMap.482" }
%"class.WTF::HashMap.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.505" }
%"class.blink::HeapHashSet.505" = type { %"class.WTF::HashSet.508" }
%"class.WTF::HashSet.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"class.blink::WeakMember.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.511" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.23", %"class.blink::HeapHashSet.521", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.528", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.521" = type { %"class.WTF::HashSet.524" }
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"class.blink::Member.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type opaque
%"class.blink::HeapTaskRunnerTimer.528" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.529", { i64, i64 } }
%"class.blink::WeakMember.529" = type { %"class.blink::MemberBase.515" }
%"class.blink::WeakMember.516" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.36", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.14", %"class.blink::Member.16", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.14" = type { %"class.WTF::SingleThreadedBitField.15" }
%"class.WTF::SingleThreadedBitField.15" = type { i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"struct.std::__1::pair.610" = type { %"class.WTF::StringImpl"*, %"class.WTF::AtomicString" }
%"struct.blink::PresentationAttributeCacheKey" = type { %"class.WTF::StringImpl"*, %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609", [48 x i8] }
%"class.WTF::VectorBufferBase.609" = type { %"struct.std::__1::pair.610"*, i32, i32 }
%"struct.blink::PresentationAttributeCacheEntry" = type { %"struct.blink::PresentationAttributeCacheKey", %"class.blink::Member.16" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.16", %"class.WTF::Vector.629" }
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631", [64 x i8] }
%"class.WTF::VectorBufferBase.631" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::PersistentBase.646" = type { %"class.blink::HeapHashMap.618"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { i32, %"class.blink::Member.614" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"struct.blink::PresentationAttributeCacheEntry"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEmm = comdat any

$_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_ = comdat any

$_ZNSt3__16__sortIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEbT0_SD_T_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEEaSERKS8_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjDnEENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_13AlreadyHashedENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSB_IS6_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISH_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_31PresentationAttributeCacheEntryEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_31PresentationAttributeCacheEntryEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_31PresentationAttributeCacheEntryEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjRPS4_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names15kBackgroundAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::StringImpl *, WTF::AtomicString>]\00", align 1
@_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL29GetPresentationAttributeCacheEvE7s_cache = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapIjNS1_6MemberINS1_31PresentationAttributeCacheEntryEEENS_13AlreadyHashedENS_10HashTraitsIjEENS7_IS5_EEEEEEPKcv = private unnamed_addr constant [260 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<unsigned int, blink::Member<blink::PresentationAttributeCacheEntry>, WTF::AlreadyHashed, WTF::HashTraits<unsigned int>, WTF::HashTraits<blink::Member<blink::PresentationAttributeCacheEntry> > >]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIjNS_12KeyValuePairIjNS1_6MemberINS1_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS7_EEEESD_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [429 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<unsigned int, WTF::KeyValuePair<unsigned int, blink::Member<blink::PresentationAttributeCacheEntry> >, WTF::KeyValuePairKeyExtractor, WTF::AlreadyHashed, WTF::HashMapValueTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<blink::Member<blink::PresentationAttributeCacheEntry> > >, WTF::HashTraits<unsigned int>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink31PresentationAttributeCacheEntryEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PresentationAttributeCacheEntry]\00", align 1
@_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_31PresentationAttributeCacheEntryEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_31PresentationAttributeCacheEntryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink33ComputePresentationAttributeStyleERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 {
  %2 = alloca i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, align 8
  %3 = alloca %"struct.std::__1::pair.610", align 8
  %4 = alloca %"struct.blink::PresentationAttributeCacheKey", align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.blink::PresentationAttributeCacheEntry"*, align 8
  %8 = bitcast %"struct.blink::PresentationAttributeCacheKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 1, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 1, i32 0, i32 1, i64 0
  %13 = bitcast %"class.WTF::Vector.607"* %11 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 3, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheKey", %"struct.blink::PresentationAttributeCacheKey"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %5, align 4
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %231

22:                                               ; preds = %1
  %23 = icmp eq %"class.blink::Element"* %0, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %22
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %29 = bitcast %"class.blink::Member"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %231, label %36

36:                                               ; preds = %24, %22
  %37 = bitcast %"class.blink::Element"* %0 to i1 (%"class.blink::Element"*)***
  %38 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %38, i64 83
  %40 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::Element"* %0) #11
  br i1 %41, label %231, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %154, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %54 = bitcast %"class.blink::Member.16"* %53 to %"class.blink::Attribute"**
  %55 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %52, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %63

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %60 = bitcast %"class.blink::ElementData"* %59 to %"class.blink::Attribute"*
  %61 = lshr i32 %48, 1
  %62 = and i32 %61, 268435455
  br label %63

63:                                               ; preds = %58, %51
  %64 = phi i32 [ %62, %58 ], [ %57, %51 ]
  %65 = phi %"class.blink::Attribute"* [ %60, %58 ], [ %55, %51 ]
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 %66
  %68 = icmp eq i32 %64, 0
  br i1 %68, label %154, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::Element"* %0 to i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)***
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kBackgroundAttrE, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = bitcast %"struct.std::__1::pair.610"* %3 to i8*
  %74 = bitcast %"struct.std::__1::pair.610"* %3 to i64*
  %75 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %11, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %3, i64 0, i32 1
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::AtomicString"* %77 to i64*
  br label %80

80:                                               ; preds = %151, %69
  %81 = phi %"class.blink::Attribute"* [ %65, %69 ], [ %152, %151 ]
  %82 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 0, i32 0
  %83 = load i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*** %70, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)** %83, i64 81
  %85 = load i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)** %84, align 8
  %86 = call zeroext i1 %85(%"class.blink::Element"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %82) #11
  br i1 %86, label %87, label %151

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %89, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %231

93:                                               ; preds = %87
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %95 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %89, %94
  br i1 %95, label %231, label %96

96:                                               ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #11
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %89, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::StringImpl"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #11
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %108
  call void @llvm.trap() #11
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %118, %103, %96
  store i64 %99, i64* %74, align 8
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %75, align 8
  %121 = load i32, i32* %15, align 4
  %122 = load i32, i32* %14, align 8
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %134, label %124, !prof !2

124:                                              ; preds = %120
  %125 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %76, align 8
  %126 = zext i32 %121 to i64
  %127 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %125, i64 %126
  %128 = bitcast %"struct.std::__1::pair.610"* %127 to i64*
  store i64 %99, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %125, i64 %126, i32 1
  %130 = load i64, i64* %79, align 8
  %131 = bitcast %"class.WTF::AtomicString"* %129 to i64*
  store i64 %130, i64* %131, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %132 = load i32, i32* %15, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %15, align 4
  br label %150

134:                                              ; preds = %120
  call void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.607"* %11, %"struct.std::__1::pair.610"* nonnull dereferenceable(16) %3) #11
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #11
  br label %150

150:                                              ; preds = %149, %146, %134, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #11
  br label %151

151:                                              ; preds = %150, %80
  %152 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 1
  %153 = icmp eq %"class.blink::Attribute"* %152, %67
  br i1 %153, label %154, label %80

154:                                              ; preds = %151, %63, %42
  %155 = load i32, i32* %15, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %231, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %11, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %158, align 8
  %160 = zext i32 %155 to i64
  %161 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %159, i64 %160
  %162 = bitcast i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #11
  store i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)* @_ZN5blinkL17AttributeNameSortERKNSt3__14pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"* %159, %"struct.std::__1::pair.610"* %161, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** nonnull dereferenceable(8) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #11
  %163 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %10, align 8
  %167 = load i32, i32* %15, align 4
  %168 = shl i32 %167, 2
  %169 = and i32 %168, 1073741820
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %206, label %171

171:                                              ; preds = %157
  %172 = bitcast %"class.WTF::Vector.607"* %11 to i16**
  %173 = load i16*, i16** %172, align 8
  br label %174

174:                                              ; preds = %174, %171
  %175 = phi i32 [ -1640531527, %171 ], [ %203, %174 ]
  %176 = phi i32 [ %169, %171 ], [ %191, %174 ]
  %177 = phi i16* [ %173, %171 ], [ %204, %174 ]
  %178 = load i16, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %178 to i32
  %182 = add i32 %175, %181
  %183 = shl i32 %182, 16
  %184 = zext i16 %180 to i32
  %185 = shl nuw nsw i32 %184, 11
  %186 = xor i32 %185, %182
  %187 = xor i32 %186, %183
  %188 = lshr i32 %187, 11
  %189 = add i32 %188, %187
  %190 = getelementptr inbounds i16, i16* %177, i64 2
  %191 = add nsw i32 %176, -2
  %192 = load i16, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %177, i64 3
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %192 to i32
  %196 = add i32 %189, %195
  %197 = shl i32 %196, 16
  %198 = zext i16 %194 to i32
  %199 = shl nuw nsw i32 %198, 11
  %200 = xor i32 %199, %196
  %201 = xor i32 %200, %197
  %202 = lshr i32 %201, 11
  %203 = add i32 %202, %201
  %204 = getelementptr inbounds i16, i16* %177, i64 4
  %205 = icmp eq i32 %191, 0
  br i1 %205, label %206, label %174

206:                                              ; preds = %174, %157
  %207 = phi i32 [ -1640531527, %157 ], [ %203, %174 ]
  %208 = shl i32 %207, 3
  %209 = xor i32 %208, %207
  %210 = lshr i32 %209, 5
  %211 = add i32 %210, %209
  %212 = shl i32 %211, 2
  %213 = xor i32 %212, %211
  %214 = lshr i32 %213, 15
  %215 = add i32 %214, %213
  %216 = shl i32 %215, 10
  %217 = xor i32 %216, %215
  %218 = and i32 %217, 16777215
  %219 = icmp eq i32 %218, 0
  %220 = select i1 %219, i32 8388608, i32 %218
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = lshr i32 %222, 8
  %224 = zext i32 %223 to i64
  %225 = mul i64 %224, 5146158508761418231
  %226 = zext i32 %220 to i64
  %227 = mul i64 %226, -682818954288075998
  %228 = add i64 %227, %225
  %229 = lshr i64 %228, 32
  %230 = trunc i64 %229 to i32
  br label %231

231:                                              ; preds = %87, %93, %1, %24, %36, %154, %206
  %232 = phi i32 [ 0, %1 ], [ 0, %24 ], [ 0, %36 ], [ %230, %206 ], [ 0, %154 ], [ 0, %93 ], [ 0, %87 ]
  store i32 %232, i32* %5, align 4
  %233 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL29GetPresentationAttributeCacheEvE7s_cache to i8*) acquire, align 8
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %272, !prof !3

235:                                              ; preds = %231
  %236 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL29GetPresentationAttributeCacheEvE7s_cache) #11
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %272, label %238

238:                                              ; preds = %235
  %239 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEEEEPhm(i64 24) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 20, i1 false) #11
  %240 = getelementptr inbounds i8, i8* %239, i64 -4
  %241 = bitcast i8* %240 to i16*
  %242 = load atomic i16, i16* %241 monotonic, align 2
  %243 = or i16 %242, 1
  store atomic i16 %243, i16* %241 release, align 2
  store i8* %239, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %244 = ptrtoint i8* %239 to i64
  switch i64 %244, label %245 [
    i64 0, label %271
    i64 -1, label %271
  ]

245:                                              ; preds = %238
  %246 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %247 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %246, i64 0, i32 1
  %248 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %247) #11
  %249 = icmp eq i8* %248, null
  br i1 %249, label %250, label %252, !prof !2

250:                                              ; preds = %245
  %251 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %247, i8* %251) #11
  br label %252

252:                                              ; preds = %250, %245
  %253 = phi i8* [ %251, %250 ], [ %248, %245 ]
  %254 = bitcast i8* %253 to %"class.blink::ThreadState"**
  %255 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %257 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %257, i64 0, i32 0, i32 0
  %259 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %258, align 8
  %260 = icmp eq %"class.blink::PersistentNode"* %259, null
  br i1 %260, label %261, label %264, !prof !2

261:                                              ; preds = %252
  %262 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %257, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %262) #11
  %263 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %258, align 8
  br label %264

264:                                              ; preds = %261, %252
  %265 = phi %"class.blink::PersistentNode"* [ %263, %261 ], [ %259, %252 ]
  %266 = bitcast %"class.blink::PersistentNode"* %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.blink::PersistentRegion"* %257 to i64*
  store i64 %267, i64* %268, align 8
  %269 = bitcast %"class.blink::PersistentNode"* %265 to %"class.blink::PersistentBase.646"**
  store %"class.blink::PersistentBase.646"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache to %"class.blink::PersistentBase.646"*), %"class.blink::PersistentBase.646"** %269, align 8
  %270 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %265, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv, void (%"class.blink::Visitor"*, i8*)** %270, align 8
  store %"class.blink::PersistentNode"* %265, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %271

271:                                              ; preds = %264, %238, %238
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL29GetPresentationAttributeCacheEvE7s_cache) #11
  br label %272

272:                                              ; preds = %231, %235, %271
  %273 = load %"class.blink::HeapHashMap.618"*, %"class.blink::HeapHashMap.618"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL29GetPresentationAttributeCacheEvE7s_cache to %"class.blink::HeapHashMap.618"**), align 8
  %274 = load i32, i32* %5, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %324, label %276

276:                                              ; preds = %272
  %277 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #11
  store i8* null, i8** %6, align 8
  %278 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0
  %279 = call { %"struct.WTF::KeyValuePair.613"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjDnEENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.622"* %278, i32* nonnull dereferenceable(4) %5, i8** nonnull dereferenceable(8) %6) #11
  %280 = extractvalue { %"struct.WTF::KeyValuePair.613"*, i8 } %279, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #11
  %281 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %280, i64 0, i32 1, i32 0, i32 0
  %282 = load %"struct.blink::PresentationAttributeCacheEntry"*, %"struct.blink::PresentationAttributeCacheEntry"** %281, align 8
  %283 = icmp eq %"struct.blink::PresentationAttributeCacheEntry"* %282, null
  br i1 %283, label %306, label %284

284:                                              ; preds = %276
  %285 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheEntry", %"struct.blink::PresentationAttributeCacheEntry"* %282, i64 0, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %286, %287
  br i1 %288, label %289, label %305

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheEntry", %"struct.blink::PresentationAttributeCacheEntry"* %282, i64 0, i32 0, i32 1
  %291 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheEntry", %"struct.blink::PresentationAttributeCacheEntry"* %282, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = load i32, i32* %15, align 4
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %295, label %305

295:                                              ; preds = %289
  %296 = icmp eq i32 %292, 0
  br i1 %296, label %306, label %297

297:                                              ; preds = %295
  %298 = bitcast %"class.WTF::Vector.607"* %290 to i8**
  %299 = load i8*, i8** %298, align 8
  %300 = load i8*, i8** %13, align 8
  %301 = zext i32 %292 to i64
  %302 = shl nuw nsw i64 %301, 4
  %303 = call i32 @bcmp(i8* %299, i8* %300, i64 %302) #11
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %306, label %305

305:                                              ; preds = %297, %289, %284
  store i32 0, i32* %5, align 4
  br label %324

306:                                              ; preds = %297, %276, %295
  %307 = load i32, i32* %5, align 4
  %308 = icmp eq i32 %307, 0
  %309 = or i1 %308, %283
  br i1 %309, label %324, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheEntry", %"struct.blink::PresentationAttributeCacheEntry"* %282, i64 0, i32 1, i32 0, i32 0
  %312 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = icmp ugt i32 %314, 99
  br i1 %315, label %316, label %400

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 0
  %318 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %317, align 8
  %319 = icmp eq %"struct.WTF::KeyValuePair.613"* %318, null
  br i1 %319, label %400, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 1
  %322 = bitcast %"struct.WTF::KeyValuePair.613"* %318 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %322) #11
  %323 = bitcast %"class.blink::HeapHashMap.618"* %273 to i64*
  store atomic i64 0, i64* %323 monotonic, align 8
  store i32 0, i32* %321, align 8
  store i32 0, i32* %313, align 4
  br label %400

324:                                              ; preds = %306, %305, %272
  %325 = phi %"struct.WTF::KeyValuePair.613"* [ %280, %306 ], [ null, %272 ], [ %280, %305 ]
  %326 = call %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element32CreatePresentationAttributeStyleEv(%"class.blink::Element"* %0) #11
  %327 = load i32, i32* %5, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %400, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.blink::PresentationAttributeCacheEntry"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330) #11
  store %"struct.blink::PresentationAttributeCacheEntry"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PresentationAttributeCacheEntry"*), %"struct.blink::PresentationAttributeCacheEntry"** %7, align 8
  %331 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_31PresentationAttributeCacheEntryEEEPhm(i64 80) #11
  %332 = getelementptr inbounds i8, i8* %331, i64 8
  %333 = getelementptr inbounds i8, i8* %331, i64 24
  %334 = bitcast i8* %332 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 72, i1 false) #11
  store i8* %333, i8** %334, align 8
  %335 = getelementptr inbounds i8, i8* %331, i64 16
  %336 = bitcast i8* %335 to i32*
  store i32 3, i32* %336, align 8
  %337 = getelementptr inbounds i8, i8* %331, i64 20
  %338 = bitcast i8* %337 to i32*
  store i32 0, i32* %338, align 4
  %339 = getelementptr inbounds i8, i8* %331, i64 72
  %340 = bitcast i8* %339 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* null, %"class.blink::CSSPropertyValueSet"** %340, align 8
  %341 = getelementptr inbounds i8, i8* %331, i64 -4
  %342 = bitcast i8* %341 to i16*
  %343 = load atomic i16, i16* %342 monotonic, align 2
  %344 = or i16 %343, 1
  store atomic i16 %344, i16* %342 release, align 2
  %345 = bitcast %"struct.blink::PresentationAttributeCacheEntry"** %7 to i8**
  store i8* %331, i8** %345, align 8
  %346 = bitcast %"struct.blink::PresentationAttributeCacheKey"* %4 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast i8* %331 to i64*
  store i64 %347, i64* %348, align 8
  %349 = bitcast i8* %332 to %"class.WTF::Vector.607"*
  %350 = call dereferenceable(64) %"class.WTF::Vector.607"* @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEEaSERKS8_(%"class.WTF::Vector.607"* %349, %"class.WTF::Vector.607"* dereferenceable(64) %11) #11
  %351 = load %"struct.blink::PresentationAttributeCacheEntry"*, %"struct.blink::PresentationAttributeCacheEntry"** %7, align 8
  %352 = getelementptr inbounds %"struct.blink::PresentationAttributeCacheEntry", %"struct.blink::PresentationAttributeCacheEntry"* %351, i64 0, i32 1
  %353 = ptrtoint %"class.blink::CSSPropertyValueSet"* %326 to i64
  %354 = bitcast %"class.blink::Member.16"* %352 to i64*
  store atomic i64 %353, i64* %354 monotonic, align 8
  %355 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %360, label %357

357:                                              ; preds = %329
  %358 = bitcast %"class.blink::CSSPropertyValueSet"* %326 to i8*
  %359 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %358) #11
  br label %360

360:                                              ; preds = %329, %357
  %361 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 2
  %362 = load i32, i32* %361, align 4
  %363 = icmp ugt i32 %362, 4096
  br i1 %363, label %364, label %389

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 0
  %366 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %365, align 8
  %367 = icmp eq %"struct.WTF::KeyValuePair.613"* %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0, i32 1
  %370 = bitcast %"struct.WTF::KeyValuePair.613"* %366 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %370) #11
  %371 = bitcast %"class.blink::HeapHashMap.618"* %273 to i64*
  store atomic i64 0, i64* %371 monotonic, align 8
  store i32 0, i32* %369, align 8
  store i32 0, i32* %361, align 4
  br label %372

372:                                              ; preds = %364, %368
  %373 = getelementptr inbounds %"class.blink::HeapHashMap.618", %"class.blink::HeapHashMap.618"* %273, i64 0, i32 0, i32 0
  %374 = call { %"struct.WTF::KeyValuePair.613"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjRPS4_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.622"* %373, i32* nonnull dereferenceable(4) %5, %"struct.blink::PresentationAttributeCacheEntry"** nonnull dereferenceable(8) %7) #11
  %375 = extractvalue { %"struct.WTF::KeyValuePair.613"*, i8 } %374, 1
  %376 = and i8 %375, 1
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %399

378:                                              ; preds = %372
  %379 = extractvalue { %"struct.WTF::KeyValuePair.613"*, i8 } %374, 0
  %380 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %379, i64 0, i32 1
  %381 = load %"struct.blink::PresentationAttributeCacheEntry"*, %"struct.blink::PresentationAttributeCacheEntry"** %7, align 8
  %382 = ptrtoint %"struct.blink::PresentationAttributeCacheEntry"* %381 to i64
  %383 = bitcast %"class.blink::Member.614"* %380 to i64*
  store atomic i64 %382, i64* %383 monotonic, align 8
  %384 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %399, label %386

386:                                              ; preds = %378
  %387 = bitcast %"struct.blink::PresentationAttributeCacheEntry"* %381 to i8*
  %388 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %387) #11
  br label %399

389:                                              ; preds = %360
  %390 = load %"struct.blink::PresentationAttributeCacheEntry"*, %"struct.blink::PresentationAttributeCacheEntry"** %7, align 8
  %391 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %325, i64 0, i32 1
  %392 = ptrtoint %"struct.blink::PresentationAttributeCacheEntry"* %390 to i64
  %393 = bitcast %"class.blink::Member.614"* %391 to i64*
  store atomic i64 %392, i64* %393 monotonic, align 8
  %394 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %389
  %397 = bitcast %"struct.blink::PresentationAttributeCacheEntry"* %390 to i8*
  %398 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %397) #11
  br label %399

399:                                              ; preds = %396, %389, %386, %378, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #11
  br label %400

400:                                              ; preds = %320, %316, %399, %324, %310
  %401 = phi %"class.blink::CSSPropertyValueSet"* [ %312, %310 ], [ %326, %324 ], [ %326, %399 ], [ %312, %316 ], [ %312, %320 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  %402 = load i32, i32* %15, align 4
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %11, i64 0, i32 0, i32 0, i32 0
  br i1 %403, label %431, label %405, !prof !2

405:                                              ; preds = %400
  %406 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %404, align 8
  %407 = zext i32 %402 to i64
  %408 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %406, i64 %407
  br label %409

409:                                              ; preds = %427, %405
  %410 = phi %"struct.std::__1::pair.610"* [ %428, %427 ], [ %406, %405 ]
  %411 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %410, i64 0, i32 1, i32 0, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %412, null
  br i1 %413, label %427, label %414

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br i1 %418, label %421, label %423

421:                                              ; preds = %414
  %422 = add i32 %420, -1
  store i32 %422, i32* %419, align 4
  br label %423

423:                                              ; preds = %421, %414
  %424 = phi i32 [ %422, %421 ], [ %420, %414 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %412) #11
  br label %427

427:                                              ; preds = %426, %423, %409
  %428 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %410, i64 1
  %429 = icmp eq %"struct.std::__1::pair.610"* %428, %408
  br i1 %429, label %430, label %409

430:                                              ; preds = %427
  store i32 0, i32* %15, align 4
  br label %431

431:                                              ; preds = %430, %400
  %432 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %404, align 8
  %433 = bitcast i8* %12 to %"struct.std::__1::pair.610"*
  %434 = icmp eq %"struct.std::__1::pair.610"* %432, %433
  br i1 %434, label %437, label %435, !prof !4

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %11, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"* %436, %"struct.std::__1::pair.610"* %432) #11
  br label %437

437:                                              ; preds = %431, %435
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #11
  ret %"class.blink::CSSPropertyValueSet"* %401
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element32CreatePresentationAttributeStyleEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL17AttributeNameSortERKNSt3__14pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_(%"struct.std::__1::pair.610"* nocapture readonly dereferenceable(16), %"struct.std::__1::pair.610"* nocapture readonly dereferenceable(16)) #3 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp ult %"class.WTF::StringImpl"* %4, %6
  ret i1 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.607"*, %"struct.std::__1::pair.610"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.610"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.610"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"* %0, i32 %5) #11
  %14 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.std::__1::pair.610"* %1 to i64
  %17 = ptrtoint %"struct.std::__1::pair.610"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 4
  tail call void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"* %0, i32 %5) #11
  %20 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %6, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.std::__1::pair.610"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.std::__1::pair.610"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %23, i64 %26
  %28 = bitcast %"struct.std::__1::pair.610"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::pair.610"* %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %23, i64 %26, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %24, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::AtomicString"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.WTF::AtomicString"* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %37 = load i32, i32* %3, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.607"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %31, align 8
  %33 = icmp eq %"struct.std::__1::pair.610"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 3
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 3, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.607"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.607"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 4
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.610"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.std::__1::pair.610"*
  %10 = icmp eq %"struct.std::__1::pair.610"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.std::__1::pair.610"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"* %19, %"struct.std::__1::pair.610"* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.std::__1::pair.610"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.std::__1::pair.610"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #11
  %46 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.std::__1::pair.610"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.610"*
  %51 = icmp eq %"struct.std::__1::pair.610"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"* %53, %"struct.std::__1::pair.610"* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"*, %"struct.std::__1::pair.610"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.610"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %406, %3
  %5 = phi %"struct.std::__1::pair.610"* [ %1, %3 ], [ %347, %406 ]
  %6 = phi %"struct.std::__1::pair.610"* [ %0, %3 ], [ %17, %406 ]
  %7 = ptrtoint %"struct.std::__1::pair.610"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1
  %9 = bitcast %"struct.std::__1::pair.610"* %8 to i64*
  %10 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1, i32 1
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %13 = ptrtoint %"struct.std::__1::pair.610"* %5 to i64
  br label %14

14:                                               ; preds = %415, %4
  %15 = phi %"struct.std::__1::pair.610"* [ %6, %4 ], [ %416, %415 ]
  br label %16

16:                                               ; preds = %177, %14
  %17 = phi %"struct.std::__1::pair.610"* [ %15, %14 ], [ %168, %177 ]
  %18 = ptrtoint %"struct.std::__1::pair.610"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 4
  switch i64 %20, label %84 [
    i64 0, label %419
    i64 1, label %419
    i64 2, label %21
    i64 3, label %69
    i64 4, label %73
    i64 5, label %78
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1
  %24 = tail call zeroext i1 %22(%"struct.std::__1::pair.610"* dereferenceable(16) %23, %"struct.std::__1::pair.610"* dereferenceable(16) %17) #11
  br i1 %24, label %25, label %419

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::pair.610"* %17 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair.610"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1, i32 1
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.WTF::AtomicString"* %31 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %37, i64* %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %25
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  store i64 %34, i64* %36, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %419, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %419

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %419

69:                                               ; preds = %16
  %70 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %70, %"struct.std::__1::pair.610"* %71, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %419

73:                                               ; preds = %16
  %74 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 2
  %76 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1
  %77 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %74, %"struct.std::__1::pair.610"* %75, %"struct.std::__1::pair.610"* %76, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %419

78:                                               ; preds = %16
  %79 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 1
  %80 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 2
  %81 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 3
  %82 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %79, %"struct.std::__1::pair.610"* %80, %"struct.std::__1::pair.610"* %81, %"struct.std::__1::pair.610"* %82, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %419

84:                                               ; preds = %16
  %85 = icmp slt i64 %19, 112
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %5, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %419

87:                                               ; preds = %84
  %88 = icmp sgt i64 %19, 15984
  %89 = sdiv i64 %20, 2
  %90 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 %89
  br i1 %88, label %91, label %96

91:                                               ; preds = %87
  %92 = sdiv i64 %20, 4
  %93 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 %92
  %94 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %90, i64 %92
  %95 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %93, %"struct.std::__1::pair.610"* %90, %"struct.std::__1::pair.610"* %94, %"struct.std::__1::pair.610"* %8, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %98

96:                                               ; preds = %87
  %97 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %90, %"struct.std::__1::pair.610"* %8, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i32 [ %95, %91 ], [ %97, %96 ]
  %100 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %101 = tail call zeroext i1 %100(%"struct.std::__1::pair.610"* dereferenceable(16) %17, %"struct.std::__1::pair.610"* dereferenceable(16) %90) #11
  br i1 %101, label %273, label %102

102:                                              ; preds = %98, %224
  %103 = phi %"struct.std::__1::pair.610"* [ %104, %224 ], [ %8, %98 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %103, i64 -1
  %105 = icmp eq %"struct.std::__1::pair.610"* %17, %104
  br i1 %105, label %106, label %224

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 1
  %108 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %109 = tail call zeroext i1 %108(%"struct.std::__1::pair.610"* dereferenceable(16) %17, %"struct.std::__1::pair.610"* dereferenceable(16) %8) #11
  br i1 %109, label %161, label %110

110:                                              ; preds = %106
  %111 = icmp eq %"struct.std::__1::pair.610"* %107, %8
  br i1 %111, label %419, label %112

112:                                              ; preds = %110, %158
  %113 = phi %"struct.std::__1::pair.610"* [ %159, %158 ], [ %107, %110 ]
  %114 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %115 = tail call zeroext i1 %114(%"struct.std::__1::pair.610"* dereferenceable(16) %17, %"struct.std::__1::pair.610"* dereferenceable(16) %113) #11
  br i1 %115, label %116, label %158

116:                                              ; preds = %112
  %117 = bitcast %"struct.std::__1::pair.610"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %9, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %9, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %113, i64 0, i32 1
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::AtomicString"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %124 = load i64, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %124, i64* %122, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %116
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #11
  br label %140

140:                                              ; preds = %139, %136, %116
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %123, i64* %12, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #11
  br label %156

156:                                              ; preds = %140, %152, %155
  %157 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %113, i64 1
  br label %161

158:                                              ; preds = %112
  %159 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %113, i64 1
  %160 = icmp eq %"struct.std::__1::pair.610"* %159, %8
  br i1 %160, label %419, label %112

161:                                              ; preds = %156, %106
  %162 = phi %"struct.std::__1::pair.610"* [ %107, %106 ], [ %157, %156 ]
  %163 = icmp eq %"struct.std::__1::pair.610"* %162, %8
  br i1 %163, label %419, label %164

164:                                              ; preds = %161, %210
  %165 = phi %"struct.std::__1::pair.610"* [ %171, %210 ], [ %162, %161 ]
  %166 = phi %"struct.std::__1::pair.610"* [ %175, %210 ], [ %8, %161 ]
  br label %167

167:                                              ; preds = %167, %164
  %168 = phi %"struct.std::__1::pair.610"* [ %165, %164 ], [ %171, %167 ]
  %169 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"struct.std::__1::pair.610"* dereferenceable(16) %17, %"struct.std::__1::pair.610"* dereferenceable(16) %168) #11
  %171 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %168, i64 1
  br i1 %170, label %172, label %167

172:                                              ; preds = %167, %172
  %173 = phi %"struct.std::__1::pair.610"* [ %175, %172 ], [ %166, %167 ]
  %174 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %173, i64 -1
  %176 = tail call zeroext i1 %174(%"struct.std::__1::pair.610"* dereferenceable(16) %17, %"struct.std::__1::pair.610"* dereferenceable(16) %175) #11
  br i1 %176, label %172, label %177

177:                                              ; preds = %172
  %178 = icmp ult %"struct.std::__1::pair.610"* %168, %175
  br i1 %178, label %179, label %16

179:                                              ; preds = %177
  %180 = bitcast %"struct.std::__1::pair.610"* %168 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"struct.std::__1::pair.610"* %175 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %180, align 8
  store i64 %181, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %168, i64 0, i32 1
  %185 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %173, i64 -1, i32 1
  %186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %187 = bitcast %"class.WTF::AtomicString"* %184 to i64*
  %188 = load i64, i64* %187, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %186, align 8
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %185, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.WTF::AtomicString"* %185 to i64*
  %191 = load i64, i64* %190, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %189, align 8
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  store i64 %191, i64* %187, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %179
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #11
  br label %207

207:                                              ; preds = %206, %203, %179
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  store i64 %188, i64* %190, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %210, label %211

210:                                              ; preds = %207, %220, %223
  br label %164

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %210

223:                                              ; preds = %220
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #11
  br label %210

224:                                              ; preds = %102
  %225 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %226 = tail call zeroext i1 %225(%"struct.std::__1::pair.610"* dereferenceable(16) %104, %"struct.std::__1::pair.610"* dereferenceable(16) %90) #11
  br i1 %226, label %227, label %102

227:                                              ; preds = %224
  %228 = bitcast %"struct.std::__1::pair.610"* %17 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"struct.std::__1::pair.610"* %104 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %228, align 8
  store i64 %229, i64* %230, align 8
  %232 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 0, i32 1
  %233 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %103, i64 -1, i32 1
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %232, i64 0, i32 0, i32 0, i32 0
  %235 = bitcast %"class.WTF::AtomicString"* %232 to i64*
  %236 = load i64, i64* %235, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %234, align 8
  %237 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %233, i64 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.WTF::AtomicString"* %233 to i64*
  %239 = load i64, i64* %238, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %237, align 8
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  store i64 %239, i64* %235, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %227
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #11
  br label %255

255:                                              ; preds = %254, %251, %227
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  store i64 %236, i64* %238, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #11
  br label %271

271:                                              ; preds = %255, %267, %270
  %272 = add i32 %99, 1
  br label %273

273:                                              ; preds = %98, %271
  %274 = phi i32 [ %272, %271 ], [ %99, %98 ]
  %275 = phi %"struct.std::__1::pair.610"* [ %104, %271 ], [ %8, %98 ]
  %276 = ptrtoint %"struct.std::__1::pair.610"* %17 to i64
  %277 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %17, i64 1
  %278 = icmp ult %"struct.std::__1::pair.610"* %277, %275
  br i1 %278, label %279, label %344

279:                                              ; preds = %273, %340
  %280 = phi %"struct.std::__1::pair.610"* [ %343, %340 ], [ %90, %273 ]
  %281 = phi i32 [ %341, %340 ], [ %274, %273 ]
  %282 = phi %"struct.std::__1::pair.610"* [ %288, %340 ], [ %277, %273 ]
  %283 = phi %"struct.std::__1::pair.610"* [ %292, %340 ], [ %275, %273 ]
  br label %284

284:                                              ; preds = %284, %279
  %285 = phi %"struct.std::__1::pair.610"* [ %282, %279 ], [ %288, %284 ]
  %286 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %287 = tail call zeroext i1 %286(%"struct.std::__1::pair.610"* dereferenceable(16) %285, %"struct.std::__1::pair.610"* dereferenceable(16) %280) #11
  %288 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %285, i64 1
  br i1 %287, label %284, label %289

289:                                              ; preds = %284, %289
  %290 = phi %"struct.std::__1::pair.610"* [ %292, %289 ], [ %283, %284 ]
  %291 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %290, i64 -1
  %293 = tail call zeroext i1 %291(%"struct.std::__1::pair.610"* dereferenceable(16) %292, %"struct.std::__1::pair.610"* dereferenceable(16) %280) #11
  br i1 %293, label %294, label %289

294:                                              ; preds = %289
  %295 = icmp ugt %"struct.std::__1::pair.610"* %285, %292
  br i1 %295, label %344, label %296

296:                                              ; preds = %294
  %297 = bitcast %"struct.std::__1::pair.610"* %285 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast %"struct.std::__1::pair.610"* %292 to i64*
  %300 = load i64, i64* %299, align 8
  store i64 %300, i64* %297, align 8
  store i64 %298, i64* %299, align 8
  %301 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %285, i64 0, i32 1
  %302 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %290, i64 -1, i32 1
  %303 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %301, i64 0, i32 0, i32 0, i32 0
  %304 = bitcast %"class.WTF::AtomicString"* %301 to i64*
  %305 = load i64, i64* %304, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %303, align 8
  %306 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %302, i64 0, i32 0, i32 0, i32 0
  %307 = bitcast %"class.WTF::AtomicString"* %302 to i64*
  %308 = load i64, i64* %307, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %306, align 8
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  store i64 %308, i64* %304, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %296
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #11
  br label %324

324:                                              ; preds = %323, %320, %296
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  store i64 %305, i64* %307, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #11
  br label %340

340:                                              ; preds = %324, %336, %339
  %341 = add i32 %281, 1
  %342 = icmp eq %"struct.std::__1::pair.610"* %280, %285
  %343 = select i1 %342, %"struct.std::__1::pair.610"* %292, %"struct.std::__1::pair.610"* %280
  br label %279

344:                                              ; preds = %294, %273
  %345 = phi %"struct.std::__1::pair.610"* [ %90, %273 ], [ %280, %294 ]
  %346 = phi i32 [ %274, %273 ], [ %281, %294 ]
  %347 = phi %"struct.std::__1::pair.610"* [ %277, %273 ], [ %285, %294 ]
  %348 = icmp eq %"struct.std::__1::pair.610"* %347, %345
  br i1 %348, label %398, label %349

349:                                              ; preds = %344
  %350 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %351 = tail call zeroext i1 %350(%"struct.std::__1::pair.610"* dereferenceable(16) %345, %"struct.std::__1::pair.610"* dereferenceable(16) %347) #11
  br i1 %351, label %352, label %398

352:                                              ; preds = %349
  %353 = bitcast %"struct.std::__1::pair.610"* %347 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"struct.std::__1::pair.610"* %345 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %353, align 8
  store i64 %354, i64* %355, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %347, i64 0, i32 1
  %358 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %345, i64 0, i32 1
  %359 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %357, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.WTF::AtomicString"* %357 to i64*
  %361 = load i64, i64* %360, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %359, align 8
  %362 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %358, i64 0, i32 0, i32 0, i32 0
  %363 = bitcast %"class.WTF::AtomicString"* %358 to i64*
  %364 = load i64, i64* %363, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %362, align 8
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  store i64 %364, i64* %360, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %352
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #11
  br label %380

380:                                              ; preds = %379, %376, %352
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  store i64 %361, i64* %363, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #11
  br label %396

396:                                              ; preds = %380, %392, %395
  %397 = add i32 %346, 1
  br label %398

398:                                              ; preds = %344, %396, %349
  %399 = phi i32 [ %397, %396 ], [ %346, %349 ], [ %346, %344 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %408

401:                                              ; preds = %398
  %402 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEbT0_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %347, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  %403 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %347, i64 1
  %404 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEbT0_SD_T_(%"struct.std::__1::pair.610"* %403, %"struct.std::__1::pair.610"* %5, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br i1 %404, label %405, label %407

405:                                              ; preds = %401
  br i1 %402, label %419, label %406

406:                                              ; preds = %405, %417
  br label %4

407:                                              ; preds = %401
  br i1 %402, label %415, label %408

408:                                              ; preds = %407, %398
  %409 = ptrtoint %"struct.std::__1::pair.610"* %347 to i64
  %410 = sub i64 %409, %276
  %411 = sub i64 %13, %409
  %412 = icmp slt i64 %410, %411
  br i1 %412, label %413, label %417

413:                                              ; preds = %408
  tail call void @_ZNSt3__16__sortIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"* %17, %"struct.std::__1::pair.610"* %347, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  %414 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %347, i64 1
  br label %415

415:                                              ; preds = %413, %407
  %416 = phi %"struct.std::__1::pair.610"* [ %403, %407 ], [ %414, %413 ]
  br label %14

417:                                              ; preds = %408
  %418 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %347, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"* %418, %"struct.std::__1::pair.610"* %5, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %406

419:                                              ; preds = %405, %161, %16, %16, %110, %158, %68, %65, %53, %21, %69, %73, %78, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %3, align 8
  %6 = tail call zeroext i1 %5(%"struct.std::__1::pair.610"* dereferenceable(16) %1, %"struct.std::__1::pair.610"* dereferenceable(16) %0) #11
  %7 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %3, align 8
  %8 = tail call zeroext i1 %7(%"struct.std::__1::pair.610"* dereferenceable(16) %2, %"struct.std::__1::pair.610"* dereferenceable(16) %1) #11
  br i1 %6, label %97, label %9

9:                                                ; preds = %4
  br i1 %8, label %10, label %227

10:                                               ; preds = %9
  %11 = bitcast %"struct.std::__1::pair.610"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair.610"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %22, i64* %18, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %38

38:                                               ; preds = %37, %34, %10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %19, i64* %21, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %38, %50, %53
  %55 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %3, align 8
  %56 = tail call zeroext i1 %55(%"struct.std::__1::pair.610"* dereferenceable(16) %1, %"struct.std::__1::pair.610"* dereferenceable(16) %0) #11
  br i1 %56, label %57, label %227

57:                                               ; preds = %54
  %58 = bitcast %"struct.std::__1::pair.610"* %0 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %11, align 8
  store i64 %60, i64* %58, align 8
  store i64 %59, i64* %11, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::AtomicString"* %61 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %65 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %65, i64* %63, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %81

81:                                               ; preds = %80, %77, %57
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %64, i64* %18, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %227, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %227

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #11
  br label %227

97:                                               ; preds = %4
  %98 = bitcast %"struct.std::__1::pair.610"* %0 to i64*
  %99 = load i64, i64* %98, align 8
  br i1 %8, label %100, label %142

100:                                              ; preds = %97
  %101 = bitcast %"struct.std::__1::pair.610"* %2 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %98, align 8
  store i64 %99, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %2, i64 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::AtomicString"* %103 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %104, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.WTF::AtomicString"* %104 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  store i64 %110, i64* %106, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %100
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %126

126:                                              ; preds = %125, %122, %100
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  store i64 %107, i64* %109, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %227, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %227

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %227

142:                                              ; preds = %97
  %143 = bitcast %"struct.std::__1::pair.610"* %1 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %98, align 8
  store i64 %99, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 0, i32 1
  %147 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %145, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::AtomicString"* %145 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %146, i64 0, i32 0, i32 0, i32 0
  %151 = bitcast %"class.WTF::AtomicString"* %146 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  store i64 %152, i64* %148, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %142
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #11
  br label %168

168:                                              ; preds = %167, %164, %142
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store i64 %149, i64* %151, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #11
  br label %184

184:                                              ; preds = %168, %180, %183
  %185 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %3, align 8
  %186 = tail call zeroext i1 %185(%"struct.std::__1::pair.610"* dereferenceable(16) %2, %"struct.std::__1::pair.610"* dereferenceable(16) %1) #11
  br i1 %186, label %187, label %227

187:                                              ; preds = %184
  %188 = load i64, i64* %143, align 8
  %189 = bitcast %"struct.std::__1::pair.610"* %2 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %143, align 8
  store i64 %188, i64* %189, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %2, i64 0, i32 1
  %192 = load i64, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  %193 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %191, i64 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.WTF::AtomicString"* %191 to i64*
  %195 = load i64, i64* %194, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %193, align 8
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  store i64 %195, i64* %151, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #11
  br label %211

211:                                              ; preds = %210, %207, %187
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  store i64 %192, i64* %194, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #11
  br label %227

227:                                              ; preds = %226, %223, %211, %141, %138, %126, %96, %93, %81, %184, %54, %9
  %228 = phi i32 [ 0, %9 ], [ 1, %54 ], [ 1, %184 ], [ 2, %81 ], [ 2, %93 ], [ 2, %96 ], [ 1, %126 ], [ 1, %138 ], [ 1, %141 ], [ 2, %211 ], [ 2, %223 ], [ 2, %226 ]
  ret i32 %228
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %1, %"struct.std::__1::pair.610"* %2, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %4)
  %7 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %4, align 8
  %8 = tail call zeroext i1 %7(%"struct.std::__1::pair.610"* dereferenceable(16) %3, %"struct.std::__1::pair.610"* dereferenceable(16) %2) #11
  br i1 %8, label %9, label %143

9:                                                ; preds = %5
  %10 = bitcast %"struct.std::__1::pair.610"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::pair.610"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %21, i64* %17, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %37

37:                                               ; preds = %36, %33, %9
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store i64 %18, i64* %20, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %37, %49, %52
  %54 = add i32 %6, 1
  %55 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %4, align 8
  %56 = tail call zeroext i1 %55(%"struct.std::__1::pair.610"* dereferenceable(16) %2, %"struct.std::__1::pair.610"* dereferenceable(16) %1) #11
  br i1 %56, label %57, label %143

57:                                               ; preds = %53
  %58 = bitcast %"struct.std::__1::pair.610"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %10, align 8
  store i64 %60, i64* %58, align 8
  store i64 %59, i64* %10, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::AtomicString"* %61 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %65 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %65, i64* %63, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %81

81:                                               ; preds = %80, %77, %57
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %64, i64* %17, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #11
  br label %97

97:                                               ; preds = %81, %93, %96
  %98 = add i32 %6, 2
  %99 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %4, align 8
  %100 = tail call zeroext i1 %99(%"struct.std::__1::pair.610"* dereferenceable(16) %1, %"struct.std::__1::pair.610"* dereferenceable(16) %0) #11
  br i1 %100, label %101, label %143

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::pair.610"* %0 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %58, align 8
  store i64 %104, i64* %102, align 8
  store i64 %103, i64* %58, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::AtomicString"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %109 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %109, i64* %107, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %125

125:                                              ; preds = %124, %121, %101
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %108, i64* %63, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #11
  br label %141

141:                                              ; preds = %125, %137, %140
  %142 = add i32 %6, 3
  br label %143

143:                                              ; preds = %53, %141, %97, %5
  %144 = phi i32 [ %142, %141 ], [ %98, %97 ], [ %54, %53 ], [ %6, %5 ]
  ret i32 %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %1, %"struct.std::__1::pair.610"* %2, %"struct.std::__1::pair.610"* %3, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %5)
  %8 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %5, align 8
  %9 = tail call zeroext i1 %8(%"struct.std::__1::pair.610"* dereferenceable(16) %4, %"struct.std::__1::pair.610"* dereferenceable(16) %3) #11
  br i1 %9, label %10, label %188

10:                                               ; preds = %6
  %11 = bitcast %"struct.std::__1::pair.610"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair.610"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %22, i64* %18, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %38

38:                                               ; preds = %37, %34, %10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %19, i64* %21, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %38, %50, %53
  %55 = add i32 %7, 1
  %56 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %5, align 8
  %57 = tail call zeroext i1 %56(%"struct.std::__1::pair.610"* dereferenceable(16) %3, %"struct.std::__1::pair.610"* dereferenceable(16) %2) #11
  br i1 %57, label %58, label %188

58:                                               ; preds = %54
  %59 = bitcast %"struct.std::__1::pair.610"* %2 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = load i64, i64* %11, align 8
  store i64 %61, i64* %59, align 8
  store i64 %60, i64* %11, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %2, i64 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.WTF::AtomicString"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %66 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store i64 %66, i64* %64, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #11
  br label %82

82:                                               ; preds = %81, %78, %58
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %65, i64* %18, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #11
  br label %98

98:                                               ; preds = %82, %94, %97
  %99 = add i32 %7, 2
  %100 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %5, align 8
  %101 = tail call zeroext i1 %100(%"struct.std::__1::pair.610"* dereferenceable(16) %2, %"struct.std::__1::pair.610"* dereferenceable(16) %1) #11
  br i1 %101, label %102, label %188

102:                                              ; preds = %98
  %103 = bitcast %"struct.std::__1::pair.610"* %1 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = load i64, i64* %59, align 8
  store i64 %105, i64* %103, align 8
  store i64 %104, i64* %59, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::AtomicString"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %110 = load i64, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %110, i64* %108, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %102
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %126

126:                                              ; preds = %125, %122, %102
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store i64 %109, i64* %64, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #11
  br label %142

142:                                              ; preds = %126, %138, %141
  %143 = add i32 %7, 3
  %144 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %5, align 8
  %145 = tail call zeroext i1 %144(%"struct.std::__1::pair.610"* dereferenceable(16) %1, %"struct.std::__1::pair.610"* dereferenceable(16) %0) #11
  br i1 %145, label %146, label %188

146:                                              ; preds = %142
  %147 = bitcast %"struct.std::__1::pair.610"* %0 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = load i64, i64* %103, align 8
  store i64 %149, i64* %147, align 8
  store i64 %148, i64* %103, align 8
  %150 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.WTF::AtomicString"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %151, align 8
  %154 = load i64, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %154, i64* %152, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %146
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #11
  br label %170

170:                                              ; preds = %169, %166, %146
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %153, i64* %108, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #11
  br label %186

186:                                              ; preds = %170, %182, %185
  %187 = add i32 %7, 4
  br label %188

188:                                              ; preds = %54, %142, %186, %98, %6
  %189 = phi i32 [ %187, %186 ], [ %143, %142 ], [ %99, %98 ], [ %55, %54 ], [ %7, %6 ]
  ret i32 %189
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEvT0_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.std::__1::pair.610"*
  %6 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 2
  %7 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 1
  %8 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %7, %"struct.std::__1::pair.610"* %6, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  %9 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 3
  %10 = icmp eq %"struct.std::__1::pair.610"* %9, %1
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = bitcast <2 x i64>* %4 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 0, i32 1
  %16 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %101, %3
  ret void

19:                                               ; preds = %11, %101
  %20 = phi %"struct.std::__1::pair.610"* [ %9, %11 ], [ %102, %101 ]
  %21 = phi %"struct.std::__1::pair.610"* [ %6, %11 ], [ %20, %101 ]
  %22 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %23 = call zeroext i1 %22(%"struct.std::__1::pair.610"* dereferenceable(16) %20, %"struct.std::__1::pair.610"* dereferenceable(16) %21) #11
  br i1 %23, label %24, label %101

24:                                               ; preds = %19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %25 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = bitcast %"struct.std::__1::pair.610"* %20 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  store <2 x i64> %27, <2 x i64>* %4, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  br label %28

28:                                               ; preds = %58, %24
  %29 = phi %"struct.std::__1::pair.610"* [ %20, %24 ], [ %30, %58 ]
  %30 = phi %"struct.std::__1::pair.610"* [ %21, %24 ], [ %60, %58 ]
  %31 = bitcast %"struct.std::__1::pair.610"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.std::__1::pair.610"* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %30, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %29, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::AtomicString"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %39 = bitcast %"class.WTF::AtomicString"* %35 to i64*
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %56

56:                                               ; preds = %28, %52, %55
  %57 = icmp eq %"struct.std::__1::pair.610"* %30, %0
  br i1 %57, label %62, label %58

58:                                               ; preds = %56
  %59 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %30, i64 -1
  %61 = call zeroext i1 %59(%"struct.std::__1::pair.610"* nonnull dereferenceable(16) %5, %"struct.std::__1::pair.610"* dereferenceable(16) %60) #11
  br i1 %61, label %28, label %62

62:                                               ; preds = %56, %58
  %63 = phi %"struct.std::__1::pair.610"* [ %30, %58 ], [ %0, %56 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.WTF::AtomicString"* %34 to i64*
  %66 = bitcast %"struct.std::__1::pair.610"* %63 to i64*
  %67 = load i64, i64* %14, align 16
  store i64 %67, i64* %66, align 8
  %68 = load i64, i64* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  store i64 %68, i64* %65, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #11
  br label %84

84:                                               ; preds = %62, %80, %83
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %100

100:                                              ; preds = %84, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %101

101:                                              ; preds = %100, %19
  %102 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %20, i64 1
  %103 = icmp eq %"struct.std::__1::pair.610"* %102, %1
  br i1 %103, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEbT0_SD_T_(%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.std::__1::pair.610"*
  %6 = ptrtoint %"struct.std::__1::pair.610"* %1 to i64
  %7 = ptrtoint %"struct.std::__1::pair.610"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 4
  switch i64 %9, label %73 [
    i64 0, label %178
    i64 1, label %178
    i64 2, label %10
    i64 3, label %58
    i64 4, label %62
    i64 5, label %67
  ]

10:                                               ; preds = %3
  %11 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 -1
  %13 = tail call zeroext i1 %11(%"struct.std::__1::pair.610"* dereferenceable(16) %12, %"struct.std::__1::pair.610"* dereferenceable(16) %0) #11
  br i1 %13, label %14, label %178

14:                                               ; preds = %10
  %15 = bitcast %"struct.std::__1::pair.610"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.std::__1::pair.610"* %12 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 -1, i32 1
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::AtomicString"* %19 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store i64 %26, i64* %22, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %41, %38, %14
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  store i64 %23, i64* %25, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %178, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %178

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %178

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 -1
  %61 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %59, %"struct.std::__1::pair.610"* %60, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %178

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 1
  %64 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 2
  %65 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %63, %"struct.std::__1::pair.610"* %64, %"struct.std::__1::pair.610"* %65, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %178

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 2
  %70 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 3
  %71 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %68, %"struct.std::__1::pair.610"* %69, %"struct.std::__1::pair.610"* %70, %"struct.std::__1::pair.610"* %71, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  br label %178

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 2
  %75 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 1
  %76 = tail call i32 @_ZNSt3__17__sort3IRPFbRKNS_4pairIPN3WTF10StringImplENS2_12AtomicStringEEES8_EPS6_EEjT0_SD_SD_T_(%"struct.std::__1::pair.610"* %0, %"struct.std::__1::pair.610"* %75, %"struct.std::__1::pair.610"* %74, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** dereferenceable(8) %2)
  %77 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %0, i64 3
  %78 = icmp eq %"struct.std::__1::pair.610"* %77, %1
  br i1 %78, label %178, label %79

79:                                               ; preds = %73
  %80 = bitcast <2 x i64>* %4 to i8*
  %81 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  %83 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %5, i64 0, i32 1
  %84 = bitcast %"class.WTF::AtomicString"* %83 to i64*
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %79, %171
  %87 = phi %"struct.std::__1::pair.610"* [ %77, %79 ], [ %173, %171 ]
  %88 = phi i32 [ 0, %79 ], [ %172, %171 ]
  %89 = phi %"struct.std::__1::pair.610"* [ %74, %79 ], [ %87, %171 ]
  %90 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %91 = call zeroext i1 %90(%"struct.std::__1::pair.610"* dereferenceable(16) %87, %"struct.std::__1::pair.610"* dereferenceable(16) %89) #11
  br i1 %91, label %92, label %171

92:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %93 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %87, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = bitcast %"struct.std::__1::pair.610"* %87 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  store <2 x i64> %95, <2 x i64>* %4, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  br label %96

96:                                               ; preds = %126, %92
  %97 = phi %"struct.std::__1::pair.610"* [ %87, %92 ], [ %98, %126 ]
  %98 = phi %"struct.std::__1::pair.610"* [ %89, %92 ], [ %128, %126 ]
  %99 = bitcast %"struct.std::__1::pair.610"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"struct.std::__1::pair.610"* %97 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %98, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %97, i64 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.WTF::AtomicString"* %102 to i64*
  %106 = load i64, i64* %105, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %104, align 8
  %107 = bitcast %"class.WTF::AtomicString"* %103 to i64*
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #11
  br label %124

124:                                              ; preds = %96, %120, %123
  %125 = icmp eq %"struct.std::__1::pair.610"* %98, %0
  br i1 %125, label %130, label %126

126:                                              ; preds = %124
  %127 = load i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)*, i1 (%"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*)** %2, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %98, i64 -1
  %129 = call zeroext i1 %127(%"struct.std::__1::pair.610"* nonnull dereferenceable(16) %5, %"struct.std::__1::pair.610"* dereferenceable(16) %128) #11
  br i1 %129, label %96, label %130

130:                                              ; preds = %124, %126
  %131 = phi %"struct.std::__1::pair.610"* [ %98, %126 ], [ %0, %124 ]
  %132 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.WTF::AtomicString"* %102 to i64*
  %134 = bitcast %"struct.std::__1::pair.610"* %131 to i64*
  %135 = load i64, i64* %82, align 16
  store i64 %135, i64* %134, align 8
  %136 = load i64, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %136, i64* %133, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #11
  br label %152

152:                                              ; preds = %130, %148, %151
  %153 = add i32 %88, 1
  %154 = icmp eq i32 %153, 8
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #11
  br label %170

170:                                              ; preds = %152, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  br i1 %154, label %175, label %171

171:                                              ; preds = %170, %86
  %172 = phi i32 [ %153, %170 ], [ %88, %86 ]
  %173 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %87, i64 1
  %174 = icmp eq %"struct.std::__1::pair.610"* %173, %1
  br i1 %174, label %178, label %86

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %87, i64 1
  %177 = icmp eq %"struct.std::__1::pair.610"* %176, %1
  br label %178

178:                                              ; preds = %171, %175, %73, %57, %54, %42, %10, %3, %3, %67, %62, %58
  %179 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %58 ], [ true, %3 ], [ true, %3 ], [ true, %10 ], [ true, %42 ], [ true, %54 ], [ true, %57 ], [ true, %73 ], [ %177, %175 ], [ true, %171 ]
  ret i1 %179
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([260 x i8], [260 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapIjNS1_6MemberINS1_31PresentationAttributeCacheEntryEEENS_13AlreadyHashedENS_10HashTraitsIjEENS7_IS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.613"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #11
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.614"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.614"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 72
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS6_10HashTraitsIjEENS8_IS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashMap.618"**
  %5 = load %"class.blink::HeapHashMap.618"*, %"class.blink::HeapHashMap.618"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::HeapHashMap.618"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashMap.618"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEN3WTF13AlreadyHashedENS5_10HashTraitsIjEENS7_IS4_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.WTF::Vector.607"* @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEEaSERKS8_(%"class.WTF::Vector.607"*, %"class.WTF::Vector.607"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.607"* %1, %0
  br i1 %3, label %222, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"struct.std::__1::pair.610"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %18, i64 1
  %37 = icmp eq %"struct.std::__1::pair.610"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %112

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %110

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %85, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"struct.std::__1::pair.610"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %53, i64 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %53, i64 1
  %72 = icmp eq %"struct.std::__1::pair.610"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %78 = ptrtoint i8* %77 to i64
  %79 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  store i32 3, i32* %40, align 8
  %80 = bitcast i8* %77 to %"struct.std::__1::pair.610"*
  %81 = icmp eq %"struct.std::__1::pair.610"* %76, %80
  br i1 %81, label %85, label %82, !prof !4

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"* %83, %"struct.std::__1::pair.610"* %76) #11
  %84 = load i32, i32* %40, align 8
  br label %85

85:                                               ; preds = %43, %74, %82
  %86 = phi i32 [ 0, %43 ], [ 3, %74 ], [ %84, %82 ]
  %87 = load i32, i32* %7, align 4
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %89, label %110, !prof !4

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %90, align 8
  %92 = icmp eq %"struct.std::__1::pair.610"* %91, null
  br i1 %92, label %93, label %109

93:                                               ; preds = %89
  %94 = icmp ugt i32 %87, 3
  br i1 %94, label %95, label %103

95:                                               ; preds = %93
  %96 = zext i32 %87 to i64
  %97 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEmm(i64 %96) #11
  %98 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %97, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #11
  %99 = ptrtoint i8* %98 to i64
  %100 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = lshr i64 %97, 4
  %102 = trunc i64 %101 to i32
  br label %107

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 1, i64 0
  %105 = ptrtoint i8* %104 to i64
  %106 = bitcast %"class.WTF::Vector.607"* %0 to i64*
  store atomic i64 %105, i64* %106 monotonic, align 8
  br label %107

107:                                              ; preds = %103, %95
  %108 = phi i32 [ 3, %103 ], [ %102, %95 ]
  store i32 %108, i32* %40, align 8
  br label %110

109:                                              ; preds = %89
  tail call void @_ZN3WTF6VectorINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.607"* %0, i32 %87) #11
  br label %110

110:                                              ; preds = %39, %85, %107, %109
  %111 = load i32, i32* %5, align 4
  br label %112

112:                                              ; preds = %110, %38
  %113 = phi i32 [ %111, %110 ], [ %8, %38 ]
  %114 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %1, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %114, align 8
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %115, i64 %116
  %118 = getelementptr inbounds %"class.WTF::Vector.607", %"class.WTF::Vector.607"* %0, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %118, align 8
  %120 = icmp eq i32 %113, 0
  br i1 %120, label %175, label %121

121:                                              ; preds = %112, %167
  %122 = phi %"struct.std::__1::pair.610"* [ %169, %167 ], [ %119, %112 ]
  %123 = phi %"struct.std::__1::pair.610"* [ %168, %167 ], [ %115, %112 ]
  %124 = bitcast %"struct.std::__1::pair.610"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"struct.std::__1::pair.610"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %122, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %123, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %121
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::AtomicString"* %127 to i64*
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %127, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %123, i64 1
  %169 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %122, i64 1
  %170 = icmp eq %"struct.std::__1::pair.610"* %168, %117
  br i1 %170, label %171, label %121

171:                                              ; preds = %167
  %172 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %114, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %118, align 8
  br label %175

175:                                              ; preds = %171, %112
  %176 = phi %"struct.std::__1::pair.610"* [ %174, %171 ], [ %119, %112 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %112 ]
  %178 = phi %"struct.std::__1::pair.610"* [ %172, %171 ], [ %115, %112 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %220, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %176, i64 %179
  %186 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %214
  %188 = phi %"struct.std::__1::pair.610"* [ %215, %214 ], [ %185, %184 ]
  %189 = phi %"struct.std::__1::pair.610"* [ %216, %214 ], [ %186, %184 ]
  %190 = bitcast %"struct.std::__1::pair.610"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"struct.std::__1::pair.610"* %188 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %188, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %195, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %196, label %214, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i33
  %206 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %205, i33 1) #11
  %207 = extractvalue { i33, i1 } %206, 1
  %208 = extractvalue { i33, i1 } %206, 0
  %209 = icmp slt i33 %208, 0
  %210 = or i1 %207, %209
  br i1 %210, label %211, label %212, !prof !2

211:                                              ; preds = %202
  tail call void @llvm.trap() #11
  unreachable

212:                                              ; preds = %202
  %213 = trunc i33 %208 to i32
  store i32 %213, i32* %203, align 4
  br label %214

214:                                              ; preds = %212, %197, %187
  %215 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %188, i64 1
  %216 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %189, i64 1
  %217 = icmp eq %"struct.std::__1::pair.610"* %216, %182
  br i1 %217, label %218, label %187

218:                                              ; preds = %214
  %219 = load i32, i32* %7, align 4
  br label %220

220:                                              ; preds = %218, %175
  %221 = phi i32 [ %219, %218 ], [ %177, %175 ]
  store i32 %221, i32* %5, align 4
  br label %222

222:                                              ; preds = %2, %220
  ret %"class.WTF::Vector.607"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.613"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjDnEENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.622"*, i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.613"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* null)
  %9 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.613"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %11, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %66, label %23

23:                                               ; preds = %10
  %24 = xor i32 %16, -1
  %25 = lshr i32 %16, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %23, %44
  %38 = phi i32 [ %21, %23 ], [ %53, %44 ]
  %39 = phi %"struct.WTF::KeyValuePair.613"* [ %19, %23 ], [ %51, %44 ]
  %40 = phi %"struct.WTF::KeyValuePair.613"* [ null, %23 ], [ %46, %44 ]
  %41 = phi i64 [ %18, %23 ], [ %50, %44 ]
  %42 = phi i64 [ 0, %23 ], [ %48, %44 ]
  %43 = icmp eq i32 %38, %16
  br i1 %43, label %119, label %44

44:                                               ; preds = %37
  %45 = icmp eq i32 %38, -1
  %46 = select i1 %45, %"struct.WTF::KeyValuePair.613"* %39, %"struct.WTF::KeyValuePair.613"* %40
  %47 = icmp eq i64 %42, 0
  %48 = select i1 %47, i64 %36, i64 %42
  %49 = add i64 %48, %41
  %50 = and i64 %49, %15
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %37

55:                                               ; preds = %44
  %56 = icmp eq %"struct.WTF::KeyValuePair.613"* %46, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = bitcast %"struct.WTF::KeyValuePair.613"* %46 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %58, i64 16) #11
  %59 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 2147483647
  %62 = and i32 %61, 2147483647
  %63 = and i32 %60, -2147483648
  %64 = or i32 %62, %63
  store i32 %64, i32* %59, align 8
  %65 = load i32, i32* %1, align 4
  br label %66

66:                                               ; preds = %10, %55, %57
  %67 = phi i32 [ %65, %57 ], [ %16, %55 ], [ %16, %10 ]
  %68 = phi %"struct.WTF::KeyValuePair.613"* [ %46, %57 ], [ %51, %55 ], [ %19, %10 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %68, i64 0, i32 0
  store i32 %67, i32* %69, align 8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %68, i64 0, i32 1
  %71 = bitcast %"class.blink::Member.614"* %70 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %107, label %74

74:                                               ; preds = %66
  %75 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %76 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %75, i64 0, i32 1
  %77 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %76) #11
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %74
  %80 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %76, i8* %80) #11
  br label %81

81:                                               ; preds = %79, %74
  %82 = phi i8* [ %80, %79 ], [ %77, %74 ]
  %83 = bitcast i8* %82 to %"class.blink::ThreadState"**
  %84 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %84, i64 0, i32 9
  %86 = load i8, i8* %85, align 1, !range !5
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %107, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %84, i64 0, i32 13
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %84, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %92, align 8
  %94 = load atomic i64, i64* %71 monotonic, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %93, i64 0, i32 0, i32 0
  %98 = inttoptr i64 %94 to i8*
  %99 = bitcast %"class.blink::MarkingVisitor"* %93 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, i64 5
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, align 8
  tail call void %102(%"class.blink::Visitor"* %97, i8* nonnull %98, i8* %98, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  %103 = load i64, i64* %89, align 8
  br label %104

104:                                              ; preds = %96, %88
  %105 = phi i64 [ %91, %88 ], [ %103, %96 ]
  %106 = add i64 %105, -1
  store i64 %106, i64* %89, align 8
  br label %107

107:                                              ; preds = %66, %81, %104
  %108 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* %68)
  br label %119

119:                                              ; preds = %37, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %37 ]
  %121 = phi %"struct.WTF::KeyValuePair.613"* [ %68, %107 ], [ %118, %117 ], [ %39, %37 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair.613"*, i8 } undef, %"struct.WTF::KeyValuePair.613"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair.613"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair.613"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.622"*, %"struct.WTF::KeyValuePair.613"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.622"* %0, i32 %35, %"struct.WTF::KeyValuePair.613"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.613"*
  %44 = call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* %43, i32 %40, %"struct.WTF::KeyValuePair.613"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.613"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.613"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.622"*, i32, %"struct.WTF::KeyValuePair.613"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.613"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.613"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.613"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.613"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.622"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.613"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* %42, i32 %1, %"struct.WTF::KeyValuePair.613"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.613"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.613"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.613"* %64, %"struct.WTF::KeyValuePair.613"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.613"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.614"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.614"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.613"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.613"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.622"*, %"struct.WTF::KeyValuePair.613"*, i32, %"struct.WTF::KeyValuePair.613"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.613"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %10, align 8
  br label %37

14:                                               ; preds = %111, %4
  %15 = phi %"struct.WTF::KeyValuePair.613"* [ null, %4 ], [ %114, %111 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.613"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.622"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair.613"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.613"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair.613"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair.613"* %15

37:                                               ; preds = %9, %111
  %38 = phi i32 [ %7, %9 ], [ %112, %111 ]
  %39 = phi %"struct.WTF::KeyValuePair.613"* [ %13, %9 ], [ %113, %111 ]
  %40 = phi %"struct.WTF::KeyValuePair.613"* [ null, %9 ], [ %114, %111 ]
  %41 = phi i32 [ 0, %9 ], [ %115, %111 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %111, label %47

47:                                               ; preds = %37
  %48 = and i32 %44, %11
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %1, i64 %49
  %51 = ptrtoint %"struct.WTF::KeyValuePair.613"* %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %50, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %47
  %56 = xor i32 %44, -1
  %57 = lshr i32 %44, 23
  %58 = add i32 %57, %56
  %59 = shl i32 %58, 12
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 7
  %62 = xor i32 %61, %60
  %63 = shl i32 %62, 2
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 20
  %66 = xor i32 %65, %64
  %67 = or i32 %66, 1
  %68 = zext i32 %67 to i64
  br label %78

69:                                               ; preds = %85
  %70 = ptrtoint %"struct.WTF::KeyValuePair.613"* %92 to i64
  %71 = inttoptr i64 %87 to %"struct.WTF::KeyValuePair.613"*
  br label %72

72:                                               ; preds = %69, %47
  %73 = phi i64 [ %70, %69 ], [ %51, %47 ]
  %74 = phi %"struct.WTF::KeyValuePair.613"* [ %71, %69 ], [ null, %47 ]
  %75 = icmp eq %"struct.WTF::KeyValuePair.613"* %74, null
  %76 = ptrtoint %"struct.WTF::KeyValuePair.613"* %74 to i64
  %77 = select i1 %75, i64 %73, i64 %76
  br label %97

78:                                               ; preds = %85, %55
  %79 = phi i64 [ 0, %55 ], [ %87, %85 ]
  %80 = phi i32 [ %53, %55 ], [ %95, %85 ]
  %81 = phi i64 [ %51, %55 ], [ %93, %85 ]
  %82 = phi i64 [ %49, %55 ], [ %91, %85 ]
  %83 = phi i64 [ 0, %55 ], [ %89, %85 ]
  %84 = icmp eq i32 %80, %44
  br i1 %84, label %97, label %85

85:                                               ; preds = %78
  %86 = icmp eq i32 %80, -1
  %87 = select i1 %86, i64 %81, i64 %79
  %88 = icmp eq i64 %83, 0
  %89 = select i1 %88, i64 %68, i64 %83
  %90 = add i64 %89, %82
  %91 = and i64 %90, %12
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %1, i64 %91
  %93 = ptrtoint %"struct.WTF::KeyValuePair.613"* %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %92, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %69, label %78

97:                                               ; preds = %78, %72
  %98 = phi i64 [ %77, %72 ], [ %81, %78 ]
  %99 = inttoptr i64 %98 to %"struct.WTF::KeyValuePair.613"*
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %99, i64 0, i32 0
  store i32 %44, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %99, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %39, i64 %42, i32 1
  %103 = bitcast %"class.blink::Member.614"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.blink::Member.614"* %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %10, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %106, i64 %42
  %108 = icmp eq %"struct.WTF::KeyValuePair.613"* %107, %3
  %109 = select i1 %108, %"struct.WTF::KeyValuePair.613"* %99, %"struct.WTF::KeyValuePair.613"* %40
  %110 = load i32, i32* %6, align 8
  br label %111

111:                                              ; preds = %37, %97
  %112 = phi i32 [ %38, %37 ], [ %110, %97 ]
  %113 = phi %"struct.WTF::KeyValuePair.613"* [ %39, %37 ], [ %106, %97 ]
  %114 = phi %"struct.WTF::KeyValuePair.613"* [ %40, %37 ], [ %109, %97 ]
  %115 = add i32 %41, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_13AlreadyHashedENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSB_IS6_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISH_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_13AlreadyHashedENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSB_IS6_EEEESC_NS_13HeapAllocatorEEEE14AllocateObjectISH_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([429 x i8], [429 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIjNS_12KeyValuePairIjNS1_6MemberINS1_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS7_EEEESD_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_31PresentationAttributeCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_13AlreadyHashedENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSC_IS7_EEEESD_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_31PresentationAttributeCacheEntryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_31PresentationAttributeCacheEntryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink31PresentationAttributeCacheEntryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_31PresentationAttributeCacheEntryEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = getelementptr inbounds i8, i8* %0, i64 20
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = bitcast i8* %2 to %"struct.std::__1::pair.610"**
  br i1 %6, label %34, label %8, !prof !2

8:                                                ; preds = %1
  %9 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %7, align 8
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %9, i64 %10
  br label %12

12:                                               ; preds = %30, %8
  %13 = phi %"struct.std::__1::pair.610"* [ %31, %30 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %29, %26, %12
  %31 = getelementptr inbounds %"struct.std::__1::pair.610", %"struct.std::__1::pair.610"* %13, i64 1
  %32 = icmp eq %"struct.std::__1::pair.610"* %31, %11
  br i1 %32, label %33, label %12

33:                                               ; preds = %30
  store i32 0, i32* %4, align 4
  br label %34

34:                                               ; preds = %33, %1
  %35 = load %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"** %7, align 8
  %36 = getelementptr inbounds i8, i8* %0, i64 24
  %37 = bitcast i8* %36 to %"struct.std::__1::pair.610"*
  %38 = icmp eq %"struct.std::__1::pair.610"* %35, %37
  br i1 %38, label %41, label %39, !prof !4

39:                                               ; preds = %34
  %40 = bitcast i8* %2 to %"class.WTF::VectorBuffer.608"*
  tail call void @_ZN3WTF12VectorBufferINSt3__14pairIPNS_10StringImplENS_12AtomicStringEEELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS6_(%"class.WTF::VectorBuffer.608"* %40, %"struct.std::__1::pair.610"* %35) #11
  br label %41

41:                                               ; preds = %34, %39
  store %"struct.std::__1::pair.610"* null, %"struct.std::__1::pair.610"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_31PresentationAttributeCacheEntryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.613"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjRPS4_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.622"*, i32* dereferenceable(4), %"struct.blink::PresentationAttributeCacheEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.613"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* null)
  %9 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.613"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %11, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %66, label %23

23:                                               ; preds = %10
  %24 = xor i32 %16, -1
  %25 = lshr i32 %16, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %23, %44
  %38 = phi i32 [ %21, %23 ], [ %53, %44 ]
  %39 = phi %"struct.WTF::KeyValuePair.613"* [ %19, %23 ], [ %51, %44 ]
  %40 = phi %"struct.WTF::KeyValuePair.613"* [ null, %23 ], [ %46, %44 ]
  %41 = phi i64 [ %18, %23 ], [ %50, %44 ]
  %42 = phi i64 [ 0, %23 ], [ %48, %44 ]
  %43 = icmp eq i32 %38, %16
  br i1 %43, label %127, label %44

44:                                               ; preds = %37
  %45 = icmp eq i32 %38, -1
  %46 = select i1 %45, %"struct.WTF::KeyValuePair.613"* %39, %"struct.WTF::KeyValuePair.613"* %40
  %47 = icmp eq i64 %42, 0
  %48 = select i1 %47, i64 %36, i64 %42
  %49 = add i64 %48, %41
  %50 = and i64 %49, %15
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %37

55:                                               ; preds = %44
  %56 = icmp eq %"struct.WTF::KeyValuePair.613"* %46, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = bitcast %"struct.WTF::KeyValuePair.613"* %46 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %58, i64 16) #11
  %59 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 2147483647
  %62 = and i32 %61, 2147483647
  %63 = and i32 %60, -2147483648
  %64 = or i32 %62, %63
  store i32 %64, i32* %59, align 8
  %65 = load i32, i32* %1, align 4
  br label %66

66:                                               ; preds = %10, %55, %57
  %67 = phi i32 [ %65, %57 ], [ %16, %55 ], [ %16, %10 ]
  %68 = phi %"struct.WTF::KeyValuePair.613"* [ %46, %57 ], [ %51, %55 ], [ %19, %10 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %68, i64 0, i32 0
  store i32 %67, i32* %69, align 8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %68, i64 0, i32 1
  %71 = load %"struct.blink::PresentationAttributeCacheEntry"*, %"struct.blink::PresentationAttributeCacheEntry"** %2, align 8
  %72 = ptrtoint %"struct.blink::PresentationAttributeCacheEntry"* %71 to i64
  %73 = bitcast %"class.blink::Member.614"* %70 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %66
  %77 = bitcast %"struct.blink::PresentationAttributeCacheEntry"* %71 to i8*
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #11
  br label %79

79:                                               ; preds = %66, %76
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %115, label %82

82:                                               ; preds = %79
  %83 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %84 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %83, i64 0, i32 1
  %85 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %84) #11
  %86 = icmp eq i8* %85, null
  br i1 %86, label %87, label %89, !prof !2

87:                                               ; preds = %82
  %88 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %84, i8* %88) #11
  br label %89

89:                                               ; preds = %87, %82
  %90 = phi i8* [ %88, %87 ], [ %85, %82 ]
  %91 = bitcast i8* %90 to %"class.blink::ThreadState"**
  %92 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %92, i64 0, i32 9
  %94 = load i8, i8* %93, align 1, !range !5
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %115, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %92, i64 0, i32 13
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %92, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %100, align 8
  %102 = load atomic i64, i64* %73 monotonic, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %101, i64 0, i32 0, i32 0
  %106 = inttoptr i64 %102 to i8*
  %107 = bitcast %"class.blink::MarkingVisitor"* %101 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, i64 5
  %110 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %109, align 8
  tail call void %110(%"class.blink::Visitor"* %105, i8* nonnull %106, i8* %106, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31PresentationAttributeCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  %111 = load i64, i64* %97, align 8
  br label %112

112:                                              ; preds = %104, %96
  %113 = phi i64 [ %99, %96 ], [ %111, %104 ]
  %114 = add i64 %113, -1
  store i64 %114, i64* %97, align 8
  br label %115

115:                                              ; preds = %79, %89, %112
  %116 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.WTF::HashTable.622", %"class.WTF::HashTable.622"* %0, i64 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = add i32 %120, %118
  %122 = shl i32 %121, 1
  %123 = load i32, i32* %12, align 8
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %127, label %125

125:                                              ; preds = %115
  %126 = tail call %"struct.WTF::KeyValuePair.613"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_31PresentationAttributeCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_13AlreadyHashedENS_18HashMapValueTraitsINS_10HashTraitsIjEENSA_IS5_EEEESB_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.622"* %0, %"struct.WTF::KeyValuePair.613"* %68)
  br label %127

127:                                              ; preds = %37, %115, %125
  %128 = phi i8 [ 1, %115 ], [ 1, %125 ], [ 0, %37 ]
  %129 = phi %"struct.WTF::KeyValuePair.613"* [ %68, %115 ], [ %126, %125 ], [ %39, %37 ]
  %130 = insertvalue { %"struct.WTF::KeyValuePair.613"*, i8 } undef, %"struct.WTF::KeyValuePair.613"* %129, 0
  %131 = insertvalue { %"struct.WTF::KeyValuePair.613"*, i8 } %130, i8 %128, 1
  ret { %"struct.WTF::KeyValuePair.613"*, i8 } %131
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
