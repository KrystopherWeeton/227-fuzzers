; ModuleID = '../../third_party/skia/src/sksl/SkSLOutputStream.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLOutputStream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::OutputStream" = type { i32 (...)** }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL12OutputStream11writeStringERKNS_6StringE(%"class.SkSL::OutputStream"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.SkSL::String"* %1 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = bitcast %"class.SkSL::OutputStream"* %0 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %16, i64 3
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %0, i8* %13, i64 %14) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"*, i8* nocapture readonly, ...) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #2
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  call void @_ZN4SkSL12OutputStream12appendVAListEPKcP13__va_list_tag(%"class.SkSL::OutputStream"* %0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL12OutputStream12appendVAListEPKcP13__va_list_tag(%"class.SkSL::OutputStream"*, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #0 align 2 {
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 1024, i1 false)
  %7 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #2
  %8 = bitcast %struct.__va_list_tag* %2 to i8*
  %9 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  call void @llvm.va_copy(i8* nonnull %7, i8* %8)
  %10 = call i32 @vsnprintf(i8* nonnull %6, i64 1024, i8* %1, %struct.__va_list_tag* %2) #2
  %11 = icmp sgt i32 %10, 1024
  br i1 %11, label %12, label %23

12:                                               ; preds = %3
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %14 = add nuw nsw i32 %10, 1
  %15 = sext i32 %14 to i64
  %16 = call i8* @_Znam(i64 %15) #6
  %17 = call i32 @vsnprintf(i8* nonnull %16, i64 %15, i8* %1, %struct.__va_list_tag* nonnull %13) #2
  %18 = sext i32 %10 to i64
  %19 = bitcast %"class.SkSL::OutputStream"* %0 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %20, i64 3
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, align 8
  call void %22(%"class.SkSL::OutputStream"* %0, i8* nonnull %16, i64 %18) #2
  call void @_ZdaPv(i8* nonnull %16) #6
  br label %29

23:                                               ; preds = %3
  %24 = sext i32 %10 to i64
  %25 = bitcast %"class.SkSL::OutputStream"* %0 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %26, i64 3
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %0, i8* nonnull %6, i64 %24) #2
  br label %29

29:                                               ; preds = %23, %12
  call void @llvm.va_end(i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #2

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
