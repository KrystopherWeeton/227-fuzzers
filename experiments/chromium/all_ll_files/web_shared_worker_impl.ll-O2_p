; ModuleID = '../../third_party/blink/renderer/core/exported/web_shared_worker_impl.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_shared_worker_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.absl::nullopt_t" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.172", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1160", i64 }
%"class.std::__1::vector.1160" = type { %"class.std::__1::__vector_base.1161" }
%"class.std::__1::__vector_base.1161" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1162" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WebSharedWorkerImpl" = type { %"class.blink::WebSharedWorker", %"class.blink::Persistent", %"class.std::__1::unique_ptr.176", %"class.mojo::Remote", %"class.blink::WebSharedWorkerClient"*, %"class.WTF::Vector.832", %class.scoped_refptr.396, i8, i8, %"class.base::WeakPtrFactory.839" }
%"class.blink::WebSharedWorker" = type { i32 (...)** }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SharedWorkerReportingProxy"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SharedWorkerReportingProxy" = type { %"class.blink::WorkerReportingProxy", %"class.blink::WebSharedWorkerImpl"*, %"class.blink::Member" }
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ParentExecutionContextTaskRunners"* }
%"class.blink::ParentExecutionContextTaskRunners" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.5" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::SharedWorkerThread"* }
%"class.blink::SharedWorkerThread" = type { %"class.blink::WorkerThread", %"class.std::__1::unique_ptr.654", %"class.util::TokenType", %"class.base::UnguessableToken" }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.179, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.396, %"class.std::__1::unique_ptr.402", %"class.WTF::HashMap", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent.435", %"class.blink::CrossThreadPersistent.641", %class.scoped_refptr.643, %"class.blink::TaskHandle", %"class.WTF::HashSet.645", %"class.WTF::HashSet.649" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.179 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.180" }
%"class.WTF::Deque.180" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"class.std::__1::unique_ptr.185"*, i32, i32 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.194" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr.188 }
%class.scoped_refptr.188 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.189" }
%"struct.std::__1::atomic.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i32 }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.197", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.240", %"class.crdtp::detail::PtrMaybe.260", %"class.crdtp::detail::PtrMaybe.270", %"class.crdtp::detail::PtrMaybe.280", %"class.crdtp::detail::PtrMaybe.301", %"class.crdtp::detail::PtrMaybe.311", %"class.crdtp::detail::PtrMaybe.321", %"class.crdtp::detail::PtrMaybe.331", %"class.crdtp::detail::PtrMaybe.360", %"class.crdtp::detail::PtrMaybe.370", %"class.crdtp::detail::PtrMaybe.380" }
%"class.crdtp::ProtocolObject.197" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.203", %"class.crdtp::detail::PtrMaybe.206", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.227" }
%"class.crdtp::ProtocolObject.203" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.206" = type { %"class.std::__1::unique_ptr.207" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.210", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.210" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.227" = type { %"class.std::__1::unique_ptr.228" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.231", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.231" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.240" = type { %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.244", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.227", %"class.crdtp::detail::PtrMaybe.247" }
%"class.crdtp::ProtocolObject.244" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.247" = type { %"class.std::__1::unique_ptr.248" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.251", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.251" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.260" = type { %"class.std::__1::unique_ptr.261" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.264", %"class.std::__1::unique_ptr.228", %"class.crdtp::detail::PtrMaybe.247", %"class.crdtp::detail::PtrMaybe.247", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.264" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.270" = type { %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.274", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.248" }
%"class.crdtp::ProtocolObject.274" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.280" = type { %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.284", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.247", %"class.crdtp::detail::PtrMaybe.287", %"class.crdtp::detail::ValueMaybe.297" }
%"class.crdtp::ProtocolObject.284" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.287" = type { %"class.std::__1::unique_ptr.288" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.291", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.291" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.297" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.301" = type { %"class.std::__1::unique_ptr.302" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.305", %"class.std::__1::unique_ptr.288", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.305" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.311" = type { %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.315", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.297", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.315" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.321" = type { %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.325", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.325" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.331" = type { %"class.std::__1::unique_ptr.332" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.335", %"class.std::__1::unique_ptr.338", i8, %"class.std::__1::unique_ptr.228", %"class.crdtp::detail::PtrMaybe.287", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.347" }
%"class.crdtp::ProtocolObject.335" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.341", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.341" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.347" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.351", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.351" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.360" = type { %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.364", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.247", %"class.crdtp::detail::PtrMaybe.227", %"class.crdtp::detail::ValueMaybe.297", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.364" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.370" = type { %"class.std::__1::unique_ptr.371" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.374", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.374" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.380" = type { %"class.std::__1::unique_ptr.381" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.384", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.287" }
%"class.crdtp::ProtocolObject.384" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.417, %class.scoped_refptr.417, %class.scoped_refptr.417, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.426" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.405", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.409" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.410 }
%class.scoped_refptr.410 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.411", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.411" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.397" }
%"struct.std::__1::atomic.397" = type { %"struct.std::__1::__atomic_base.398" }
%"struct.std::__1::__atomic_base.398" = type { %"struct.std::__1::__atomic_base.399" }
%"struct.std::__1::__atomic_base.399" = type { %"struct.std::__1::__cxx_atomic_impl.400" }
%"struct.std::__1::__cxx_atomic_impl.400" = type { %"struct.std::__1::__cxx_atomic_base_impl.401" }
%"struct.std::__1::__cxx_atomic_base_impl.401" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.412" }
%"struct.std::__1::atomic.412" = type { %"struct.std::__1::__atomic_base.413" }
%"struct.std::__1::__atomic_base.413" = type { %"struct.std::__1::__atomic_base.414" }
%"struct.std::__1::__atomic_base.414" = type { %"struct.std::__1::__cxx_atomic_impl.415" }
%"struct.std::__1::__cxx_atomic_impl.415" = type { %"struct.std::__1::__cxx_atomic_base_impl.416" }
%"struct.std::__1::__cxx_atomic_base_impl.416" = type { i8 }
%class.scoped_refptr.417 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.426" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.430" }
%"class.blink::PersistentBase.430" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.431" }
%"struct.std::__1::atomic.431" = type { %"struct.std::__1::__atomic_base.432" }
%"struct.std::__1::__atomic_base.432" = type { %"struct.std::__1::__cxx_atomic_impl.433" }
%"struct.std::__1::__cxx_atomic_impl.433" = type { %"struct.std::__1::__cxx_atomic_base_impl.434" }
%"struct.std::__1::__cxx_atomic_base_impl.434" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistent.435" = type { %"class.blink::PersistentBase.436" }
%"class.blink::PersistentBase.436" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.602", %"class.std::__1::unique_ptr.614", %"class.blink::Member.620", %"class.blink::HeapHashSet.622", %class.scoped_refptr.629, %"class.blink::Member.631", %"class.blink::Member.633", i32, %"class.WTF::Vector.554", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.637" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.452" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445", [32 x i8] }
%"class.WTF::VectorBufferBase.445" = type { %"struct.std::__1::pair.446"*, i32, i32 }
%"struct.std::__1::pair.446" = type { %"class.WTF::AtomicString", %"class.blink::Member.447" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::HeapVector.449"* }
%"class.blink::HeapVector.449" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.WTF::Vector.455"* }
%"class.WTF::Vector.455" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.520", i32, i8, [3 x i8], %"class.blink::HeapVector.522", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.531", %"class.blink::Member.533", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.542", %"class.blink::Member.548", %"class.blink::Member.550", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.461" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.465" }
%"class.blink::Supplementable.465" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.466" }
%"class.blink::HeapHashMap.466" = type { %"class.WTF::HashMap.469" }
%"class.WTF::HashMap.469" = type { %"class.WTF::HashTable.470" }
%"class.WTF::HashTable.470" = type <{ %"struct.WTF::KeyValuePair.472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.472" = type { i8*, %"class.blink::Member.1640" }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::Supplement.1642"* }
%"class.blink::Supplement.1642" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1643" }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.473, %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.508", %"class.std::__1::unique_ptr.508", %"class.blink::Member.514", i32, [4 x i8], %"class.WTF::HashSet.516", i32, i32 }
%class.scoped_refptr.473 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.474 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.474 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.484", %"class.std::__1::map.495", %"class.std::__1::map.504"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.480 }
%union.anon.480 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.504" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.520", i32, i8, [3 x i8], %"class.blink::HeapVector.522", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.531", %"class.blink::Member.533", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.542", %"class.blink::Member.548", %"class.blink::Member.550", i8, [7 x i8] }>
%"class.WTF::HashSet.516" = type { %"class.WTF::HashTable.517" }
%"class.WTF::HashTable.517" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.522" = type { %"class.WTF::Vector.525" }
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527" }
%"class.WTF::VectorBufferBase.527" = type { %"class.blink::Member.528"*, i32, i32 }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.535", i32, i32 }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.533", i8, [7 x i8], %"class.WTF::Vector.554", %"class.blink::HeapVector.594", i8, [7 x i8], %"class.WTF::HashSet.516", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.594" = type { %"class.WTF::Vector.597" }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599" }
%"class.WTF::VectorBufferBase.599" = type { %"class.blink::Member.600"*, i32, i32 }
%"class.blink::Member.600" = type opaque
%"class.blink::CrossThreadPersistent.602" = type { %"class.blink::PersistentBase.603" }
%"class.blink::PersistentBase.603" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.606" }
%"class.blink::Supplementable.606" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.607" }
%"class.blink::HeapHashMap.607" = type { %"class.WTF::HashMap.610" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { i8*, %"class.blink::Member.1636" }
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1638" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.843", %"class.blink::Member.845", %"class.blink::Member.849", %class.scoped_refptr.396, %class.scoped_refptr.396, %"class.blink::Member.851", %"class.blink::Member.853", %"class.blink::Member.859", %"class.blink::Member.863", %"class.blink::Member.915", %"class.blink::HeapHashMap.917", %"class.blink::HeapHashSet.924", %"class.blink::HeapHashSet.924", %"class.blink::HeapHashMap.1111", %"class.blink::HeapVector.1118", %"class.blink::Member.1126", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1129", %"class.WTF::Vector.1136", %"class.blink::HeapHashSet.1142", %"class.blink::HeapHashSet.1142", %"class.std::__1::unique_ptr.1148", %"class.base::WeakPtr.908", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1157", i8, i8, %"class.base::WeakPtrFactory.1159" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.857" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.867", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.869", %"class.WTF::HashSet.874", i8, [3 x i8], i32, %"class.blink::HeapHashMap.878", %"class.std::__1::map.885", %"class.std::__1::map.896", %"class.std::__1::unique_ptr.905", %"class.blink::Member.853", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.912", %"class.mojo::InlinedStructPtr.914", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.869" = type { %"class.WTF::HashTable.870" }
%"class.WTF::HashTable.870" = type <{ %"struct.WTF::KeyValuePair.873"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.873" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.878" = type { %"class.WTF::HashMap.881" }
%"class.WTF::HashMap.881" = type { %"class.WTF::HashTable.882" }
%"class.WTF::HashTable.882" = type <{ %"struct.WTF::KeyValuePair.884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.884" = type opaque
%"class.std::__1::map.885" = type { %"class.std::__1::__tree.886" }
%"class.std::__1::__tree.886" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.896" = type { %"class.std::__1::__tree.897" }
%"class.std::__1::__tree.897" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.908", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.914" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.917" = type { %"class.WTF::HashMap.920" }
%"class.WTF::HashMap.920" = type { %"class.WTF::HashTable.921" }
%"class.WTF::HashTable.921" = type <{ %"struct.WTF::KeyValuePair.923"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.923" = type opaque
%"class.blink::HeapHashSet.924" = type { %"class.WTF::HashSet.927" }
%"class.WTF::HashSet.927" = type { %"class.WTF::HashTable.928" }
%"class.WTF::HashTable.928" = type <{ %"class.blink::WeakMember.930"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.934", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.960", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1053", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1086", %"class.blink::ResourceResponse", %class.scoped_refptr.1088, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.934" = type { %"class.absl::optional_internal::optional_data.935" }
%"class.absl::optional_internal::optional_data.935" = type { %"class.absl::optional_internal::optional_data_base.936" }
%"class.absl::optional_internal::optional_data_base.936" = type { %"class.absl::optional_internal::optional_data_dtor_base.937" }
%"class.absl::optional_internal::optional_data_dtor_base.937" = type { i8, %union.anon.938 }
%union.anon.938 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.945", i8, %"class.absl::optional.950", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.939" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::KURL"* }
%"class.absl::optional.945" = type { %"class.absl::optional_internal::optional_data.946" }
%"class.absl::optional_internal::optional_data.946" = type { %"class.absl::optional_internal::optional_data_base.947" }
%"class.absl::optional_internal::optional_data_base.947" = type { %"class.absl::optional_internal::optional_data_dtor_base.948" }
%"class.absl::optional_internal::optional_data_dtor_base.948" = type { i8, [7 x i8], %union.anon.949 }
%union.anon.949 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.950" = type { %"class.absl::optional_internal::optional_data.951" }
%"class.absl::optional_internal::optional_data.951" = type { %"class.absl::optional_internal::optional_data_base.952" }
%"class.absl::optional_internal::optional_data_base.952" = type { %"class.absl::optional_internal::optional_data_dtor_base.953" }
%"class.absl::optional_internal::optional_data_dtor_base.953" = type { i8, %union.anon.954 }
%union.anon.954 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.955", %"class.WTF::Vector.577" }
%"class.WTF::Vector.955" = type { %"class.WTF::VectorBuffer.956" }
%"class.WTF::VectorBuffer.956" = type { %"class.WTF::VectorBufferBase.957" }
%"class.WTF::VectorBufferBase.957" = type { i32*, i32, i32 }
%"class.WTF::Vector.577" = type { %"class.WTF::VectorBuffer.578" }
%"class.WTF::VectorBuffer.578" = type { %"class.WTF::VectorBufferBase.579" }
%"class.WTF::VectorBufferBase.579" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1049" }
%"class.WTF::HashMap.1049" = type { %"class.WTF::HashTable.1050" }
%"class.WTF::HashTable.1050" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type <{ %"class.blink::WeakMember.1659", i32, [4 x i8] }>
%"class.blink::WeakMember.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1661", [7 x i8], %"class.blink::Member.1124", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1661" = type { i8 }
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.931" }
%"class.blink::HeapHashSet.1053" = type { %"class.WTF::HashSet.1056" }
%"class.WTF::HashSet.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"class.blink::WeakMember.1059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1059" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1060", %"class.WTF::String", %"class.WTF::HashSet.1061", i8, i8, %class.scoped_refptr.1066, %class.scoped_refptr.1082, %class.scoped_refptr.1084 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1060" = type { i8 }
%"class.WTF::HashSet.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.std::__1::pair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1065" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1066 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1067", i32, i32, %"class.blink::Persistent.1069" }
%"class.WTF::RefCounted.1067" = type { %"class.base::RefCounted.1068" }
%"class.base::RefCounted.1068" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1069" = type { %"class.blink::PersistentBase.1070" }
%"class.blink::PersistentBase.1070" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1073" }
%"class.blink::HeapHashMap.1073" = type { %"class.WTF::HashMap.1076" }
%"class.WTF::HashMap.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"struct.WTF::KeyValuePair.1079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1079" = type { %"class.blink::WeakMember.1080", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::ScriptWrappable"* }
%class.scoped_refptr.1082 = type { %"class.base::RefCountedData.1083"* }
%"class.base::RefCountedData.1083" = type opaque
%class.scoped_refptr.1084 = type { %"class.base::RefCountedData.1085"* }
%"class.base::RefCountedData.1085" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1012" }
%"class.base::time_internal::TimeBase.1012" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.474, %class.scoped_refptr.474, %class.scoped_refptr.474, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.968, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.980", %"class.absl::optional.985", %"class.absl::optional.995", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1000", %"class.absl::optional.995", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.995", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1000", %"class.absl::optional.1005", i8, %class.scoped_refptr.1010 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.963" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.967" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.968 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.969", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.978, i8, %"class.url::Origin" }
%"class.base::RefCounted.969" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.188 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.970" }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.std::__1::unique_ptr.972"*, %"class.std::__1::unique_ptr.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.std::__1::unique_ptr.972"* }
%class.scoped_refptr.978 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.979", [4 x i8] }>
%"class.base::RefCountedThreadSafe.979" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.980" = type { %"class.absl::optional_internal::optional_data.981" }
%"class.absl::optional_internal::optional_data.981" = type { %"class.absl::optional_internal::optional_data_base.982" }
%"class.absl::optional_internal::optional_data_base.982" = type { %"class.absl::optional_internal::optional_data_dtor_base.983" }
%"class.absl::optional_internal::optional_data_dtor_base.983" = type { i8, %union.anon.984 }
%union.anon.984 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.985" = type { %"class.absl::optional_internal::optional_data.986" }
%"class.absl::optional_internal::optional_data.986" = type { %"class.absl::optional_internal::optional_data_base.987" }
%"class.absl::optional_internal::optional_data_base.987" = type { %"class.absl::optional_internal::optional_data_dtor_base.988" }
%"class.absl::optional_internal::optional_data_dtor_base.988" = type { i8, %union.anon.989 }
%union.anon.989 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.990", %"class.WTF::Vector.577", %"class.WTF::String" }
%"class.WTF::Vector.990" = type { %"class.WTF::VectorBuffer.991" }
%"class.WTF::VectorBuffer.991" = type { %"class.WTF::VectorBufferBase.992" }
%"class.WTF::VectorBufferBase.992" = type { %class.scoped_refptr.474*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.781", %"class.absl::optional.781" }
%"class.absl::optional.781" = type { %"class.absl::optional_internal::optional_data.782" }
%"class.absl::optional_internal::optional_data.782" = type { %"class.absl::optional_internal::optional_data_base.783" }
%"class.absl::optional_internal::optional_data_base.783" = type { %"class.absl::optional_internal::optional_data_dtor_base.784" }
%"class.absl::optional_internal::optional_data_dtor_base.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { %"class.base::TimeDelta" }
%"class.absl::optional.995" = type { %"class.absl::optional_internal::optional_data.996" }
%"class.absl::optional_internal::optional_data.996" = type { %"class.absl::optional_internal::optional_data_base.997" }
%"class.absl::optional_internal::optional_data_base.997" = type { %"class.absl::optional_internal::optional_data_dtor_base.998" }
%"class.absl::optional_internal::optional_data_dtor_base.998" = type { i8, %union.anon.999 }
%union.anon.999 = type { %"class.WTF::String" }
%"class.absl::optional.1000" = type { %"class.absl::optional_internal::optional_data.1001" }
%"class.absl::optional_internal::optional_data.1001" = type { %"class.absl::optional_internal::optional_data_base.1002" }
%"class.absl::optional_internal::optional_data_base.1002" = type { %"class.absl::optional_internal::optional_data_dtor_base.1003" }
%"class.absl::optional_internal::optional_data_dtor_base.1003" = type { i8, %union.anon.1004 }
%union.anon.1004 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1005" = type { %"class.absl::optional_internal::optional_data.1006" }
%"class.absl::optional_internal::optional_data.1006" = type { %"class.absl::optional_internal::optional_data_base.1007" }
%"class.absl::optional_internal::optional_data_base.1007" = type { %"class.absl::optional_internal::optional_data_dtor_base.1008" }
%"class.absl::optional_internal::optional_data_dtor_base.1008" = type { i8, %union.anon.1009 }
%union.anon.1009 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1010 = type { %"class.base::RefCountedData.1011"* }
%"class.base::RefCountedData.1011" = type { %"class.base::RefCountedThreadSafe.1650", %"class.base::internal::flat_tree.1651" }
%"class.base::RefCountedThreadSafe.1650" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1651" = type { %"class.std::__1::vector.1652" }
%"class.std::__1::vector.1652" = type { %"class.std::__1::__vector_base.1653" }
%"class.std::__1::__vector_base.1653" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { i32* }
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1013", %class.scoped_refptr.1028, %class.scoped_refptr.1029, %"struct.blink::CacheControlHeader", %"class.absl::optional.781", %"class.absl::optional.1030", %"class.absl::optional.1030", %"class.absl::optional.1030", i64, %"class.blink::KURL", %"class.WTF::Vector.1035", %"class.WTF::String", %"class.WTF::Vector.577", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1000", %"class.WTF::Vector.577", %"class.blink::KURL", %"class.absl::optional.1040" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1013" = type { %"class.absl::optional_internal::optional_data.1014" }
%"class.absl::optional_internal::optional_data.1014" = type { %"class.absl::optional_internal::optional_data_base.1015" }
%"class.absl::optional_internal::optional_data_base.1015" = type { %"class.absl::optional_internal::optional_data_dtor_base.1016" }
%"class.absl::optional_internal::optional_data_dtor_base.1016" = type { i8, %union.anon.1017 }
%union.anon.1017 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.577", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1018", %"class.WTF::Vector.1023" }
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020" }
%"class.WTF::VectorBufferBase.1020" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1028 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1029 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1030" = type { %"class.absl::optional_internal::optional_data.1031" }
%"class.absl::optional_internal::optional_data.1031" = type { %"class.absl::optional_internal::optional_data_base.1032" }
%"class.absl::optional_internal::optional_data_base.1032" = type { %"class.absl::optional_internal::optional_data_dtor_base.1033" }
%"class.absl::optional_internal::optional_data_dtor_base.1033" = type { i8, %union.anon.1034 }
%union.anon.1034 = type { %"class.base::Time" }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1040" = type { %"class.absl::optional_internal::optional_data.1041" }
%"class.absl::optional_internal::optional_data.1041" = type { %"class.absl::optional_internal::optional_data_base.1042" }
%"class.absl::optional_internal::optional_data_base.1042" = type { %"class.absl::optional_internal::optional_data_dtor_base.1043" }
%"class.absl::optional_internal::optional_data_dtor_base.1043" = type { i8, %union.anon.1044 }
%union.anon.1044 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1088 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1089", i64, %"class.WTF::Vector.1091", %"class.WTF::Vector.1096" }
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { i8*, i32, i32 }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %"class.std::__1::unique_ptr.1099"*, i32, i32 }
%"class.std::__1::unique_ptr.1099" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1102" }
%"class.std::__1::__tree.1102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.blink::HeapHashMap.1111" = type { %"class.WTF::HashMap.1114" }
%"class.WTF::HashMap.1114" = type { %"class.WTF::HashTable.1115" }
%"class.WTF::HashTable.1115" = type <{ %"struct.WTF::KeyValuePair.1117"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1117" = type opaque
%"class.blink::HeapVector.1118" = type { %"class.WTF::Vector.1121" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"class.blink::Member.1124"*, i32, i32 }
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.628", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.396, %"class.base::WeakPtrFactory.1128" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1128" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.628" = type { %"class.blink::MemberBase.621" }
%"class.blink::HeapHashMap.1129" = type { %"class.WTF::HashMap.1132" }
%"class.WTF::HashMap.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"struct.WTF::KeyValuePair.1135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1135" = type opaque
%"class.WTF::Vector.1136" = type { %"class.WTF::VectorBuffer.1137" }
%"class.WTF::VectorBuffer.1137" = type { %"class.WTF::VectorBufferBase.1138" }
%"class.WTF::VectorBufferBase.1138" = type { %class.scoped_refptr.1139*, i32, i32 }
%class.scoped_refptr.1139 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1142" = type { %"class.WTF::HashSet.1145" }
%"class.WTF::HashSet.1145" = type { %"class.WTF::HashTable.1146" }
%"class.WTF::HashTable.1146" = type <{ %"class.blink::Member.1086"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.WTF::HashSet.1151"* }
%"class.WTF::HashSet.1151" = type opaque
%"class.base::WeakPtr.908" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.740 }
%class.scoped_refptr.740 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1155" }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1159" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.622" = type { %"class.WTF::HashSet.625" }
%"class.WTF::HashSet.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"class.blink::WeakMember.628"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.629 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.630", [4 x i8] }>
%"class.base::RefCounted.630" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.557" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.560", %"class.WTF::HashMap.567", %"class.WTF::HashMap.572", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.577", i32, %"class.mojo::StructPtr.582", %"class.WTF::Vector.577" }
%"class.mojo::StructPtr.560" = type { %"class.std::__1::unique_ptr.561" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.571" = type opaque
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.576" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.582" = type { %"class.std::__1::unique_ptr.583" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.577", i8, i8, [6 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.635", i32, [4 x i8] }>
%"class.std::__1::bitset.635" = type { %"class.std::__1::__bitset.636" }
%"class.std::__1::__bitset.636" = type { [25 x i64] }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.643 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.645" = type { %"class.WTF::HashTable.646" }
%"class.WTF::HashTable.646" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"class.std::__1::unique_ptr.653"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.653" = type opaque
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.blink::WorkerBackingThread"* }
%"class.blink::WorkerBackingThread" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.826" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.663, %"class.std::__1::unique_ptr.776", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.665, i32 }>
%class.scoped_refptr.663 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.665, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.742", %"class.absl::optional.747", %"class.absl::optional.700", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.767", i8, [7 x i8], %class.scoped_refptr.665, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.664" }>
%"class.base::RefCountedThreadSafe.664" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.672", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.678" }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.678" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.665, %"class.std::__1::unique_ptr.681", %"class.absl::optional.690", %"struct.std::__1::atomic.172", i8, i8, i8, i8, i32, i32, %"class.absl::optional.700", %"class.std::__1::unique_ptr.705", i8, i64, %class.scoped_refptr.738, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.741" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.680", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.680" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.665, i8, %"class.mojo::ScopedHandleBase.684", %class.scoped_refptr.685, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.686" }
%"class.mojo::ScopedHandleBase.684" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.685 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.686" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.690" = type { %"class.absl::optional_internal::optional_data.691" }
%"class.absl::optional_internal::optional_data.691" = type { %"class.absl::optional_internal::optional_data_base.692" }
%"class.absl::optional_internal::optional_data_base.692" = type { %"class.absl::optional_internal::optional_data_dtor_base.693" }
%"class.absl::optional_internal::optional_data_dtor_base.693" = type { i8, %union.anon.694 }
%union.anon.694 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.695", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.695" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.708", i8, i64, %class.scoped_refptr.709, %class.scoped_refptr.734 }
%"class.base::RepeatingCallback.708" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.709 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.710", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.712", %"class.std::__1::map.723", i8, [7 x i8] }>
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.712" = type { %"class.std::__1::__tree.713" }
%"class.std::__1::__tree.713" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.723" = type { %"class.std::__1::__tree.724" }
%"class.std::__1::__tree.724" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%class.scoped_refptr.734 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.738 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.739 }
%class.scoped_refptr.739 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.840", [4 x i8], %"class.base::RepeatingCallback.779", %class.scoped_refptr.665, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.189", [4 x i8] }>
%"class.base::RefCountedThreadSafe.840" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.779" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, %union.anon.746 }
%union.anon.746 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, [7 x i8], %union.anon.751 }
%union.anon.751 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.700" = type { %"class.absl::optional_internal::optional_data.701" }
%"class.absl::optional_internal::optional_data.701" = type { %"class.absl::optional_internal::optional_data_base.702" }
%"class.absl::optional_internal::optional_data_base.702" = type { %"class.absl::optional_internal::optional_data_dtor_base.703" }
%"class.absl::optional_internal::optional_data_dtor_base.703" = type { i8, %union.anon.704 }
%union.anon.704 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.752 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.752 = type { %"class.std::__1::map.755" }
%"class.std::__1::map.755" = type { %"class.std::__1::__tree.756" }
%"class.std::__1::__tree.756" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.757", %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.766"*, i64 }
%"class.std::__1::unique_ptr.766" = type opaque
%"class.std::__1::map.767" = type { %"class.std::__1::__tree.768" }
%"class.std::__1::__tree.768" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.769", %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.779", %"class.base::OnceCallback.780", %"class.absl::optional.781", %"class.absl::optional.786", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.793", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.801", %"class.std::__1::map.812", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.821", i8, %class.scoped_refptr.665, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.822" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.780" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.786" = type { %"class.absl::optional_internal::optional_data.787" }
%"class.absl::optional_internal::optional_data.787" = type { %"class.absl::optional_internal::optional_data_base.788" }
%"class.absl::optional_internal::optional_data_base.788" = type { %"class.absl::optional_internal::optional_data_dtor_base.789" }
%"class.absl::optional_internal::optional_data_dtor_base.789" = type { i8, %union.anon.790 }
%union.anon.790 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.665, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.791" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.791" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.792 }
%class.scoped_refptr.792 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.796", %class.scoped_refptr.797 }
%"class.base::RepeatingCallback.796" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.797 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.664", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.801" = type { %"class.std::__1::__tree.802" }
%"class.std::__1::__tree.802" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.803", %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::map.812" = type { %"class.std::__1::__tree.813" }
%"class.std::__1::__tree.813" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.814", %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.base::OnceCallback.821" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.822" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.665 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.blink::mojom::blink::SharedWorkerHostProxy"* }
%"class.blink::mojom::blink::SharedWorkerHostProxy" = type { %"class.blink::mojom::blink::SharedWorkerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SharedWorkerHost" = type { i32 (...)** }
%"class.WTF::Vector.832" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834" }
%"class.WTF::VectorBufferBase.834" = type { %"struct.std::__1::pair.835"*, i32, i32 }
%"struct.std::__1::pair.835" = type { i32, %"class.blink::MessagePortChannel" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.836 }
%class.scoped_refptr.836 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%class.scoped_refptr.396 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.839" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CrossVariantMojoRemote" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.blink::WebSharedWorkerClient" = type { i32 (...)** }
%"class.mojo::PendingRemote.1167" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.663, %"class.std::__1::unique_ptr.776", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.665, i32, [4 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.blink::SharedWorkerGlobalScope" = type { %"class.blink::WorkerGlobalScope", %"class.util::TokenType", %"class.blink::Member.1492" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.1168", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.1183", %"class.blink::Member.1201", %"class.blink::Member.1203", %"class.blink::Member.1214", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.1216", i32, %"class.blink::Member.1223", %"class.std::__1::unique_ptr.1225", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.1250", %"class.absl::optional.1254", i32, %"class.std::__1::unique_ptr.1260", %"class.std::__1::unique_ptr.1266", i64 }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1168" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1169" }
%"class.blink::HeapHashMap.1169" = type { %"class.WTF::HashMap.1172" }
%"class.WTF::HashMap.1172" = type { %"class.WTF::HashTable.1173" }
%"class.WTF::HashTable.1173" = type <{ %"struct.WTF::KeyValuePair.1175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1175" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1176", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1178" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.WTF::HashMap.1186", %"class.std::__1::unique_ptr.1191" }
%"class.WTF::HashMap.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.WTF::Vector.1194"* }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { %"struct.std::__1::pair.1670"*, i32, i32 }
%"struct.std::__1::pair.1670" = type { i32, %"class.WTF::String" }
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.1206" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1205", %"class.WTF::Vector.577", i8 }>
%"class.blink::WeakMember.1205" = type { %"class.blink::MemberBase.515" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1205" }
%"class.blink::Supplementable.1206" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1207" }
%"class.blink::HeapHashMap.1207" = type { %"class.WTF::HashMap.1210" }
%"class.WTF::HashMap.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.WTF::KeyValuePair.1213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1213" = type { i8*, %"class.blink::Member.1663" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::Supplement.1665"* }
%"class.blink::Supplement.1665" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1666" }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::HeapHashMap.1216" = type { %"class.WTF::HashMap.1219" }
%"class.WTF::HashMap.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"struct.WTF::KeyValuePair.1222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1222" = type opaque
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.1231", %"class.std::__1::map.1239" }
%"class.mojo::Remote.1231" = type { %"class.mojo::internal::InterfacePtrState.1232" }
%"class.mojo::internal::InterfacePtrState.1232" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1233" }
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.1239" = type { %"class.std::__1::__tree.1240" }
%"class.std::__1::__tree.1240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1241", %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1061", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1060", [6 x i8] }>
%"class.absl::optional.1254" = type { %"class.absl::optional_internal::optional_data.1255" }
%"class.absl::optional_internal::optional_data.1255" = type { %"class.absl::optional_internal::optional_data_base.1256" }
%"class.absl::optional_internal::optional_data_base.1256" = type { %"class.absl::optional_internal::optional_data_dtor_base.1257" }
%"class.absl::optional_internal::optional_data_dtor_base.1257" = type { i8, [7 x i8], %union.anon.1258 }
%union.anon.1258 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.1259", i8, [7 x i8] }>
%"struct.std::__1::pair.1259" = type { i64, i64 }
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.1269", %"class.mojo::ScopedHandleBase.1466", %"class.mojo::StructPtr.1467", %"class.std::__1::vector.1475", %"class.std::__1::vector.1482" }
%"class.mojo::StructPtr.1269" = type { %"class.std::__1::unique_ptr.1270" }
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.1273, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.1288", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.1304", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.1310", %"class.std::__1::vector.1317", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1040", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1352", %"class.absl::optional.1452", %"class.absl::optional.1000", %"class.std::__1::vector.1317", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.1273 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.1274", %"class.std::__1::vector.1275", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.1274" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.1275" = type { %"class.std::__1::__vector_base.1276" }
%"class.std::__1::__vector_base.1276" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.1277" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.1288" = type { %"class.std::__1::unique_ptr.1289" }
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.1292", %"class.std::__1::vector.1292", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.1292" = type { %"class.std::__1::__vector_base.1293" }
%"class.std::__1::__vector_base.1293" = type { %"class.mojo::InlinedStructPtr.1294"*, %"class.mojo::InlinedStructPtr.1294"*, %"class.std::__1::__compressed_pair.1296" }
%"class.mojo::InlinedStructPtr.1294" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.mojo::InlinedStructPtr.1294"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.1304" = type { %"class.std::__1::__vector_base.1305" }
%"class.std::__1::__vector_base.1305" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %class.GURL* }
%"class.absl::optional.1310" = type { %"class.absl::optional_internal::optional_data.1311" }
%"class.absl::optional_internal::optional_data.1311" = type { %"class.absl::optional_internal::optional_data_base.1312" }
%"class.absl::optional_internal::optional_data_base.1312" = type { %"class.absl::optional_internal::optional_data_dtor_base.1313" }
%"class.absl::optional_internal::optional_data_dtor_base.1313" = type { i8, [7 x i8], %union.anon.1314 }
%union.anon.1314 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.1315, %class.scoped_refptr.1315, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1335", %"class.std::__1::basic_string", %"class.std::__1::vector.1343", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.1315 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.1316", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.1324", %"class.std::__1::vector.1328" }
%"class.base::RefCountedThreadSafe.1316" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.1317", %"class.std::__1::vector.1317", %"class.std::__1::vector.1317", %"class.std::__1::vector.1317" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.1328" = type { %"class.std::__1::__vector_base.1329" }
%"class.std::__1::__vector_base.1329" = type { %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::unique_ptr.1324"*, %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.std::__1::unique_ptr.1324"* }
%"class.std::__1::vector.1335" = type { %"class.std::__1::__vector_base.1336" }
%"class.std::__1::__vector_base.1336" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.1338" }
%"class.net::HashValue" = type { i32, %union.anon.1337 }
%union.anon.1337 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.1343" = type { %"class.std::__1::__vector_base.1344" }
%"class.std::__1::__vector_base.1344" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.1347" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.1345, i32, [4 x i8] }>
%class.scoped_refptr.1345 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.1346", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.1346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.1352" = type { %"class.std::__1::unique_ptr.1353" }
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1356", %"class.mojo::StructPtr.1404", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1416", %"class.base::TimeDelta", %"class.absl::optional.1416", i32, [4 x i8], %"class.std::__1::vector.1428", %"class.mojo::StructPtr.1442", i8, [7 x i8] }>
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %"class.mojo::StructPtr.1358"*, %"class.mojo::StructPtr.1358"*, %"class.std::__1::__compressed_pair.1399" }
%"class.mojo::StructPtr.1358" = type { %"class.std::__1::unique_ptr.1359" }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1362", %"class.base::flat_map", %"class.base::flat_map.1377", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1387", i8, %"class.std::__1::vector.1317", i32, %"class.mojo::StructPtr.1389", %"class.std::__1::vector.1317" }
%"class.mojo::StructPtr.1362" = type { %"class.std::__1::unique_ptr.1363" }
%"class.std::__1::unique_ptr.1363" = type { %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1369" }
%"class.std::__1::vector.1369" = type { %"class.std::__1::__vector_base.1370" }
%"class.std::__1::__vector_base.1370" = type { %"struct.std::__1::pair.1371"*, %"struct.std::__1::pair.1371"*, %"class.std::__1::__compressed_pair.1372" }
%"struct.std::__1::pair.1371" = type opaque
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"struct.std::__1::pair.1371"* }
%"class.base::flat_map.1377" = type { %"class.base::internal::flat_tree.1378" }
%"class.base::internal::flat_tree.1378" = type { %"class.std::__1::vector.1379" }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { %"struct.std::__1::pair.1381"*, %"struct.std::__1::pair.1381"*, %"class.std::__1::__compressed_pair.1382" }
%"struct.std::__1::pair.1381" = type opaque
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"struct.std::__1::pair.1381"* }
%"class.mojo::InlinedStructPtr.1387" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1389" = type { %"class.std::__1::unique_ptr.1390" }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.1317", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.mojo::StructPtr.1358"* }
%"class.mojo::StructPtr.1404" = type { %"class.std::__1::unique_ptr.1405" }
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1411", i32, %"class.absl::optional.1411" }
%"class.absl::optional.1411" = type { %"class.absl::optional_internal::optional_data.1412" }
%"class.absl::optional_internal::optional_data.1412" = type { %"class.absl::optional_internal::optional_data_base.1413" }
%"class.absl::optional_internal::optional_data_base.1413" = type { %"class.absl::optional_internal::optional_data_dtor_base.1414" }
%"class.absl::optional_internal::optional_data_dtor_base.1414" = type { i8, %union.anon.1415 }
%union.anon.1415 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1411", i32, %"class.absl::optional.1411" }
%"class.absl::optional.1416" = type { %"class.absl::optional_internal::optional_data.1417" }
%"class.absl::optional_internal::optional_data.1417" = type { %"class.absl::optional_internal::optional_data_base.1418" }
%"class.absl::optional_internal::optional_data_base.1418" = type { %"class.absl::optional_internal::optional_data_dtor_base.1419" }
%"class.absl::optional_internal::optional_data_dtor_base.1419" = type { i8, %union.anon.1420 }
%union.anon.1420 = type { %"class.std::__1::vector.1421" }
%"class.std::__1::vector.1421" = type { %"class.std::__1::__vector_base.1422" }
%"class.std::__1::__vector_base.1422" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { i32* }
%"class.std::__1::vector.1428" = type { %"class.std::__1::__vector_base.1429" }
%"class.std::__1::__vector_base.1429" = type { %"class.mojo::StructPtr.1430"*, %"class.mojo::StructPtr.1430"*, %"class.std::__1::__compressed_pair.1437" }
%"class.mojo::StructPtr.1430" = type { %"class.std::__1::unique_ptr.1431" }
%"class.std::__1::unique_ptr.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.1433" }
%"struct.std::__1::__compressed_pair_elem.1433" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1411" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.mojo::StructPtr.1430"* }
%"class.mojo::StructPtr.1442" = type { %"class.std::__1::unique_ptr.1443" }
%"class.std::__1::unique_ptr.1443" = type { %"class.std::__1::__compressed_pair.1444" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.1317"* }
%"class.absl::optional.1452" = type { %"class.absl::optional_internal::optional_data.1453" }
%"class.absl::optional_internal::optional_data.1453" = type { %"class.absl::optional_internal::optional_data_base.1454" }
%"class.absl::optional_internal::optional_data_base.1454" = type { %"class.absl::optional_internal::optional_data_dtor_base.1455" }
%"class.absl::optional_internal::optional_data_dtor_base.1455" = type { i8, %union.anon.1456 }
%union.anon.1456 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1457" }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.1317", %"class.absl::optional.1411", %"class.std::__1::vector.1317", %"class.std::__1::vector.1317" }
%"class.std::__1::vector.1317" = type { %"class.std::__1::__vector_base.1318" }
%"class.std::__1::__vector_base.1318" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1282" }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"class.mojo::ScopedHandleBase.1466" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.1467" = type { %"class.std::__1::unique_ptr.1468" }
%"class.std::__1::unique_ptr.1468" = type { %"class.std::__1::__compressed_pair.1469" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1471", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1471" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1475" = type { %"class.std::__1::__vector_base.1476" }
%"class.std::__1::__vector_base.1476" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1477" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.1478" }
%"struct.std::__1::__compressed_pair_elem.1478" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1482" = type { %"class.std::__1::__vector_base.1483" }
%"class.std::__1::__vector_base.1483" = type { %"class.mojo::StructPtr.1269"*, %"class.mojo::StructPtr.1269"*, %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.mojo::StructPtr.1269"* }
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::ApplicationCacheHostForWorker"* }
%"class.blink::ApplicationCacheHostForWorker" = type opaque
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1494" = type { %"class.std::__1::vector.1495" }
%"class.std::__1::vector.1495" = type { %"class.std::__1::__vector_base.1496" }
%"class.std::__1::__vector_base.1496" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1550" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1497", %"class.blink::WebVector.1505", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1516", i32, [4 x i8], %"class.absl::optional.1545", %"class.blink::WebVector.1516" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1497" = type { %"class.std::__1::vector.1498" }
%"class.std::__1::vector.1498" = type { %"class.std::__1::__vector_base.1499" }
%"class.std::__1::__vector_base.1499" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1500" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1505" = type { %"class.std::__1::vector.1506" }
%"class.std::__1::vector.1506" = type { %"class.std::__1::__vector_base.1507" }
%"class.std::__1::__vector_base.1507" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1540" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1508", %"class.blink::WebVector.1516", %"class.blink::WebVector.1524", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1508" = type { %"class.std::__1::vector.1509" }
%"class.std::__1::vector.1509" = type { %"class.std::__1::__vector_base.1510" }
%"class.std::__1::__vector_base.1510" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1524" = type { %"class.std::__1::vector.1525" }
%"class.std::__1::vector.1525" = type { %"class.std::__1::__vector_base.1526" }
%"class.std::__1::__vector_base.1526" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1535" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1527" }
%"class.blink::WebVector.1527" = type { %"class.std::__1::vector.1528" }
%"class.std::__1::vector.1528" = type { %"class.std::__1::__vector_base.1529" }
%"class.std::__1::__vector_base.1529" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { i8* }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1540" = type { %"struct.std::__1::__compressed_pair_elem.1541" }
%"struct.std::__1::__compressed_pair_elem.1541" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1545" = type { %"class.absl::optional_internal::optional_data.1546" }
%"class.absl::optional_internal::optional_data.1546" = type { %"class.absl::optional_internal::optional_data_base.1547" }
%"class.absl::optional_internal::optional_data_base.1547" = type { %"class.absl::optional_internal::optional_data_dtor_base.1548" }
%"class.absl::optional_internal::optional_data_dtor_base.1548" = type { i8, [7 x i8], %union.anon.1549 }
%union.anon.1549 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1516", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1516" = type { %"class.std::__1::vector.1517" }
%"class.std::__1::vector.1517" = type { %"class.std::__1::__vector_base.1518" }
%"class.std::__1::__vector_base.1518" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::WebString"* }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"struct.blink::WebFetchClientSettingsObject" = type { i32, [4 x i8], %"class.blink::WebURL", i32, [4 x i8] }
%"class.blink::CrossVariantMojoRemote.1555" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.blink::CrossVariantMojoRemote.1556" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.1596" = type { %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.1598" }
%"struct.std::__1::__compressed_pair_elem.1598" = type { %"class.blink::SharedWorkerContentSettingsProxy"* }
%"class.blink::SharedWorkerContentSettingsProxy" = type { %"class.blink::WebContentSettingsClient", %"class.mojo::PendingRemote.1599" }
%"class.mojo::PendingRemote.1599" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.mojo::PendingRemote.1611" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver.1606" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.mojo::PendingReceiver.1612" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.absl::optional.1613" = type { %"class.absl::optional_internal::optional_data.1614" }
%"class.absl::optional_internal::optional_data.1614" = type { %"class.absl::optional_internal::optional_data_base.1615" }
%"class.absl::optional_internal::optional_data_base.1615" = type { %"class.absl::optional_internal::optional_data_dtor_base.1616" }
%"class.absl::optional_internal::optional_data_dtor_base.1616" = type { i8, %union.anon.1617 }
%union.anon.1617 = type { %"struct.blink::WorkerBackingThreadStartupData" }
%"struct.blink::WorkerBackingThreadStartupData" = type { i32, i32 }
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.474, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.516" }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.629, %"class.WTF::Vector.554", i32, [4 x i8], %"class.std::__1::unique_ptr.1567", %class.scoped_refptr.474, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent.602", %"class.std::__1::unique_ptr.614", %"class.absl::optional.1573", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.1183", i32, [4 x i8], %"class.blink::CrossThreadPersistent.1578", %"class.mojo::PendingRemote.1587", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.475", %"class.base::UnguessableToken", i64, %"class.absl::optional.1588", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.WTF::Vector.577"* }
%"class.absl::optional.1573" = type { %"class.absl::optional_internal::optional_data.1574" }
%"class.absl::optional_internal::optional_data.1574" = type { %"class.absl::optional_internal::optional_data_base.1575" }
%"class.absl::optional_internal::optional_data_base.1575" = type { %"class.absl::optional_internal::optional_data_dtor_base.1576" }
%"class.absl::optional_internal::optional_data_dtor_base.1576" = type { i8, %union.anon.1577 }
%union.anon.1577 = type { i32 }
%"class.blink::CrossThreadPersistent.1578" = type { %"class.blink::PersistentBase.1579" }
%"class.blink::PersistentBase.1579" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.1582", %"class.WTF::Mutex" }
%"class.WTF::HashMap.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type opaque
%"class.mojo::PendingRemote.1587" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.1588" = type { %"class.absl::optional_internal::optional_data.1589" }
%"class.absl::optional_internal::optional_data.1589" = type { %"class.absl::optional_internal::optional_data_base.1590" }
%"class.absl::optional_internal::optional_data_base.1590" = type { %"class.absl::optional_internal::optional_data_dtor_base.1591" }
%"class.absl::optional_internal::optional_data_dtor_base.1591" = type { i8, [7 x i8], %union.anon.1592 }
%union.anon.1592 = type { %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"struct.blink::WorkerDevToolsParams" = type { %"class.mojo::PendingReceiver.1606", %"class.mojo::PendingRemote.1607", i8, %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote.1607" = type { %"struct.mojo::internal::PendingRemoteState" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"struct.blink::CrossThreadFetchClientSettingsObjectData" = type { %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.474, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.516" }
%"class.blink::WorkerResourceTimingNotifier" = type opaque
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, [7 x i8], %union.anon.1724 }
%union.anon.1724 = type { %"struct.blink::UserAgentMetadata" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1684", %"class.blink::FreeList", %"class.WTF::Vector.1689" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.1683" }
%"struct.std::__1::array.1683" = type { [256 x i8] }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686" }
%"class.WTF::VectorBufferBase.1686" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.1689" = type { %"class.WTF::VectorBuffer.1690" }
%"class.WTF::VectorBuffer.1690" = type { %"class.WTF::VectorBufferBase.1691" }
%"class.WTF::VectorBufferBase.1691" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5blink25GenericFontFamilySettingsD2Ev = comdat any

$_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_6WebURLERNS1_5mojom10ScriptTypeERKNS1_9WebStringESB_RKNS1_17UserAgentMetadataE13scoped_refptrINS1_21WebWorkerFetchContextEEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENSI_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginERbNS1_10HttpsStateEPNS1_13WorkerClientsENS_10unique_ptrINS1_32SharedWorkerContentSettingsProxyENS_14default_deleteIS12_EEEERKN4absl9nullopt_tEDnRKN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1E_EEEENS6_14V8CacheOptionsEDnNS1_22CrossVariantMojoRemoteINS6_35BrowserInterfaceBrokerInterfaceBaseEEENS1_24BeginFrameProviderParamsEDnS1B_RlEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink32SharedWorkerContentSettingsProxyEJNS1_22CrossVariantMojoRemoteINS1_5mojom39WorkerContentSettingsProxyInterfaceBaseEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WebSharedWorkerImplEFvNS3_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WebSharedWorkerImplEFvNS2_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26SharedWorkerReportingProxyEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_26SharedWorkerReportingProxyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_26SharedWorkerReportingProxyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_26SharedWorkerReportingProxyEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26SharedWorkerReportingProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink16SharedWorkerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZN3WTF6VectorINSt3__14pairIiN5blink18MessagePortChannelEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIiN5blink18MessagePortChannelEEEEEmm = comdat any

$_ZN5blink30WorkerMainScriptLoadParametersD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_33FetchClientSettingsObjectSnapshotEE4CallIJRKNS_6WebURLES6_RNS_17WebSecurityOriginERKN7network5mojom14ReferrerPolicyERKNS_9WebStringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckERNSA_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyEN3WTF7HashSetIjNSO_13AlreadyHashedENSO_10HashTraitsIjEENSO_18PartitionAllocatorEEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13WorkerClientsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_13WorkerClientsEE7GetNameEPKv = comdat any

$_ZNK5blink13WorkerClients5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZN5blink17UserAgentMetadataC2ERKS0_ = comdat any

$_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZN5blink17UserAgentMetadataD2Ev = comdat any

$_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = comdat any

$_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink13WorkerClientsE = comdat any

@_ZTVN5blink19WebSharedWorkerImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebSharedWorkerImpl"*)* @_ZN5blink19WebSharedWorkerImplD2Ev to i8*), i8* bitcast (void (%"class.blink::WebSharedWorkerImpl"*)* @_ZN5blink19WebSharedWorkerImplD0Ev to i8*), i8* bitcast (void (%"class.blink::WebSharedWorkerImpl"*, i32, %"class.blink::MessagePortDescriptor"*)* @_ZN5blink19WebSharedWorkerImpl7ConnectEiNS_21MessagePortDescriptorE to i8*), i8* bitcast (void (%"class.blink::WebSharedWorkerImpl"*)* @_ZN5blink19WebSharedWorkerImpl22TerminateWorkerContextEv to i8*)] }, align 8
@.str = private unnamed_addr constant [33 x i8] c"Failed to fetch a worker script.\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"ConnectToChannel\00", align 1
@.str.2 = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/core/exported/web_shared_worker_impl.cc\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"constructor_origin.Get()->CanAccessSharedWorkers()\00", align 1
@_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = linkonce_odr hidden constant %"struct.absl::nullopt_t" undef, comdat, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26SharedWorkerReportingProxyEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SharedWorkerReportingProxy]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26SharedWorkerReportingProxyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_26SharedWorkerReportingProxyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26SharedWorkerReportingProxyEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink5mojom5blink16SharedWorkerHost5Name_E = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIiN5blink18MessagePortChannelEEEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<int, blink::MessagePortChannel>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25FetchClientSettingsObjectEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchClientSettingsObject]\00", align 1
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13WorkerClientsEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WorkerClients]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13WorkerClientsEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink13WorkerClientsE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WorkerClients"*, %"class.blink::Visitor"*)* @_ZNK5blink13WorkerClients5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8

@_ZN5blink19WebSharedWorkerImplC1ERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS_5mojom29SharedWorkerHostInterfaceBaseEEEPNS_21WebSharedWorkerClientE = hidden unnamed_addr alias void (%"class.blink::WebSharedWorkerImpl"*, %"class.util::TokenType"*, %"class.base::UnguessableToken"*, %"class.blink::CrossVariantMojoRemote"*, %"class.blink::WebSharedWorkerClient"*), void (%"class.blink::WebSharedWorkerImpl"*, %"class.util::TokenType"*, %"class.base::UnguessableToken"*, %"class.blink::CrossVariantMojoRemote"*, %"class.blink::WebSharedWorkerClient"*)* @_ZN5blink19WebSharedWorkerImplC2ERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS_5mojom29SharedWorkerHostInterfaceBaseEEEPNS_21WebSharedWorkerClientE
@_ZN5blink19WebSharedWorkerImplD1Ev = hidden unnamed_addr alias void (%"class.blink::WebSharedWorkerImpl"*), void (%"class.blink::WebSharedWorkerImpl"*)* @_ZN5blink19WebSharedWorkerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImplC2ERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS_5mojom29SharedWorkerHostInterfaceBaseEEEPNS_21WebSharedWorkerClientE(%"class.blink::WebSharedWorkerImpl"*, %"class.util::TokenType"* dereferenceable(16), %"class.base::UnguessableToken"* dereferenceable(16), %"class.blink::CrossVariantMojoRemote"* nocapture, %"class.blink::WebSharedWorkerClient"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingRemote.1167", align 4
  %7 = alloca %"class.mojo::PendingRemote.1167", align 4
  %8 = alloca %"class.mojo::ScopedHandleBase", align 4
  %9 = alloca i64, align 8
  %10 = alloca %"class.mojo::PendingRemote.1167", align 4
  %11 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19WebSharedWorkerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 1
  %13 = tail call %"class.blink::ParentExecutionContextTaskRunners"* @_ZN5blink33ParentExecutionContextTaskRunners6CreateEv() #10
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26SharedWorkerReportingProxyEEEPhm(i64 24) #10
  %15 = bitcast i8* %14 to %"class.blink::SharedWorkerReportingProxy"*
  tail call void @_ZN5blink26SharedWorkerReportingProxyC1EPNS_19WebSharedWorkerImplEPNS_33ParentExecutionContextTaskRunnersE(%"class.blink::SharedWorkerReportingProxy"* %15, %"class.blink::WebSharedWorkerImpl"* %0, %"class.blink::ParentExecutionContextTaskRunners"* %13) #10
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %12, i64 0, i32 0
  %21 = bitcast %"class.blink::Persistent"* %12 to i8**
  store i8* %14, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8
  %23 = ptrtoint i8* %14 to i64
  switch i64 %23, label %24 [
    i64 0, label %52
    i64 -1, label %52
  ]

24:                                               ; preds = %5
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #10
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #10
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  %39 = icmp eq %"class.blink::PersistentNode"* %38, null
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %41) #10
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi %"class.blink::PersistentNode"* [ %42, %40 ], [ %38, %31 ]
  %45 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentRegion"* %36 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %20, %"class.blink::PersistentBase"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26SharedWorkerReportingProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %22, align 8
  %50 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %12, i64 0, i32 0, i32 0
  %51 = load %"class.blink::SharedWorkerReportingProxy"*, %"class.blink::SharedWorkerReportingProxy"** %50, align 8
  br label %52

52:                                               ; preds = %5, %5, %43
  %53 = phi %"class.blink::SharedWorkerReportingProxy"* [ %15, %5 ], [ %15, %5 ], [ %51, %43 ]
  %54 = tail call i8* @_Znwm(i64 360) #11
  %55 = bitcast i8* %54 to %"class.blink::SharedWorkerThread"*
  %56 = getelementptr inbounds %"class.blink::SharedWorkerReportingProxy", %"class.blink::SharedWorkerReportingProxy"* %53, i64 0, i32 0
  tail call void @_ZN5blink18SharedWorkerThreadC1ERNS_20WorkerReportingProxyERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenE(%"class.blink::SharedWorkerThread"* nonnull %55, %"class.blink::WorkerReportingProxy"* dereferenceable(8) %56, %"class.util::TokenType"* dereferenceable(16) %1, %"class.base::UnguessableToken"* dereferenceable(16) %2) #10
  %57 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = bitcast %"class.blink::SharedWorkerThread"** %57 to i8**
  store i8* %54, i8** %58, align 8
  %59 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3
  %60 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !3
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %52
  store i32 0, i32* %61, align 4, !noalias !6
  %65 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %3, i64 0, i32 0
  %66 = load i32, i32* %65, align 4, !noalias !3
  %67 = bitcast %"class.mojo::ScopedHandleBase"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #10, !noalias !3
  %68 = bitcast i64* %9 to %"struct.mojo::internal::PendingRemoteState"*
  %69 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 %62, i32* %69, align 4, !alias.scope !9, !noalias !3
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %68, %"class.mojo::ScopedHandleBase"* nonnull %8, i32 %66) #10
  %70 = load i32, i32* %69, align 4, !noalias !3
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = call i32 @MojoClose(i32 %70) #10
  br label %74

74:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #10, !noalias !3
  br label %77

75:                                               ; preds = %52
  store i64 0, i64* %9, align 8, !alias.scope !3
  %76 = bitcast i64* %9 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %76) #10
  br label %77

77:                                               ; preds = %74, %75
  %78 = phi %"struct.mojo::internal::PendingRemoteState"* [ %68, %74 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.mojo::PendingRemote.1167", %"class.mojo::PendingRemote.1167"* %10, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %79, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %78) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %80 = bitcast %"class.mojo::PendingRemote.1167"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = getelementptr inbounds %"class.mojo::PendingRemote.1167", %"class.mojo::PendingRemote.1167"* %7, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %81, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %79) #10
  %82 = bitcast %"class.mojo::PendingRemote.1167"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  %83 = bitcast %"class.mojo::Remote"* %59 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %83) #10
  %84 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %85 = bitcast %"class.std::__1::unique_ptr.826"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.mojo::PendingRemote.1167", %"class.mojo::PendingRemote.1167"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %86, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %81) #10
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink16SharedWorkerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %59, %"class.mojo::PendingRemote.1167"* nonnull %6, %"class.base::SequencedTaskRunner"* null) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %81) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %79) #10
  %87 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 4
  store %"class.blink::WebSharedWorkerClient"* %4, %"class.blink::WebSharedWorkerClient"** %87, align 8
  %88 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %89 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 9, i32 0
  %90 = ptrtoint %"class.blink::WebSharedWorkerImpl"* %0 to i64
  %91 = bitcast %"class.WTF::Vector.832"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 26, i1 false)
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %89, i64 %90) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ParentExecutionContextTaskRunners"* @_ZN5blink33ParentExecutionContextTaskRunners6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImplD2Ev(%"class.blink::WebSharedWorkerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19WebSharedWorkerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 6, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #10
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.835"* %18, null
  br i1 %19, label %38, label %20, !prof !12

20:                                               ; preds = %15
  %21 = bitcast %"struct.std::__1::pair.835"* %18 to i8*
  %22 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25, !prof !2

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %18, i64 %26
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi %"struct.std::__1::pair.835"* [ %31, %28 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %29, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %30) #10
  %31 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %29, i64 1
  %32 = icmp eq %"struct.std::__1::pair.835"* %31, %27
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  store i32 0, i32* %22, align 4
  %34 = bitcast %"class.WTF::Vector.832"* %16 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %20
  %37 = phi i8* [ %35, %33 ], [ %21, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #10
  store %"struct.std::__1::pair.835"* null, %"struct.std::__1::pair.835"** %17, align 8
  br label %38

38:                                               ; preds = %15, %36
  %39 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %40, align 8
  store %"class.blink::mojom::blink::SharedWorkerHostProxy"* null, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %40, align 8
  %42 = icmp eq %"class.blink::mojom::blink::SharedWorkerHostProxy"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::mojom::blink::SharedWorkerHostProxy"* %41 to void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)***
  %45 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)**, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %45, i64 1
  %47 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %46, align 8
  tail call void %47(%"class.blink::mojom::blink::SharedWorkerHostProxy"* nonnull %41) #10
  br label %48

48:                                               ; preds = %38, %43
  %49 = bitcast %"class.mojo::Remote"* %39 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %49) #10
  %50 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %50, align 8
  store %"class.blink::SharedWorkerThread"* null, %"class.blink::SharedWorkerThread"** %50, align 8
  %52 = icmp eq %"class.blink::SharedWorkerThread"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::SharedWorkerThread"* %51 to void (%"class.blink::SharedWorkerThread"*)***
  %55 = load void (%"class.blink::SharedWorkerThread"*)**, void (%"class.blink::SharedWorkerThread"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::SharedWorkerThread"*)*, void (%"class.blink::SharedWorkerThread"*)** %55, i64 3
  %57 = load void (%"class.blink::SharedWorkerThread"*)*, void (%"class.blink::SharedWorkerThread"*)** %56, align 8
  tail call void %57(%"class.blink::SharedWorkerThread"* nonnull %51) #10
  br label %58

58:                                               ; preds = %48, %53
  %59 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8
  %61 = icmp eq %"class.blink::PersistentNode"* %60, null
  br i1 %61, label %81, label %62

62:                                               ; preds = %58
  %63 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %64 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %63, i64 0, i32 1
  %65 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %64) #10
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %62
  %68 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %64, i8* %68) #10
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi i8* [ %68, %67 ], [ %65, %62 ]
  %71 = bitcast i8* %70 to %"class.blink::ThreadState"**
  %72 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %73, align 8
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8
  %76 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %74, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::PersistentRegion"* %74 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.blink::PersistentNode"* %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %75, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %75, %"class.blink::PersistentNode"** %76, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %59, align 8
  br label %81

81:                                               ; preds = %58, %69
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImplD0Ev(%"class.blink::WebSharedWorkerImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19WebSharedWorkerImplD2Ev(%"class.blink::WebSharedWorkerImpl"* %0) #10
  %2 = bitcast %"class.blink::WebSharedWorkerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl21TerminateWorkerThreadEv(%"class.blink::WebSharedWorkerImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !13
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  store i8 1, i8* %2, align 1
  %6 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %16, i64 %17
  br label %19

19:                                               ; preds = %19, %14
  %20 = phi %"struct.std::__1::pair.835"* [ %22, %19 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %20, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %21) #10
  %22 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %20, i64 1
  %23 = icmp eq %"struct.std::__1::pair.835"* %22, %18
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  store i32 0, i32* %11, align 4
  br label %25

25:                                               ; preds = %24, %10
  %26 = bitcast %"class.WTF::Vector.832"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.WTF::Vector.832"* %6 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %5, %25
  %30 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %31, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"* %32) #10
  br label %33

33:                                               ; preds = %1, %29
  ret void
}

declare void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl12CountFeatureENS_5mojom10WebFeatureE(%"class.blink::WebSharedWorkerImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %3) #10
  %4 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %4, align 8
  tail call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy13OnFeatureUsedENS0_10WebFeatureE(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %5, i32 %1) #10
  ret void
}

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxy13OnFeatureUsedENS0_10WebFeatureE(%"class.blink::mojom::blink::SharedWorkerHostProxy"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl27DidFailToFetchClassicScriptEv(%"class.blink::WebSharedWorkerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %3) #10
  %4 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 32) #10
  call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy18OnScriptLoadFailedERKN3WTF6StringE(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %2) #10
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #10
  br label %23

23:                                               ; preds = %1, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %24 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 1, !range !13
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %55

27:                                               ; preds = %23
  store i8 1, i8* %24, align 1
  %28 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %28, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %37, align 8
  %39 = zext i32 %34 to i64
  %40 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %38, i64 %39
  br label %41

41:                                               ; preds = %41, %36
  %42 = phi %"struct.std::__1::pair.835"* [ %44, %41 ], [ %38, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %42, i64 0, i32 1
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %43) #10
  %44 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %42, i64 1
  %45 = icmp eq %"struct.std::__1::pair.835"* %44, %40
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  store i32 0, i32* %33, align 4
  br label %47

47:                                               ; preds = %46, %32
  %48 = bitcast %"class.WTF::Vector.832"* %28 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.WTF::Vector.832"* %28 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %29, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  br label %51

51:                                               ; preds = %47, %27
  %52 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %53, i64 0, i32 0
  call void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"* %54) #10
  br label %55

55:                                               ; preds = %23, %51
  ret void
}

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxy18OnScriptLoadFailedERKN3WTF6StringE(%"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl26DidFailToFetchModuleScriptEv(%"class.blink::WebSharedWorkerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %3) #10
  %4 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 32) #10
  call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy18OnScriptLoadFailedERKN3WTF6StringE(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %2) #10
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #10
  br label %23

23:                                               ; preds = %1, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %24 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 1, !range !13
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %55

27:                                               ; preds = %23
  store i8 1, i8* %24, align 1
  %28 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %28, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %37, align 8
  %39 = zext i32 %34 to i64
  %40 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %38, i64 %39
  br label %41

41:                                               ; preds = %41, %36
  %42 = phi %"struct.std::__1::pair.835"* [ %44, %41 ], [ %38, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %42, i64 0, i32 1
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %43) #10
  %44 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %42, i64 1
  %45 = icmp eq %"struct.std::__1::pair.835"* %44, %40
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  store i32 0, i32* %33, align 4
  br label %47

47:                                               ; preds = %46, %32
  %48 = bitcast %"class.WTF::Vector.832"* %28 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.WTF::Vector.832"* %28 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %29, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  br label %51

51:                                               ; preds = %47, %27
  %52 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %53, i64 0, i32 0
  call void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"* %54) #10
  br label %55

55:                                               ; preds = %23, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl25DidEvaluateTopLevelScriptEb(%"class.blink::WebSharedWorkerImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 7
  store i8 1, i8* %3, align 8
  tail call void @_ZN5blink19WebSharedWorkerImpl26DispatchPendingConnectionsEv(%"class.blink::WebSharedWorkerImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl26DispatchPendingConnectionsEv(%"class.blink::WebSharedWorkerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::MessagePortChannel", align 8
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %33, %1
  %12 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = load i32, i32* %6, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %15
  %19 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %4, align 8
  %20 = zext i32 %16 to i64
  %21 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %19, i64 %20
  br label %22

22:                                               ; preds = %22, %18
  %23 = phi %"struct.std::__1::pair.835"* [ %25, %22 ], [ %19, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %23, i64 0, i32 1
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %24) #10
  %25 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %23, i64 1
  %26 = icmp eq %"struct.std::__1::pair.835"* %25, %21
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  store i32 0, i32* %6, align 4
  br label %28

28:                                               ; preds = %27, %15
  %29 = bitcast %"class.WTF::Vector.832"* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.WTF::Vector.832"* %3 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %12, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %11, %28
  ret void

33:                                               ; preds = %1, %33
  %34 = phi %"struct.std::__1::pair.835"* [ %38, %33 ], [ %5, %1 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %34, i64 0, i32 1
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %2, %"class.blink::MessagePortChannel"* dereferenceable(8) %37) #10
  call void @_ZN5blink19WebSharedWorkerImpl16ConnectToChannelEiNS_18MessagePortChannelE(%"class.blink::WebSharedWorkerImpl"* %0, i32 %36, %"class.blink::MessagePortChannel"* nonnull %2)
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %2) #10
  %38 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %34, i64 1
  %39 = icmp eq %"struct.std::__1::pair.835"* %38, %9
  br i1 %39, label %11, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl25DidCloseWorkerGlobalScopeEv(%"class.blink::WebSharedWorkerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %2) #10
  %3 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %3, align 8
  tail call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy15OnContextClosedEv(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %4) #10
  %5 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 1, !range !13
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %36

8:                                                ; preds = %1
  store i8 1, i8* %5, align 1
  %9 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %18, align 8
  %20 = zext i32 %15 to i64
  %21 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %19, i64 %20
  br label %22

22:                                               ; preds = %22, %17
  %23 = phi %"struct.std::__1::pair.835"* [ %25, %22 ], [ %19, %17 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %23, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %24) #10
  %25 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %23, i64 1
  %26 = icmp eq %"struct.std::__1::pair.835"* %25, %21
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  store i32 0, i32* %14, align 4
  br label %28

28:                                               ; preds = %27, %13
  %29 = bitcast %"class.WTF::Vector.832"* %9 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.WTF::Vector.832"* %9 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %10, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %28, %8
  %33 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %34, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"* %35) #10
  br label %36

36:                                               ; preds = %1, %32
  ret void
}

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxy15OnContextClosedEv(%"class.blink::mojom::blink::SharedWorkerHostProxy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl24DidTerminateWorkerThreadEv(%"class.blink::WebSharedWorkerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 4
  %3 = load %"class.blink::WebSharedWorkerClient"*, %"class.blink::WebSharedWorkerClient"** %2, align 8
  %4 = bitcast %"class.blink::WebSharedWorkerClient"* %3 to void (%"class.blink::WebSharedWorkerClient"*)***
  %5 = load void (%"class.blink::WebSharedWorkerClient"*)**, void (%"class.blink::WebSharedWorkerClient"*)*** %4, align 8
  %6 = load void (%"class.blink::WebSharedWorkerClient"*)*, void (%"class.blink::WebSharedWorkerClient"*)** %5, align 8
  tail call void %6(%"class.blink::WebSharedWorkerClient"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl7ConnectEiNS_21MessagePortDescriptorE(%"class.blink::WebSharedWorkerImpl"*, i32, %"class.blink::MessagePortDescriptor"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::MessagePortChannel", align 8
  %5 = alloca %"class.blink::MessagePortDescriptor", align 8
  %6 = alloca %"class.blink::MessagePortChannel", align 8
  %7 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %8 = load i8, i8* %7, align 1, !range !13
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %56

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::MessagePortChannel"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %4, i64 0, i32 0, i32 0
  store %"class.blink::MessagePortChannel::State"* inttoptr (i64 -6148914691236517206 to %"class.blink::MessagePortChannel::State"*), %"class.blink::MessagePortChannel::State"** %12, align 8
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %5, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %2) #10
  call void @_ZN5blink18MessagePortChannelC1ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel"* nonnull %4, %"class.blink::MessagePortDescriptor"* nonnull %5) #10
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %5) #10
  %13 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 7
  %14 = load i8, i8* %13, align 8, !range !13
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %6, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %4) #10
  call void @_ZN5blink19WebSharedWorkerImpl16ConnectToChannelEiNS_18MessagePortChannelE(%"class.blink::WebSharedWorkerImpl"* %0, i32 %1, %"class.blink::MessagePortChannel"* nonnull %6)
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %6) #10
  br label %55

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %46, !prof !2

24:                                               ; preds = %17
  %25 = add i32 %20, 1
  %26 = lshr i32 %20, 2
  %27 = add i32 %25, %26
  %28 = icmp ugt i32 %27, 4
  %29 = select i1 %28, i32 %27, i32 4
  %30 = icmp ugt i32 %29, %25
  %31 = select i1 %30, i32 %29, i32 %25
  %32 = icmp ult i32 %20, %31
  br i1 %32, label %33, label %46, !prof !12

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %18, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %34, align 8
  %36 = icmp eq %"struct.std::__1::pair.835"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = zext i32 %31 to i64
  %39 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIiN5blink18MessagePortChannelEEEEEmm(i64 %38) #10
  %40 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIiN5blink18MessagePortChannelEEEEEPKcv, i64 0, i64 0)) #10
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"class.WTF::Vector.832"* %18 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = lshr i64 %39, 4
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %21, align 8
  br label %46

45:                                               ; preds = %33
  call void @_ZN3WTF6VectorINSt3__14pairIiN5blink18MessagePortChannelEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.832"* %18, i32 %31) #10
  br label %46

46:                                               ; preds = %17, %24, %37, %45
  %47 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %18, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %47, align 8
  %49 = load i32, i32* %19, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %48, i64 %50, i32 0
  store i32 %1, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %48, i64 %50, i32 1
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %52, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %4) #10
  %53 = load i32, i32* %19, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %19, align 4
  br label %55

55:                                               ; preds = %46, %16
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %56

56:                                               ; preds = %3, %55
  ret void
}

declare void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink18MessagePortChannelC1ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortDescriptor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl16ConnectToChannelEiNS_18MessagePortChannelE(%"class.blink::WebSharedWorkerImpl"*, i32, %"class.blink::MessagePortChannel"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::MessagePortChannel", align 8
  %7 = alloca %"class.blink::MessagePortChannel", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %12 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 6, i32 0
  %13 = bitcast %"class.base::SingleThreadTaskRunner"** %12 to %"class.base::SequencedTaskRunner"**
  %14 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %13, align 8
  %15 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.2, i64 0, i64 0), i32 169) #10
  %16 = ptrtoint %"class.blink::WebSharedWorkerImpl"* %0 to i64
  %17 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.blink::MessagePortChannel"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast %"class.blink::MessagePortChannel"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10, !noalias !14
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %7, %"class.blink::MessagePortChannel"* dereferenceable(8) %2) #10, !noalias !14
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %6, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %7) #10, !noalias !14
  %20 = call i8* @_Znwm(i64 64) #11, !noalias !17
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WebSharedWorkerImplEFvNS3_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WebSharedWorkerImplEFvNS2_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !17
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)* @_ZN5blink19WebSharedWorkerImpl25ConnectTaskOnWorkerThreadENS_18MessagePortChannelE to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !17
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %16, i64* %25, align 8, !noalias !17
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast i8* %26 to %"class.blink::MessagePortChannel"*
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %27, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %6) #10, !noalias !17
  %28 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10, !noalias !14
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = ptrtoint i8* %20 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8, !noalias !22
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8, !noalias !22
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10, !noalias !14
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #10, !noalias !14
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %6) #10, !noalias !14
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %7) #10, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %34 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = bitcast %"class.base::SequencedTaskRunner"* %14 to %"class.base::TaskRunner"*
  %37 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %30, i64* %39, align 8, !alias.scope !25
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !25
  %40 = bitcast %"class.base::SequencedTaskRunner"* %14 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %41 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %40, align 8
  %42 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %41, align 8
  %43 = call zeroext i1 %42(%"class.base::TaskRunner"* %36, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %8, i64 0) #10
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #10
  %45 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %46 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10
  %47 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %47) #10
  %48 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %48, align 8
  call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy11OnConnectedEi(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %49, i32 %1) #10
  ret void
}

declare void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl25ConnectTaskOnWorkerThreadENS_18MessagePortChannelE(%"class.blink::WebSharedWorkerImpl"* nocapture readonly, %"class.blink::MessagePortChannel"*) #0 align 2 {
  %3 = alloca %"class.blink::MessagePortChannel", align 8
  %4 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %5, i64 0, i32 0
  %7 = tail call %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"* %6) #10
  %8 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %7 to %"class.blink::SharedWorkerGlobalScope"*
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %3, %"class.blink::MessagePortChannel"* dereferenceable(8) %1) #10
  call void @_ZN5blink23SharedWorkerGlobalScope7ConnectENS_18MessagePortChannelE(%"class.blink::SharedWorkerGlobalScope"* %8, %"class.blink::MessagePortChannel"* nonnull %3) #10
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %3) #10
  ret void
}

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxy11OnConnectedEi(%"class.blink::mojom::blink::SharedWorkerHostProxy"*, i32) unnamed_addr #2

declare %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"*) local_unnamed_addr #2

declare void @_ZN5blink23SharedWorkerGlobalScope7ConnectENS_18MessagePortChannelE(%"class.blink::SharedWorkerGlobalScope"*, %"class.blink::MessagePortChannel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl18StartWorkerContextERKNS_6WebURLENS_5mojom10ScriptTypeEN7network5mojom15CredentialsModeERKNS_9WebStringENS_17WebSecurityOriginESB_RKNS_17UserAgentMetadataERKNS_9WebVectorINS_24WebContentSecurityPolicyEEENS7_14IPAddressSpaceERKNS_28WebFetchClientSettingsObjectERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS4_39WorkerContentSettingsProxyInterfaceBaseEEENST_INS4_35BrowserInterfaceBrokerInterfaceBaseEEEbNSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENSY_14default_deleteIS10_EEEE13scoped_refptrINS_21WebWorkerFetchContextEEl(%"class.blink::WebSharedWorkerImpl"*, %"class.blink::WebURL"* dereferenceable(96), i32, i32, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"* dereferenceable(8), %"struct.blink::UserAgentMetadata"* dereferenceable(152), %"class.blink::WebVector.1494"* dereferenceable(24), i32, %"struct.blink::WebFetchClientSettingsObject"* dereferenceable(112), %"class.base::UnguessableToken"* dereferenceable(16), %"class.blink::CrossVariantMojoRemote.1555"*, %"class.blink::CrossVariantMojoRemote.1556"*, i1 zeroext, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %19 = alloca %"class.mojo::ScopedHandleBase", align 4
  %20 = alloca %"class.mojo::MessagePipeHandle", align 4
  %21 = alloca %"class.mojo::MessagePipeHandle", align 4
  %22 = alloca %"class.mojo::ScopedHandleBase", align 4
  %23 = alloca %"class.mojo::MessagePipeHandle", align 4
  %24 = alloca %"class.mojo::MessagePipeHandle", align 4
  %25 = alloca %class.scoped_refptr.629, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca %"class.logging::CheckError", align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca %"class.WTF::HashSet.516", align 8
  %34 = alloca i8, align 1
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.blink::WebString", align 8
  %37 = alloca %"class.std::__1::unique_ptr.1183", align 8
  %38 = alloca %"class.blink::GenericFontFamilySettings", align 8
  %39 = alloca %"class.WTF::Vector.554", align 8
  %40 = alloca i32, align 4
  %41 = alloca %"class.blink::SecurityOrigin"*, align 8
  %42 = alloca i32, align 4
  %43 = alloca %"class.blink::WorkerClients"*, align 8
  %44 = alloca %"class.std::__1::unique_ptr.1596", align 8
  %45 = alloca i8*, align 8
  %46 = alloca i32, align 4
  %47 = alloca i8*, align 8
  %48 = alloca %"struct.blink::BeginFrameProviderParams", align 4
  %49 = alloca i8*, align 8
  %50 = alloca %"class.base::UnguessableToken", align 8
  %51 = alloca %"class.mojo::PendingRemote.1611", align 4
  %52 = alloca %"class.mojo::PendingReceiver.1606", align 8
  %53 = alloca %"class.mojo::PendingReceiver.1612", align 8
  %54 = alloca %"class.absl::optional.1613", align 4
  %55 = alloca %"class.blink::KURL", align 8
  %56 = alloca %"struct.v8_inspector::V8StackTraceId", align 8
  %57 = alloca %"class.blink::KURL", align 8
  %58 = alloca %"class.mojo::PendingRemote.1611", align 4
  %59 = alloca %"class.mojo::PendingReceiver.1612", align 8
  %60 = inttoptr i64 %15 to %"struct.blink::WorkerMainScriptLoadParameters"*
  %61 = getelementptr inbounds %class.scoped_refptr.629, %class.scoped_refptr.629* %25, i64 0, i32 0
  %62 = inttoptr i64 %16 to %"class.blink::WebWorkerFetchContext"*
  store %"class.blink::WebWorkerFetchContext"* %62, %"class.blink::WebWorkerFetchContext"** %61, align 8
  store i32 %2, i32* %26, align 4
  store i32 %9, i32* %27, align 4
  %63 = zext i1 %14 to i8
  store i64 %17, i64* %28, align 8
  %64 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigin3GetEv(%"class.blink::WebSecurityOrigin"* %5) #10
  %65 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %64, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !13
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %18
  %69 = bitcast %"class.logging::CheckError"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %29, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.2, i64 0, i64 0), i32 215, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0)) #10
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %29) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  br label %71

71:                                               ; preds = %18, %68
  %72 = getelementptr inbounds %"struct.blink::WebFetchClientSettingsObject", %"struct.blink::WebFetchClientSettingsObject"* %10, i64 0, i32 0
  %73 = getelementptr inbounds %"struct.blink::WebFetchClientSettingsObject", %"struct.blink::WebFetchClientSettingsObject"* %10, i64 0, i32 2, i32 0
  %74 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #10
  %75 = call %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigin3GetEv(%"class.blink::WebSecurityOrigin"* %5) #10
  %76 = call i32 @_ZN5blink19CalculateHttpsStateEPKNS_14SecurityOriginEN4absl8optionalINS_10HttpsStateEEE(%"class.blink::SecurityOrigin"* %75, i64 0) #10
  store i32 %76, i32* %30, align 4
  %77 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #10
  store i32 2, i32* %31, align 4
  %78 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #10
  %79 = getelementptr inbounds %"struct.blink::WebFetchClientSettingsObject", %"struct.blink::WebFetchClientSettingsObject"* %10, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 1
  %82 = select i1 %81, i32 3, i32 2
  store i32 %82, i32* %32, align 4
  %83 = bitcast %"class.WTF::HashSet.516"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 20, i1 false) #10
  %84 = call %"class.blink::FetchClientSettingsObjectSnapshot"* @_ZN5blink25MakeGarbageCollectedTraitINS_33FetchClientSettingsObjectSnapshotEE4CallIJRKNS_6WebURLES6_RNS_17WebSecurityOriginERKN7network5mojom14ReferrerPolicyERKNS_9WebStringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckERNSA_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyEN3WTF7HashSetIjNSO_13AlreadyHashedENSO_10HashTraitsIjEENSO_18PartitionAllocatorEEEEEEPS1_DpOT_(%"class.blink::WebURL"* dereferenceable(96) %1, %"class.blink::WebURL"* dereferenceable(96) %1, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %5, i32* dereferenceable(4) %72, %"class.blink::WebString"* dereferenceable(8) %73, i32* nonnull dereferenceable(4) %30, i32* nonnull dereferenceable(4) %31, i32* nonnull dereferenceable(4) %27, i32* nonnull dereferenceable(4) %32, %"class.WTF::HashSet.516"* nonnull dereferenceable(24) %33) #10
  %85 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %33, i64 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %90, label %88, !prof !12

88:                                               ; preds = %71
  %89 = bitcast i32* %86 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #10
  store i32* null, i32** %85, align 8
  br label %90

90:                                               ; preds = %71, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #10
  store i8 -86, i8* %34, align 1
  %91 = call zeroext i1 @_ZNK5blink17WebSecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::WebSecurityOrigin"* %5) #10
  br i1 %91, label %115, label %92

92:                                               ; preds = %90
  %93 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  %94 = bitcast %"class.blink::WebString"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  call void @_ZNK5blink17WebSecurityOrigin8ProtocolEv(%"class.blink::WebString"* nonnull sret %36, %"class.blink::WebSecurityOrigin"* %5) #10
  %95 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %36) #10
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %96, align 8
  %97 = call zeroext i1 @_ZN5blink14SchemeRegistry36SchemeShouldBypassSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %35) #10
  %98 = zext i1 %97 to i8
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #10
  br label %114

114:                                              ; preds = %92, %110, %113
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  br label %115

115:                                              ; preds = %90, %114
  %116 = phi i8 [ %98, %114 ], [ 1, %90 ]
  store i8 %116, i8* %34, align 1
  %117 = bitcast %"class.std::__1::unique_ptr.1183"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #10
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.1183", %"class.std::__1::unique_ptr.1183"* %37, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.blink::GenericFontFamilySettings"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %119) #10
  %120 = bitcast %"class.blink::GenericFontFamilySettings"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 176, i1 false)
  %121 = call noalias i8* @malloc(i64 184) #10
  %122 = bitcast i8* %121 to %"class.blink::WorkerSettings"*
  call void @_ZN5blink14WorkerSettingsC1EbbbbRKNS_25GenericFontFamilySettingsE(%"class.blink::WorkerSettings"* %122, i1 zeroext false, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.blink::GenericFontFamilySettings"* nonnull dereferenceable(176) %38) #10
  %123 = bitcast %"class.std::__1::unique_ptr.1183"* %37 to i8**
  store i8* %121, i8** %123, align 8
  call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %119) #10
  %124 = bitcast %"class.WTF::Vector.554"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #10
  call void @_ZN5blink18ConvertToMojoBlinkERKNS_9WebVectorINS_24WebContentSecurityPolicyEEE(%"class.WTF::Vector.554"* nonnull sret %39, %"class.blink::WebVector.1494"* dereferenceable(24) %8) #10
  %125 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #10
  %126 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %84, i64 0, i32 4
  %127 = load i32, i32* %126, align 8
  store i32 %127, i32* %40, align 4
  %128 = bitcast %"class.blink::SecurityOrigin"** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #10
  %129 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %84, i64 0, i32 3, i32 0
  %130 = bitcast %"class.blink::SecurityOrigin"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.blink::SecurityOrigin"** %41 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #10
  %134 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %84, i64 0, i32 6
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %42, align 4
  %136 = bitcast %"class.blink::WorkerClients"** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #10
  %137 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13WorkerClientsEEEPhm(i64 32) #10
  %138 = bitcast i8* %137 to i32 (...)***
  %139 = getelementptr inbounds i8, i8* %137, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink13WorkerClientsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %140 = getelementptr inbounds i8, i8* %137, i64 -4
  %141 = bitcast i8* %140 to i16*
  %142 = load atomic i16, i16* %141 monotonic, align 2
  %143 = or i16 %142, 1
  store atomic i16 %143, i16* %141 release, align 2
  %144 = bitcast %"class.blink::WorkerClients"** %43 to i8**
  store i8* %137, i8** %144, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.1596"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #10
  %146 = call %"class.blink::SharedWorkerContentSettingsProxy"* @_ZNSt3__111make_uniqueIN5blink32SharedWorkerContentSettingsProxyEJNS1_22CrossVariantMojoRemoteINS1_5mojom39WorkerContentSettingsProxyInterfaceBaseEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::CrossVariantMojoRemote.1555"* dereferenceable(8) %12)
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.1596", %"class.std::__1::unique_ptr.1596"* %44, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SharedWorkerContentSettingsProxy"* %146, %"class.blink::SharedWorkerContentSettingsProxy"** %147, align 8
  %148 = bitcast i8** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #10
  store i8* null, i8** %45, align 8
  %149 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #10
  store i32 0, i32* %46, align 4
  %150 = bitcast i8** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #10
  store i8* null, i8** %47, align 8
  %151 = bitcast %"struct.blink::BeginFrameProviderParams"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #10
  %152 = bitcast i8** %49 to i8*
  %153 = bitcast %"struct.blink::BeginFrameProviderParams"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %153, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #10
  store i8* null, i8** %49, align 8
  %154 = bitcast %"class.base::UnguessableToken"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #10
  %155 = bitcast %"class.base::UnguessableToken"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false)
  %156 = call %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_6WebURLERNS1_5mojom10ScriptTypeERKNS1_9WebStringESB_RKNS1_17UserAgentMetadataE13scoped_refptrINS1_21WebWorkerFetchContextEEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENSI_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginERbNS1_10HttpsStateEPNS1_13WorkerClientsENS_10unique_ptrINS1_32SharedWorkerContentSettingsProxyENS_14default_deleteIS12_EEEERKN4absl9nullopt_tEDnRKN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1E_EEEENS6_14V8CacheOptionsEDnNS1_22CrossVariantMojoRemoteINS6_35BrowserInterfaceBrokerInterfaceBaseEEENS1_24BeginFrameProviderParamsEDnS1B_RlEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::WebURL"* dereferenceable(96) %1, i32* nonnull dereferenceable(4) %26, %"class.blink::WebString"* dereferenceable(8) %4, %"class.blink::WebString"* dereferenceable(8) %6, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %7, %class.scoped_refptr.629* nonnull dereferenceable(8) %25, %"class.WTF::Vector.554"* nonnull dereferenceable(16) %39, i32* nonnull dereferenceable(4) %40, %"class.blink::SecurityOrigin"** nonnull dereferenceable(8) %41, i8* nonnull dereferenceable(1) %34, i32* nonnull dereferenceable(4) %42, %"class.blink::WorkerClients"** nonnull dereferenceable(8) %43, %"class.std::__1::unique_ptr.1596"* nonnull dereferenceable(8) %44, %"struct.absl::nullopt_t"* nonnull dereferenceable(1) @_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE, i8** nonnull dereferenceable(8) %45, %"class.base::UnguessableToken"* dereferenceable(16) %11, %"class.std::__1::unique_ptr.1183"* nonnull dereferenceable(8) %37, i32* nonnull dereferenceable(4) %46, i8** nonnull dereferenceable(8) %47, %"class.blink::CrossVariantMojoRemote.1556"* dereferenceable(8) %13, %"struct.blink::BeginFrameProviderParams"* nonnull dereferenceable(16) %48, i8** nonnull dereferenceable(8) %49, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %50, i64* nonnull dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #10
  %157 = load %"class.blink::SharedWorkerContentSettingsProxy"*, %"class.blink::SharedWorkerContentSettingsProxy"** %147, align 8
  store %"class.blink::SharedWorkerContentSettingsProxy"* null, %"class.blink::SharedWorkerContentSettingsProxy"** %147, align 8
  %158 = icmp eq %"class.blink::SharedWorkerContentSettingsProxy"* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %115
  %160 = bitcast %"class.blink::SharedWorkerContentSettingsProxy"* %157 to void (%"class.blink::SharedWorkerContentSettingsProxy"*)***
  %161 = load void (%"class.blink::SharedWorkerContentSettingsProxy"*)**, void (%"class.blink::SharedWorkerContentSettingsProxy"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::SharedWorkerContentSettingsProxy"*)*, void (%"class.blink::SharedWorkerContentSettingsProxy"*)** %161, i64 17
  %163 = load void (%"class.blink::SharedWorkerContentSettingsProxy"*)*, void (%"class.blink::SharedWorkerContentSettingsProxy"*)** %162, align 8
  call void %163(%"class.blink::SharedWorkerContentSettingsProxy"* nonnull %157) #10
  br label %164

164:                                              ; preds = %115, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #10
  %165 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %39, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %165, align 8
  %167 = icmp eq %"class.mojo::StructPtr"* %166, null
  br i1 %167, label %191, label %168, !prof !12

168:                                              ; preds = %164
  %169 = bitcast %"class.mojo::StructPtr"* %166 to i8*
  %170 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %39, i64 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %189, label %173, !prof !2

173:                                              ; preds = %168
  %174 = zext i32 %171 to i64
  %175 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %166, i64 %174
  br label %176

176:                                              ; preds = %183, %173
  %177 = phi %"class.mojo::StructPtr"* [ %184, %183 ], [ %166, %173 ]
  %178 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %177, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %178, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %178, align 8
  %180 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %176
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %179) #10
  %182 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %179 to i8*
  call void @_ZdlPv(i8* %182) #11
  br label %183

183:                                              ; preds = %181, %176
  %184 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %177, i64 1
  %185 = icmp eq %"class.mojo::StructPtr"* %184, %175
  br i1 %185, label %186, label %176

186:                                              ; preds = %183
  store i32 0, i32* %170, align 4
  %187 = bitcast %"class.WTF::Vector.554"* %39 to i8**
  %188 = load i8*, i8** %187, align 8
  br label %189

189:                                              ; preds = %186, %168
  %190 = phi i8* [ %188, %186 ], [ %169, %168 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %190) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %165, align 8
  br label %191

191:                                              ; preds = %164, %189
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #10
  %192 = call i8* @_Znwm(i64 56) #11
  %193 = bitcast i8* %192 to %"struct.blink::WorkerDevToolsParams"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 0, i64 56, i1 false) #10
  %194 = bitcast i8* %192 to %"struct.mojo::internal::PendingReceiverState"*
  call void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %194) #10
  %195 = getelementptr inbounds i8, i8* %192, i64 24
  %196 = bitcast i8* %195 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %196) #10
  %197 = getelementptr inbounds i8, i8* %192, i64 32
  %198 = getelementptr inbounds i8, i8* %192, i64 40
  %199 = bitcast %"class.base::UnguessableToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 16, i1 false)
  store i8 %63, i8* %197, align 8
  %200 = bitcast %"class.mojo::PendingRemote.1611"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #10
  %201 = getelementptr inbounds %"class.mojo::PendingRemote.1611", %"class.mojo::PendingRemote.1611"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %201, align 4
  %202 = getelementptr inbounds %"class.mojo::PendingRemote.1611", %"class.mojo::PendingRemote.1611"* %51, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %202, align 4
  %203 = getelementptr inbounds %"class.mojo::PendingRemote.1611", %"class.mojo::PendingRemote.1611"* %51, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %203) #10
  %204 = bitcast %"class.mojo::PendingReceiver.1606"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #10
  %205 = bitcast %"class.mojo::MessagePipeHandle"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #10, !noalias !28
  %206 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %23, i64 0, i32 0, i32 0
  store i32 0, i32* %206, align 4, !noalias !28
  %207 = bitcast %"class.mojo::MessagePipeHandle"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #10, !noalias !28
  %208 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %24, i64 0, i32 0, i32 0
  store i32 0, i32* %208, align 4, !noalias !28
  %209 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %206, i32* nonnull %208) #10, !noalias !28
  %210 = load i32, i32* %206, align 4, !noalias !28
  %211 = load i32, i32* %208, align 4, !noalias !28
  %212 = load i32, i32* %201, align 4, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #10, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #10, !noalias !28
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %191
  %215 = call i32 @MojoClose(i32 %212) #10
  br label %216

216:                                              ; preds = %214, %191
  store i32 %210, i32* %201, align 4, !noalias !28
  %217 = bitcast %"class.mojo::ScopedHandleBase"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217) #10, !noalias !28
  %218 = getelementptr inbounds %"class.mojo::PendingReceiver.1606", %"class.mojo::PendingReceiver.1606"* %52, i64 0, i32 0
  %219 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %22, i64 0, i32 0, i32 0, i32 0
  store i32 %211, i32* %219, align 4, !alias.scope !31, !noalias !28
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %218, %"class.mojo::ScopedHandleBase"* nonnull %22) #10
  %220 = load i32, i32* %219, align 4, !noalias !28
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %224, label %222

222:                                              ; preds = %216
  %223 = call i32 @MojoClose(i32 %220) #10
  br label %224

224:                                              ; preds = %216, %222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #10, !noalias !28
  %225 = call dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %194, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %218) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %218) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #10
  %226 = bitcast %"class.mojo::PendingReceiver.1612"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 24, i1 false)
  %227 = bitcast %"class.mojo::MessagePipeHandle"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %227) #10, !noalias !34
  %228 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %20, i64 0, i32 0, i32 0
  store i32 0, i32* %228, align 4, !noalias !34
  %229 = bitcast %"class.mojo::MessagePipeHandle"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #10, !noalias !34
  %230 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %21, i64 0, i32 0, i32 0
  store i32 0, i32* %230, align 4, !noalias !34
  %231 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %228, i32* nonnull %230) #10, !noalias !34
  %232 = load i32, i32* %228, align 4, !noalias !34
  %233 = load i32, i32* %230, align 4, !noalias !34
  %234 = bitcast i8* %195 to i32*
  %235 = load i32, i32* %234, align 4, !noalias !34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229) #10, !noalias !34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %227) #10, !noalias !34
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %224
  %238 = call i32 @MojoClose(i32 %235) #10
  br label %239

239:                                              ; preds = %237, %224
  store i32 %232, i32* %234, align 4, !noalias !34
  %240 = bitcast %"class.mojo::ScopedHandleBase"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240) #10, !noalias !34
  %241 = getelementptr inbounds %"class.mojo::PendingReceiver.1612", %"class.mojo::PendingReceiver.1612"* %53, i64 0, i32 0
  %242 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %19, i64 0, i32 0, i32 0, i32 0
  store i32 %233, i32* %242, align 4, !alias.scope !37, !noalias !34
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %241, %"class.mojo::ScopedHandleBase"* nonnull %19) #10
  %243 = load i32, i32* %242, align 4, !noalias !34
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %239
  %246 = call i32 @MojoClose(i32 %243) #10
  br label %247

247:                                              ; preds = %239, %245
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240) #10, !noalias !34
  %248 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %249 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %249, i64 0, i32 0
  %251 = getelementptr inbounds %"class.absl::optional.1613", %"class.absl::optional.1613"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %251) #10
  store i8 1, i8* %251, align 4
  %252 = getelementptr inbounds %"class.absl::optional.1613", %"class.absl::optional.1613"* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %253 = bitcast %"struct.blink::WorkerBackingThreadStartupData"* %252 to i64*
  store i64 4294967296, i64* %253, align 4
  call void @_ZN5blink12WorkerThread5StartENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEENS2_INS_20WorkerDevToolsParamsENS4_ISD_EEEE(%"class.blink::WorkerThread"* %250, %"struct.blink::GlobalScopeCreationParams"* %156, %"class.absl::optional.1613"* nonnull dereferenceable(12) %54, %"struct.blink::WorkerDevToolsParams"* nonnull %193) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %251) #10
  %254 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %248, align 8
  %255 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %254, i64 0, i32 0
  %256 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %255, i8 zeroext 1) #10
  %257 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 6
  %258 = ptrtoint %"class.base::SingleThreadTaskRunner"* %256 to i64
  %259 = bitcast %class.scoped_refptr.396* %257 to i64*
  %260 = getelementptr inbounds %class.scoped_refptr.396, %class.scoped_refptr.396* %257, i64 0, i32 0
  %261 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %260, align 8
  store i64 %258, i64* %259, align 8
  %262 = icmp eq %"class.base::SingleThreadTaskRunner"* %261, null
  br i1 %262, label %271, label %263

263:                                              ; preds = %247
  %264 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %261, i64 0, i32 0, i32 0, i32 1
  %265 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw sub i32* %265, i32 1 acq_rel
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %271

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %264, i64 -2
  %270 = bitcast %"class.base::RefCountedThreadSafe"* %269 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %270) #10
  br label %271

271:                                              ; preds = %247, %263, %268
  %272 = load i32, i32* %26, align 4
  switch i32 %272, label %287 [
    i32 0, label %273
    i32 1, label %279
  ]

273:                                              ; preds = %271
  %274 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %248, align 8
  %275 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %274, i64 0, i32 0
  %276 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %55, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %276) #10
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %55, %"class.blink::WebURL"* %1) #10
  %277 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"* %84)
  %278 = bitcast %"struct.v8_inspector::V8StackTraceId"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %278) #10
  call void @_ZN12v8_inspector14V8StackTraceIdC1Ev(%"struct.v8_inspector::V8StackTraceId"* nonnull %56) #10
  call void @_ZN5blink12WorkerThread24FetchAndRunClassicScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"* %275, %"class.blink::KURL"* nonnull dereferenceable(112) %55, %"struct.blink::WorkerMainScriptLoadParameters"* %60, %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %277, %"class.blink::WorkerResourceTimingNotifier"* null, %"struct.v8_inspector::V8StackTraceId"* nonnull dereferenceable(32) %56) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %278) #10
  br label %284

279:                                              ; preds = %271
  %280 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %248, align 8
  %281 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %280, i64 0, i32 0
  %282 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %57, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %282) #10
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %57, %"class.blink::WebURL"* %1) #10
  %283 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"* %84)
  call void @_ZN5blink12WorkerThread23FetchAndRunModuleScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierEN7network5mojom15CredentialsModeEN4base11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEE(%"class.blink::WorkerThread"* %281, %"class.blink::KURL"* nonnull dereferenceable(112) %57, %"struct.blink::WorkerMainScriptLoadParameters"* %60, %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %283, %"class.blink::WorkerResourceTimingNotifier"* null, i32 %3, i8 0) #10
  br label %284

284:                                              ; preds = %273, %279
  %285 = phi %"class.blink::KURL"* [ %57, %279 ], [ %55, %273 ]
  %286 = phi i8* [ %282, %279 ], [ %276, %273 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %285) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %286) #10
  br label %287

287:                                              ; preds = %284, %271
  %288 = phi i64 [ %15, %271 ], [ 0, %284 ]
  %289 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %289) #10
  %290 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %291 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %290, align 8
  %292 = getelementptr inbounds %"class.mojo::PendingRemote.1611", %"class.mojo::PendingRemote.1611"* %58, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %292, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %203) #10
  %293 = getelementptr inbounds %"class.mojo::PendingReceiver.1612", %"class.mojo::PendingReceiver.1612"* %59, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %293, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %241) #10
  call void @_ZN5blink5mojom5blink21SharedWorkerHostProxy20OnReadyForInspectionEN4mojo13PendingRemoteINS1_13DevToolsAgentEEENS3_15PendingReceiverINS1_17DevToolsAgentHostEEE(%"class.blink::mojom::blink::SharedWorkerHostProxy"* %291, %"class.mojo::PendingRemote.1611"* nonnull %58, %"class.mojo::PendingReceiver.1612"* nonnull %59) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %293) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %292) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %241) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %203) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #10
  %294 = load %"class.blink::WorkerSettings"*, %"class.blink::WorkerSettings"** %118, align 8
  store %"class.blink::WorkerSettings"* null, %"class.blink::WorkerSettings"** %118, align 8
  %295 = icmp eq %"class.blink::WorkerSettings"* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %294, i64 0, i32 4
  call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* %297) #10
  %298 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %294, i64 0, i32 0
  call void @free(i8* %298) #10
  br label %299

299:                                              ; preds = %287, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #10
  %300 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %61, align 8
  %301 = icmp eq %"class.blink::WebWorkerFetchContext"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %300, i64 0, i32 1
  %304 = getelementptr inbounds %"class.base::RefCounted.630", %"class.base::RefCounted.630"* %303, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %304) #10
  %305 = getelementptr inbounds %"class.base::RefCounted.630", %"class.base::RefCounted.630"* %303, i64 0, i32 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %315

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.base::RefCounted.630", %"class.base::RefCounted.630"* %303, i64 -2
  %310 = bitcast %"class.base::RefCounted.630"* %309 to %"class.blink::WebWorkerFetchContext"*
  %311 = bitcast %"class.base::RefCounted.630"* %309 to void (%"class.blink::WebWorkerFetchContext"*)***
  %312 = load void (%"class.blink::WebWorkerFetchContext"*)**, void (%"class.blink::WebWorkerFetchContext"*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %312, i64 1
  %314 = load void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %313, align 8
  call void %314(%"class.blink::WebWorkerFetchContext"* nonnull %310) #10
  br label %315

315:                                              ; preds = %299, %302, %308
  %316 = icmp eq i64 %288, 0
  br i1 %316, label %320, label %317

317:                                              ; preds = %315
  %318 = inttoptr i64 %288 to %"struct.blink::WorkerMainScriptLoadParameters"*
  call void @_ZN5blink30WorkerMainScriptLoadParametersD2Ev(%"struct.blink::WorkerMainScriptLoadParameters"* nonnull %318) #10
  %319 = inttoptr i64 %288 to i8*
  call void @_ZdlPv(i8* %319) #11
  br label %320

320:                                              ; preds = %315, %317
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigin3GetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i32 @_ZN5blink19CalculateHttpsStateEPKNS_14SecurityOriginEN4absl8optionalINS_10HttpsStateEEE(%"class.blink::SecurityOrigin"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17WebSecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14SchemeRegistry36SchemeShouldBypassSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink17WebSecurityOrigin8ProtocolEv(%"class.blink::WebString"* sret, %"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector.1194"*, %"class.WTF::Vector.1194"** %2, align 8
  store %"class.WTF::Vector.1194"* null, %"class.WTF::Vector.1194"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.1194"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.1194", %"class.WTF::Vector.1194"* %3, i64 -1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  %8 = bitcast i32* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::Vector.1194", %"class.WTF::Vector.1194"* %3, i64 %9
  br label %13

13:                                               ; preds = %53, %11
  %14 = phi %"class.WTF::Vector.1194"* [ %15, %53 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.WTF::Vector.1194", %"class.WTF::Vector.1194"* %14, i64 -1
  %16 = getelementptr inbounds %"class.WTF::Vector.1194", %"class.WTF::Vector.1194"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.1670"*, %"struct.std::__1::pair.1670"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.1670"* %17, null
  br i1 %18, label %53, label %19, !prof !12

19:                                               ; preds = %13
  %20 = bitcast %"struct.std::__1::pair.1670"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.1194", %"class.WTF::Vector.1194"* %14, i64 -1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !2

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.1670", %"struct.std::__1::pair.1670"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"struct.std::__1::pair.1670"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.1670", %"struct.std::__1::pair.1670"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"struct.std::__1::pair.1670", %"struct.std::__1::pair.1670"* %28, i64 1
  %47 = icmp eq %"struct.std::__1::pair.1670"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.1194"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #10
  store %"struct.std::__1::pair.1670"* null, %"struct.std::__1::pair.1670"** %16, align 8
  br label %53

53:                                               ; preds = %51, %13
  %54 = icmp eq %"class.WTF::Vector.1194"* %15, %3
  br i1 %54, label %55, label %13

55:                                               ; preds = %53, %5
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #10
  br label %56

56:                                               ; preds = %1, %55
  %57 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %57, align 8
  %59 = icmp eq %"struct.WTF::KeyValuePair.1190"* %58, null
  br i1 %59, label %93, label %60, !prof !12

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi i64 [ 0, %64 ], [ %89, %88 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %58, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, -3
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %58, i64 %67, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %87, %84, %71, %66
  %89 = add nuw nsw i64 %67, 1
  %90 = icmp eq i64 %89, %65
  br i1 %90, label %91, label %66

91:                                               ; preds = %88, %60
  %92 = bitcast %"struct.WTF::KeyValuePair.1190"* %58 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %57, align 8
  br label %93

93:                                               ; preds = %56, %91
  %94 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %94, align 8
  %96 = icmp eq %"struct.WTF::KeyValuePair.1190"* %95, null
  br i1 %96, label %130, label %97, !prof !12

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %97
  %102 = zext i32 %99 to i64
  br label %103

103:                                              ; preds = %125, %101
  %104 = phi i64 [ 0, %101 ], [ %126, %125 ]
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %95, i64 %104, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, -3
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %95, i64 %104, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #10
  br label %125

125:                                              ; preds = %124, %121, %108, %103
  %126 = add nuw nsw i64 %104, 1
  %127 = icmp eq i64 %126, %102
  br i1 %127, label %128, label %103

128:                                              ; preds = %125, %97
  %129 = bitcast %"struct.WTF::KeyValuePair.1190"* %95 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %94, align 8
  br label %130

130:                                              ; preds = %93, %128
  %131 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 0
  %132 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %131, align 8
  %133 = icmp eq %"struct.WTF::KeyValuePair.1190"* %132, null
  br i1 %133, label %167, label %134, !prof !12

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %165, label %138

138:                                              ; preds = %134
  %139 = zext i32 %136 to i64
  br label %140

140:                                              ; preds = %162, %138
  %141 = phi i64 [ 0, %138 ], [ %163, %162 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %132, i64 %141, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, -3
  br i1 %144, label %162, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %132, i64 %141, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #10
  br label %162

162:                                              ; preds = %161, %158, %145, %140
  %163 = add nuw nsw i64 %141, 1
  %164 = icmp eq i64 %163, %139
  br i1 %164, label %165, label %140

165:                                              ; preds = %162, %134
  %166 = bitcast %"struct.WTF::KeyValuePair.1190"* %132 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %131, align 8
  br label %167

167:                                              ; preds = %130, %165
  %168 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 0
  %169 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %168, align 8
  %170 = icmp eq %"struct.WTF::KeyValuePair.1190"* %169, null
  br i1 %170, label %204, label %171, !prof !12

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %202, label %175

175:                                              ; preds = %171
  %176 = zext i32 %173 to i64
  br label %177

177:                                              ; preds = %199, %175
  %178 = phi i64 [ 0, %175 ], [ %200, %199 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %169, i64 %178, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, -3
  br i1 %181, label %199, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %169, i64 %178, i32 1, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #10
  br label %199

199:                                              ; preds = %198, %195, %182, %177
  %200 = add nuw nsw i64 %178, 1
  %201 = icmp eq i64 %200, %176
  br i1 %201, label %202, label %177

202:                                              ; preds = %199, %171
  %203 = bitcast %"struct.WTF::KeyValuePair.1190"* %169 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %203) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %168, align 8
  br label %204

204:                                              ; preds = %167, %202
  %205 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 0
  %206 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %205, align 8
  %207 = icmp eq %"struct.WTF::KeyValuePair.1190"* %206, null
  br i1 %207, label %241, label %208, !prof !12

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  br label %214

214:                                              ; preds = %236, %212
  %215 = phi i64 [ 0, %212 ], [ %237, %236 ]
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %206, i64 %215, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, -3
  br i1 %218, label %236, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %206, i64 %215, i32 1, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #10
  br label %236

236:                                              ; preds = %235, %232, %219, %214
  %237 = add nuw nsw i64 %215, 1
  %238 = icmp eq i64 %237, %213
  br i1 %238, label %239, label %214

239:                                              ; preds = %236, %208
  %240 = bitcast %"struct.WTF::KeyValuePair.1190"* %206 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %240) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %205, align 8
  br label %241

241:                                              ; preds = %204, %239
  %242 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 0
  %243 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %242, align 8
  %244 = icmp eq %"struct.WTF::KeyValuePair.1190"* %243, null
  br i1 %244, label %278, label %245, !prof !12

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %276, label %249

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  br label %251

251:                                              ; preds = %273, %249
  %252 = phi i64 [ 0, %249 ], [ %274, %273 ]
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %243, i64 %252, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, -3
  br i1 %255, label %273, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %243, i64 %252, i32 1, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #10
  br label %273

273:                                              ; preds = %272, %269, %256, %251
  %274 = add nuw nsw i64 %252, 1
  %275 = icmp eq i64 %274, %250
  br i1 %275, label %276, label %251

276:                                              ; preds = %273, %245
  %277 = bitcast %"struct.WTF::KeyValuePair.1190"* %243 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %277) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %242, align 8
  br label %278

278:                                              ; preds = %241, %276
  %279 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 0
  %280 = load %"struct.WTF::KeyValuePair.1190"*, %"struct.WTF::KeyValuePair.1190"** %279, align 8
  %281 = icmp eq %"struct.WTF::KeyValuePair.1190"* %280, null
  br i1 %281, label %315, label %282, !prof !12

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %313, label %286

286:                                              ; preds = %282
  %287 = zext i32 %284 to i64
  br label %288

288:                                              ; preds = %310, %286
  %289 = phi i64 [ 0, %286 ], [ %311, %310 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %280, i64 %289, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, -3
  br i1 %292, label %310, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.1190", %"struct.WTF::KeyValuePair.1190"* %280, i64 %289, i32 1, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #10
  br label %310

310:                                              ; preds = %309, %306, %293, %288
  %311 = add nuw nsw i64 %289, 1
  %312 = icmp eq i64 %311, %287
  br i1 %312, label %313, label %288

313:                                              ; preds = %310, %282
  %314 = bitcast %"struct.WTF::KeyValuePair.1190"* %280 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #10
  store %"struct.WTF::KeyValuePair.1190"* null, %"struct.WTF::KeyValuePair.1190"** %279, align 8
  br label %315

315:                                              ; preds = %278, %313
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::GlobalScopeCreationParams"* @_ZNSt3__111make_uniqueIN5blink25GlobalScopeCreationParamsEJRKNS1_6WebURLERNS1_5mojom10ScriptTypeERKNS1_9WebStringESB_RKNS1_17UserAgentMetadataE13scoped_refptrINS1_21WebWorkerFetchContextEEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENSI_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS1_14SecurityOriginERbNS1_10HttpsStateEPNS1_13WorkerClientsENS_10unique_ptrINS1_32SharedWorkerContentSettingsProxyENS_14default_deleteIS12_EEEERKN4absl9nullopt_tEDnRKN4base16UnguessableTokenENS11_INS1_14WorkerSettingsENS13_IS1E_EEEENS6_14V8CacheOptionsEDnNS1_22CrossVariantMojoRemoteINS6_35BrowserInterfaceBrokerInterfaceBaseEEENS1_24BeginFrameProviderParamsEDnS1B_RlEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::WebURL"* dereferenceable(96), i32* dereferenceable(4), %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), %"struct.blink::UserAgentMetadata"* dereferenceable(152), %class.scoped_refptr.629* dereferenceable(8), %"class.WTF::Vector.554"* dereferenceable(16), i32* dereferenceable(4), %"class.blink::SecurityOrigin"** dereferenceable(8), i8* dereferenceable(1), i32* dereferenceable(4), %"class.blink::WorkerClients"** dereferenceable(8), %"class.std::__1::unique_ptr.1596"* dereferenceable(8), %"struct.absl::nullopt_t"* dereferenceable(1), i8** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), %"class.std::__1::unique_ptr.1183"* dereferenceable(8), i32* dereferenceable(4), i8** dereferenceable(8), %"class.blink::CrossVariantMojoRemote.1556"* dereferenceable(8), %"struct.blink::BeginFrameProviderParams"* dereferenceable(16), i8** dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i64* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %25 = alloca %"class.mojo::ScopedHandleBase", align 4
  %26 = alloca i64, align 8
  %27 = alloca %"class.blink::KURL", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.absl::optional.1720", align 8
  %31 = alloca %"class.WTF::Vector.554", align 8
  %32 = alloca %"class.mojo::PendingRemote.1587", align 4
  %33 = alloca <4 x i32>, align 16
  %34 = bitcast <4 x i32>* %33 to %"struct.blink::BeginFrameProviderParams"*
  %35 = alloca %"class.base::UnguessableToken", align 8
  %36 = alloca %"class.absl::optional.1588", align 8
  %37 = tail call noalias i8* @malloc(i64 520) #10
  %38 = bitcast i8* %37 to %"struct.blink::GlobalScopeCreationParams"*
  %39 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #10
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %27, %"class.blink::WebURL"* %0) #10
  %40 = load i32, i32* %1, align 4
  %41 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %42 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #10
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %3) #10
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.absl::optional.1720", %"class.absl::optional.1720"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %47) #10
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.absl::optional.1720", %"class.absl::optional.1720"* %30, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataC2ERKS0_(%"struct.blink::UserAgentMetadata"* %48, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %4) #10
  %49 = getelementptr inbounds %class.scoped_refptr.629, %class.scoped_refptr.629* %5, i64 0, i32 0
  %50 = bitcast %class.scoped_refptr.629* %5 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.blink::WebWorkerFetchContext"* null, %"class.blink::WebWorkerFetchContext"** %49, align 8
  %52 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %31, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %31, i64 0, i32 0, i32 0, i32 2
  %54 = bitcast %"class.WTF::Vector.554"* %6 to i64*
  %55 = bitcast %"class.WTF::Vector.554"* %31 to i64*
  store i64 0, i64* %55, align 8
  %56 = load i64, i64* %54, align 8
  %57 = bitcast %"class.WTF::Vector.554"* %31 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %6, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %52, align 8
  store i32 0, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %6, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %53, align 4
  store i32 0, i32* %60, align 4
  %62 = load i32, i32* %7, align 4
  %63 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %64 = load i8, i8* %9, align 1, !range !13
  %65 = icmp ne i8 %64, 0
  %66 = load i32, i32* %10, align 4
  %67 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %11, align 8
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.1596", %"class.std::__1::unique_ptr.1596"* %12, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr.1596"* %12 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.blink::SharedWorkerContentSettingsProxy"* null, %"class.blink::SharedWorkerContentSettingsProxy"** %68, align 8
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.1183", %"class.std::__1::unique_ptr.1183"* %16, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.1183"* %16 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.blink::WorkerSettings"* null, %"class.blink::WorkerSettings"** %71, align 8
  %74 = load i32, i32* %17, align 4
  %75 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4, !noalias !40
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %24
  store i32 0, i32* %76, align 4, !noalias !43
  %80 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %19, i64 0, i32 0
  %81 = load i32, i32* %80, align 4, !noalias !40
  %82 = bitcast %"class.mojo::ScopedHandleBase"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #10, !noalias !40
  %83 = bitcast i64* %26 to %"struct.mojo::internal::PendingRemoteState"*
  %84 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %25, i64 0, i32 0, i32 0, i32 0
  store i32 %77, i32* %84, align 4, !alias.scope !46, !noalias !40
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %83, %"class.mojo::ScopedHandleBase"* nonnull %25, i32 %81) #10
  %85 = load i32, i32* %84, align 4, !noalias !40
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = call i32 @MojoClose(i32 %85) #10
  br label %89

89:                                               ; preds = %87, %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #10, !noalias !40
  br label %92

90:                                               ; preds = %24
  store i64 0, i64* %26, align 8, !alias.scope !40
  %91 = bitcast i64* %26 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %91) #10
  br label %92

92:                                               ; preds = %89, %90
  %93 = phi %"struct.mojo::internal::PendingRemoteState"* [ %83, %89 ], [ %91, %90 ]
  %94 = getelementptr inbounds %"class.mojo::PendingRemote.1587", %"class.mojo::PendingRemote.1587"* %32, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %94, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %93) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %95 = bitcast %"struct.blink::BeginFrameProviderParams"* %20 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4
  store <4 x i32> %96, <4 x i32>* %33, align 16
  %97 = bitcast %"class.base::UnguessableToken"* %35 to i8*
  %98 = bitcast %"class.base::UnguessableToken"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* align 8 %98, i64 16, i1 false)
  %99 = load i64, i64* %23, align 8
  %100 = getelementptr inbounds %"class.absl::optional.1588", %"class.absl::optional.1588"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #10
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.absl::optional.1588", %"class.absl::optional.1588"* %36, i64 0, i32 0, i32 0, i32 0, i32 2
  %102 = bitcast %union.anon.1592* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #10
  call void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"* %38, %"class.blink::KURL"* nonnull dereferenceable(112) %27, i32 %40, %"class.WTF::String"* nonnull dereferenceable(8) %28, %"class.WTF::String"* nonnull dereferenceable(8) %29, %"class.absl::optional.1720"* nonnull dereferenceable(160) %30, i64 %51, %"class.WTF::Vector.554"* nonnull %31, i32 %62, %"class.blink::SecurityOrigin"* %63, i1 zeroext %65, i32 %66, %"class.blink::WorkerClients"* %67, i64 %70, i64 0, %"class.WTF::Vector.577"* null, %"class.base::UnguessableToken"* dereferenceable(16) %15, i64 %73, i32 %74, %"class.blink::WorkletModuleResponsesMap"* null, %"class.mojo::PendingRemote.1587"* nonnull %32, %"struct.blink::BeginFrameProviderParams"* nonnull %34, %"class.blink::PermissionsPolicy"* null, %"class.base::UnguessableToken"* nonnull byval(%"class.base::UnguessableToken") align 8 %35, i64 %99, %"class.absl::optional.1588"* nonnull dereferenceable(32) %36, i1 zeroext false, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %94) #10
  %103 = getelementptr inbounds %"class.WTF::Vector.554", %"class.WTF::Vector.554"* %31, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %103, align 8
  %105 = icmp eq %"class.mojo::StructPtr"* %104, null
  br i1 %105, label %128, label %106, !prof !12

106:                                              ; preds = %92
  %107 = bitcast %"class.mojo::StructPtr"* %104 to i8*
  %108 = load i32, i32* %53, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %126, label %110, !prof !2

110:                                              ; preds = %106
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %104, i64 %111
  br label %113

113:                                              ; preds = %120, %110
  %114 = phi %"class.mojo::StructPtr"* [ %121, %120 ], [ %104, %110 ]
  %115 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %115, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %115, align 8
  %117 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %116) #10
  %119 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %116 to i8*
  call void @_ZdlPv(i8* %119) #11
  br label %120

120:                                              ; preds = %118, %113
  %121 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 1
  %122 = icmp eq %"class.mojo::StructPtr"* %121, %112
  br i1 %122, label %123, label %113

123:                                              ; preds = %120
  store i32 0, i32* %53, align 4
  %124 = bitcast %"class.WTF::Vector.554"* %31 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %106
  %127 = phi i8* [ %125, %123 ], [ %107, %106 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %127) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %103, align 8
  br label %128

128:                                              ; preds = %92, %126
  %129 = load i8, i8* %47, align 8, !range !13
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %48) #10
  store i8 0, i8* %47, align 8
  br label %132

132:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %47) #10
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #10
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #10
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %39) #10
  ret %"struct.blink::GlobalScopeCreationParams"* %38
}

declare void @_ZN5blink18ConvertToMojoBlinkERKNS_9WebVectorINS_24WebContentSecurityPolicyEEE(%"class.WTF::Vector.554"* sret, %"class.blink::WebVector.1494"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SharedWorkerContentSettingsProxy"* @_ZNSt3__111make_uniqueIN5blink32SharedWorkerContentSettingsProxyEJNS1_22CrossVariantMojoRemoteINS1_5mojom39WorkerContentSettingsProxyInterfaceBaseEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::CrossVariantMojoRemote.1555"* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %2 = alloca %"class.mojo::ScopedHandleBase", align 4
  %3 = alloca i64, align 8
  %4 = alloca %"class.mojo::PendingRemote.1599", align 4
  %5 = tail call i8* @_Znwm(i64 16) #11
  %6 = bitcast i8* %5 to %"class.blink::SharedWorkerContentSettingsProxy"*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4, !noalias !49
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  store i32 0, i32* %8, align 4, !noalias !52
  %12 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !49
  %14 = bitcast %"class.mojo::ScopedHandleBase"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10, !noalias !49
  %15 = bitcast i64* %3 to %"struct.mojo::internal::PendingRemoteState"*
  %16 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 %9, i32* %16, align 4, !alias.scope !55, !noalias !49
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %15, %"class.mojo::ScopedHandleBase"* nonnull %2, i32 %13) #10
  %17 = load i32, i32* %16, align 4, !noalias !49
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  %20 = call i32 @MojoClose(i32 %17) #10
  br label %21

21:                                               ; preds = %19, %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10, !noalias !49
  br label %24

22:                                               ; preds = %1
  store i64 0, i64* %3, align 8, !alias.scope !49
  %23 = bitcast i64* %3 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %23) #10
  br label %24

24:                                               ; preds = %21, %22
  %25 = phi %"struct.mojo::internal::PendingRemoteState"* [ %15, %21 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.1599", %"class.mojo::PendingRemote.1599"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %26, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %25) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  call void @_ZN5blink32SharedWorkerContentSettingsProxyC1EN4mojo13PendingRemoteINS_5mojom5blink26WorkerContentSettingsProxyEEE(%"class.blink::SharedWorkerContentSettingsProxy"* nonnull %6, %"class.mojo::PendingRemote.1599"* nonnull %4) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %26) #10
  ret %"class.blink::SharedWorkerContentSettingsProxy"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink12WorkerThread5StartENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEENS2_INS_20WorkerDevToolsParamsENS4_ISD_EEEE(%"class.blink::WorkerThread"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.absl::optional.1613"* dereferenceable(12), %"struct.blink::WorkerDevToolsParams"*) local_unnamed_addr #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink12WorkerThread24FetchAndRunClassicScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::WorkerMainScriptLoadParameters"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* sret, %"class.blink::WebURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %class.scoped_refptr.473, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::KURL"* %7) #10
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::KURL"* %9) #10
  %10 = bitcast %class.scoped_refptr.473* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %11, align 8
  %13 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %12) #10
  %14 = getelementptr inbounds %class.scoped_refptr.473, %class.scoped_refptr.473* %4, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %13, %"class.blink::SecurityOrigin"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 4
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5
  %18 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %17) #10
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 8
  %23 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10
  %25 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* nonnull dereferenceable(112) %2, %"class.blink::KURL"* nonnull dereferenceable(112) %3, %class.scoped_refptr.473* nonnull dereferenceable(8) %4, i32* dereferenceable(4) %15, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32* dereferenceable(4) %20, i32* dereferenceable(4) %21, i32* dereferenceable(4) %22, i32* dereferenceable(4) %23, %"class.WTF::HashSet.516"* dereferenceable(24) %24)
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %1, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %42 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  %43 = icmp eq %"class.blink::SecurityOrigin"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #10
  %46 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %42) #10
  %50 = bitcast %"class.blink::SecurityOrigin"* %42 to i8*
  call void @free(i8* %50) #10
  br label %51

51:                                               ; preds = %41, %44, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #10
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %25
}

declare void @_ZN12v8_inspector14V8StackTraceIdC1Ev(%"struct.v8_inspector::V8StackTraceId"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN5blink12WorkerThread23FetchAndRunModuleScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierEN7network5mojom15CredentialsModeEN4base11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEE(%"class.blink::WorkerThread"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::WorkerMainScriptLoadParameters"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, i32, i8) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxy20OnReadyForInspectionEN4mojo13PendingRemoteINS1_13DevToolsAgentEEENS3_15PendingReceiverINS1_17DevToolsAgentHostEEE(%"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.mojo::PendingRemote.1611"*, %"class.mojo::PendingReceiver.1612"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebSharedWorkerImpl22TerminateWorkerContextEv(%"class.blink::WebSharedWorkerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !13
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  store i8 1, i8* %2, align 1
  %6 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %16, i64 %17
  br label %19

19:                                               ; preds = %19, %14
  %20 = phi %"struct.std::__1::pair.835"* [ %22, %19 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %20, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %21) #10
  %22 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %20, i64 1
  %23 = icmp eq %"struct.std::__1::pair.835"* %22, %18
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  store i32 0, i32* %11, align 4
  br label %25

25:                                               ; preds = %24, %10
  %26 = bitcast %"class.WTF::Vector.832"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.WTF::Vector.832"* %6 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %25, %5
  %30 = getelementptr inbounds %"class.blink::WebSharedWorkerImpl", %"class.blink::WebSharedWorkerImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::SharedWorkerThread"*, %"class.blink::SharedWorkerThread"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::SharedWorkerThread", %"class.blink::SharedWorkerThread"* %31, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThread9TerminateEv(%"class.blink::WorkerThread"* %32) #10
  br label %33

33:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebSharedWorker"* @_ZN5blink15WebSharedWorker14CreateAndStartERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKNS_6WebURLENS_5mojom10ScriptTypeEN7network5mojom15CredentialsModeERKNS_9WebStringENS_17WebSecurityOriginESH_RKNS_17UserAgentMetadataERKNS_9WebVectorINS_24WebContentSecurityPolicyEEENSD_14IPAddressSpaceERKNS_28WebFetchClientSettingsObjectERKN4base16UnguessableTokenESY_NS_22CrossVariantMojoRemoteINSA_39WorkerContentSettingsProxyInterfaceBaseEEENSZ_INSA_35BrowserInterfaceBrokerInterfaceBaseEEEbNSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS14_14default_deleteIS16_EEEE13scoped_refptrINS_21WebWorkerFetchContextEENSZ_INSA_29SharedWorkerHostInterfaceBaseEEEPNS_21WebSharedWorkerClientEl(%"class.util::TokenType"* dereferenceable(16), %"class.blink::WebURL"* dereferenceable(96), i32, i32, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebSecurityOrigin"*, %"class.blink::WebString"* dereferenceable(8), %"struct.blink::UserAgentMetadata"* dereferenceable(152), %"class.blink::WebVector.1494"* dereferenceable(24), i32, %"struct.blink::WebFetchClientSettingsObject"* dereferenceable(112), %"class.base::UnguessableToken"* dereferenceable(16), %"class.base::UnguessableToken"* dereferenceable(16), %"class.blink::CrossVariantMojoRemote.1555"* nocapture, %"class.blink::CrossVariantMojoRemote.1556"* nocapture, i1 zeroext, i64, i64, %"class.blink::CrossVariantMojoRemote"* nocapture, %"class.blink::WebSharedWorkerClient"*, i64) local_unnamed_addr #0 align 2 {
  %22 = alloca %"class.blink::CrossVariantMojoRemote", align 4
  %23 = alloca %"class.blink::WebSecurityOrigin", align 8
  %24 = alloca %"class.blink::CrossVariantMojoRemote.1555", align 4
  %25 = alloca %"class.blink::CrossVariantMojoRemote.1556", align 4
  %26 = tail call i8* @_Znwm(i64 136) #11
  %27 = bitcast i8* %26 to %"class.blink::WebSharedWorkerImpl"*
  %28 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %22, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %18, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote", %"class.blink::CrossVariantMojoRemote"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4, !noalias !58
  store i32 %33, i32* %31, align 4, !alias.scope !58
  store i32 0, i32* %32, align 4, !noalias !58
  call void @_ZN5blink19WebSharedWorkerImplC2ERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS_5mojom29SharedWorkerHostInterfaceBaseEEEPNS_21WebSharedWorkerClientE(%"class.blink::WebSharedWorkerImpl"* nonnull %27, %"class.util::TokenType"* dereferenceable(16) %0, %"class.base::UnguessableToken"* dereferenceable(16) %11, %"class.blink::CrossVariantMojoRemote"* nonnull %22, %"class.blink::WebSharedWorkerClient"* %19)
  %34 = load i32, i32* %31, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %21
  %37 = tail call i32 @MojoClose(i32 %34) #10
  br label %38

38:                                               ; preds = %21, %36
  %39 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %23, i64 0, i32 0, i32 0
  store i8* null, i8** %39, align 8
  call void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* nonnull %23, %"class.blink::WebSecurityOrigin"* dereferenceable(8) %5) #10
  %40 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %24, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %13, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1555", %"class.blink::CrossVariantMojoRemote.1555"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4, !noalias !61
  store i32 %45, i32* %43, align 4, !alias.scope !61
  store i32 0, i32* %44, align 4, !noalias !61
  %46 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %25, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %14, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %46, align 4
  %49 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::CrossVariantMojoRemote.1556", %"class.blink::CrossVariantMojoRemote.1556"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4, !noalias !64
  store i32 %51, i32* %49, align 4, !alias.scope !64
  store i32 0, i32* %50, align 4, !noalias !64
  call void @_ZN5blink19WebSharedWorkerImpl18StartWorkerContextERKNS_6WebURLENS_5mojom10ScriptTypeEN7network5mojom15CredentialsModeERKNS_9WebStringENS_17WebSecurityOriginESB_RKNS_17UserAgentMetadataERKNS_9WebVectorINS_24WebContentSecurityPolicyEEENS7_14IPAddressSpaceERKNS_28WebFetchClientSettingsObjectERKN4base16UnguessableTokenENS_22CrossVariantMojoRemoteINS4_39WorkerContentSettingsProxyInterfaceBaseEEENST_INS4_35BrowserInterfaceBrokerInterfaceBaseEEEbNSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENSY_14default_deleteIS10_EEEE13scoped_refptrINS_21WebWorkerFetchContextEEl(%"class.blink::WebSharedWorkerImpl"* nonnull %27, %"class.blink::WebURL"* dereferenceable(96) %1, i32 %2, i32 %3, %"class.blink::WebString"* dereferenceable(8) %4, %"class.blink::WebSecurityOrigin"* nonnull %23, %"class.blink::WebString"* dereferenceable(8) %6, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %7, %"class.blink::WebVector.1494"* dereferenceable(24) %8, i32 %9, %"struct.blink::WebFetchClientSettingsObject"* dereferenceable(112) %10, %"class.base::UnguessableToken"* dereferenceable(16) %12, %"class.blink::CrossVariantMojoRemote.1555"* nonnull %24, %"class.blink::CrossVariantMojoRemote.1556"* nonnull %25, i1 zeroext %15, i64 %16, i64 %17, i64 %20)
  %52 = load i32, i32* %49, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %38
  %55 = call i32 @MojoClose(i32 %52) #10
  br label %56

56:                                               ; preds = %38, %54
  %57 = load i32, i32* %43, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i32 @MojoClose(i32 %57) #10
  br label %61

61:                                               ; preds = %59, %56
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* nonnull %23) #10
  %62 = bitcast i8* %26 to %"class.blink::WebSharedWorker"*
  ret %"class.blink::WebSharedWorker"* %62
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WebSharedWorkerImplEFvNS3_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.blink::MessagePortChannel", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::MessagePortChannel"*
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::MessagePortChannel"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds i8, i8* %6, i64 %13
  %16 = bitcast i8* %15 to %"class.blink::WebSharedWorkerImpl"*
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %10, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)**
  %25 = load void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)*, void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %10 to void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.blink::WebSharedWorkerImpl"*, %"class.blink::MessagePortChannel"*)* [ %25, %19 ], [ %27, %26 ]
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %2, %"class.blink::MessagePortChannel"* dereferenceable(8) %8) #10
  call void %29(%"class.blink::WebSharedWorkerImpl"* %16, %"class.blink::MessagePortChannel"* nonnull %2) #10
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WebSharedWorkerImplEFvNS2_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::MessagePortChannel"*
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #3

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(24) %"struct.mojo::internal::PendingReceiverState"* @_ZN4mojo8internal20PendingReceiverStateaSEOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %class.scoped_refptr.473* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::HashSet.516"* dereferenceable(24)) local_unnamed_addr #5 comdat {
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::HashSet.516", align 8
  %14 = tail call noalias i8* @malloc(i64 288) #10
  %15 = bitcast i8* %14 to %"struct.blink::CrossThreadFetchClientSettingsObjectData"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %11, %"class.blink::KURL"* dereferenceable(112) %0) #10
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %16 = getelementptr inbounds %class.scoped_refptr.473, %class.scoped_refptr.473* %2, i64 0, i32 0
  %17 = bitcast %class.scoped_refptr.473* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %16, align 8
  %19 = load i32, i32* %3, align 4
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::String"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %8, align 4
  %27 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %13, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::HashSet.516"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 20, i1 false) #10
  %30 = load i32, i32* %28, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %69, label %32

32:                                               ; preds = %10
  call void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.517"* nonnull %27, i32 %30) #10
  %33 = load i32, i32* %28, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %36, i64 %39
  br i1 %34, label %69, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %41, %48
  %44 = phi i32* [ %49, %48 ], [ %36, %41 ]
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds i32, i32* %44, i64 1
  %50 = icmp eq i32* %49, %40
  br i1 %50, label %69, label %43

51:                                               ; preds = %43, %41
  %52 = phi i32* [ %36, %41 ], [ %44, %43 ]
  %53 = icmp eq i32* %52, %40
  br i1 %53, label %69, label %54

54:                                               ; preds = %51, %67
  %55 = phi i32* [ %60, %67 ], [ %52, %51 ]
  %56 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.517"* nonnull %27, i32* dereferenceable(4) %55, i32* dereferenceable(4) %55) #10
  %57 = getelementptr inbounds i32, i32* %55, i64 1
  %58 = icmp eq i32* %57, %40
  br i1 %58, label %69, label %59

59:                                               ; preds = %54, %64
  %60 = phi i32* [ %65, %64 ], [ %57, %54 ]
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  %63 = icmp ult i32 %62, 2
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds i32, i32* %60, i64 1
  %66 = icmp eq i32* %65, %40
  br i1 %66, label %69, label %59

67:                                               ; preds = %59
  %68 = icmp eq i32* %60, %40
  br i1 %68, label %69, label %54

69:                                               ; preds = %48, %67, %54, %64, %51, %32, %10
  %70 = bitcast i8* %14 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %70, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #10
  %71 = getelementptr inbounds i8, i8* %14, i64 112
  %72 = bitcast i8* %71 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %72, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #10
  %73 = getelementptr inbounds i8, i8* %14, i64 224
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %14, i64 232
  %76 = bitcast i8* %75 to i32*
  store i32 %19, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %14, i64 240
  %78 = bitcast i8* %77 to i64*
  store i64 %22, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %14, i64 248
  %80 = bitcast i8* %79 to i32*
  store i32 %23, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %14, i64 252
  %82 = bitcast i8* %81 to i32*
  store i32 %24, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %14, i64 256
  %84 = bitcast i8* %83 to i32*
  store i32 %25, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %14, i64 260
  %86 = bitcast i8* %85 to i32*
  store i32 %26, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %14, i64 264
  %88 = getelementptr inbounds i8, i8* %14, i64 272
  %89 = bitcast i8* %88 to i32*
  %90 = getelementptr inbounds i8, i8* %14, i64 276
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds i8, i8* %14, i64 280
  %93 = bitcast i8* %92 to i32*
  %94 = bitcast %"class.WTF::HashSet.516"* %13 to i64*
  %95 = bitcast i8* %87 to i64*
  store i64 0, i64* %95, align 8
  %96 = load i64, i64* %94, align 8
  %97 = bitcast i8* %87 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %13, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %89, align 4
  store i32 0, i32* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %13, i64 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %91, align 4
  store i32 0, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %13, i64 0, i32 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 2147483647
  store i32 %104, i32* %93, align 8
  %105 = and i32 %103, -2147483648
  store i32 %105, i32* %102, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #10
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %15
}

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.517"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 2
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to i32*
  %31 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.517"* %0, i32* %30, i32 %17, i32* null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.517"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.517"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %99
  %19 = bitcast %"class.WTF::HashTable.517"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %100, %18 ]
  %23 = phi i32* [ null, %10 ], [ %103, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %99
  %32 = phi i64 [ %17, %13 ], [ %100, %99 ]
  %33 = phi i32 [ %7, %13 ], [ %101, %99 ]
  %34 = phi i32* [ %16, %13 ], [ %102, %99 ]
  %35 = phi i32* [ null, %13 ], [ %103, %99 ]
  %36 = phi i32 [ 0, %13 ], [ %104, %99 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %99, label %42

42:                                               ; preds = %31
  %43 = and i32 %39, %14
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = ptrtoint i32* %45 to i64
  %47 = load i32, i32* %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = xor i32 %39, -1
  %51 = lshr i32 %39, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %72

63:                                               ; preds = %79
  %64 = ptrtoint i32* %86 to i64
  %65 = inttoptr i64 %81 to i32*
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i64 [ %64, %63 ], [ %46, %42 ]
  %68 = phi i32* [ %65, %63 ], [ null, %42 ]
  %69 = icmp eq i32* %68, null
  %70 = ptrtoint i32* %68 to i64
  %71 = select i1 %69, i64 %67, i64 %70
  br label %90

72:                                               ; preds = %79, %49
  %73 = phi i64 [ 0, %49 ], [ %81, %79 ]
  %74 = phi i32 [ %47, %49 ], [ %88, %79 ]
  %75 = phi i64 [ %46, %49 ], [ %87, %79 ]
  %76 = phi i64 [ %44, %49 ], [ %85, %79 ]
  %77 = phi i64 [ 0, %49 ], [ %83, %79 ]
  %78 = icmp eq i32 %74, %39
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %74, -1
  %81 = select i1 %80, i64 %75, i64 %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %62, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds i32, i32* %1, i64 %85
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %86, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %63, label %72

90:                                               ; preds = %72, %66
  %91 = phi i64 [ %71, %66 ], [ %75, %72 ]
  %92 = inttoptr i64 %91 to i32*
  store i32 %39, i32* %92, align 4
  %93 = load i32*, i32** %9, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %37
  %95 = icmp eq i32* %94, %3
  %96 = select i1 %95, i32* %92, i32* %35
  %97 = load i32, i32* %6, align 8
  %98 = ptrtoint i32* %93 to i64
  br label %99

99:                                               ; preds = %31, %90
  %100 = phi i64 [ %32, %31 ], [ %98, %90 ]
  %101 = phi i32 [ %33, %31 ], [ %97, %90 ]
  %102 = phi i32* [ %34, %31 ], [ %93, %90 ]
  %103 = phi i32* [ %35, %31 ], [ %96, %90 ]
  %104 = add i32 %36, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.517"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.517"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %11, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %10
  %23 = xor i32 %16, -1
  %24 = lshr i32 %16, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %22, %43
  %37 = phi i32 [ %20, %22 ], [ %51, %43 ]
  %38 = phi i32* [ %19, %22 ], [ %50, %43 ]
  %39 = phi i32* [ null, %22 ], [ %45, %43 ]
  %40 = phi i64 [ %18, %22 ], [ %49, %43 ]
  %41 = phi i64 [ 0, %22 ], [ %47, %43 ]
  %42 = icmp eq i32 %37, %16
  br i1 %42, label %76, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %44, i32* %38, i32* %39
  %46 = icmp eq i64 %41, 0
  %47 = select i1 %46, i64 %35, i64 %41
  %48 = add i64 %47, %40
  %49 = and i64 %48, %15
  %50 = getelementptr inbounds i32, i32* %11, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %36

53:                                               ; preds = %43
  %54 = icmp eq i32* %45, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  store i32 0, i32* %45, align 4
  %56 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %10, %53, %55
  %63 = phi i32* [ %45, %55 ], [ %50, %53 ], [ %19, %10 ]
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 1
  %72 = load i32, i32* %12, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.517"* %0, i32* %63)
  br label %76

76:                                               ; preds = %36, %62, %74
  %77 = phi i8 [ 1, %62 ], [ 1, %74 ], [ 0, %36 ]
  %78 = phi i32* [ %63, %62 ], [ %75, %74 ], [ %38, %36 ]
  %79 = insertvalue { i32*, i8 } undef, i32* %78, 0
  %80 = insertvalue { i32*, i8 } %79, i8 %77, 1
  ret { i32*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.517"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.517", %"class.WTF::HashTable.517"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.517"* %0, i32* %36, i32 %32, i32* %1) #10
  ret i32* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"*, %"class.blink::WebSecurityOrigin"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN5blink26SharedWorkerReportingProxyC1EPNS_19WebSharedWorkerImplEPNS_33ParentExecutionContextTaskRunnersE(%"class.blink::SharedWorkerReportingProxy"*, %"class.blink::WebSharedWorkerImpl"*, %"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26SharedWorkerReportingProxyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.189"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26SharedWorkerReportingProxyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.189"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26SharedWorkerReportingProxyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26SharedWorkerReportingProxyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SharedWorkerReportingProxy"*
  tail call void @_ZNK5blink26SharedWorkerReportingProxy5TraceEPNS_7VisitorE(%"class.blink::SharedWorkerReportingProxy"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_26SharedWorkerReportingProxyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SharedWorkerReportingProxy"*
  tail call void @_ZN5blink26SharedWorkerReportingProxyD1Ev(%"class.blink::SharedWorkerReportingProxy"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26SharedWorkerReportingProxyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.189"*) local_unnamed_addr #2

declare void @_ZNK5blink26SharedWorkerReportingProxy5TraceEPNS_7VisitorE(%"class.blink::SharedWorkerReportingProxy"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink26SharedWorkerReportingProxyD1Ev(%"class.blink::SharedWorkerReportingProxy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_26SharedWorkerReportingProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SharedWorkerReportingProxy"**
  %5 = load %"class.blink::SharedWorkerReportingProxy"*, %"class.blink::SharedWorkerReportingProxy"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::SharedWorkerReportingProxy"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SharedWorkerReportingProxy"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26SharedWorkerReportingProxyEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink18SharedWorkerThreadC1ERNS_20WorkerReportingProxyERKN4util9TokenTypeINS_27SharedWorkerTokenTypeMarkerEEERKN4base16UnguessableTokenE(%"class.blink::SharedWorkerThread"*, %"class.blink::WorkerReportingProxy"* dereferenceable(8), %"class.util::TokenType"* dereferenceable(16), %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink16SharedWorkerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.1167"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.1167", %"class.mojo::PendingRemote.1167"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #10
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.826"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.826"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %17, align 8
  store %"class.blink::mojom::blink::SharedWorkerHostProxy"* null, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::SharedWorkerHostProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::SharedWorkerHostProxy"* %18 to void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)**, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::SharedWorkerHostProxy"* nonnull %18) #10
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote.1167", %"class.mojo::PendingRemote.1167"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #10
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %26) #10
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #10
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink16SharedWorkerHostEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.826", %"class.std::__1::unique_ptr.826"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::SharedWorkerHostProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #11
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #10
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink16SharedWorkerHost5Name_E, i64 0, i64 0)) #10
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #11
  %17 = bitcast i8* %16 to %"class.blink::mojom::blink::SharedWorkerHostProxy"*
  tail call void @_ZN5blink5mojom5blink21SharedWorkerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::SharedWorkerHostProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #10
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.blink::mojom::blink::SharedWorkerHostProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.826"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.blink::mojom::blink::SharedWorkerHostProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::mojom::blink::SharedWorkerHostProxy"* %19 to void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)***
  %24 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)**, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %24, i64 1
  %26 = load void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)*, void (%"class.blink::mojom::blink::SharedWorkerHostProxy"*)** %25, align 8
  tail call void %26(%"class.blink::mojom::blink::SharedWorkerHostProxy"* nonnull %19) #10
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #2

declare void @_ZN5blink5mojom5blink21SharedWorkerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::SharedWorkerHostProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIiN5blink18MessagePortChannelEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.832"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.832"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.std::__1::pair.835"* [ %23, %14 ], [ %6, %4 ]
  %16 = phi %"struct.std::__1::pair.835"* [ %22, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %15, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %20, %"class.blink::MessagePortChannel"* dereferenceable(8) %21) #10
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %21) #10
  %22 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %16, i64 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %15, i64 1
  %24 = icmp eq %"struct.std::__1::pair.835"* %23, %10
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %4
  %26 = bitcast %"struct.std::__1::pair.835"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #10
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIiN5blink18MessagePortChannelEEEEEmm(i64 %28) #10
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIiN5blink18MessagePortChannelEEEEEPKcv, i64 0, i64 0)) #10
  %31 = lshr i64 %29, 4
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"struct.std::__1::pair.835"* %34 to i8*
  br label %58

42:                                               ; preds = %27
  %43 = bitcast i8* %30 to %"struct.std::__1::pair.835"*
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi %"struct.std::__1::pair.835"* [ %53, %44 ], [ %34, %42 ]
  %46 = phi %"struct.std::__1::pair.835"* [ %52, %44 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %45, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %47, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %46, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %45, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %50, %"class.blink::MessagePortChannel"* dereferenceable(8) %51) #10
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %51) #10
  %52 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %46, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.835", %"struct.std::__1::pair.835"* %45, i64 1
  %54 = icmp eq %"struct.std::__1::pair.835"* %53, %38
  br i1 %54, label %55, label %44

55:                                               ; preds = %44
  %56 = bitcast %"class.WTF::Vector.832"* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %40, %55
  %59 = phi i8* [ %57, %55 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #10
  %60 = bitcast %"class.WTF::Vector.832"* %0 to i64*
  store atomic i64 %32, i64* %60 monotonic, align 8
  %61 = trunc i64 %31 to i32
  %62 = getelementptr inbounds %"class.WTF::Vector.832", %"class.WTF::Vector.832"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %61, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIiN5blink18MessagePortChannelEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WorkerMainScriptLoadParametersD2Ev(%"struct.blink::WorkerMainScriptLoadParameters"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.1482", %"class.std::__1::vector.1482"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.mojo::StructPtr.1269"*, %"class.mojo::StructPtr.1269"** %3, align 8
  %5 = icmp eq %"class.mojo::StructPtr.1269"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::StructPtr.1269"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.mojo::StructPtr.1269"*, %"class.mojo::StructPtr.1269"** %8, align 8
  %10 = icmp eq %"class.mojo::StructPtr.1269"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.mojo::StructPtr.1269"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.mojo::StructPtr.1269", %"class.mojo::StructPtr.1269"* %12, i64 -1
  %14 = getelementptr inbounds %"class.mojo::StructPtr.1269", %"class.mojo::StructPtr.1269"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.network::mojom::URLResponseHead"*, %"class.network::mojom::URLResponseHead"** %14, align 8
  store %"class.network::mojom::URLResponseHead"* null, %"class.network::mojom::URLResponseHead"** %14, align 8
  %16 = icmp eq %"class.network::mojom::URLResponseHead"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"* nonnull %15) #10
  %18 = bitcast %"class.network::mojom::URLResponseHead"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.mojo::StructPtr.1269"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.1482"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.mojo::StructPtr.1269"* %4, %"class.mojo::StructPtr.1269"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.std::__1::vector.1475", %"class.std::__1::vector.1475"* %27, i64 0, i32 0, i32 0
  %29 = load %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"** %28, align 8
  %30 = icmp eq %"struct.net::RedirectInfo"* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %26
  %32 = bitcast %"struct.net::RedirectInfo"* %29 to i8*
  %33 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"** %33, align 8
  %35 = icmp eq %"struct.net::RedirectInfo"* %34, %29
  br i1 %35, label %43, label %36

36:                                               ; preds = %31, %36
  %37 = phi %"struct.net::RedirectInfo"* [ %38, %36 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %37, i64 -1
  tail call void @_ZN3net12RedirectInfoD1Ev(%"struct.net::RedirectInfo"* %38) #10
  %39 = icmp eq %"struct.net::RedirectInfo"* %38, %29
  br i1 %39, label %40, label %36

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::vector.1475"* %27 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi i8* [ %42, %40 ], [ %32, %31 ]
  store %"struct.net::RedirectInfo"* %29, %"struct.net::RedirectInfo"** %33, align 8
  tail call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %26, %43
  %46 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.network::mojom::URLLoaderClientEndpoints"*, %"class.network::mojom::URLLoaderClientEndpoints"** %46, align 8
  store %"class.network::mojom::URLLoaderClientEndpoints"* null, %"class.network::mojom::URLLoaderClientEndpoints"** %46, align 8
  %48 = icmp eq %"class.network::mojom::URLLoaderClientEndpoints"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  tail call void @_ZN7network5mojom24URLLoaderClientEndpointsD1Ev(%"class.network::mojom::URLLoaderClientEndpoints"* nonnull %47) #10
  %50 = bitcast %"class.network::mojom::URLLoaderClientEndpoints"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @MojoClose(i32 %53) #10
  br label %57

57:                                               ; preds = %51, %55
  %58 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.network::mojom::URLResponseHead"*, %"class.network::mojom::URLResponseHead"** %58, align 8
  store %"class.network::mojom::URLResponseHead"* null, %"class.network::mojom::URLResponseHead"** %58, align 8
  %60 = icmp eq %"class.network::mojom::URLResponseHead"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  tail call void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"* nonnull %59) #10
  %62 = bitcast %"class.network::mojom::URLResponseHead"* %59 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %57, %61
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12RedirectInfoD1Ev(%"struct.net::RedirectInfo"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom24URLLoaderClientEndpointsD1Ev(%"class.network::mojom::URLLoaderClientEndpoints"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FetchClientSettingsObjectSnapshot"* @_ZN5blink25MakeGarbageCollectedTraitINS_33FetchClientSettingsObjectSnapshotEE4CallIJRKNS_6WebURLES6_RNS_17WebSecurityOriginERKN7network5mojom14ReferrerPolicyERKNS_9WebStringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckERNSA_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyEN3WTF7HashSetIjNSO_13AlreadyHashedENSO_10HashTraitsIjEENSO_18PartitionAllocatorEEEEEEPS1_DpOT_(%"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebSecurityOrigin"* dereferenceable(8), i32* dereferenceable(4), %"class.blink::WebString"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::HashSet.516"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::HashSet.516", align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64 296) #10
  %16 = bitcast i8* %15 to %"class.blink::FetchClientSettingsObjectSnapshot"*
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #10
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %11, %"class.blink::WebURL"* %0) #10
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %18) #10
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %12, %"class.blink::WebURL"* %1) #10
  %19 = call %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigincv13scoped_refptrIKNS_14SecurityOriginEEEv(%"class.blink::WebSecurityOrigin"* %2) #10
  %20 = load i32, i32* %3, align 4
  %21 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %4) #10
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i32, i32* %5, align 4
  %25 = load i32, i32* %6, align 4
  %26 = load i32, i32* %7, align 4
  %27 = load i32, i32* %8, align 4
  %28 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %14, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %14, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %14, i64 0, i32 0, i32 3
  %31 = bitcast %"class.WTF::HashSet.516"* %9 to i64*
  %32 = bitcast %"class.WTF::HashSet.516"* %14 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::HashSet.516"* %14 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %28, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %29, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %9, i64 0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 2147483647
  store i32 %41, i32* %30, align 8
  %42 = and i32 %40, -2147483648
  store i32 %42, i32* %39, align 8
  call void @_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE(%"class.blink::FetchClientSettingsObjectSnapshot"* %16, %"class.blink::KURL"* nonnull dereferenceable(112) %11, %"class.blink::KURL"* nonnull dereferenceable(112) %12, %"class.blink::SecurityOrigin"* %19, i32 %20, %"class.WTF::String"* nonnull dereferenceable(8) %13, i32 %24, i32 %25, i32 %26, i32 %27, %"class.WTF::HashSet.516"* nonnull %14) #10
  %43 = getelementptr inbounds %"class.WTF::HashSet.516", %"class.WTF::HashSet.516"* %14, i64 0, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = icmp eq i32* %44, null
  br i1 %45, label %48, label %46, !prof !12

46:                                               ; preds = %10
  %47 = bitcast i32* %44 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #10
  store i32* null, i32** %43, align 8
  br label %48

48:                                               ; preds = %10, %46
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %48, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %18) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #10
  %65 = getelementptr inbounds i8, i8* %15, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  ret %"class.blink::FetchClientSettingsObjectSnapshot"* %16
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigincv13scoped_refptrIKNS_14SecurityOriginEEEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE(%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.blink::SecurityOrigin"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32, i32, i32, %"class.WTF::HashSet.516"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.189"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.189"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25FetchClientSettingsObjectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchClientSettingsObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchClientSettingsObject"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchClientSettingsObject"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchClientSettingsObject"*)***
  %4 = load void (%"class.blink::FetchClientSettingsObject"*)**, void (%"class.blink::FetchClientSettingsObject"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchClientSettingsObject"*)*, void (%"class.blink::FetchClientSettingsObject"*)** %4, align 8
  tail call void %5(%"class.blink::FetchClientSettingsObject"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14WorkerSettingsC1EbbbbRKNS_25GenericFontFamilySettingsE(%"class.blink::WorkerSettings"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %"class.blink::GenericFontFamilySettings"* dereferenceable(176)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13WorkerClientsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.189"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13WorkerClientsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.189"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13WorkerClientsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13WorkerClientsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i8* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #10
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13WorkerClientsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13WorkerClients5TraceEPNS_7VisitorE(%"class.blink::WorkerClients"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerClients", %"class.blink::WorkerClients"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap.607"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap.607"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #10
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_13WorkerClientsEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_13WorkerClientsEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.613"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.613"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.1636"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #10, !range !67
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #10
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.1636"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #10, !range !67
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #10
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

declare void @_ZN5blink32SharedWorkerContentSettingsProxyC1EN4mojo13PendingRemoteINS_5mojom5blink26WorkerContentSettingsProxyEEE(%"class.blink::SharedWorkerContentSettingsProxy"*, %"class.mojo::PendingRemote.1599"*) unnamed_addr #2

declare void @_ZN5blink25GlobalScopeCreationParamsC1ERKNS_4KURLENS_5mojom10ScriptTypeERKN3WTF6StringES9_RKN4absl8optionalINS_17UserAgentMetadataEEE13scoped_refptrINS_21WebWorkerFetchContextEENS6_6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS6_18PartitionAllocatorEEENSN_14ReferrerPolicyEPKNS_14SecurityOriginEbNS_10HttpsStateEPNS_13WorkerClientsENSt3__110unique_ptrINS_24WebContentSettingsClientENS10_14default_deleteIS12_EEEENSB_INSN_14IPAddressSpaceEEEPKNSJ_IS7_Lj0ESR_EERKN4base16UnguessableTokenENS11_INS_14WorkerSettingsENS13_IS1F_EEEENS4_14V8CacheOptionsEPNS_25WorkletModuleResponsesMapENSK_13PendingRemoteINS4_5blink22BrowserInterfaceBrokerEEENS_24BeginFrameProviderParamsEPKNS_17PermissionsPolicyES1C_lRKNSB_INS_10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS1V_INS_30DedicatedWorkerTokenTypeMarkerEEEJNS1V_INS_28ServiceWorkerTokenTypeMarkerEEENS1V_INS_27SharedWorkerTokenTypeMarkerEEENS1V_INS_31AnimationWorkletTokenTypeMarkerEEENS1V_INS_27AudioWorkletTokenTypeMarkerEEENS1V_INS_28LayoutWorkletTokenTypeMarkerEEENS1V_INS_27PaintWorkletTokenTypeMarkerEEEEEEEEbb(%"struct.blink::GlobalScopeCreationParams"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.1720"* dereferenceable(160), i64, %"class.WTF::Vector.554"*, i32, %"class.blink::SecurityOrigin"*, i1 zeroext, i32, %"class.blink::WorkerClients"*, i64, i64, %"class.WTF::Vector.577"*, %"class.base::UnguessableToken"* dereferenceable(16), i64, i32, %"class.blink::WorkletModuleResponsesMap"*, %"class.mojo::PendingRemote.1587"*, %"struct.blink::BeginFrameProviderParams"*, %"class.blink::PermissionsPolicy"*, %"class.base::UnguessableToken"* byval(%"class.base::UnguessableToken") align 8, i64, %"class.absl::optional.1588"* dereferenceable(32), i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataC2ERKS0_(%"struct.blink::UserAgentMetadata"*, %"struct.blink::UserAgentMetadata"* dereferenceable(152)) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.1176"* %3, %"class.std::__1::vector.1176"* dereferenceable(24) %4)
  %5 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #10
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #10
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #10
  br label %34

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %31, i64 %33) #10
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %49

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %46, i64 %48) #10
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #10
  br label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %61, i64 %63) #10
  br label %64

64:                                               ; preds = %56, %59
  %65 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %66 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #10
  br label %79

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %65, i8* %76, i64 %78) #10
  br label %79

79:                                               ; preds = %71, %74
  %80 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 6
  %81 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 6
  %82 = load i8, i8* %81, align 8, !range !13
  store i8 %82, i8* %80, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.1176"*, %"class.std::__1::vector.1176"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.1176"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.std::__1::vector.1176", %"class.std::__1::vector.1176"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.blink::UserAgentBrandVersion"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1176"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 384307168202282325
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.1176"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #12
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #11
  %18 = bitcast i8* %17 to %"struct.blink::UserAgentBrandVersion"*
  %19 = getelementptr inbounds %"class.std::__1::vector.1176", %"class.std::__1::vector.1176"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.blink::UserAgentBrandVersion"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.1176"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.1176", %"class.std::__1::vector.1176"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.blink::UserAgentBrandVersion"* %22, %"struct.blink::UserAgentBrandVersion"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.1176", %"class.std::__1::vector.1176"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %24, align 8
  %26 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %4, align 8
  %27 = bitcast %"struct.blink::UserAgentBrandVersion"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.blink::UserAgentBrandVersion"* %25, %26
  br i1 %29, label %69, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.blink::UserAgentBrandVersion"*
  br label %32

32:                                               ; preds = %63, %30
  %33 = phi %"struct.blink::UserAgentBrandVersion"* [ %65, %63 ], [ %31, %30 ]
  %34 = phi %"struct.blink::UserAgentBrandVersion"* [ %64, %63 ], [ %25, %30 ]
  %35 = bitcast %"struct.blink::UserAgentBrandVersion"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.blink::UserAgentBrandVersion"* %33 to i8*
  %41 = bitcast %"struct.blink::UserAgentBrandVersion"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #10
  br label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47) #10
  br label %48

48:                                               ; preds = %42, %39
  %49 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #10
  br label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %60, i64 %62) #10
  br label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 1
  %65 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 1
  %66 = icmp eq %"struct.blink::UserAgentBrandVersion"* %64, %26
  br i1 %66, label %67, label %32

67:                                               ; preds = %63
  %68 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %65 to i64
  br label %69

69:                                               ; preds = %16, %67
  %70 = phi i64 [ %28, %16 ], [ %68, %67 ]
  store i64 %70, i64* %27, align 8
  br label %71

71:                                               ; preds = %2, %69
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %47, align 8
  %49 = icmp eq %"struct.blink::UserAgentBrandVersion"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  %54 = icmp eq %"struct.blink::UserAgentBrandVersion"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"struct.blink::UserAgentBrandVersion"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %"struct.blink::UserAgentBrandVersion"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %71, %66
  %75 = icmp eq %"struct.blink::UserAgentBrandVersion"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"struct.blink::UserAgentBrandVersion"* %48, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

declare void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #2

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom29SharedWorkerHostInterfaceBaseEEEE2ToINS3_5blink16SharedWorkerHostEEENS_13PendingRemoteIT_EEOS5_: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom29SharedWorkerHostInterfaceBaseEEEE2ToINS3_5blink16SharedWorkerHostEEENS_13PendingRemoteIT_EEOS5_"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!8 = distinct !{!8, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!11 = distinct !{!11, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WebSharedWorkerImplEFvNS1_18MessagePortChannelEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_EEEDaOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WebSharedWorkerImplEFvNS1_18MessagePortChannelEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_EEEDaOT_DpOT0_"}
!17 = !{!18, !20, !15}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WebSharedWorkerImplEFvNS3_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WebSharedWorkerImplEFvNS3_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN5blink19WebSharedWorkerImplEFvNS1_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN5blink19WebSharedWorkerImplEFvNS1_18MessagePortChannelEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!22 = !{!23, !15}
!23 = distinct !{!23, !24, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink13DevToolsAgentEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!30 = distinct !{!30, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink13DevToolsAgentEE30InitWithNewPipeAndPassReceiverEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!33 = distinct !{!33, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink17DevToolsAgentHostEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!36 = distinct !{!36, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink17DevToolsAgentHostEE30InitWithNewPipeAndPassReceiverEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!39 = distinct !{!39, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom35BrowserInterfaceBrokerInterfaceBaseEEEE2ToINS3_5blink22BrowserInterfaceBrokerEEENS_13PendingRemoteIT_EEOS5_: argument 0"}
!42 = distinct !{!42, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom35BrowserInterfaceBrokerInterfaceBaseEEEE2ToINS3_5blink22BrowserInterfaceBrokerEEENS_13PendingRemoteIT_EEOS5_"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!45 = distinct !{!45, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!48 = distinct !{!48, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom39WorkerContentSettingsProxyInterfaceBaseEEEE2ToINS3_5blink26WorkerContentSettingsProxyEEENS_13PendingRemoteIT_EEOS5_: argument 0"}
!51 = distinct !{!51, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom39WorkerContentSettingsProxyInterfaceBaseEEEE2ToINS3_5blink26WorkerContentSettingsProxyEEENS_13PendingRemoteIT_EEOS5_"}
!52 = !{!53, !50}
!53 = distinct !{!53, !54, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!54 = distinct !{!54, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!57 = distinct !{!57, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!60 = distinct !{!60, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!63 = distinct !{!63, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!66 = distinct !{!66, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!67 = !{i32 24, i32 33}
