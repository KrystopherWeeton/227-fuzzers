; ModuleID = '../../chrome/browser/task_manager/providers/task.cc'
source_filename = "../../chrome/browser/task_manager/providers/task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.BrowserProcess = type { i32 (...)** }
%"class.task_manager::Task" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::basic_string", %"class.gfx::ImageSkia", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.12", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.30" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.25" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string.36" }
%"class.std::__1::basic_string.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.39 }
%union.anon.39 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.ProfileManager = type { %"class.Profile::Delegate", %"class.base::ObserverList.45", %"class.std::__1::unique_ptr.49", %"class.base::CallbackListSubscription", %"class.base::FilePath", i8, %"class.ProfileManager::BrowserListObserver", %"class.std::__1::map.57", %"class.std::__1::unique_ptr.68", %"class.std::__1::map.74", %"class.std::__1::vector.85", i8, i8, %"class.base::FilePath" }
%"class.Profile::Delegate" = type { i32 (...)** }
%"class.base::ObserverList.45" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.46", i64, i32, [4 x i8] }>
%"class.base::LinkedList.46" = type { %"class.base::LinkNode.47" }
%"class.base::LinkNode.47" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.ProfileInfoCache* }
%class.ProfileInfoCache = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.56", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ProfileManager::BrowserListObserver" = type { %class.BrowserListObserver, %class.ProfileManager* }
%class.BrowserListObserver = type { i32 (...)** }
%"class.std::__1::map.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.ProfileShortcutManager* }
%class.ProfileShortcutManager = type { i32 (...)** }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %class.Profile**, %class.Profile**, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.Profile** }
%class.ProfileAttributesStorage = type { i32 (...)**, %"class.base::SupportsWeakPtr", %class.PrefService*, %"class.std::__1::unordered_map", %"class.base::ObserverList.112", %"class.std::__1::unordered_map.123", %"class.std::__1::unordered_map.147", %"class.std::__1::unordered_map.171", i8, %class.scoped_refptr.195 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::WeakReference::Flag"* }
%class.PrefService = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.base::ObserverList.112" = type <{ %"class.std::__1::vector.113", %"class.base::LinkedList.120", i64, i32, [4 x i8] }>
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.115" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.120" = type { %"class.base::LinkNode.121" }
%"class.base::LinkNode.121" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_map.123" = type { %"class.std::__1::__hash_table.124" }
%"class.std::__1::__hash_table.124" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.143", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.128"** }
%"struct.std::__1::__hash_node_base.128" = type { %"struct.std::__1::__hash_node_base.128"* }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__bucket_list_deallocator.130" }
%"class.std::__1::__bucket_list_deallocator.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.128" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::unordered_map.147" = type { %"class.std::__1::__hash_table.148" }
%"class.std::__1::__hash_table.148" = type <{ %"class.std::__1::unique_ptr.149", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.167", [4 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.152"** }
%"struct.std::__1::__hash_node_base.152" = type { %"struct.std::__1::__hash_node_base.152"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator.154" }
%"class.std::__1::__bucket_list_deallocator.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.152" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::unordered_map.171" = type { %"class.std::__1::__hash_table.172" }
%"class.std::__1::__hash_table.172" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.191", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.176"** }
%"struct.std::__1::__hash_node_base.176" = type { %"struct.std::__1::__hash_node_base.176"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator.178" }
%"class.std::__1::__bucket_list_deallocator.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::__hash_node_base.176" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%class.scoped_refptr.195 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.196" }>
%"class.base::RefCountedThreadSafe.196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.ProfileAttributesEntry = type <{ i32 (...)**, %class.ProfileInfoCache*, %class.PrefService*, %"class.base::FilePath", %"class.std::__1::basic_string.36", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.base::Process" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.task_manager::TaskProviderObserver" = type { i32 (...)** }
%"struct.blink::WebCacheResourceTypeStats" = type { %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat", %"struct.blink::WebCacheResourceTypeStat" }
%"struct.blink::WebCacheResourceTypeStat" = type { i64, i64, i64 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::vector.209", i32, %"class.std::__1::map.216", %"class.gfx::Image", %"class.std::__1::map.228", %"class.base::FilePath", %"class.std::__1::unordered_map.239", i8, i8, %"class.std::__1::basic_string.36" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"class.std::__1::unique_ptr.203"*, %"class.std::__1::unique_ptr.203"*, %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::unique_ptr.203"* }
%"class.std::__1::map.216" = type { %"class.std::__1::__tree.217" }
%"class.std::__1::__tree.217" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.gfx::Image" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unordered_map.239" = type { %"class.std::__1::__hash_table.240" }
%"class.std::__1::__hash_table.240" = type <{ %"class.std::__1::unique_ptr.241", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.244"** }
%"struct.std::__1::__hash_node_base.244" = type { %"struct.std::__1::__hash_node_base.244"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::__bucket_list_deallocator.246" }
%"class.std::__1::__bucket_list_deallocator.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base.244" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.109" }

@_ZTVN12task_manager4TaskE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.task_manager::Task"*)* @_ZN12task_manager4TaskD2Ev to i8*), i8* bitcast (void (%"class.task_manager::Task"*)* @_ZN12task_manager4TaskD0Ev to i8*), i8* bitcast (void (%"class.task_manager::Task"*)* @_ZN12task_manager4Task8ActivateEv to i8*), i8* bitcast (i1 (%"class.task_manager::Task"*)* @_ZN12task_manager4Task10IsKillableEv to i8*), i8* bitcast (void (%"class.task_manager::Task"*)* @_ZN12task_manager4Task4KillEv to i8*), i8* bitcast (void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)* @_ZN12task_manager4Task7RefreshERKN4base9TimeDeltaEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.task_manager::Task"*, i32*, i32*)* @_ZNK12task_manager4Task20GetTerminationStatusEPN4base17TerminationStatusEPi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.task_manager::Task"*)* @_ZNK12task_manager4Task14GetProfileNameEv to i8*), i8* bitcast (i32 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task8GetTabIdEv to i8*), i8* bitcast (%"class.task_manager::Task"* (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task13GetParentTaskEv to i8*), i8* bitcast (i64 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task19GetSqliteMemoryUsedEv to i8*), i8* bitcast (i64 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task20GetV8MemoryAllocatedEv to i8*), i8* bitcast (i64 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task15GetV8MemoryUsedEv to i8*), i8* bitcast (i1 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task20ReportsWebCacheStatsEv to i8*), i8* bitcast (void (%"struct.blink::WebCacheResourceTypeStats"*, %"class.task_manager::Task"*)* @_ZNK12task_manager4Task16GetWebCacheStatsEv to i8*), i8* bitcast (i32 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task17GetKeepaliveCountEv to i8*), i8* bitcast (i1 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task13IsRunningInVMEv to i8*), i8* bitcast (i64 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task19GetNetworkUsageRateEv to i8*), i8* bitcast (i64 (%"class.task_manager::Task"*)* @_ZNK12task_manager4Task25GetCumulativeNetworkUsageEv to i8*)] }, align 8
@_ZN12task_manager12_GLOBAL__N_19g_last_idE = internal unnamed_addr global i64 0, align 8
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8

@_ZN12task_manager4TaskD1Ev = hidden unnamed_addr alias void (%"class.task_manager::Task"*), void (%"class.task_manager::Task"*)* @_ZN12task_manager4TaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager4TaskC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPKN3gfx9ImageSkiaEii(%"class.task_manager::Task"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.gfx::ImageSkia"*, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN12task_manager4TaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 1
  %8 = load i64, i64* @_ZN12task_manager12_GLOBAL__N_19g_last_idE, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* @_ZN12task_manager12_GLOBAL__N_19g_last_idE, align 8
  store i64 %8, i64* %7, align 8
  %10 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #16
  br label %195

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #17
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #17
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #18
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !2
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !2
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !5, !noalias !2
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !7

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !2
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !5, !noalias !2
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !9

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !11

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !12

195:                                              ; preds = %160, %165, %140, %17
  %196 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 9
  %197 = icmp eq %"class.gfx::ImageSkia"* %2, null
  br i1 %197, label %199, label %198

198:                                              ; preds = %195
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %196, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %2) #16
  br label %200

199:                                              ; preds = %195
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %196) #16
  br label %200

200:                                              ; preds = %199, %198
  %201 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 10
  store i32 %3, i32* %201, align 8
  %202 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 11
  %203 = icmp eq i32 %4, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = tail call i32 @_ZN4base9GetProcIdEi(i32 %3) #16
  br label %206

206:                                              ; preds = %200, %204
  %207 = phi i32 [ %205, %204 ], [ %4, %200 ]
  store i32 %207, i32* %202, align 4
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager4TaskD2Ev(%"class.task_manager::Task"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN12task_manager4TaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 9
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %3) #16
  %4 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #18
  br label %12

12:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12task_manager4TaskD0Ev(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task25GetProfileNameFromProfileEP7Profile(%"class.std::__1::basic_string"* noalias sret, %class.Profile*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %5 = bitcast %class.BrowserProcess* %4 to %class.ProfileManager* (%class.BrowserProcess*)***
  %6 = load %class.ProfileManager* (%class.BrowserProcess*)**, %class.ProfileManager* (%class.BrowserProcess*)*** %5, align 8
  %7 = getelementptr inbounds %class.ProfileManager* (%class.BrowserProcess*)*, %class.ProfileManager* (%class.BrowserProcess*)** %6, i64 6
  %8 = load %class.ProfileManager* (%class.BrowserProcess*)*, %class.ProfileManager* (%class.BrowserProcess*)** %7, align 8
  %9 = tail call %class.ProfileManager* %8(%class.BrowserProcess* %4) #16
  %10 = tail call dereferenceable(256) %class.ProfileAttributesStorage* @_ZN14ProfileManager27GetProfileAttributesStorageEv(%class.ProfileManager* %9) #16
  %11 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = bitcast %class.Profile* %1 to %class.Profile* (%class.Profile*)***
  %13 = load %class.Profile* (%class.Profile*)**, %class.Profile* (%class.Profile*)*** %12, align 8
  %14 = getelementptr inbounds %class.Profile* (%class.Profile*)*, %class.Profile* (%class.Profile*)** %13, i64 40
  %15 = load %class.Profile* (%class.Profile*)*, %class.Profile* (%class.Profile*)** %14, align 8
  %16 = tail call %class.Profile* %15(%class.Profile* %1) #16
  %17 = bitcast %class.Profile* %16 to void (%"class.base::FilePath"*, %class.Profile*)***
  %18 = load void (%"class.base::FilePath"*, %class.Profile*)**, void (%"class.base::FilePath"*, %class.Profile*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::FilePath"*, %class.Profile*)*, void (%"class.base::FilePath"*, %class.Profile*)** %18, i64 6
  %20 = load void (%"class.base::FilePath"*, %class.Profile*)*, void (%"class.base::FilePath"*, %class.Profile*)** %19, align 8
  call void %20(%"class.base::FilePath"* nonnull sret %3, %class.Profile* %16) #16
  %21 = bitcast %class.ProfileAttributesStorage* %10 to %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)***
  %22 = load %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)**, %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)*** %21, align 8
  %23 = getelementptr inbounds %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)*, %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)** %22, i64 5
  %24 = load %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)*, %class.ProfileAttributesEntry* (%class.ProfileAttributesStorage*, %"class.base::FilePath"*)** %23, align 8
  %25 = call %class.ProfileAttributesEntry* %24(%class.ProfileAttributesStorage* %10, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #16
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %26 = icmp eq %class.ProfileAttributesEntry* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %2
  call void @_ZNK22ProfileAttributesEntry7GetNameEv(%"class.std::__1::basic_string"* sret %0, %class.ProfileAttributesEntry* nonnull %25) #16
  br label %30

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #16
  br label %30

30:                                               ; preds = %28, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare dereferenceable(256) %class.ProfileAttributesStorage* @_ZN14ProfileManager27GetProfileAttributesStorageEv(%class.ProfileManager*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK22ProfileAttributesEntry7GetNameEv(%"class.std::__1::basic_string"* sret, %class.ProfileAttributesEntry*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12task_manager4Task8ActivateEv(%"class.task_manager::Task"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN12task_manager4Task10IsKillableEv(%"class.task_manager::Task"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task4KillEv(%"class.task_manager::Task"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Process", align 4
  %3 = bitcast %"class.task_manager::Task"* %0 to i1 (%"class.task_manager::Task"*)***
  %4 = load i1 (%"class.task_manager::Task"*)**, i1 (%"class.task_manager::Task"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.task_manager::Task"*)*, i1 (%"class.task_manager::Task"*)** %4, i64 3
  %6 = load i1 (%"class.task_manager::Task"*)*, i1 (%"class.task_manager::Task"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.task_manager::Task"* %0) #16
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = bitcast %"class.base::Process"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %2, i64 0, i32 0
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  call void @_ZN4base7Process4OpenEi(%"class.base::Process"* nonnull sret %2, i32 %12) #16
  %13 = call zeroext i1 @_ZNK4base7Process9TerminateEib(%"class.base::Process"* nonnull %2, i32 1, i1 zeroext false) #16
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  br label %14

14:                                               ; preds = %1, %8
  ret void
}

declare void @_ZN4base7Process4OpenEi(%"class.base::Process"* sret, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base7Process9TerminateEib(%"class.base::Process"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task7RefreshERKN4base9TimeDeltaEl(%"class.task_manager::Task"* nocapture, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8), i64) unnamed_addr #8 align 2 {
  %4 = trunc i64 %2 to i8
  %5 = icmp sgt i8 %4, -1
  br i1 %5, label %74, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  %16 = sitofp i64 %15 to double
  %17 = add i64 %8, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = sitofp i64 %8 to double
  %21 = fdiv double %20, 1.000000e+06
  br label %25

22:                                               ; preds = %10
  %23 = icmp slt i64 %8, 0
  %24 = select i1 %23, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %25

25:                                               ; preds = %19, %22
  %26 = phi double [ %24, %22 ], [ %21, %19 ]
  %27 = fdiv double %16, %26
  %28 = fcmp oge double %27, 0.000000e+00
  %29 = fadd double %27, 5.000000e-01
  %30 = tail call double @llvm.floor.f64(double %29) #16
  %31 = fadd double %27, -5.000000e-01
  %32 = tail call double @llvm.ceil.f64(double %31) #16
  %33 = select i1 %28, double %30, double %32
  %34 = fcmp ult double %33, 0xC3E0000000000000
  %35 = fcmp ugt double %33, 0x43DFFFFFFFFFFFFF
  %36 = fcmp ogt double %33, 0xC3E0000000000000
  %37 = select i1 %36, double %33, double 0xC3E0000000000000
  %38 = fptosi double %37 to i64
  %39 = select i1 %34, i64 0, i64 9223372036854775807
  %40 = select i1 %35, i64 %39, i64 %38
  %41 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 7
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 4
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub nsw i64 %43, %45
  %47 = sitofp i64 %46 to double
  %48 = load i64, i64* %7, align 8
  %49 = add i64 %48, -9223372036854775807
  %50 = icmp ult i64 %49, 2
  br i1 %50, label %54, label %51

51:                                               ; preds = %25
  %52 = sitofp i64 %48 to double
  %53 = fdiv double %52, 1.000000e+06
  br label %57

54:                                               ; preds = %25
  %55 = icmp slt i64 %48, 0
  %56 = select i1 %55, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi double [ %56, %54 ], [ %53, %51 ]
  %59 = fdiv double %47, %58
  %60 = fcmp oge double %59, 0.000000e+00
  %61 = fadd double %59, 5.000000e-01
  %62 = tail call double @llvm.floor.f64(double %61) #16
  %63 = fadd double %59, -5.000000e-01
  %64 = tail call double @llvm.ceil.f64(double %63) #16
  %65 = select i1 %60, double %62, double %64
  %66 = fcmp ult double %65, 0xC3E0000000000000
  %67 = fcmp ugt double %65, 0x43DFFFFFFFFFFFFF
  %68 = fcmp ogt double %65, 0xC3E0000000000000
  %69 = select i1 %68, double %65, double 0xC3E0000000000000
  %70 = fptosi double %69 to i64
  %71 = select i1 %66, i64 0, i64 9223372036854775807
  %72 = select i1 %67, i64 %71, i64 %70
  %73 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 6
  store i64 %72, i64* %73, align 8
  store i64 %12, i64* %13, align 8
  store i64 %43, i64* %44, align 8
  br label %74

74:                                               ; preds = %3, %6, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task17UpdateProcessInfoEiiPNS_20TaskProviderObserverE(%"class.task_manager::Task"*, i32, i32, %"class.task_manager::TaskProviderObserver"*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i32 @_ZN4base9GetProcIdEi(i32 %1) #16
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %7, %6 ], [ %2, %4 ]
  %10 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.task_manager::TaskProviderObserver"* %3 to void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)***
  %15 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)**, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %15, i64 3
  %17 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %16, align 8
  tail call void %17(%"class.task_manager::TaskProviderObserver"* %3, %"class.task_manager::Task"* %0) #16
  %18 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 10
  store i32 %1, i32* %18, align 8
  store i32 %9, i32* %10, align 4
  %19 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)**, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*** %14, align 8
  %20 = getelementptr inbounds void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %19, i64 2
  %21 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %20, align 8
  tail call void %21(%"class.task_manager::TaskProviderObserver"* %3, %"class.task_manager::Task"* %0) #16
  br label %22

22:                                               ; preds = %8, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task18OnNetworkBytesReadEl(%"class.task_manager::Task"* nocapture, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12task_manager4Task18OnNetworkBytesSentEl(%"class.task_manager::Task"* nocapture, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK12task_manager4Task20GetTerminationStatusEPN4base17TerminationStatusEPi(%"class.task_manager::Task"* nocapture readnone, i32* nocapture, i32* nocapture) unnamed_addr #10 align 2 {
  store i32 4, i32* %1, align 4
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager4Task14GetProfileNameEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.task_manager::Task"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK12task_manager4Task8GetTabIdEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager4Task13HasParentTaskEv(%"class.task_manager::Task"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.task_manager::Task"* %0 to %"class.task_manager::Task"* (%"class.task_manager::Task"*)***
  %3 = load %"class.task_manager::Task"* (%"class.task_manager::Task"*)**, %"class.task_manager::Task"* (%"class.task_manager::Task"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.task_manager::Task"* (%"class.task_manager::Task"*)*, %"class.task_manager::Task"* (%"class.task_manager::Task"*)** %3, i64 11
  %5 = load %"class.task_manager::Task"* (%"class.task_manager::Task"*)*, %"class.task_manager::Task"* (%"class.task_manager::Task"*)** %4, align 8
  %6 = tail call %"class.task_manager::Task"* %5(%"class.task_manager::Task"* %0) #16
  %7 = icmp ne %"class.task_manager::Task"* %6, null
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.task_manager::Task"* @_ZNK12task_manager4Task13GetParentTaskEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.task_manager::Task"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager4Task19ReportsSqliteMemoryEv(%"class.task_manager::Task"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.task_manager::Task"* %0 to i64 (%"class.task_manager::Task"*)***
  %3 = load i64 (%"class.task_manager::Task"*)**, i64 (%"class.task_manager::Task"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %3, i64 12
  %5 = load i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %4, align 8
  %6 = tail call i64 %5(%"class.task_manager::Task"* %0) #16
  %7 = icmp ne i64 %6, -1
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK12task_manager4Task19GetSqliteMemoryUsedEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK12task_manager4Task20GetV8MemoryAllocatedEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK12task_manager4Task15GetV8MemoryUsedEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager4Task20ReportsWebCacheStatsEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager4Task16GetWebCacheStatsEv(%"struct.blink::WebCacheResourceTypeStats"* noalias nocapture sret, %"class.task_manager::Task"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.blink::WebCacheResourceTypeStats"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 144, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK12task_manager4Task17GetKeepaliveCountEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager4Task13IsRunningInVMEv(%"class.task_manager::Task"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK12task_manager4Task19GetNetworkUsageRateEv(%"class.task_manager::Task"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = add nsw i64 %5, %3
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK12task_manager4Task25GetCumulativeNetworkUsageEv(%"class.task_manager::Task"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = add nsw i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::ImageSkia"* @_ZN12task_manager4Task9FetchIconEiPPN3gfx9ImageSkiaE(i32, %"class.gfx::ImageSkia"** nocapture) local_unnamed_addr #0 align 2 {
  %3 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %1, align 8
  %4 = icmp eq %"class.gfx::ImageSkia"* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN2ui14ResourceBundle17HasSharedInstanceEv() #16
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16
  %9 = tail call %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"* %8, i32 %0) #16
  store %"class.gfx::ImageSkia"* %9, %"class.gfx::ImageSkia"** %1, align 8
  %10 = icmp eq %"class.gfx::ImageSkia"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN3gfx9ImageSkia14MakeThreadSafeEv(%"class.gfx::ImageSkia"* nonnull %9) #16
  br label %12

12:                                               ; preds = %7, %2, %11, %5
  %13 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %1, align 8
  ret %"class.gfx::ImageSkia"* %13
}

declare zeroext i1 @_ZN2ui14ResourceBundle17HasSharedInstanceEv() local_unnamed_addr #1

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #1

declare %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #1

declare void @_ZN3gfx9ImageSkia14MakeThreadSafeEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZN4base9GetProcIdEi(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #15

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
