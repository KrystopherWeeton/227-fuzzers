; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_PddProc.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_PddProc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJBig2_PatternDict = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CJBig2_Image* }
%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.3", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::unique_ptr.0"* }
%class.CJBig2_PDDProc = type { i8, i8, i8, i32, i8 }
%class.CJBig2_ArithDecoder = type opaque
%class.JBig2ArithCtx = type opaque
%class.PauseIndicatorIface = type opaque
%"class.CJBig2_GRDProc::ProgressiveArithDecodeState" = type { %"class.std::__1::unique_ptr.0"*, %"class.fxcrt::UnownedPtr.21", %"class.fxcrt::UnownedPtr.22", %"class.fxcrt::UnownedPtr.23" }
%"class.fxcrt::UnownedPtr.21" = type { %class.CJBig2_ArithDecoder* }
%"class.fxcrt::UnownedPtr.22" = type { %class.JBig2ArithCtx* }
%"class.fxcrt::UnownedPtr.23" = type { %class.PauseIndicatorIface* }
%class.CJBig2_GRDProc = type <{ i8, i8, i8, i8, i32, i32, [4 x i8], %"class.fxcrt::UnownedPtr.17", [8 x i8], i32, [4 x i8], i8*, i32, i16, [2 x i8], i32, %struct.FX_RECT, [4 x i8] }>
%"class.fxcrt::UnownedPtr.17" = type { %class.CJBig2_Image* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CJBig2_BitStream = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_PatternDict* @_ZN14CJBig2_PDDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtxP19PauseIndicatorIface(%class.CJBig2_PDDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.0", align 8
  %6 = alloca %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", align 8
  %7 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  %10 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = mul i32 %9, %12
  %14 = icmp ugt i32 %13, 65535
  br i1 %14, label %101, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 2
  %17 = load i8, i8* %16, align 2
  %18 = zext i8 %17 to i32
  %19 = tail call i8* @_Znwm(i64 80) #6
  %20 = bitcast i8* %19 to %class.CJBig2_GRDProc*
  tail call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %20) #7
  %21 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 0
  %22 = load i8, i8* %21, align 4, !range !2
  store i8 %22, i8* %19, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %13, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 4
  %28 = load i8, i8* %27, align 4
  %29 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 0, i8* %31, align 2
  %32 = load i8, i8* %10, align 1
  %33 = sub i8 0, %32
  %34 = getelementptr inbounds i8, i8* %19, i64 24
  store i8 %33, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %19, i64 25
  store i8 0, i8* %35, align 1
  %36 = icmp eq i8 %28, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %15
  %38 = getelementptr inbounds i8, i8* %19, i64 26
  store i8 -3, i8* %38, align 2
  %39 = getelementptr inbounds i8, i8* %19, i64 27
  store i8 -1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %19, i64 28
  store i8 2, i8* %40, align 4
  %41 = getelementptr inbounds i8, i8* %19, i64 29
  store i8 -2, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %19, i64 30
  store i8 -2, i8* %42, align 2
  %43 = getelementptr inbounds i8, i8* %19, i64 31
  store i8 -2, i8* %43, align 1
  br label %44

44:                                               ; preds = %37, %15
  %45 = bitcast %"class.std::__1::unique_ptr.0"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %5, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %5 to i64*
  store i64 0, i64* %47, align 8
  %48 = bitcast %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #7
  %49 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6, i64 0, i32 0
  %50 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6, i64 0, i32 2, i32 0
  %52 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6, i64 0, i32 3, i32 0
  %53 = bitcast %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false)
  call void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %6) #7
  store %"class.std::__1::unique_ptr.0"* %5, %"class.std::__1::unique_ptr.0"** %49, align 8
  store %class.CJBig2_ArithDecoder* %1, %class.CJBig2_ArithDecoder** %50, align 8
  store %class.JBig2ArithCtx* %2, %class.JBig2ArithCtx** %51, align 8
  store %class.PauseIndicatorIface* null, %class.PauseIndicatorIface** %52, align 8
  %54 = call i32 @_ZN14CJBig2_GRDProc16StartDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nonnull %20, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %6) #7
  store %class.PauseIndicatorIface* %3, %class.PauseIndicatorIface** %52, align 8
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %56, label %59

56:                                               ; preds = %44, %56
  %57 = call i32 @_ZN14CJBig2_GRDProc14ContinueDecodeEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nonnull %20, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %6) #7
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %56, label %59

59:                                               ; preds = %56, %44
  %60 = load %class.CJBig2_Image*, %class.CJBig2_Image** %46, align 8
  %61 = icmp eq %class.CJBig2_Image* %60, null
  br i1 %61, label %94, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %7, align 4
  %64 = add i32 %63, 1
  %65 = call i8* @_Znwm(i64 32) #6
  %66 = bitcast i8* %65 to %class.CJBig2_PatternDict*
  call void @_ZN18CJBig2_PatternDictC1Ej(%class.CJBig2_PatternDict* nonnull %66, i32 %64) #7
  %67 = getelementptr inbounds i8, i8* %65, i64 8
  %68 = bitcast i8* %67 to %"class.std::__1::unique_ptr.0"**
  br label %69

69:                                               ; preds = %62, %88
  %70 = phi i32 [ 0, %62 ], [ %89, %88 ]
  %71 = load %class.CJBig2_Image*, %class.CJBig2_Image** %46, align 8
  %72 = load i8, i8* %10, align 1
  %73 = zext i8 %72 to i32
  %74 = mul i32 %70, %73
  %75 = load i8, i8* %16, align 2
  %76 = zext i8 %75 to i32
  %77 = call %class.CJBig2_Image* @_ZN12CJBig2_Image8SubImageEiiii(%class.CJBig2_Image* %71, i32 %74, i32 0, i32 %73, i32 %76) #7
  %78 = ptrtoint %class.CJBig2_Image* %77 to i64
  %79 = zext i32 %70 to i64
  %80 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %68, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %80, i64 %79
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %class.CJBig2_Image*, %class.CJBig2_Image** %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 %78, i64* %84, align 8
  %85 = icmp eq %class.CJBig2_Image* %83, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %69
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %83) #7
  %87 = bitcast %class.CJBig2_Image* %83 to i8*
  call void @_ZdlPv(i8* %87) #6
  br label %88

88:                                               ; preds = %86, %69
  %89 = add i32 %70, 1
  %90 = load i32, i32* %7, align 4
  %91 = icmp ugt i32 %89, %90
  br i1 %91, label %92, label %69

92:                                               ; preds = %88
  %93 = ptrtoint i8* %65 to i64
  br label %94

94:                                               ; preds = %92, %59
  %95 = phi i64 [ 0, %59 ], [ %93, %92 ]
  call void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  %96 = load %class.CJBig2_Image*, %class.CJBig2_Image** %46, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %46, align 8
  %97 = icmp eq %class.CJBig2_Image* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %96) #7
  %99 = bitcast %class.CJBig2_Image* %96 to i8*
  call void @_ZdlPv(i8* %99) #6
  br label %100

100:                                              ; preds = %98, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %20) #7
  call void @_ZdlPv(i8* nonnull %19) #6
  br label %101

101:                                              ; preds = %4, %100
  %102 = phi i64 [ %95, %100 ], [ 0, %4 ]
  %103 = inttoptr i64 %102 to %class.CJBig2_PatternDict*
  ret %class.CJBig2_PatternDict* %103
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_GRDProc* @_ZN14CJBig2_PDDProc13CreateGRDProcEv(%class.CJBig2_PDDProc* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  %5 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = mul i32 %4, %7
  %9 = icmp ugt i32 %8, 65535
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 2
  %13 = zext i8 %12 to i32
  %14 = tail call i8* @_Znwm(i64 80) #6
  %15 = bitcast i8* %14 to %class.CJBig2_GRDProc*
  tail call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %15) #7
  %16 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !2
  store i8 %17, i8* %14, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %8, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %14, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %13, i32* %21, align 8
  br label %22

22:                                               ; preds = %1, %10
  %23 = phi %class.CJBig2_GRDProc* [ %15, %10 ], [ null, %1 ]
  ret %class.CJBig2_GRDProc* %23
}

declare void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) unnamed_addr #2

declare i32 @_ZN14CJBig2_GRDProc16StartDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2

declare i32 @_ZN14CJBig2_GRDProc14ContinueDecodeEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %class.CJBig2_Image* @_ZN12CJBig2_Image8SubImageEiiii(%class.CJBig2_Image*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD1Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_PatternDict* @_ZN14CJBig2_PDDProc9DecodeMMREP16CJBig2_BitStream(%class.CJBig2_PDDProc* nocapture readonly, %class.CJBig2_BitStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.0", align 8
  %4 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = mul i32 %6, %9
  %11 = icmp ugt i32 %10, 65535
  br i1 %11, label %70, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = tail call i8* @_Znwm(i64 80) #6
  %17 = bitcast i8* %16 to %class.CJBig2_GRDProc*
  tail call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %17) #7
  %18 = getelementptr inbounds %class.CJBig2_PDDProc, %class.CJBig2_PDDProc* %0, i64 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2
  store i8 %19, i8* %16, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 %10, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %16, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %15, i32* %23, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.0"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.0"* %3 to i64*
  store i64 0, i64* %26, align 8
  %27 = call i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc* nonnull %17, %"class.std::__1::unique_ptr.0"* nonnull %3, %class.CJBig2_BitStream* %1) #7
  %28 = load %class.CJBig2_Image*, %class.CJBig2_Image** %25, align 8
  %29 = icmp eq %class.CJBig2_Image* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %12
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %25, align 8
  br label %68

31:                                               ; preds = %12
  %32 = load i32, i32* %4, align 4
  %33 = add i32 %32, 1
  %34 = call i8* @_Znwm(i64 32) #6
  %35 = bitcast i8* %34 to %class.CJBig2_PatternDict*
  call void @_ZN18CJBig2_PatternDictC1Ej(%class.CJBig2_PatternDict* nonnull %35, i32 %33) #7
  %36 = load %class.CJBig2_Image*, %class.CJBig2_Image** %25, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 8
  %38 = bitcast i8* %37 to %"class.std::__1::unique_ptr.0"**
  br label %39

39:                                               ; preds = %31, %58
  %40 = phi %class.CJBig2_Image* [ %36, %31 ], [ %62, %58 ]
  %41 = phi i32 [ 0, %31 ], [ %59, %58 ]
  %42 = load i8, i8* %7, align 1
  %43 = zext i8 %42 to i32
  %44 = mul i32 %41, %43
  %45 = load i8, i8* %13, align 2
  %46 = zext i8 %45 to i32
  %47 = call %class.CJBig2_Image* @_ZN12CJBig2_Image8SubImageEiiii(%class.CJBig2_Image* %40, i32 %44, i32 0, i32 %43, i32 %46) #7
  %48 = ptrtoint %class.CJBig2_Image* %47 to i64
  %49 = zext i32 %41 to i64
  %50 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %38, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %50, i64 %49
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.CJBig2_Image*, %class.CJBig2_Image** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 %48, i64* %54, align 8
  %55 = icmp eq %class.CJBig2_Image* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %39
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %53) #7
  %57 = bitcast %class.CJBig2_Image* %53 to i8*
  call void @_ZdlPv(i8* %57) #6
  br label %58

58:                                               ; preds = %56, %39
  %59 = add i32 %41, 1
  %60 = load i32, i32* %4, align 4
  %61 = icmp ugt i32 %59, %60
  %62 = load %class.CJBig2_Image*, %class.CJBig2_Image** %25, align 8
  br i1 %61, label %63, label %39

63:                                               ; preds = %58
  %64 = ptrtoint i8* %34 to i64
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %25, align 8
  %65 = icmp eq %class.CJBig2_Image* %62, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %62) #7
  %67 = bitcast %class.CJBig2_Image* %62 to i8*
  call void @_ZdlPv(i8* %67) #6
  br label %68

68:                                               ; preds = %30, %63, %66
  %69 = phi i64 [ 0, %30 ], [ %64, %63 ], [ %64, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %17) #7
  call void @_ZdlPv(i8* nonnull %16) #6
  br label %70

70:                                               ; preds = %2, %68
  %71 = phi i64 [ %69, %68 ], [ 0, %2 ]
  %72 = inttoptr i64 %71 to %class.CJBig2_PatternDict*
  ret %class.CJBig2_PatternDict* %72
}

declare i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc*, %"class.std::__1::unique_ptr.0"*, %class.CJBig2_BitStream*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN18CJBig2_PatternDictC1Ej(%class.CJBig2_PatternDict*, i32) unnamed_addr #2

declare void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
