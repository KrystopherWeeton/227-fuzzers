; ModuleID = '../../third_party/brotli/enc/utf8_util.c'
source_filename = "../../third_party/brotli/enc/utf8_util.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @BrotliIsMostlyUTF8(i8* nocapture readonly, i64, i64, i64, double) local_unnamed_addr #0 {
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %111, label %7

7:                                                ; preds = %5, %101
  %8 = phi i64 [ %104, %101 ], [ 0, %5 ]
  %9 = phi i64 [ %107, %101 ], [ 0, %5 ]
  %10 = add i64 %8, %1
  %11 = and i64 %10, %2
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = sub i64 %3, %8
  %14 = load i8, i8* %12, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = zext i8 %14 to i32
  %18 = icmp eq i8 %14, 0
  br i1 %18, label %19, label %101

19:                                               ; preds = %16, %7
  %20 = icmp ugt i64 %13, 1
  %21 = zext i8 %14 to i32
  br i1 %20, label %22, label %99

22:                                               ; preds = %19
  %23 = and i32 %21, 224
  %24 = icmp eq i32 %23, 192
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %12, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = and i32 %28, 192
  %30 = icmp eq i32 %29, 128
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = shl nuw nsw i32 %21, 6
  %33 = and i32 %32, 1984
  %34 = and i32 %28, 63
  %35 = or i32 %34, %33
  %36 = icmp ugt i32 %35, 127
  br i1 %36, label %101, label %37

37:                                               ; preds = %31, %25, %22
  %38 = icmp ugt i64 %13, 2
  br i1 %38, label %39, label %99

39:                                               ; preds = %37
  %40 = and i32 %21, 240
  %41 = icmp eq i32 %40, 224
  br i1 %41, label %42, label %63

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %12, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = and i32 %45, 192
  %47 = icmp eq i32 %46, 128
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  %49 = getelementptr inbounds i8, i8* %12, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = and i32 %51, 192
  %53 = icmp eq i32 %52, 128
  br i1 %53, label %54, label %63

54:                                               ; preds = %48
  %55 = shl nuw nsw i32 %21, 12
  %56 = and i32 %55, 61440
  %57 = shl nuw nsw i32 %45, 6
  %58 = and i32 %57, 4032
  %59 = or i32 %58, %56
  %60 = and i32 %51, 63
  %61 = or i32 %59, %60
  %62 = icmp ugt i32 %61, 2047
  br i1 %62, label %101, label %63

63:                                               ; preds = %54, %48, %42, %39
  %64 = icmp ugt i64 %13, 3
  %65 = and i32 %21, 248
  %66 = icmp eq i32 %65, 240
  %67 = and i1 %64, %66
  br i1 %67, label %68, label %99

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %12, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = and i32 %71, 192
  %73 = icmp eq i32 %72, 128
  br i1 %73, label %74, label %99

74:                                               ; preds = %68
  %75 = getelementptr inbounds i8, i8* %12, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = and i32 %77, 192
  %79 = icmp eq i32 %78, 128
  br i1 %79, label %80, label %99

80:                                               ; preds = %74
  %81 = getelementptr inbounds i8, i8* %12, i64 3
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = and i32 %83, 192
  %85 = icmp eq i32 %84, 128
  br i1 %85, label %86, label %99

86:                                               ; preds = %80
  %87 = shl nuw nsw i32 %21, 18
  %88 = and i32 %87, 1835008
  %89 = shl nuw nsw i32 %71, 12
  %90 = and i32 %89, 258048
  %91 = or i32 %90, %88
  %92 = shl nuw nsw i32 %77, 6
  %93 = and i32 %92, 4032
  %94 = or i32 %91, %93
  %95 = and i32 %83, 63
  %96 = or i32 %94, %95
  %97 = add nsw i32 %96, -65536
  %98 = icmp ult i32 %97, 1048576
  br i1 %98, label %101, label %99

99:                                               ; preds = %19, %86, %80, %74, %68, %63, %37
  %100 = or i32 %21, 1114112
  br label %101

101:                                              ; preds = %16, %31, %54, %86, %99
  %102 = phi i32 [ %35, %31 ], [ %61, %54 ], [ %96, %86 ], [ %100, %99 ], [ %17, %16 ]
  %103 = phi i64 [ 2, %31 ], [ 3, %54 ], [ 4, %86 ], [ 1, %99 ], [ 1, %16 ]
  %104 = add i64 %103, %8
  %105 = icmp slt i32 %102, 1114112
  %106 = select i1 %105, i64 %103, i64 0
  %107 = add i64 %106, %9
  %108 = icmp ult i64 %104, %3
  br i1 %108, label %7, label %109

109:                                              ; preds = %101
  %110 = uitofp i64 %107 to double
  br label %111

111:                                              ; preds = %109, %5
  %112 = phi double [ 0.000000e+00, %5 ], [ %110, %109 ]
  %113 = uitofp i64 %3 to double
  %114 = fmul double %113, %4
  %115 = fcmp olt double %114, %112
  %116 = zext i1 %115 to i32
  ret i32 %116
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
