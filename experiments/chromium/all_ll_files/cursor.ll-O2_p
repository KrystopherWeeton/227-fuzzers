; ModuleID = '../../sql/recover_module/cursor.cc'
source_filename = "../../sql/recover_module/cursor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sql::recover::VirtualCursor" = type { %struct.sqlite3_vtab_cursor, %"class.sql::recover::VirtualTable"*, %"class.sql::recover::DatabasePageReader", %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::RecordReader", %"class.std::__1::vector.29", %"class.std::__1::unique_ptr.42" }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3 = type opaque
%struct.sqlite3_index_info = type { i32, %"struct.sqlite3_index_info::sqlite3_index_constraint"*, i32, %"struct.sqlite3_index_info::sqlite3_index_orderby"*, %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"*, i32, i8*, i32, i32, double, i64, i32, i64 }
%"struct.sqlite3_index_info::sqlite3_index_constraint" = type { i32, i8, i8, i32 }
%"struct.sqlite3_index_info::sqlite3_index_orderby" = type { i32, i8 }
%"struct.sqlite3_index_info::sqlite3_index_constraint_usage" = type { i32, i8 }
%struct.sqlite3_value = type opaque
%struct.sqlite3_context = type opaque
%"class.sql::recover::DatabasePageReader" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.sql::recover::VirtualTable"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i8* }
%"class.sql::recover::LeafPayloadReader" = type { %"class.sql::recover::DatabasePageReader"*, i64, i32, i32, i32, i32, i32, %"class.std::__1::vector.9" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { i32*, i32*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i32* }
%"class.sql::recover::RecordReader" = type <{ %"class.std::__1::vector.16", %"class.std::__1::vector.23", %"class.sql::recover::LeafPayloadReader"*, i32, [4 x i8] }>
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"*, %"class.std::__1::__compressed_pair.18" }
%"struct.sql::recover::RecordReader::ValueHeader" = type <{ i64, i64, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.sql::recover::RecordReader::ValueHeader"* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i8*, i8*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.sql::recover::InnerPageDecoder"* }
%"class.sql::recover::InnerPageDecoder" = type { i32, %"class.sql::recover::DatabasePageReader"*, i32, i32 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr.31"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.sql::recover::LeafPageDecoder"* }
%"class.sql::recover::LeafPageDecoder" = type <{ i64, %"class.sql::recover::DatabasePageReader"*, i32, i32, i64, i64, i32, [4 x i8] }>
%"class.sql::recover::VirtualTable" = type { %struct.sqlite3_vtab, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector" }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"*, %"class.std::__1::__compressed_pair.1" }
%"struct.sql::recover::RecoveredColumnSpec" = type <{ %"class.std::__1::basic_string", i32, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.sql::recover::RecoveredColumnSpec"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN3sql7recover16InnerPageDecoderENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

@_ZN3sql7recover13VirtualCursorC1EPNS0_12VirtualTableE = hidden unnamed_addr alias void (%"class.sql::recover::VirtualCursor"*, %"class.sql::recover::VirtualTable"*), void (%"class.sql::recover::VirtualCursor"*, %"class.sql::recover::VirtualTable"*)* @_ZN3sql7recover13VirtualCursorC2EPNS0_12VirtualTableE
@_ZN3sql7recover13VirtualCursorD1Ev = hidden unnamed_addr alias void (%"class.sql::recover::VirtualCursor"*), void (%"class.sql::recover::VirtualCursor"*)* @_ZN3sql7recover13VirtualCursorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover13VirtualCursorC2EPNS0_12VirtualTableE(%"class.sql::recover::VirtualCursor"*, %"class.sql::recover::VirtualTable"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 1
  store %"class.sql::recover::VirtualTable"* %1, %"class.sql::recover::VirtualTable"** %4, align 8
  %5 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 2
  tail call void @_ZN3sql7recover18DatabasePageReaderC1EPNS0_12VirtualTableE(%"class.sql::recover::DatabasePageReader"* %5, %"class.sql::recover::VirtualTable"* %1) #10
  %6 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 3
  tail call void @_ZN3sql7recover17LeafPayloadReaderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::LeafPayloadReader"* %6, %"class.sql::recover::DatabasePageReader"* %5) #10
  %7 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %1, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %10 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %1, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !2
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 5
  %17 = icmp eq i64 %15, 0
  %18 = inttoptr i64 %14 to %"struct.sql::recover::RecoveredColumnSpec"*
  %19 = inttoptr i64 %12 to %"struct.sql::recover::RecoveredColumnSpec"*
  br i1 %17, label %64, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %16, 576460752303423487
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #11
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %15) #12
  %26 = bitcast i8* %25 to %"struct.sql::recover::RecoveredColumnSpec"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %27 to i8**
  store i8* %25, i8** %28, align 8, !alias.scope !2
  %29 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %25, i8** %29, align 8, !alias.scope !2
  %30 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %26, i64 %16
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.sql::recover::RecoveredColumnSpec"* %30, %"struct.sql::recover::RecoveredColumnSpec"** %31, align 8, !alias.scope !2
  %32 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %27 to i64*
  %33 = ptrtoint i8* %25 to i64
  %34 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %18, %19
  br i1 %34, label %61, label %35

35:                                               ; preds = %24, %51
  %36 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %57, %51 ], [ %26, %24 ]
  %37 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %56, %51 ], [ %18, %24 ]
  %38 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %36 to i8*
  %44 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #10
  br label %51

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %48, i64 %50) #10
  br label %51

51:                                               ; preds = %45, %42
  %52 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 0, i32 1
  %54 = bitcast i32* %52 to i8*
  %55 = bitcast i32* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 6, i1 false) #10
  %56 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 1
  %57 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 1
  %58 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %56, %19
  br i1 %58, label %59, label %35

59:                                               ; preds = %51
  %60 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %57 to i64
  br label %61

61:                                               ; preds = %59, %24
  %62 = phi i64 [ %33, %24 ], [ %60, %59 ]
  store i64 %62, i64* %32, align 8, !alias.scope !2
  %63 = inttoptr i64 %62 to %"struct.sql::recover::RecoveredColumnSpec"*
  br label %64

64:                                               ; preds = %2, %61
  %65 = phi i8* [ %25, %61 ], [ null, %2 ]
  %66 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %63, %61 ], [ null, %2 ]
  %67 = phi i64 [ %33, %61 ], [ 0, %2 ]
  %68 = phi i64 [ %62, %61 ], [ 0, %2 ]
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %70 = sub i64 %68, %67
  %71 = lshr exact i64 %70, 5
  %72 = trunc i64 %71 to i32
  tail call void @_ZN3sql7recover12RecordReaderC1EPNS0_17LeafPayloadReaderEi(%"class.sql::recover::RecordReader"* %7, %"class.sql::recover::LeafPayloadReader"* %6, i32 %72) #10
  %73 = inttoptr i64 %67 to %"struct.sql::recover::RecoveredColumnSpec"*
  %74 = icmp eq i64 %67, 0
  br i1 %74, label %92, label %75

75:                                               ; preds = %64
  %76 = inttoptr i64 %67 to i8*
  %77 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %66, %73
  br i1 %77, label %90, label %78

78:                                               ; preds = %75, %88
  %79 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %80, %88 ], [ %66, %75 ]
  %80 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %79, i64 -1
  %81 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %85, %78
  %89 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %80, %73
  br i1 %89, label %90, label %78

90:                                               ; preds = %88, %75
  %91 = phi i8* [ %76, %75 ], [ %65, %88 ]
  store %"struct.sql::recover::RecoveredColumnSpec"* %73, %"struct.sql::recover::RecoveredColumnSpec"** %69, align 8
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %64, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %93 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5
  %94 = bitcast %"class.std::__1::vector.29"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN3sql7recover18DatabasePageReaderC1EPNS0_12VirtualTableE(%"class.sql::recover::DatabasePageReader"*, %"class.sql::recover::VirtualTable"*) unnamed_addr #1

declare void @_ZN3sql7recover17LeafPayloadReaderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::DatabasePageReader"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3sql7recover12RecordReaderC1EPNS0_17LeafPayloadReaderEi(%"class.sql::recover::RecordReader"*, %"class.sql::recover::LeafPayloadReader"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover13VirtualCursorD2Ev(%"class.sql::recover::VirtualCursor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 1
  %3 = load %"class.sql::recover::VirtualTable"*, %"class.sql::recover::VirtualTable"** %2, align 8
  tail call void @_ZN3sql7recover12VirtualTable16WillDeleteCursorEPNS0_13VirtualCursorE(%"class.sql::recover::VirtualTable"* %3, %"class.sql::recover::VirtualCursor"* %0) #10
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %4, align 8
  store %"class.sql::recover::LeafPageDecoder"* null, %"class.sql::recover::LeafPageDecoder"** %4, align 8
  %6 = icmp eq %"class.sql::recover::LeafPageDecoder"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.sql::recover::LeafPageDecoder"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.31"* %12, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::unique_ptr.31"* %12 to i8*
  %16 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.31"* %17, %12
  br i1 %18, label %32, label %19

19:                                               ; preds = %14, %27
  %20 = phi %"class.std::__1::unique_ptr.31"* [ %21, %27 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %22, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %22, align 8
  %24 = icmp eq %"class.sql::recover::InnerPageDecoder"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.sql::recover::InnerPageDecoder"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %25, %19
  %28 = icmp eq %"class.std::__1::unique_ptr.31"* %21, %12
  br i1 %28, label %29, label %19

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.29"* %10 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %14
  %33 = phi i8* [ %31, %29 ], [ %15, %14 ]
  store %"class.std::__1::unique_ptr.31"* %12, %"class.std::__1::unique_ptr.31"** %16, align 8
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %9, %32
  %35 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 4
  tail call void @_ZN3sql7recover12RecordReaderD1Ev(%"class.sql::recover::RecordReader"* %35) #10
  %36 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 3
  tail call void @_ZN3sql7recover17LeafPayloadReaderD1Ev(%"class.sql::recover::LeafPayloadReader"* %36) #10
  %37 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 2
  tail call void @_ZN3sql7recover18DatabasePageReaderD1Ev(%"class.sql::recover::DatabasePageReader"* %37) #10
  ret void
}

declare void @_ZN3sql7recover12VirtualTable16WillDeleteCursorEPNS0_13VirtualCursorE(%"class.sql::recover::VirtualTable"*, %"class.sql::recover::VirtualCursor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql7recover12RecordReaderD1Ev(%"class.sql::recover::RecordReader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql7recover17LeafPayloadReaderD1Ev(%"class.sql::recover::LeafPayloadReader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql7recover18DatabasePageReaderD1Ev(%"class.sql::recover::DatabasePageReader"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql7recover13VirtualCursor5FirstEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %2, align 8
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.31"* %5, %3
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"class.std::__1::unique_ptr.31"* [ %9, %15 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %10, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %10, align 8
  %12 = icmp eq %"class.sql::recover::InnerPageDecoder"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.sql::recover::InnerPageDecoder"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %13, %7
  %16 = icmp eq %"class.std::__1::unique_ptr.31"* %9, %3
  br i1 %16, label %17, label %7

17:                                               ; preds = %15, %1
  store %"class.std::__1::unique_ptr.31"* %3, %"class.std::__1::unique_ptr.31"** %4, align 8
  %18 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %18, align 8
  store %"class.sql::recover::LeafPageDecoder"* null, %"class.sql::recover::LeafPageDecoder"** %18, align 8
  %20 = icmp eq %"class.sql::recover::LeafPageDecoder"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.sql::recover::LeafPageDecoder"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 1
  %25 = load %"class.sql::recover::VirtualTable"*, %"class.sql::recover::VirtualTable"** %24, align 8
  %26 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  tail call void @_ZN3sql7recover13VirtualCursor17AppendPageDecoderEi(%"class.sql::recover::VirtualCursor"* %0, i32 %27)
  %28 = tail call i32 @_ZN3sql7recover13VirtualCursor4NextEv(%"class.sql::recover::VirtualCursor"* %0)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover13VirtualCursor17AppendPageDecoderEi(%"class.sql::recover::VirtualCursor"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.31", align 8
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 2
  %5 = tail call i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"* %4, i32 %1) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZN3sql7recover15LeafPageDecoder13IsOnValidPageEPNS0_18DatabasePageReaderE(%"class.sql::recover::DatabasePageReader"* %4) #10
  br i1 %8, label %9, label %20

9:                                                ; preds = %7
  %10 = tail call i8* @_Znwm(i64 48) #12
  %11 = bitcast i8* %10 to %"class.sql::recover::LeafPageDecoder"*
  tail call void @_ZN3sql7recover15LeafPageDecoderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::LeafPageDecoder"* nonnull %11, %"class.sql::recover::DatabasePageReader"* %4) #10
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.42"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %"class.sql::recover::LeafPageDecoder"* %15, null
  br i1 %17, label %67, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.sql::recover::LeafPageDecoder"* %15 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %67

20:                                               ; preds = %7
  %21 = tail call zeroext i1 @_ZN3sql7recover16InnerPageDecoder13IsOnValidPageEPNS0_18DatabasePageReaderE(%"class.sql::recover::DatabasePageReader"* %4) #10
  br i1 %21, label %22, label %67

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %24, align 8
  %26 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.31"* %25, %27
  %29 = ptrtoint %"class.std::__1::unique_ptr.31"* %27 to i64
  %30 = ptrtoint %"class.std::__1::unique_ptr.31"* %25 to i64
  br i1 %28, label %41, label %33

31:                                               ; preds = %33
  %32 = icmp eq %"class.std::__1::unique_ptr.31"* %40, %27
  br i1 %32, label %41, label %33

33:                                               ; preds = %22, %31
  %34 = phi %"class.std::__1::unique_ptr.31"* [ %40, %31 ], [ %25, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %35, align 8
  %37 = getelementptr inbounds %"class.sql::recover::InnerPageDecoder", %"class.sql::recover::InnerPageDecoder"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, %1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %34, i64 1
  br i1 %39, label %67, label %31

41:                                               ; preds = %31, %22
  %42 = bitcast %"class.std::__1::unique_ptr.31"** %26 to i64*
  %43 = sub i64 %29, %30
  %44 = icmp eq i64 %43, 80000
  br i1 %44, label %67, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::unique_ptr.31"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = tail call i8* @_Znwm(i64 24) #12
  %48 = bitcast i8* %47 to %"class.sql::recover::InnerPageDecoder"*
  tail call void @_ZN3sql7recover16InnerPageDecoderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::InnerPageDecoder"* nonnull %48, %"class.sql::recover::DatabasePageReader"* %4) #10
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.31"* %3 to i8**
  store i8* %47, i8** %50, align 8
  %51 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %26, align 8
  %52 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %52, align 8
  %54 = icmp ult %"class.std::__1::unique_ptr.31"* %51, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %45
  %56 = ptrtoint i8* %47 to i64
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %49, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.31"* %51 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %51, i64 1
  %59 = ptrtoint %"class.std::__1::unique_ptr.31"* %58 to i64
  store i64 %59, i64* %42, align 8
  br label %61

60:                                               ; preds = %45
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3sql7recover16InnerPageDecoderENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.29"* %23, %"class.std::__1::unique_ptr.31"* nonnull dereferenceable(8) %3) #10
  br label %61

61:                                               ; preds = %55, %60
  %62 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %49, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %49, align 8
  %63 = icmp eq %"class.sql::recover::InnerPageDecoder"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.sql::recover::InnerPageDecoder"* %62 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %67

67:                                               ; preds = %33, %9, %18, %66, %41, %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql7recover13VirtualCursor4NextEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 4
  tail call void @_ZN3sql7recover12RecordReader5ResetEv(%"class.sql::recover::RecordReader"* %2) #10
  %3 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 3
  br label %7

7:                                                ; preds = %51, %1
  %8 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %4, align 8
  %9 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %5, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.31"* %8, %9
  %11 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %3, align 8
  %12 = icmp eq %"class.sql::recover::LeafPageDecoder"* %11, null
  br i1 %10, label %13, label %14

13:                                               ; preds = %7
  br i1 %12, label %56, label %15

14:                                               ; preds = %7
  br i1 %12, label %37, label %15

15:                                               ; preds = %13, %14
  %16 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %11, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %11, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  store %"class.sql::recover::LeafPageDecoder"* null, %"class.sql::recover::LeafPageDecoder"** %3, align 8
  %22 = bitcast %"class.sql::recover::LeafPageDecoder"* %11 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %51

23:                                               ; preds = %15
  %24 = tail call zeroext i1 @_ZN3sql7recover15LeafPageDecoder10TryAdvanceEv(%"class.sql::recover::LeafPageDecoder"* nonnull %11) #10
  br i1 %24, label %25, label %51

25:                                               ; preds = %23
  %26 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %3, align 8
  %27 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %26, i64 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %26, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = tail call zeroext i1 @_ZN3sql7recover17LeafPayloadReader10InitializeEli(%"class.sql::recover::LeafPayloadReader"* %6, i64 %28, i32 %30) #10
  br i1 %31, label %32, label %51

32:                                               ; preds = %25
  %33 = tail call zeroext i1 @_ZN3sql7recover12RecordReader10InitializeEv(%"class.sql::recover::RecordReader"* %2) #10
  br i1 %33, label %34, label %51

34:                                               ; preds = %32
  %35 = tail call zeroext i1 @_ZN3sql7recover13VirtualCursor18IsAcceptableRecordEv(%"class.sql::recover::VirtualCursor"* %0)
  br i1 %35, label %56, label %36

36:                                               ; preds = %34
  tail call void @_ZN3sql7recover12RecordReader5ResetEv(%"class.sql::recover::RecordReader"* %2) #10
  br label %51

37:                                               ; preds = %14
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %9, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %39, align 8
  %41 = getelementptr inbounds %"class.sql::recover::InnerPageDecoder", %"class.sql::recover::InnerPageDecoder"* %40, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.sql::recover::InnerPageDecoder", %"class.sql::recover::InnerPageDecoder"* %40, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %42, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %37
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %39, align 8
  %47 = icmp eq %"class.sql::recover::InnerPageDecoder"* %40, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = bitcast %"class.sql::recover::InnerPageDecoder"* %40 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %46, %48
  store %"class.std::__1::unique_ptr.31"* %38, %"class.std::__1::unique_ptr.31"** %5, align 8
  br label %51

51:                                               ; preds = %50, %52, %55, %21, %36, %23, %25, %32
  br label %7

52:                                               ; preds = %37
  %53 = tail call i32 @_ZN3sql7recover16InnerPageDecoder10TryAdvanceEv(%"class.sql::recover::InnerPageDecoder"* %40) #10
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %51, label %55

55:                                               ; preds = %52
  tail call void @_ZN3sql7recover13VirtualCursor17AppendPageDecoderEi(%"class.sql::recover::VirtualCursor"* %0, i32 %53)
  br label %51

56:                                               ; preds = %13, %34
  ret i32 0
}

declare void @_ZN3sql7recover12RecordReader5ResetEv(%"class.sql::recover::RecordReader"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql7recover15LeafPageDecoder10TryAdvanceEv(%"class.sql::recover::LeafPageDecoder"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql7recover17LeafPayloadReader10InitializeEli(%"class.sql::recover::LeafPayloadReader"*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql7recover12RecordReader10InitializeEv(%"class.sql::recover::RecordReader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql7recover13VirtualCursor18IsAcceptableRecordEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 1
  %5 = load %"class.sql::recover::VirtualTable"*, %"class.sql::recover::VirtualTable"** %4, align 8
  %6 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %5, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #10, !alias.scope !5
  %7 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %5, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !5
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !5
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 5
  %14 = icmp eq i64 %12, 0
  %15 = inttoptr i64 %11 to %"struct.sql::recover::RecoveredColumnSpec"*
  %16 = inttoptr i64 %9 to %"struct.sql::recover::RecoveredColumnSpec"*
  br i1 %14, label %61, label %17

17:                                               ; preds = %1
  %18 = icmp ugt i64 %13, 576460752303423487
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #11
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %12) #12
  %23 = bitcast i8* %22 to %"struct.sql::recover::RecoveredColumnSpec"*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %25 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %24 to i8**
  store i8* %22, i8** %25, align 8, !alias.scope !5
  %26 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %22, i8** %26, align 8, !alias.scope !5
  %27 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %23, i64 %13
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.sql::recover::RecoveredColumnSpec"* %27, %"struct.sql::recover::RecoveredColumnSpec"** %28, align 8, !alias.scope !5
  %29 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %24 to i64*
  %30 = ptrtoint i8* %22 to i64
  %31 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %15, %16
  br i1 %31, label %58, label %32

32:                                               ; preds = %21, %48
  %33 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %54, %48 ], [ %23, %21 ]
  %34 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %53, %48 ], [ %15, %21 ]
  %35 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %33 to i8*
  %41 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #10
  br label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47) #10
  br label %48

48:                                               ; preds = %42, %39
  %49 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %33, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %34, i64 0, i32 1
  %51 = bitcast i32* %49 to i8*
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 6, i1 false) #10
  %53 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %34, i64 1
  %54 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %33, i64 1
  %55 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %53, %16
  br i1 %55, label %56, label %32

56:                                               ; preds = %48
  %57 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %54 to i64
  br label %58

58:                                               ; preds = %56, %21
  %59 = phi i64 [ %30, %21 ], [ %57, %56 ]
  store i64 %59, i64* %29, align 8, !alias.scope !5
  %60 = inttoptr i64 %59 to %"struct.sql::recover::RecoveredColumnSpec"*
  br label %61

61:                                               ; preds = %1, %58
  %62 = phi i8* [ %22, %58 ], [ null, %1 ]
  %63 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %60, %58 ], [ null, %1 ]
  %64 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %23, %58 ], [ null, %1 ]
  %65 = phi i64 [ %30, %58 ], [ 0, %1 ]
  %66 = phi i64 [ %59, %58 ], [ 0, %1 ]
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %68 = sub i64 %66, %65
  %69 = lshr exact i64 %68, 5
  %70 = trunc i64 %69 to i32
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 4
  %74 = and i64 %69, 4294967295
  br label %77

75:                                               ; preds = %77
  %76 = icmp eq i64 %83, %74
  br i1 %76, label %84, label %77

77:                                               ; preds = %75, %72
  %78 = phi i64 [ 0, %72 ], [ %83, %75 ]
  %79 = trunc i64 %78 to i32
  %80 = tail call i32 @_ZNK3sql7recover12RecordReader12GetValueTypeEi(%"class.sql::recover::RecordReader"* %73, i32 %79) #10
  %81 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %64, i64 %78
  %82 = tail call zeroext i1 @_ZNK3sql7recover19RecoveredColumnSpec17IsAcceptableValueENS0_9ValueTypeE(%"struct.sql::recover::RecoveredColumnSpec"* %81, i32 %80) #10
  %83 = add nuw nsw i64 %78, 1
  br i1 %82, label %75, label %84

84:                                               ; preds = %77, %75, %61
  %85 = phi i1 [ true, %61 ], [ true, %75 ], [ false, %77 ]
  %86 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %64, null
  br i1 %86, label %103, label %87

87:                                               ; preds = %84
  %88 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %63, %64
  br i1 %88, label %101, label %89

89:                                               ; preds = %87, %99
  %90 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %91, %99 ], [ %63, %87 ]
  %91 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %90, i64 -1
  %92 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %96, %89
  %100 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %91, %64
  br i1 %100, label %101, label %89

101:                                              ; preds = %99, %87
  %102 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %67 to i8**
  store i8* %62, i8** %102, align 8
  tail call void @_ZdlPv(i8* %62) #12
  br label %103

103:                                              ; preds = %84, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret i1 %85
}

declare i32 @_ZN3sql7recover16InnerPageDecoder10TryAdvanceEv(%"class.sql::recover::InnerPageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql7recover13VirtualCursor10ReadColumnEiP15sqlite3_context(%"class.sql::recover::VirtualCursor"*, i32, %struct.sqlite3_context*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 1
  %7 = load %"class.sql::recover::VirtualTable"*, %"class.sql::recover::VirtualTable"** %6, align 8
  %8 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %7, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10, !alias.scope !8
  %9 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %7, i64 0, i32 4, i32 0, i32 1
  %10 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp eq i64 %14, 0
  %17 = inttoptr i64 %13 to %"struct.sql::recover::RecoveredColumnSpec"*
  %18 = inttoptr i64 %11 to %"struct.sql::recover::RecoveredColumnSpec"*
  br i1 %16, label %19, label %24

19:                                               ; preds = %3
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* null, i64 %20, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %23, label %86, label %91

24:                                               ; preds = %3
  %25 = icmp ugt i64 %15, 576460752303423487
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %14) #12
  %30 = bitcast i8* %29 to %"struct.sql::recover::RecoveredColumnSpec"*
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %32 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %31 to i8**
  store i8* %29, i8** %32, align 8, !alias.scope !8
  %33 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %29, i8** %33, align 8, !alias.scope !8
  %34 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %30, i64 %15
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.sql::recover::RecoveredColumnSpec"* %34, %"struct.sql::recover::RecoveredColumnSpec"** %35, align 8, !alias.scope !8
  %36 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %31 to i64*
  %37 = ptrtoint i8* %29 to i64
  %38 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %17, %18
  br i1 %38, label %65, label %39

39:                                               ; preds = %28, %55
  %40 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %61, %55 ], [ %30, %28 ]
  %41 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %60, %55 ], [ %17, %28 ]
  %42 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %40 to i8*
  %48 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #10
  br label %55

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %40, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %52, i64 %54) #10
  br label %55

55:                                               ; preds = %49, %46
  %56 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %40, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %41, i64 0, i32 1
  %58 = bitcast i32* %56 to i8*
  %59 = bitcast i32* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 6, i1 false) #10
  %60 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %41, i64 1
  %61 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %40, i64 1
  %62 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %60, %18
  br i1 %62, label %63, label %39

63:                                               ; preds = %55
  %64 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %61 to i64
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i64 [ %37, %28 ], [ %64, %63 ]
  store i64 %66, i64* %36, align 8, !alias.scope !8
  %67 = inttoptr i64 %66 to %"struct.sql::recover::RecoveredColumnSpec"*
  %68 = sext i32 %1 to i64
  %69 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %30, i64 %68, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 5
  %72 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %67, %30
  br i1 %72, label %85, label %73

73:                                               ; preds = %65, %83
  %74 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %75, %83 ], [ %67, %65 ]
  %75 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %74, i64 -1
  %76 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %80, %73
  %84 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %75, %30
  br i1 %84, label %85, label %73

85:                                               ; preds = %83, %65
  tail call void @_ZdlPv(i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %71, label %86, label %91

86:                                               ; preds = %19, %85
  %87 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %88 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %87, align 8
  %89 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %88, i64 0, i32 5
  %90 = load i64, i64* %89, align 8
  tail call void @chrome_sqlite3_result_int64(%struct.sqlite3_context* %2, i64 %90) #10
  br label %96

91:                                               ; preds = %19, %85
  %92 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 4
  %93 = tail call zeroext i1 @_ZNK3sql7recover12RecordReader9ReadValueEiP15sqlite3_context(%"class.sql::recover::RecordReader"* %92, i32 %1, %struct.sqlite3_context* %2) #10
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  br label %96

96:                                               ; preds = %91, %86
  %97 = phi i32 [ 0, %86 ], [ %95, %91 ]
  ret i32 %97
}

declare void @chrome_sqlite3_result_int64(%struct.sqlite3_context*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3sql7recover13VirtualCursor5RowIdEv(%"class.sql::recover::VirtualCursor"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::LeafPageDecoder"** %2, align 8
  %4 = getelementptr inbounds %"class.sql::recover::LeafPageDecoder", %"class.sql::recover::LeafPageDecoder"* %3, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

declare zeroext i1 @_ZNK3sql7recover12RecordReader9ReadValueEiP15sqlite3_context(%"class.sql::recover::RecordReader"*, i32, %struct.sqlite3_context*) local_unnamed_addr #1

declare i32 @_ZN3sql7recover18DatabasePageReader8ReadPageEi(%"class.sql::recover::DatabasePageReader"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql7recover15LeafPageDecoder13IsOnValidPageEPNS0_18DatabasePageReaderE(%"class.sql::recover::DatabasePageReader"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql7recover16InnerPageDecoder13IsOnValidPageEPNS0_18DatabasePageReaderE(%"class.sql::recover::DatabasePageReader"*) local_unnamed_addr #1

declare i32 @_ZNK3sql7recover12RecordReader12GetValueTypeEi(%"class.sql::recover::RecordReader"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql7recover19RecoveredColumnSpec17IsAcceptableValueENS0_9ValueTypeE(%"struct.sql::recover::RecoveredColumnSpec"*, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3sql7recover15LeafPageDecoderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::LeafPageDecoder"*, %"class.sql::recover::DatabasePageReader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql7recover16InnerPageDecoderC1EPNS0_18DatabasePageReaderE(%"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::DatabasePageReader"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3sql7recover16InnerPageDecoderENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.29"*, %"class.std::__1::unique_ptr.31"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.31"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.31"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.31"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.31"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.31"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.31"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.31"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.31"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.31"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.31"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.sql::recover::InnerPageDecoder"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.31"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.31"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.31"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.31"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.31"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.31"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.31"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.31"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.31"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.31"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.31"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.31"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.31"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.31"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.31"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.31"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.31"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.31"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.31"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.31"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.31"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.31"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.31"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.31"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.31"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.31"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.31"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.31"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.31"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.31"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.31"*
  %138 = icmp eq %"class.std::__1::unique_ptr.31"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.31"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.sql::recover::InnerPageDecoder"*, %"class.sql::recover::InnerPageDecoder"** %142, align 8
  store %"class.sql::recover::InnerPageDecoder"* null, %"class.sql::recover::InnerPageDecoder"** %142, align 8
  %144 = icmp eq %"class.sql::recover::InnerPageDecoder"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.sql::recover::InnerPageDecoder"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.31"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3sql7recover12VirtualTable12column_specsEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3sql7recover12VirtualTable12column_specsEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3sql7recover12VirtualTable12column_specsEv: argument 0"}
!7 = distinct !{!7, !"_ZNK3sql7recover12VirtualTable12column_specsEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3sql7recover12VirtualTable12column_specsEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3sql7recover12VirtualTable12column_specsEv"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
