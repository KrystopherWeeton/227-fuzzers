; ModuleID = '../../components/autofill/core/browser/autofill_regexes.cc'
source_filename = "../../components/autofill/core/browser/autofill_regexes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::NoDestructor.1" = type { [40 x i8] }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.3, [32 x i8] }
%struct.anon.3 = type { i16, i32, i32, i16* }
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"struct.std::__1::pair.15" = type { %"class.base::BasicStringPiece", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.icu_69::RegexMatcher"* }
%"class.icu_69::RegexMatcher" = type { %"class.icu_69::UObject", %"class.icu_69::RegexPattern"*, %"class.icu_69::RegexPattern"*, %"class.icu_69::UnicodeString"*, %struct.UText*, %struct.UText*, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i8, i8, i8, i64, i64, i64, i64, i8, i8, %"class.icu_69::UVector64"*, %"struct.icu_69::REStackFrame"*, i64*, [8 x i64], i32, i32, i32, i32, i8 (i8*, i32)*, i8*, i8 (i8*, i64)*, i8*, i8, i8, i32, %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"* }
%"class.icu_69::RegexPattern" = type { %"class.icu_69::UObject", %struct.UText*, %"class.icu_69::UnicodeString"*, i32, %"class.icu_69::UVector64"*, %"class.icu_69::UnicodeString", %"class.icu_69::UVector"*, %"struct.icu_69::Regex8BitSet"*, i32, i32, i32, i32, %"class.icu_69::UVector32"*, i32, i32, i32, %"class.icu_69::UnicodeSet"*, i32, %"struct.icu_69::Regex8BitSet"*, i8, %struct.UHashtable* }
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UVector32" = type opaque
%"class.icu_69::UnicodeSet" = type opaque
%"struct.icu_69::Regex8BitSet" = type opaque
%struct.UHashtable = type opaque
%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::UVector64" = type opaque
%"struct.icu_69::REStackFrame" = type opaque
%"class.icu_69::BreakIterator" = type opaque
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.16" }
%"struct.std::__1::pair.16" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%struct.anon.2 = type { i16, [27 x i16] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_node"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_node_destructor" }
%"class.std::__1::__tree_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE21__emplace_unique_implIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes = internal global i64 0, align 8
@_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock = internal global %"class.base::NoDestructor.1" zeroinitializer, align 8
@_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEi(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.std::__1::pair.15", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.icu_69::UnicodeString", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, 5000
  br i1 %16, label %397, label %17

17:                                               ; preds = %4
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24, !prof !2

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** bitcast (%"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes to %"class.std::__1::__tree_end_node"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes) #9
  br label %24

24:                                               ; preds = %20, %23, %17
  %25 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock to i8*) acquire, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %24
  %28 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor.1"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock to %"class.base::internal::LockImpl"*)) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock) #9
  br label %31

31:                                               ; preds = %27, %30, %24
  %32 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor.1"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock to %union.pthread_mutex_t*)) #9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %31
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor.1"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock to %"class.base::internal::LockImpl"*)) #9
  br label %35

35:                                               ; preds = %31, %34
  %36 = bitcast %"class.icu_69::ConstChar16Ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %38 = icmp eq %"class.std::__1::__tree_node"* %37, null
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = bitcast %"class.base::BasicStringPiece"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  br label %136

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %48 = load i16*, i16** %47, align 8
  br label %49

49:                                               ; preds = %93, %44
  %50 = phi %"class.std::__1::__tree_end_node"* [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %44 ], [ %95, %93 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %37, %44 ], [ %96, %93 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__value_type"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %55 to i64
  %60 = select i1 %56, i64 %58, i64 %59
  %61 = icmp ugt i64 %60, %46
  %62 = select i1 %61, i64 %46, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %86, label %64

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i16*, i16** %65, align 8
  %67 = bitcast %"struct.std::__1::__value_type"* %52 to i16*
  %68 = select i1 %56, i16* %66, i16* %67
  br label %69

69:                                               ; preds = %81, %64
  %70 = phi i64 [ %82, %81 ], [ %62, %64 ]
  %71 = phi i16* [ %84, %81 ], [ %48, %64 ]
  %72 = phi i16* [ %83, %81 ], [ %68, %64 ]
  %73 = load i16, i16* %72, align 2
  %74 = load i16, i16* %71, align 2
  %75 = icmp ult i16 %73, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::__tree_node_base"** %77 to %"class.std::__1::__tree_node"**
  br label %93

79:                                               ; preds = %69
  %80 = icmp ult i16 %74, %73
  br i1 %80, label %90, label %81

81:                                               ; preds = %79
  %82 = add i64 %70, -1
  %83 = getelementptr inbounds i16, i16* %72, i64 1
  %84 = getelementptr inbounds i16, i16* %71, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %86, label %69

86:                                               ; preds = %81, %49
  %87 = icmp ult i64 %60, %46
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::__tree_node_base"** %88 to %"class.std::__1::__tree_node"**
  br i1 %87, label %93, label %90

90:                                               ; preds = %79, %86
  %91 = bitcast %"class.std::__1::__tree_node"* %51 to %"class.std::__1::__tree_node"**
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %93

93:                                               ; preds = %90, %86, %76
  %94 = phi %"class.std::__1::__tree_node"** [ %91, %90 ], [ %78, %76 ], [ %89, %86 ]
  %95 = phi %"class.std::__1::__tree_end_node"* [ %92, %90 ], [ %50, %76 ], [ %50, %86 ]
  %96 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %94, align 8
  %97 = icmp eq %"class.std::__1::__tree_node"* %96, null
  br i1 %97, label %98, label %49

98:                                               ; preds = %93
  %99 = ptrtoint i16* %48 to i64
  %100 = icmp eq %"class.std::__1::__tree_end_node"* %95, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %100, label %136, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 4
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 5
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %105 to i64
  %111 = select i1 %106, i64 %109, i64 %110
  %112 = icmp ugt i64 %46, %111
  %113 = select i1 %112, i64 %111, i64 %46
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %101
  %116 = bitcast %"class.std::__1::__tree_end_node"* %102 to i16**
  %117 = load i16*, i16** %116, align 8
  %118 = bitcast %"class.std::__1::__tree_end_node"* %102 to i16*
  %119 = select i1 %106, i16* %117, i16* %118
  br label %120

120:                                              ; preds = %129, %115
  %121 = phi i64 [ %130, %129 ], [ %113, %115 ]
  %122 = phi i16* [ %132, %129 ], [ %119, %115 ]
  %123 = phi i16* [ %131, %129 ], [ %48, %115 ]
  %124 = load i16, i16* %123, align 2
  %125 = load i16, i16* %122, align 2
  %126 = icmp ult i16 %124, %125
  br i1 %126, label %136, label %127

127:                                              ; preds = %120
  %128 = icmp ult i16 %125, %124
  br i1 %128, label %167, label %129

129:                                              ; preds = %127
  %130 = add i64 %121, -1
  %131 = getelementptr inbounds i16, i16* %123, i64 1
  %132 = getelementptr inbounds i16, i16* %122, i64 1
  %133 = icmp eq i64 %130, 0
  br i1 %133, label %134, label %120

134:                                              ; preds = %129, %101
  %135 = icmp ult i64 %46, %111
  br i1 %135, label %136, label %167

136:                                              ; preds = %120, %134, %98, %39
  %137 = phi i64 [ %43, %39 ], [ %46, %134 ], [ %46, %98 ], [ %46, %120 ]
  %138 = phi i64 [ %41, %39 ], [ %99, %134 ], [ %99, %98 ], [ %99, %120 ]
  %139 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %139) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 64, i1 false) #9
  %140 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  %141 = bitcast %"class.icu_69::ConstChar16Ptr"* %6 to i64*
  store i64 %138, i64* %141, align 8
  %142 = trunc i64 %137 to i32
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %5, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %142) #9
  %143 = load i16*, i16** %140, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %143) #9, !srcloc !4
  %144 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #9
  store i32 0, i32* %7, align 4
  %145 = call i8* @_ZN6icu_697UMemorynwEm(i64 336) #9
  %146 = icmp eq i8* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %136
  %148 = bitcast i8* %145 to %"class.icu_69::RegexMatcher"*
  call void @_ZN6icu_6912RegexMatcherC1ERKNS_13UnicodeStringEjR10UErrorCode(%"class.icu_69::RegexMatcher"* nonnull %148, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32 2, i32* nonnull dereferenceable(4) %7) #9
  %149 = ptrtoint i8* %145 to i64
  br label %150

150:                                              ; preds = %147, %136
  %151 = phi i64 [ %149, %147 ], [ 0, %136 ]
  %152 = bitcast %"struct.std::__1::pair.15"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #9
  %153 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %152, i8* align 8 %153, i64 16, i1 false) #9
  %154 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %8, i64 0, i32 1
  %155 = bitcast %"class.std::__1::unique_ptr"* %154 to i64*
  store i64 %151, i64* %155, align 8, !alias.scope !5
  %156 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE21__emplace_unique_implIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEEDpOT_(%"class.std::__1::__tree"* bitcast (%"class.base::NoDestructor"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE18g_autofill_regexes to %"class.std::__1::__tree"*), %"struct.std::__1::pair.15"* nonnull dereferenceable(24) %8) #9
  %157 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %156, 0
  %158 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexMatcher"** %158, align 8
  store %"class.icu_69::RegexMatcher"* null, %"class.icu_69::RegexMatcher"** %158, align 8
  %160 = icmp eq %"class.icu_69::RegexMatcher"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %150
  %162 = bitcast %"class.icu_69::RegexMatcher"* %159 to void (%"class.icu_69::RegexMatcher"*)***
  %163 = load void (%"class.icu_69::RegexMatcher"*)**, void (%"class.icu_69::RegexMatcher"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.icu_69::RegexMatcher"*)*, void (%"class.icu_69::RegexMatcher"*)** %163, i64 1
  %165 = load void (%"class.icu_69::RegexMatcher"*)*, void (%"class.icu_69::RegexMatcher"*)** %164, align 8
  call void %165(%"class.icu_69::RegexMatcher"* nonnull %159) #9
  br label %166

166:                                              ; preds = %161, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %139) #9
  br label %167

167:                                              ; preds = %127, %134, %166
  %168 = phi %"class.std::__1::__tree_end_node"* [ %157, %166 ], [ %95, %134 ], [ %95, %127 ]
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 7
  %170 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.icu_69::RegexMatcher"**
  %171 = load %"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexMatcher"** %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %172 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %172) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 64, i1 false)
  %173 = bitcast %"class.base::BasicStringPiece"* %0 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %10, i64 0, i32 0
  %176 = bitcast %"class.icu_69::ConstChar16Ptr"* %10 to i64*
  store i64 %174, i64* %176, align 8
  %177 = load i64, i64* %14, align 8
  %178 = trunc i64 %177 to i32
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %9, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %10, i32 %178) #9
  %179 = load i16*, i16** %175, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %179) #9, !srcloc !4
  %180 = call dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetERKNS_13UnicodeStringE(%"class.icu_69::RegexMatcher"* %171, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9) #9
  %181 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #9
  store i32 0, i32* %11, align 4
  %182 = call signext i8 @_ZN6icu_6912RegexMatcher4findElR10UErrorCode(%"class.icu_69::RegexMatcher"* %171, i64 0, i32* nonnull dereferenceable(4) %11) #9
  %183 = icmp ne i8 %182, 0
  %184 = icmp ne %"class.std::__1::basic_string"* %2, null
  %185 = and i1 %184, %183
  br i1 %185, label %186, label %395

186:                                              ; preds = %167
  %187 = bitcast %"class.icu_69::UnicodeString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %187) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 64, i1 false)
  call void @_ZNK6icu_6912RegexMatcher5groupEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %12, %"class.icu_69::RegexMatcher"* %171, i32 %3, i32* nonnull dereferenceable(4) %11) #9
  %188 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #9
  %189 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1
  %190 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %189, i64 0, i32 0, i32 0
  %191 = load i16, i16* %190, align 8, !noalias !8
  %192 = sext i16 %191 to i32
  %193 = and i32 %192, 17
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %204

195:                                              ; preds = %186
  %196 = and i32 %192, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %189 to %struct.anon.2*
  %200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %199, i64 0, i32 1, i64 0
  br label %204

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 3
  %203 = load i16*, i16** %202, align 8, !noalias !8
  br label %204

204:                                              ; preds = %201, %198, %186
  %205 = phi i16* [ %200, %198 ], [ %203, %201 ], [ null, %186 ]
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %205) #9, !noalias !8, !srcloc !11
  %206 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 0
  %207 = load i16, i16* %206, align 8, !noalias !8
  %208 = icmp slt i16 %207, 0
  %209 = lshr i16 %207, 5
  %210 = zext i16 %209 to i32
  %211 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 1
  %212 = load i32, i32* %211, align 4, !noalias !8
  %213 = select i1 %208, i32 %212, i32 %210
  %214 = sext i32 %213 to i64
  %215 = icmp slt i32 %213, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %204
  %217 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %217) #10
  unreachable

218:                                              ; preds = %204
  %219 = icmp ult i32 %213, 11
  br i1 %219, label %233, label %220

220:                                              ; preds = %218
  %221 = add nuw nsw i64 %214, 8
  %222 = and i64 %221, -8
  %223 = icmp slt i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %220
  call void @abort() #10
  unreachable

225:                                              ; preds = %220
  %226 = shl nsw i64 %222, 1
  %227 = call i8* @_Znwm(i64 %226) #11
  %228 = bitcast i8* %227 to i16*
  %229 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %227, i8** %229, align 8, !alias.scope !8
  %230 = or i64 %222, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8, !alias.scope !8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %214, i64* %232, align 8, !alias.scope !8
  br label %239

233:                                              ; preds = %218
  %234 = trunc i32 %213 to i8
  %235 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %235, i64 0, i32 1, i32 1
  store i8 %234, i8* %236, align 1, !alias.scope !8
  %237 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %238 = icmp eq i32 %213, 0
  br i1 %238, label %383, label %239

239:                                              ; preds = %233, %225
  %240 = phi i16* [ %228, %225 ], [ %237, %233 ]
  %241 = icmp ult i32 %213, 16
  br i1 %241, label %330, label %242

242:                                              ; preds = %239
  %243 = getelementptr i16, i16* %240, i64 %214
  %244 = getelementptr i16, i16* %205, i64 %214
  %245 = icmp ult i16* %240, %244
  %246 = icmp ult i16* %205, %243
  %247 = and i1 %245, %246
  br i1 %247, label %330, label %248

248:                                              ; preds = %242
  %249 = and i64 %214, -16
  %250 = sub nsw i64 %214, %249
  %251 = getelementptr i16, i16* %205, i64 %249
  %252 = getelementptr i16, i16* %240, i64 %249
  %253 = add nsw i64 %249, -16
  %254 = lshr exact i64 %253, 4
  %255 = add nuw nsw i64 %254, 1
  %256 = and i64 %255, 3
  %257 = icmp ult i64 %253, 48
  br i1 %257, label %309, label %258

258:                                              ; preds = %248
  %259 = sub nsw i64 %255, %256
  br label %260

260:                                              ; preds = %260, %258
  %261 = phi i64 [ 0, %258 ], [ %306, %260 ]
  %262 = phi i64 [ %259, %258 ], [ %307, %260 ]
  %263 = getelementptr i16, i16* %205, i64 %261
  %264 = getelementptr i16, i16* %240, i64 %261
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !12
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !12
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !15, !noalias !12
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !15, !noalias !12
  %273 = or i64 %261, 16
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %240, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !12
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !12
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !15, !noalias !12
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !15, !noalias !12
  %284 = or i64 %261, 32
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %240, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !12
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !12
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !15, !noalias !12
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !15, !noalias !12
  %295 = or i64 %261, 48
  %296 = getelementptr i16, i16* %205, i64 %295
  %297 = getelementptr i16, i16* %240, i64 %295
  %298 = bitcast i16* %296 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !12
  %300 = getelementptr i16, i16* %296, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !12
  %303 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %303, align 2, !alias.scope !15, !noalias !12
  %304 = getelementptr i16, i16* %297, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %305, align 2, !alias.scope !15, !noalias !12
  %306 = add i64 %261, 64
  %307 = add i64 %262, -4
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %260, !llvm.loop !17

309:                                              ; preds = %260, %248
  %310 = phi i64 [ 0, %248 ], [ %306, %260 ]
  %311 = icmp eq i64 %256, 0
  br i1 %311, label %328, label %312

312:                                              ; preds = %309, %312
  %313 = phi i64 [ %325, %312 ], [ %310, %309 ]
  %314 = phi i64 [ %326, %312 ], [ %256, %309 ]
  %315 = getelementptr i16, i16* %205, i64 %313
  %316 = getelementptr i16, i16* %240, i64 %313
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !12
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !12
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !15, !noalias !12
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !15, !noalias !12
  %325 = add i64 %313, 16
  %326 = add i64 %314, -1
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %312, !llvm.loop !19

328:                                              ; preds = %312, %309
  %329 = icmp eq i64 %249, %214
  br i1 %329, label %383, label %330

330:                                              ; preds = %328, %242, %239
  %331 = phi i64 [ %214, %242 ], [ %214, %239 ], [ %250, %328 ]
  %332 = phi i16* [ %205, %242 ], [ %205, %239 ], [ %251, %328 ]
  %333 = phi i16* [ %240, %242 ], [ %240, %239 ], [ %252, %328 ]
  %334 = add nsw i64 %331, -1
  %335 = and i64 %331, 7
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %348, label %337

337:                                              ; preds = %330, %337
  %338 = phi i64 [ %343, %337 ], [ %331, %330 ]
  %339 = phi i16* [ %345, %337 ], [ %332, %330 ]
  %340 = phi i16* [ %344, %337 ], [ %333, %330 ]
  %341 = phi i64 [ %346, %337 ], [ %335, %330 ]
  %342 = load i16, i16* %339, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %338, -1
  %344 = getelementptr inbounds i16, i16* %340, i64 1
  %345 = getelementptr inbounds i16, i16* %339, i64 1
  %346 = add i64 %341, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %337, !llvm.loop !21

348:                                              ; preds = %337, %330
  %349 = phi i64 [ %331, %330 ], [ %343, %337 ]
  %350 = phi i16* [ %332, %330 ], [ %345, %337 ]
  %351 = phi i16* [ %333, %330 ], [ %344, %337 ]
  %352 = icmp ult i64 %334, 7
  br i1 %352, label %383, label %353

353:                                              ; preds = %348, %353
  %354 = phi i64 [ %379, %353 ], [ %349, %348 ]
  %355 = phi i16* [ %381, %353 ], [ %350, %348 ]
  %356 = phi i16* [ %380, %353 ], [ %351, %348 ]
  %357 = load i16, i16* %355, align 2
  store i16 %357, i16* %356, align 2
  %358 = getelementptr inbounds i16, i16* %356, i64 1
  %359 = getelementptr inbounds i16, i16* %355, i64 1
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %356, i64 2
  %362 = getelementptr inbounds i16, i16* %355, i64 2
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %356, i64 3
  %365 = getelementptr inbounds i16, i16* %355, i64 3
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %356, i64 4
  %368 = getelementptr inbounds i16, i16* %355, i64 4
  %369 = load i16, i16* %368, align 2
  store i16 %369, i16* %367, align 2
  %370 = getelementptr inbounds i16, i16* %356, i64 5
  %371 = getelementptr inbounds i16, i16* %355, i64 5
  %372 = load i16, i16* %371, align 2
  store i16 %372, i16* %370, align 2
  %373 = getelementptr inbounds i16, i16* %356, i64 6
  %374 = getelementptr inbounds i16, i16* %355, i64 6
  %375 = load i16, i16* %374, align 2
  store i16 %375, i16* %373, align 2
  %376 = getelementptr inbounds i16, i16* %356, i64 7
  %377 = getelementptr inbounds i16, i16* %355, i64 7
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = add i64 %354, -8
  %380 = getelementptr inbounds i16, i16* %356, i64 8
  %381 = getelementptr inbounds i16, i16* %355, i64 8
  %382 = icmp eq i64 %379, 0
  br i1 %382, label %383, label %353, !llvm.loop !22

383:                                              ; preds = %348, %353, %328, %233
  %384 = phi i16* [ %237, %233 ], [ %240, %328 ], [ %240, %353 ], [ %240, %348 ]
  %385 = getelementptr inbounds i16, i16* %384, i64 %214
  store i16 0, i16* %385, align 2
  %386 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %387 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %386, i64 0, i32 1, i32 1
  %388 = load i8, i8* %387, align 1
  %389 = icmp slt i8 %388, 0
  br i1 %389, label %390, label %393

390:                                              ; preds = %383
  %391 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %392 = load i8*, i8** %391, align 8
  call void @_ZdlPv(i8* %392) #11
  br label %393

393:                                              ; preds = %390, %383
  %394 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %394, i8* nonnull align 8 %188, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %187) #9
  br label %395

395:                                              ; preds = %393, %167
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %172) #9
  %396 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor.1"* @_ZZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEiE6g_lock to %union.pthread_mutex_t*)) #9
  br label %397

397:                                              ; preds = %4, %395
  %398 = phi i1 [ %183, %395 ], [ false, %4 ]
  ret i1 %398
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #3

declare dereferenceable(336) %"class.icu_69::RegexMatcher"* @_ZN6icu_6912RegexMatcher5resetERKNS_13UnicodeStringE(%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #3

declare signext i8 @_ZN6icu_6912RegexMatcher4findElR10UErrorCode(%"class.icu_69::RegexMatcher"*, i64, i32* dereferenceable(4)) unnamed_addr #3

declare void @_ZNK6icu_6912RegexMatcher5groupEiR10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::RegexMatcher"*, i32, i32* dereferenceable(4)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #4

declare void @_ZN6icu_6912RegexMatcherC1ERKNS_13UnicodeStringEjR10UErrorCode(%"class.icu_69::RegexMatcher"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32* dereferenceable(4)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE21__emplace_unique_implIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENSM_INS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEEbEEDpOT_(%"class.std::__1::__tree"*, %"struct.std::__1::pair.15"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.19", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.19"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.19"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.19"* nonnull sret %3, %"class.std::__1::__tree"* %0, %"struct.std::__1::pair.15"* dereferenceable(24) %1)
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %103, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::__value_type"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"struct.std::__1::__value_type"* %9 to i16*
  %27 = select i1 %19, i16* %25, i16* %26
  br label %28

28:                                               ; preds = %99, %14
  %29 = phi %"class.std::__1::__tree_node"* [ %102, %99 ], [ %12, %14 ]
  %30 = phi %"class.std::__1::__tree_node_base"** [ %101, %99 ], [ %15, %14 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__value_type"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp ult i64 %39, %23
  %41 = select i1 %40, i64 %39, i64 %23
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"struct.std::__1::__value_type"* %31 to i16*
  %47 = select i1 %35, i16* %45, i16* %46
  br label %48

48:                                               ; preds = %57, %43
  %49 = phi i64 [ %58, %57 ], [ %41, %43 ]
  %50 = phi i16* [ %60, %57 ], [ %47, %43 ]
  %51 = phi i16* [ %59, %57 ], [ %27, %43 ]
  %52 = load i16, i16* %51, align 2
  %53 = load i16, i16* %50, align 2
  %54 = icmp ult i16 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = icmp ult i16 %53, %52
  br i1 %56, label %70, label %57

57:                                               ; preds = %55
  %58 = add i64 %49, -1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = getelementptr inbounds i16, i16* %50, i64 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %62, label %48

62:                                               ; preds = %57, %28
  %63 = icmp ult i64 %23, %39
  br i1 %63, label %64, label %70

64:                                               ; preds = %48, %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %99

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %105

70:                                               ; preds = %55, %62
  br i1 %42, label %90, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = bitcast %"struct.std::__1::__value_type"* %31 to i16*
  %75 = select i1 %35, i16* %73, i16* %74
  br label %76

76:                                               ; preds = %85, %71
  %77 = phi i64 [ %86, %85 ], [ %41, %71 ]
  %78 = phi i16* [ %88, %85 ], [ %27, %71 ]
  %79 = phi i16* [ %87, %85 ], [ %75, %71 ]
  %80 = load i16, i16* %79, align 2
  %81 = load i16, i16* %78, align 2
  %82 = icmp ult i16 %80, %81
  br i1 %82, label %91, label %83

83:                                               ; preds = %76
  %84 = icmp ult i16 %81, %80
  br i1 %84, label %97, label %85

85:                                               ; preds = %83
  %86 = add i64 %77, -1
  %87 = getelementptr inbounds i16, i16* %79, i64 1
  %88 = getelementptr inbounds i16, i16* %78, i64 1
  %89 = icmp eq i64 %86, 0
  br i1 %89, label %90, label %76

90:                                               ; preds = %85, %70
  br i1 %40, label %91, label %97

91:                                               ; preds = %76, %90
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %105

97:                                               ; preds = %90, %83
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %105

99:                                               ; preds = %91, %64
  %100 = phi %"class.std::__1::__tree_node_base"* [ %66, %64 ], [ %93, %91 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %65, %64 ], [ %92, %91 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"* %100 to %"class.std::__1::__tree_node"*
  br label %28

103:                                              ; preds = %2
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %105

105:                                              ; preds = %68, %95, %97, %103
  %106 = phi %"class.std::__1::__tree_end_node"* [ %10, %103 ], [ %69, %68 ], [ %96, %95 ], [ %98, %97 ]
  %107 = phi %"class.std::__1::__tree_node_base"** [ %104, %103 ], [ %65, %68 ], [ %92, %95 ], [ %30, %97 ]
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node"**
  %109 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node"* %109, null
  br i1 %110, label %111, label %133

111:                                              ; preds = %105
  %112 = bitcast %"class.std::__1::__tree_node"* %8 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 0, i32 2
  %114 = bitcast %"class.std::__1::__tree_node"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %113, align 8
  store %"class.std::__1::__tree_node"* %8, %"class.std::__1::__tree_node"** %108, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %111
  %121 = ptrtoint %"class.std::__1::__tree_node_base"* %118 to i64
  %122 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %121, i64* %122, align 8
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  br label %124

124:                                              ; preds = %120, %111
  %125 = phi %"class.std::__1::__tree_node_base"* [ %112, %111 ], [ %123, %120 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %127, %"class.std::__1::__tree_node_base"* %125) #9
  %128 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %128, align 8
  %131 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_node"* null, %"class.std::__1::__tree_node"** %5, align 8
  br label %159

133:                                              ; preds = %105
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %109, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_node"* null, %"class.std::__1::__tree_node"** %5, align 8
  %135 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %135, label %159, label %136

136:                                              ; preds = %133
  %137 = load i8, i8* %6, align 8, !range !23
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %157, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.icu_69::RegexMatcher"*, %"class.icu_69::RegexMatcher"** %141, align 8
  store %"class.icu_69::RegexMatcher"* null, %"class.icu_69::RegexMatcher"** %141, align 8
  %143 = icmp eq %"class.icu_69::RegexMatcher"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %139
  %145 = bitcast %"class.icu_69::RegexMatcher"* %142 to void (%"class.icu_69::RegexMatcher"*)***
  %146 = load void (%"class.icu_69::RegexMatcher"*)**, void (%"class.icu_69::RegexMatcher"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.icu_69::RegexMatcher"*)*, void (%"class.icu_69::RegexMatcher"*)** %146, i64 1
  %148 = load void (%"class.icu_69::RegexMatcher"*)*, void (%"class.icu_69::RegexMatcher"*)** %147, align 8
  call void %148(%"class.icu_69::RegexMatcher"* nonnull %142) #9
  br label %149

149:                                              ; preds = %144, %139
  %150 = bitcast %"struct.std::__1::pair.16"* %140 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = bitcast %"struct.std::__1::pair.16"* %140 to i8**
  %156 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %156) #11
  br label %157

157:                                              ; preds = %154, %149, %136
  %158 = bitcast %"class.std::__1::__tree_node"* %8 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %124, %133, %157
  %160 = phi %"class.std::__1::__tree_end_node"* [ %132, %124 ], [ %134, %133 ], [ %134, %157 ]
  %161 = phi i8 [ 1, %124 ], [ 0, %133 ], [ 0, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  %162 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %160, 0
  %163 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %162, i8 %161, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJNS_4pairIN4base16BasicStringPieceIDsS4_EESD_EEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.19"* noalias sret, %"class.std::__1::__tree"*, %"struct.std::__1::pair.15"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.19"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = tail call i8* @_Znwm(i64 64) #11
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.19"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.std::__1::allocator.7"** %5 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %4, %"class.std::__1::__compressed_pair.4"** %11, align 8
  store i8 0, i8* %6, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %2, i64 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8, !noalias !24
  %15 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %2, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !24
  %17 = icmp ugt i64 %16, 9223372036854775791
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast i8* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #10
  unreachable

20:                                               ; preds = %3
  %21 = icmp ult i64 %16, 11
  br i1 %21, label %37, label %22

22:                                               ; preds = %20
  %23 = add nuw nsw i64 %16, 8
  %24 = and i64 %23, -8
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @abort() #10
  unreachable

27:                                               ; preds = %22
  %28 = shl i64 %24, 1
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to i16*
  %31 = bitcast i8* %12 to i8**
  store i8* %29, i8** %31, align 8, !alias.scope !24
  %32 = or i64 %24, -9223372036854775808
  %33 = getelementptr inbounds i8, i8* %8, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %32, i64* %34, align 8, !alias.scope !24
  %35 = getelementptr inbounds i8, i8* %8, i64 40
  %36 = bitcast i8* %35 to i64*
  store i64 %16, i64* %36, align 8, !alias.scope !24
  br label %42

37:                                               ; preds = %20
  %38 = trunc i64 %16 to i8
  %39 = getelementptr inbounds i8, i8* %8, i64 55
  store i8 %38, i8* %39, align 1, !alias.scope !24
  %40 = bitcast i8* %12 to i16*
  %41 = icmp eq i64 %16, 0
  br i1 %41, label %188, label %42

42:                                               ; preds = %37, %27
  %43 = phi i8* [ %29, %27 ], [ %12, %37 ]
  %44 = phi i16* [ %30, %27 ], [ %40, %37 ]
  %45 = icmp ult i64 %16, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %42
  %47 = getelementptr i16, i16* %44, i64 %16
  %48 = getelementptr i16, i16* %14, i64 %16
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %43, %49
  %51 = icmp ult i16* %14, %47
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %16, -16
  %55 = sub i64 %16, %54
  %56 = getelementptr i16, i16* %14, i64 %54
  %57 = getelementptr i16, i16* %44, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %14, i64 %66
  %69 = getelementptr i16, i16* %44, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !27
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !27
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !30, !noalias !27
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !30, !noalias !27
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %14, i64 %78
  %80 = getelementptr i16, i16* %44, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !27
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !27
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !30, !noalias !27
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !30, !noalias !27
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %14, i64 %89
  %91 = getelementptr i16, i16* %44, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !27
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !27
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !30, !noalias !27
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !30, !noalias !27
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %14, i64 %100
  %102 = getelementptr i16, i16* %44, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !27
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !27
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !30, !noalias !27
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !30, !noalias !27
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !32

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %14, i64 %118
  %121 = getelementptr i16, i16* %44, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !27
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !27
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !30, !noalias !27
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !30, !noalias !27
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !33

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %16, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %42
  %136 = phi i64 [ %16, %46 ], [ %16, %42 ], [ %55, %133 ]
  %137 = phi i16* [ %14, %46 ], [ %14, %42 ], [ %56, %133 ]
  %138 = phi i16* [ %44, %46 ], [ %44, %42 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !34

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !35

188:                                              ; preds = %153, %158, %133, %37
  %189 = phi i16* [ %40, %37 ], [ %44, %133 ], [ %44, %158 ], [ %44, %153 ]
  %190 = getelementptr inbounds i16, i16* %189, i64 %16
  store i16 0, i16* %190, align 2
  %191 = getelementptr inbounds i8, i8* %8, i64 56
  %192 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %2, i64 0, i32 1
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  %195 = load i64, i64* %194, align 8
  store %"class.icu_69::RegexMatcher"* null, %"class.icu_69::RegexMatcher"** %193, align 8
  %196 = bitcast i8* %191 to i64*
  store i64 %195, i64* %196, align 8
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !23
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !23
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2142770188}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__19make_pairIRKN4base16BasicStringPieceIDsNS_11char_traitsIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__19make_pairIRKN4base16BasicStringPieceIDsNS_11char_traitsIDsEEEENS_10unique_ptrIN6icu_6912RegexMatcherENS_14default_deleteISA_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE: argument 0"}
!10 = distinct !{!10, !"_ZN4base4i18n23UnicodeStringToString16ERKN6icu_6913UnicodeStringE"}
!11 = !{i32 -2142770143}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = distinct !{!22, !18}
!23 = !{i8 0, i8 2}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !18}
!33 = distinct !{!33, !20}
!34 = distinct !{!34, !20}
!35 = distinct !{!35, !18}
