; ModuleID = '../../chrome/browser/ui/views/tabs/tab_strip_layout.cc'
source_filename = "../../chrome/browser/ui/views/tabs/tab_strip_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TabSizer = type { i32, float }
%class.TabWidthConstraints = type { %class.TabAnimationState, %struct.TabLayoutConstants, %struct.TabSizeInfo }
%class.TabAnimationState = type { float, float, float, float }
%struct.TabLayoutConstants = type { i32, i32 }
%struct.TabSizeInfo = type { i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %class.TabWidthConstraints*, %class.TabWidthConstraints*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.TabWidthConstraints* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN8TabSizerC1E12LayoutDomainf = hidden unnamed_addr alias void (%class.TabSizer*, i32, float), void (%class.TabSizer*, i32, float)* @_ZN8TabSizerC2E12LayoutDomainf

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8TabSizerC2E12LayoutDomainf(%class.TabSizer* nocapture, i32, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 1
  store float %2, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8TabSizer17CalculateTabWidthERK19TabWidthConstraints(%class.TabSizer* nocapture readonly, %class.TabWidthConstraints* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  br i1 %5, label %9, label %13

9:                                                ; preds = %2
  %10 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %1) #10
  %11 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %1) #10
  %12 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %8, float %10, float %11) #10
  br label %17

13:                                               ; preds = %2
  %14 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %1) #10
  %15 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %1) #10
  %16 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %8, float %14, float %15) #10
  br label %17

17:                                               ; preds = %13, %9
  %18 = phi float [ %16, %13 ], [ %12, %9 ]
  %19 = tail call float @llvm.floor.f32(float %18) #10
  %20 = fptosi float %19 to i32
  ret i32 %20
}

declare float @_ZN3gfx5Tween17FloatValueBetweenEdff(double, float, float) local_unnamed_addr #2

declare float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints*) local_unnamed_addr #2

declare float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints*) local_unnamed_addr #2

declare float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8TabSizer20TabAcceptsExtraSpaceERK19TabWidthConstraints(%class.TabSizer* nocapture readonly, %class.TabWidthConstraints* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, 0.000000e+00
  %6 = fcmp oeq float %4, 1.000000e+00
  %7 = or i1 %5, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %1) #10
  %14 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %1) #10
  %15 = fcmp olt float %13, %14
  br label %20

16:                                               ; preds = %8
  %17 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %1) #10
  %18 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %1) #10
  %19 = fcmp olt float %17, %18
  br label %20

20:                                               ; preds = %2, %16, %12
  %21 = phi i1 [ %15, %12 ], [ %19, %16 ], [ false, %2 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8TabSizer23IsAlreadyPreferredWidthEv(%class.TabSizer* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TabSizer, %class.TabSizer* %0, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %7, 1.000000e+00
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18AllocateExtraSpacePNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEEERKNS0_I19TabWidthConstraintsNS3_IS7_EEEEN4absl8optionalIiEE8TabSizer(%"class.std::__1::vector"*, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), i64, i64) local_unnamed_addr #1 {
  %5 = trunc i64 %2 to i8
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = trunc i64 %3 to i32
  %9 = lshr i64 %3, 32
  %10 = trunc i64 %9 to i32
  %11 = bitcast i32 %10 to float
  %12 = icmp ne i32 %8, 1
  %13 = fcmp une float %11, 1.000000e+00
  %14 = or i1 %12, %13
  %15 = icmp ne i8 %5, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %105

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %class.TabWidthConstraints** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %105, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %"class.gfx::Rect"** %25 to i64*
  %27 = bitcast %"class.std::__1::vector"* %0 to i64*
  %28 = fcmp oeq float %11, 0.000000e+00
  %29 = fcmp oeq float %11, 1.000000e+00
  %30 = or i1 %28, %29
  %31 = icmp eq i32 %8, 0
  br label %32

32:                                               ; preds = %24, %97
  %33 = phi i64 [ %22, %24 ], [ %101, %97 ]
  %34 = phi i64 [ 0, %24 ], [ %99, %97 ]
  %35 = phi i32 [ 0, %24 ], [ %98, %97 ]
  %36 = inttoptr i64 %33 to %class.TabWidthConstraints*
  %37 = getelementptr inbounds %class.TabWidthConstraints, %class.TabWidthConstraints* %36, i64 %34
  %38 = load i64, i64* %26, align 8
  %39 = load i64, i64* %27, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = icmp ugt i64 %41, %34
  br i1 %42, label %45, label %43

43:                                               ; preds = %32
  %44 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %44) #11
  unreachable

45:                                               ; preds = %32
  %46 = inttoptr i64 %39 to %"class.gfx::Rect"*
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %46, i64 %34, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, %35
  store i32 %49, i32* %47, align 4
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %46, i64 %34, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %49, 0
  %53 = icmp sgt i32 %51, 0
  %54 = and i1 %52, %53
  %55 = sub nuw nsw i32 2147483647, %49
  %56 = icmp ult i32 %55, %51
  %57 = and i1 %56, %54
  %58 = select i1 %57, i32 %55, i32 %51
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  store i32 %60, i32* %50, align 4
  %61 = icmp sge i32 %35, %7
  %62 = or i1 %61, %30
  br i1 %62, label %97, label %63

63:                                               ; preds = %45
  br i1 %31, label %64, label %68

64:                                               ; preds = %63
  %65 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %37) #10
  %66 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %37) #10
  %67 = fcmp olt float %65, %66
  br i1 %67, label %72, label %97

68:                                               ; preds = %63
  %69 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %37) #10
  %70 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %37) #10
  %71 = fcmp olt float %69, %70
  br i1 %71, label %72, label %97

72:                                               ; preds = %64, %68
  %73 = load i64, i64* %26, align 8
  %74 = load i64, i64* %27, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = icmp ugt i64 %76, %34
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %79) #11
  unreachable

80:                                               ; preds = %72
  %81 = add nsw i32 %35, 1
  %82 = inttoptr i64 %74 to %"class.gfx::Rect"*
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 %34, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, 1
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %82, i64 %34, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 0
  %89 = icmp sgt i32 %84, -1
  %90 = and i1 %89, %88
  %91 = sub nuw nsw i32 2147483647, %87
  %92 = icmp ult i32 %91, %85
  %93 = and i1 %92, %90
  %94 = select i1 %93, i32 %91, i32 %85
  %95 = icmp sgt i32 %94, 0
  %96 = select i1 %95, i32 %94, i32 0
  store i32 %96, i32* %83, align 4
  br label %97

97:                                               ; preds = %45, %64, %80, %68
  %98 = phi i32 [ %81, %80 ], [ %35, %68 ], [ %35, %64 ], [ %35, %45 ]
  %99 = add nuw i64 %34, 1
  %100 = load i64, i64* %19, align 8
  %101 = load i64, i64* %21, align 8
  %102 = sub i64 %100, %101
  %103 = sdiv exact i64 %102, 40
  %104 = icmp ult i64 %99, %103
  br i1 %104, label %32, label %105

105:                                              ; preds = %97, %17, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_Z25CalculateTabWidthOverrideRK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS2_9allocatorIS4_EEEEi(%struct.TabLayoutConstants* nocapture readonly dereferenceable(8), %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #1 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = or i64 %5, 1
  %7 = tail call fastcc i64 @_ZN12_GLOBAL__N_131CalculateSpaceFractionAvailableERK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS3_9allocatorIS5_EEEEN4absl8optionalIiEE(%struct.TabLayoutConstants* dereferenceable(8) %0, %"class.std::__1::vector.1"* dereferenceable(24) %1, i64 %6)
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %9 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %11 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %10, align 8
  %12 = icmp eq %class.TabWidthConstraints* %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TabLayoutConstants, %struct.TabLayoutConstants* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  br label %24

16:                                               ; preds = %3
  %17 = lshr i64 %7, 32
  %18 = trunc i64 %17 to i32
  %19 = bitcast i32 %18 to float
  %20 = trunc i64 %7 to i32
  %21 = icmp eq i32 %20, 0
  %22 = fpext float %19 to double
  %23 = getelementptr inbounds %struct.TabLayoutConstants, %struct.TabLayoutConstants* %0, i64 0, i32 1
  br label %31

24:                                               ; preds = %42, %13
  %25 = phi i32 [ %15, %13 ], [ %46, %42 ]
  %26 = phi i32 [ 0, %13 ], [ %48, %42 ]
  %27 = sub i32 %2, %26
  %28 = sub i32 %27, %25
  %29 = insertvalue { i64, i32 } undef, i64 %7, 0
  %30 = insertvalue { i64, i32 } %29, i32 %28, 1
  ret { i64, i32 } %30

31:                                               ; preds = %16, %42
  %32 = phi i32 [ 0, %16 ], [ %48, %42 ]
  %33 = phi %class.TabWidthConstraints* [ %9, %16 ], [ %49, %42 ]
  br i1 %21, label %34, label %38

34:                                               ; preds = %31
  %35 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %33) #10
  %36 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %33) #10
  %37 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %22, float %35, float %36) #10
  br label %42

38:                                               ; preds = %31
  %39 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %33) #10
  %40 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %33) #10
  %41 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %22, float %39, float %40) #10
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi float [ %37, %34 ], [ %41, %38 ]
  %44 = tail call float @llvm.floor.f32(float %43) #10
  %45 = fptosi float %44 to i32
  %46 = load i32, i32* %23, align 4
  %47 = sub i32 %32, %46
  %48 = add i32 %47, %45
  %49 = getelementptr inbounds %class.TabWidthConstraints, %class.TabWidthConstraints* %33, i64 1
  %50 = icmp eq %class.TabWidthConstraints* %49, %11
  br i1 %50, label %24, label %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_131CalculateSpaceFractionAvailableERK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS3_9allocatorIS5_EEEEN4absl8optionalIiEE(%struct.TabLayoutConstants* nocapture readonly dereferenceable(8), %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), i64) unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = trunc i64 %2 to i8
  %8 = lshr i64 %2, 32
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i8 %7, 0
  br i1 %10, label %79, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %13 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %15 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %14, align 8
  %16 = icmp eq %class.TabWidthConstraints* %13, %15
  %17 = getelementptr inbounds %struct.TabLayoutConstants, %struct.TabLayoutConstants* %0, i64 0, i32 1
  br i1 %16, label %18, label %32

18:                                               ; preds = %11
  %19 = load i32, i32* %17, align 4
  %20 = sitofp i32 %19 to float
  br label %21

21:                                               ; preds = %32, %18
  %22 = phi float [ %20, %18 ], [ %49, %32 ]
  %23 = phi float [ 0.000000e+00, %18 ], [ %46, %32 ]
  %24 = phi float [ 0.000000e+00, %18 ], [ %51, %32 ]
  %25 = phi float [ 0.000000e+00, %18 ], [ %41, %32 ]
  %26 = fadd float %25, %22
  %27 = fadd float %23, %22
  %28 = fadd float %24, %22
  %29 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 -1, i32* %4, align 4
  %30 = sitofp i32 %9 to float
  %31 = fcmp ogt float %27, %30
  br i1 %31, label %54, label %58

32:                                               ; preds = %11, %32
  %33 = phi float [ %41, %32 ], [ 0.000000e+00, %11 ]
  %34 = phi float [ %51, %32 ], [ 0.000000e+00, %11 ]
  %35 = phi %class.TabWidthConstraints* [ %52, %32 ], [ %13, %11 ]
  %36 = phi float [ %46, %32 ], [ 0.000000e+00, %11 ]
  %37 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %35) #10
  %38 = load i32, i32* %17, align 4
  %39 = sitofp i32 %38 to float
  %40 = fsub float %37, %39
  %41 = fadd float %33, %40
  %42 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %35) #10
  %43 = load i32, i32* %17, align 4
  %44 = sitofp i32 %43 to float
  %45 = fsub float %42, %44
  %46 = fadd float %36, %45
  %47 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %35) #10
  %48 = load i32, i32* %17, align 4
  %49 = sitofp i32 %48 to float
  %50 = fsub float %47, %49
  %51 = fadd float %34, %50
  %52 = getelementptr inbounds %class.TabWidthConstraints, %class.TabWidthConstraints* %35, i64 1
  %53 = icmp eq %class.TabWidthConstraints* %52, %15
  br i1 %53, label %21, label %32

54:                                               ; preds = %21
  %55 = fsub float %30, %26
  %56 = fsub float %27, %26
  %57 = fdiv float %55, %56
  br label %64

58:                                               ; preds = %21
  %59 = fcmp oeq float %28, %27
  br i1 %59, label %64, label %60

60:                                               ; preds = %58
  %61 = fsub float %30, %27
  %62 = fsub float %28, %27
  %63 = fdiv float %61, %62
  br label %64

64:                                               ; preds = %60, %58, %54
  %65 = phi float [ %57, %54 ], [ %63, %60 ], [ 1.000000e+00, %58 ]
  %66 = phi i64 [ 0, %54 ], [ 1, %60 ], [ 1, %58 ]
  %67 = bitcast i32* %4 to float*
  store float %65, float* %67, align 4
  %68 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  store float 0.000000e+00, float* %5, align 4
  %69 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store float 1.000000e+00, float* %6, align 4
  %70 = fcmp olt float %65, 0.000000e+00
  %71 = select i1 %70, float* %5, float* %67
  %72 = load float, float* %71, align 4
  %73 = fcmp ogt float %72, 1.000000e+00
  %74 = select i1 %73, float* %6, float* %71
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  br label %79

79:                                               ; preds = %3, %64
  %80 = phi i64 [ %66, %64 ], [ 1, %3 ]
  %81 = phi i64 [ %78, %64 ], [ 4575657221408423936, %3 ]
  %82 = and i64 %80, 4294967295
  %83 = or i64 %81, %82
  ret i64 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18CalculateTabBoundsRK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS2_9allocatorIS4_EEEEN4absl8optionalIiEENSB_I16TabWidthOverrideEE(%"class.std::__1::vector"* noalias nocapture sret, %struct.TabLayoutConstants* nocapture readonly dereferenceable(8), %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), i64, i64, i64) local_unnamed_addr #1 {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = trunc i64 %3 to i8
  %10 = lshr i64 %3, 32
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %15 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %17 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %16, align 8
  %18 = icmp eq %class.TabWidthConstraints* %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  br label %185

21:                                               ; preds = %6
  %22 = trunc i64 %4 to i8
  %23 = bitcast { i64, i64 }* %7 to i8*
  %24 = icmp ne i8 %22, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %23, i64 4
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 4
  br label %33

29:                                               ; preds = %21
  %30 = tail call fastcc i64 @_ZN12_GLOBAL__N_131CalculateSpaceFractionAvailableERK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS3_9allocatorIS5_EEEEN4absl8optionalIiEE(%struct.TabLayoutConstants* dereferenceable(8) %1, %"class.std::__1::vector.1"* dereferenceable(24) %2, i64 %3)
  %31 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %14, align 8
  %32 = load %class.TabWidthConstraints*, %class.TabWidthConstraints** %16, align 8
  br label %33

33:                                               ; preds = %29, %25
  %34 = phi %class.TabWidthConstraints* [ %17, %25 ], [ %32, %29 ]
  %35 = phi %class.TabWidthConstraints* [ %15, %25 ], [ %31, %29 ]
  %36 = phi i64 [ %28, %25 ], [ %30, %29 ]
  %37 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #10
  %39 = icmp eq %class.TabWidthConstraints* %35, %34
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %42 = lshr i64 %36, 32
  %43 = trunc i64 %42 to i32
  %44 = bitcast i32 %43 to float
  %45 = trunc i64 %36 to i32
  %46 = icmp eq i32 %45, 0
  %47 = fpext float %44 to double
  %48 = getelementptr inbounds %struct.TabLayoutConstants, %struct.TabLayoutConstants* %1, i64 0, i32 0
  %49 = bitcast %"class.gfx::Rect"** %41 to i64*
  %50 = bitcast %"class.std::__1::vector"* %8 to i64*
  %51 = bitcast %"class.gfx::Rect"** %38 to i64*
  %52 = getelementptr inbounds %struct.TabLayoutConstants, %struct.TabLayoutConstants* %1, i64 0, i32 1
  br label %56

53:                                               ; preds = %146, %33
  %54 = phi %"class.gfx::Rect"* [ null, %33 ], [ %147, %146 ]
  %55 = icmp eq i8 %9, 0
  br i1 %55, label %163, label %154

56:                                               ; preds = %40, %146
  %57 = phi i64 [ 0, %40 ], [ %148, %146 ]
  %58 = phi %"class.gfx::Rect"* [ null, %40 ], [ %147, %146 ]
  %59 = phi i32 [ 0, %40 ], [ %151, %146 ]
  %60 = phi %class.TabWidthConstraints* [ %35, %40 ], [ %152, %146 ]
  br i1 %46, label %61, label %65

61:                                               ; preds = %56
  %62 = tail call float @_ZNK19TabWidthConstraints15GetMinimumWidthEv(%class.TabWidthConstraints* %60) #10
  %63 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %60) #10
  %64 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %47, float %62, float %63) #10
  br label %69

65:                                               ; preds = %56
  %66 = tail call float @_ZNK19TabWidthConstraints23GetLayoutCrossoverWidthEv(%class.TabWidthConstraints* %60) #10
  %67 = tail call float @_ZNK19TabWidthConstraints17GetPreferredWidthEv(%class.TabWidthConstraints* %60) #10
  %68 = tail call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %47, float %66, float %67) #10
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi float [ %64, %61 ], [ %68, %65 ]
  %71 = tail call float @llvm.floor.f32(float %70) #10
  %72 = fptosi float %71 to i32
  %73 = load i32, i32* %48, align 4
  %74 = icmp sgt i32 %59, 0
  %75 = icmp sgt i32 %72, 0
  %76 = and i1 %74, %75
  %77 = sub nuw nsw i32 2147483647, %59
  %78 = icmp ult i32 %77, %72
  %79 = and i1 %78, %76
  %80 = select i1 %79, i32 %77, i32 %72
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  %83 = icmp sgt i32 %73, 0
  %84 = select i1 %83, i32 %73, i32 0
  %85 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %38, align 16
  %86 = icmp ult %"class.gfx::Rect"* %58, %85
  %87 = ptrtoint %"class.gfx::Rect"* %85 to i64
  br i1 %86, label %88, label %95

88:                                               ; preds = %69
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 0, i32 0, i32 0
  store i32 %59, i32* %89, align 4
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 0, i32 0, i32 1
  store i32 0, i32* %90, align 4
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 0, i32 1, i32 0
  store i32 %82, i32* %91, align 4
  %92 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 0, i32 1, i32 1
  store i32 %84, i32* %92, align 4
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 1
  %94 = ptrtoint %"class.gfx::Rect"* %93 to i64
  store i64 %94, i64* %49, align 8
  br label %146

95:                                               ; preds = %69
  %96 = ptrtoint %"class.gfx::Rect"* %58 to i64
  %97 = load i64, i64* %50, align 16
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 4
  %100 = add nsw i64 %99, 1
  %101 = icmp ugt i64 %100, 1152921504606846975
  br i1 %101, label %102, label %104

102:                                              ; preds = %95
  %103 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %103) #11
  unreachable

104:                                              ; preds = %95
  %105 = sub i64 %87, %97
  %106 = ashr exact i64 %105, 4
  %107 = icmp ult i64 %106, 576460752303423487
  br i1 %107, label %108, label %116

108:                                              ; preds = %104
  %109 = ashr exact i64 %105, 3
  %110 = icmp ult i64 %109, %100
  %111 = select i1 %110, i64 %100, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = icmp ugt i64 %111, 1152921504606846975
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @abort() #11
  unreachable

116:                                              ; preds = %113, %104
  %117 = phi i64 [ %111, %113 ], [ 1152921504606846975, %104 ]
  %118 = shl i64 %117, 4
  %119 = tail call i8* @_Znwm(i64 %118) #12
  %120 = bitcast i8* %119 to %"class.gfx::Rect"*
  br label %121

121:                                              ; preds = %116, %108
  %122 = phi i64 [ %117, %116 ], [ 0, %108 ]
  %123 = phi %"class.gfx::Rect"* [ %120, %116 ], [ null, %108 ]
  %124 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %123, i64 %99
  %125 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %123, i64 %122
  %126 = ptrtoint %"class.gfx::Rect"* %125 to i64
  %127 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %124, i64 0, i32 0, i32 0
  store i32 %59, i32* %127, align 4
  %128 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %123, i64 %99, i32 0, i32 1
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %123, i64 %99, i32 1, i32 0
  store i32 %82, i32* %129, align 4
  %130 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %123, i64 %99, i32 1, i32 1
  store i32 %84, i32* %130, align 4
  %131 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %124, i64 1
  %132 = ptrtoint %"class.gfx::Rect"* %131 to i64
  %133 = sub i64 %57, %97
  %134 = ashr exact i64 %133, 4
  %135 = sub nsw i64 0, %134
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %124, i64 %135
  %137 = ptrtoint %"class.gfx::Rect"* %136 to i64
  %138 = icmp sgt i64 %133, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %121
  %140 = bitcast %"class.gfx::Rect"* %136 to i8*
  %141 = inttoptr i64 %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 %133, i1 false) #10
  br label %142

142:                                              ; preds = %139, %121
  store i64 %137, i64* %50, align 16
  store i64 %132, i64* %49, align 8
  store i64 %126, i64* %51, align 16
  %143 = icmp eq i64 %97, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %97 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %88, %142, %144
  %147 = phi %"class.gfx::Rect"* [ %93, %88 ], [ %131, %142 ], [ %131, %144 ]
  %148 = phi i64 [ %94, %88 ], [ %132, %142 ], [ %132, %144 ]
  %149 = load i32, i32* %52, align 4
  %150 = add i32 %59, %72
  %151 = sub i32 %150, %149
  %152 = getelementptr inbounds %class.TabWidthConstraints, %class.TabWidthConstraints* %60, i64 1
  %153 = icmp eq %class.TabWidthConstraints* %152, %34
  br i1 %153, label %53, label %56

154:                                              ; preds = %53
  %155 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %54, i64 -1, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %54, i64 -1, i32 1, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %11, %156
  %160 = sub i32 %159, %158
  %161 = zext i32 %160 to i64
  %162 = shl nuw i64 %161, 32
  br label %163

163:                                              ; preds = %154, %53
  %164 = phi i64 [ %162, %154 ], [ -6148914691236517376, %53 ]
  %165 = phi i64 [ 1, %154 ], [ 0, %53 ]
  %166 = getelementptr inbounds i8, i8* %23, i64 12
  %167 = bitcast i8* %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = lshr i64 %164, 32
  %170 = trunc i64 %169 to i32
  %171 = and i64 %164, 2863311360
  %172 = select i1 %24, i32 %168, i32 %170
  %173 = zext i32 %172 to i64
  %174 = shl nuw i64 %173, 32
  %175 = or i64 %165, %171
  %176 = select i1 %24, i64 2863311361, i64 %175
  %177 = or i64 %176, %174
  call void @_Z18AllocateExtraSpacePNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEEERKNS0_I19TabWidthConstraintsNS3_IS7_EEEEN4absl8optionalIiEE8TabSizer(%"class.std::__1::vector"* nonnull %8, %"class.std::__1::vector.1"* dereferenceable(24) %2, i64 %177, i64 %36)
  %178 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 16
  %180 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %180, align 8
  %181 = bitcast %"class.gfx::Rect"** %38 to i64*
  %182 = load i64, i64* %181, align 16
  %183 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %184 = bitcast %"class.gfx::Rect"** %183 to i64*
  store i64 %182, i64* %184, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  br label %185

185:                                              ; preds = %163, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z24CalculatePinnedTabBoundsRK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS2_9allocatorIS4_EEEE(%"class.std::__1::vector"* noalias nocapture sret, %struct.TabLayoutConstants* nocapture readonly dereferenceable(8), %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 {
  tail call void @_Z18CalculateTabBoundsRK18TabLayoutConstantsRKNSt3__16vectorI19TabWidthConstraintsNS2_9allocatorIS4_EEEEN4absl8optionalIiEENSB_I16TabWidthOverrideEE(%"class.std::__1::vector"* sret %0, %struct.TabLayoutConstants* dereferenceable(8) %1, %"class.std::__1::vector.1"* dereferenceable(24) %2, i64 1, i64 0, i64 undef)
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
