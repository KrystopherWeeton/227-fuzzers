; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::PbufferSurfaceEGL" = type { %"class.rx::SurfaceEGL.base", [7 x i8] }
%"class.rx::SurfaceEGL.base" = type <{ %"class.rx::SurfaceGL", %"class.rx::FunctionsEGL"*, i8*, i8*, i8 }>
%"class.rx::SurfaceGL" = type { %"class.rx::SurfaceImpl" }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.egl::SurfaceState" = type <{ i8*, %"struct.egl::Config"*, %"class.egl::AttributeMap", i8, [3 x i8], %"class.angle::BitSetT", %"class.angle::BitSetT.4", i8, [3 x i8] }>
%"struct.egl::Config" = type opaque
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.angle::BitSetT.4" = type { i32 }
%"class.rx::FunctionsEGL" = type { i32 (...)**, i32, i32, %"struct.rx::FunctionsEGL::EGLDispatchTable"*, i8*, %"class.std::__1::vector" }
%"struct.rx::FunctionsEGL::EGLDispatchTable" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.gl::Context" = type opaque
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type { i32 (...)** }
%"class.rx::SurfaceEGL" = type <{ %"class.rx::SurfaceGL", %"class.rx::FunctionsEGL"*, i8*, i8*, i8, [7 x i8] }>
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.egl::Display" = type opaque
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i32*, i32*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rx::FramebufferImpl" = type opaque
%"class.gl::FramebufferState" = type opaque
%"class.gl::Texture" = type opaque
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }

$_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE = comdat any

$_ZN2rx11SurfaceImpl7destroyEPKN3egl7DisplayE = comdat any

@_ZTVN2rx17PbufferSurfaceEGLE = hidden unnamed_addr constant { [40 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::PbufferSurfaceEGL"*)* @_ZN2rx17PbufferSurfaceEGLD2Ev to i8*), i8* bitcast (void (%"class.rx::PbufferSurfaceEGL"*)* @_ZN2rx17PbufferSurfaceEGLD0Ev to i8*), i8* bitcast (i32 (%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*, i32, %"class.rx::FramebufferAttachmentRenderTarget"**)* @_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE to i8*), i8* bitcast (i32 (%"class.rx::SurfaceGL"*, %"class.gl::Context"*, %"class.gl::ImageIndex"*)* @_ZN2rx9SurfaceGL18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)* @_ZN2rx11SurfaceImpl7destroyEPKN3egl7DisplayE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::PbufferSurfaceEGL"*, %"class.egl::Display"*)* @_ZN2rx17PbufferSurfaceEGL10initializeEPKN3egl7DisplayE to i8*), i8* bitcast (%"class.rx::FramebufferImpl"* (%"class.rx::SurfaceGL"*, %"class.gl::Context"*, %"class.gl::FramebufferState"*)* @_ZN2rx9SurfaceGL24createDefaultFramebufferEPKN2gl7ContextERKNS1_16FramebufferStateE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*)* @_ZN2rx10SurfaceEGL11makeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)* @_ZN2rx11SurfaceImpl13unMakeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*)* @_ZN2rx10SurfaceEGL4swapEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32*, i32)* @_ZN2rx10SurfaceEGL14swapWithDamageEPKN2gl7ContextEPKii to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)* @_ZN2rx11SurfaceImpl18swapWithFrameTokenEPKN2gl7ContextEm to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32, i32, i32, i32)* @_ZN2rx10SurfaceEGL13postSubBufferEPKN2gl7ContextEiiii to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, i64)* @_ZN2rx10SurfaceEGL19setPresentationTimeEl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, i32, i8**)* @_ZN2rx10SurfaceEGL24querySurfacePointerANGLEEiPPv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)* @_ZN2rx10SurfaceEGL12bindTexImageEPKN2gl7ContextEPNS1_7TextureEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32)* @_ZN2rx10SurfaceEGL15releaseTexImageEPKN2gl7ContextEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceGL"*, i64*, i64*, i64*)* @_ZN2rx9SurfaceGL13getSyncValuesEPmS1_S1_ to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceGL"*, i32*, i32*)* @_ZN2rx9SurfaceGL10getMscRateEPiS1_ to i8*), i8* bitcast (void (%"class.rx::SurfaceEGL"*, i32)* @_ZN2rx10SurfaceEGL15setSwapIntervalEi to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, i32)* @_ZN2rx11SurfaceImpl13setFixedWidthEi to i8*), i8* bitcast (void (%"class.rx::SurfaceImpl"*, i32)* @_ZN2rx11SurfaceImpl14setFixedHeightEi to i8*), i8* bitcast (i32 (%"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL8getWidthEv to i8*), i8* bitcast (i32 (%"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL9getHeightEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)* @_ZNK2rx11SurfaceImpl12getUserWidthEPKN3egl7DisplayEPi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)* @_ZNK2rx11SurfaceImpl13getUserHeightEPKN3egl7DisplayEPi to i8*), i8* bitcast (i32 (%"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL24isPostSubBufferSupportedEv to i8*), i8* bitcast (i32 (%"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL15getSwapBehaviorEv to i8*), i8* bitcast (%"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)* @_ZNK2rx11SurfaceImpl24getD3DTextureColorFormatEv to i8*), i8* bitcast (void (%"class.rx::SurfaceEGL"*, i1)* @_ZN2rx10SurfaceEGL20setTimestampsEnabledEb to i8*), i8* bitcast (void (%"class.angle::BitSetT"*, %"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL29getSupportedCompositorTimingsEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, i32, i32*, i64*)* @_ZNK2rx10SurfaceEGL19getCompositorTimingEiPKiPl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, i64*)* @_ZNK2rx10SurfaceEGL14getNextFrameIdEPm to i8*), i8* bitcast (void (%"class.angle::BitSetT.4"*, %"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL22getSupportedTimestampsEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceEGL"*, i64, i32, i32*, i64*)* @_ZNK2rx10SurfaceEGL18getFrameTimestampsEmiPKiPl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)* @_ZN2rx11SurfaceImpl12getBufferAgeEPKN2gl7ContextEPi to i8*), i8* bitcast (i1 (%"class.rx::SurfaceGL"*)* @_ZNK2rx9SurfaceGL23hasEmulatedAlphaChannelEv to i8*), i8* bitcast (i1 (%"class.rx::SurfaceEGL"*)* @_ZNK2rx10SurfaceEGL10isExternalEv to i8*)] }, align 8
@_ZZN2rx17PbufferSurfaceEGL10initializeEPKN3egl7DisplayEE34kForwardedPBufferSurfaceAttributes = internal constant [8 x i32] [i32 12375, i32 12374, i32 12376, i32 12416, i32 12417, i32 12418, i32 12423, i32 12424], align 16
@.str = private unnamed_addr constant [31 x i8] c"eglCreatePbufferSurface failed\00", align 1

@_ZN2rx17PbufferSurfaceEGLC1ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv = hidden unnamed_addr alias void (%"class.rx::PbufferSurfaceEGL"*, %"struct.egl::SurfaceState"*, %"class.rx::FunctionsEGL"*, i8*), void (%"class.rx::PbufferSurfaceEGL"*, %"struct.egl::SurfaceState"*, %"class.rx::FunctionsEGL"*, i8*)* @_ZN2rx17PbufferSurfaceEGLC2ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv
@_ZN2rx17PbufferSurfaceEGLD1Ev = hidden unnamed_addr alias void (%"class.rx::PbufferSurfaceEGL"*), void (%"class.rx::PbufferSurfaceEGL"*)* @_ZN2rx17PbufferSurfaceEGLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE(%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"* dereferenceable(16), i32, %"class.rx::FramebufferAttachmentRenderTarget"**) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17PbufferSurfaceEGLC2ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv(%"class.rx::PbufferSurfaceEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), %"class.rx::FunctionsEGL"*, i8*) unnamed_addr #1 align 2 {
  %5 = bitcast %"class.rx::PbufferSurfaceEGL"* %0 to %"class.rx::SurfaceEGL"*
  tail call void @_ZN2rx10SurfaceEGLC2ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv(%"class.rx::SurfaceEGL"* %5, %"struct.egl::SurfaceState"* dereferenceable(56) %1, %"class.rx::FunctionsEGL"* %2, i8* %3) #7
  %6 = getelementptr inbounds %"class.rx::PbufferSurfaceEGL", %"class.rx::PbufferSurfaceEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN2rx17PbufferSurfaceEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

declare void @_ZN2rx10SurfaceEGLC2ERKN3egl12SurfaceStateEPKNS_12FunctionsEGLEPv(%"class.rx::SurfaceEGL"*, %"struct.egl::SurfaceState"* dereferenceable(56), %"class.rx::FunctionsEGL"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2rx10SurfaceEGLD2Ev(%"class.rx::SurfaceEGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17PbufferSurfaceEGLD2Ev(%"class.rx::PbufferSurfaceEGL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::PbufferSurfaceEGL"* %0 to %"class.rx::SurfaceEGL"*
  tail call void @_ZN2rx10SurfaceEGLD2Ev(%"class.rx::SurfaceEGL"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17PbufferSurfaceEGLD0Ev(%"class.rx::PbufferSurfaceEGL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::PbufferSurfaceEGL"* %0 to %"class.rx::SurfaceEGL"*
  tail call void @_ZN2rx10SurfaceEGLD2Ev(%"class.rx::SurfaceEGL"* %2) #7
  %3 = bitcast %"class.rx::PbufferSurfaceEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17PbufferSurfaceEGL10initializeEPKN3egl7DisplayE(%"class.egl::Error"* noalias sret, %"class.rx::PbufferSurfaceEGL"* nocapture, %"class.egl::Display"* nocapture readnone) unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.17", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector.17"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.rx::PbufferSurfaceEGL", %"class.rx::PbufferSurfaceEGL"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.17"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"struct.egl::SurfaceState"*, %"struct.egl::SurfaceState"** %9, align 8
  %12 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %11, i64 0, i32 2
  call void @_ZN2rx10native_egl16TrimAttributeMapERKN3egl12AttributeMapEPKim(%"class.std::__1::vector.17"* nonnull sret %4, %"class.egl::AttributeMap"* dereferenceable(24) %12, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @_ZZN2rx17PbufferSurfaceEGL10initializeEPKN3egl7DisplayEE34kForwardedPBufferSurfaceAttributes, i64 0, i64 0), i64 8) #7
  call void @_ZN2rx10native_egl23FinalizeAttributeVectorEPNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.std::__1::vector.17"* nonnull %4) #7
  %13 = getelementptr inbounds %"class.rx::PbufferSurfaceEGL", %"class.rx::PbufferSurfaceEGL"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %13, align 8
  %15 = getelementptr inbounds %"class.rx::PbufferSurfaceEGL", %"class.rx::PbufferSurfaceEGL"* %1, i64 0, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = call i8* @_ZNK2rx12FunctionsEGL20createPbufferSurfaceEPvPKi(%"class.rx::FunctionsEGL"* %14, i8* %16, i32* %17) #7
  %19 = getelementptr inbounds %"class.rx::PbufferSurfaceEGL", %"class.rx::PbufferSurfaceEGL"* %1, i64 0, i32 0, i32 3
  store i8* %18, i8** %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %21, label %37

21:                                               ; preds = %3
  %22 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %13, align 8
  %23 = call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %22) #7
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7
  %25 = call i8* @_Znwm(i64 32) #8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i64 30, i1 false) #7
  %29 = getelementptr inbounds i8, i8* %25, i64 30
  store i8 0, i8* %29, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #7
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %35) #8
  br label %36

36:                                               ; preds = %21, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7
  br label %42

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %38, align 8, !alias.scope !2
  %39 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %39, align 4, !alias.scope !2
  %40 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %41 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  store i64 0, i64* %41, align 8, !alias.scope !2
  br label %42

42:                                               ; preds = %37, %36
  %43 = load i32*, i32** %7, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = ptrtoint i32* %43 to i64
  %47 = bitcast i32** %8 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast i32* %43 to i8*
  call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN2rx10native_egl23FinalizeAttributeVectorEPNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.std::__1::vector.17"*) local_unnamed_addr #2

declare i8* @_ZNK2rx12FunctionsEGL20createPbufferSurfaceEPvPKi(%"class.rx::FunctionsEGL"*, i8*, i32*) local_unnamed_addr #2

declare i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"*) local_unnamed_addr #2

declare void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i32 @_ZN2rx9SurfaceGL18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE(%"class.rx::SurfaceGL"*, %"class.gl::Context"*, %"class.gl::ImageIndex"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11SurfaceImpl7destroyEPKN3egl7DisplayE(%"class.rx::SurfaceImpl"*, %"class.egl::Display"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare %"class.rx::FramebufferImpl"* @_ZN2rx9SurfaceGL24createDefaultFramebufferEPKN2gl7ContextERKNS1_16FramebufferStateE(%"class.rx::SurfaceGL"*, %"class.gl::Context"*, %"class.gl::FramebufferState"*) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*) unnamed_addr #2

declare void @_ZN2rx11SurfaceImpl13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL4swapEPKN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL14swapWithDamageEPKN2gl7ContextEPKii(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32*, i32) unnamed_addr #2

declare void @_ZN2rx11SurfaceImpl18swapWithFrameTokenEPKN2gl7ContextEm(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL13postSubBufferEPKN2gl7ContextEiiii(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32, i32, i32, i32) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL19setPresentationTimeEl(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, i64) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL24querySurfacePointerANGLEEiPPv(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, i32, i8**) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL12bindTexImageEPKN2gl7ContextEPNS1_7TextureEi(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL15releaseTexImageEPKN2gl7ContextEi(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, %"class.gl::Context"*, i32) unnamed_addr #2

declare void @_ZN2rx9SurfaceGL13getSyncValuesEPmS1_S1_(%"class.egl::Error"* sret, %"class.rx::SurfaceGL"*, i64*, i64*, i64*) unnamed_addr #2

declare void @_ZN2rx9SurfaceGL10getMscRateEPiS1_(%"class.egl::Error"* sret, %"class.rx::SurfaceGL"*, i32*, i32*) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL15setSwapIntervalEi(%"class.rx::SurfaceEGL"*, i32) unnamed_addr #2

declare void @_ZN2rx11SurfaceImpl13setFixedWidthEi(%"class.rx::SurfaceImpl"*, i32) unnamed_addr #2

declare void @_ZN2rx11SurfaceImpl14setFixedHeightEi(%"class.rx::SurfaceImpl"*, i32) unnamed_addr #2

declare i32 @_ZNK2rx10SurfaceEGL8getWidthEv(%"class.rx::SurfaceEGL"*) unnamed_addr #2

declare i32 @_ZNK2rx10SurfaceEGL9getHeightEv(%"class.rx::SurfaceEGL"*) unnamed_addr #2

declare void @_ZNK2rx11SurfaceImpl12getUserWidthEPKN3egl7DisplayEPi(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*) unnamed_addr #2

declare void @_ZNK2rx11SurfaceImpl13getUserHeightEPKN3egl7DisplayEPi(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*) unnamed_addr #2

declare i32 @_ZNK2rx10SurfaceEGL24isPostSubBufferSupportedEv(%"class.rx::SurfaceEGL"*) unnamed_addr #2

declare i32 @_ZNK2rx10SurfaceEGL15getSwapBehaviorEv(%"class.rx::SurfaceEGL"*) unnamed_addr #2

declare %"struct.angle::Format"* @_ZNK2rx11SurfaceImpl24getD3DTextureColorFormatEv(%"class.rx::SurfaceImpl"*) unnamed_addr #2

declare void @_ZN2rx10SurfaceEGL20setTimestampsEnabledEb(%"class.rx::SurfaceEGL"*, i1 zeroext) unnamed_addr #2

declare void @_ZNK2rx10SurfaceEGL29getSupportedCompositorTimingsEv(%"class.angle::BitSetT"* sret, %"class.rx::SurfaceEGL"*) unnamed_addr #2

declare void @_ZNK2rx10SurfaceEGL19getCompositorTimingEiPKiPl(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, i32, i32*, i64*) unnamed_addr #2

declare void @_ZNK2rx10SurfaceEGL14getNextFrameIdEPm(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, i64*) unnamed_addr #2

declare void @_ZNK2rx10SurfaceEGL22getSupportedTimestampsEv(%"class.angle::BitSetT.4"* sret, %"class.rx::SurfaceEGL"*) unnamed_addr #2

declare void @_ZNK2rx10SurfaceEGL18getFrameTimestampsEmiPKiPl(%"class.egl::Error"* sret, %"class.rx::SurfaceEGL"*, i64, i32, i32*, i64*) unnamed_addr #2

declare void @_ZN2rx11SurfaceImpl12getBufferAgeEPKN2gl7ContextEPi(%"class.egl::Error"* sret, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*) unnamed_addr #2

declare zeroext i1 @_ZNK2rx9SurfaceGL23hasEmulatedAlphaChannelEv(%"class.rx::SurfaceGL"*) unnamed_addr #2

declare zeroext i1 @_ZNK2rx10SurfaceEGL10isExternalEv(%"class.rx::SurfaceEGL"*) unnamed_addr #2

declare void @_ZN2rx10native_egl16TrimAttributeMapERKN3egl12AttributeMapEPKim(%"class.std::__1::vector.17"* sret, %"class.egl::AttributeMap"* dereferenceable(24), i32*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
