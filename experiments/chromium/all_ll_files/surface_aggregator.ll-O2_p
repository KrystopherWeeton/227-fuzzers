; ModuleID = '../../components/viz/service/display/surface_aggregator.cc'
source_filename = "../../components/viz/service/display/surface_aggregator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.absl::optional_internal::empty_struct" = type { i8 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%union.anon.423 = type { float }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.414" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.404", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.404" = type { %"class.base::internal::flat_tree.405" }
%"class.base::internal::flat_tree.405" = type { %"class.std::__1::vector.406" }
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"struct.std::__1::pair.408"*, %"struct.std::__1::pair.408"*, %"class.std::__1::__compressed_pair.409" }
%"struct.std::__1::pair.408" = type opaque
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::pair.408"* }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.243" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.gfx::Rect"* }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"*, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.viz::AggregatedRenderPass"* }
%"class.viz::AggregatedRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", i8, i8, [6 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.253", i8, i8, i8, i8, %"class.std::__1::vector.258", %"class.viz::QuadList", %"class.cc::ListContainer.285" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.248" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.241", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.235, i32, %"class.absl::optional.236", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.235 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.236" = type { %"class.absl::optional_internal::optional_data.237" }
%"class.absl::optional_internal::optional_data.237" = type { %"class.absl::optional_internal::optional_data_base.238" }
%"class.absl::optional_internal::optional_data_base.238" = type { %"class.absl::optional_internal::optional_data_dtor_base.239" }
%"class.absl::optional_internal::optional_data_dtor_base.239" = type { i8, %union.anon.240 }
%union.anon.240 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.253" = type { %"class.absl::optional_internal::optional_data.254" }
%"class.absl::optional_internal::optional_data.254" = type { %"class.absl::optional_internal::optional_data_base.255" }
%"class.absl::optional_internal::optional_data_base.255" = type { %"class.absl::optional_internal::optional_data_dtor_base.256" }
%"class.absl::optional_internal::optional_data_dtor_base.256" = type { i8, %union.anon.257 }
%union.anon.257 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.263", %"class.absl::optional.268", %"class.absl::optional.268" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.118", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.118" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.263" = type { %"class.absl::optional_internal::optional_data.264" }
%"class.absl::optional_internal::optional_data.264" = type { %"class.absl::optional_internal::optional_data_base.265" }
%"class.absl::optional_internal::optional_data_base.265" = type { %"class.absl::optional_internal::optional_data_dtor_base.266" }
%"class.absl::optional_internal::optional_data_dtor_base.266" = type { i8, %union.anon.267 }
%union.anon.267 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::unique_ptr.260"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.279" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.285" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::unique_ptr.230"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.viz::SurfaceAggregator" = type { %"class.viz::SurfaceManager"*, %"class.viz::DisplayResourceProvider"*, i8, i8, i8, i8, %"class.gfx::DisplayColorSpaces", i32, %"class.util::IdType", %"class.util::IdType", %"class.base::flat_map.193", %"class.base::internal::flat_tree.28", %"class.viz::SurfaceId", %"class.gfx::Transform", %"class.absl::optional.203", %"class.base::flat_map.208", %"class.base::flat_map.208", %"class.base::flat_map.218", %"class.base::flat_map.218", %"class.base::internal::flat_tree.28", %"class.std::__1::vector.228"*, %"class.base::TimeTicks", %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294", %"class.base::flat_map.302", %"class.gfx::Rect", %"class.std::__1::vector.241"*, i8, i8, i8, i8, %"class.base::flat_map.312", %"class.std::__1::unique_ptr.334", i64, %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28", i8, i8, %"class.std::__1::unique_ptr.340", i8, i8, i8, %"class.viz::RenderPassIdRemapper", %"class.base::WeakPtrFactory.356" }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.188" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.188" = type { %"class.absl::optional_internal::optional_data.189" }
%"class.absl::optional_internal::optional_data.189" = type { %"class.absl::optional_internal::optional_data_base.190" }
%"class.absl::optional_internal::optional_data_base.190" = type { %"class.absl::optional_internal::optional_data_dtor_base.191" }
%"class.absl::optional_internal::optional_data_dtor_base.191" = type { i8, %union.anon.192 }
%union.anon.192 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.base::flat_map.193" = type { %"class.base::internal::flat_tree.194" }
%"class.base::internal::flat_tree.194" = type { %"class.std::__1::vector.195" }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::pair.197" = type <{ %"class.viz::SurfaceId", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::pair.197"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.absl::optional.203" = type { %"class.absl::optional_internal::optional_data.204" }
%"class.absl::optional_internal::optional_data.204" = type { %"class.absl::optional_internal::optional_data_base.205" }
%"class.absl::optional_internal::optional_data_base.205" = type { %"class.absl::optional_internal::optional_data_dtor_base.206" }
%"class.absl::optional_internal::optional_data_dtor_base.206" = type { i8, %union.anon.207 }
%union.anon.207 = type { %"struct.viz::SurfaceAggregator::AggregateStatistics" }
%"struct.viz::SurfaceAggregator::AggregateStatistics" = type { i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::flat_map.208" = type { %"class.base::internal::flat_tree.209" }
%"class.base::internal::flat_tree.209" = type { %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"*, %"class.std::__1::__compressed_pair.213" }
%"struct.std::__1::pair.212" = type { %"class.viz::SurfaceId", i64 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::pair.212"* }
%"class.base::flat_map.218" = type { %"class.base::internal::flat_tree.219" }
%"class.base::internal::flat_tree.219" = type { %"class.std::__1::vector.220" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"*, %"class.std::__1::__compressed_pair.223" }
%"struct.std::__1::pair.222" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::pair.222"* }
%"class.base::internal::flat_tree.294" = type { %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.util::IdType"* }
%"class.base::flat_map.302" = type { %"class.base::internal::flat_tree.303" }
%"class.base::internal::flat_tree.303" = type { %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.307" }
%"struct.std::__1::pair.306" = type { %"class.util::IdType", %"class.base::internal::flat_tree.294" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::pair.306"* }
%"class.base::flat_map.312" = type { %"class.base::internal::flat_tree.313" }
%"class.base::internal::flat_tree.313" = type { %"class.std::__1::vector.314" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"*, %"class.std::__1::__compressed_pair.329" }
%"struct.std::__1::pair.316" = type { %"class.viz::FrameSinkId", %"class.std::__1::vector.317" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.324" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.319", %"class.viz::SurfaceId" }
%"class.absl::optional.319" = type { %"class.absl::optional_internal::optional_data.320" }
%"class.absl::optional_internal::optional_data.320" = type { %"class.absl::optional_internal::optional_data_base.321" }
%"class.absl::optional_internal::optional_data_base.321" = type { %"class.absl::optional_internal::optional_data_dtor_base.322" }
%"class.absl::optional_internal::optional_data_dtor_base.322" = type { i8, %union.anon.323 }
%union.anon.323 = type { %"class.viz::SurfaceId" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::pair.316"* }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.viz::SurfaceAggregator::FrameAnnotator"* }
%"class.viz::SurfaceAggregator::FrameAnnotator" = type { i32 (...)** }
%"class.base::internal::flat_tree.28" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.viz::SurfaceId"* }
%"class.viz::RenderPassIdRemapper" = type { %"class.base::flat_map.346", %"class.util::IdType<viz::AggregatedRenderPass, unsigned long, 0, 1>::Generator" }
%"class.base::flat_map.346" = type { %"class.base::internal::flat_tree.347" }
%"class.base::internal::flat_tree.347" = type { %"class.std::__1::vector.348" }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"struct.std::__1::pair.350"*, %"struct.std::__1::pair.350"*, %"class.std::__1::__compressed_pair.351" }
%"struct.std::__1::pair.350" = type opaque
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::pair.350"* }
%"class.util::IdType<viz::AggregatedRenderPass, unsigned long, 0, 1>::Generator" = type { i64 }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.111", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.112" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i8 }
%"class.viz::SurfaceManager" = type { %"class.viz::SurfaceManagerDelegate"*, %"class.absl::optional", %"class.base::flat_map", %"class.base::flat_map.1", %"class.base::flat_map.11", %"class.base::ObserverList", %"class.base::ThreadChecker", %"class.base::internal::flat_tree.28", %"class.viz::SurfaceId", %"class.base::internal::flat_tree.28", %"class.base::TickClock"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.54", %"class.std::__1::unordered_map.78", %"class.absl::optional.104", i8, %"class.base::WeakPtrFactory.123" }
%"class.viz::SurfaceManagerDelegate" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.1" = type { %"class.base::internal::flat_tree.2" }
%"class.base::internal::flat_tree.2" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.std::__1::pair.5"*, %"struct.std::__1::pair.5"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair.5"* }
%"class.base::flat_map.11" = type { %"class.base::internal::flat_tree.12" }
%"class.base::internal::flat_tree.12" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.std::__1::pair.15"*, %"struct.std::__1::pair.15"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair.15" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair.15"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.21", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.23" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::TickClock" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37", %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { float }
%"class.std::__1::unordered_map.54" = type { %"class.std::__1::__hash_table.55" }
%"class.std::__1::__hash_table.55" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.59"** }
%"struct.std::__1::__hash_node_base.59" = type { %"struct.std::__1::__hash_node_base.59"* }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__bucket_list_deallocator.61" }
%"class.std::__1::__bucket_list_deallocator.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.59" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.78" = type { %"class.std::__1::__hash_table.79" }
%"class.std::__1::__hash_table.79" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.98", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base.83"** }
%"struct.std::__1::__hash_node_base.83" = type { %"struct.std::__1::__hash_node_base.83"* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__bucket_list_deallocator.85" }
%"class.std::__1::__bucket_list_deallocator.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base.83" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { %"class.base::RepeatingTimer" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.123" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::DisplayResourceProvider" = type <{ %"class.base::trace_event::MemoryDumpProvider", i32, [4 x i8], %"class.std::__1::unordered_map.124", %"class.std::__1::unordered_map.150", %"class.base::flat_map.176", %class.scoped_refptr.186, i32, %"class.viz::ResourceIdGenerator", i32, i32, i8, [3 x i8] }>
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unordered_map.124" = type { %"class.std::__1::__hash_table.125" }
%"class.std::__1::__hash_table.125" = type <{ %"class.std::__1::unique_ptr.126", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.144", [4 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base.129"** }
%"struct.std::__1::__hash_node_base.129" = type { %"struct.std::__1::__hash_node_base.129"* }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__bucket_list_deallocator.131" }
%"class.std::__1::__bucket_list_deallocator.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.129" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.150" = type { %"class.std::__1::__hash_table.151" }
%"class.std::__1::__hash_table.151" = type <{ %"class.std::__1::unique_ptr.152", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.170", [4 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154", %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base.155"** }
%"struct.std::__1::__hash_node_base.155" = type { %"struct.std::__1::__hash_node_base.155"* }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::__bucket_list_deallocator.157" }
%"class.std::__1::__bucket_list_deallocator.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base.155" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::flat_map.176" = type { %"class.base::internal::flat_tree.177" }
%"class.base::internal::flat_tree.177" = type { %"class.std::__1::vector.178" }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"struct.std::__1::pair.180"*, %"struct.std::__1::pair.180"*, %"class.std::__1::__compressed_pair.181" }
%"struct.std::__1::pair.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::pair.180"* }
%class.scoped_refptr.186 = type { %"class.viz::ResourceFence"* }
%"class.viz::ResourceFence" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.187", [4 x i8] }>
%"class.base::RefCountedThreadSafe.187" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.base::flat_map.372" = type { %"class.base::internal::flat_tree.373" }
%"class.base::internal::flat_tree.373" = type { %"class.std::__1::vector.374" }
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*, %"class.std::__1::__compressed_pair.377" }
%"struct.std::__1::pair.376" = type { %"class.util::IdType.362", %"struct.viz::SurfaceAggregator::RenderPassMapEntry" }
%"class.util::IdType.362" = type { %"class.base::StrongAlias.363" }
%"class.base::StrongAlias.363" = type { i64 }
%"struct.viz::SurfaceAggregator::RenderPassMapEntry" = type <{ %"class.viz::CompositorRenderPass"*, i8, [7 x i8] }>
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType.362", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::pair.376"* }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"*, %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.viz::CompositorRenderPass"* }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::unique_ptr.359"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.viz::Surface" = type { %"class.viz::SurfaceInfo", %"class.viz::SurfaceId", %"class.viz::SurfaceManager"*, %"class.base::WeakPtr", %"class.std::__1::unique_ptr.386", %"class.absl::optional.397", %"class.absl::optional.397", %"class.absl::optional.468", i8, i8, %"class.base::internal::flat_tree.28", %"class.std::__1::vector.29", %"class.base::internal::flat_tree.473", %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.473", i8, i8, %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceSavedFrameStorage", i8, %"class.base::WeakPtrFactory.526" }
%"class.viz::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.385 }
%class.scoped_refptr.385 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.viz::SurfaceDependencyDeadline"* }
%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional.389" }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %"class.base::TimeTicks" }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, [7 x i8], %union.anon.401 }
%union.anon.401 = type { %"struct.viz::Surface::FrameData" }
%"struct.viz::Surface::FrameData" = type <{ %"class.viz::CompositorFrame", i64, i8, i8, i8, [5 x i8] }>
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.443", %"class.std::__1::vector.357" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector.402", %"class.std::__1::vector.317", %"class.std::__1::vector.29", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.419", %"class.absl::optional.424", i32, %"class.std::__1::unique_ptr.340", %"class.std::__1::vector.429" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.absl::optional.419" = type { %"class.absl::optional_internal::optional_data.420" }
%"class.absl::optional_internal::optional_data.420" = type { %"class.absl::optional_internal::optional_data_base.421" }
%"class.absl::optional_internal::optional_data_base.421" = type { %"class.absl::optional_internal::optional_data_dtor_base.422" }
%"class.absl::optional_internal::optional_data_dtor_base.422" = type { i8, %union.anon.423 }
%"class.absl::optional.424" = type { %"class.absl::optional_internal::optional_data.425" }
%"class.absl::optional_internal::optional_data.425" = type { %"class.absl::optional_internal::optional_data_base.426" }
%"class.absl::optional_internal::optional_data_base.426" = type { %"class.absl::optional_internal::optional_data_dtor_base.427" }
%"class.absl::optional_internal::optional_data_dtor_base.427" = type { i8, %union.anon.428 }
%union.anon.428 = type { %"class.base::TimeDelta" }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.438" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.431" }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { %"class.util::IdType.362"*, %"class.util::IdType.362"*, %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.util::IdType.362"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.459" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.445", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.449", i8, i32, i8, [7 x i8], %"class.absl::optional.454" }
%"class.util::IdType.445" = type { %"class.base::StrongAlias.446" }
%"class.base::StrongAlias.446" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.447", i64 }
%"class.util::IdType.447" = type { %"class.base::StrongAlias.448" }
%"class.base::StrongAlias.448" = type { i64 }
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, %union.anon.453 }
%union.anon.453 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.454" = type { %"class.absl::optional_internal::optional_data.455" }
%"class.absl::optional_internal::optional_data.455" = type { %"class.absl::optional_internal::optional_data_base.456" }
%"class.absl::optional_internal::optional_data_base.456" = type { %"class.absl::optional_internal::optional_data_dtor_base.457" }
%"class.absl::optional_internal::optional_data_dtor_base.457" = type { i8, [7 x i8], %union.anon.458 }
%union.anon.458 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.viz::TransferableResource"* }
%"class.absl::optional.468" = type { %"class.absl::optional_internal::optional_data.469" }
%"class.absl::optional_internal::optional_data.469" = type { %"class.absl::optional_internal::optional_data_base.470" }
%"class.absl::optional_internal::optional_data_base.470" = type { %"class.absl::optional_internal::optional_data_dtor_base.471" }
%"class.absl::optional_internal::optional_data_dtor_base.471" = type { i8, %union.anon.472 }
%union.anon.472 = type { %"class.viz::CompositorFrame" }
%"class.base::internal::flat_tree.473" = type { %"class.std::__1::vector.474" }
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"**, %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.viz::SurfaceAllocationGroup"** }
%"class.viz::SurfaceAllocationGroup" = type { %"class.viz::FrameSinkId", %"class.base::UnguessableToken", %"class.std::__1::vector.476", %"class.base::flat_map.483", %"class.base::internal::flat_tree.493", %"class.viz::SurfaceManager"*, %"class.viz::SurfaceId", %"class.viz::SurfaceId" }
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"class.viz::Surface"**, %"class.viz::Surface"**, %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.viz::Surface"** }
%"class.base::flat_map.483" = type { %"class.base::internal::flat_tree.484" }
%"class.base::internal::flat_tree.484" = type { %"class.std::__1::vector.485" }
%"class.std::__1::vector.485" = type { %"class.std::__1::__vector_base.486" }
%"class.std::__1::__vector_base.486" = type { %"struct.std::__1::pair.487"*, %"struct.std::__1::pair.487"*, %"class.std::__1::__compressed_pair.488" }
%"struct.std::__1::pair.487" = type opaque
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::pair.487"* }
%"class.base::internal::flat_tree.493" = type { %"class.std::__1::vector.476" }
%"class.viz::SurfaceSavedFrameStorage" = type { %"class.viz::Surface"*, %"class.base::internal::CancelableCallbackImpl", %"class.std::__1::unique_ptr.501" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.499", %"class.base::WeakPtrFactory.500" }
%"class.base::OnceCallback.499" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.500" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.viz::SurfaceSavedFrame"* }
%"class.viz::SurfaceSavedFrame" = type { %"class.viz::CompositorFrameTransitionDirective", %"class.base::OnceCallback.504", %"class.absl::optional.505", i64, i64, %"class.base::WeakPtrFactory.522" }
%"class.base::OnceCallback.504" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.505" = type { %"class.absl::optional_internal::optional_data.506" }
%"class.absl::optional_internal::optional_data.506" = type { %"class.absl::optional_internal::optional_data_base.507" }
%"class.absl::optional_internal::optional_data_base.507" = type { %"class.absl::optional_internal::optional_data_dtor_base.508" }
%"class.absl::optional_internal::optional_data_dtor_base.508" = type { i8, %union.anon.509 }
%union.anon.509 = type { %"struct.viz::SurfaceSavedFrame::FrameResult" }
%"struct.viz::SurfaceSavedFrame::FrameResult" = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"class.std::__1::vector.514" }
%"struct.viz::SurfaceSavedFrame::OutputCopyResult" = type { %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %class.SkBitmap, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData", i8, %"class.base::OnceCallback.513" }
%class.SkBitmap = type { %class.sk_sp.510, %class.SkPixmap, %class.sk_sp.512 }
%class.sk_sp.510 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.511, i32, i32 }
%class.sk_sp.511 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.112" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.512 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.viz::SurfaceSavedFrame::RenderPassDrawData" = type { %"class.gfx::Rect", %"class.gfx::Transform", float }
%"class.base::OnceCallback.513" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.514" = type { %"class.std::__1::__vector_base.515" }
%"class.std::__1::__vector_base.515" = type { %"class.absl::optional.516"*, %"class.absl::optional.516"*, %"class.std::__1::__compressed_pair.517" }
%"class.absl::optional.516" = type opaque
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.absl::optional.516"* }
%"class.base::WeakPtrFactory.522" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.528" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.529" = type { %"class.std::__1::__vector_base.530" }
%"class.std::__1::__vector_base.530" = type { %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"*, %"class.std::__1::__compressed_pair.531" }
%"struct.viz::ReturnedResource" = type <{ %"class.util::IdType.445", [4 x i8], %"struct.gpu::SyncToken", %"struct.gfx::GpuFenceHandle", i32, i8, [3 x i8] }>
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.viz::ReturnedResource"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.viz::SurfaceClient" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.268", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.537", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.537" = type { %"class.absl::optional_internal::optional_data.538" }
%"class.absl::optional_internal::optional_data.538" = type { %"class.absl::optional_internal::optional_data_base.539" }
%"class.absl::optional_internal::optional_data_base.539" = type { %"class.absl::optional_internal::optional_data_dtor_base.540" }
%"class.absl::optional_internal::optional_data_dtor_base.540" = type { i8, %union.anon.541 }
%union.anon.541 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.445"] }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.cc::ListContainerHelper::ConstIterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"class.cc::ListContainerHelper::ConstReverseIterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator" = type { %"class.cc::ListContainerHelper::ConstReverseIterator" }
%"class.cc::ListContainer<viz::DrawQuad>::ConstIterator" = type { %"class.cc::ListContainerHelper::ConstIterator" }
%"class.viz::SurfaceDrawQuad" = type <{ %"class.viz::DrawQuad.base", [4 x i8], %"class.viz::SurfaceRange", i32, i8, i8, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"struct.viz::SurfaceAggregator::MaskFilterInfoExt" = type <{ %"class.gfx::MaskFilterInfo", i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.585 }
%union.anon.585 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.viz::AggregatedRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType" }
%"class.viz::RenderPassDrawQuadInternal.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::PointF", %"class.gfx::RectF", float, i8, i8 }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.638" }
%"struct.std::__1::pair.638" = type { %"class.util::IdType.362", %"class.std::__1::unique_ptr.260" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.662", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.664", i64, i64 }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.675" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator" = type { %"class.cc::ListContainerHelper::ConstIterator" }
%"class.cc::ListContainerHelper::ReverseIterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator" = type { %"class.cc::ListContainerHelper::ReverseIterator" }
%"class.viz::CompositorRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType.362" }
%"class.viz::TextureDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x float], i8, i32, %"struct.viz::TextureDrawQuad::OverlayResources" }
%"struct.viz::TextureDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"struct.std::__1::pair.589" = type { %"class.util::IdType.445", %"class.util::IdType.445" }
%"class.cc::ListContainerHelper::Iterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"class.cc::ListContainer<viz::SharedQuadState>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"struct.viz::SurfaceAggregator::PrewalkResult" = type <{ %"class.base::internal::flat_tree.28", i8, i8, i8, [5 x i8] }>
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare" = type { i8 }
%"class.std::__1::vector.592" = type { %"class.std::__1::__vector_base.593" }
%"class.std::__1::__vector_base.593" = type { %"class.util::IdType.445"*, %"class.util::IdType.445"*, %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.util::IdType.445"* }
%"class.cc::ListContainer<viz::DrawQuad>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.base::internal::flat_tree.599" = type { %"class.std::__1::vector.592" }
%"class.viz::AggregatedFrame" = type { %"class.absl::optional.419", %"class.std::__1::vector.402", i8, i8, i8, i8, %"class.std::__1::vector.241", %"class.std::__1::unique_ptr.340", %"class.std::__1::vector.228" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.608", [4 x i8] }>
%"struct.std::__1::atomic.608" = type { %"struct.std::__1::__atomic_base.609" }
%"struct.std::__1::__atomic_base.609" = type { %"struct.std::__1::__atomic_base.610" }
%"struct.std::__1::__atomic_base.610" = type { %"struct.std::__1::__cxx_atomic_impl.611" }
%"struct.std::__1::__cxx_atomic_impl.611" = type { %"struct.std::__1::__cxx_atomic_base_impl.612" }
%"struct.std::__1::__cxx_atomic_base_impl.612" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare" = type { i8 }
%"struct.std::__1::__split_buffer.701" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.199", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::allocator.201"* }
%"class.std::__1::allocator.201" = type { i8 }
%"struct.std::__1::__split_buffer.717" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.std::__1::allocator.34"* }
%"class.std::__1::allocator.34" = type { i8 }
%"struct.std::__1::__split_buffer.722" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.298", %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.std::__1::allocator.300"* }
%"class.std::__1::allocator.300" = type { i8 }
%"struct.std::__1::__split_buffer.737" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.std::__1::allocator.310"* }
%"class.std::__1::allocator.310" = type { i8 }
%"struct.std::__1::__split_buffer.757" = type { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"*, %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.214", %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.std::__1::allocator.216"* }
%"class.std::__1::allocator.216" = type { i8 }
%"struct.std::__1::__split_buffer.765" = type { %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"*, %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.224", %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.std::__1::allocator.226"* }
%"class.std::__1::allocator.226" = type { i8 }
%"struct.std::__1::__split_buffer.772" = type { %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"*, %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.330", %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.std::__1::allocator.332"* }
%"class.std::__1::allocator.332" = type { i8 }

$_ZN4base8flat_mapIN3viz9SurfaceIdEiNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_iEENS3_9allocatorIS8_EEEEEixERKS2_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRA19_KcRlEEN4base11trace_event16TraceEventHandleEcPKhPS1_SA_yjySA_OT_SA_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_ = comdat any

$_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorINS1_12SurfaceRangeENS3_9allocatorIS5_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S8_EENS6_ISC_EEEEEixERKS2_ = comdat any

$_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_NS4_17SurfaceAggregator18RenderPassMapEntryEEENS8_9allocatorISF_EEEEE15sort_and_uniqueENS8_11__wrap_iterIPSF_EESM_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE5eraseENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS4_16ReturnedResourceENS7_9allocatorIS9_EEEEEJS6_EEEFvSC_EE3RunEPNS0_13BindStateBaseEOSC_ = comdat any

$_ZN4base8internal13FunctorTraitsIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEvE6InvokeIRKSD_JRKS5_SB_EEEvOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE = comdat any

$_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS0_IS6_NS_9allocatorIS6_EEEEEEEENSD_ISH_EEE7emplaceIJRKS6_SG_EEENS_11__wrap_iterIPSH_EENSN_IPKSH_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEEEEERNSE_ISI_EEE12emplace_backIJRKS6_SH_EEEvDpOT_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEENS_9allocatorIS5_EEE7emplaceIJRKS3_S4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEERNS_9allocatorIS5_EEE12emplace_backIJRKS3_S4_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_INS2_12SurfaceRangeENS_9allocatorIS4_EEEEEENS5_IS8_EEE7emplaceIJRKS3_S7_EEENS_11__wrap_iterIPS8_EENSE_IPKS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorINS2_12SurfaceRangeENS_9allocatorIS5_EEEEEERNS6_IS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_ = comdat any

@.ref.tmp = private constant { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef }, align 4
@_ZZN3viz17SurfaceAggregator18EmitSurfaceContentEPNS_7SurfaceEfPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS6_4RectEEEPNS_20AggregatedRenderPassEbPSC_PbRKNS0_17MaskFilterInfoExtEE28trace_event_unique_atomic557 = internal global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"viz,benchmark\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Graphics.Pipeline\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"SurfaceAggregation\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"display_trace\00", align 1
@.ref.tmp.5 = private constant { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef }, align 4
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.6 = private unnamed_addr constant [50 x i8] c"SurfaceAggregator::EmitDefaultBackgroundColorQuad\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"surface_range\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../components/viz/service/display/surface_aggregator.cc\00", align 1
@.str.9 = private unnamed_addr constant [63 x i8] c"root_render_pass->transform_to_root_target == gfx::Transform()\00", align 1
@.ref.tmp.10 = private constant { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef }, align 4
@.ref.tmp.11 = private constant { i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } } { i8 0, [3 x i8] undef, { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } undef }, align 4
@_ZZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectElE29trace_event_unique_atomic1817 = internal global i64 0, align 8
@__const._ZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectEl.frame = private unnamed_addr constant { { { { { i8, [3 x i8], %union.anon.423 } } } }, %"class.std::__1::vector.402", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.241", %"class.std::__1::unique_ptr.340", %"class.std::__1::vector.228" } { { { { { i8, [3 x i8], %union.anon.423 } } } } { { { { i8, [3 x i8], %union.anon.423 } } } { { { i8, [3 x i8], %union.anon.423 } } { { i8, [3 x i8], %union.anon.423 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.423 { float 0xFFFFFFFFE0000000 } } } } }, %"class.std::__1::vector.402" { %"class.std::__1::__vector_base.403" { %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*), %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*), %"class.std::__1::__compressed_pair.414" { %"struct.std::__1::__compressed_pair_elem.415" { %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*) } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.241" { %"class.std::__1::__vector_base.242" { %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*), %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*), %"class.std::__1::__compressed_pair.243" { %"struct.std::__1::__compressed_pair_elem.244" { %"class.gfx::Rect"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Rect"*) } } } }, %"class.std::__1::unique_ptr.340" { %"class.std::__1::__compressed_pair.341" { %"struct.std::__1::__compressed_pair_elem.342" { %"class.gfx::DelegatedInkMetadata"* inttoptr (i64 -6148914691236517206 to %"class.gfx::DelegatedInkMetadata"*) } } }, %"class.std::__1::vector.228" { %"class.std::__1::__vector_base.229" { %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*), %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*), %"class.std::__1::__compressed_pair.289" { %"struct.std::__1::__compressed_pair_elem.290" { %"class.std::__1::unique_ptr.230"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.230"*) } } } } }, align 8
@.str.12 = private unnamed_addr constant [29 x i8] c"SurfaceAggregator::Aggregate\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"Compositing.SurfaceAggregator.PrewalkedSurfaceCount\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"Compositing.SurfaceAggregator.CopiedSurfaceCount\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"Compositing.SurfaceAggregator.DeclareResourcesCount\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"Compositing.SurfaceAggregator.PrewalkUs\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"Compositing.SurfaceAggregator.CopyUs\00", align 1
@.str.18 = private unnamed_addr constant [49 x i8] c"Compositing.SurfaceAggregator.DeclareResourcesUs\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"SurfaceAggregator::TransformAndStoreDelegatedInkMetadata\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"original metadata\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"transformed metadata\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"SurfaceAggregator::HandleDeJelly\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@.str.26 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3viz17SurfaceAggregatorC1EPNS_14SurfaceManagerEPNS_23DisplayResourceProviderEbb = hidden unnamed_addr alias void (%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceManager"*, %"class.viz::DisplayResourceProvider"*, i1, i1), void (%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceManager"*, %"class.viz::DisplayResourceProvider"*, i1, i1)* @_ZN3viz17SurfaceAggregatorC2EPNS_14SurfaceManagerEPNS_23DisplayResourceProviderEbb
@_ZN3viz17SurfaceAggregatorD1Ev = hidden unnamed_addr alias void (%"class.viz::SurfaceAggregator"*), void (%"class.viz::SurfaceAggregator"*)* @_ZN3viz17SurfaceAggregatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregatorC2EPNS_14SurfaceManagerEPNS_23DisplayResourceProviderEbb(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceManager"*, %"class.viz::DisplayResourceProvider"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  store %"class.viz::SurfaceManager"* %1, %"class.viz::SurfaceManager"** %8, align 8
  %9 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  store %"class.viz::DisplayResourceProvider"* %2, %"class.viz::DisplayResourceProvider"** %9, align 8
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 8
  %11 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 3
  store i8 %7, i8* %11, align 1
  %12 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 4
  %13 = tail call zeroext i1 @_ZN3viz14DeJellyEnabledEv() #16
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %12, align 2
  %15 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 5
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 6
  tail call void @_ZN3gfx18DisplayColorSpacesC1Ev(%"class.gfx::DisplayColorSpaces"* %16) #16
  %17 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 13
  %20 = bitcast %"class.gfx::Transform"* %19 to i8*
  %21 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 96, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %22 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 13, i32 0, i32 1
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 28
  %26 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32
  %27 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 34
  %28 = bitcast %union.anon.207* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 288, i1 false)
  %29 = bitcast i8* %25 to i32*
  store i32 0, i32* %29, align 8
  %30 = bitcast %"class.base::flat_map.312"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  store i64 -1, i64* %27, align 8
  %31 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 35
  %32 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 39
  %33 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %34 = bitcast %"class.base::internal::flat_tree.28"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 50, i1 false)
  %35 = bitcast %"class.std::__1::unique_ptr.340"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 11, i1 false)
  tail call void @_ZN3viz20RenderPassIdRemapperC1Ev(%"class.viz::RenderPassIdRemapper"* %33) #16
  %36 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 44, i32 0
  %37 = ptrtoint %"class.viz::SurfaceAggregator"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %36, i64 %37) #16
  ret void
}

declare zeroext i1 @_ZN3viz14DeJellyEnabledEv() local_unnamed_addr #1

declare void @_ZN3gfx18DisplayColorSpacesC1Ev(%"class.gfx::DisplayColorSpaces"*) unnamed_addr #1

declare void @_ZN3viz20RenderPassIdRemapperC1Ev(%"class.viz::RenderPassIdRemapper"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregatorD2Ev(%"class.viz::SurfaceAggregator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0
  %3 = bitcast %"class.base::internal::flat_tree.209"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.212"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18, i32 0
  %8 = bitcast %"class.base::internal::flat_tree.219"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.222"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %12, align 8
  %14 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %15 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair.212"* %13, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %1, %25
  %18 = phi %"struct.std::__1::pair.212"* [ %26, %25 ], [ %13, %1 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %18, i64 0, i32 0
  %20 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %2, %"class.viz::SurfaceId"* dereferenceable(32) %19) #16
  %21 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %20, 0
  %22 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %20, 1
  %23 = icmp eq %"struct.std::__1::pair.212"* %22, %21
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  tail call void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %19) #16
  br label %25

25:                                               ; preds = %24, %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %18, i64 1
  %27 = icmp eq %"struct.std::__1::pair.212"* %26, %15
  br i1 %27, label %28, label %17

28:                                               ; preds = %25, %1
  %29 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 44, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %29) #16
  %30 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  tail call void @_ZN3viz20RenderPassIdRemapperD1Ev(%"class.viz::RenderPassIdRemapper"* %30) #16
  %31 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 39, i32 0, i32 0, i32 0
  %32 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %31, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %31, align 8
  %33 = icmp eq %"class.gfx::DelegatedInkMetadata"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.gfx::DelegatedInkMetadata"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %28, %34
  %37 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36, i32 0, i32 0, i32 0
  %38 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %37, align 8
  %39 = icmp eq %"class.viz::SurfaceId"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = ptrtoint %"class.viz::SurfaceId"* %38 to i64
  %42 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %43 = bitcast %"class.viz::SurfaceId"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.viz::SurfaceId"* %38 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %36, %40
  %46 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %47 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %46, align 8
  %48 = icmp eq %"class.viz::SurfaceId"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = ptrtoint %"class.viz::SurfaceId"* %47 to i64
  %51 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 35, i32 0, i32 0, i32 1
  %52 = bitcast %"class.viz::SurfaceId"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.viz::SurfaceId"* %47 to i8*
  tail call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %56 = load %"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::SurfaceAggregator::FrameAnnotator"** %55, align 8
  store %"class.viz::SurfaceAggregator::FrameAnnotator"* null, %"class.viz::SurfaceAggregator::FrameAnnotator"** %55, align 8
  %57 = icmp eq %"class.viz::SurfaceAggregator::FrameAnnotator"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.viz::SurfaceAggregator::FrameAnnotator"* %56 to void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)***
  %60 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)**, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %60, i64 1
  %62 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %61, align 8
  tail call void %62(%"class.viz::SurfaceAggregator::FrameAnnotator"* nonnull %56) #16
  br label %63

63:                                               ; preds = %54, %58
  %64 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32, i32 0
  %65 = getelementptr inbounds %"class.base::internal::flat_tree.313", %"class.base::internal::flat_tree.313"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %65, align 8
  %67 = icmp eq %"struct.std::__1::pair.316"* %66, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %63
  %69 = bitcast %"struct.std::__1::pair.316"* %66 to i8*
  %70 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1
  %71 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %70, align 8
  %72 = icmp eq %"struct.std::__1::pair.316"* %71, %66
  br i1 %72, label %89, label %73

73:                                               ; preds = %68, %84
  %74 = phi %"struct.std::__1::pair.316"* [ %75, %84 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %74, i64 -1, i32 1, i32 0, i32 0
  %77 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %76, align 8
  %78 = icmp eq %"class.viz::SurfaceRange"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = ptrtoint %"class.viz::SurfaceRange"* %77 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %74, i64 -1, i32 1, i32 0, i32 1
  %82 = bitcast %"class.viz::SurfaceRange"** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %79, %73
  %85 = icmp eq %"struct.std::__1::pair.316"* %75, %66
  br i1 %85, label %86, label %73

86:                                               ; preds = %84
  %87 = bitcast %"class.base::internal::flat_tree.313"* %64 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %68
  %90 = phi i8* [ %88, %86 ], [ %69, %68 ]
  store %"struct.std::__1::pair.316"* %66, %"struct.std::__1::pair.316"** %70, align 8
  tail call void @_ZdlPv(i8* %90) #17
  br label %91

91:                                               ; preds = %63, %89
  %92 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0
  %93 = getelementptr inbounds %"class.base::internal::flat_tree.303", %"class.base::internal::flat_tree.303"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %93, align 8
  %95 = icmp eq %"struct.std::__1::pair.306"* %94, null
  br i1 %95, label %119, label %96

96:                                               ; preds = %91
  %97 = bitcast %"struct.std::__1::pair.306"* %94 to i8*
  %98 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %99 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %98, align 8
  %100 = icmp eq %"struct.std::__1::pair.306"* %99, %94
  br i1 %100, label %117, label %101

101:                                              ; preds = %96, %112
  %102 = phi %"struct.std::__1::pair.306"* [ %103, %112 ], [ %99, %96 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %102, i64 -1
  %104 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %102, i64 -1, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.util::IdType"*, %"class.util::IdType"** %104, align 8
  %106 = icmp eq %"class.util::IdType"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %101
  %108 = ptrtoint %"class.util::IdType"* %105 to i64
  %109 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %102, i64 -1, i32 1, i32 0, i32 0, i32 1
  %110 = bitcast %"class.util::IdType"** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = bitcast %"class.util::IdType"* %105 to i8*
  tail call void @_ZdlPv(i8* %111) #17
  br label %112

112:                                              ; preds = %107, %101
  %113 = icmp eq %"struct.std::__1::pair.306"* %103, %94
  br i1 %113, label %114, label %101

114:                                              ; preds = %112
  %115 = bitcast %"class.base::internal::flat_tree.303"* %92 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %96
  %118 = phi i8* [ %116, %114 ], [ %97, %96 ]
  store %"struct.std::__1::pair.306"* %94, %"struct.std::__1::pair.306"** %98, align 8
  tail call void @_ZdlPv(i8* %118) #17
  br label %119

119:                                              ; preds = %91, %117
  %120 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %121 = load %"class.util::IdType"*, %"class.util::IdType"** %120, align 8
  %122 = icmp eq %"class.util::IdType"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = ptrtoint %"class.util::IdType"* %121 to i64
  %125 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %126 = bitcast %"class.util::IdType"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast %"class.util::IdType"* %121 to i8*
  tail call void @_ZdlPv(i8* %127) #17
  br label %128

128:                                              ; preds = %119, %123
  %129 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %130 = load %"class.util::IdType"*, %"class.util::IdType"** %129, align 8
  %131 = icmp eq %"class.util::IdType"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = ptrtoint %"class.util::IdType"* %130 to i64
  %134 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %135 = bitcast %"class.util::IdType"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.util::IdType"* %130 to i8*
  tail call void @_ZdlPv(i8* %136) #17
  br label %137

137:                                              ; preds = %128, %132
  %138 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %139 = load %"class.util::IdType"*, %"class.util::IdType"** %138, align 8
  %140 = icmp eq %"class.util::IdType"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = ptrtoint %"class.util::IdType"* %139 to i64
  %143 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %144 = bitcast %"class.util::IdType"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast %"class.util::IdType"* %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  br label %146

146:                                              ; preds = %137, %141
  %147 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %148 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %147, align 8
  %149 = icmp eq %"class.viz::SurfaceId"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = ptrtoint %"class.viz::SurfaceId"* %148 to i64
  %152 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %153 = bitcast %"class.viz::SurfaceId"** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = bitcast %"class.viz::SurfaceId"* %148 to i8*
  tail call void @_ZdlPv(i8* %154) #17
  br label %155

155:                                              ; preds = %146, %150
  %156 = getelementptr inbounds %"class.base::internal::flat_tree.219", %"class.base::internal::flat_tree.219"* %7, i64 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %156, align 8
  %158 = icmp eq %"struct.std::__1::pair.222"* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = ptrtoint %"struct.std::__1::pair.222"* %157 to i64
  store i64 %160, i64* %11, align 8
  %161 = bitcast %"struct.std::__1::pair.222"* %157 to i8*
  tail call void @_ZdlPv(i8* %161) #17
  br label %162

162:                                              ; preds = %155, %159
  %163 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %164 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %163, align 8
  %165 = icmp eq %"struct.std::__1::pair.222"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %162
  %167 = ptrtoint %"struct.std::__1::pair.222"* %164 to i64
  %168 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %169 = bitcast %"struct.std::__1::pair.222"** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::pair.222"* %164 to i8*
  tail call void @_ZdlPv(i8* %170) #17
  br label %171

171:                                              ; preds = %162, %166
  %172 = getelementptr inbounds %"class.base::internal::flat_tree.209", %"class.base::internal::flat_tree.209"* %2, i64 0, i32 0, i32 0, i32 0
  %173 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %172, align 8
  %174 = icmp eq %"struct.std::__1::pair.212"* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %171
  %176 = ptrtoint %"struct.std::__1::pair.212"* %173 to i64
  store i64 %176, i64* %6, align 8
  %177 = bitcast %"struct.std::__1::pair.212"* %173 to i8*
  tail call void @_ZdlPv(i8* %177) #17
  br label %178

178:                                              ; preds = %171, %175
  %179 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %12, align 8
  %180 = icmp eq %"struct.std::__1::pair.212"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %178
  %182 = ptrtoint %"struct.std::__1::pair.212"* %179 to i64
  %183 = bitcast %"struct.std::__1::pair.212"** %14 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::pair.212"* %179 to i8*
  tail call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %178, %181
  %186 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %187 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %186, align 8
  %188 = icmp eq %"class.viz::SurfaceId"* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint %"class.viz::SurfaceId"* %187 to i64
  %191 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %192 = bitcast %"class.viz::SurfaceId"** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast %"class.viz::SurfaceId"* %187 to i8*
  tail call void @_ZdlPv(i8* %193) #17
  br label %194

194:                                              ; preds = %185, %189
  %195 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %196 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %195, align 8
  %197 = icmp eq %"struct.std::__1::pair.197"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %194
  %199 = ptrtoint %"struct.std::__1::pair.197"* %196 to i64
  %200 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %201 = bitcast %"struct.std::__1::pair.197"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = bitcast %"struct.std::__1::pair.197"* %196 to i8*
  tail call void @_ZdlPv(i8* %202) #17
  br label %203

203:                                              ; preds = %194, %198
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator30ProcessAddedAndRemovedSurfacesEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %2, align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.212"* %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0
  br label %10

9:                                                ; preds = %18, %1
  ret void

10:                                               ; preds = %7, %18
  %11 = phi %"struct.std::__1::pair.212"* [ %3, %7 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %11, i64 0, i32 0
  %13 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %8, %"class.viz::SurfaceId"* dereferenceable(32) %12) #16
  %14 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %13, 0
  %15 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %13, 1
  %16 = icmp eq %"struct.std::__1::pair.212"* %15, %14
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  tail call void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %12)
  br label %18

18:                                               ; preds = %10, %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %11, i64 1
  %20 = icmp eq %"struct.std::__1::pair.212"* %19, %5
  br i1 %20, label %9, label %10
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz20RenderPassIdRemapperD1Ev(%"class.viz::RenderPassIdRemapper"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator21GenerateRenderPassMapERKNSt3__16vectorINS1_10unique_ptrINS_20CompositorRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEb(%"class.base::flat_map.372"* noalias sret, %"class.std::__1::vector.357"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.374", align 8
  %5 = bitcast %"class.std::__1::vector.374"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector.374", %"class.std::__1::vector.374"* %4, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.374", %"class.std::__1::vector.374"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #16
  %8 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.359"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.357"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = bitcast %"struct.std::__1::pair.376"** %7 to i64*
  %16 = bitcast %"class.std::__1::vector.374"* %4 to i64*
  %17 = icmp eq i64 %13, 0
  %18 = inttoptr i64 %12 to %"class.std::__1::unique_ptr.359"*
  %19 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.359"*
  br i1 %17, label %31, label %20

20:                                               ; preds = %3
  %21 = icmp ugt i64 %14, 768614336404564650
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @abort() #18
  unreachable

23:                                               ; preds = %20
  %24 = bitcast %"struct.std::__1::pair.376"** %6 to i64*
  %25 = mul i64 %14, 24
  %26 = tail call i8* @_Znwm(i64 %25) #17
  %27 = bitcast i8* %26 to %"struct.std::__1::pair.376"*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %27, i64 %14
  %30 = ptrtoint %"struct.std::__1::pair.376"* %29 to i64
  store i64 %28, i64* %16, align 8
  store i64 %28, i64* %24, align 8
  store i64 %30, i64* %15, align 8
  br label %31

31:                                               ; preds = %23, %3
  %32 = phi i64 [ 0, %3 ], [ %30, %23 ]
  %33 = phi i64 [ 0, %3 ], [ %28, %23 ]
  %34 = phi %"struct.std::__1::pair.376"* [ null, %3 ], [ %29, %23 ]
  %35 = phi %"struct.std::__1::pair.376"* [ null, %3 ], [ %27, %23 ]
  %36 = icmp eq %"class.std::__1::unique_ptr.359"* %18, %19
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = bitcast %"struct.std::__1::pair.376"** %6 to i64*
  br label %53

39:                                               ; preds = %123
  %40 = load i64, i64* %15, align 8
  br label %41

41:                                               ; preds = %39, %31
  %42 = phi i64 [ %40, %39 ], [ %32, %31 ]
  %43 = phi i64 [ %125, %39 ], [ %33, %31 ]
  %44 = phi i64 [ %124, %39 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %0, i64 0, i32 0
  %46 = bitcast %"class.base::flat_map.372"* %0 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"struct.std::__1::pair.376"** %47 to i64*
  store i64 %43, i64* %48, align 8
  %49 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"struct.std::__1::pair.376"** %49 to i64*
  store i64 %42, i64* %50, align 8
  %51 = inttoptr i64 %44 to %"struct.std::__1::pair.376"*
  %52 = inttoptr i64 %43 to %"struct.std::__1::pair.376"*
  tail call void @_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_NS4_17SurfaceAggregator18RenderPassMapEntryEEENS8_9allocatorISF_EEEEE15sort_and_uniqueENS8_11__wrap_iterIPSF_EESM_(%"class.base::internal::flat_tree.373"* %45, %"struct.std::__1::pair.376"* %51, %"struct.std::__1::pair.376"* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void

53:                                               ; preds = %129, %37
  %54 = phi i64 [ %33, %37 ], [ %124, %129 ]
  %55 = phi i64 [ %32, %37 ], [ %131, %129 ]
  %56 = phi i64 [ %33, %37 ], [ %125, %129 ]
  %57 = phi %"struct.std::__1::pair.376"* [ %34, %37 ], [ %130, %129 ]
  %58 = phi %"struct.std::__1::pair.376"* [ %35, %37 ], [ %126, %129 ]
  %59 = phi %"class.std::__1::unique_ptr.359"* [ %18, %37 ], [ %127, %129 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %60, align 8
  %62 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %61, i64 0, i32 0, i32 4
  %63 = tail call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %62) #16
  %64 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %60, align 8
  %65 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %64, i64 0, i32 1
  %66 = ptrtoint %"class.viz::CompositorRenderPass"* %64 to i64
  %67 = icmp ult %"struct.std::__1::pair.376"* %58, %57
  br i1 %67, label %68, label %77

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.util::IdType.362", %"class.util::IdType.362"* %65, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %58, i64 0, i32 0, i32 0, i32 0
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %58, i64 0, i32 1
  %73 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %72 to i64*
  store i64 %66, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %58, i64 0, i32 1, i32 1
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %58, i64 1
  %76 = ptrtoint %"struct.std::__1::pair.376"* %75 to i64
  store i64 %76, i64* %38, align 8
  br label %123

77:                                               ; preds = %53
  %78 = sub i64 %56, %54
  %79 = sdiv exact i64 %78, 24
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 768614336404564650
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = bitcast %"class.std::__1::vector.374"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %83) #18
  unreachable

84:                                               ; preds = %77
  %85 = sub i64 %55, %54
  %86 = sdiv exact i64 %85, 24
  %87 = icmp ult i64 %86, 384307168202282325
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = shl nsw i64 %86, 1
  %90 = icmp ult i64 %89, %80
  %91 = select i1 %90, i64 %80, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %88, %84
  %94 = phi i64 [ %91, %88 ], [ 768614336404564650, %84 ]
  %95 = mul i64 %94, 24
  %96 = tail call i8* @_Znwm(i64 %95) #17
  %97 = bitcast i8* %96 to %"struct.std::__1::pair.376"*
  br label %98

98:                                               ; preds = %93, %88
  %99 = phi i64 [ %94, %93 ], [ 0, %88 ]
  %100 = phi %"struct.std::__1::pair.376"* [ %97, %93 ], [ null, %88 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %100, i64 %79
  %102 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %100, i64 %99
  %103 = ptrtoint %"struct.std::__1::pair.376"* %102 to i64
  %104 = getelementptr inbounds %"class.util::IdType.362", %"class.util::IdType.362"* %65, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %100, i64 %79, i32 1
  %108 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %107 to i64*
  store i64 %66, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %100, i64 %79, i32 1, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %101, i64 1
  %111 = ptrtoint %"struct.std::__1::pair.376"* %110 to i64
  %112 = sdiv exact i64 %78, -24
  %113 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %101, i64 %112
  %114 = ptrtoint %"struct.std::__1::pair.376"* %113 to i64
  %115 = icmp sgt i64 %78, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %98
  %117 = bitcast %"struct.std::__1::pair.376"* %113 to i8*
  %118 = inttoptr i64 %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 %78, i1 false) #16
  br label %119

119:                                              ; preds = %116, %98
  store i64 %114, i64* %16, align 8
  store i64 %111, i64* %38, align 8
  store i64 %103, i64* %15, align 8
  %120 = icmp eq i64 %54, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %54 to i8*
  tail call void @_ZdlPv(i8* %122) #17
  br label %123

123:                                              ; preds = %121, %119, %68
  %124 = phi i64 [ %114, %121 ], [ %114, %119 ], [ %54, %68 ]
  %125 = phi i64 [ %111, %121 ], [ %111, %119 ], [ %76, %68 ]
  %126 = phi %"struct.std::__1::pair.376"* [ %110, %121 ], [ %110, %119 ], [ %75, %68 ]
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %59, i64 1
  %128 = icmp eq %"class.std::__1::unique_ptr.359"* %127, %19
  br i1 %128, label %39, label %129

129:                                              ; preds = %123
  %130 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %7, align 8
  %131 = ptrtoint %"struct.std::__1::pair.376"* %130 to i64
  br label %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator17CalculateClipRectERKN4absl8optionalIN3gfx4RectEEES7_RKNS3_9TransformE(%"class.absl::optional.268"* noalias sret, %"class.viz::SurfaceAggregator"* nocapture readnone, %"class.absl::optional.268"* nocapture readonly dereferenceable(20), %"class.absl::optional.268"* dereferenceable(20), %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -86, i64 20, i1 false)
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 20, i1 false)
  br label %13

13:                                               ; preds = %5, %12
  %14 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %20 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = tail call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* dereferenceable(16) %20) #16
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %23 = extractvalue { i64, i64 } %21, 0
  store i64 %23, i64* %22, align 8
  %24 = extractvalue { i64, i64 } %21, 1
  store i64 %24, i64* %19, align 8
  %25 = load i8, i8* %8, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #16
  br label %32

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %union.anon.272* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 8 %18, i64 16, i1 false) #16
  store i8 1, i8* %8, align 4
  br label %32

32:                                               ; preds = %29, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %33

33:                                               ; preds = %13, %32
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3viz17SurfaceAggregator17ChildIdForSurfaceEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.528", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"class.base::flat_map.193", %"class.base::flat_map.193"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %8 = tail call { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.194"* %6, %"class.viz::SurfaceId"* dereferenceable(32) %7) #16
  %9 = extractvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %8, 0
  %10 = extractvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %8, 1
  %11 = icmp eq %"struct.std::__1::pair.197"* %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair.197"* %9, %14
  br i1 %15, label %16, label %39

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  %18 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %17, align 8
  %19 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 3, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %20, %"class.base::internal::WeakReference"* dereferenceable(8) %21) #16
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 3, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !3
  store i64 %24, i64* %22, align 8, !alias.scope !3
  %25 = call i8* @_Znwm(i64 56) #17, !noalias !6
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.529"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS4_16ReturnedResourceENS7_9allocatorIS9_EEEEEJS6_EEEFvSC_EE3RunEPNS0_13BindStateBaseEOSC_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !6
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)* @_ZN3viz17SurfaceAggregator14UnrefResourcesEN4base7WeakPtrINS_13SurfaceClientEEENSt3__16vectorINS_16ReturnedResourceENS5_9allocatorIS7_EEEE to i64), i64* %28, align 8, !noalias !6
  %29 = getelementptr inbounds i8, i8* %25, i64 40
  %30 = bitcast i8* %29 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %30, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %20) #16, !noalias !6
  %31 = getelementptr inbounds i8, i8* %25, i64 48
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %22, align 8, !noalias !6
  store i64 %33, i64* %32, align 8, !noalias !6
  %34 = bitcast %"class.base::RepeatingCallback.528"* %3 to i8**
  store i8* %25, i8** %34, align 8, !alias.scope !6
  %35 = call i32 @_ZN3viz23DisplayResourceProvider11CreateChildEN4base17RepeatingCallbackIFvNSt3__16vectorINS_16ReturnedResourceENS3_9allocatorIS5_EEEEEEERKNS_9SurfaceIdE(%"class.viz::DisplayResourceProvider"* %18, %"class.base::RepeatingCallback.528"* nonnull %3, %"class.viz::SurfaceId"* dereferenceable(32) %7) #16
  %36 = getelementptr inbounds %"class.base::RepeatingCallback.528", %"class.base::RepeatingCallback.528"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #16
  %37 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %38 = call dereferenceable(4) i32* @_ZN4base8flat_mapIN3viz9SurfaceIdEiNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_iEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map.193"* %5, %"class.viz::SurfaceId"* dereferenceable(32) %7)
  store i32 %35, i32* %38, align 4
  br label %42

39:                                               ; preds = %12
  %40 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %9, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %39, %16
  %43 = phi i32 [ %35, %16 ], [ %41, %39 ]
  ret i32 %43
}

declare i32 @_ZN3viz23DisplayResourceProvider11CreateChildEN4base17RepeatingCallbackIFvNSt3__16vectorINS_16ReturnedResourceENS3_9allocatorIS5_EEEEEEERKNS_9SurfaceIdE(%"class.viz::DisplayResourceProvider"*, %"class.base::RepeatingCallback.528"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator14UnrefResourcesEN4base7WeakPtrINS_13SurfaceClientEEENSt3__16vectorINS_16ReturnedResourceENS5_9allocatorIS7_EEEE(%"class.base::WeakPtr"*, %"class.std::__1::vector.529"* nocapture) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.529", align 16
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %54

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.viz::SurfaceClient"**
  %10 = load %"class.viz::SurfaceClient"*, %"class.viz::SurfaceClient"** %9, align 8
  %11 = icmp eq %"class.viz::SurfaceClient"* %10, null
  br i1 %11, label %54, label %12

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #16
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %17

17:                                               ; preds = %14, %12
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %"class.viz::SurfaceClient"*, %"class.viz::SurfaceClient"** %9, align 8
  %21 = bitcast %"class.viz::SurfaceClient"* %20 to void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)***
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)*** [ %21, %19 ], [ null, %17 ]
  %24 = phi %"class.viz::SurfaceClient"* [ %20, %19 ], [ null, %17 ]
  %25 = bitcast %"class.std::__1::vector.529"* %1 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %4, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector.529"* %4 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %28, align 16
  %29 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.viz::ReturnedResource"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.viz::ReturnedResource"** %32 to i64*
  store i64 %31, i64* %33, align 16
  %34 = bitcast %"class.std::__1::vector.529"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #16
  %35 = load void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)**, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)*** %23, align 8
  %36 = getelementptr inbounds void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)*, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)** %35, i64 6
  %37 = load void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)*, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.529"*)** %36, align 8
  call void %37(%"class.viz::SurfaceClient"* %24, %"class.std::__1::vector.529"* nonnull %4) #16
  %38 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %4, i64 0, i32 0, i32 0
  %39 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %38, align 16
  %40 = icmp eq %"struct.viz::ReturnedResource"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %22
  %42 = bitcast %"struct.viz::ReturnedResource"* %39 to i8*
  %43 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %27, align 8
  %44 = icmp eq %"struct.viz::ReturnedResource"* %43, %39
  br i1 %44, label %52, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"struct.viz::ReturnedResource"* [ %47, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %46, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %47) #16
  %48 = icmp eq %"struct.viz::ReturnedResource"* %47, %39
  br i1 %48, label %49, label %45

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::vector.529"* %4 to i8**
  %51 = load i8*, i8** %50, align 16
  br label %52

52:                                               ; preds = %49, %41
  %53 = phi i8* [ %51, %49 ], [ %42, %41 ]
  store %"struct.viz::ReturnedResource"* %39, %"struct.viz::ReturnedResource"** %27, align 8
  call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %7, %2, %52, %22
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4base8flat_mapIN3viz9SurfaceIdEiNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_iEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map.193"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.base::flat_map.193", %"class.base::flat_map.193"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.193", %"class.base::flat_map.193"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.197"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.197"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.197"*
  br i1 %11, label %73, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 40
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"struct.std::__1::pair.197"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30, i32 0, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30, i32 0, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"struct.std::__1::pair.197"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69, %2
  %74 = phi %"struct.std::__1::pair.197"* [ %5, %2 ], [ %71, %69 ]
  %75 = icmp eq %"struct.std::__1::pair.197"* %74, %12
  br i1 %75, label %122, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %77, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %122, label %84

84:                                               ; preds = %76
  %85 = icmp ult i32 %82, %81
  br i1 %85, label %126, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %78, align 4
  %88 = load i32, i32* %80, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %122, label %90

90:                                               ; preds = %86
  %91 = icmp ult i32 %88, %87
  br i1 %91, label %126, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 1, i32 1
  %97 = load i32, i32* %93, align 4
  %98 = load i32, i32* %95, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %92
  %101 = icmp ult i32 %98, %97
  br i1 %101, label %126, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %96, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp ult i32 %104, %103
  br i1 %107, label %126, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %113 = load i64, i64* %109, align 8
  %114 = load i64, i64* %111, align 8
  %115 = icmp ult i64 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %108
  %117 = icmp ult i64 %114, %113
  br i1 %117, label %126, label %118

118:                                              ; preds = %116
  %119 = load i64, i64* %110, align 8
  %120 = load i64, i64* %112, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %126

122:                                              ; preds = %76, %92, %102, %108, %86, %73, %118
  %123 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #16
  store i32 0, i32* %3, align 4
  %124 = getelementptr inbounds %"class.base::flat_map.193", %"class.base::flat_map.193"* %0, i64 0, i32 0, i32 0
  %125 = call %"struct.std::__1::pair.197"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.195"* %124, %"struct.std::__1::pair.197"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1, i32* nonnull dereferenceable(4) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #16
  br label %126

126:                                              ; preds = %84, %100, %106, %116, %90, %122, %118
  %127 = phi %"struct.std::__1::pair.197"* [ %125, %122 ], [ %74, %118 ], [ %74, %90 ], [ %74, %116 ], [ %74, %106 ], [ %74, %100 ], [ %74, %84 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %127, i64 0, i32 1
  ret i32* %128
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz17SurfaceAggregator33IsSurfaceFrameIndexSameAsPreviousEPKNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0
  %4 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %4) #16
  %6 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %5, 0
  %7 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %5, 1
  %8 = icmp eq %"struct.std::__1::pair.212"* %6, %7
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair.212"* %6, %11
  br i1 %12, label %25, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %6, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %13, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %13 ]
  %24 = icmp eq i64 %15, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %2, %22, %9
  br label %26

26:                                               ; preds = %22, %25
  %27 = phi i1 [ false, %25 ], [ true, %22 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK3viz17SurfaceAggregator20DamageRectForSurfaceEPKNS_7SurfaceERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*, %"class.viz::CompositorRenderPass"* nocapture readonly dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK3viz7Surface25HasSurfaceAnimationDamageEv(%"class.viz::Surface"* %1) #16
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"* %6 to i64*
  %8 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 1, i32 1
  br label %111

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0
  %11 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %12 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %10, %"class.viz::SurfaceId"* dereferenceable(32) %11) #16
  %13 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %12, 0
  %14 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %12, 1
  %15 = icmp eq %"struct.std::__1::pair.212"* %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.212"* %13, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %13, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %26, %20
  %30 = phi i64 [ %28, %26 ], [ 0, %20 ]
  %31 = icmp eq i64 %22, %30
  br i1 %31, label %117, label %32

32:                                               ; preds = %29, %16, %9
  %33 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %10, %"class.viz::SurfaceId"* dereferenceable(32) %11) #16
  %34 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %33, 0
  %35 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %33, 1
  %36 = icmp eq %"struct.std::__1::pair.212"* %34, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %39 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %38, align 8
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"struct.std::__1::pair.212"* [ %39, %37 ], [ %34, %32 ]
  %42 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %42, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %78

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %78

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1, i32 1, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %78

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %78

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %68, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %86, label %78

78:                                               ; preds = %72, %40, %66, %54, %60, %48
  %79 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %10, %"class.viz::SurfaceId"* dereferenceable(32) %42) #16
  %80 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %79, 0
  %81 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %79, 1
  %82 = icmp eq %"struct.std::__1::pair.212"* %80, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %85 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %84, align 8
  br label %86

86:                                               ; preds = %72, %83, %78
  %87 = phi %"struct.std::__1::pair.212"* [ %41, %72 ], [ %85, %83 ], [ %80, %78 ]
  %88 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %89 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %88, align 8
  %90 = icmp eq %"struct.std::__1::pair.212"* %87, %89
  br i1 %90, label %108, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %87, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, -1
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi i64 [ %100, %97 ], [ -1, %91 ]
  %103 = icmp eq i64 %93, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 1
  %106 = bitcast %"class.gfx::Rect"* %105 to i64*
  %107 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 1, i32 1
  br label %111

108:                                              ; preds = %86, %101
  %109 = bitcast %"class.viz::CompositorRenderPass"* %2 to i64*
  %110 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 0, i32 1
  br label %111

111:                                              ; preds = %5, %104, %108
  %112 = phi %"class.gfx::Size"* [ %110, %108 ], [ %107, %104 ], [ %8, %5 ]
  %113 = phi i64* [ %109, %108 ], [ %106, %104 ], [ %7, %5 ]
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.gfx::Size"* %112 to i64*
  %116 = load i64, i64* %115, align 8
  br label %117

117:                                              ; preds = %111, %29
  %118 = phi i64 [ 0, %29 ], [ %116, %111 ]
  %119 = phi i64 [ 0, %29 ], [ %114, %111 ]
  %120 = insertvalue { i64, i64 } undef, i64 %119, 0
  %121 = insertvalue { i64, i64 } %120, i64 %118, 1
  ret { i64, i64 } %121
}

declare zeroext i1 @_ZNK3viz7Surface25HasSurfaceAnimationDamageEv(%"class.viz::Surface"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator37AddRenderPassFilterDamageToDamageListERKN3gfx9TransformEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassE(%"class.viz::SurfaceAggregator"*, %"class.gfx::Transform"* dereferenceable(68), %"class.viz::CompositorRenderPass"*, %"class.viz::AggregatedRenderPass"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Rect", align 8
  %7 = alloca %"class.gfx::RectF", align 4
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.gfx::Rect"*
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 3
  %12 = tail call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %11) #16
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 4
  %15 = tail call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %14) #16
  br i1 %15, label %16, label %67

16:                                               ; preds = %13, %4
  %17 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %3, i64 0, i32 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %18, %class.SkMatrix44* dereferenceable(68) %19, %class.SkMatrix44* dereferenceable(68) %20) #16
  %21 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  %22 = bitcast %"class.viz::CompositorRenderPass"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %22, i64 16, i1 false)
  %23 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %11) #16
  br i1 %23, label %24, label %54

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  %29 = call float @_ZNK2cc16FilterOperations20MaximumPixelMovementEv(%"class.cc::FilterOperations"* %11) #16
  %30 = bitcast %"class.gfx::RectF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #16
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 1
  %35 = load i32, i32* %28, align 8
  %36 = sitofp i32 %35 to float
  %37 = load i32, i32* %27, align 4
  %38 = sitofp i32 %37 to float
  %39 = load i32, i32* %26, align 8
  %40 = load i32, i32* %25, align 4
  store float %36, float* %31, align 4
  store float %38, float* %32, align 4
  %41 = icmp sgt i32 %39, 0
  %42 = select i1 %41, i32 %39, i32 0
  %43 = sitofp i32 %42 to float
  store float %43, float* %33, align 4
  %44 = icmp sgt i32 %40, 0
  %45 = select i1 %44, i32 %40, i32 0
  %46 = sitofp i32 %45 to float
  store float %46, float* %34, align 4
  %47 = fsub float -0.000000e+00, %29
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %7, float %47, float %47, float %47, float %47) #16
  %48 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %7) #16
  %49 = extractvalue { i64, i64 } %48, 0
  %50 = extractvalue { i64, i64 } %48, 1
  %51 = bitcast %"class.gfx::Rect"* %6 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %53 = bitcast %"class.gfx::Size"* %52 to i64*
  store i64 %50, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #16
  br label %54

54:                                               ; preds = %24, %16
  %55 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #16
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %57 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #16
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %59 = extractvalue { i64, i64 } %57, 0
  store i64 %59, i64* %58, align 8
  %60 = extractvalue { i64, i64 } %57, 1
  store i64 %60, i64* %56, align 8
  %61 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 26
  %62 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %9, %"class.gfx::Rect"* dereferenceable(16) %61) #16
  br i1 %62, label %63, label %66

63:                                               ; preds = %54
  %64 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %64) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %65 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %10, i64 0, i32 0, i32 1
  store i8 0, i8* %65, align 4
  call void @_ZN3viz17SurfaceAggregator28AddSurfaceDamageToDamageListERKN3gfx4RectERKNS1_9TransformERKN4absl8optionalIS2_EEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Transform"* nonnull dereferenceable(68) %10, %"class.absl::optional.268"* dereferenceable(20) bitcast ({ i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } }* @.ref.tmp to %"class.absl::optional.268"*), %"class.viz::CompositorRenderPass"* %2, %"class.viz::AggregatedRenderPass"* %3, %"class.viz::Surface"* null)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %64) #16
  br label %66

66:                                               ; preds = %63, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #16
  br label %67

67:                                               ; preds = %13, %66
  ret void
}

declare float @_ZNK2cc16FilterOperations20MaximumPixelMovementEv(%"class.cc::FilterOperations"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator28AddSurfaceDamageToDamageListERKN3gfx4RectERKNS1_9TransformERKN4absl8optionalIS2_EEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* dereferenceable(20), %"class.viz::CompositorRenderPass"* nocapture readonly, %"class.viz::AggregatedRenderPass"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.gfx::Rect", align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %14 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #16
  %17 = icmp eq %"class.viz::Surface"* %6, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %19, i64 16, i1 false)
  br label %120

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 7
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %111

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %27 = load %"class.util::IdType"*, %"class.util::IdType"** %26, align 8
  %28 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %29 = bitcast %"class.util::IdType"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"class.util::IdType"* %27 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 0
  %34 = inttoptr i64 %30 to %"class.util::IdType"*
  br i1 %33, label %55, label %35

35:                                               ; preds = %25
  %36 = ashr exact i64 %32, 3
  %37 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %21, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %39, %35
  %40 = phi %"class.util::IdType"* [ %27, %35 ], [ %51, %39 ]
  %41 = phi i64 [ %36, %35 ], [ %50, %39 ]
  %42 = lshr i64 %41, 1
  %43 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %40, i64 %42
  %44 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %43, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, %38
  %47 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %43, i64 1
  %48 = xor i64 %42, -1
  %49 = add i64 %41, %48
  %50 = select i1 %46, i64 %49, i64 %42
  %51 = select i1 %46, %"class.util::IdType"* %47, %"class.util::IdType"* %40
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %39

53:                                               ; preds = %39
  %54 = ptrtoint %"class.util::IdType"* %51 to i64
  br label %55

55:                                               ; preds = %53, %25
  %56 = phi i64 [ %54, %53 ], [ %31, %25 ]
  %57 = phi %"class.util::IdType"* [ %51, %53 ], [ %27, %25 ]
  %58 = icmp eq %"class.util::IdType"* %57, %34
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %21, i64 0, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %57, i64 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %65, label %111

65:                                               ; preds = %59, %55
  %66 = ptrtoint %"class.util::IdType"* %57 to i64
  %67 = icmp eq i64 %56, %66
  br i1 %67, label %68, label %111

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %70 = load %"class.util::IdType"*, %"class.util::IdType"** %69, align 8
  %71 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %72 = bitcast %"class.util::IdType"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = ptrtoint %"class.util::IdType"* %70 to i64
  %75 = sub i64 %73, %74
  %76 = icmp eq i64 %75, 0
  %77 = inttoptr i64 %73 to %"class.util::IdType"*
  br i1 %76, label %98, label %78

78:                                               ; preds = %68
  %79 = ashr exact i64 %75, 3
  %80 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %21, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %82, %78
  %83 = phi %"class.util::IdType"* [ %70, %78 ], [ %94, %82 ]
  %84 = phi i64 [ %79, %78 ], [ %93, %82 ]
  %85 = lshr i64 %84, 1
  %86 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %83, i64 %85
  %87 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %86, i64 0, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, %81
  %90 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %86, i64 1
  %91 = xor i64 %85, -1
  %92 = add i64 %84, %91
  %93 = select i1 %89, i64 %92, i64 %85
  %94 = select i1 %89, %"class.util::IdType"* %90, %"class.util::IdType"* %83
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %82

96:                                               ; preds = %82
  %97 = ptrtoint %"class.util::IdType"* %94 to i64
  br label %98

98:                                               ; preds = %96, %68
  %99 = phi i64 [ %97, %96 ], [ %74, %68 ]
  %100 = phi %"class.util::IdType"* [ %94, %96 ], [ %70, %68 ]
  %101 = icmp eq %"class.util::IdType"* %100, %77
  br i1 %101, label %108, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %21, i64 0, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %100, i64 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp ult i64 %104, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %98, %102
  %109 = ptrtoint %"class.util::IdType"* %100 to i64
  %110 = icmp eq i64 %99, %109
  br i1 %110, label %113, label %111

111:                                              ; preds = %108, %20, %59, %65, %102
  %112 = bitcast %"class.viz::CompositorRenderPass"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %112, i64 16, i1 false)
  br label %120

113:                                              ; preds = %108
  %114 = tail call { i64, i64 } @_ZNK3viz17SurfaceAggregator20DamageRectForSurfaceEPKNS_7SurfaceERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* nonnull %6, %"class.viz::CompositorRenderPass"* dereferenceable(280) %4)
  %115 = extractvalue { i64, i64 } %114, 0
  %116 = extractvalue { i64, i64 } %114, 1
  %117 = bitcast %"class.gfx::Rect"* %8 to i64*
  store i64 %115, i64* %117, align 8
  %118 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %119 = bitcast %"class.gfx::Size"* %118 to i64*
  store i64 %116, i64* %119, align 8
  br label %120

120:                                              ; preds = %111, %113, %18
  %121 = load i32, i32* %15, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 41
  br label %129

125:                                              ; preds = %120
  %126 = load i32, i32* %16, align 4
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 41
  br i1 %127, label %129, label %131

129:                                              ; preds = %123, %125
  %130 = phi i8* [ %124, %123 ], [ %128, %125 ]
  store i8 1, i8* %130, align 1
  br label %226

131:                                              ; preds = %125
  store i8 0, i8* %128, align 1
  %132 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %132) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %132, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %133 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 2
  %134 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0
  %135 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %133, i64 0, i32 0
  %136 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %2, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %134, %class.SkMatrix44* dereferenceable(68) %135, %class.SkMatrix44* dereferenceable(68) %136) #16
  %137 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #16
  %138 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %139 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #16
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %141 = extractvalue { i64, i64 } %139, 0
  store i64 %141, i64* %140, align 8
  %142 = extractvalue { i64, i64 } %139, 1
  store i64 %142, i64* %138, align 8
  %143 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8, i8* %143, align 4, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %154, label %146

146:                                              ; preds = %131
  %147 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #16
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %149 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %150 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %133, %"class.gfx::Rect"* dereferenceable(16) %149) #16
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %152 = extractvalue { i64, i64 } %150, 0
  store i64 %152, i64* %151, align 8
  %153 = extractvalue { i64, i64 } %150, 1
  store i64 %153, i64* %148, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #16
  br label %154

154:                                              ; preds = %131, %146
  %155 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 27
  %156 = load %"class.std::__1::vector.241"*, %"class.std::__1::vector.241"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %156, i64 0, i32 0, i32 1
  %158 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %156, i64 0, i32 0, i32 2, i32 0, i32 0
  %160 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %159, align 8
  %161 = icmp eq %"class.gfx::Rect"* %158, %160
  %162 = ptrtoint %"class.gfx::Rect"* %160 to i64
  br i1 %161, label %168, label %163

163:                                              ; preds = %154
  %164 = bitcast %"class.gfx::Rect"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* nonnull align 8 %137, i64 16, i1 false) #16
  %165 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %158, i64 1
  %166 = ptrtoint %"class.gfx::Rect"* %165 to i64
  %167 = bitcast %"class.gfx::Rect"** %157 to i64*
  store i64 %166, i64* %167, align 8
  br label %225

168:                                              ; preds = %154
  %169 = ptrtoint %"class.gfx::Rect"* %158 to i64
  %170 = bitcast %"class.gfx::Rect"** %157 to i64*
  %171 = bitcast %"class.std::__1::vector.241"* %156 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %169, %172
  %174 = ashr exact i64 %173, 4
  %175 = add nsw i64 %174, 1
  %176 = icmp ugt i64 %175, 1152921504606846975
  br i1 %176, label %177, label %179

177:                                              ; preds = %168
  %178 = bitcast %"class.std::__1::vector.241"* %156 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %178) #18
  unreachable

179:                                              ; preds = %168
  %180 = bitcast %"class.gfx::Rect"** %159 to i64*
  %181 = sub i64 %162, %172
  %182 = ashr exact i64 %181, 4
  %183 = icmp ult i64 %182, 576460752303423487
  br i1 %183, label %184, label %192

184:                                              ; preds = %179
  %185 = ashr exact i64 %181, 3
  %186 = icmp ult i64 %185, %175
  %187 = select i1 %186, i64 %175, i64 %185
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %197, label %189

189:                                              ; preds = %184
  %190 = icmp ugt i64 %187, 1152921504606846975
  br i1 %190, label %191, label %192

191:                                              ; preds = %189
  call void @abort() #18
  unreachable

192:                                              ; preds = %189, %179
  %193 = phi i64 [ %187, %189 ], [ 1152921504606846975, %179 ]
  %194 = shl i64 %193, 4
  %195 = call i8* @_Znwm(i64 %194) #17
  %196 = bitcast i8* %195 to %"class.gfx::Rect"*
  br label %197

197:                                              ; preds = %192, %184
  %198 = phi i64 [ %193, %192 ], [ 0, %184 ]
  %199 = phi %"class.gfx::Rect"* [ %196, %192 ], [ null, %184 ]
  %200 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %199, i64 %174
  %201 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %199, i64 %198
  %202 = ptrtoint %"class.gfx::Rect"* %201 to i64
  %203 = bitcast %"class.gfx::Rect"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %203, i8* nonnull align 8 %137, i64 16, i1 false) #16
  %204 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %200, i64 1
  %205 = ptrtoint %"class.gfx::Rect"* %204 to i64
  %206 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %156, i64 0, i32 0, i32 0
  %207 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %206, align 8
  %208 = load i64, i64* %170, align 8
  %209 = ptrtoint %"class.gfx::Rect"* %207 to i64
  %210 = sub i64 %208, %209
  %211 = ashr exact i64 %210, 4
  %212 = sub nsw i64 0, %211
  %213 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %200, i64 %212
  %214 = ptrtoint %"class.gfx::Rect"* %213 to i64
  %215 = icmp sgt i64 %210, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %197
  %217 = bitcast %"class.gfx::Rect"* %213 to i8*
  %218 = bitcast %"class.gfx::Rect"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %210, i1 false) #16
  %219 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %206, align 8
  br label %220

220:                                              ; preds = %216, %197
  %221 = phi %"class.gfx::Rect"* [ %207, %197 ], [ %219, %216 ]
  store i64 %214, i64* %171, align 8
  store i64 %205, i64* %170, align 8
  store i64 %202, i64* %180, align 8
  %222 = icmp eq %"class.gfx::Rect"* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.gfx::Rect"* %221 to i8*
  call void @_ZdlPv(i8* %224) #17
  br label %225

225:                                              ; preds = %163, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %132) #16
  br label %226

226:                                              ; preds = %225, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz17SurfaceAggregator25RenderPassNeedsFullDamageERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEb(%"class.viz::SurfaceAggregator"* nocapture readonly, %"class.util::IdType"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #4 align 2 {
  br i1 %2, label %94, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %6 = load %"class.util::IdType"*, %"class.util::IdType"** %5, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %8 = bitcast %"class.util::IdType"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.util::IdType"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.util::IdType"*
  br i1 %12, label %34, label %14

14:                                               ; preds = %4
  %15 = ashr exact i64 %11, 3
  %16 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %18, %14
  %19 = phi %"class.util::IdType"* [ %6, %14 ], [ %30, %18 ]
  %20 = phi i64 [ %15, %14 ], [ %29, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %19, i64 %21
  %23 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %17
  %26 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 1
  %27 = xor i64 %21, -1
  %28 = add i64 %20, %27
  %29 = select i1 %25, i64 %28, i64 %21
  %30 = select i1 %25, %"class.util::IdType"* %26, %"class.util::IdType"* %19
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = ptrtoint %"class.util::IdType"* %30 to i64
  br label %34

34:                                               ; preds = %32, %4
  %35 = phi i64 [ %33, %32 ], [ %10, %4 ]
  %36 = phi %"class.util::IdType"* [ %30, %32 ], [ %6, %4 ]
  %37 = icmp eq %"class.util::IdType"* %36, %13
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %36, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %44, label %94

44:                                               ; preds = %34, %38
  %45 = ptrtoint %"class.util::IdType"* %36 to i64
  %46 = icmp eq i64 %35, %45
  br i1 %46, label %47, label %94

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %49 = load %"class.util::IdType"*, %"class.util::IdType"** %48, align 8
  %50 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %51 = bitcast %"class.util::IdType"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint %"class.util::IdType"* %49 to i64
  %54 = sub i64 %52, %53
  %55 = icmp eq i64 %54, 0
  %56 = inttoptr i64 %52 to %"class.util::IdType"*
  br i1 %55, label %77, label %57

57:                                               ; preds = %47
  %58 = ashr exact i64 %54, 3
  %59 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %61, %57
  %62 = phi %"class.util::IdType"* [ %49, %57 ], [ %73, %61 ]
  %63 = phi i64 [ %58, %57 ], [ %72, %61 ]
  %64 = lshr i64 %63, 1
  %65 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %62, i64 %64
  %66 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %65, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %67, %60
  %69 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %65, i64 1
  %70 = xor i64 %64, -1
  %71 = add i64 %63, %70
  %72 = select i1 %68, i64 %71, i64 %64
  %73 = select i1 %68, %"class.util::IdType"* %69, %"class.util::IdType"* %62
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %61
  %76 = ptrtoint %"class.util::IdType"* %73 to i64
  br label %77

77:                                               ; preds = %75, %47
  %78 = phi i64 [ %76, %75 ], [ %53, %47 ]
  %79 = phi %"class.util::IdType"* [ %73, %75 ], [ %49, %47 ]
  %80 = icmp eq %"class.util::IdType"* %79, %56
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %79, i64 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %83, %85
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %79, i64 1
  %89 = ptrtoint %"class.util::IdType"* %88 to i64
  br label %90

90:                                               ; preds = %77, %81, %87
  %91 = phi i64 [ %89, %87 ], [ %78, %77 ], [ %78, %81 ]
  %92 = ptrtoint %"class.util::IdType"* %79 to i64
  %93 = icmp ne i64 %91, %92
  br label %94

94:                                               ; preds = %38, %44, %90, %3
  %95 = phi i1 [ true, %44 ], [ true, %3 ], [ %93, %90 ], [ true, %38 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::DrawQuad"* @_ZN3viz17SurfaceAggregator25FindQuadWithOverlayDamageERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassERKN3gfx9TransformEPKNS_7SurfaceERKN4absl8optionalINS6_4RectEEEPm(%"class.viz::SurfaceAggregator"* nocapture, %"class.viz::CompositorRenderPass"* dereferenceable(280), %"class.viz::AggregatedRenderPass"* nocapture readnone, %"class.gfx::Transform"* nocapture readnone dereferenceable(68), %"class.viz::Surface"*, %"class.absl::optional.268"* nocapture readnone dereferenceable(20), i64* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %9 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %10 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %11 = alloca %"class.cc::ListContainerHelper::ConstReverseIterator", align 8
  %12 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", align 8
  %13 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %14 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %15 = alloca %"class.gfx::Rect", align 4
  %16 = tail call zeroext i1 @_ZNK3viz7Surface25HasSurfaceAnimationDamageEv(%"class.viz::Surface"* %4) #16
  br i1 %16, label %174, label %17

17:                                               ; preds = %7
  %18 = tail call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface14GetActiveFrameEv(%"class.viz::Surface"* %4) #16
  %19 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %18, i64 0, i32 2, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %20, i64 -1, i32 0, i32 0, i32 0
  %22 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %21, align 8
  %23 = icmp eq %"class.viz::CompositorRenderPass"* %22, %1
  br i1 %23, label %24, label %174

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  %26 = tail call i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"* %25) #16
  %27 = icmp eq i64 %26, 1
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #16
  %30 = bitcast %"class.cc::ListContainerHelper::ConstReverseIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16, !noalias !11
  call void @_ZNK2cc19ListContainerHelper7crbeginEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull sret %11, %"class.cc::ListContainerHelper"* %25) #16, !noalias !14
  %31 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %12, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %11, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %31, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %32) #16
  %33 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %12, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %11, i64 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !14
  store i64 %35, i64* %33, align 8, !alias.scope !14
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16, !noalias !11
  %36 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %12, i64 0, i32 0, i32 0, i32 2
  %37 = bitcast i8** %36 to %"class.viz::DrawQuad"**
  %38 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %37, align 8
  %39 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %12, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %39) #16
  br label %81

40:                                               ; preds = %24
  %41 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13, i64 0, i32 0, i32 1
  %43 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %10 to i8*
  %44 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #16, !noalias !17
  call void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %10, %"class.cc::ListContainerHelper"* %25) #16, !noalias !17
  %45 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %10, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %45, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %46) #16
  %47 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %10, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !17
  store i64 %48, i64* %42, align 8, !alias.scope !17
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #16, !noalias !17
  %49 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #16
  %50 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %14, i64 0, i32 0, i32 1
  %51 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %9 to i8*
  %52 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #16, !noalias !22
  call void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %9, %"class.cc::ListContainerHelper"* %25) #16, !noalias !22
  %53 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %14, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %9, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %53, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %54) #16
  %55 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %9, i64 0, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !22
  store i64 %56, i64* %50, align 8, !alias.scope !22
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #16, !noalias !22
  %57 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %45, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %53) #16
  br i1 %57, label %58, label %77

58:                                               ; preds = %40
  %59 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13, i64 0, i32 0, i32 0, i32 2
  %60 = bitcast i8** %59 to %"class.viz::DrawQuad"**
  %61 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %8 to i8*
  br label %62

62:                                               ; preds = %58, %72
  %63 = phi %"class.viz::DrawQuad"* [ null, %58 ], [ %73, %72 ]
  %64 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %60, align 8
  %65 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %64, i64 0, i32 6
  %66 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %65, align 8
  %67 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %66, i64 0, i32 14
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %62
  %71 = icmp eq %"class.viz::DrawQuad"* %63, null
  br i1 %71, label %72, label %77

72:                                               ; preds = %70, %62
  %73 = phi %"class.viz::DrawQuad"* [ %63, %62 ], [ %64, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %8, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  %74 = load i64, i64* %42, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %42, align 8
  %76 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %45, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %53) #16
  br i1 %76, label %62, label %77

77:                                               ; preds = %72, %70, %40
  %78 = phi %"class.viz::DrawQuad"* [ null, %40 ], [ null, %70 ], [ %73, %72 ]
  %79 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %14, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %79) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #16
  %80 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %13, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %80) #16
  br label %81

81:                                               ; preds = %77, %28
  %82 = phi i8* [ %41, %77 ], [ %29, %28 ]
  %83 = phi %"class.viz::DrawQuad"* [ %78, %77 ], [ %38, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #16
  %84 = icmp eq %"class.viz::DrawQuad"* %83, null
  br i1 %84, label %174, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 41
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %163, label %89

89:                                               ; preds = %85
  store i8 0, i8* %86, align 1
  %90 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 27
  %91 = load %"class.std::__1::vector.241"*, %"class.std::__1::vector.241"** %90, align 8
  %92 = bitcast %"class.gfx::Rect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92)
  %93 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %91, i64 0, i32 0, i32 1
  %94 = bitcast %"class.gfx::Rect"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 0, i64 16, i1 false)
  %95 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %93, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %91, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %96, align 8
  %98 = icmp ult %"class.gfx::Rect"* %95, %97
  %99 = ptrtoint %"class.gfx::Rect"* %97 to i64
  br i1 %98, label %100, label %105

100:                                              ; preds = %89
  %101 = bitcast %"class.gfx::Rect"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* nonnull align 4 %92, i64 16, i1 false) #16
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %95, i64 1
  %103 = ptrtoint %"class.gfx::Rect"* %102 to i64
  %104 = bitcast %"class.gfx::Rect"** %93 to i64*
  store i64 %103, i64* %104, align 8
  br label %162

105:                                              ; preds = %89
  %106 = ptrtoint %"class.gfx::Rect"* %95 to i64
  %107 = bitcast %"class.gfx::Rect"** %93 to i64*
  %108 = bitcast %"class.std::__1::vector.241"* %91 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %106, %109
  %111 = ashr exact i64 %110, 4
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 1152921504606846975
  br i1 %113, label %114, label %116

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::vector.241"* %91 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #18
  unreachable

116:                                              ; preds = %105
  %117 = bitcast %"class.gfx::Rect"** %96 to i64*
  %118 = sub i64 %99, %109
  %119 = ashr exact i64 %118, 4
  %120 = icmp ult i64 %119, 576460752303423487
  br i1 %120, label %121, label %129

121:                                              ; preds = %116
  %122 = ashr exact i64 %118, 3
  %123 = icmp ult i64 %122, %112
  %124 = select i1 %123, i64 %112, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %121
  %127 = icmp ugt i64 %124, 1152921504606846975
  br i1 %127, label %128, label %129

128:                                              ; preds = %126
  call void @abort() #18
  unreachable

129:                                              ; preds = %126, %116
  %130 = phi i64 [ %124, %126 ], [ 1152921504606846975, %116 ]
  %131 = shl i64 %130, 4
  %132 = call i8* @_Znwm(i64 %131) #17
  %133 = bitcast i8* %132 to %"class.gfx::Rect"*
  br label %134

134:                                              ; preds = %129, %121
  %135 = phi i64 [ %130, %129 ], [ 0, %121 ]
  %136 = phi %"class.gfx::Rect"* [ %133, %129 ], [ null, %121 ]
  %137 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %136, i64 %111
  %138 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %136, i64 %135
  %139 = ptrtoint %"class.gfx::Rect"* %138 to i64
  %140 = bitcast %"class.gfx::Rect"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* nonnull align 4 %92, i64 16, i1 false) #16
  %141 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %137, i64 1
  %142 = ptrtoint %"class.gfx::Rect"* %141 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %91, i64 0, i32 0, i32 0
  %144 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %143, align 8
  %145 = load i64, i64* %107, align 8
  %146 = ptrtoint %"class.gfx::Rect"* %144 to i64
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 4
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %137, i64 %149
  %151 = ptrtoint %"class.gfx::Rect"* %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %134
  %154 = bitcast %"class.gfx::Rect"* %150 to i8*
  %155 = bitcast %"class.gfx::Rect"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %147, i1 false) #16
  %156 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %143, align 8
  br label %157

157:                                              ; preds = %153, %134
  %158 = phi %"class.gfx::Rect"* [ %144, %134 ], [ %156, %153 ]
  store i64 %151, i64* %108, align 8
  store i64 %142, i64* %107, align 8
  store i64 %139, i64* %117, align 8
  %159 = icmp eq %"class.gfx::Rect"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.gfx::Rect"* %158 to i8*
  call void @_ZdlPv(i8* %161) #17
  br label %162

162:                                              ; preds = %100, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92)
  br label %163

163:                                              ; preds = %85, %162
  %164 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 27
  %165 = load %"class.std::__1::vector.241"*, %"class.std::__1::vector.241"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::vector.241", %"class.std::__1::vector.241"* %165, i64 0, i32 0, i32 1
  %167 = bitcast %"class.gfx::Rect"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.std::__1::vector.241"* %165 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = sub i64 %168, %170
  %172 = ashr exact i64 %171, 4
  %173 = add nsw i64 %172, -1
  store i64 %173, i64* %6, align 8
  br label %174

174:                                              ; preds = %17, %81, %163, %7
  %175 = phi %"class.viz::DrawQuad"* [ null, %7 ], [ null, %17 ], [ %83, %163 ], [ null, %81 ]
  ret %"class.viz::DrawQuad"* %175
}

declare dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface14GetActiveFrameEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3viz17SurfaceAggregator23CanPotentiallyMergePassERKNS_15SurfaceDrawQuadE(%"class.viz::SurfaceDrawQuad"* nocapture readonly dereferenceable(160)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %0, i64 0, i32 0, i32 6
  %3 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %2, align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %3, i64 0, i32 7
  %9 = load float, float* %8, align 8
  %10 = fsub float 1.000000e+00, %9
  %11 = tail call float @llvm.fabs.f32(float %10) #16
  %12 = fcmp ugt float %11, 0x3F50624DE0000000
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %3, i64 0, i32 13
  %15 = load float, float* %14, align 8
  %16 = fcmp oeq float %15, 0.000000e+00
  br label %17

17:                                               ; preds = %7, %1, %13
  %18 = phi i1 [ false, %7 ], [ false, %1 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator17HandleSurfaceQuadEPKNS_15SurfaceDrawQuadEfRKN3gfx9TransformERKN4absl8optionalINS4_4RectEEEPNS_20AggregatedRenderPassEbPSA_PbRKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceDrawQuad"*, float, %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* dereferenceable(20), %"class.viz::AggregatedRenderPass"*, i1 zeroext, %"class.gfx::Rect"*, i8* nocapture, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.gfx::Transform", align 4
  %12 = alloca %"class.gfx::Rect", align 8
  %13 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  %27 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %26, align 8
  %28 = tail call %"class.viz::Surface"* @_ZN3viz14SurfaceManager24GetLatestInFlightSurfaceERKNS_12SurfaceRangeE(%"class.viz::SurfaceManager"* %27, %"class.viz::SurfaceRange"* dereferenceable(72) %13) #16
  %29 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %70, label %32

32:                                               ; preds = %10
  %33 = icmp eq %"class.viz::Surface"* %28, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %62, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %15
  br i1 %41, label %42, label %62

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %17
  br i1 %45, label %46, label %62

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, %19
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %21
  br i1 %53, label %54, label %62

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %23
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %25
  br i1 %61, label %77, label %62

62:                                               ; preds = %58, %34, %38, %54, %46, %50, %42, %32
  %63 = bitcast %"class.gfx::Transform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %63) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %64 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 6
  %65 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %64, align 8
  %66 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %11, i64 0, i32 0
  %67 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0
  %68 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %65, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %66, %class.SkMatrix44* dereferenceable(68) %67, %class.SkMatrix44* dereferenceable(68) %68) #16
  %69 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 2
  call void @_ZN3viz17SurfaceAggregator28AddSurfaceDamageToDamageListERKN3gfx4RectERKNS1_9TransformERKN4absl8optionalIS2_EEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Rect"* dereferenceable(16) %69, %"class.gfx::Transform"* nonnull dereferenceable(68) %11, %"class.absl::optional.268"* dereferenceable(20) %4, %"class.viz::CompositorRenderPass"* null, %"class.viz::AggregatedRenderPass"* %5, %"class.viz::Surface"* null)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %63) #16
  br label %70

70:                                               ; preds = %10, %62
  %71 = icmp eq %"class.viz::Surface"* %28, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72, %70
  call void @_ZN3viz17SurfaceAggregator30EmitDefaultBackgroundColorQuadEPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS4_4RectEEEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::SurfaceDrawQuad"* %1, %"class.gfx::Transform"* dereferenceable(68) %3, %"class.absl::optional.268"* dereferenceable(20) %4, %"class.viz::AggregatedRenderPass"* %5, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %9)
  br label %195

77:                                               ; preds = %58, %72
  %78 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %15
  br i1 %80, label %81, label %101

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %17
  br i1 %84, label %85, label %101

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, %19
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %21
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, %23
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %28, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, %25
  br i1 %100, label %194, label %101

101:                                              ; preds = %97, %77, %93, %85, %89, %81
  %102 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 4
  %103 = load i8, i8* %102, align 4, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %194

105:                                              ; preds = %101
  %106 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* nonnull %28) #16
  %107 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #16
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 1
  %110 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 16, i1 false)
  %111 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* nonnull %28) #16
  %112 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %111, i64 0, i32 2, i32 0, i32 1
  %113 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %113, i64 -1, i32 0, i32 0, i32 0
  %115 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %114, align 8
  %116 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %115, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %108, align 8
  store i32 0, i32* %109, align 4
  %117 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1
  %118 = bitcast %"class.gfx::Size"* %116 to i64*
  %119 = bitcast %"class.gfx::Size"* %117 to i64*
  %120 = load i64, i64* %118, align 4
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %106, i64 0, i32 0, i32 0
  %122 = load float, float* %121, align 8
  %123 = fdiv float %2, %122
  %124 = fcmp oeq float %123, 1.000000e+00
  %125 = trunc i64 %120 to i32
  %126 = lshr i64 %120, 32
  %127 = trunc i64 %126 to i32
  br i1 %124, label %128, label %134

128:                                              ; preds = %105
  %129 = bitcast %"class.gfx::Rect"* %12 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = trunc i64 %130 to i32
  %132 = lshr i64 %130, 32
  %133 = trunc i64 %132 to i32
  br label %177

134:                                              ; preds = %105
  %135 = fmul float %123, 0.000000e+00
  %136 = call float @llvm.floor.f32(float %135) #16
  %137 = fptosi float %136 to i32
  %138 = icmp eq i32 %125, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %134
  %140 = sitofp i32 %125 to float
  %141 = fmul float %123, %140
  %142 = call float @llvm.ceil.f32(float %141) #16
  %143 = fptosi float %142 to i32
  br label %144

144:                                              ; preds = %139, %134
  %145 = phi i32 [ %143, %139 ], [ %137, %134 ]
  %146 = icmp eq i32 %127, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %144
  %148 = sitofp i32 %127 to float
  %149 = fmul float %123, %148
  %150 = call float @llvm.ceil.f32(float %149) #16
  %151 = fptosi float %150 to i32
  br label %152

152:                                              ; preds = %147, %144
  %153 = phi i32 [ %151, %147 ], [ %137, %144 ]
  %154 = sub nsw i32 %145, %137
  %155 = sub nsw i32 %153, %137
  %156 = icmp sgt i32 %137, 0
  %157 = icmp sgt i32 %154, 0
  %158 = and i1 %156, %157
  %159 = sub nuw nsw i32 2147483647, %137
  %160 = icmp ult i32 %159, %154
  %161 = and i1 %160, %158
  %162 = select i1 %161, i32 %159, i32 %154
  %163 = icmp sgt i32 %155, 0
  %164 = and i1 %156, %163
  %165 = icmp ult i32 %159, %155
  %166 = and i1 %165, %164
  %167 = select i1 %166, i32 %159, i32 %155
  %168 = icmp sgt i32 %162, 0
  %169 = select i1 %168, i32 %162, i32 0
  %170 = zext i32 %169 to i64
  %171 = icmp sgt i32 %167, 0
  %172 = select i1 %171, i32 %167, i32 0
  %173 = zext i32 %172 to i64
  %174 = shl nuw nsw i64 %173, 32
  %175 = or i64 %174, %170
  %176 = bitcast %"class.gfx::Rect"* %12 to i64*
  br label %177

177:                                              ; preds = %128, %152
  %178 = phi i64* [ %129, %128 ], [ %176, %152 ]
  %179 = phi i32 [ %133, %128 ], [ %137, %152 ]
  %180 = phi i32 [ %131, %128 ], [ %137, %152 ]
  %181 = phi i64 [ %120, %128 ], [ %175, %152 ]
  %182 = zext i32 %179 to i64
  %183 = shl nuw i64 %182, 32
  %184 = zext i32 %180 to i64
  %185 = or i64 %183, %184
  store i64 %185, i64* %178, align 8
  store i64 %181, i64* %119, align 8
  %186 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 2
  %187 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %12, %"class.gfx::Rect"* dereferenceable(16) %186) #16
  %188 = extractvalue { i64, i64 } %187, 0
  %189 = extractvalue { i64, i64 } %187, 1
  store i64 %188, i64* %178, align 8
  store i64 %189, i64* %119, align 8
  %190 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 6
  %191 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %190, align 8
  %192 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %106, i64 0, i32 0, i32 7
  %193 = load i32, i32* %192, align 4
  call void @_ZN3viz17SurfaceAggregator26EmitGutterQuadsIfNecessaryERKN3gfx4RectES4_PKNS_15SharedQuadStateERKNS1_9TransformERKN4absl8optionalIS2_EEjPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Rect"* dereferenceable(16) %186, %"class.gfx::Rect"* nonnull dereferenceable(16) %12, %"class.viz::SharedQuadState"* %191, %"class.gfx::Transform"* dereferenceable(68) %3, %"class.absl::optional.268"* dereferenceable(20) %4, i32 %193, %"class.viz::AggregatedRenderPass"* %5, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #16
  br label %194

194:                                              ; preds = %97, %101, %177
  call void @_ZN3viz17SurfaceAggregator18EmitSurfaceContentEPNS_7SurfaceEfPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS6_4RectEEEPNS_20AggregatedRenderPassEbPSC_PbRKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* nonnull %28, float %2, %"class.viz::SurfaceDrawQuad"* %1, %"class.gfx::Transform"* dereferenceable(68) %3, %"class.absl::optional.268"* dereferenceable(20) %4, %"class.viz::AggregatedRenderPass"* %5, i1 zeroext %6, %"class.gfx::Rect"* %7, i8* %8, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %9)
  br label %195

195:                                              ; preds = %194, %76
  ret void
}

declare %"class.viz::Surface"* @_ZN3viz14SurfaceManager24GetLatestInFlightSurfaceERKNS_12SurfaceRangeE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceRange"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator30EmitDefaultBackgroundColorQuadEPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS4_4RectEEEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.viz::SurfaceDrawQuad"*, %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* nocapture readonly dereferenceable(20), %"class.viz::AggregatedRenderPass"*, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %23, label %11, !prof !27

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 2
  call void @_ZNK3viz12SurfaceRange8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.viz::SurfaceRange"* %13) #16
  %14 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  %15 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %11, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  br label %23

23:                                               ; preds = %6, %22
  %24 = phi i64 [ -6148914691236517206, %6 ], [ %14, %22 ]
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), %22 ]
  %26 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %22 ]
  %27 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 6
  %30 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %29, align 8
  %31 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %30, i64 0, i32 1
  %33 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %30, i64 0, i32 2
  %34 = call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %30, %"class.gfx::Transform"* dereferenceable(68) %31, %"class.gfx::Transform"* dereferenceable(68) %2, %"class.gfx::Rect"* dereferenceable(16) %32, %"class.gfx::Rect"* dereferenceable(16) %33, %"class.absl::optional.268"* dereferenceable(20) %3, %"class.viz::AggregatedRenderPass"* %4, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %5) #16
  %35 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %4, i64 0, i32 0, i32 11, i32 0, i32 0
  %36 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %35, i64 8, i64 88) #16
  %37 = bitcast i8* %36 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %37) #16
  %38 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %1, i64 0, i32 0, i32 3
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %37, %"class.viz::SharedQuadState"* %34, %"class.gfx::Rect"* dereferenceable(16) %38, %"class.gfx::Rect"* dereferenceable(16) %39, i32 %28, i1 zeroext false) #16
  %40 = icmp eq i8* %26, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %23
  %42 = load i8, i8* %26, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %26, i8* %25, i64 %24) #16
  br label %45

45:                                               ; preds = %23, %41, %44
  ret void
}

declare dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator26EmitGutterQuadsIfNecessaryERKN3gfx4RectES4_PKNS_15SharedQuadStateERKNS1_9TransformERKN4absl8optionalIS2_EEjPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.viz::SharedQuadState"*, %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* nocapture readonly dereferenceable(20), i32, %"class.viz::AggregatedRenderPass"*, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = icmp eq i32 %6, 0
  br i1 %12, label %98, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %15
  br i1 %18, label %19, label %56

19:                                               ; preds = %13
  %20 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, %15
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sub nsw i32 %17, %15
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  store i32 %27, i32* %21, align 4
  store i32 %29, i32* %22, align 4
  %33 = icmp sgt i32 %27, 0
  %34 = icmp sgt i32 %30, 0
  %35 = and i1 %34, %33
  %36 = sub nuw nsw i32 2147483647, %27
  %37 = icmp ult i32 %36, %30
  %38 = and i1 %37, %35
  %39 = select i1 %38, i32 %36, i32 %30
  %40 = icmp sgt i32 %29, 0
  %41 = icmp sgt i32 %32, 0
  %42 = and i1 %40, %41
  %43 = sub nuw nsw i32 2147483647, %29
  %44 = icmp ult i32 %43, %32
  %45 = and i1 %44, %42
  %46 = select i1 %45, i32 %43, i32 %32
  %47 = icmp sgt i32 %39, 0
  %48 = select i1 %47, i32 %39, i32 0
  store i32 %48, i32* %23, align 4
  %49 = icmp sgt i32 %46, 0
  %50 = select i1 %49, i32 %46, i32 0
  store i32 %50, i32* %24, align 4
  %51 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %3, i64 0, i32 0
  %52 = call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %3, %"class.gfx::Transform"* dereferenceable(68) %51, %"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.absl::optional.268"* dereferenceable(20) %5, %"class.viz::AggregatedRenderPass"* %7, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %8)
  %53 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %7, i64 0, i32 0, i32 11, i32 0, i32 0
  %54 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %53, i64 8, i64 88) #16
  %55 = bitcast i8* %54 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %55) #16
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %55, %"class.viz::SharedQuadState"* %52, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, i32 %6, i1 zeroext false) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #16
  br label %56

56:                                               ; preds = %19, %13
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %58
  br i1 %61, label %62, label %98

62:                                               ; preds = %56
  %63 = bitcast %"class.gfx::Rect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #16
  %64 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, %58
  %73 = load i32, i32* %14, align 4
  %74 = sub nsw i32 %60, %58
  store i32 %69, i32* %64, align 4
  store i32 %72, i32* %65, align 4
  %75 = icmp sgt i32 %69, 0
  %76 = icmp sgt i32 %73, 0
  %77 = and i1 %75, %76
  %78 = sub nuw nsw i32 2147483647, %69
  %79 = icmp ult i32 %78, %73
  %80 = and i1 %79, %77
  %81 = select i1 %80, i32 %78, i32 %73
  %82 = icmp sgt i32 %72, 0
  %83 = icmp sgt i32 %74, 0
  %84 = and i1 %83, %82
  %85 = sub nuw nsw i32 2147483647, %72
  %86 = icmp ult i32 %85, %74
  %87 = and i1 %86, %84
  %88 = select i1 %87, i32 %85, i32 %74
  %89 = icmp sgt i32 %81, 0
  %90 = select i1 %89, i32 %81, i32 0
  store i32 %90, i32* %66, align 4
  %91 = icmp sgt i32 %88, 0
  %92 = select i1 %91, i32 %88, i32 0
  store i32 %92, i32* %67, align 4
  %93 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %3, i64 0, i32 0
  %94 = call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %3, %"class.gfx::Transform"* dereferenceable(68) %93, %"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, %"class.absl::optional.268"* dereferenceable(20) %5, %"class.viz::AggregatedRenderPass"* %7, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %8)
  %95 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %7, i64 0, i32 0, i32 11, i32 0, i32 0
  %96 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %95, i64 8, i64 88) #16
  %97 = bitcast i8* %96 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %97) #16
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %97, %"class.viz::SharedQuadState"* %94, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, i32 %6, i1 zeroext false) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #16
  br label %98

98:                                               ; preds = %56, %62, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator18EmitSurfaceContentEPNS_7SurfaceEfPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS6_4RectEEEPNS_20AggregatedRenderPassEbPSC_PbRKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*, float, %"class.viz::SurfaceDrawQuad"*, %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* nocapture readonly dereferenceable(20), %"class.viz::AggregatedRenderPass"*, i1 zeroext, %"class.gfx::Rect"*, i8* nocapture, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"class.gfx::Transform", align 4
  %14 = alloca %"class.gfx::Transform", align 4
  %15 = alloca %"class.viz::SurfaceId", align 16
  %16 = alloca %"class.gfx::Transform", align 4
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %"class.std::__1::multimap", align 8
  %19 = alloca %"class.gfx::Transform", align 4
  %20 = alloca %"class.absl::optional.268", align 4
  %21 = alloca { i64, i64 }, align 8
  %22 = bitcast { i64, i64 }* %21 to %"class.gfx::Rect"*
  %23 = alloca %"class.absl::optional.268", align 4
  %24 = alloca %"class.absl::optional.268", align 4
  %25 = alloca %"class.gfx::Rect", align 4
  %26 = alloca %"class.gfx::Transform", align 4
  %27 = alloca %"class.std::__1::unique_ptr.230", align 8
  %28 = alloca %"class.gfx::Rect", align 4
  %29 = alloca %"class.gfx::Transform", align 4
  %30 = alloca %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", align 4
  %31 = alloca %"class.gfx::Transform", align 4
  %32 = alloca { i64, i64 }, align 8
  %33 = bitcast { i64, i64 }* %32 to %"class.gfx::Rect"*
  %34 = alloca { i64, i64 }, align 8
  %35 = bitcast { i64, i64 }* %34 to %"class.gfx::Rect"*
  %36 = alloca { i64, i64 }, align 8
  %37 = bitcast { i64, i64 }* %36 to %"class.gfx::Rect"*
  %38 = alloca %"class.gfx::Rect", align 4
  %39 = alloca { i64, i64 }, align 8
  %40 = bitcast { i64, i64 }* %39 to %"class.gfx::Rect"*
  %41 = alloca %"class.gfx::RectF", align 4
  %42 = alloca %"class.gfx::RectF", align 4
  %43 = alloca %"class.gfx::Size", align 4
  %44 = alloca %"class.gfx::Vector2dF", align 4
  %45 = alloca %"class.gfx::PointF", align 4
  %46 = bitcast %"class.viz::SurfaceId"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #16
  %47 = bitcast %"class.viz::Surface"* %1 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = bitcast %"class.viz::SurfaceId"* %15 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %49, align 16
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %15, i64 0, i32 1, i32 2
  %51 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2
  %52 = bitcast %"class.base::UnguessableToken"* %50 to i8*
  %53 = bitcast %"class.base::UnguessableToken"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #16
  %54 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11
  %55 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %54, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  %56 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %55, 0
  %57 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %55, 1
  %58 = icmp eq %"class.viz::SurfaceId"* %57, %56
  br i1 %58, label %59, label %988

59:                                               ; preds = %11
  %60 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %64, !prof !28

63:                                               ; preds = %59
  call void @llvm.trap() #16
  unreachable

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* %1) #16
  %69 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 4
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 2, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = sitofp i32 %74 to float
  %76 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 2, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -1, i32 0, i32 0, i32 0
  %79 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %78, align 8
  %80 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %79, i64 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  %83 = fdiv float %75, %82
  %84 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 2, i32 1, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  %87 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %79, i64 0, i32 0, i32 0, i32 1, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  %90 = fdiv float %86, %89
  br label %95

91:                                               ; preds = %64
  %92 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 0, i32 0
  %93 = load float, float* %92, align 8
  %94 = fdiv float %2, %93
  br label %95

95:                                               ; preds = %91, %72
  %96 = phi float [ %90, %72 ], [ %94, %91 ]
  %97 = phi float [ %83, %72 ], [ %94, %91 ]
  %98 = fdiv float 1.000000e+00, %97
  %99 = fdiv float 1.000000e+00, %96
  %100 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 6
  %101 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %100, align 8
  %102 = bitcast %"class.gfx::Transform"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %102) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %103 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 0
  %104 = bitcast %"class.viz::SharedQuadState"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %104, i64 68, i1 false) #16
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %16, float %97, float %96) #16
  %105 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator18EmitSurfaceContentEPNS_7SurfaceEfPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS6_4RectEEEPNS_20AggregatedRenderPassEbPSC_PbRKNS0_17MaskFilterInfoExtEE28trace_event_unique_atomic557 monotonic, align 8
  %106 = inttoptr i64 %105 to i8*
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %111, !prof !28

108:                                              ; preds = %95
  %109 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #16
  %110 = ptrtoint i8* %109 to i64
  store atomic volatile i64 %110, i64* @_ZZN3viz17SurfaceAggregator18EmitSurfaceContentEPNS_7SurfaceEfPKNS_15SurfaceDrawQuadERKN3gfx9TransformERKN4absl8optionalINS6_4RectEEEPNS_20AggregatedRenderPassEbPSC_PbRKNS0_17MaskFilterInfoExtEE28trace_event_unique_atomic557 monotonic, align 8
  br label %111

111:                                              ; preds = %108, %95
  %112 = phi i8* [ %109, %108 ], [ %106, %95 ]
  %113 = load i8, i8* %112, align 1
  %114 = and i8 %113, 25
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116, !prof !27

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 0, i32 12, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 34
  %120 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA19_KcRlEEN4base11trace_event16TraceEventHandleEcPKhPS1_SA_yjySA_OT_SA_OT0_(i8 signext 88, i8* %112, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 4480, i64 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), [19 x i8]* nonnull dereferenceable(19) @.str.3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64* dereferenceable(8) %119)
  br label %121

121:                                              ; preds = %111, %116
  %122 = phi i8* [ null, %111 ], [ %112, %116 ]
  %123 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %111 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), %116 ]
  %124 = phi i64 [ -6148914691236517206, %111 ], [ %120, %116 ]
  %125 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 3
  br i1 %7, label %126, label %148

126:                                              ; preds = %121
  %127 = bitcast %"class.gfx::Transform"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %127) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %127, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %128 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0
  %129 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0
  %130 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %128, %class.SkMatrix44* dereferenceable(68) %129, %class.SkMatrix44* dereferenceable(68) %130) #16
  %131 = bitcast %"class.gfx::Transform"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %131) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false) #16
  %132 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %13, i64 0, i32 0
  %133 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 2, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %132, %class.SkMatrix44* dereferenceable(68) %133, %class.SkMatrix44* nonnull dereferenceable(68) %128) #16
  %134 = bitcast %"class.gfx::Transform"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %134) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %134, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false) #16
  %135 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %13, %"class.gfx::Transform"* nonnull %14) #16
  br i1 %135, label %137, label %136

136:                                              ; preds = %126
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %134) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %131) #16
  store i8 0, i8* %9, align 1
  br label %147

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 26
  %139 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %14, %"class.gfx::Rect"* dereferenceable(16) %138) #16
  %140 = extractvalue { i64, i64 } %139, 0
  %141 = extractvalue { i64, i64 } %139, 1
  %142 = bitcast %"class.gfx::Rect"* %8 to i64*
  store i64 %140, i64* %142, align 4
  %143 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %144 = bitcast %"class.gfx::Size"* %143 to i64*
  store i64 %141, i64* %144, align 4
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %134) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %131) #16
  store i8 1, i8* %9, align 1
  %145 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %8, %"class.gfx::Rect"* dereferenceable(16) %125) #16
  br i1 %145, label %147, label %146

146:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %127) #16
  br label %981

147:                                              ; preds = %136, %137
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %127) #16
  br label %148

148:                                              ; preds = %147, %121
  %149 = bitcast %"class.std::__1::multimap"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #16
  %150 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %18, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %154 = bitcast %"class.std::__1::__tree_node_base"** %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %153, %"class.std::__1::__tree_end_node"** %150, align 8
  call void @_ZN3viz7Surface22TakeCopyOutputRequestsEPNSt3__18multimapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS1_10unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS1_9allocatorINS1_4pairIKS6_SB_EEEEEE(%"class.viz::Surface"* %1, %"class.std::__1::multimap"* nonnull %18) #16
  %155 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 2
  %156 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19
  %157 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %156, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  %158 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %157, 0
  %159 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %157, 1
  %160 = icmp eq %"class.viz::SurfaceId"* %159, %158
  br i1 %160, label %977, label %161

161:                                              ; preds = %148
  %162 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %54, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  %163 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  %164 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %163, align 8
  %165 = call i32 @_ZN3viz17SurfaceAggregator17ChildIdForSurfaceEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1)
  %166 = call dereferenceable(40) %"class.std::__1::unordered_map.554"* @_ZNK3viz23DisplayResourceProvider19GetChildToParentMapEi(%"class.viz::DisplayResourceProvider"* %164, i32 %165) #16
  %167 = bitcast %"class.gfx::Transform"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %167) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %167, i8* nonnull align 4 %102, i64 68, i1 false) #16
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %19, %"class.gfx::Transform"* dereferenceable(68) %4) #16
  %168 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 5
  %169 = load i8, i8* %168, align 1, !range !2
  %170 = icmp ne i8 %169, 0
  %171 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %16, i64 0, i32 0, i32 1
  %172 = load i8, i8* %171, align 4
  %173 = icmp ugt i8 %172, 1
  %174 = and i1 %173, %170
  %175 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %100, align 8
  %176 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 6
  %177 = load i8, i8* %176, align 2, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %161
  %180 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %175, i64 0, i32 7
  %181 = load float, float* %180, align 8
  %182 = fsub float 1.000000e+00, %181
  %183 = call float @llvm.fabs.f32(float %182) #16
  %184 = fcmp ugt float %183, 0x3F50624DE0000000
  br i1 %184, label %196, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %175, i64 0, i32 13
  %187 = load float, float* %186, align 8
  %188 = fcmp une float %187, 0.000000e+00
  %189 = or i1 %174, %188
  %190 = xor i1 %189, true
  %191 = load i64, i64* %152, align 8
  %192 = icmp eq i64 %191, 0
  %193 = and i1 %192, %190
  br i1 %193, label %194, label %196

194:                                              ; preds = %185
  %195 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nonnull %19) #16
  br i1 %195, label %198, label %196

196:                                              ; preds = %185, %194, %179, %161
  %197 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %197) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %197, i8 -86, i64 20, i1 false)
  store i8 0, i8* %197, align 4
  br label %244

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 2, i32 0, i32 1
  %200 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %200, i64 -1, i32 0, i32 0, i32 0
  %202 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %201, align 8
  %203 = call zeroext i1 @_ZN3viz17SurfaceAggregator22CanMergeMaskFilterInfoERKNS0_17MaskFilterInfoExtERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* undef, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %10, %"class.viz::CompositorRenderPass"* dereferenceable(280) %202)
  %204 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %204) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 20, i1 false)
  store i8 0, i8* %204, align 4
  br i1 %203, label %205, label %244

205:                                              ; preds = %198
  %206 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #16
  %207 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %208 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 -86, i64 16, i1 false)
  %209 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %103, %"class.gfx::Rect"* dereferenceable(16) %125) #16
  %210 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %211 = extractvalue { i64, i64 } %209, 0
  store i64 %211, i64* %210, align 8
  %212 = extractvalue { i64, i64 } %209, 1
  store i64 %212, i64* %207, align 8
  %213 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %214 = load i8, i8* %213, align 4, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %22, %"class.gfx::Rect"* dereferenceable(16) %217) #16
  br label %218

218:                                              ; preds = %205, %216
  %219 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %219) #16
  %220 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %220) #16
  store i8 1, i8* %220, align 4
  %221 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %222 = bitcast %"class.gfx::Rect"* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* nonnull align 8 %206, i64 16, i1 false) #16
  %223 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %219, i8 -86, i64 20, i1 false) #16, !alias.scope !29
  store i8 0, i8* %219, align 4, !alias.scope !29
  %224 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8, i8* %224, align 4, !range !2, !noalias !29
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %219, i8* align 4 %224, i64 20, i1 false) #16
  %228 = load i8, i8* %219, align 4, !range !2, !alias.scope !29
  br label %229

229:                                              ; preds = %218, %227
  %230 = phi i8 [ 0, %218 ], [ %228, %227 ]
  %231 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #16, !noalias !29
  %232 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %233 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* dereferenceable(16) %221) #16, !noalias !29
  %234 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %235 = extractvalue { i64, i64 } %233, 0
  store i64 %235, i64* %234, align 8, !noalias !29
  %236 = extractvalue { i64, i64 } %233, 1
  store i64 %236, i64* %232, align 8, !noalias !29
  %237 = icmp eq i8 %230, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %229
  %239 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %239, %"class.gfx::Rect"* nonnull dereferenceable(16) %223) #16
  br label %243

240:                                              ; preds = %229
  %241 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %23, i64 0, i32 0, i32 0, i32 0, i32 1
  %242 = bitcast %union.anon.272* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %242, i8* nonnull align 8 %231, i64 16, i1 false) #16
  store i8 1, i8* %219, align 4, !alias.scope !29
  br label %243

243:                                              ; preds = %238, %240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #16, !noalias !29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %204, i8* nonnull align 4 %219, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %220) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %219) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #16
  br label %244

244:                                              ; preds = %196, %243, %198
  %245 = phi i8* [ %197, %196 ], [ %204, %243 ], [ %204, %198 ]
  %246 = phi i1 [ false, %196 ], [ true, %243 ], [ false, %198 ]
  %247 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 3
  %248 = load i8, i8* %247, align 1, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %257, label %250

250:                                              ; preds = %244
  %251 = bitcast %"class.gfx::Rect"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251) #16
  %252 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 2, i32 0, i32 1
  %253 = bitcast %"class.gfx::Rect"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %253, i8 0, i64 16, i1 false)
  %254 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %252, align 8
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %254, i64 -1, i32 0, i32 0, i32 0
  %256 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %255, align 8
  call void @_ZN3viz17SurfaceAggregator28AddSurfaceDamageToDamageListERKN3gfx4RectERKNS1_9TransformERKN4absl8optionalIS2_EEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %25, %"class.gfx::Transform"* nonnull dereferenceable(68) %19, %"class.absl::optional.268"* nonnull dereferenceable(20) %20, %"class.viz::CompositorRenderPass"* %256, %"class.viz::AggregatedRenderPass"* %6, %"class.viz::Surface"* %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251) #16
  br label %257

257:                                              ; preds = %244, %250
  %258 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %259 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %258, align 8
  %260 = icmp eq %"class.gfx::DelegatedInkMetadata"* %259, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %257
  %262 = bitcast %"class.gfx::Transform"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %262) #16
  %263 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %26, i64 0, i32 0
  %264 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 2, i32 0
  %265 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %19, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %263, %class.SkMatrix44* dereferenceable(68) %264, %class.SkMatrix44* nonnull dereferenceable(68) %265) #16
  %266 = call %"class.gfx::DelegatedInkMetadata"* @_ZN3viz7Surface24TakeDelegatedInkMetadataEv(%"class.viz::Surface"* %1) #16
  call void @_ZN3viz17SurfaceAggregator37TransformAndStoreDelegatedInkMetadataERKN3gfx9TransformENSt3__110unique_ptrINS1_20DelegatedInkMetadataENS5_14default_deleteIS7_EEEE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Transform"* nonnull dereferenceable(68) %26, %"class.gfx::DelegatedInkMetadata"* %266)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %262) #16
  br label %267

267:                                              ; preds = %257, %261
  %268 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 2, i32 0, i32 1
  %269 = bitcast %"class.std::__1::unique_ptr.359"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector.357"* %155 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = ashr exact i64 %273, 3
  %275 = zext i1 %246 to i64
  %276 = sub nsw i64 %274, %275
  %277 = icmp eq i64 %276, 0
  %278 = inttoptr i64 %270 to %"class.std::__1::unique_ptr.359"*
  br i1 %277, label %320, label %279

279:                                              ; preds = %267
  %280 = inttoptr i64 %272 to %"class.std::__1::unique_ptr.359"*
  %281 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %155, i64 0, i32 0, i32 0
  %282 = bitcast %"class.std::__1::unique_ptr.230"* %27 to i8*
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %27, i64 0, i32 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::unique_ptr.230"* %27 to i8**
  %285 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %286 = bitcast %"class.gfx::Rect"* %28 to i8*
  %287 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 0, i32 1
  %289 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 1, i32 0
  %290 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %28, i64 0, i32 1, i32 1
  %291 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 7
  %292 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 28
  %293 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 2
  %294 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 0, i32 0
  %295 = bitcast %"class.gfx::Transform"* %29 to i8*
  %296 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %29, i64 0, i32 0, i32 1
  %297 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %30 to i8*
  %298 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %300 = bitcast %"class.util::IdType"** %299 to i64*
  %301 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %302 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %303 = bitcast %"class.util::IdType"** %302 to i64*
  %304 = bitcast %"class.gfx::Transform"* %31 to i8*
  %305 = bitcast { i64, i64 }* %32 to i8*
  %306 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 1
  %307 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 26
  %308 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 0
  %309 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24
  %310 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %312 = bitcast %"class.util::IdType"** %311 to i64*
  %313 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %309, i64 0, i32 0
  %314 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %315 = bitcast %"class.std::__1::unique_ptr.230"* %27 to i64*
  %316 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %30 to i8*
  %317 = bitcast { i64, i64 }* %32 to i8*
  br label %334

318:                                              ; preds = %565
  %319 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %268, align 8
  br label %320

320:                                              ; preds = %318, %267
  %321 = phi %"class.std::__1::unique_ptr.359"* [ %319, %318 ], [ %278, %267 ]
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %321, i64 -1, i32 0, i32 0, i32 0
  %323 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %322, align 8
  %324 = call { i64, i64 } @_ZNK3viz17SurfaceAggregator20DamageRectForSurfaceEPKNS_7SurfaceERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1, %"class.viz::CompositorRenderPass"* dereferenceable(280) %323)
  %325 = extractvalue { i64, i64 } %324, 1
  %326 = trunc i64 %325 to i32
  %327 = icmp ne i32 %326, 0
  %328 = icmp ugt i64 %325, 4294967295
  %329 = and i1 %328, %327
  %330 = zext i1 %329 to i8
  %331 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 8
  %332 = load i8, i8* %331, align 2, !range !2
  %333 = or i8 %332, %330
  store i8 %333, i8* %331, align 2
  br i1 %246, label %570, label %573

334:                                              ; preds = %568, %279
  %335 = phi %"class.std::__1::unique_ptr.359"* [ %280, %279 ], [ %569, %568 ]
  %336 = phi i64 [ 0, %279 ], [ %566, %568 ]
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %335, i64 %336, i32 0, i32 0, i32 0
  %338 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %337, align 8
  %339 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 12, i32 0
  %340 = call i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"* %339) #16
  %341 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 11, i32 0, i32 0
  %342 = call i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"* %341) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %282) #16
  store %"class.viz::AggregatedRenderPass"* inttoptr (i64 -6148914691236517206 to %"class.viz::AggregatedRenderPass"*), %"class.viz::AggregatedRenderPass"** %283, align 8
  %343 = call i8* @_Znwm(i64 272) #17
  %344 = bitcast i8* %343 to %"class.viz::AggregatedRenderPass"*
  call void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"* nonnull %344, i64 %340, i64 %342) #16
  store i8* %343, i8** %284, align 8
  %345 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 1, i32 0, i32 0
  %346 = load i64, i64* %345, align 8
  %347 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %285, i64 %346, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %286) #16
  %348 = bitcast %"class.viz::CompositorRenderPass"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %286, i8* align 8 %348, i64 16, i1 false)
  %349 = load i32, i32* %291, align 8
  %350 = icmp sgt i32 %349, 0
  br i1 %350, label %351, label %378

351:                                              ; preds = %334
  %352 = load i32, i32* %289, align 4
  %353 = icmp slt i32 %349, %352
  %354 = select i1 %353, i32 %349, i32 %352
  %355 = load i32, i32* %287, align 4
  %356 = icmp sgt i32 %355, 0
  %357 = icmp sgt i32 %354, 0
  %358 = and i1 %356, %357
  %359 = sub nuw nsw i32 2147483647, %355
  %360 = icmp ult i32 %359, %354
  %361 = and i1 %360, %358
  %362 = select i1 %361, i32 %359, i32 %354
  %363 = icmp sgt i32 %362, 0
  %364 = select i1 %363, i32 %362, i32 0
  store i32 %364, i32* %289, align 4
  %365 = load i32, i32* %290, align 4
  %366 = icmp slt i32 %349, %365
  %367 = select i1 %366, i32 %349, i32 %365
  %368 = load i32, i32* %288, align 4
  %369 = icmp sgt i32 %368, 0
  %370 = icmp sgt i32 %367, 0
  %371 = and i1 %369, %370
  %372 = sub nuw nsw i32 2147483647, %368
  %373 = icmp ult i32 %372, %367
  %374 = and i1 %373, %371
  %375 = select i1 %374, i32 %372, i32 %367
  %376 = icmp sgt i32 %375, 0
  %377 = select i1 %376, i32 %375, i32 0
  store i32 %377, i32* %290, align 4
  br label %378

378:                                              ; preds = %351, %334
  %379 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %380 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 2
  %381 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 3
  %382 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 4
  %383 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 5
  %384 = load i8, i8* %292, align 8
  %385 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 6
  %386 = load i8, i8* %385, align 8, !range !2
  %387 = icmp ne i8 %386, 0
  %388 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 7
  %389 = load i8, i8* %388, align 1, !range !2
  %390 = icmp ne i8 %389, 0
  %391 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 8
  %392 = load i8, i8* %391, align 2, !range !2
  %393 = icmp ne i8 %392, 0
  %394 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %338, i64 0, i32 0, i32 9
  %395 = load i8, i8* %394, align 1, !range !2
  %396 = icmp ne i8 %395, 0
  call void @_ZN3viz20AggregatedRenderPass6SetAllEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformERKN2cc16FilterOperationsESE_RKN4absl8optionalINS4_6RRectFEEENS4_17ContentColorUsageEbbbb(%"class.viz::AggregatedRenderPass"* %379, i64 %347, %"class.gfx::Rect"* nonnull dereferenceable(16) %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %28, %"class.gfx::Transform"* dereferenceable(68) %380, %"class.cc::FilterOperations"* dereferenceable(24) %381, %"class.cc::FilterOperations"* dereferenceable(24) %382, %"class.absl::optional.253"* dereferenceable(56) %383, i8 zeroext %384, i1 zeroext %387, i1 zeroext %390, i1 zeroext %393, i1 zeroext %396) #16
  %397 = load i64, i64* %345, align 8
  %398 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %399 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %398, i64 0, i32 0, i32 10
  call fastcc void @_ZN3viz12_GLOBAL__N_120MoveMatchingRequestsEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEEPNSt3__18multimapIS4_NS5_10unique_ptrINS_17CopyOutputRequestENS5_14default_deleteIS8_EEEENS5_4lessIS4_EENS5_9allocatorINS5_4pairIKS4_SB_EEEEEEPNS5_6vectorISB_NSE_ISB_EEEE(i64 %397, %"class.std::__1::multimap"* nonnull %18, %"class.std::__1::vector.258"* %399)
  %400 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %401 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %400, i64 0, i32 0, i32 2
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %401, %"class.gfx::Transform"* nonnull dereferenceable(68) %16) #16
  %402 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %403 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %402, i64 0, i32 0, i32 2
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %403, %"class.gfx::Transform"* dereferenceable(68) %4) #16
  %404 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %405 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %404, i64 0, i32 0, i32 2
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %405, %"class.gfx::Transform"* dereferenceable(68) %293) #16
  %406 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %407 = load float, float* %294, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %295) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %295, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  store i8 0, i8* %296, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %297) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %316, i8 0, i64 56, i1 false)
  call void @_ZN3viz17SurfaceAggregator15CopyQuadsToPassERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEfRKNSt3__113unordered_mapIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEESB_NS_16ResourceIdHasherENS6_8equal_toISB_EENS6_9allocatorINS6_4pairIKSB_SB_EEEEEERKN3gfx9TransformERKN4absl8optionalINSN_4RectEEEPKNS_7SurfaceERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::CompositorRenderPass"* dereferenceable(280) %338, %"class.viz::AggregatedRenderPass"* %406, float %407, %"class.std::__1::unordered_map.554"* dereferenceable(40) %166, %"class.gfx::Transform"* nonnull dereferenceable(68) %29, %"class.absl::optional.268"* dereferenceable(20) bitcast ({ i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } }* @.ref.tmp.5 to %"class.absl::optional.268"*), %"class.viz::Surface"* %1, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* nonnull dereferenceable(56) %30)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %297) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %295) #16
  %408 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %409 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %408, i64 0, i32 1
  %410 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %408, i64 0, i32 0, i32 7
  %411 = load i8, i8* %410, align 1, !range !2
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %504

413:                                              ; preds = %378
  %414 = load %"class.util::IdType"*, %"class.util::IdType"** %298, align 8
  %415 = load i64, i64* %300, align 8
  %416 = ptrtoint %"class.util::IdType"* %414 to i64
  %417 = sub i64 %415, %416
  %418 = icmp eq i64 %417, 0
  %419 = inttoptr i64 %415 to %"class.util::IdType"*
  br i1 %418, label %440, label %420

420:                                              ; preds = %413
  %421 = ashr exact i64 %417, 3
  %422 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %409, i64 0, i32 0, i32 0
  %423 = load i64, i64* %422, align 8
  br label %424

424:                                              ; preds = %424, %420
  %425 = phi %"class.util::IdType"* [ %414, %420 ], [ %436, %424 ]
  %426 = phi i64 [ %421, %420 ], [ %435, %424 ]
  %427 = lshr i64 %426, 1
  %428 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %425, i64 %427
  %429 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %428, i64 0, i32 0, i32 0
  %430 = load i64, i64* %429, align 8
  %431 = icmp ult i64 %430, %423
  %432 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %428, i64 1
  %433 = xor i64 %427, -1
  %434 = add i64 %426, %433
  %435 = select i1 %431, i64 %434, i64 %427
  %436 = select i1 %431, %"class.util::IdType"* %432, %"class.util::IdType"* %425
  %437 = icmp eq i64 %435, 0
  br i1 %437, label %438, label %424

438:                                              ; preds = %424
  %439 = ptrtoint %"class.util::IdType"* %436 to i64
  br label %440

440:                                              ; preds = %438, %413
  %441 = phi i64 [ %439, %438 ], [ %416, %413 ]
  %442 = phi %"class.util::IdType"* [ %436, %438 ], [ %414, %413 ]
  %443 = icmp eq %"class.util::IdType"* %442, %419
  br i1 %443, label %450, label %444

444:                                              ; preds = %440
  %445 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %409, i64 0, i32 0, i32 0
  %446 = load i64, i64* %445, align 8
  %447 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %442, i64 0, i32 0, i32 0
  %448 = load i64, i64* %447, align 8
  %449 = icmp ult i64 %446, %448
  br i1 %449, label %450, label %504

450:                                              ; preds = %444, %440
  %451 = ptrtoint %"class.util::IdType"* %442 to i64
  %452 = icmp eq i64 %441, %451
  br i1 %452, label %453, label %504

453:                                              ; preds = %450
  %454 = load %"class.util::IdType"*, %"class.util::IdType"** %301, align 8
  %455 = load i64, i64* %303, align 8
  %456 = ptrtoint %"class.util::IdType"* %454 to i64
  %457 = sub i64 %455, %456
  %458 = icmp eq i64 %457, 0
  %459 = inttoptr i64 %455 to %"class.util::IdType"*
  br i1 %458, label %480, label %460

460:                                              ; preds = %453
  %461 = ashr exact i64 %457, 3
  %462 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %409, i64 0, i32 0, i32 0
  %463 = load i64, i64* %462, align 8
  br label %464

464:                                              ; preds = %464, %460
  %465 = phi %"class.util::IdType"* [ %454, %460 ], [ %476, %464 ]
  %466 = phi i64 [ %461, %460 ], [ %475, %464 ]
  %467 = lshr i64 %466, 1
  %468 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %465, i64 %467
  %469 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %468, i64 0, i32 0, i32 0
  %470 = load i64, i64* %469, align 8
  %471 = icmp ult i64 %470, %463
  %472 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %468, i64 1
  %473 = xor i64 %467, -1
  %474 = add i64 %466, %473
  %475 = select i1 %471, i64 %474, i64 %467
  %476 = select i1 %471, %"class.util::IdType"* %472, %"class.util::IdType"* %465
  %477 = icmp eq i64 %475, 0
  br i1 %477, label %478, label %464

478:                                              ; preds = %464
  %479 = ptrtoint %"class.util::IdType"* %476 to i64
  br label %480

480:                                              ; preds = %478, %453
  %481 = phi i64 [ %479, %478 ], [ %456, %453 ]
  %482 = phi %"class.util::IdType"* [ %476, %478 ], [ %454, %453 ]
  %483 = icmp eq %"class.util::IdType"* %482, %459
  br i1 %483, label %490, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %409, i64 0, i32 0, i32 0
  %486 = load i64, i64* %485, align 8
  %487 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %482, i64 0, i32 0, i32 0
  %488 = load i64, i64* %487, align 8
  %489 = icmp ult i64 %486, %488
  br i1 %489, label %490, label %504

490:                                              ; preds = %480, %484
  %491 = ptrtoint %"class.util::IdType"* %482 to i64
  %492 = icmp eq i64 %481, %491
  br i1 %492, label %493, label %504

493:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %304) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %304, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %494 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %408, i64 0, i32 0, i32 2
  %495 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %494, %"class.gfx::Transform"* nonnull %31) #16
  br i1 %495, label %496, label %502

496:                                              ; preds = %493
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %305) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %317, i8 -86, i64 16, i1 false)
  %497 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %31, %"class.gfx::Rect"* dereferenceable(16) %307) #16
  %498 = extractvalue { i64, i64 } %497, 0
  store i64 %498, i64* %308, align 8
  %499 = extractvalue { i64, i64 } %497, 1
  store i64 %499, i64* %306, align 8
  %500 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  %501 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %500, i64 0, i32 0, i32 1
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %501, %"class.gfx::Rect"* nonnull dereferenceable(16) %33) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %305) #16
  br label %502

502:                                              ; preds = %496, %493
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %304) #16
  %503 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  br label %504

504:                                              ; preds = %490, %378, %444, %450, %484, %502
  %505 = phi %"class.viz::AggregatedRenderPass"* [ %408, %490 ], [ %408, %378 ], [ %408, %444 ], [ %408, %450 ], [ %408, %484 ], [ %503, %502 ]
  %506 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %505, i64 0, i32 0, i32 8
  %507 = load i8, i8* %506, align 2, !range !2
  %508 = icmp eq i8 %507, 0
  br i1 %508, label %546, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %505, i64 0, i32 1
  %511 = load %"class.util::IdType"*, %"class.util::IdType"** %310, align 8
  %512 = load i64, i64* %312, align 8
  %513 = ptrtoint %"class.util::IdType"* %511 to i64
  %514 = sub i64 %512, %513
  %515 = icmp eq i64 %514, 0
  %516 = inttoptr i64 %512 to %"class.util::IdType"*
  br i1 %515, label %535, label %517

517:                                              ; preds = %509
  %518 = ashr exact i64 %514, 3
  %519 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %510, i64 0, i32 0, i32 0
  %520 = load i64, i64* %519, align 8
  br label %521

521:                                              ; preds = %521, %517
  %522 = phi %"class.util::IdType"* [ %511, %517 ], [ %533, %521 ]
  %523 = phi i64 [ %518, %517 ], [ %532, %521 ]
  %524 = lshr i64 %523, 1
  %525 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %522, i64 %524
  %526 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %525, i64 0, i32 0, i32 0
  %527 = load i64, i64* %526, align 8
  %528 = icmp ult i64 %527, %520
  %529 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %525, i64 1
  %530 = xor i64 %524, -1
  %531 = add i64 %523, %530
  %532 = select i1 %528, i64 %531, i64 %524
  %533 = select i1 %528, %"class.util::IdType"* %529, %"class.util::IdType"* %522
  %534 = icmp eq i64 %532, 0
  br i1 %534, label %535, label %521

535:                                              ; preds = %521, %509
  %536 = phi %"class.util::IdType"* [ %511, %509 ], [ %533, %521 ]
  %537 = icmp eq %"class.util::IdType"* %536, %516
  br i1 %537, label %544, label %538

538:                                              ; preds = %535
  %539 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %510, i64 0, i32 0, i32 0
  %540 = load i64, i64* %539, align 8
  %541 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %536, i64 0, i32 0, i32 0
  %542 = load i64, i64* %541, align 8
  %543 = icmp ult i64 %540, %542
  br i1 %543, label %544, label %546

544:                                              ; preds = %538, %535
  %545 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %313, %"class.util::IdType"* %536, %"class.util::IdType"* dereferenceable(8) %510) #16
  br label %546

546:                                              ; preds = %544, %538, %504
  %547 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %314, align 8
  %548 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %547, i64 0, i32 0, i32 1
  %549 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %548, align 8
  %550 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %547, i64 0, i32 0, i32 2, i32 0, i32 0
  %551 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %550, align 8
  %552 = icmp ult %"class.std::__1::unique_ptr.230"* %549, %551
  br i1 %552, label %553, label %559

553:                                              ; preds = %546
  %554 = load i64, i64* %315, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %283, align 8
  %555 = bitcast %"class.std::__1::unique_ptr.230"* %549 to i64*
  store i64 %554, i64* %555, align 8
  %556 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %549, i64 1
  %557 = ptrtoint %"class.std::__1::unique_ptr.230"* %556 to i64
  %558 = bitcast %"class.std::__1::unique_ptr.230"** %548 to i64*
  store i64 %557, i64* %558, align 8
  br label %560

559:                                              ; preds = %546
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %547, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %27) #16
  br label %560

560:                                              ; preds = %553, %559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %286) #16
  %561 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %283, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %283, align 8
  %562 = icmp eq %"class.viz::AggregatedRenderPass"* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %560
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %561) #16
  %564 = bitcast %"class.viz::AggregatedRenderPass"* %561 to i8*
  call void @_ZdlPv(i8* %564) #17
  br label %565

565:                                              ; preds = %560, %563
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %282) #16
  %566 = add nuw i64 %336, 1
  %567 = icmp eq i64 %566, %276
  br i1 %567, label %318, label %568

568:                                              ; preds = %565
  %569 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %281, align 8
  br label %334

570:                                              ; preds = %320
  %571 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %68, i64 0, i32 0, i32 0
  %572 = load float, float* %571, align 8
  call void @_ZN3viz17SurfaceAggregator15CopyQuadsToPassERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEfRKNSt3__113unordered_mapIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEESB_NS_16ResourceIdHasherENS6_8equal_toISB_EENS6_9allocatorINS6_4pairIKSB_SB_EEEEEERKN3gfx9TransformERKN4absl8optionalINSN_4RectEEEPKNS_7SurfaceERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::CompositorRenderPass"* dereferenceable(280) %323, %"class.viz::AggregatedRenderPass"* %6, float %572, %"class.std::__1::unordered_map.554"* dereferenceable(40) %166, %"class.gfx::Transform"* nonnull dereferenceable(68) %19, %"class.absl::optional.268"* nonnull dereferenceable(20) %20, %"class.viz::Surface"* %1, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %10)
  br label %958

573:                                              ; preds = %320
  %574 = bitcast { i64, i64 }* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %574) #16
  %575 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 1
  %576 = fcmp oeq float %98, 1.000000e+00
  %577 = fcmp oeq float %99, 1.000000e+00
  %578 = and i1 %577, %576
  br i1 %578, label %579, label %588

579:                                              ; preds = %573
  %580 = bitcast %"class.gfx::Rect"* %575 to i64*
  %581 = load i64, i64* %580, align 4
  %582 = trunc i64 %581 to i32
  %583 = lshr i64 %581, 32
  %584 = trunc i64 %583 to i32
  %585 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 1, i32 1
  %586 = bitcast %"class.gfx::Size"* %585 to i64*
  %587 = load i64, i64* %586, align 4
  br label %647

588:                                              ; preds = %573
  %589 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %575, i64 0, i32 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = sitofp i32 %590 to float
  %592 = fmul float %98, %591
  %593 = call float @llvm.floor.f32(float %592) #16
  %594 = fptosi float %593 to i32
  %595 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 1, i32 0, i32 1
  %596 = load i32, i32* %595, align 4
  %597 = sitofp i32 %596 to float
  %598 = fmul float %99, %597
  %599 = call float @llvm.floor.f32(float %598) #16
  %600 = fptosi float %599 to i32
  %601 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 1, i32 1, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %610, label %604

604:                                              ; preds = %588
  %605 = add nsw i32 %602, %590
  %606 = sitofp i32 %605 to float
  %607 = fmul float %98, %606
  %608 = call float @llvm.ceil.f32(float %607) #16
  %609 = fptosi float %608 to i32
  br label %610

610:                                              ; preds = %604, %588
  %611 = phi i32 [ %609, %604 ], [ %594, %588 ]
  %612 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 1, i32 1, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %621, label %615

615:                                              ; preds = %610
  %616 = add nsw i32 %613, %596
  %617 = sitofp i32 %616 to float
  %618 = fmul float %99, %617
  %619 = call float @llvm.ceil.f32(float %618) #16
  %620 = fptosi float %619 to i32
  br label %621

621:                                              ; preds = %615, %610
  %622 = phi i32 [ %620, %615 ], [ %600, %610 ]
  %623 = sub nsw i32 %611, %594
  %624 = sub nsw i32 %622, %600
  %625 = icmp sgt i32 %594, 0
  %626 = icmp sgt i32 %623, 0
  %627 = and i1 %625, %626
  %628 = sub nuw nsw i32 2147483647, %594
  %629 = icmp ult i32 %628, %623
  %630 = and i1 %629, %627
  %631 = select i1 %630, i32 %628, i32 %623
  %632 = icmp sgt i32 %600, 0
  %633 = icmp sgt i32 %624, 0
  %634 = and i1 %632, %633
  %635 = sub nuw nsw i32 2147483647, %600
  %636 = icmp ult i32 %635, %624
  %637 = and i1 %636, %634
  %638 = select i1 %637, i32 %635, i32 %624
  %639 = icmp sgt i32 %631, 0
  %640 = select i1 %639, i32 %631, i32 0
  %641 = zext i32 %640 to i64
  %642 = icmp sgt i32 %638, 0
  %643 = select i1 %642, i32 %638, i32 0
  %644 = zext i32 %643 to i64
  %645 = shl nuw nsw i64 %644, 32
  %646 = or i64 %645, %641
  br label %647

647:                                              ; preds = %579, %621
  %648 = phi i32 [ %584, %579 ], [ %600, %621 ]
  %649 = phi i32 [ %582, %579 ], [ %594, %621 ]
  %650 = phi i64 [ %587, %579 ], [ %646, %621 ]
  %651 = zext i32 %648 to i64
  %652 = shl nuw i64 %651, 32
  %653 = zext i32 %649 to i64
  %654 = or i64 %652, %653
  %655 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 0
  store i64 %654, i64* %655, align 8
  %656 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 1
  store i64 %650, i64* %656, align 8
  %657 = bitcast { i64, i64 }* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %657) #16
  %658 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 2
  br i1 %578, label %659, label %668

659:                                              ; preds = %647
  %660 = bitcast %"class.gfx::Rect"* %658 to i64*
  %661 = load i64, i64* %660, align 4
  %662 = trunc i64 %661 to i32
  %663 = lshr i64 %661, 32
  %664 = trunc i64 %663 to i32
  %665 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 2, i32 1
  %666 = bitcast %"class.gfx::Size"* %665 to i64*
  %667 = load i64, i64* %666, align 4
  br label %727

668:                                              ; preds = %647
  %669 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %658, i64 0, i32 0, i32 0
  %670 = load i32, i32* %669, align 4
  %671 = sitofp i32 %670 to float
  %672 = fmul float %98, %671
  %673 = call float @llvm.floor.f32(float %672) #16
  %674 = fptosi float %673 to i32
  %675 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 2, i32 0, i32 1
  %676 = load i32, i32* %675, align 4
  %677 = sitofp i32 %676 to float
  %678 = fmul float %99, %677
  %679 = call float @llvm.floor.f32(float %678) #16
  %680 = fptosi float %679 to i32
  %681 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 2, i32 1, i32 0
  %682 = load i32, i32* %681, align 4
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %690, label %684

684:                                              ; preds = %668
  %685 = add nsw i32 %682, %670
  %686 = sitofp i32 %685 to float
  %687 = fmul float %98, %686
  %688 = call float @llvm.ceil.f32(float %687) #16
  %689 = fptosi float %688 to i32
  br label %690

690:                                              ; preds = %684, %668
  %691 = phi i32 [ %689, %684 ], [ %674, %668 ]
  %692 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 2, i32 1, i32 1
  %693 = load i32, i32* %692, align 4
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %701, label %695

695:                                              ; preds = %690
  %696 = add nsw i32 %693, %676
  %697 = sitofp i32 %696 to float
  %698 = fmul float %99, %697
  %699 = call float @llvm.ceil.f32(float %698) #16
  %700 = fptosi float %699 to i32
  br label %701

701:                                              ; preds = %695, %690
  %702 = phi i32 [ %700, %695 ], [ %680, %690 ]
  %703 = sub nsw i32 %691, %674
  %704 = sub nsw i32 %702, %680
  %705 = icmp sgt i32 %674, 0
  %706 = icmp sgt i32 %703, 0
  %707 = and i1 %705, %706
  %708 = sub nuw nsw i32 2147483647, %674
  %709 = icmp ult i32 %708, %703
  %710 = and i1 %709, %707
  %711 = select i1 %710, i32 %708, i32 %703
  %712 = icmp sgt i32 %680, 0
  %713 = icmp sgt i32 %704, 0
  %714 = and i1 %712, %713
  %715 = sub nuw nsw i32 2147483647, %680
  %716 = icmp ult i32 %715, %704
  %717 = and i1 %716, %714
  %718 = select i1 %717, i32 %715, i32 %704
  %719 = icmp sgt i32 %711, 0
  %720 = select i1 %719, i32 %711, i32 0
  %721 = zext i32 %720 to i64
  %722 = icmp sgt i32 %718, 0
  %723 = select i1 %722, i32 %718, i32 0
  %724 = zext i32 %723 to i64
  %725 = shl nuw nsw i64 %724, 32
  %726 = or i64 %725, %721
  br label %727

727:                                              ; preds = %659, %701
  %728 = phi i32 [ %664, %659 ], [ %680, %701 ]
  %729 = phi i32 [ %662, %659 ], [ %674, %701 ]
  %730 = phi i64 [ %667, %659 ], [ %726, %701 ]
  %731 = zext i32 %728 to i64
  %732 = shl nuw i64 %731, 32
  %733 = zext i32 %729 to i64
  %734 = or i64 %732, %733
  %735 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i64 0, i32 0
  store i64 %734, i64* %735, align 8
  %736 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i64 0, i32 1
  store i64 %730, i64* %736, align 8
  %737 = call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %101, %"class.gfx::Transform"* nonnull dereferenceable(68) %16, %"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %35, %"class.gfx::Rect"* nonnull dereferenceable(16) %37, %"class.absl::optional.268"* dereferenceable(20) %5, %"class.viz::AggregatedRenderPass"* %6, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %657) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %574) #16
  %738 = bitcast %"class.gfx::Rect"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %738) #16
  %739 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 0, i32 1, i32 0
  %740 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 0, i32 1, i32 1
  %741 = bitcast %"class.viz::CompositorRenderPass"* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %738, i8* align 8 %741, i64 16, i1 false)
  %742 = bitcast { i64, i64 }* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %742) #16
  %743 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 1
  %744 = bitcast i64* %743 to i32*
  %745 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %40, i64 0, i32 1, i32 1
  %746 = bitcast { i64, i64 }* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %746, i8 -86, i64 16, i1 false)
  br i1 %578, label %747, label %756

747:                                              ; preds = %727
  %748 = bitcast %"class.gfx::Rect"* %125 to i64*
  %749 = load i64, i64* %748, align 4
  %750 = trunc i64 %749 to i32
  %751 = lshr i64 %749, 32
  %752 = trunc i64 %751 to i32
  %753 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 3, i32 1
  %754 = bitcast %"class.gfx::Size"* %753 to i64*
  %755 = load i64, i64* %754, align 4
  br label %815

756:                                              ; preds = %727
  %757 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %125, i64 0, i32 0, i32 0
  %758 = load i32, i32* %757, align 4
  %759 = sitofp i32 %758 to float
  %760 = fmul float %98, %759
  %761 = call float @llvm.floor.f32(float %760) #16
  %762 = fptosi float %761 to i32
  %763 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 3, i32 0, i32 1
  %764 = load i32, i32* %763, align 4
  %765 = sitofp i32 %764 to float
  %766 = fmul float %99, %765
  %767 = call float @llvm.floor.f32(float %766) #16
  %768 = fptosi float %767 to i32
  %769 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 3, i32 1, i32 0
  %770 = load i32, i32* %769, align 4
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %778, label %772

772:                                              ; preds = %756
  %773 = add nsw i32 %770, %758
  %774 = sitofp i32 %773 to float
  %775 = fmul float %98, %774
  %776 = call float @llvm.ceil.f32(float %775) #16
  %777 = fptosi float %776 to i32
  br label %778

778:                                              ; preds = %772, %756
  %779 = phi i32 [ %777, %772 ], [ %762, %756 ]
  %780 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %3, i64 0, i32 0, i32 3, i32 1, i32 1
  %781 = load i32, i32* %780, align 4
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %789, label %783

783:                                              ; preds = %778
  %784 = add nsw i32 %781, %764
  %785 = sitofp i32 %784 to float
  %786 = fmul float %99, %785
  %787 = call float @llvm.ceil.f32(float %786) #16
  %788 = fptosi float %787 to i32
  br label %789

789:                                              ; preds = %783, %778
  %790 = phi i32 [ %788, %783 ], [ %768, %778 ]
  %791 = sub nsw i32 %779, %762
  %792 = sub nsw i32 %790, %768
  %793 = icmp sgt i32 %762, 0
  %794 = icmp sgt i32 %791, 0
  %795 = and i1 %793, %794
  %796 = sub nuw nsw i32 2147483647, %762
  %797 = icmp ult i32 %796, %791
  %798 = and i1 %797, %795
  %799 = select i1 %798, i32 %796, i32 %791
  %800 = icmp sgt i32 %768, 0
  %801 = icmp sgt i32 %792, 0
  %802 = and i1 %800, %801
  %803 = sub nuw nsw i32 2147483647, %768
  %804 = icmp ult i32 %803, %792
  %805 = and i1 %804, %802
  %806 = select i1 %805, i32 %803, i32 %792
  %807 = icmp sgt i32 %799, 0
  %808 = select i1 %807, i32 %799, i32 0
  %809 = zext i32 %808 to i64
  %810 = icmp sgt i32 %806, 0
  %811 = select i1 %810, i32 %806, i32 0
  %812 = zext i32 %811 to i64
  %813 = shl nuw nsw i64 %812, 32
  %814 = or i64 %813, %809
  br label %815

815:                                              ; preds = %747, %789
  %816 = phi i32 [ %752, %747 ], [ %768, %789 ]
  %817 = phi i32 [ %750, %747 ], [ %762, %789 ]
  %818 = phi i64 [ %755, %747 ], [ %814, %789 ]
  %819 = zext i32 %816 to i64
  %820 = shl nuw i64 %819, 32
  %821 = zext i32 %817 to i64
  %822 = or i64 %820, %821
  %823 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 0
  store i64 %822, i64* %823, align 8
  store i64 %818, i64* %743, align 8
  %824 = bitcast %"class.gfx::RectF"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %824) #16
  %825 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %41, i64 0, i32 0, i32 0
  %826 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %41, i64 0, i32 0, i32 1
  %827 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %41, i64 0, i32 1, i32 0
  %828 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %41, i64 0, i32 1, i32 1
  %829 = load i32, i32* %739, align 4
  %830 = load i32, i32* %740, align 4
  %831 = icmp sgt i32 %829, 0
  %832 = select i1 %831, i32 %829, i32 0
  %833 = sitofp i32 %832 to float
  %834 = icmp sgt i32 %830, 0
  %835 = select i1 %834, i32 %830, i32 0
  %836 = sitofp i32 %835 to float
  store float 0.000000e+00, float* %825, align 4
  store float 0.000000e+00, float* %826, align 4
  store float %833, float* %827, align 4
  store float %836, float* %828, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %40, %"class.gfx::Rect"* nonnull dereferenceable(16) %38) #16
  %837 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %838 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %323, i64 0, i32 1, i32 0, i32 0
  %839 = load i64, i64* %838, align 8
  %840 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %837, i64 %839, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  %841 = load i32, i32* %744, align 8
  %842 = icmp eq i32 %841, 0
  %843 = load i32, i32* %745, align 4
  %844 = icmp eq i32 %843, 0
  %845 = or i1 %842, %844
  br i1 %845, label %846, label %942

846:                                              ; preds = %815
  %847 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %848 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %847, align 8
  %849 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %848, i64 0, i32 0, i32 0
  %850 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %849, align 8
  %851 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %848, i64 0, i32 0, i32 1
  %852 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %851, align 8
  %853 = icmp eq %"class.std::__1::unique_ptr.230"* %850, %852
  br i1 %853, label %866, label %854

854:                                              ; preds = %846, %861
  %855 = phi %"class.std::__1::unique_ptr.230"* [ %862, %861 ], [ %850, %846 ]
  %856 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %855, i64 0, i32 0, i32 0, i32 0
  %857 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %856, align 8
  %858 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %857, i64 0, i32 1, i32 0, i32 0
  %859 = load i64, i64* %858, align 8
  %860 = icmp eq i64 %859, %840
  br i1 %860, label %866, label %861

861:                                              ; preds = %854
  %862 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %855, i64 1
  %863 = icmp eq %"class.std::__1::unique_ptr.230"* %862, %852
  br i1 %863, label %864, label %854

864:                                              ; preds = %861
  %865 = ptrtoint %"class.std::__1::unique_ptr.230"* %852 to i64
  br label %901

866:                                              ; preds = %854, %846
  %867 = phi %"class.std::__1::unique_ptr.230"* [ %850, %846 ], [ %855, %854 ]
  %868 = ptrtoint %"class.std::__1::unique_ptr.230"* %867 to i64
  %869 = icmp eq %"class.std::__1::unique_ptr.230"* %867, %852
  br i1 %869, label %901, label %870

870:                                              ; preds = %866
  %871 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %867, i64 1
  %872 = icmp eq %"class.std::__1::unique_ptr.230"* %871, %852
  br i1 %872, label %901, label %873

873:                                              ; preds = %870, %893
  %874 = phi %"class.std::__1::unique_ptr.230"* [ %895, %893 ], [ %871, %870 ]
  %875 = phi i64 [ %894, %893 ], [ %868, %870 ]
  %876 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %874, i64 0, i32 0, i32 0, i32 0
  %877 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %876, align 8
  %878 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %877, i64 0, i32 1, i32 0, i32 0
  %879 = load i64, i64* %878, align 8
  %880 = icmp eq i64 %879, %840
  br i1 %880, label %893, label %881

881:                                              ; preds = %873
  %882 = ptrtoint %"class.viz::AggregatedRenderPass"* %877 to i64
  %883 = inttoptr i64 %875 to %"class.std::__1::unique_ptr.230"*
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %876, align 8
  %884 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %883, i64 0, i32 0, i32 0, i32 0
  %885 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %884, align 8
  %886 = inttoptr i64 %875 to i64*
  store i64 %882, i64* %886, align 8
  %887 = icmp eq %"class.viz::AggregatedRenderPass"* %885, null
  br i1 %887, label %890, label %888

888:                                              ; preds = %881
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %885) #16
  %889 = bitcast %"class.viz::AggregatedRenderPass"* %885 to i8*
  call void @_ZdlPv(i8* %889) #17
  br label %890

890:                                              ; preds = %888, %881
  %891 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %883, i64 1
  %892 = ptrtoint %"class.std::__1::unique_ptr.230"* %891 to i64
  br label %893

893:                                              ; preds = %890, %873
  %894 = phi i64 [ %875, %873 ], [ %892, %890 ]
  %895 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %874, i64 1
  %896 = icmp eq %"class.std::__1::unique_ptr.230"* %895, %852
  br i1 %896, label %897, label %873

897:                                              ; preds = %893
  %898 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %847, align 8
  %899 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %898, i64 0, i32 0, i32 1
  %900 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %899, align 8
  br label %901

901:                                              ; preds = %897, %864, %866, %870
  %902 = phi %"class.std::__1::unique_ptr.230"* [ %852, %866 ], [ %852, %864 ], [ %852, %870 ], [ %900, %897 ]
  %903 = phi i64 [ %868, %866 ], [ %865, %864 ], [ %868, %870 ], [ %894, %897 ]
  %904 = inttoptr i64 %903 to %"class.std::__1::unique_ptr.230"*
  %905 = icmp eq %"class.std::__1::unique_ptr.230"* %902, %904
  br i1 %905, label %957, label %906

906:                                              ; preds = %901
  %907 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %851, align 8
  %908 = icmp eq %"class.std::__1::unique_ptr.230"* %907, %902
  br i1 %908, label %927, label %909

909:                                              ; preds = %906, %921
  %910 = phi %"class.std::__1::unique_ptr.230"* [ %923, %921 ], [ %904, %906 ]
  %911 = phi %"class.std::__1::unique_ptr.230"* [ %922, %921 ], [ %902, %906 ]
  %912 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %911, i64 0, i32 0, i32 0, i32 0
  %913 = bitcast %"class.std::__1::unique_ptr.230"* %911 to i64*
  %914 = load i64, i64* %913, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %912, align 8
  %915 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %910, i64 0, i32 0, i32 0, i32 0
  %916 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %915, align 8
  %917 = bitcast %"class.std::__1::unique_ptr.230"* %910 to i64*
  store i64 %914, i64* %917, align 8
  %918 = icmp eq %"class.viz::AggregatedRenderPass"* %916, null
  br i1 %918, label %921, label %919

919:                                              ; preds = %909
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %916) #16
  %920 = bitcast %"class.viz::AggregatedRenderPass"* %916 to i8*
  call void @_ZdlPv(i8* %920) #17
  br label %921

921:                                              ; preds = %919, %909
  %922 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %911, i64 1
  %923 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %910, i64 1
  %924 = icmp eq %"class.std::__1::unique_ptr.230"* %922, %907
  br i1 %924, label %925, label %909

925:                                              ; preds = %921
  %926 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %851, align 8
  br label %927

927:                                              ; preds = %925, %906
  %928 = phi %"class.std::__1::unique_ptr.230"* [ %902, %906 ], [ %926, %925 ]
  %929 = phi %"class.std::__1::unique_ptr.230"* [ %904, %906 ], [ %923, %925 ]
  %930 = icmp eq %"class.std::__1::unique_ptr.230"* %928, %929
  br i1 %930, label %941, label %931

931:                                              ; preds = %927, %939
  %932 = phi %"class.std::__1::unique_ptr.230"* [ %933, %939 ], [ %928, %927 ]
  %933 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %932, i64 -1
  %934 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %933, i64 0, i32 0, i32 0, i32 0
  %935 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %934, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %934, align 8
  %936 = icmp eq %"class.viz::AggregatedRenderPass"* %935, null
  br i1 %936, label %939, label %937

937:                                              ; preds = %931
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %935) #16
  %938 = bitcast %"class.viz::AggregatedRenderPass"* %935 to i8*
  call void @_ZdlPv(i8* %938) #17
  br label %939

939:                                              ; preds = %937, %931
  %940 = icmp eq %"class.std::__1::unique_ptr.230"* %933, %929
  br i1 %940, label %941, label %931

941:                                              ; preds = %939, %927
  store %"class.std::__1::unique_ptr.230"* %929, %"class.std::__1::unique_ptr.230"** %851, align 8
  br label %957

942:                                              ; preds = %815
  %943 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 11, i32 0, i32 0
  %944 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %943, i64 8, i64 152) #16
  %945 = bitcast i8* %944 to %"class.viz::AggregatedRenderPassDrawQuad"*
  call void @_ZN3viz28AggregatedRenderPassDrawQuadC1Ev(%"class.viz::AggregatedRenderPassDrawQuad"* %945) #16
  %946 = bitcast %"class.gfx::RectF"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %946) #16
  %947 = bitcast %"class.gfx::Size"* %43 to i8*
  %948 = bitcast %"class.gfx::RectF"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %948, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %947) #16
  %949 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %43, i64 0, i32 0
  store i32 0, i32* %949, align 4
  %950 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %43, i64 0, i32 1
  store i32 0, i32* %950, align 4
  %951 = bitcast %"class.gfx::Vector2dF"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %951) #16
  %952 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %44, i64 0, i32 0
  store float 0.000000e+00, float* %952, align 4
  %953 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %44, i64 0, i32 1
  store float 0.000000e+00, float* %953, align 4
  %954 = bitcast %"class.gfx::PointF"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %954) #16
  %955 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %45, i64 0, i32 0
  store float 0.000000e+00, float* %955, align 4
  %956 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %45, i64 0, i32 1
  store float 0.000000e+00, float* %956, align 4
  call void @_ZN3viz28AggregatedRenderPassDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_N4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEENS9_INS_20ResourceIdTypeMarkerEjLj0ELj1EEERKNS4_5RectFERKNS4_4SizeERKNS4_9Vector2dFERKNS4_6PointFESG_bf(%"class.viz::AggregatedRenderPassDrawQuad"* %945, %"class.viz::SharedQuadState"* %737, %"class.gfx::Rect"* nonnull dereferenceable(16) %38, %"class.gfx::Rect"* nonnull dereferenceable(16) %40, i64 %840, i32 0, %"class.gfx::RectF"* nonnull dereferenceable(16) %42, %"class.gfx::Size"* nonnull dereferenceable(8) %43, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %44, %"class.gfx::PointF"* nonnull dereferenceable(8) %45, %"class.gfx::RectF"* nonnull dereferenceable(16) %41, i1 zeroext false, float 1.000000e+00) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %954) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %951) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %947) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %946) #16
  br label %957

957:                                              ; preds = %941, %901, %942
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %824) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %742) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %738) #16
  br label %958

958:                                              ; preds = %957, %570
  %959 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %54, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %15) #16
  %960 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %959, 0
  %961 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %959, 1
  %962 = icmp eq %"class.viz::SurfaceId"* %960, %961
  br i1 %962, label %976, label %963

963:                                              ; preds = %958
  %964 = ptrtoint %"class.viz::SurfaceId"* %961 to i64
  %965 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %966 = bitcast %"class.viz::SurfaceId"** %965 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = sub i64 %967, %964
  %969 = ashr exact i64 %968, 5
  %970 = icmp eq i64 %968, 0
  br i1 %970, label %974, label %971

971:                                              ; preds = %963
  %972 = bitcast %"class.viz::SurfaceId"* %960 to i8*
  %973 = bitcast %"class.viz::SurfaceId"* %961 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %972, i8* align 8 %973, i64 %968, i1 false) #16
  br label %974

974:                                              ; preds = %971, %963
  %975 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %960, i64 %969
  store %"class.viz::SurfaceId"* %975, %"class.viz::SurfaceId"** %965, align 8
  br label %976

976:                                              ; preds = %958, %974
  call void @_ZN3viz7Surface12DidAggregateEv(%"class.viz::Surface"* %1) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* %245) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %167) #16
  br label %977

977:                                              ; preds = %148, %976
  %978 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %18, i64 0, i32 0
  %979 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_node"**
  %980 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %979, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* nonnull %978, %"class.std::__1::__tree_node"* %980) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #16
  br label %981

981:                                              ; preds = %146, %977
  %982 = icmp eq i8* %122, null
  br i1 %982, label %987, label %983

983:                                              ; preds = %981
  %984 = load i8, i8* %122, align 1
  %985 = icmp eq i8 %984, 0
  br i1 %985, label %987, label %986

986:                                              ; preds = %983
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %122, i8* %123, i64 %124) #16
  br label %987

987:                                              ; preds = %981, %983, %986
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %102) #16
  br label %988

988:                                              ; preds = %11, %987
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #16
  ret void
}

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA19_KcRlEEN4base11trace_event16TraceEventHandleEcPKhPS1_SA_yjySA_OT_SA_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [19 x i8]* dereferenceable(19), i8*, i64* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247503870, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds [19 x i8], [19 x i8]* %8, i64 0, i64 0
  %24 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %23, i8** %24, align 8
  %25 = load i64, i64* %10, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #16
  %28 = load i8, i8* %18, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %64, label %30

30:                                               ; preds = %11, %59
  %31 = phi i64 [ %60, %59 ], [ 0, %11 ]
  %32 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %46

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %31
  %37 = bitcast %"union.base::trace_event::TraceValue"* %36 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %38 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %37, align 8
  %39 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %38 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %42 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %42, i64 1
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, align 8
  call void %44(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %38) #16
  %45 = load i8, i8* %32, align 1
  br label %46

46:                                               ; preds = %40, %30
  %47 = phi i8 [ %33, %30 ], [ %45, %40 ]
  %48 = icmp eq i8 %47, 9
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %31
  %51 = bitcast %"union.base::trace_event::TraceValue"* %50 to %"class.protozero::HeapBuffered"**
  %52 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %51, align 8
  %53 = icmp eq %"class.protozero::HeapBuffered"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %55) #16
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %56) #16
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %57) #16
  %58 = bitcast %"class.protozero::HeapBuffered"* %52 to i8*
  call void @_ZdlPv(i8* %58) #17
  br label %59

59:                                               ; preds = %54, %49, %46, %35
  %60 = add nuw nsw i64 %31, 1
  %61 = load i8, i8* %18, align 8
  %62 = zext i8 %61 to i64
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %30, label %64

64:                                               ; preds = %59, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret i64 %27
}

declare void @_ZN3viz7Surface22TakeCopyOutputRequestsEPNSt3__18multimapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS1_10unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS1_9allocatorINS1_4pairIKS6_SB_EEEEEE(%"class.viz::Surface"*, %"class.std::__1::multimap"*) local_unnamed_addr #1

declare dereferenceable(40) %"class.std::__1::unordered_map.554"* @_ZNK3viz23DisplayResourceProvider19GetChildToParentMapEi(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #1

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz17SurfaceAggregator22CanMergeMaskFilterInfoERKNS0_17MaskFilterInfoExtERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56), %"class.viz::CompositorRenderPass"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %5 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %6 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %7 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", align 8
  %8 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", align 8
  %9 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %1, i64 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %9) #16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %3
  %13 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %9) #16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %9) #16
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %58, label %22

22:                                               ; preds = %15, %12, %18
  %23 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7, i64 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7, i64 0, i32 0, i32 1
  %26 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %6 to i8*
  %27 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #16, !noalias !32
  %28 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %2, i64 0, i32 0, i32 12, i32 0
  call void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %6, %"class.cc::ListContainerHelper"* %28) #16, !noalias !32
  %29 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %29, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %30) #16
  %31 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %6, i64 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !32
  store i64 %32, i64* %25, align 8, !alias.scope !32
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #16, !noalias !32
  %33 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %8, i64 0, i32 0, i32 1
  %35 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %5 to i8*
  %36 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #16, !noalias !37
  call void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %5, %"class.cc::ListContainerHelper"* %28) #16, !noalias !37
  %37 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %8, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %5, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %37, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %38) #16
  %39 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %5, i64 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !37
  store i64 %40, i64* %34, align 8, !alias.scope !37
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #16, !noalias !37
  %41 = bitcast i8** %24 to %"class.viz::SharedQuadState"**
  %42 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %29, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %37) #16
  br i1 %42, label %43, label %54

43:                                               ; preds = %22
  %44 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %4 to i8*
  br label %45

45:                                               ; preds = %43, %50
  %46 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %41, align 8
  %47 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %46, i64 0, i32 3, i32 0
  %48 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %47) #16
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %4, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #16
  %51 = load i64, i64* %25, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %25, align 8
  %53 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %29, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %37) #16
  br i1 %53, label %45, label %54

54:                                               ; preds = %45, %50, %22
  %55 = phi i1 [ true, %22 ], [ true, %50 ], [ false, %45 ]
  %56 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %8, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %56) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  %57 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ConstIterator"* %7, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %57) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #16
  ret i1 %55

58:                                               ; preds = %18, %3
  %59 = phi i1 [ true, %3 ], [ false, %18 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator37TransformAndStoreDelegatedInkMetadataERKN3gfx9TransformENSt3__110unique_ptrINS1_20DelegatedInkMetadataENS5_14default_deleteIS7_EEEE(%"class.viz::SurfaceAggregator"* nocapture, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::DelegatedInkMetadata"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::PointF"*
  %7 = alloca %"class.gfx::RectF", align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 39
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.340"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %11, align 8
  %13 = icmp eq %"class.gfx::DelegatedInkMetadata"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %12, i64 0, i32 4, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 4, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp slt i64 %18, %16
  br i1 %19, label %87, label %20

20:                                               ; preds = %14, %3
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %22 = bitcast %"class.gfx::DelegatedInkMetadata"* %2 to i64*
  %23 = load i64, i64* %22, align 4
  store i64 %23, i64* %5, align 8
  %24 = bitcast %"class.gfx::RectF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 5
  %26 = bitcast %"class.gfx::RectF"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %26, i64 16, i1 false)
  call void @_ZNK3gfx9Transform14TransformPointEPNS_6PointFE(%"class.gfx::Transform"* %1, %"class.gfx::PointF"* nonnull %6) #16
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %1, %"class.gfx::RectF"* nonnull %7) #16
  %27 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 1
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 4, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 6, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %2, i64 0, i32 7
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = call i8* @_Znwm(i64 64) #17
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %5, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 16
  %44 = bitcast i8* %43 to i32*
  store i32 %31, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %38, i64 24
  %46 = bitcast i8* %45 to i64*
  store i64 %33, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %38, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 4 %24, i64 16, i1 false) #16
  %48 = getelementptr inbounds i8, i8* %38, i64 48
  %49 = bitcast i8* %48 to i64*
  store i64 %35, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %38, i64 56
  store i8 %37, i8* %50, align 8
  %51 = ptrtoint i8* %38 to i64
  %52 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %11, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.340"* %10 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq %"class.gfx::DelegatedInkMetadata"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %20
  %56 = bitcast %"class.gfx::DelegatedInkMetadata"* %52 to i8*
  call void @_ZdlPv(i8* %56) #17
  br label %57

57:                                               ; preds = %55, %20
  %58 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %59 = and i8 %58, 25
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %86, label %61, !prof !27

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #16
  call void @_ZNK3gfx20DelegatedInkMetadata8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.gfx::DelegatedInkMetadata"* %2) #16
  %63 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #16
  %64 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %11, align 8
  call void @_ZNK3gfx20DelegatedInkMetadata8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.gfx::DelegatedInkMetadata"* %64) #16
  %65 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %66 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %68 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %68, i64* %67, align 8
  %69 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i64 0, i64 0), i8* null, i64 0, i32 %65, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, i32 8, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  %70 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %61
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %61, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #16
  %78 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #17
  br label %85

85:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #16
  br label %86

86:                                               ; preds = %57, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %87

87:                                               ; preds = %14, %86
  %88 = icmp eq %"class.gfx::DelegatedInkMetadata"* %2, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = bitcast %"class.gfx::DelegatedInkMetadata"* %2 to i8*
  call void @_ZdlPv(i8* %90) #17
  br label %91

91:                                               ; preds = %87, %89
  ret void
}

declare %"class.gfx::DelegatedInkMetadata"* @_ZN3viz7Surface24TakeDelegatedInkMetadataEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"*, i64, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3viz20AggregatedRenderPass6SetAllEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformERKN2cc16FilterOperationsESE_RKN4absl8optionalINS4_6RRectFEEENS4_17ContentColorUsageEbbbb(%"class.viz::AggregatedRenderPass"*, i64, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), %"class.cc::FilterOperations"* dereferenceable(24), %"class.cc::FilterOperations"* dereferenceable(24), %"class.absl::optional.253"* dereferenceable(56), i8 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3viz12_GLOBAL__N_120MoveMatchingRequestsEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEEPNSt3__18multimapIS4_NS5_10unique_ptrINS_17CopyOutputRequestENS5_14default_deleteIS8_EEEENS5_4lessIS4_EENS5_9allocatorINS5_4pairIKS4_SB_EEEEEEPNS5_6vectorISB_NSE_ISB_EEEE(i64, %"class.std::__1::multimap"*, %"class.std::__1::vector.258"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %70, label %8

8:                                                ; preds = %3, %65
  %9 = phi %"class.std::__1::__tree_node"* [ %68, %65 ], [ %6, %3 ]
  %10 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %4, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  br label %65

17:                                               ; preds = %8
  %18 = icmp ult i64 %12, %0
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  br label %65

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %22, %27
  %28 = phi %"class.std::__1::__tree_end_node"* [ %38, %27 ], [ %23, %22 ]
  %29 = phi %"class.std::__1::__tree_node"* [ %39, %27 ], [ %25, %22 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, %0
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::__tree_node_base"** %33 to %"class.std::__1::__tree_node"**
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_node"* %29 to %"class.std::__1::__tree_node"**
  %37 = select i1 %32, %"class.std::__1::__tree_node"** %34, %"class.std::__1::__tree_node"** %36
  %38 = select i1 %32, %"class.std::__1::__tree_end_node"* %28, %"class.std::__1::__tree_end_node"* %35
  %39 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  %40 = icmp eq %"class.std::__1::__tree_node"* %39, null
  br i1 %40, label %41, label %27

41:                                               ; preds = %27, %22
  %42 = phi %"class.std::__1::__tree_end_node"* [ %23, %22 ], [ %38, %27 ]
  %43 = ptrtoint %"class.std::__1::__tree_end_node"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node"**
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %62, label %48

48:                                               ; preds = %41, %48
  %49 = phi %"class.std::__1::__tree_end_node"* [ %59, %48 ], [ %10, %41 ]
  %50 = phi %"class.std::__1::__tree_node"* [ %60, %48 ], [ %46, %41 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp ugt i64 %52, %0
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_node"* %50 to %"class.std::__1::__tree_node"**
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__tree_node_base"** %56 to %"class.std::__1::__tree_node"**
  %58 = select i1 %53, %"class.std::__1::__tree_node"** %55, %"class.std::__1::__tree_node"** %57
  %59 = select i1 %53, %"class.std::__1::__tree_end_node"* %54, %"class.std::__1::__tree_end_node"* %49
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %58, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %62, label %48

62:                                               ; preds = %48, %41
  %63 = phi %"class.std::__1::__tree_end_node"* [ %10, %41 ], [ %59, %48 ]
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %63 to i64
  br label %73

65:                                               ; preds = %19, %14
  %66 = phi %"class.std::__1::__tree_end_node"* [ %15, %14 ], [ %10, %19 ]
  %67 = phi %"class.std::__1::__tree_node"** [ %16, %14 ], [ %21, %19 ]
  %68 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node"* %68, null
  br i1 %69, label %70, label %8

70:                                               ; preds = %65, %3
  %71 = phi %"class.std::__1::__tree_end_node"* [ %4, %3 ], [ %66, %65 ]
  %72 = ptrtoint %"class.std::__1::__tree_end_node"* %71 to i64
  br label %73

73:                                               ; preds = %62, %70
  %74 = phi i64 [ %72, %70 ], [ %43, %62 ]
  %75 = phi i64 [ %72, %70 ], [ %64, %62 ]
  %76 = inttoptr i64 %74 to %"class.std::__1::__tree_end_node"*
  %77 = inttoptr i64 %75 to %"class.std::__1::__tree_end_node"*
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %76, %77
  br i1 %78, label %89, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %2, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.260"** %80 to i64*
  br label %90

83:                                               ; preds = %132
  %84 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %1, i64 0, i32 0
  br i1 %78, label %89, label %85

85:                                               ; preds = %83, %85
  %86 = phi %"class.std::__1::__tree_end_node"* [ %87, %85 ], [ %76, %83 ]
  %87 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE5eraseENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEElEE(%"class.std::__1::__tree"* %84, %"class.std::__1::__tree_end_node"* %86) #16
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %87, %77
  br i1 %88, label %89, label %85

89:                                               ; preds = %85, %73, %83
  ret void

90:                                               ; preds = %79, %132
  %91 = phi i64 [ %74, %79 ], [ %134, %132 ]
  %92 = inttoptr i64 %91 to %"class.std::__1::__tree_node"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1, i32 0, i32 1
  %94 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %80, align 8
  %95 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %81, align 8
  %96 = icmp ult %"class.std::__1::unique_ptr.260"* %94, %95
  br i1 %96, label %97, label %104

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %93, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.260"* %93 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.260"* %94 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %94, i64 1
  %103 = ptrtoint %"class.std::__1::unique_ptr.260"* %102 to i64
  store i64 %103, i64* %82, align 8
  br label %105

104:                                              ; preds = %90
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.258"* %2, %"class.std::__1::unique_ptr.260"* dereferenceable(8) %93) #16
  br label %105

105:                                              ; preds = %97, %104
  %106 = inttoptr i64 %91 to %"class.std::__1::__tree_node_base"*
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %106
  br i1 %115, label %132, label %123

116:                                              ; preds = %105, %116
  %117 = phi %"class.std::__1::__tree_node_base"* [ %119, %116 ], [ %108, %105 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %121, label %116

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 0
  br label %132

123:                                              ; preds = %110, %123
  %124 = phi %"class.std::__1::__tree_end_node"** [ %127, %123 ], [ %111, %110 ]
  %125 = bitcast %"class.std::__1::__tree_end_node"** %124 to %"class.std::__1::__tree_node_base"**
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 2
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %126
  br i1 %131, label %132, label %123

132:                                              ; preds = %123, %110, %121
  %133 = phi %"class.std::__1::__tree_end_node"* [ %122, %121 ], [ %112, %110 ], [ %128, %123 ]
  %134 = ptrtoint %"class.std::__1::__tree_end_node"* %133 to i64
  %135 = icmp eq %"class.std::__1::__tree_end_node"* %133, %77
  br i1 %135, label %83, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator15CopyQuadsToPassERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEfRKNSt3__113unordered_mapIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEESB_NS_16ResourceIdHasherENS6_8equal_toISB_EENS6_9allocatorINS6_4pairIKSB_SB_EEEEEERKN3gfx9TransformERKN4absl8optionalINSN_4RectEEEPKNS_7SurfaceERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"*, %"class.viz::CompositorRenderPass"* dereferenceable(280), %"class.viz::AggregatedRenderPass"*, float, %"class.std::__1::unordered_map.554"* nocapture readonly dereferenceable(40), %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* dereferenceable(20), %"class.viz::Surface"*, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %10 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %11 = alloca %"class.cc::ListContainerHelper::ReverseIterator", align 8
  %12 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator", align 8
  %13 = alloca %"class.gfx::Transform", align 4
  %14 = alloca %"class.gfx::Transform", align 4
  %15 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %16 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %17 = alloca %"class.gfx::Rect", align 8
  %18 = alloca i8, align 1
  %19 = alloca i64, align 8
  %20 = alloca %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", align 4
  %21 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %22 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %23 = alloca %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", align 4
  %24 = alloca %"class.gfx::Transform", align 4
  %25 = alloca %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", align 4
  %26 = alloca %"class.gfx::Transform", align 4
  %27 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 2
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %90, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 29
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %90

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 30
  %36 = load i8, i8* %35, align 2, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %90

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 31
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %90

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 1
  %44 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %45 = load %"class.util::IdType"*, %"class.util::IdType"** %44, align 8
  %46 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %47 = bitcast %"class.util::IdType"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = ptrtoint %"class.util::IdType"* %45 to i64
  %50 = sub i64 %48, %49
  %51 = icmp eq i64 %50, 0
  %52 = inttoptr i64 %48 to %"class.util::IdType"*
  br i1 %51, label %73, label %53

53:                                               ; preds = %42
  %54 = ashr exact i64 %50, 3
  %55 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %43, i64 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %57, %53
  %58 = phi %"class.util::IdType"* [ %45, %53 ], [ %69, %57 ]
  %59 = phi i64 [ %54, %53 ], [ %68, %57 ]
  %60 = lshr i64 %59, 1
  %61 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %58, i64 %60
  %62 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %61, i64 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %63, %56
  %65 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %61, i64 1
  %66 = xor i64 %60, -1
  %67 = add i64 %59, %66
  %68 = select i1 %64, i64 %67, i64 %60
  %69 = select i1 %64, %"class.util::IdType"* %65, %"class.util::IdType"* %58
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %71, label %57

71:                                               ; preds = %57
  %72 = ptrtoint %"class.util::IdType"* %69 to i64
  br label %73

73:                                               ; preds = %71, %42
  %74 = phi i64 [ %72, %71 ], [ %49, %42 ]
  %75 = phi %"class.util::IdType"* [ %69, %71 ], [ %45, %42 ]
  %76 = icmp eq %"class.util::IdType"* %75, %52
  br i1 %76, label %86, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %43, i64 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %75, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %86, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %75, i64 1
  %85 = ptrtoint %"class.util::IdType"* %84 to i64
  br label %86

86:                                               ; preds = %73, %77, %83
  %87 = phi i64 [ %85, %83 ], [ %74, %73 ], [ %74, %77 ]
  %88 = ptrtoint %"class.util::IdType"* %75 to i64
  %89 = icmp eq i64 %87, %88
  br label %90

90:                                               ; preds = %38, %34, %30, %9, %86
  %91 = phi i1 [ false, %38 ], [ false, %34 ], [ false, %30 ], [ false, %9 ], [ %89, %86 ]
  %92 = bitcast %"class.gfx::Rect"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #16
  store i8 0, i8* %18, align 1
  %93 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #16
  store i64 0, i64* %19, align 8
  %94 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 3
  %95 = load i8, i8* %94, align 1, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  tail call void @_ZN3viz17SurfaceAggregator37AddRenderPassFilterDamageToDamageListERKN3gfx9TransformEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Transform"* dereferenceable(68) %5, %"class.viz::CompositorRenderPass"* %1, %"class.viz::AggregatedRenderPass"* %2)
  %98 = call %"class.viz::DrawQuad"* @_ZN3viz17SurfaceAggregator25FindQuadWithOverlayDamageERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassERKN3gfx9TransformEPKNS_7SurfaceERKN4absl8optionalINS6_4RectEEEPm(%"class.viz::SurfaceAggregator"* %0, %"class.viz::CompositorRenderPass"* dereferenceable(280) %1, %"class.viz::AggregatedRenderPass"* undef, %"class.gfx::Transform"* dereferenceable(68) undef, %"class.viz::Surface"* %7, %"class.absl::optional.268"* dereferenceable(20) undef, i64* nonnull %19)
  br label %99

99:                                               ; preds = %90, %97
  %100 = phi %"class.viz::DrawQuad"* [ %98, %97 ], [ null, %90 ]
  %101 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %101) #16
  %102 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %101, i8* align 4 %102, i64 56, i1 false)
  %103 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #16
  %104 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21, i64 0, i32 0, i32 1
  %105 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %16 to i8*
  %106 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #16, !noalias !42
  %107 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %16, %"class.cc::ListContainerHelper"* %107) #16, !noalias !42
  %108 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %16, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %108, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %109) #16
  %110 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %16, i64 0, i32 1
  %111 = load i64, i64* %110, align 8, !noalias !42
  store i64 %111, i64* %104, align 8, !alias.scope !42
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #16, !noalias !42
  %112 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #16
  %113 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %22, i64 0, i32 0, i32 1
  %114 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %15 to i8*
  %115 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #16, !noalias !47
  call void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %15, %"class.cc::ListContainerHelper"* %107) #16, !noalias !47
  %116 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %22, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %15, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %116, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %117) #16
  %118 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %15, i64 0, i32 1
  %119 = load i64, i64* %118, align 8, !noalias !47
  store i64 %119, i64* %113, align 8, !alias.scope !47
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #16, !noalias !47
  %120 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %108, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %116) #16
  br i1 %120, label %121, label %173

121:                                              ; preds = %99
  %122 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21, i64 0, i32 0, i32 0, i32 2
  %123 = bitcast i8** %122 to %"class.viz::DrawQuad"**
  %124 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %8, i64 0, i32 0, i32 0
  %125 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %25 to i8*
  %126 = bitcast %"class.gfx::Transform"* %26 to i8*
  %127 = bitcast %"class.gfx::Transform"* %5 to i8*
  %128 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %25, i64 0, i32 1
  %129 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %25, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %25, i64 0, i32 0
  %131 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 4
  %132 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36
  %133 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %7, i64 0, i32 0, i32 0
  %134 = bitcast %"class.gfx::Transform"* %13 to i8*
  %135 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %13, i64 0, i32 0
  %136 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 0, i32 2, i32 0
  %137 = bitcast %"class.gfx::Transform"* %14 to i8*
  %138 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 26
  %139 = bitcast %"class.gfx::Rect"* %17 to i64*
  %140 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %17, i64 0, i32 1
  %141 = bitcast %"class.gfx::Size"* %140 to i64*
  %142 = xor i1 %91, true
  %143 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 5
  %144 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %146 = bitcast %"class.util::IdType"** %145 to i64*
  %147 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 1, i32 0, i32 0
  %148 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 0, i32 11, i32 0, i32 0
  %149 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator"* %12 to i8*
  %150 = bitcast %"class.cc::ListContainerHelper::ReverseIterator"* %11 to i8*
  %151 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 0, i32 12, i32 0
  %152 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator"* %12, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.cc::ListContainerHelper::ReverseIterator", %"class.cc::ListContainerHelper::ReverseIterator"* %11, i64 0, i32 0
  %154 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator"* %12, i64 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.cc::ListContainerHelper::ReverseIterator", %"class.cc::ListContainerHelper::ReverseIterator"* %11, i64 0, i32 1
  %156 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator"* %12, i64 0, i32 0, i32 0, i32 2
  %157 = bitcast i8** %156 to %"class.viz::SharedQuadState"**
  %158 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator", %"class.cc::ListContainer<viz::SharedQuadState>::ReverseIterator"* %12, i64 0, i32 0
  %159 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %160 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %162 = bitcast %"class.util::IdType"** %161 to i64*
  %163 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %2, i64 0, i32 0, i32 8
  %164 = getelementptr inbounds %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.554"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.554"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.554"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %23 to i8*
  %168 = bitcast %"class.gfx::Transform"* %24 to i8*
  %169 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %23, i64 0, i32 1
  %170 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %23, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %23, i64 0, i32 0
  %172 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %10 to i8*
  br label %176

173:                                              ; preds = %463, %99
  %174 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %22, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %174) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #16
  %175 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %21, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %175) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #16
  ret void

176:                                              ; preds = %121, %463
  %177 = phi %"class.viz::SharedQuadState"* [ null, %121 ], [ %464, %463 ]
  %178 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %123, align 8
  %179 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, 7
  br i1 %181, label %182, label %223

182:                                              ; preds = %176
  %183 = call %"class.viz::SurfaceDrawQuad"* @_ZN3viz15SurfaceDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %178) #16
  %184 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %463, label %191

191:                                              ; preds = %187, %182
  %192 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 1, i32 0
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %463, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 1, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %463, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %183, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %463, label %207

207:                                              ; preds = %203, %199
  %208 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %124) #16
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %222

210:                                              ; preds = %207
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %167) #16
  %211 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 6
  %212 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %211, align 8
  %213 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %212, i64 0, i32 3
  %214 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %212, i64 0, i32 10
  %215 = load i8, i8* %214, align 4, !range !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %168, i8* align 4 %127, i64 68, i1 false) #16
  %216 = bitcast %"class.gfx::MaskFilterInfo"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %167, i8* align 4 %216, i64 52, i1 false) #16
  store i8 %215, i8* %169, align 4
  %217 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* nonnull %170) #16
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %210
  %220 = call zeroext i1 @_ZN3gfx14MaskFilterInfo9TransformERKNS_9TransformE(%"class.gfx::MaskFilterInfo"* nonnull %171, %"class.gfx::Transform"* nonnull dereferenceable(68) %24) #16
  br label %221

221:                                              ; preds = %210, %219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %101, i8* nonnull align 4 %167, i64 53, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %167) #16
  br label %222

222:                                              ; preds = %221, %207
  call void @_ZN3viz17SurfaceAggregator17HandleSurfaceQuadEPKNS_15SurfaceDrawQuadEfRKN3gfx9TransformERKN4absl8optionalINS4_4RectEEEPNS_20AggregatedRenderPassEbPSA_PbRKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::SurfaceDrawQuad"* %183, float %3, %"class.gfx::Transform"* dereferenceable(68) %5, %"class.absl::optional.268"* dereferenceable(20) %6, %"class.viz::AggregatedRenderPass"* %2, i1 zeroext %91, %"class.gfx::Rect"* nonnull %17, i8* nonnull %18, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* nonnull dereferenceable(56) %20)
  br label %463

223:                                              ; preds = %176
  %224 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 6
  %225 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %224, align 8
  %226 = icmp eq %"class.viz::SharedQuadState"* %225, %177
  br i1 %226, label %227, label %229

227:                                              ; preds = %223
  %228 = load i8, i8* %18, align 1
  br label %275

229:                                              ; preds = %223
  %230 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %124) #16
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %243

232:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %125) #16
  %233 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %224, align 8
  %234 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %233, i64 0, i32 3
  %235 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %233, i64 0, i32 10
  %236 = load i8, i8* %235, align 4, !range !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 %127, i64 68, i1 false) #16
  %237 = bitcast %"class.gfx::MaskFilterInfo"* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 %237, i64 52, i1 false) #16
  store i8 %236, i8* %128, align 4
  %238 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* nonnull %129) #16
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %232
  %241 = call zeroext i1 @_ZN3gfx14MaskFilterInfo9TransformERKNS_9TransformE(%"class.gfx::MaskFilterInfo"* nonnull %130, %"class.gfx::Transform"* nonnull dereferenceable(68) %26) #16
  br label %242

242:                                              ; preds = %232, %240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %101, i8* nonnull align 4 %125, i64 53, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %125) #16
  br label %243

243:                                              ; preds = %242, %229
  %244 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %224, align 8
  %245 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %244, i64 0, i32 0
  %246 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %244, i64 0, i32 1
  %247 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %244, i64 0, i32 2
  %248 = call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %244, %"class.gfx::Transform"* dereferenceable(68) %245, %"class.gfx::Transform"* dereferenceable(68) %5, %"class.gfx::Rect"* dereferenceable(16) %246, %"class.gfx::Rect"* dereferenceable(16) %247, %"class.absl::optional.268"* dereferenceable(20) %6, %"class.viz::AggregatedRenderPass"* %2, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* nonnull dereferenceable(56) %20) #16
  %249 = icmp eq %"class.viz::DrawQuad"* %178, %100
  br i1 %249, label %250, label %254

250:                                              ; preds = %243
  %251 = load i64, i64* %19, align 8
  %252 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %248, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %252, align 8
  %253 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %248, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %251, i64* %253, align 8
  br label %254

254:                                              ; preds = %250, %243
  %255 = load i8, i8* %131, align 2, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %264, label %257

257:                                              ; preds = %254
  %258 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %132, %"class.viz::SurfaceId"* dereferenceable(32) %133) #16
  %259 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %258, 0
  %260 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %258, 1
  %261 = icmp eq %"class.viz::SurfaceId"* %260, %259
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %248, i64 0, i32 13
  store float 0.000000e+00, float* %263, align 8
  br label %264

264:                                              ; preds = %257, %254, %262
  %265 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %224, align 8
  br i1 %91, label %266, label %283

266:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %134) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %134, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false) #16
  %267 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %248, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %135, %class.SkMatrix44* dereferenceable(68) %136, %class.SkMatrix44* dereferenceable(68) %267) #16
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %137) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %137, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false) #16
  %268 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %13, %"class.gfx::Transform"* nonnull %14) #16
  br i1 %268, label %269, label %273

269:                                              ; preds = %266
  %270 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %14, %"class.gfx::Rect"* dereferenceable(16) %138) #16
  %271 = extractvalue { i64, i64 } %270, 0
  %272 = extractvalue { i64, i64 } %270, 1
  store i64 %271, i64* %139, align 8
  store i64 %272, i64* %141, align 8
  br label %273

273:                                              ; preds = %266, %269
  %274 = phi i8 [ 1, %269 ], [ 0, %266 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %137) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %134) #16
  store i8 %274, i8* %18, align 1
  br label %275

275:                                              ; preds = %227, %273
  %276 = phi i8 [ %228, %227 ], [ %274, %273 ]
  %277 = phi %"class.viz::SharedQuadState"* [ %177, %227 ], [ %265, %273 ]
  %278 = icmp eq i8 %276, 0
  %279 = or i1 %278, %142
  br i1 %279, label %283, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 3
  %282 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %17, %"class.gfx::Rect"* dereferenceable(16) %281) #16
  br i1 %282, label %283, label %463

283:                                              ; preds = %264, %275, %280
  %284 = phi %"class.viz::SharedQuadState"* [ %277, %275 ], [ %277, %280 ], [ %265, %264 ]
  %285 = load i32, i32* %179, align 8
  switch i32 %285, label %387 [
    i32 3, label %286
    i32 8, label %330
  ]

286:                                              ; preds = %283
  %287 = call %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %178) #16
  %288 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %287, i64 0, i32 1, i32 0, i32 0
  %289 = load i64, i64* %288, align 8
  %290 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %159, i64 %289, %"class.viz::SurfaceId"* dereferenceable(32) %133) #16
  %291 = load %"class.util::IdType"*, %"class.util::IdType"** %160, align 8
  %292 = load i64, i64* %162, align 8
  %293 = ptrtoint %"class.util::IdType"* %291 to i64
  %294 = sub i64 %292, %293
  %295 = icmp eq i64 %294, 0
  %296 = inttoptr i64 %292 to %"class.util::IdType"*
  br i1 %295, label %315, label %297

297:                                              ; preds = %286
  %298 = ashr exact i64 %294, 3
  br label %299

299:                                              ; preds = %299, %297
  %300 = phi %"class.util::IdType"* [ %291, %297 ], [ %311, %299 ]
  %301 = phi i64 [ %298, %297 ], [ %310, %299 ]
  %302 = lshr i64 %301, 1
  %303 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %300, i64 %302
  %304 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %303, i64 0, i32 0, i32 0
  %305 = load i64, i64* %304, align 8
  %306 = icmp ult i64 %305, %290
  %307 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %303, i64 1
  %308 = xor i64 %302, -1
  %309 = add i64 %301, %308
  %310 = select i1 %306, i64 %309, i64 %302
  %311 = select i1 %306, %"class.util::IdType"* %307, %"class.util::IdType"* %300
  %312 = icmp eq i64 %310, 0
  br i1 %312, label %313, label %299

313:                                              ; preds = %299
  %314 = ptrtoint %"class.util::IdType"* %311 to i64
  br label %315

315:                                              ; preds = %313, %286
  %316 = phi i64 [ %314, %313 ], [ %293, %286 ]
  %317 = phi %"class.util::IdType"* [ %311, %313 ], [ %291, %286 ]
  %318 = icmp eq %"class.util::IdType"* %317, %296
  br i1 %318, label %323, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %317, i64 0, i32 0, i32 0
  %321 = load i64, i64* %320, align 8
  %322 = icmp ult i64 %290, %321
  br i1 %322, label %323, label %326

323:                                              ; preds = %315, %319
  %324 = ptrtoint %"class.util::IdType"* %317 to i64
  %325 = icmp eq i64 %316, %324
  br i1 %325, label %327, label %326

326:                                              ; preds = %319, %323
  store i8 1, i8* %163, align 2
  br label %327

327:                                              ; preds = %323, %326
  %328 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28CompositorRenderPassDrawQuadEN4util6IdTypeIS0_mLm0ELm1EEE(%"class.viz::AggregatedRenderPass"* %2, %"class.viz::CompositorRenderPassDrawQuad"* %287, i64 %290) #16
  %329 = bitcast %"class.viz::AggregatedRenderPassDrawQuad"* %328 to %"class.viz::DrawQuad"*
  br label %389

330:                                              ; preds = %283
  %331 = call %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %178) #16
  %332 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %331, i64 0, i32 5
  %333 = load i8, i8* %332, align 8
  %334 = and i8 %333, 8
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %385, label %336

336:                                              ; preds = %330
  %337 = load i8, i8* %143, align 1, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %377, label %339

339:                                              ; preds = %336
  %340 = load %"class.util::IdType"*, %"class.util::IdType"** %144, align 8
  %341 = load i64, i64* %146, align 8
  %342 = ptrtoint %"class.util::IdType"* %340 to i64
  %343 = sub i64 %341, %342
  %344 = icmp eq i64 %343, 0
  %345 = inttoptr i64 %341 to %"class.util::IdType"*
  br i1 %344, label %365, label %346

346:                                              ; preds = %339
  %347 = ashr exact i64 %343, 3
  %348 = load i64, i64* %147, align 8
  br label %349

349:                                              ; preds = %349, %346
  %350 = phi %"class.util::IdType"* [ %340, %346 ], [ %361, %349 ]
  %351 = phi i64 [ %347, %346 ], [ %360, %349 ]
  %352 = lshr i64 %351, 1
  %353 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %350, i64 %352
  %354 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %353, i64 0, i32 0, i32 0
  %355 = load i64, i64* %354, align 8
  %356 = icmp ult i64 %355, %348
  %357 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %353, i64 1
  %358 = xor i64 %352, -1
  %359 = add i64 %351, %358
  %360 = select i1 %356, i64 %359, i64 %352
  %361 = select i1 %356, %"class.util::IdType"* %357, %"class.util::IdType"* %350
  %362 = icmp eq i64 %360, 0
  br i1 %362, label %363, label %349

363:                                              ; preds = %349
  %364 = ptrtoint %"class.util::IdType"* %361 to i64
  br label %365

365:                                              ; preds = %363, %339
  %366 = phi i64 [ %364, %363 ], [ %342, %339 ]
  %367 = phi %"class.util::IdType"* [ %361, %363 ], [ %340, %339 ]
  %368 = icmp eq %"class.util::IdType"* %367, %345
  br i1 %368, label %374, label %369

369:                                              ; preds = %365
  %370 = load i64, i64* %147, align 8
  %371 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %367, i64 0, i32 0, i32 0
  %372 = load i64, i64* %371, align 8
  %373 = icmp ult i64 %370, %372
  br i1 %373, label %374, label %377

374:                                              ; preds = %365, %369
  %375 = ptrtoint %"class.util::IdType"* %367 to i64
  %376 = icmp eq i64 %366, %375
  br i1 %376, label %385, label %377

377:                                              ; preds = %369, %374, %336
  %378 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %148, i64 8, i64 88) #16
  %379 = bitcast i8* %378 to %"class.viz::SolidColorDrawQuad"*
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %379) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #16
  call void @_ZN2cc19ListContainerHelper6rbeginEv(%"class.cc::ListContainerHelper::ReverseIterator"* nonnull sret %11, %"class.cc::ListContainerHelper"* %151) #16, !noalias !52
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %152, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %153) #16
  %380 = load i64, i64* %155, align 8, !noalias !52
  store i64 %380, i64* %154, align 8, !alias.scope !52
  call void @_ZN2cc19ListContainerHelper15ReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ReverseIterator"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #16
  %381 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %157, align 8
  call void @_ZN2cc19ListContainerHelper15ReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ReverseIterator"* nonnull %158) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #16
  %382 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 2
  %383 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %178, i64 0, i32 3
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %379, %"class.viz::SharedQuadState"* %381, %"class.gfx::Rect"* dereferenceable(16) %382, %"class.gfx::Rect"* dereferenceable(16) %383, i32 -16777216, i1 zeroext false) #16
  %384 = bitcast i8* %378 to %"class.viz::DrawQuad"*
  br label %389

385:                                              ; preds = %374, %330
  %386 = call %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"* %2, %"class.viz::DrawQuad"* %178) #16
  br label %389

387:                                              ; preds = %283
  %388 = call %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"* %2, %"class.viz::DrawQuad"* %178) #16
  br label %389

389:                                              ; preds = %377, %385, %387, %327
  %390 = phi %"class.viz::DrawQuad"* [ %329, %327 ], [ %388, %387 ], [ %384, %377 ], [ %386, %385 ]
  %391 = load i64, i64* %164, align 8
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %463, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %390, i64 0, i32 7, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %390, i64 0, i32 7, i32 1, i64 %396
  %398 = icmp eq i32 %395, 0
  br i1 %398, label %463, label %399

399:                                              ; preds = %393
  %400 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %390, i64 0, i32 7, i32 1, i64 0
  br label %401

401:                                              ; preds = %399, %455
  %402 = phi %"class.util::IdType.445"* [ %461, %455 ], [ %400, %399 ]
  %403 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %402, i64 0, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  %405 = zext i32 %404 to i64
  %406 = load i64, i64* %165, align 8
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %455, label %408

408:                                              ; preds = %401
  %409 = call i64 @llvm.ctpop.i64(i64 %406) #16, !range !55
  %410 = icmp ugt i64 %409, 1
  br i1 %410, label %414, label %411

411:                                              ; preds = %408
  %412 = add i64 %406, 4294967295
  %413 = and i64 %412, %405
  br label %418

414:                                              ; preds = %408
  %415 = icmp ugt i64 %406, %405
  br i1 %415, label %418, label %416

416:                                              ; preds = %414
  %417 = urem i64 %405, %406
  br label %418

418:                                              ; preds = %416, %414, %411
  %419 = phi i64 [ %413, %411 ], [ %417, %416 ], [ %405, %414 ]
  %420 = load %"struct.std::__1::__hash_node_base.559"**, %"struct.std::__1::__hash_node_base.559"*** %166, align 8
  %421 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %420, i64 %419
  %422 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %421, align 8
  %423 = icmp eq %"struct.std::__1::__hash_node_base.559"* %422, null
  br i1 %423, label %455, label %424

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %422, i64 0, i32 0
  %426 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %425, align 8
  %427 = icmp eq %"struct.std::__1::__hash_node_base.559"* %426, null
  br i1 %427, label %455, label %428

428:                                              ; preds = %424
  %429 = add i64 %406, -1
  br label %430

430:                                              ; preds = %451, %428
  %431 = phi %"struct.std::__1::__hash_node_base.559"* [ %426, %428 ], [ %453, %451 ]
  %432 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %431, i64 1
  %433 = bitcast %"struct.std::__1::__hash_node_base.559"* %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = icmp eq i64 %434, %405
  br i1 %435, label %446, label %436

436:                                              ; preds = %430
  br i1 %410, label %439, label %437

437:                                              ; preds = %436
  %438 = and i64 %434, %429
  br label %443

439:                                              ; preds = %436
  %440 = icmp ult i64 %434, %406
  br i1 %440, label %443, label %441

441:                                              ; preds = %439
  %442 = urem i64 %434, %406
  br label %443

443:                                              ; preds = %441, %439, %437
  %444 = phi i64 [ %438, %437 ], [ %442, %441 ], [ %434, %439 ]
  %445 = icmp eq i64 %444, %419
  br i1 %445, label %451, label %455

446:                                              ; preds = %430
  %447 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %431, i64 2
  %448 = bitcast %"struct.std::__1::__hash_node_base.559"* %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = icmp eq i32 %449, %404
  br i1 %450, label %455, label %451

451:                                              ; preds = %446, %443
  %452 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %431, i64 0, i32 0
  %453 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %452, align 8
  %454 = icmp eq %"struct.std::__1::__hash_node_base.559"* %453, null
  br i1 %454, label %455, label %430

455:                                              ; preds = %443, %446, %451, %401, %418, %424
  %456 = phi %"struct.std::__1::__hash_node_base.559"* [ null, %418 ], [ null, %401 ], [ null, %424 ], [ %431, %446 ], [ null, %451 ], [ null, %443 ]
  %457 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %456, i64 2
  %458 = bitcast %"struct.std::__1::__hash_node_base.559"* %457 to %"struct.std::__1::pair.589"*
  %459 = getelementptr inbounds %"struct.std::__1::pair.589", %"struct.std::__1::pair.589"* %458, i64 0, i32 1, i32 0, i32 0
  %460 = load i32, i32* %459, align 4
  store i32 %460, i32* %403, align 4
  %461 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %402, i64 1
  %462 = icmp eq %"class.util::IdType.445"* %461, %397
  br i1 %462, label %463, label %401

463:                                              ; preds = %455, %393, %203, %191, %195, %187, %222, %389, %280
  %464 = phi %"class.viz::SharedQuadState"* [ null, %203 ], [ %277, %280 ], [ null, %222 ], [ %284, %389 ], [ null, %187 ], [ null, %195 ], [ null, %191 ], [ %284, %393 ], [ %284, %455 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %10, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %108) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #16
  %465 = load i64, i64* %104, align 8
  %466 = add i64 %465, 1
  store i64 %466, i64* %104, align 8
  %467 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %108, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %116) #16
  br i1 %467, label %176, label %173
}

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.viz::SharedQuadState"*, %"class.gfx::Transform"* nocapture readonly dereferenceable(68), %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.absl::optional.268"* nocapture readonly dereferenceable(20), %"class.viz::AggregatedRenderPass"*, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %"class.absl::optional.268", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %7, i64 0, i32 0
  %14 = tail call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %13) #16
  %15 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #16
  %16 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %17 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 20, i1 false)
  store i8 0, i8* %15, align 4, !alias.scope !56
  %18 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2, !noalias !56
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %18, i64 20, i1 false) #16
  br label %22

22:                                               ; preds = %21, %9
  %23 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2, !noalias !56
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16, !noalias !56
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %29 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = tail call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %3, %"class.gfx::Rect"* dereferenceable(16) %29) #16, !noalias !56
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %32 = extractvalue { i64, i64 } %30, 0
  store i64 %32, i64* %31, align 8, !noalias !56
  %33 = extractvalue { i64, i64 } %30, 1
  store i64 %33, i64* %28, align 8, !noalias !56
  %34 = load i8, i8* %15, align 4, !range !2, !alias.scope !56
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %37, %"class.gfx::Rect"* nonnull dereferenceable(16) %16) #16
  br label %41

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon.272* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* nonnull align 8 %27, i64 16, i1 false) #16
  store i8 1, i8* %15, align 4, !alias.scope !56
  br label %41

41:                                               ; preds = %38, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16, !noalias !56
  br label %42

42:                                               ; preds = %22, %41
  %43 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %43) #16
  %44 = bitcast %"class.gfx::Transform"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %44, i64 68, i1 false) #16
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %12, %"class.gfx::Transform"* dereferenceable(68) %3) #16
  %45 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %8, i64 0, i32 0
  %46 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 5
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 7
  %50 = load float, float* %49, align 8
  %51 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 8
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 9
  %54 = load i32, i32* %53, align 8
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %14, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %"class.gfx::Rect"* dereferenceable(16) %4, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::MaskFilterInfo"* dereferenceable(52) %45, %"class.absl::optional.268"* nonnull dereferenceable(20) %11, i1 zeroext %48, float %50, i32 %52, i32 %54) #16
  %55 = getelementptr inbounds %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %8, i64 0, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %14, i64 0, i32 10
  store i8 %56, i8* %57, align 4
  %58 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 13
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %14, i64 0, i32 13
  %62 = bitcast float* %61 to i32*
  store i32 %60, i32* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %43) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #16
  ret %"class.viz::SharedQuadState"* %14
}

declare void @_ZN3viz28AggregatedRenderPassDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_N4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEENS9_INS_20ResourceIdTypeMarkerEjLj0ELj1EEERKNS4_5RectFERKNS4_4SizeERKNS4_9Vector2dFERKNS4_6PointFESG_bf(%"class.viz::AggregatedRenderPassDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i64, i32, %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::RectF"* dereferenceable(16), i1 zeroext, float) local_unnamed_addr #1

declare void @_ZN3viz7Surface12DidAggregateEv(%"class.viz::Surface"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #16
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #16
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #16
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #16
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #16
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret i64 %29
}

declare void @_ZNK3viz12SurfaceRange8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::SurfaceRange"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator19CopySharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformERKN4absl8optionalINS4_4RectEEEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.viz::SharedQuadState"*, %"class.gfx::Transform"* dereferenceable(68), %"class.absl::optional.268"* nocapture readonly dereferenceable(20), %"class.viz::AggregatedRenderPass"*, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 2
  %10 = tail call %"class.viz::SharedQuadState"* @_ZN3viz17SurfaceAggregator27CopyAndScaleSharedQuadStateEPKNS_15SharedQuadStateERKN3gfx9TransformES7_RKNS4_4RectESA_RKN4absl8optionalIS8_EEPNS_20AggregatedRenderPassERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* undef, %"class.viz::SharedQuadState"* %1, %"class.gfx::Transform"* dereferenceable(68) %7, %"class.gfx::Transform"* dereferenceable(68) %2, %"class.gfx::Rect"* dereferenceable(16) %8, %"class.gfx::Rect"* dereferenceable(16) %9, %"class.absl::optional.268"* dereferenceable(20) %3, %"class.viz::AggregatedRenderPass"* %4, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* dereferenceable(56) %5)
  ret %"class.viz::SharedQuadState"* %10
}

declare void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator22AddColorConversionPassEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::unique_ptr.230", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::MaskFilterInfo", align 4
  %9 = alloca %"class.absl::optional.268", align 4
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca %"class.gfx::Size", align 4
  %12 = alloca %"class.gfx::Vector2dF", align 4
  %13 = alloca %"class.gfx::PointF", align 4
  %14 = alloca %"class.gfx::RectF", align 4
  %15 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %16 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %16, i64 0, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %18, i64 -1, i32 0, i32 0, i32 0
  %20 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %19, align 8
  %21 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %26 = bitcast %"class.viz::AggregatedRenderPass"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 8 %26, i64 16, i1 false)
  %27 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 2
  %30 = load i8, i8* %29, align 8
  %31 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp ne i8 %32, 0
  call void @_ZNK3gfx18DisplayColorSpaces19GetOutputColorSpaceENS_17ContentColorUsageEb(%"class.gfx::ColorSpace"* nonnull sret %3, %"class.gfx::DisplayColorSpaces"* %28, i8 zeroext %30, i1 zeroext %33) #16
  %34 = call zeroext i1 @_ZNK3gfx10ColorSpace21IsSuitableForBlendingEv(%"class.gfx::ColorSpace"* nonnull %3) #16
  %35 = xor i1 %34, true
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %27) #16
  %36 = zext i1 %35 to i8
  %37 = zext i1 %35 to i32
  %38 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 38
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %1
  %43 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 0, i32 1
  %44 = bitcast %"class.gfx::Rect"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 4 %21, i64 16, i1 false)
  br label %45

45:                                               ; preds = %1, %42
  store i8 %36, i8* %38, align 1
  br i1 %34, label %137, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 0, i32 2
  %48 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %48) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %49 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %47, i64 0, i32 0
  %51 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0
  %52 = call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %50, %class.SkMatrix44* nonnull dereferenceable(68) %51) #16
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 870, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9, i64 0, i64 0)) #16
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  br label %56

56:                                               ; preds = %46, %53
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %48) #16
  %57 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 8, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %62 = call i64 @_ZN3viz20RenderPassIdRemapper15NextAvailableIdEv(%"class.viz::RenderPassIdRemapper"* %61) #16
  store i64 %62, i64* %57, align 8
  br label %63

63:                                               ; preds = %56, %60
  %64 = bitcast %"class.std::__1::unique_ptr.230"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #16
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %6, i64 0, i32 0, i32 0, i32 0
  %66 = call i8* @_Znwm(i64 272) #17
  %67 = bitcast i8* %66 to %"class.viz::AggregatedRenderPass"*
  call void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"* nonnull %67, i64 1, i64 1) #16
  %68 = bitcast %"class.std::__1::unique_ptr.230"* %6 to i8**
  store i8* %66, i8** %68, align 8
  %69 = load i64, i64* %57, align 8
  %70 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 0, i32 1
  call void @_ZN3viz20AggregatedRenderPass6SetNewEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformE(%"class.viz::AggregatedRenderPass"* nonnull %67, i64 %69, %"class.gfx::Rect"* nonnull dereferenceable(16) %2, %"class.gfx::Rect"* dereferenceable(16) %70, %"class.gfx::Transform"* dereferenceable(68) %47) #16
  %71 = load i8, i8* %31, align 8, !range !2
  %72 = getelementptr inbounds i8, i8* %66, i64 208
  store i8 %71, i8* %72, align 8
  %73 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 28
  %74 = load i8, i8* %73, align 8
  %75 = getelementptr inbounds i8, i8* %66, i64 264
  store i8 %74, i8* %75, align 8
  %76 = getelementptr inbounds i8, i8* %66, i64 265
  store i8 1, i8* %76, align 1
  %77 = bitcast i8* %66 to %"class.viz::RenderPassInternal"*
  %78 = call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* nonnull %77) #16
  %79 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %79) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %80 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %80, align 4
  %81 = bitcast %"class.gfx::MaskFilterInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %81) #16
  %82 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.gfx::MaskFilterInfo"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %83, i8 0, i64 52, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %82) #16
  store i8 0, i8* %82, align 4
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %78, %"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %2, %"class.gfx::Rect"* nonnull dereferenceable(16) %2, %"class.gfx::MaskFilterInfo"* nonnull dereferenceable(52) %8, %"class.absl::optional.268"* nonnull dereferenceable(20) %9, i1 zeroext false, float 1.000000e+00, i32 1, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %82) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %81) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %79) #16
  %84 = getelementptr inbounds i8, i8* %66, i64 240
  %85 = bitcast i8* %84 to %"class.cc::ListContainerHelper"*
  %86 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %85, i64 8, i64 152) #16
  %87 = bitcast i8* %86 to %"class.viz::AggregatedRenderPassDrawQuad"*
  call void @_ZN3viz28AggregatedRenderPassDrawQuadC1Ev(%"class.viz::AggregatedRenderPassDrawQuad"* %87) #16
  %88 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %20, i64 0, i32 1, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #16
  %91 = bitcast %"class.gfx::Size"* %11 to i8*
  %92 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %92, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #16
  %93 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 0
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 1
  store i32 0, i32* %94, align 4
  %95 = bitcast %"class.gfx::Vector2dF"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #16
  %96 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 0
  store float 0.000000e+00, float* %96, align 4
  %97 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 1
  store float 0.000000e+00, float* %97, align 4
  %98 = bitcast %"class.gfx::PointF"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #16
  %99 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %13, i64 0, i32 0
  store float 0.000000e+00, float* %99, align 4
  %100 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %13, i64 0, i32 1
  store float 0.000000e+00, float* %100, align 4
  %101 = bitcast %"class.gfx::RectF"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #16
  %102 = load i32, i32* %22, align 4
  %103 = sitofp i32 %102 to float
  %104 = load i32, i32* %23, align 4
  %105 = sitofp i32 %104 to float
  %106 = load i32, i32* %24, align 4
  %107 = load i32, i32* %25, align 4
  %108 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 0, i32 0
  store float %103, float* %108, align 4
  %109 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 0, i32 1
  store float %105, float* %109, align 4
  %110 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 1, i32 0
  %111 = icmp sgt i32 %106, 0
  %112 = select i1 %111, i32 %106, i32 0
  %113 = sitofp i32 %112 to float
  store float %113, float* %110, align 4
  %114 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 1, i32 1
  %115 = icmp sgt i32 %107, 0
  %116 = select i1 %115, i32 %107, i32 0
  %117 = sitofp i32 %116 to float
  store float %117, float* %114, align 4
  call void @_ZN3viz28AggregatedRenderPassDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_N4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEENS9_INS_20ResourceIdTypeMarkerEjLj0ELj1EEERKNS4_5RectFERKNS4_4SizeERKNS4_9Vector2dFERKNS4_6PointFESG_bf(%"class.viz::AggregatedRenderPassDrawQuad"* %87, %"class.viz::SharedQuadState"* %78, %"class.gfx::Rect"* nonnull dereferenceable(16) %2, %"class.gfx::Rect"* nonnull dereferenceable(16) %2, i64 %89, i32 0, %"class.gfx::RectF"* nonnull dereferenceable(16) %10, %"class.gfx::Size"* nonnull dereferenceable(8) %11, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, %"class.gfx::PointF"* nonnull dereferenceable(8) %13, %"class.gfx::RectF"* nonnull dereferenceable(16) %14, i1 zeroext false, float 1.000000e+00) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #16
  %118 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %15, align 8
  %119 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %118, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %118, i64 0, i32 0, i32 2, i32 0, i32 0
  %122 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %121, align 8
  %123 = icmp ult %"class.std::__1::unique_ptr.230"* %120, %122
  br i1 %123, label %124, label %130

124:                                              ; preds = %63
  %125 = ptrtoint i8* %66 to i64
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %65, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.230"* %120 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %120, i64 1
  %128 = ptrtoint %"class.std::__1::unique_ptr.230"* %127 to i64
  %129 = bitcast %"class.std::__1::unique_ptr.230"** %119 to i64*
  store i64 %128, i64* %129, align 8
  br label %131

130:                                              ; preds = %63
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %118, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %6) #16
  br label %131

131:                                              ; preds = %124, %130
  %132 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %65, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %65, align 8
  %133 = icmp eq %"class.viz::AggregatedRenderPass"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %132) #16
  %135 = bitcast %"class.viz::AggregatedRenderPass"* %132 to i8*
  call void @_ZdlPv(i8* %135) #17
  br label %136

136:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #16
  br label %137

137:                                              ; preds = %45, %136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  ret void
}

declare void @_ZNK3gfx18DisplayColorSpaces19GetOutputColorSpaceENS_17ContentColorUsageEb(%"class.gfx::ColorSpace"* sret, %"class.gfx::DisplayColorSpaces"*, i8 zeroext, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx10ColorSpace21IsSuitableForBlendingEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i64 @_ZN3viz20RenderPassIdRemapper15NextAvailableIdEv(%"class.viz::RenderPassIdRemapper"*) local_unnamed_addr #1

declare void @_ZN3viz20AggregatedRenderPass6SetNewEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformE(%"class.viz::AggregatedRenderPass"*, i64, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"*) local_unnamed_addr #1

declare void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::MaskFilterInfo"* dereferenceable(52), %"class.absl::optional.268"* dereferenceable(20), i1 zeroext, float, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator23AddDisplayTransformPassEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.std::__1::unique_ptr.230", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca %"class.gfx::Transform", align 4
  %12 = alloca %"class.cc::FilterOperations", align 8
  %13 = alloca %"class.cc::FilterOperations", align 8
  %14 = alloca %"class.absl::optional.253", align 4
  %15 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %16 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %17 = alloca %"class.gfx::MaskFilterInfo", align 4
  %18 = alloca %"class.absl::optional.268", align 4
  %19 = alloca %"class.gfx::RectF", align 4
  %20 = alloca %"class.gfx::Size", align 4
  %21 = alloca %"class.gfx::Vector2dF", align 4
  %22 = alloca %"class.gfx::PointF", align 4
  %23 = alloca %"class.gfx::RectF", align 4
  %24 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %25 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %25, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.230"* %27, %29
  br i1 %30, label %175, label %31

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %29, i64 -1, i32 0, i32 0, i32 0
  %33 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %32, align 8
  %34 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 0, i32 0
  %40 = bitcast %"class.viz::AggregatedRenderPass"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 8 %40, i64 16, i1 false)
  %41 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %46 = tail call i64 @_ZN3viz20RenderPassIdRemapper15NextAvailableIdEv(%"class.viz::RenderPassIdRemapper"* %45) #16
  store i64 %46, i64* %41, align 8
  br label %47

47:                                               ; preds = %31, %44
  %48 = bitcast %"class.std::__1::unique_ptr.230"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %6, i64 0, i32 0, i32 0, i32 0
  %50 = tail call i8* @_Znwm(i64 272) #17
  %51 = bitcast i8* %50 to %"class.viz::AggregatedRenderPass"*
  tail call void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"* nonnull %51, i64 1, i64 1) #16
  %52 = bitcast %"class.std::__1::unique_ptr.230"* %6 to i8**
  store i8* %50, i8** %52, align 8
  %53 = load i64, i64* %41, align 8
  %54 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #16
  %55 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 13
  %56 = tail call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %55, %"class.gfx::Rect"* dereferenceable(16) %39) #16
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %58 = extractvalue { i64, i64 } %56, 0
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %60 = extractvalue { i64, i64 } %56, 1
  store i64 %60, i64* %59, align 8
  %61 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 0, i32 1
  %63 = tail call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %55, %"class.gfx::Rect"* dereferenceable(16) %62) #16
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %65 = extractvalue { i64, i64 } %63, 0
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %67 = extractvalue { i64, i64 } %63, 1
  store i64 %67, i64* %66, align 8
  %68 = bitcast %"class.gfx::Transform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %68) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %68, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %69 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %11, i64 0, i32 0, i32 1
  store i8 0, i8* %69, align 4
  %70 = bitcast %"class.cc::FilterOperations"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #16
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %12) #16
  %71 = bitcast %"class.cc::FilterOperations"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #16
  call void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"* nonnull %13) #16
  %72 = getelementptr inbounds %"class.absl::optional.253", %"class.absl::optional.253"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %72) #16
  store i8 1, i8* %72, align 4
  %73 = getelementptr inbounds %"class.absl::optional.253", %"class.absl::optional.253"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %union.anon.257* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 52, i1 false)
  %75 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 2
  %76 = load i8, i8* %75, align 8
  %77 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp ne i8 %78, 0
  call void @_ZN3viz20AggregatedRenderPass6SetAllEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformERKN2cc16FilterOperationsESE_RKN4absl8optionalINS4_6RRectFEEENS4_17ContentColorUsageEbbbb(%"class.viz::AggregatedRenderPass"* nonnull %51, i64 %53, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Transform"* nonnull dereferenceable(68) %11, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %12, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %13, %"class.absl::optional.253"* nonnull dereferenceable(56) %14, i8 zeroext %76, i1 zeroext %79, i1 zeroext false, i1 zeroext false, i1 zeroext false) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %72) #16
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #16
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %68) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #16
  %80 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #16
  %81 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15, i64 0, i32 0, i32 0, i32 2
  %82 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15, i64 0, i32 0, i32 1
  %83 = bitcast %"class.cc::ListContainerHelper::Iterator"* %2 to i8*
  %84 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #16, !noalias !59
  %85 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 0, i32 12, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %2, %"class.cc::ListContainerHelper"* %85) #16, !noalias !59
  %86 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %2, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %86, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %87) #16
  %88 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %2, i64 0, i32 1
  %89 = load i64, i64* %88, align 8, !noalias !59
  store i64 %89, i64* %82, align 8, !alias.scope !59
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #16, !noalias !59
  %90 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #16
  %91 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %16, i64 0, i32 0, i32 1
  %92 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  %93 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #16, !noalias !62
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %85) #16, !noalias !62
  %94 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %16, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %94, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %95) #16
  %96 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %97 = load i64, i64* %96, align 8, !noalias !62
  store i64 %97, i64* %91, align 8, !alias.scope !62
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #16, !noalias !62
  %98 = bitcast i8** %81 to %"class.viz::SharedQuadState"**
  %99 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %86, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %94) #16
  br i1 %99, label %100, label %113

100:                                              ; preds = %47
  %101 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %4 to i8*
  br label %102

102:                                              ; preds = %100, %107
  %103 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %98, align 8
  %104 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %103, i64 0, i32 5
  %105 = load i8, i8* %104, align 4, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %4, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %86) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #16
  %108 = load i64, i64* %82, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %82, align 8
  %110 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %86, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %94) #16
  br i1 %110, label %102, label %111

111:                                              ; preds = %102, %107
  %112 = xor i1 %106, true
  br label %113

113:                                              ; preds = %111, %47
  %114 = phi i1 [ true, %47 ], [ %112, %111 ]
  %115 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %16, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %115) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #16
  %116 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %15, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %116) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #16
  %117 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %49, align 8
  %118 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %117, i64 0, i32 0
  %119 = call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %118) #16
  %120 = bitcast %"class.gfx::MaskFilterInfo"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.gfx::MaskFilterInfo"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 0, i64 52, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %121) #16
  store i8 0, i8* %121, align 4
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %119, %"class.gfx::Transform"* dereferenceable(68) %55, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::MaskFilterInfo"* nonnull dereferenceable(52) %17, %"class.absl::optional.268"* nonnull dereferenceable(20) %18, i1 zeroext %114, float 1.000000e+00, i32 3, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %121) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %120) #16
  %123 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %117, i64 0, i32 0, i32 11, i32 0, i32 0
  %124 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %123, i64 8, i64 152) #16
  %125 = bitcast i8* %124 to %"class.viz::AggregatedRenderPassDrawQuad"*
  call void @_ZN3viz28AggregatedRenderPassDrawQuadC1Ev(%"class.viz::AggregatedRenderPassDrawQuad"* %125) #16
  %126 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %33, i64 0, i32 1, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.gfx::RectF"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #16
  %129 = bitcast %"class.gfx::Size"* %20 to i8*
  %130 = bitcast %"class.gfx::RectF"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %130, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #16
  %131 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 0
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %20, i64 0, i32 1
  store i32 0, i32* %132, align 4
  %133 = bitcast %"class.gfx::Vector2dF"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #16
  %134 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %21, i64 0, i32 0
  store float 0.000000e+00, float* %134, align 4
  %135 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %21, i64 0, i32 1
  store float 0.000000e+00, float* %135, align 4
  %136 = bitcast %"class.gfx::PointF"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #16
  %137 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %22, i64 0, i32 0
  store float 0.000000e+00, float* %137, align 4
  %138 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %22, i64 0, i32 1
  store float 0.000000e+00, float* %138, align 4
  %139 = bitcast %"class.gfx::RectF"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #16
  %140 = load i32, i32* %35, align 4
  %141 = sitofp i32 %140 to float
  %142 = load i32, i32* %36, align 4
  %143 = sitofp i32 %142 to float
  %144 = load i32, i32* %37, align 4
  %145 = load i32, i32* %38, align 4
  %146 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %23, i64 0, i32 0, i32 0
  store float %141, float* %146, align 4
  %147 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %23, i64 0, i32 0, i32 1
  store float %143, float* %147, align 4
  %148 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %23, i64 0, i32 1, i32 0
  %149 = icmp sgt i32 %144, 0
  %150 = select i1 %149, i32 %144, i32 0
  %151 = sitofp i32 %150 to float
  store float %151, float* %148, align 4
  %152 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %23, i64 0, i32 1, i32 1
  %153 = icmp sgt i32 %145, 0
  %154 = select i1 %153, i32 %145, i32 0
  %155 = sitofp i32 %154 to float
  store float %155, float* %152, align 4
  call void @_ZN3viz28AggregatedRenderPassDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_N4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEENS9_INS_20ResourceIdTypeMarkerEjLj0ELj1EEERKNS4_5RectFERKNS4_4SizeERKNS4_9Vector2dFERKNS4_6PointFESG_bf(%"class.viz::AggregatedRenderPassDrawQuad"* %125, %"class.viz::SharedQuadState"* %119, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, i64 %127, i32 0, %"class.gfx::RectF"* nonnull dereferenceable(16) %19, %"class.gfx::Size"* nonnull dereferenceable(8) %20, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %21, %"class.gfx::PointF"* nonnull dereferenceable(8) %22, %"class.gfx::RectF"* nonnull dereferenceable(16) %23, i1 zeroext false, float 1.000000e+00) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #16
  %156 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %24, align 8
  %157 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %156, i64 0, i32 0, i32 1
  %158 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %156, i64 0, i32 0, i32 2, i32 0, i32 0
  %160 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %159, align 8
  %161 = icmp ult %"class.std::__1::unique_ptr.230"* %158, %160
  br i1 %161, label %162, label %168

162:                                              ; preds = %113
  %163 = ptrtoint %"class.viz::AggregatedRenderPass"* %117 to i64
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %49, align 8
  %164 = bitcast %"class.std::__1::unique_ptr.230"* %158 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %158, i64 1
  %166 = ptrtoint %"class.std::__1::unique_ptr.230"* %165 to i64
  %167 = bitcast %"class.std::__1::unique_ptr.230"** %157 to i64*
  store i64 %166, i64* %167, align 8
  br label %169

168:                                              ; preds = %113
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %156, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %6) #16
  br label %169

169:                                              ; preds = %162, %168
  %170 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %49, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %49, align 8
  %171 = icmp eq %"class.viz::AggregatedRenderPass"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %170) #16
  %173 = bitcast %"class.viz::AggregatedRenderPass"* %170 to i8*
  call void @_ZdlPv(i8* %173) #17
  br label %174

174:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #16
  br label %175

175:                                              ; preds = %1, %174
  ret void
}

declare { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc16FilterOperationsC1Ev(%"class.cc::FilterOperations"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #2

declare %"class.viz::SurfaceDrawQuad"* @_ZN3viz15SurfaceDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

declare %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

declare %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28CompositorRenderPassDrawQuadEN4util6IdTypeIS0_mLm0ELm1EEE(%"class.viz::AggregatedRenderPass"*, %"class.viz::CompositorRenderPassDrawQuad"*, i64) local_unnamed_addr #1

declare %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

declare %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"*, %"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator10CopyPassesERKNS_15CompositorFrameEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.viz::CompositorFrame"* nocapture readonly dereferenceable(296), %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::multimap", align 8
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca %"class.std::__1::unique_ptr.230", align 8
  %8 = alloca %"class.gfx::Rect", align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca %"struct.viz::SurfaceAggregator::MaskFilterInfoExt", align 4
  %14 = alloca %"class.gfx::Transform", align 4
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %"class.gfx::Rect"*
  %17 = bitcast %"class.std::__1::multimap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node_base"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %18, align 8
  call void @_ZN3viz7Surface22TakeCopyOutputRequestsEPNSt3__18multimapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS1_10unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS8_EEEENS1_4lessIS6_EENS1_9allocatorINS1_4pairIKS6_SB_EEEEEE(%"class.viz::Surface"* %2, %"class.std::__1::multimap"* nonnull %4) #16
  %22 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19
  %24 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0
  %25 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %23, %"class.viz::SurfaceId"* dereferenceable(32) %24) #16
  %26 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %25, 0
  %27 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %25, 1
  %28 = icmp eq %"class.viz::SurfaceId"* %27, %26
  br i1 %28, label %387, label %29

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34, !prof !28

33:                                               ; preds = %29
  call void @llvm.trap() #16
  unreachable

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  %39 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %38, align 8
  %40 = call i32 @_ZN3viz17SurfaceAggregator17ChildIdForSurfaceEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %2)
  %41 = call dereferenceable(40) %"class.std::__1::unordered_map.554"* @_ZNK3viz23DisplayResourceProvider19GetChildToParentMapEi(%"class.viz::DisplayResourceProvider"* %39, i32 %40) #16
  %42 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %42) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %43 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %81

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %81

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %81

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %81

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %68, %70
  br i1 %71, label %72, label %81

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 13
  %80 = bitcast %"class.gfx::Transform"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %80, i64 68, i1 false) #16
  br label %83

81:                                               ; preds = %34, %66, %54, %60, %48, %72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %82 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %82, align 4
  br label %83

83:                                               ; preds = %81, %78
  %84 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %1, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %84, align 8
  %86 = icmp eq %"class.gfx::DelegatedInkMetadata"* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %88) #16
  %89 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %1, i64 0, i32 2, i32 0, i32 1
  %90 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %90, i64 -1, i32 0, i32 0, i32 0
  %92 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %91, align 8
  %93 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0
  %94 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %92, i64 0, i32 0, i32 2, i32 0
  %95 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %93, %class.SkMatrix44* dereferenceable(68) %94, %class.SkMatrix44* nonnull dereferenceable(68) %95) #16
  %96 = call %"class.gfx::DelegatedInkMetadata"* @_ZN3viz7Surface24TakeDelegatedInkMetadataEv(%"class.viz::Surface"* %2) #16
  call void @_ZN3viz17SurfaceAggregator37TransformAndStoreDelegatedInkMetadataERKN3gfx9TransformENSt3__110unique_ptrINS1_20DelegatedInkMetadataENS5_14default_deleteIS7_EEEE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::DelegatedInkMetadata"* %96)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %88) #16
  br label %97

97:                                               ; preds = %83, %87
  %98 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %1, i64 0, i32 2, i32 0, i32 1
  %99 = bitcast %"class.std::__1::unique_ptr.359"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.357"* %22 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %386, label %105

105:                                              ; preds = %97
  %106 = ashr exact i64 %103, 3
  %107 = bitcast %"class.std::__1::unique_ptr.230"* %7 to i8*
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %7, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.230"* %7 to i8**
  %110 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  %111 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %112 = bitcast %"class.gfx::Rect"* %8 to i8*
  %113 = bitcast %"class.gfx::Transform"* %9 to i8*
  %114 = bitcast %"class.gfx::Transform"* %10 to i8*
  %115 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %10, i64 0, i32 0
  %116 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0
  %117 = bitcast %"class.gfx::Rect"* %8 to i64*
  %118 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %119 = bitcast %"class.gfx::Size"* %118 to i64*
  %120 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 28
  %121 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 3
  %122 = bitcast %"class.gfx::Rect"* %11 to i8*
  %123 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %1, i64 0, i32 0, i32 0
  %124 = bitcast %"class.gfx::Transform"* %12 to i8*
  %125 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0, i32 1
  %126 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %13 to i8*
  %127 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %129 = bitcast %"class.util::IdType"** %128 to i64*
  %130 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %132 = bitcast %"class.util::IdType"** %131 to i64*
  %133 = bitcast %"class.gfx::Transform"* %14 to i8*
  %134 = bitcast { i64, i64 }* %15 to i8*
  %135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %136 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 26
  %137 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %138 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24
  %139 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %141 = bitcast %"class.util::IdType"** %140 to i64*
  %142 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %138, i64 0, i32 0
  %143 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %144 = bitcast %"class.std::__1::unique_ptr.230"* %7 to i64*
  %145 = bitcast %"class.gfx::Rect"* %11 to i8*
  %146 = bitcast %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* %13 to i8*
  %147 = bitcast { i64, i64 }* %15 to i8*
  br label %149

148:                                              ; preds = %378
  br i1 %179, label %386, label %385

149:                                              ; preds = %105, %378
  %150 = phi i64 [ %102, %105 ], [ %381, %378 ]
  %151 = phi i64 [ %106, %105 ], [ %383, %378 ]
  %152 = phi i64 [ 0, %105 ], [ %379, %378 ]
  %153 = inttoptr i64 %150 to %"class.std::__1::unique_ptr.359"*
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %153, i64 %152, i32 0, i32 0, i32 0
  %155 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %154, align 8
  %156 = add nsw i64 %151, -1
  %157 = icmp eq i64 %152, %156
  %158 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 12, i32 0
  %159 = call i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"* %158) #16
  %160 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 11, i32 0, i32 0
  %161 = call i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"* %160) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #16
  store %"class.viz::AggregatedRenderPass"* inttoptr (i64 -6148914691236517206 to %"class.viz::AggregatedRenderPass"*), %"class.viz::AggregatedRenderPass"** %108, align 8
  %162 = call i8* @_Znwm(i64 272) #17
  %163 = bitcast i8* %162 to %"class.viz::AggregatedRenderPass"*
  call void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"* nonnull %163, i64 %159, i64 %161) #16
  store i8* %162, i8** %109, align 8
  %164 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 1, i32 0, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %162, i64 216
  %167 = bitcast i8* %166 to %"class.std::__1::vector.258"*
  call fastcc void @_ZN3viz12_GLOBAL__N_120MoveMatchingRequestsEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEEPNSt3__18multimapIS4_NS5_10unique_ptrINS_17CopyOutputRequestENS5_14default_deleteIS8_EEEENS5_4lessIS4_EENS5_9allocatorINS5_4pairIKS4_SB_EEEEEEPNS5_6vectorISB_NSE_ISB_EEEE(i64 %165, %"class.std::__1::multimap"* nonnull %4, %"class.std::__1::vector.258"* %167)
  br i1 %157, label %168, label %178

168:                                              ; preds = %149
  %169 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  %170 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %169, i64 0, i32 0, i32 10, i32 0, i32 0
  %171 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %170, align 8
  %172 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %169, i64 0, i32 0, i32 10, i32 0, i32 1
  %173 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %172, align 8
  %174 = icmp eq %"class.std::__1::unique_ptr.260"* %171, %173
  br i1 %174, label %178, label %175

175:                                              ; preds = %168
  %176 = load i8, i8* %110, align 4
  %177 = icmp eq i8 %176, 0
  br label %178

178:                                              ; preds = %168, %175, %149
  %179 = phi i1 [ false, %149 ], [ true, %168 ], [ %177, %175 ]
  %180 = load i64, i64* %164, align 8
  %181 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %111, i64 %180, %"class.viz::SurfaceId"* dereferenceable(32) %24) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #16
  %182 = bitcast %"class.viz::CompositorRenderPass"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 %182, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %113) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %183 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 2
  %184 = bitcast %"class.gfx::Transform"* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* align 4 %184, i64 68, i1 false) #16
  br i1 %179, label %185, label %189

185:                                              ; preds = %178
  %186 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #16
  %187 = extractvalue { i64, i64 } %186, 0
  %188 = extractvalue { i64, i64 } %186, 1
  store i64 %187, i64* %117, align 8
  store i64 %188, i64* %119, align 8
  br label %191

189:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %114) #16
  %190 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %183, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %115, %class.SkMatrix44* nonnull dereferenceable(68) %116, %class.SkMatrix44* dereferenceable(68) %190) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* nonnull align 4 %114, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %114) #16
  br label %191

191:                                              ; preds = %189, %185
  %192 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  %193 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 3
  %194 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 4
  %195 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 5
  %196 = load i8, i8* %120, align 8
  %197 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 6
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp ne i8 %198, 0
  %200 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 7
  %201 = load i8, i8* %200, align 1, !range !2
  %202 = icmp ne i8 %201, 0
  %203 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 8
  %204 = load i8, i8* %203, align 2, !range !2
  %205 = icmp ne i8 %204, 0
  %206 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %155, i64 0, i32 0, i32 9
  %207 = load i8, i8* %206, align 1, !range !2
  %208 = icmp ne i8 %207, 0
  call void @_ZN3viz20AggregatedRenderPass6SetAllEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformERKN2cc16FilterOperationsESE_RKN4absl8optionalINS4_6RRectFEEENS4_17ContentColorUsageEbbbb(%"class.viz::AggregatedRenderPass"* %192, i64 %181, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.cc::FilterOperations"* dereferenceable(24) %193, %"class.cc::FilterOperations"* dereferenceable(24) %194, %"class.absl::optional.253"* dereferenceable(56) %195, i8 zeroext %196, i1 zeroext %199, i1 zeroext %202, i1 zeroext %205, i1 zeroext %208) #16
  %209 = load i8, i8* %121, align 1, !range !2
  %210 = icmp eq i8 %209, 0
  %211 = xor i1 %157, true
  %212 = or i1 %210, %211
  br i1 %212, label %215, label %213

213:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %145, i8 0, i64 16, i1 false)
  %214 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  call void @_ZN3viz17SurfaceAggregator28AddSurfaceDamageToDamageListERKN3gfx4RectERKNS1_9TransformERKN4absl8optionalIS2_EEPKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, %"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.absl::optional.268"* dereferenceable(20) bitcast ({ i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } }* @.ref.tmp.10 to %"class.absl::optional.268"*), %"class.viz::CompositorRenderPass"* %155, %"class.viz::AggregatedRenderPass"* %214, %"class.viz::Surface"* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #16
  br label %215

215:                                              ; preds = %191, %213
  %216 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  %217 = load float, float* %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %124) #16
  br i1 %179, label %218, label %219

218:                                              ; preds = %215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* nonnull align 4 %42, i64 68, i1 false) #16
  br label %220

219:                                              ; preds = %215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  store i8 0, i8* %125, align 4
  br label %220

220:                                              ; preds = %219, %218
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %126) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %146, i8 0, i64 56, i1 false)
  call void @_ZN3viz17SurfaceAggregator15CopyQuadsToPassERKNS_20CompositorRenderPassEPNS_20AggregatedRenderPassEfRKNSt3__113unordered_mapIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEESB_NS_16ResourceIdHasherENS6_8equal_toISB_EENS6_9allocatorINS6_4pairIKSB_SB_EEEEEERKN3gfx9TransformERKN4absl8optionalINSN_4RectEEEPKNS_7SurfaceERKNS0_17MaskFilterInfoExtE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::CompositorRenderPass"* dereferenceable(280) %155, %"class.viz::AggregatedRenderPass"* %216, float %217, %"class.std::__1::unordered_map.554"* dereferenceable(40) %41, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %"class.absl::optional.268"* dereferenceable(20) bitcast ({ i8, [3 x i8], { { <{ %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct", %"struct.absl::optional_internal::empty_struct" }> } } }* @.ref.tmp.11 to %"class.absl::optional.268"*), %"class.viz::Surface"* %2, %"struct.viz::SurfaceAggregator::MaskFilterInfoExt"* nonnull dereferenceable(56) %13)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %126) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %124) #16
  %221 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  %222 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %221, i64 0, i32 1
  %223 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %221, i64 0, i32 0, i32 7
  %224 = load i8, i8* %223, align 1, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %317

226:                                              ; preds = %220
  %227 = load %"class.util::IdType"*, %"class.util::IdType"** %127, align 8
  %228 = load i64, i64* %129, align 8
  %229 = ptrtoint %"class.util::IdType"* %227 to i64
  %230 = sub i64 %228, %229
  %231 = icmp eq i64 %230, 0
  %232 = inttoptr i64 %228 to %"class.util::IdType"*
  br i1 %231, label %253, label %233

233:                                              ; preds = %226
  %234 = ashr exact i64 %230, 3
  %235 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %222, i64 0, i32 0, i32 0
  %236 = load i64, i64* %235, align 8
  br label %237

237:                                              ; preds = %237, %233
  %238 = phi %"class.util::IdType"* [ %227, %233 ], [ %249, %237 ]
  %239 = phi i64 [ %234, %233 ], [ %248, %237 ]
  %240 = lshr i64 %239, 1
  %241 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %238, i64 %240
  %242 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %241, i64 0, i32 0, i32 0
  %243 = load i64, i64* %242, align 8
  %244 = icmp ult i64 %243, %236
  %245 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %241, i64 1
  %246 = xor i64 %240, -1
  %247 = add i64 %239, %246
  %248 = select i1 %244, i64 %247, i64 %240
  %249 = select i1 %244, %"class.util::IdType"* %245, %"class.util::IdType"* %238
  %250 = icmp eq i64 %248, 0
  br i1 %250, label %251, label %237

251:                                              ; preds = %237
  %252 = ptrtoint %"class.util::IdType"* %249 to i64
  br label %253

253:                                              ; preds = %251, %226
  %254 = phi i64 [ %252, %251 ], [ %229, %226 ]
  %255 = phi %"class.util::IdType"* [ %249, %251 ], [ %227, %226 ]
  %256 = icmp eq %"class.util::IdType"* %255, %232
  br i1 %256, label %263, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %222, i64 0, i32 0, i32 0
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %255, i64 0, i32 0, i32 0
  %261 = load i64, i64* %260, align 8
  %262 = icmp ult i64 %259, %261
  br i1 %262, label %263, label %317

263:                                              ; preds = %257, %253
  %264 = ptrtoint %"class.util::IdType"* %255 to i64
  %265 = icmp eq i64 %254, %264
  br i1 %265, label %266, label %317

266:                                              ; preds = %263
  %267 = load %"class.util::IdType"*, %"class.util::IdType"** %130, align 8
  %268 = load i64, i64* %132, align 8
  %269 = ptrtoint %"class.util::IdType"* %267 to i64
  %270 = sub i64 %268, %269
  %271 = icmp eq i64 %270, 0
  %272 = inttoptr i64 %268 to %"class.util::IdType"*
  br i1 %271, label %293, label %273

273:                                              ; preds = %266
  %274 = ashr exact i64 %270, 3
  %275 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %222, i64 0, i32 0, i32 0
  %276 = load i64, i64* %275, align 8
  br label %277

277:                                              ; preds = %277, %273
  %278 = phi %"class.util::IdType"* [ %267, %273 ], [ %289, %277 ]
  %279 = phi i64 [ %274, %273 ], [ %288, %277 ]
  %280 = lshr i64 %279, 1
  %281 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %278, i64 %280
  %282 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %281, i64 0, i32 0, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = icmp ult i64 %283, %276
  %285 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %281, i64 1
  %286 = xor i64 %280, -1
  %287 = add i64 %279, %286
  %288 = select i1 %284, i64 %287, i64 %280
  %289 = select i1 %284, %"class.util::IdType"* %285, %"class.util::IdType"* %278
  %290 = icmp eq i64 %288, 0
  br i1 %290, label %291, label %277

291:                                              ; preds = %277
  %292 = ptrtoint %"class.util::IdType"* %289 to i64
  br label %293

293:                                              ; preds = %291, %266
  %294 = phi i64 [ %292, %291 ], [ %269, %266 ]
  %295 = phi %"class.util::IdType"* [ %289, %291 ], [ %267, %266 ]
  %296 = icmp eq %"class.util::IdType"* %295, %272
  br i1 %296, label %303, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %222, i64 0, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %295, i64 0, i32 0, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = icmp ult i64 %299, %301
  br i1 %302, label %303, label %317

303:                                              ; preds = %293, %297
  %304 = ptrtoint %"class.util::IdType"* %295 to i64
  %305 = icmp eq i64 %294, %304
  br i1 %305, label %306, label %317

306:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %133) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %307 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %221, i64 0, i32 0, i32 2
  %308 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %307, %"class.gfx::Transform"* nonnull %14) #16
  br i1 %308, label %309, label %315

309:                                              ; preds = %306
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false)
  %310 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %14, %"class.gfx::Rect"* dereferenceable(16) %136) #16
  %311 = extractvalue { i64, i64 } %310, 0
  store i64 %311, i64* %137, align 8
  %312 = extractvalue { i64, i64 } %310, 1
  store i64 %312, i64* %135, align 8
  %313 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  %314 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %313, i64 0, i32 0, i32 1
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %314, %"class.gfx::Rect"* nonnull dereferenceable(16) %16) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #16
  br label %315

315:                                              ; preds = %309, %306
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %133) #16
  %316 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  br label %317

317:                                              ; preds = %303, %220, %257, %263, %297, %315
  %318 = phi %"class.viz::AggregatedRenderPass"* [ %221, %303 ], [ %221, %220 ], [ %221, %257 ], [ %221, %263 ], [ %221, %297 ], [ %316, %315 ]
  %319 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %318, i64 0, i32 0, i32 8
  %320 = load i8, i8* %319, align 2, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %359, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %318, i64 0, i32 1
  %324 = load %"class.util::IdType"*, %"class.util::IdType"** %139, align 8
  %325 = load i64, i64* %141, align 8
  %326 = ptrtoint %"class.util::IdType"* %324 to i64
  %327 = sub i64 %325, %326
  %328 = icmp eq i64 %327, 0
  %329 = inttoptr i64 %325 to %"class.util::IdType"*
  br i1 %328, label %348, label %330

330:                                              ; preds = %322
  %331 = ashr exact i64 %327, 3
  %332 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %323, i64 0, i32 0, i32 0
  %333 = load i64, i64* %332, align 8
  br label %334

334:                                              ; preds = %334, %330
  %335 = phi %"class.util::IdType"* [ %324, %330 ], [ %346, %334 ]
  %336 = phi i64 [ %331, %330 ], [ %345, %334 ]
  %337 = lshr i64 %336, 1
  %338 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %335, i64 %337
  %339 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %338, i64 0, i32 0, i32 0
  %340 = load i64, i64* %339, align 8
  %341 = icmp ult i64 %340, %333
  %342 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %338, i64 1
  %343 = xor i64 %337, -1
  %344 = add i64 %336, %343
  %345 = select i1 %341, i64 %344, i64 %337
  %346 = select i1 %341, %"class.util::IdType"* %342, %"class.util::IdType"* %335
  %347 = icmp eq i64 %345, 0
  br i1 %347, label %348, label %334

348:                                              ; preds = %334, %322
  %349 = phi %"class.util::IdType"* [ %324, %322 ], [ %346, %334 ]
  %350 = icmp eq %"class.util::IdType"* %349, %329
  br i1 %350, label %357, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %323, i64 0, i32 0, i32 0
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %349, i64 0, i32 0, i32 0
  %355 = load i64, i64* %354, align 8
  %356 = icmp ult i64 %353, %355
  br i1 %356, label %357, label %359

357:                                              ; preds = %351, %348
  %358 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %142, %"class.util::IdType"* %349, %"class.util::IdType"* dereferenceable(8) %323) #16
  br label %359

359:                                              ; preds = %357, %351, %317
  %360 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %143, align 8
  %361 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %360, i64 0, i32 0, i32 1
  %362 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %361, align 8
  %363 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %360, i64 0, i32 0, i32 2, i32 0, i32 0
  %364 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %363, align 8
  %365 = icmp ult %"class.std::__1::unique_ptr.230"* %362, %364
  br i1 %365, label %366, label %372

366:                                              ; preds = %359
  %367 = load i64, i64* %144, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %108, align 8
  %368 = bitcast %"class.std::__1::unique_ptr.230"* %362 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %362, i64 1
  %370 = ptrtoint %"class.std::__1::unique_ptr.230"* %369 to i64
  %371 = bitcast %"class.std::__1::unique_ptr.230"** %361 to i64*
  store i64 %370, i64* %371, align 8
  br label %373

372:                                              ; preds = %359
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %360, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %7) #16
  br label %373

373:                                              ; preds = %366, %372
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %113) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #16
  %374 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %108, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %108, align 8
  %375 = icmp eq %"class.viz::AggregatedRenderPass"* %374, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %373
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %374) #16
  %377 = bitcast %"class.viz::AggregatedRenderPass"* %374 to i8*
  call void @_ZdlPv(i8* %377) #17
  br label %378

378:                                              ; preds = %373, %376
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #16
  %379 = add nuw i64 %152, 1
  %380 = load i64, i64* %99, align 8
  %381 = load i64, i64* %101, align 8
  %382 = sub i64 %380, %381
  %383 = ashr exact i64 %382, 3
  %384 = icmp ult i64 %379, %383
  br i1 %384, label %149, label %148

385:                                              ; preds = %148
  call void @_ZN3viz17SurfaceAggregator23AddDisplayTransformPassEv(%"class.viz::SurfaceAggregator"* %0)
  br label %386

386:                                              ; preds = %97, %385, %148
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %42) #16
  br label %387

387:                                              ; preds = %3, %386
  %388 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %4, i64 0, i32 0
  %389 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %390 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %389, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* nonnull %388, %"class.std::__1::__tree_node"* %390) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz17SurfaceAggregator13IsRootSurfaceEPKNS_7SurfaceE(%"class.viz::SurfaceAggregator"* nocapture readonly, %"class.viz::Surface"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  br label %38

38:                                               ; preds = %2, %8, %14, %20, %26, %32
  %39 = phi i1 [ false, %8 ], [ false, %20 ], [ false, %14 ], [ false, %26 ], [ %37, %32 ], [ false, %2 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0
  %5 = tail call { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.194"* %4, %"class.viz::SurfaceId"* dereferenceable(32) %1) #16
  %6 = extractvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %5, 0
  %7 = extractvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %5, 1
  %8 = icmp eq %"struct.std::__1::pair.197"* %6, %7
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %10, align 8
  %12 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %13 = icmp eq %"struct.std::__1::pair.197"* %6, %11
  br i1 %13, label %42, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  %16 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %6, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  tail call void @_ZN3viz23DisplayResourceProvider12DestroyChildEi(%"class.viz::DisplayResourceProvider"* %16, i32 %18) #16
  %19 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %12, align 8
  %20 = icmp eq %"struct.std::__1::pair.197"* %19, %6
  br i1 %20, label %21, label %25

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0)) #16
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %24 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %12, align 8
  br label %25

25:                                               ; preds = %21, %14
  %26 = phi %"struct.std::__1::pair.197"* [ %19, %14 ], [ %24, %21 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %6, i64 1
  %28 = icmp eq %"struct.std::__1::pair.197"* %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"struct.std::__1::pair.197"* [ %38, %29 ], [ %6, %25 ]
  %31 = phi %"struct.std::__1::pair.197"* [ %37, %29 ], [ %27, %25 ]
  %32 = bitcast %"struct.std::__1::pair.197"* %30 to i8*
  %33 = bitcast %"struct.std::__1::pair.197"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false) #16
  %34 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %30, i64 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %31, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %30, i64 1
  %39 = icmp eq %"struct.std::__1::pair.197"* %37, %26
  br i1 %39, label %40, label %29

40:                                               ; preds = %29, %25
  %41 = phi %"struct.std::__1::pair.197"* [ %6, %25 ], [ %38, %29 ]
  store %"struct.std::__1::pair.197"* %41, %"struct.std::__1::pair.197"** %12, align 8
  br label %42

42:                                               ; preds = %2, %9, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3viz17SurfaceAggregator17PrewalkRenderPassEPNS0_18RenderPassMapEntryEPKNS_7SurfaceEPN4base8flat_mapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEES1_NSt3__14lessIvEENSC_6vectorINSC_4pairISB_S1_EENSC_9allocatorISH_EEEEEEbRKN3gfx4RectERKNSN_9TransformEbPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"*, %"struct.viz::SurfaceAggregator::RenderPassMapEntry"*, %"class.viz::Surface"*, %"class.base::flat_map.372"* nocapture, i1 zeroext, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), i1 zeroext, %"struct.viz::SurfaceAggregator::PrewalkResult"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::internal::flat_tree.294", align 8
  %11 = alloca %"class.gfx::RectF", align 4
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"class.cc::ListContainerHelper::ConstReverseIterator", align 8
  %14 = alloca %"class.cc::ListContainerHelper::ConstReverseIterator", align 8
  %15 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %16 = alloca %"class.util::IdType", align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = bitcast { i64, i64 }* %17 to %"class.gfx::Rect"*
  %19 = alloca %"class.gfx::Transform", align 4
  %20 = alloca %"class.gfx::Rect", align 8
  %21 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", align 8
  %22 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", align 8
  %23 = alloca %"class.gfx::Rect", align 8
  %24 = alloca %"class.gfx::Rect", align 8
  %25 = alloca %"class.gfx::Rect", align 8
  %26 = alloca %"class.gfx::Transform", align 4
  %27 = alloca { i64, i64 }, align 8
  %28 = bitcast { i64, i64 }* %27 to %"class.gfx::Rect"*
  %29 = alloca { i64, i64 }, align 8
  %30 = bitcast { i64, i64 }* %29 to %"class.gfx::Rect"*
  %31 = alloca %"class.util::IdType", align 8
  %32 = alloca %"class.gfx::Transform", align 4
  %33 = alloca %"class.gfx::Rect", align 4
  %34 = alloca { i64, i64 }, align 8
  %35 = bitcast { i64, i64 }* %34 to %"class.gfx::Rect"*
  %36 = getelementptr inbounds %"struct.viz::SurfaceAggregator::RenderPassMapEntry", %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %1, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %621

39:                                               ; preds = %9
  store i8 1, i8* %36, align 1
  %40 = getelementptr inbounds %"struct.viz::SurfaceAggregator::RenderPassMapEntry", %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %1, i64 0, i32 0
  %41 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %40, align 8
  %42 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %41, i64 0, i32 0, i32 4
  %43 = tail call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %42) #16
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 31
  store i8 1, i8* %45, align 1
  br label %46

46:                                               ; preds = %44, %39
  %47 = bitcast %"class.util::IdType"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %16, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %50 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %41, i64 0, i32 1, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %2, i64 0, i32 0, i32 0
  %53 = tail call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %49, i64 %51, %"class.viz::SurfaceId"* dereferenceable(32) %52) #16
  store i64 %53, i64* %48, align 8
  %54 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %41, i64 0, i32 0, i32 3
  %55 = tail call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %54) #16
  %56 = or i1 %55, %7
  br i1 %56, label %57, label %94

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22
  %59 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.util::IdType"*, %"class.util::IdType"** %59, align 8
  %61 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %62 = bitcast %"class.util::IdType"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint %"class.util::IdType"* %60 to i64
  %65 = sub i64 %63, %64
  %66 = icmp eq i64 %65, 0
  %67 = inttoptr i64 %63 to %"class.util::IdType"*
  br i1 %66, label %84, label %68

68:                                               ; preds = %57
  %69 = ashr exact i64 %65, 3
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi %"class.util::IdType"* [ %60, %68 ], [ %82, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %81, %70 ]
  %73 = lshr i64 %72, 1
  %74 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %71, i64 %73
  %75 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %74, i64 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %76, %53
  %78 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %74, i64 1
  %79 = xor i64 %73, -1
  %80 = add i64 %72, %79
  %81 = select i1 %77, i64 %80, i64 %73
  %82 = select i1 %77, %"class.util::IdType"* %78, %"class.util::IdType"* %71
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %70, %57
  %85 = phi %"class.util::IdType"* [ %60, %57 ], [ %82, %70 ]
  %86 = icmp eq %"class.util::IdType"* %85, %67
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %85, i64 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp ult i64 %53, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %87, %84
  %92 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %58, i64 0, i32 0
  %93 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %92, %"class.util::IdType"* %85, %"class.util::IdType"* nonnull dereferenceable(8) %16) #16
  br label %94

94:                                               ; preds = %91, %87, %46
  %95 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* %2) #16
  %96 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %95, i64 0, i32 2, i32 0, i32 1
  %97 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %97, i64 -1, i32 0, i32 0, i32 0
  %99 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %98, align 8
  %100 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #16
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %102 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 16, i1 false)
  %103 = call { i64, i64 } @_ZNK3viz17SurfaceAggregator20DamageRectForSurfaceEPKNS_7SurfaceERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %2, %"class.viz::CompositorRenderPass"* dereferenceable(280) %99)
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %105 = extractvalue { i64, i64 } %103, 0
  store i64 %105, i64* %104, align 8
  %106 = extractvalue { i64, i64 } %103, 1
  store i64 %106, i64* %101, align 8
  %107 = trunc i64 %106 to i32
  %108 = icmp eq i32 %107, 0
  %109 = icmp ult i64 %106, 4294967296
  %110 = or i1 %108, %109
  br i1 %110, label %119, label %111

111:                                              ; preds = %94
  %112 = bitcast %"class.gfx::Transform"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %112) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %112, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %113 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %6, %"class.gfx::Transform"* nonnull %19) #16
  br i1 %113, label %114, label %118

114:                                              ; preds = %111
  %115 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %19, %"class.gfx::Rect"* nonnull dereferenceable(16) %18) #16
  %116 = extractvalue { i64, i64 } %115, 0
  %117 = extractvalue { i64, i64 } %115, 1
  store i64 %116, i64* %104, align 8
  store i64 %117, i64* %101, align 8
  br label %118

118:                                              ; preds = %114, %111
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %112) #16
  br label %119

119:                                              ; preds = %94, %118
  %120 = bitcast %"class.gfx::Rect"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %20, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %20, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 16, i1 false) #16
  %123 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %123) #16
  %124 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21, i64 0, i32 0, i32 1
  %125 = bitcast %"class.cc::ListContainerHelper::ConstReverseIterator"* %14 to i8*
  %126 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #16, !noalias !65
  %127 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %41, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZNK2cc19ListContainerHelper7crbeginEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull sret %14, %"class.cc::ListContainerHelper"* %127) #16, !noalias !68
  %128 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %14, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %128, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %129) #16
  %130 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %14, i64 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !68
  store i64 %131, i64* %124, align 8, !alias.scope !68
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #16, !noalias !65
  %132 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #16
  %133 = bitcast %"class.cc::ListContainerHelper::ConstReverseIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #16, !noalias !71
  call void @_ZNK2cc19ListContainerHelper5crendEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull sret %13, %"class.cc::ListContainerHelper"* %127) #16, !noalias !74
  %134 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %22, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %13, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %134, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %135) #16
  %136 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %22, i64 0, i32 0, i32 1
  %137 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstReverseIterator", %"class.cc::ListContainerHelper::ConstReverseIterator"* %13, i64 0, i32 1
  %138 = load i64, i64* %137, align 8, !noalias !74
  store i64 %138, i64* %136, align 8, !alias.scope !74
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #16, !noalias !71
  %139 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %128, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %134) #16
  %140 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %22, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %140) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #16
  br i1 %139, label %141, label %203

141:                                              ; preds = %119
  %142 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21, i64 0, i32 0, i32 0, i32 2
  %143 = bitcast i8** %142 to %"class.viz::DrawQuad"**
  %144 = bitcast %"class.gfx::Rect"* %23 to i8*
  %145 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1, i32 0
  %146 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1, i32 1
  %147 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %149 = bitcast %"struct.std::__1::pair.376"** %148 to i64*
  %150 = bitcast { i64, i64 }* %27 to i8*
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  %153 = bitcast { i64, i64 }* %29 to i8*
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  %155 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %156 = bitcast %"class.gfx::RectF"* %11 to i8*
  %157 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 1
  %159 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 0
  %160 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 1
  %161 = bitcast { i64, i64 }* %12 to i8*
  %162 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %163 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %164 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  %165 = bitcast %"class.util::IdType"* %31 to i8*
  %166 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %31, i64 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25
  %168 = getelementptr inbounds %"class.base::flat_map.302", %"class.base::flat_map.302"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %170 = bitcast %"struct.std::__1::pair.306"** %169 to i64*
  %171 = bitcast %"class.base::internal::flat_tree.294"* %10 to i8*
  %172 = getelementptr inbounds %"class.base::flat_map.302", %"class.base::flat_map.302"* %167, i64 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %10, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %10, i64 0, i32 0, i32 0, i32 1
  %175 = bitcast %"class.util::IdType"** %174 to i64*
  %176 = bitcast %"class.gfx::Transform"* %32 to i8*
  %177 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %32, i64 0, i32 0
  %178 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0
  %179 = bitcast %"class.gfx::Rect"* %33 to i8*
  %180 = bitcast %"class.gfx::Rect"* %23 to i64*
  %181 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 0, i32 1
  %182 = bitcast %"class.gfx::Size"* %181 to i64*
  %183 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  %184 = bitcast %"class.gfx::Rect"* %24 to i8*
  %185 = bitcast %"class.gfx::Rect"* %25 to i8*
  %186 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %25, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %25, i64 0, i32 1, i32 1
  %188 = bitcast %"class.gfx::Transform"* %26 to i8*
  %189 = bitcast %"class.gfx::Rect"* %25 to i64*
  %190 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %25, i64 0, i32 1
  %191 = bitcast %"class.gfx::Size"* %190 to i64*
  %192 = bitcast %"class.gfx::Rect"* %24 to i64*
  %193 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %24, i64 0, i32 1
  %194 = bitcast %"class.gfx::Size"* %193 to i64*
  %195 = bitcast { i64, i64 }* %34 to i8*
  %196 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 1
  %197 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 0
  %198 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %15 to i8*
  %199 = bitcast { i64, i64 }* %27 to i8*
  %200 = bitcast { i64, i64 }* %29 to i8*
  %201 = bitcast %"class.gfx::Rect"* %33 to i8*
  %202 = bitcast { i64, i64 }* %34 to i8*
  br label %210

203:                                              ; preds = %604, %119
  %204 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstReverseIterator"* %21, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %204) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %123) #16
  %205 = load i32, i32* %121, align 8
  %206 = icmp eq i32 %205, 0
  %207 = load i32, i32* %122, align 4
  %208 = icmp eq i32 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %613, label %609

210:                                              ; preds = %141, %604
  %211 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 16, i1 false) #16
  %212 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 1
  %213 = load i32, i32* %212, align 8
  switch i32 %213, label %584 [
    i32 7, label %214
    i32 3, label %392
  ]

214:                                              ; preds = %210
  %215 = call %"class.viz::SurfaceDrawQuad"* @_ZN3viz15SurfaceDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %211) #16
  %216 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %183, align 8
  %217 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2
  %218 = call %"class.viz::Surface"* @_ZN3viz14SurfaceManager24GetLatestInFlightSurfaceERKNS_12SurfaceRangeE(%"class.viz::SurfaceManager"* %216, %"class.viz::SurfaceRange"* dereferenceable(72) %217) #16
  %219 = icmp eq %"class.viz::Surface"* %218, null
  br i1 %219, label %259, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %222, %224
  br i1 %225, label %226, label %256

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %228, %230
  br i1 %231, label %232, label %256

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 1, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 1, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp eq i32 %234, %236
  br i1 %237, label %238, label %256

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 1, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 1, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %240, %242
  br i1 %243, label %244, label %256

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 0
  %248 = load i64, i64* %247, align 8
  %249 = icmp eq i64 %246, %248
  br i1 %249, label %250, label %256

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 2, i32 1, i32 1, i32 2, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = icmp eq i64 %252, %254
  br i1 %255, label %262, label %256

256:                                              ; preds = %250, %226, %238, %232, %244, %220
  %257 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 2
  %258 = bitcast %"class.gfx::Rect"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 4 %258, i64 16, i1 false)
  br label %262

259:                                              ; preds = %214
  %260 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 2
  %261 = bitcast %"class.gfx::Rect"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 4 %261, i64 16, i1 false)
  br label %584

262:                                              ; preds = %250, %256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 16, i1 false) #16
  %263 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 4
  %264 = load i8, i8* %263, align 4, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %285, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 2, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %285, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %218, i64 0, i32 0, i32 2, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %285, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 0, i32 2, i32 1, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = sitofp i32 %276 to float
  %278 = sitofp i32 %268 to float
  %279 = fdiv float %277, %278
  %280 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 0, i32 2, i32 1, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = sitofp i32 %281 to float
  %283 = sitofp i32 %272 to float
  %284 = fdiv float %282, %283
  br label %285

285:                                              ; preds = %266, %262, %270, %274
  %286 = phi float [ 1.000000e+00, %270 ], [ %284, %274 ], [ 1.000000e+00, %262 ], [ 1.000000e+00, %266 ]
  %287 = phi float [ 1.000000e+00, %270 ], [ %279, %274 ], [ 1.000000e+00, %262 ], [ 1.000000e+00, %266 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 16, i1 false) #16
  %288 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 0, i32 6
  %289 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %288, align 8
  %290 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %215, i64 0, i32 6
  %291 = load i8, i8* %290, align 2, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %319, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %289, i64 0, i32 7
  %295 = load float, float* %294, align 8
  %296 = fsub float 1.000000e+00, %295
  %297 = call float @llvm.fabs.f32(float %296) #16
  %298 = fcmp ugt float %297, 0x3F50624DE0000000
  br i1 %298, label %319, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %289, i64 0, i32 13
  %301 = load float, float* %300, align 8
  %302 = fcmp oeq float %301, 0.000000e+00
  br i1 %302, label %303, label %319

303:                                              ; preds = %299
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %25, %"class.gfx::Rect"* nonnull dereferenceable(16) %20) #16
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %25, %"class.gfx::Rect"* dereferenceable(16) %5) #16
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %25, %"class.gfx::Rect"* nonnull dereferenceable(16) %18) #16
  %304 = load i32, i32* %186, align 8
  %305 = icmp eq i32 %304, 0
  %306 = load i32, i32* %187, align 4
  %307 = icmp eq i32 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %319, label %309

309:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %188) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %188, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %310 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 6
  %311 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %310, align 8
  %312 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %311, i64 0, i32 0
  %313 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %312, %"class.gfx::Transform"* nonnull %26) #16
  %314 = fdiv float 1.000000e+00, %287
  %315 = fdiv float 1.000000e+00, %286
  call void @_ZN3gfx9Transform9PostScaleEff(%"class.gfx::Transform"* nonnull %26, float %314, float %315) #16
  %316 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %26, %"class.gfx::Rect"* nonnull dereferenceable(16) %25) #16
  %317 = extractvalue { i64, i64 } %316, 0
  %318 = extractvalue { i64, i64 } %316, 1
  store i64 %317, i64* %189, align 8
  store i64 %318, i64* %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %188) #16
  br label %319

319:                                              ; preds = %303, %285, %293, %309, %299
  %320 = load i64, i64* %48, align 8
  %321 = call { i64, i64 } @_ZN3viz17SurfaceAggregator14PrewalkSurfaceEPNS_7SurfaceEbN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEbRKN3gfx4RectEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* nonnull %218, i1 zeroext %56, i64 %320, i1 zeroext %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %25, %"struct.viz::SurfaceAggregator::PrewalkResult"* %8)
  %322 = extractvalue { i64, i64 } %321, 0
  %323 = extractvalue { i64, i64 } %321, 1
  store i64 %322, i64* %192, align 8
  store i64 %323, i64* %194, align 8
  %324 = fcmp oeq float %287, 1.000000e+00
  %325 = fcmp oeq float %286, 1.000000e+00
  %326 = and i1 %325, %324
  %327 = trunc i64 %322 to i32
  %328 = lshr i64 %322, 32
  %329 = trunc i64 %328 to i32
  %330 = trunc i64 %323 to i32
  %331 = lshr i64 %323, 32
  %332 = trunc i64 %331 to i32
  br i1 %326, label %384, label %333

333:                                              ; preds = %319
  %334 = sitofp i32 %327 to float
  %335 = fmul float %287, %334
  %336 = call float @llvm.floor.f32(float %335) #16
  %337 = fptosi float %336 to i32
  %338 = sitofp i32 %329 to float
  %339 = fmul float %286, %338
  %340 = call float @llvm.floor.f32(float %339) #16
  %341 = fptosi float %340 to i32
  %342 = icmp eq i32 %330, 0
  br i1 %342, label %349, label %343

343:                                              ; preds = %333
  %344 = add nsw i32 %330, %327
  %345 = sitofp i32 %344 to float
  %346 = fmul float %287, %345
  %347 = call float @llvm.ceil.f32(float %346) #16
  %348 = fptosi float %347 to i32
  br label %349

349:                                              ; preds = %343, %333
  %350 = phi i32 [ %348, %343 ], [ %337, %333 ]
  %351 = icmp eq i32 %332, 0
  br i1 %351, label %358, label %352

352:                                              ; preds = %349
  %353 = add nsw i32 %332, %329
  %354 = sitofp i32 %353 to float
  %355 = fmul float %286, %354
  %356 = call float @llvm.ceil.f32(float %355) #16
  %357 = fptosi float %356 to i32
  br label %358

358:                                              ; preds = %352, %349
  %359 = phi i32 [ %357, %352 ], [ %341, %349 ]
  %360 = sub nsw i32 %350, %337
  %361 = sub nsw i32 %359, %341
  %362 = icmp sgt i32 %337, 0
  %363 = icmp sgt i32 %360, 0
  %364 = and i1 %362, %363
  %365 = sub nuw nsw i32 2147483647, %337
  %366 = icmp ult i32 %365, %360
  %367 = and i1 %366, %364
  %368 = select i1 %367, i32 %365, i32 %360
  %369 = icmp sgt i32 %341, 0
  %370 = icmp sgt i32 %361, 0
  %371 = and i1 %369, %370
  %372 = sub nuw nsw i32 2147483647, %341
  %373 = icmp ult i32 %372, %361
  %374 = and i1 %373, %371
  %375 = select i1 %374, i32 %372, i32 %361
  %376 = icmp sgt i32 %368, 0
  %377 = select i1 %376, i32 %368, i32 0
  %378 = zext i32 %377 to i64
  %379 = icmp sgt i32 %375, 0
  %380 = select i1 %379, i32 %375, i32 0
  %381 = zext i32 %380 to i64
  %382 = shl nuw nsw i64 %381, 32
  %383 = or i64 %382, %378
  br label %384

384:                                              ; preds = %319, %358
  %385 = phi i32 [ %341, %358 ], [ %329, %319 ]
  %386 = phi i32 [ %337, %358 ], [ %327, %319 ]
  %387 = phi i64 [ %383, %358 ], [ %323, %319 ]
  %388 = zext i32 %385 to i64
  %389 = shl nuw i64 %388, 32
  %390 = zext i32 %386 to i64
  %391 = or i64 %389, %390
  store i64 %391, i64* %192, align 8
  store i64 %387, i64* %194, align 8
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %23, %"class.gfx::Rect"* nonnull dereferenceable(16) %24) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #16
  br label %584

392:                                              ; preds = %210
  %393 = call %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %211) #16
  %394 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 1, i32 0, i32 0
  %395 = load i64, i64* %394, align 8
  %396 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %147, align 8
  %397 = load i64, i64* %149, align 8
  %398 = ptrtoint %"struct.std::__1::pair.376"* %396 to i64
  %399 = sub i64 %397, %398
  %400 = icmp eq i64 %399, 0
  %401 = inttoptr i64 %397 to %"struct.std::__1::pair.376"*
  br i1 %400, label %420, label %402

402:                                              ; preds = %392
  %403 = sdiv exact i64 %399, 24
  br label %404

404:                                              ; preds = %404, %402
  %405 = phi %"struct.std::__1::pair.376"* [ %396, %402 ], [ %416, %404 ]
  %406 = phi i64 [ %403, %402 ], [ %415, %404 ]
  %407 = lshr i64 %406, 1
  %408 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %405, i64 %407
  %409 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %408, i64 0, i32 0, i32 0, i32 0
  %410 = load i64, i64* %409, align 8
  %411 = icmp ult i64 %410, %395
  %412 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %408, i64 1
  %413 = xor i64 %407, -1
  %414 = add i64 %406, %413
  %415 = select i1 %411, i64 %414, i64 %407
  %416 = select i1 %411, %"struct.std::__1::pair.376"* %412, %"struct.std::__1::pair.376"* %405
  %417 = icmp eq i64 %415, 0
  br i1 %417, label %418, label %404

418:                                              ; preds = %404
  %419 = ptrtoint %"struct.std::__1::pair.376"* %416 to i64
  br label %420

420:                                              ; preds = %418, %392
  %421 = phi i64 [ %419, %418 ], [ %398, %392 ]
  %422 = phi %"struct.std::__1::pair.376"* [ %416, %418 ], [ %396, %392 ]
  %423 = icmp eq %"struct.std::__1::pair.376"* %422, %401
  br i1 %423, label %431, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %422, i64 0, i32 0, i32 0, i32 0
  %426 = load i64, i64* %425, align 8
  %427 = icmp ult i64 %395, %426
  br i1 %427, label %431, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %422, i64 1
  %430 = ptrtoint %"struct.std::__1::pair.376"* %429 to i64
  br label %431

431:                                              ; preds = %420, %424, %428
  %432 = phi i64 [ %430, %428 ], [ %421, %420 ], [ %421, %424 ]
  %433 = inttoptr i64 %432 to %"struct.std::__1::pair.376"*
  %434 = icmp eq %"struct.std::__1::pair.376"* %422, %433
  %435 = select i1 %434, %"struct.std::__1::pair.376"* %401, %"struct.std::__1::pair.376"* %422
  %436 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %435, i64 0, i32 1
  %437 = getelementptr inbounds %"struct.viz::SurfaceAggregator::RenderPassMapEntry", %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %436, i64 0, i32 0
  %438 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %437, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #16
  %439 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 16, i1 false)
  %440 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %439, align 8
  %441 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %440, i64 0, i32 0
  %442 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %438, i64 0, i32 0, i32 0
  %443 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %441, %"class.gfx::Rect"* dereferenceable(16) %442) #16
  %444 = extractvalue { i64, i64 } %443, 0
  store i64 %444, i64* %152, align 8
  %445 = extractvalue { i64, i64 } %443, 1
  store i64 %445, i64* %151, align 8
  %446 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %20) #16
  %447 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %28, %"class.gfx::Rect"* dereferenceable(16) %5) #16
  %448 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %28, %"class.gfx::Rect"* nonnull dereferenceable(16) %18) #16
  %449 = or i1 %446, %447
  %450 = or i1 %449, %448
  br i1 %450, label %451, label %459

451:                                              ; preds = %431
  %452 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 8
  store i8 1, i8* %452, align 1
  %453 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %438, i64 0, i32 0, i32 4
  %454 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %453) #16
  br i1 %454, label %455, label %459

455:                                              ; preds = %451
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %28) #16
  br i1 %447, label %456, label %457

456:                                              ; preds = %455
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* dereferenceable(16) %5) #16
  br label %457

457:                                              ; preds = %456, %455
  br i1 %448, label %458, label %459

458:                                              ; preds = %457
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %18) #16
  br label %459

459:                                              ; preds = %431, %451, %458, %457
  %460 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %438, i64 0, i32 0, i32 3
  %461 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %460) #16
  br i1 %461, label %462, label %497

462:                                              ; preds = %459
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #16
  %463 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 16, i1 false)
  %464 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %463, align 8
  %465 = call float @_ZNK2cc16FilterOperations20MaximumPixelMovementEv(%"class.cc::FilterOperations"* %460) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #16
  %466 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %467 = load i32, i32* %466, align 4
  %468 = sitofp i32 %467 to float
  %469 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = sitofp i32 %470 to float
  %472 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %393, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %475 = load i32, i32* %474, align 4
  store float %468, float* %157, align 4
  store float %471, float* %158, align 4
  %476 = icmp sgt i32 %473, 0
  %477 = select i1 %476, i32 %473, i32 0
  %478 = sitofp i32 %477 to float
  store float %478, float* %159, align 4
  %479 = icmp sgt i32 %475, 0
  %480 = select i1 %479, i32 %475, i32 0
  %481 = sitofp i32 %480 to float
  store float %481, float* %160, align 4
  %482 = fsub float -0.000000e+00, %465
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %11, float %482, float %482, float %482, float %482) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #16
  %483 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %11) #16
  %484 = extractvalue { i64, i64 } %483, 0
  store i64 %484, i64* %163, align 8
  %485 = extractvalue { i64, i64 } %483, 1
  store i64 %485, i64* %162, align 8
  %486 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %464, i64 0, i32 0
  %487 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %486, %"class.gfx::Rect"* nonnull dereferenceable(16) %155) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #16
  %488 = extractvalue { i64, i64 } %487, 0
  store i64 %488, i64* %164, align 8
  %489 = extractvalue { i64, i64 } %487, 1
  store i64 %489, i64* %154, align 8
  %490 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %20) #16
  br i1 %490, label %495, label %491

491:                                              ; preds = %462
  %492 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %30, %"class.gfx::Rect"* dereferenceable(16) %5) #16
  br i1 %492, label %495, label %493

493:                                              ; preds = %491
  %494 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %18) #16
  br i1 %494, label %495, label %496

495:                                              ; preds = %493, %491, %462
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %30) #16
  br label %496

496:                                              ; preds = %495, %493
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #16
  br label %497

497:                                              ; preds = %496, %459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #16
  store i64 -6148914691236517206, i64* %166, align 8
  %498 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %49, i64 %395, %"class.viz::SurfaceId"* dereferenceable(32) %52) #16
  store i64 %498, i64* %166, align 8
  %499 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %168, align 8
  %500 = load i64, i64* %170, align 8
  %501 = ptrtoint %"struct.std::__1::pair.306"* %499 to i64
  %502 = sub i64 %500, %501
  %503 = icmp eq i64 %502, 0
  %504 = inttoptr i64 %500 to %"struct.std::__1::pair.306"*
  br i1 %503, label %522, label %505

505:                                              ; preds = %497
  %506 = ashr exact i64 %502, 5
  %507 = load i64, i64* %48, align 8
  br label %508

508:                                              ; preds = %508, %505
  %509 = phi %"struct.std::__1::pair.306"* [ %499, %505 ], [ %520, %508 ]
  %510 = phi i64 [ %506, %505 ], [ %519, %508 ]
  %511 = lshr i64 %510, 1
  %512 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %509, i64 %511
  %513 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %512, i64 0, i32 0, i32 0, i32 0
  %514 = load i64, i64* %513, align 8
  %515 = icmp ult i64 %514, %507
  %516 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %512, i64 1
  %517 = xor i64 %511, -1
  %518 = add i64 %510, %517
  %519 = select i1 %515, i64 %518, i64 %511
  %520 = select i1 %515, %"struct.std::__1::pair.306"* %516, %"struct.std::__1::pair.306"* %509
  %521 = icmp eq i64 %519, 0
  br i1 %521, label %522, label %508

522:                                              ; preds = %508, %497
  %523 = phi %"struct.std::__1::pair.306"* [ %499, %497 ], [ %520, %508 ]
  %524 = icmp eq %"struct.std::__1::pair.306"* %523, %504
  br i1 %524, label %530, label %525

525:                                              ; preds = %522
  %526 = load i64, i64* %48, align 8
  %527 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %523, i64 0, i32 0, i32 0, i32 0
  %528 = load i64, i64* %527, align 8
  %529 = icmp ult i64 %526, %528
  br i1 %529, label %530, label %538

530:                                              ; preds = %525, %522
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 24, i1 false) #16
  %531 = call %"struct.std::__1::pair.306"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS0_IS6_NS_9allocatorIS6_EEEEEEEENSD_ISH_EEE7emplaceIJRKS6_SG_EEENS_11__wrap_iterIPSH_EENSN_IPKSH_EEDpOT_(%"class.std::__1::vector.304"* %172, %"struct.std::__1::pair.306"* %523, %"class.util::IdType"* nonnull dereferenceable(8) %16, %"class.base::internal::flat_tree.294"* nonnull dereferenceable(24) %10) #16
  %532 = load %"class.util::IdType"*, %"class.util::IdType"** %173, align 8
  %533 = icmp eq %"class.util::IdType"* %532, null
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  %535 = ptrtoint %"class.util::IdType"* %532 to i64
  store i64 %535, i64* %175, align 8
  %536 = bitcast %"class.util::IdType"* %532 to i8*
  call void @_ZdlPv(i8* %536) #17
  br label %537

537:                                              ; preds = %534, %530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #16
  br label %538

538:                                              ; preds = %525, %537
  %539 = phi %"struct.std::__1::pair.306"* [ %531, %537 ], [ %523, %525 ]
  %540 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %539, i64 0, i32 1
  %541 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %540, i64 0, i32 0, i32 0, i32 0
  %542 = load %"class.util::IdType"*, %"class.util::IdType"** %541, align 8
  %543 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %539, i64 0, i32 1, i32 0, i32 0, i32 1
  %544 = bitcast %"class.util::IdType"** %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = ptrtoint %"class.util::IdType"* %542 to i64
  %547 = sub i64 %545, %546
  %548 = icmp eq i64 %547, 0
  %549 = inttoptr i64 %545 to %"class.util::IdType"*
  br i1 %548, label %567, label %550

550:                                              ; preds = %538
  %551 = ashr exact i64 %547, 3
  %552 = load i64, i64* %166, align 8
  br label %553

553:                                              ; preds = %553, %550
  %554 = phi %"class.util::IdType"* [ %542, %550 ], [ %565, %553 ]
  %555 = phi i64 [ %551, %550 ], [ %564, %553 ]
  %556 = lshr i64 %555, 1
  %557 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %554, i64 %556
  %558 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %557, i64 0, i32 0, i32 0
  %559 = load i64, i64* %558, align 8
  %560 = icmp ult i64 %559, %552
  %561 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %557, i64 1
  %562 = xor i64 %556, -1
  %563 = add i64 %555, %562
  %564 = select i1 %560, i64 %563, i64 %556
  %565 = select i1 %560, %"class.util::IdType"* %561, %"class.util::IdType"* %554
  %566 = icmp eq i64 %564, 0
  br i1 %566, label %567, label %553

567:                                              ; preds = %553, %538
  %568 = phi %"class.util::IdType"* [ %542, %538 ], [ %565, %553 ]
  %569 = icmp eq %"class.util::IdType"* %568, %549
  br i1 %569, label %575, label %570

570:                                              ; preds = %567
  %571 = load i64, i64* %166, align 8
  %572 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %568, i64 0, i32 0, i32 0
  %573 = load i64, i64* %572, align 8
  %574 = icmp ult i64 %571, %573
  br i1 %574, label %575, label %578

575:                                              ; preds = %570, %567
  %576 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %540, i64 0, i32 0
  %577 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %576, %"class.util::IdType"* %568, %"class.util::IdType"* nonnull dereferenceable(8) %31) #16
  br label %578

578:                                              ; preds = %570, %575
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %176) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %176, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %579 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %439, align 8
  %580 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %579, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %177, %class.SkMatrix44* dereferenceable(68) %178, %class.SkMatrix44* dereferenceable(68) %580) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %201, i8 0, i64 16, i1 false)
  %581 = call { i64, i64 } @_ZN3viz17SurfaceAggregator17PrewalkRenderPassEPNS0_18RenderPassMapEntryEPKNS_7SurfaceEPN4base8flat_mapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEES1_NSt3__14lessIvEENSC_6vectorINSC_4pairISB_S1_EENSC_9allocatorISH_EEEEEEbRKN3gfx4RectERKNSN_9TransformEbPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %0, %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %436, %"class.viz::Surface"* %2, %"class.base::flat_map.372"* %3, i1 zeroext %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %33, %"class.gfx::Transform"* nonnull dereferenceable(68) %32, i1 zeroext %56, %"struct.viz::SurfaceAggregator::PrewalkResult"* %8)
  %582 = extractvalue { i64, i64 } %581, 0
  %583 = extractvalue { i64, i64 } %581, 1
  store i64 %582, i64* %180, align 8
  store i64 %583, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %176) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #16
  br label %584

584:                                              ; preds = %259, %210, %384, %578
  %585 = load i32, i32* %145, align 8
  %586 = icmp eq i32 %585, 0
  %587 = load i32, i32* %146, align 4
  %588 = icmp eq i32 %587, 0
  %589 = or i1 %586, %588
  br i1 %589, label %604, label %590

590:                                              ; preds = %584
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #16
  %591 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %211, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 16, i1 false)
  %592 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %591, align 8
  %593 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %592, i64 0, i32 0
  %594 = call { i64, i64 } @_ZN2cc8MathUtil36MapEnclosingClippedRectIgnoringErrorERKN3gfx9TransformERKNS1_4RectEf(%"class.gfx::Transform"* dereferenceable(68) %593, %"class.gfx::Rect"* nonnull dereferenceable(16) %23, float 0x3F50624DE0000000) #16
  %595 = extractvalue { i64, i64 } %594, 0
  store i64 %595, i64* %197, align 8
  %596 = extractvalue { i64, i64 } %594, 1
  store i64 %596, i64* %196, align 8
  %597 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %591, align 8
  %598 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %597, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %599 = load i8, i8* %598, align 4, !range !2
  %600 = icmp eq i8 %599, 0
  br i1 %600, label %603, label %601

601:                                              ; preds = %590
  %602 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %597, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %35, %"class.gfx::Rect"* dereferenceable(16) %602) #16
  br label %603

603:                                              ; preds = %590, %601
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %35) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #16
  br label %604

604:                                              ; preds = %584, %603
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator16ReverseIncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %15, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %128) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #16
  %605 = load i64, i64* %124, align 8
  %606 = add i64 %605, 1
  store i64 %606, i64* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #16, !noalias !71
  call void @_ZNK2cc19ListContainerHelper5crendEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull sret %13, %"class.cc::ListContainerHelper"* %127) #16, !noalias !74
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %134, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %135) #16
  %607 = load i64, i64* %137, align 8, !noalias !74
  store i64 %607, i64* %136, align 8, !alias.scope !74
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #16, !noalias !71
  %608 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %128, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %134) #16
  call void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"* nonnull %140) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #16
  br i1 %608, label %210, label %203

609:                                              ; preds = %203
  %610 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %54) #16
  br i1 %610, label %611, label %613

611:                                              ; preds = %609
  %612 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %41, i64 0, i32 0, i32 0
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %20, %"class.gfx::Rect"* dereferenceable(16) %612) #16
  br label %613

613:                                              ; preds = %203, %611, %609
  %614 = bitcast %"class.gfx::Rect"* %20 to i64*
  %615 = load i64, i64* %614, align 8
  %616 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %20, i64 0, i32 1
  %617 = bitcast %"class.gfx::Size"* %616 to i64*
  %618 = load i64, i64* %617, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  %619 = icmp eq i8* %36, null
  br i1 %619, label %621, label %620

620:                                              ; preds = %613
  store i8 0, i8* %36, align 1
  br label %621

621:                                              ; preds = %620, %613, %9
  %622 = phi i64 [ 0, %9 ], [ %618, %613 ], [ %618, %620 ]
  %623 = phi i64 [ 0, %9 ], [ %615, %613 ], [ %615, %620 ]
  %624 = insertvalue { i64, i64 } undef, i64 %623, 0
  %625 = insertvalue { i64, i64 } %624, i64 %622, 1
  ret { i64, i64 } %625
}

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"*) unnamed_addr #2

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx9Transform9PostScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3viz17SurfaceAggregator14PrewalkSurfaceEPNS_7SurfaceEbN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEbRKN3gfx4RectEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*, i1 zeroext, i64, i1 zeroext, %"class.gfx::Rect"* dereferenceable(16), %"struct.viz::SurfaceAggregator::PrewalkResult"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.base::internal::flat_tree.294", align 8
  %10 = alloca %"class.util::IdType", align 8
  %11 = alloca %"class.util::IdType", align 8
  %12 = alloca %"class.base::flat_map.372", align 8
  %13 = alloca %"class.base::ElapsedTimer", align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"class.gfx::Rect"*
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"class.gfx::Rect"*
  %18 = alloca %"class.gfx::Transform", align 4
  %19 = alloca %"class.gfx::Rect", align 8
  %20 = alloca %"class.gfx::Transform", align 4
  %21 = alloca %"class.gfx::Rect", align 4
  %22 = alloca %"class.util::IdType", align 8
  %23 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 0, i32 0, i32 0
  store i64 %3, i64* %23, align 8
  %24 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %26 = tail call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %24, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  %27 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %26, 0
  %28 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %26, 1
  %29 = icmp eq %"class.viz::SurfaceId"* %28, %27
  br i1 %29, label %30, label %668

30:                                               ; preds = %7
  %31 = tail call zeroext i1 @_ZN3viz17SurfaceAggregator22CheckFrameSinksChangedEPKNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1)
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %6, i64 0, i32 2
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = or i8 %34, %32
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %668, label %39

39:                                               ; preds = %30
  %40 = tail call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* %1) #16
  %41 = bitcast %"class.util::IdType"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %42, align 8
  %43 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %44 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 2
  %45 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 2, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %46, i64 -1, i32 0, i32 0, i32 0
  %48 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %47, align 8
  %49 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = tail call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %43, i64 %50, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  store i64 %51, i64* %42, align 8
  %52 = icmp eq i64 %3, 0
  br i1 %52, label %140, label %53

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25
  %55 = getelementptr inbounds %"class.base::flat_map.302", %"class.base::flat_map.302"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %55, align 8
  %57 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.std::__1::pair.306"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = ptrtoint %"struct.std::__1::pair.306"* %56 to i64
  %61 = sub i64 %59, %60
  %62 = icmp eq i64 %61, 0
  %63 = inttoptr i64 %59 to %"struct.std::__1::pair.306"*
  br i1 %62, label %80, label %64

64:                                               ; preds = %53
  %65 = ashr exact i64 %61, 5
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi %"struct.std::__1::pair.306"* [ %56, %64 ], [ %78, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %77, %66 ]
  %69 = lshr i64 %68, 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %67, i64 %69
  %71 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %72, %3
  %74 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %70, i64 1
  %75 = xor i64 %69, -1
  %76 = add i64 %68, %75
  %77 = select i1 %73, i64 %76, i64 %69
  %78 = select i1 %73, %"struct.std::__1::pair.306"* %74, %"struct.std::__1::pair.306"* %67
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %66

80:                                               ; preds = %66, %53
  %81 = phi %"struct.std::__1::pair.306"* [ %56, %53 ], [ %78, %66 ]
  %82 = icmp eq %"struct.std::__1::pair.306"* %81, %63
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, %3
  br i1 %86, label %87, label %100

87:                                               ; preds = %83, %80
  %88 = bitcast %"class.base::internal::flat_tree.294"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #16
  %89 = getelementptr inbounds %"class.base::flat_map.302", %"class.base::flat_map.302"* %54, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 24, i1 false) #16
  %90 = call %"struct.std::__1::pair.306"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS0_IS6_NS_9allocatorIS6_EEEEEEEENSD_ISH_EEE7emplaceIJRKS6_SG_EEENS_11__wrap_iterIPSH_EENSN_IPKSH_EEDpOT_(%"class.std::__1::vector.304"* %89, %"struct.std::__1::pair.306"* %81, %"class.util::IdType"* nonnull dereferenceable(8) %10, %"class.base::internal::flat_tree.294"* nonnull dereferenceable(24) %9) #16
  %91 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %9, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.util::IdType"*, %"class.util::IdType"** %91, align 8
  %93 = icmp eq %"class.util::IdType"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = ptrtoint %"class.util::IdType"* %92 to i64
  %96 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %9, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.util::IdType"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"class.util::IdType"* %92 to i8*
  call void @_ZdlPv(i8* %98) #17
  br label %99

99:                                               ; preds = %94, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #16
  br label %100

100:                                              ; preds = %83, %99
  %101 = phi %"struct.std::__1::pair.306"* [ %90, %99 ], [ %81, %83 ]
  %102 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 0, i32 1
  %103 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.util::IdType"*, %"class.util::IdType"** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 0, i32 1, i32 0, i32 0, i32 1
  %106 = bitcast %"class.util::IdType"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = ptrtoint %"class.util::IdType"* %104 to i64
  %109 = sub i64 %107, %108
  %110 = icmp eq i64 %109, 0
  %111 = inttoptr i64 %107 to %"class.util::IdType"*
  br i1 %110, label %129, label %112

112:                                              ; preds = %100
  %113 = ashr exact i64 %109, 3
  %114 = load i64, i64* %42, align 8
  br label %115

115:                                              ; preds = %115, %112
  %116 = phi %"class.util::IdType"* [ %104, %112 ], [ %127, %115 ]
  %117 = phi i64 [ %113, %112 ], [ %126, %115 ]
  %118 = lshr i64 %117, 1
  %119 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %116, i64 %118
  %120 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %119, i64 0, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp ult i64 %121, %114
  %123 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %119, i64 1
  %124 = xor i64 %118, -1
  %125 = add i64 %117, %124
  %126 = select i1 %122, i64 %125, i64 %118
  %127 = select i1 %122, %"class.util::IdType"* %123, %"class.util::IdType"* %116
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %129, label %115

129:                                              ; preds = %115, %100
  %130 = phi %"class.util::IdType"* [ %104, %100 ], [ %127, %115 ]
  %131 = icmp eq %"class.util::IdType"* %130, %111
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  %133 = load i64, i64* %42, align 8
  %134 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %130, i64 0, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = icmp ult i64 %133, %135
  br i1 %136, label %137, label %140

137:                                              ; preds = %132, %129
  %138 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %102, i64 0, i32 0
  %139 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %138, %"class.util::IdType"* %130, %"class.util::IdType"* nonnull dereferenceable(8) %11) #16
  br label %140

140:                                              ; preds = %137, %132, %39
  %141 = bitcast %"class.base::flat_map.372"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #16
  %142 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.base::flat_map.372", %"class.base::flat_map.372"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.base::flat_map.372"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 24, i1 false)
  %146 = load i32, i32* %144, align 4
  %147 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %180

150:                                              ; preds = %140
  %151 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %180

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %162, label %180

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %164, %166
  br i1 %167, label %168, label %180

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %170, %172
  br i1 %173, label %174, label %180

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = icmp eq i64 %176, %178
  br label %180

180:                                              ; preds = %140, %150, %156, %162, %168, %174
  %181 = phi i1 [ false, %150 ], [ false, %162 ], [ false, %156 ], [ false, %168 ], [ %179, %174 ], [ false, %140 ]
  call void @_ZN3viz17SurfaceAggregator21GenerateRenderPassMapERKNSt3__16vectorINS1_10unique_ptrINS_20CompositorRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEb(%"class.base::flat_map.372"* nonnull sret %12, %"class.std::__1::vector.357"* dereferenceable(24) %44, i1 zeroext %181)
  %182 = bitcast %"class.base::ElapsedTimer"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #16
  %183 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %13, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %183, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %13) #16
  %184 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 1
  %185 = call zeroext i1 @_ZN3viz17SurfaceAggregator26DeclareResourcesToProviderEPNS_7SurfaceERKNSt3__16vectorINS_20TransferableResourceENS3_9allocatorIS5_EEEERKNS4_INS3_10unique_ptrINS_20CompositorRenderPassENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1, %"class.std::__1::vector.443"* dereferenceable(24) %184, %"class.std::__1::vector.357"* dereferenceable(24) %44)
  %186 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %13) #16
  %187 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %188 = load i8, i8* %187, align 8, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191, !prof !28

190:                                              ; preds = %180
  call void @llvm.trap() #16
  unreachable

191:                                              ; preds = %180
  %192 = add i64 %186, -9223372036854775807
  %193 = icmp ult i64 %192, 2
  %194 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0
  %195 = load i64, i64* %194, align 8
  br i1 %193, label %203, label %196

196:                                              ; preds = %191
  %197 = icmp slt i64 %186, 0
  %198 = select i1 %197, i64 -9223372036854775808, i64 9223372036854775807
  %199 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %195, i64 %186) #16
  %200 = extractvalue { i64, i1 } %199, 1
  %201 = extractvalue { i64, i1 } %199, 0
  %202 = select i1 %200, i64 %198, i64 %201, !prof !28
  br label %211

203:                                              ; preds = %191
  %204 = add i64 %195, -9223372036854775807
  %205 = icmp ugt i64 %204, 1
  %206 = icmp eq i64 %195, %186
  %207 = or i1 %206, %205
  br i1 %207, label %211, label %208

208:                                              ; preds = %203
  %209 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0)) #16
  %210 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #16
  br label %211

211:                                              ; preds = %196, %203, %208
  %212 = phi i64 [ %202, %196 ], [ %186, %203 ], [ %186, %208 ]
  store i64 %212, i64* %194, align 8
  br i1 %185, label %213, label %658

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19
  %215 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %214, %"class.viz::SurfaceId"* dereferenceable(32) %25, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  %216 = load i8, i8* %187, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %219, !prof !28

218:                                              ; preds = %213
  call void @llvm.trap() #16
  unreachable

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %220, align 8
  %223 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %45, align 8
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %223, i64 -1, i32 0, i32 0, i32 0
  %225 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %224, align 8
  %226 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #16
  %227 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %228 = bitcast i64* %227 to i32*
  %229 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %15, i64 0, i32 1, i32 1
  %230 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 -86, i64 16, i1 false)
  %231 = call { i64, i64 } @_ZNK3viz17SurfaceAggregator20DamageRectForSurfaceEPKNS_7SurfaceERKNS_20CompositorRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1, %"class.viz::CompositorRenderPass"* dereferenceable(280) %225)
  %232 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %233 = extractvalue { i64, i64 } %231, 0
  store i64 %233, i64* %232, align 8
  %234 = extractvalue { i64, i64 } %231, 1
  store i64 %234, i64* %227, align 8
  %235 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %24, %"class.viz::SurfaceId"* dereferenceable(32) %25, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  %236 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %45, align 8
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %236, i64 -1, i32 0, i32 0, i32 0
  %238 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %237, align 8
  %239 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %238, i64 0, i32 1
  %240 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %142, align 8
  %241 = bitcast %"struct.std::__1::pair.376"** %143 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = ptrtoint %"struct.std::__1::pair.376"* %240 to i64
  %244 = sub i64 %242, %243
  %245 = icmp eq i64 %244, 0
  %246 = inttoptr i64 %242 to %"struct.std::__1::pair.376"*
  br i1 %245, label %267, label %247

247:                                              ; preds = %219
  %248 = sdiv exact i64 %244, 24
  %249 = getelementptr inbounds %"class.util::IdType.362", %"class.util::IdType.362"* %239, i64 0, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  br label %251

251:                                              ; preds = %251, %247
  %252 = phi %"struct.std::__1::pair.376"* [ %240, %247 ], [ %263, %251 ]
  %253 = phi i64 [ %248, %247 ], [ %262, %251 ]
  %254 = lshr i64 %253, 1
  %255 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %252, i64 %254
  %256 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load i64, i64* %256, align 8
  %258 = icmp ult i64 %257, %250
  %259 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 1
  %260 = xor i64 %254, -1
  %261 = add i64 %253, %260
  %262 = select i1 %258, i64 %261, i64 %254
  %263 = select i1 %258, %"struct.std::__1::pair.376"* %259, %"struct.std::__1::pair.376"* %252
  %264 = icmp eq i64 %262, 0
  br i1 %264, label %265, label %251

265:                                              ; preds = %251
  %266 = ptrtoint %"struct.std::__1::pair.376"* %263 to i64
  br label %267

267:                                              ; preds = %265, %219
  %268 = phi i64 [ %266, %265 ], [ %243, %219 ]
  %269 = phi %"struct.std::__1::pair.376"* [ %263, %265 ], [ %240, %219 ]
  %270 = icmp eq %"struct.std::__1::pair.376"* %269, %246
  br i1 %270, label %280, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.util::IdType.362", %"class.util::IdType.362"* %239, i64 0, i32 0, i32 0
  %273 = load i64, i64* %272, align 8
  %274 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %269, i64 0, i32 0, i32 0, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = icmp ult i64 %273, %275
  br i1 %276, label %280, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %269, i64 1
  %279 = ptrtoint %"struct.std::__1::pair.376"* %278 to i64
  br label %280

280:                                              ; preds = %267, %271, %277
  %281 = phi i64 [ %279, %277 ], [ %268, %267 ], [ %268, %271 ]
  %282 = inttoptr i64 %281 to %"struct.std::__1::pair.376"*
  %283 = icmp eq %"struct.std::__1::pair.376"* %269, %282
  %284 = select i1 %283, %"struct.std::__1::pair.376"* %246, %"struct.std::__1::pair.376"* %269
  %285 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %284, i64 0, i32 1
  %286 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %286) #16
  %287 = bitcast %"class.gfx::Transform"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %287) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %287, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %288 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %18, i64 0, i32 0, i32 1
  store i8 0, i8* %288, align 4
  %289 = call { i64, i64 } @_ZN3viz17SurfaceAggregator17PrewalkRenderPassEPNS0_18RenderPassMapEntryEPKNS_7SurfaceEPN4base8flat_mapIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEES1_NSt3__14lessIvEENSC_6vectorINSC_4pairISB_S1_EENSC_9allocatorISH_EEEEEEbRKN3gfx4RectERKNSN_9TransformEbPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %0, %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %285, %"class.viz::Surface"* %1, %"class.base::flat_map.372"* nonnull %12, i1 zeroext %4, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::Transform"* nonnull dereferenceable(68) %18, i1 zeroext %2, %"struct.viz::SurfaceAggregator::PrewalkResult"* %6)
  %290 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %291 = extractvalue { i64, i64 } %289, 0
  store i64 %291, i64* %290, align 8
  %292 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %293 = extractvalue { i64, i64 } %289, 1
  store i64 %293, i64* %292, align 8
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %15, %"class.gfx::Rect"* nonnull dereferenceable(16) %17) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %287) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %286) #16
  %294 = load i32, i32* %228, align 8
  %295 = icmp eq i32 %294, 0
  %296 = load i32, i32* %229, align 4
  %297 = icmp eq i32 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %350, label %299

299:                                              ; preds = %280
  %300 = bitcast %"class.gfx::Rect"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %300, i8* nonnull align 8 %226, i64 16, i1 false)
  %301 = load i32, i32* %144, align 4
  %302 = load i32, i32* %147, align 4
  %303 = icmp eq i32 %301, %302
  br i1 %303, label %304, label %347

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %306, %308
  br i1 %309, label %310, label %347

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp eq i32 %312, %314
  br i1 %315, label %316, label %347

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %318, %320
  br i1 %321, label %322, label %347

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = icmp eq i64 %324, %326
  br i1 %327, label %328, label %347

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 12, i32 1, i32 2, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  %333 = icmp eq i64 %330, %332
  br i1 %333, label %334, label %347

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 13
  %336 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %335, %"class.gfx::Rect"* nonnull dereferenceable(16) %15) #16
  %337 = extractvalue { i64, i64 } %336, 0
  %338 = extractvalue { i64, i64 } %336, 1
  store i64 %337, i64* %232, align 8
  store i64 %338, i64* %227, align 8
  %339 = bitcast %"class.gfx::Transform"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %339) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %339, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  %340 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %335, %"class.gfx::Transform"* nonnull %20) #16
  %341 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %15) #16
  %342 = extractvalue { i64, i64 } %341, 0
  %343 = extractvalue { i64, i64 } %341, 1
  %344 = bitcast %"class.gfx::Rect"* %19 to i64*
  store i64 %342, i64* %344, align 8
  %345 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %19, i64 0, i32 1
  %346 = bitcast %"class.gfx::Size"* %345 to i64*
  store i64 %343, i64* %346, align 8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %339) #16
  br label %347

347:                                              ; preds = %299, %322, %310, %316, %304, %334, %328
  %348 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 21, i32 0, i32 0
  %349 = load i64, i64* %348, align 8
  call void @_ZN3viz7Surface22NotifyAggregatedDamageERKN3gfx4RectEN4base9TimeTicksE(%"class.viz::Surface"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %19, i64 %349) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %300) #16
  br label %350

350:                                              ; preds = %280, %347
  call void @_ZN3viz7Surface32TakeCopyOutputRequestsFromClientEv(%"class.viz::Surface"* %1) #16
  %351 = call zeroext i1 @_ZN3viz7Surface26IsVideoCaptureOnFromClientEv(%"class.viz::Surface"* %1) #16
  br i1 %351, label %352, label %354

352:                                              ; preds = %350
  %353 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 42
  store i8 1, i8* %353, align 2
  br label %354

354:                                              ; preds = %352, %350
  %355 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 4
  %356 = load i8, i8* %355, align 2, !range !2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %368, label %358

358:                                              ; preds = %354
  %359 = load i8, i8* %36, align 8, !range !2
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %368, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %363 = load i8, i8* %362, align 8, !range !2
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %365, label %368

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36
  %367 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %366, %"class.viz::SurfaceId"* dereferenceable(32) %25, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  br label %368

368:                                              ; preds = %358, %354, %365, %361
  br i1 %4, label %369, label %370

369:                                              ; preds = %368
  call void @_ZN3viz7Surface13OnWillBeDrawnEv(%"class.viz::Surface"* %1) #16
  br label %370

370:                                              ; preds = %369, %368
  %371 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 0, i32 9, i32 0, i32 0
  %372 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %371, align 8
  %373 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 0, i32 9, i32 0, i32 1
  %374 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %373, align 8
  %375 = icmp eq %"class.viz::SurfaceRange"* %372, %374
  br i1 %375, label %378, label %376

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32
  br label %390

378:                                              ; preds = %530, %370
  %379 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %380 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %379, align 8
  %381 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 10, i32 0, i32 0, i32 1
  %382 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %381, align 8
  %383 = icmp eq %"class.viz::SurfaceId"* %380, %382
  br i1 %383, label %533, label %384

384:                                              ; preds = %378
  %385 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0
  %386 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %6, i64 0, i32 0
  %387 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  %388 = bitcast %"class.gfx::Rect"* %21 to i8*
  %389 = bitcast %"class.gfx::Rect"* %21 to i8*
  br label %547

390:                                              ; preds = %376, %530
  %391 = phi %"class.viz::SurfaceRange"* [ %372, %376 ], [ %531, %530 ]
  %392 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %391, i64 0, i32 1, i32 0
  %393 = call dereferenceable(24) %"class.std::__1::vector.317"* @_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorINS1_12SurfaceRangeENS3_9allocatorIS5_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S8_EENS6_ISC_EEEEEixERKS2_(%"class.base::flat_map.312"* %377, %"class.viz::FrameSinkId"* dereferenceable(8) %392)
  %394 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %393, i64 0, i32 0, i32 1
  %395 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %394, align 8
  %396 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %393, i64 0, i32 0, i32 2, i32 0, i32 0
  %397 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %396, align 8
  %398 = icmp eq %"class.viz::SurfaceRange"* %395, %397
  %399 = ptrtoint %"class.viz::SurfaceRange"* %397 to i64
  br i1 %398, label %404, label %400

400:                                              ; preds = %390
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %395, %"class.viz::SurfaceRange"* dereferenceable(72) %391) #16
  %401 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %395, i64 1
  %402 = ptrtoint %"class.viz::SurfaceRange"* %401 to i64
  %403 = bitcast %"class.viz::SurfaceRange"** %394 to i64*
  store i64 %402, i64* %403, align 8
  br label %457

404:                                              ; preds = %390
  %405 = ptrtoint %"class.viz::SurfaceRange"* %395 to i64
  %406 = bitcast %"class.viz::SurfaceRange"** %394 to i64*
  %407 = bitcast %"class.std::__1::vector.317"* %393 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = sub i64 %405, %408
  %410 = sdiv exact i64 %409, 72
  %411 = add nsw i64 %410, 1
  %412 = icmp ugt i64 %411, 256204778801521550
  br i1 %412, label %413, label %415

413:                                              ; preds = %404
  %414 = bitcast %"class.std::__1::vector.317"* %393 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %414) #18
  unreachable

415:                                              ; preds = %404
  %416 = bitcast %"class.viz::SurfaceRange"** %396 to i64*
  %417 = sub i64 %399, %408
  %418 = sdiv exact i64 %417, 72
  %419 = icmp ult i64 %418, 128102389400760775
  br i1 %419, label %420, label %425

420:                                              ; preds = %415
  %421 = shl nsw i64 %418, 1
  %422 = icmp ult i64 %421, %411
  %423 = select i1 %422, i64 %411, i64 %421
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %430, label %425

425:                                              ; preds = %420, %415
  %426 = phi i64 [ %423, %420 ], [ 256204778801521550, %415 ]
  %427 = mul i64 %426, 72
  %428 = call i8* @_Znwm(i64 %427) #17
  %429 = bitcast i8* %428 to %"class.viz::SurfaceRange"*
  br label %430

430:                                              ; preds = %425, %420
  %431 = phi i64 [ %426, %425 ], [ 0, %420 ]
  %432 = phi %"class.viz::SurfaceRange"* [ %429, %425 ], [ null, %420 ]
  %433 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %432, i64 %410
  %434 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %432, i64 %431
  %435 = ptrtoint %"class.viz::SurfaceRange"* %434 to i64
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %433, %"class.viz::SurfaceRange"* dereferenceable(72) %391) #16
  %436 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %433, i64 1
  %437 = ptrtoint %"class.viz::SurfaceRange"* %436 to i64
  %438 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %393, i64 0, i32 0, i32 0
  %439 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %438, align 8
  %440 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %394, align 8
  %441 = icmp eq %"class.viz::SurfaceRange"* %440, %439
  br i1 %441, label %450, label %442

442:                                              ; preds = %430, %442
  %443 = phi %"class.viz::SurfaceRange"* [ %445, %442 ], [ %433, %430 ]
  %444 = phi %"class.viz::SurfaceRange"* [ %446, %442 ], [ %440, %430 ]
  %445 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %443, i64 -1
  %446 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %444, i64 -1
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %445, %"class.viz::SurfaceRange"* dereferenceable(72) %446) #16
  %447 = icmp eq %"class.viz::SurfaceRange"* %446, %439
  br i1 %447, label %448, label %442

448:                                              ; preds = %442
  %449 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %438, align 8
  br label %450

450:                                              ; preds = %448, %430
  %451 = phi %"class.viz::SurfaceRange"* [ %445, %448 ], [ %433, %430 ]
  %452 = phi %"class.viz::SurfaceRange"* [ %449, %448 ], [ %439, %430 ]
  %453 = ptrtoint %"class.viz::SurfaceRange"* %451 to i64
  store i64 %453, i64* %407, align 8
  store i64 %437, i64* %406, align 8
  store i64 %435, i64* %416, align 8
  %454 = icmp eq %"class.viz::SurfaceRange"* %452, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %450
  %456 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %452, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %456) #17
  br label %457

457:                                              ; preds = %455, %450, %400
  %458 = call zeroext i1 @_ZNK3viz12SurfaceRange24HasDifferentFrameSinkIdsEv(%"class.viz::SurfaceRange"* %391) #16
  br i1 %458, label %459, label %530

459:                                              ; preds = %457
  %460 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %391, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load i8, i8* %460, align 8, !range !2
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %463, label %464, !prof !28

463:                                              ; preds = %459
  call void @llvm.trap() #16
  unreachable

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %391, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %466 = call dereferenceable(24) %"class.std::__1::vector.317"* @_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorINS1_12SurfaceRangeENS3_9allocatorIS5_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S8_EENS6_ISC_EEEEEixERKS2_(%"class.base::flat_map.312"* %377, %"class.viz::FrameSinkId"* dereferenceable(8) %465)
  %467 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %466, i64 0, i32 0, i32 1
  %468 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %467, align 8
  %469 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %466, i64 0, i32 0, i32 2, i32 0, i32 0
  %470 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %469, align 8
  %471 = icmp eq %"class.viz::SurfaceRange"* %468, %470
  %472 = ptrtoint %"class.viz::SurfaceRange"* %470 to i64
  br i1 %471, label %477, label %473

473:                                              ; preds = %464
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %468, %"class.viz::SurfaceRange"* dereferenceable(72) %391) #16
  %474 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %468, i64 1
  %475 = ptrtoint %"class.viz::SurfaceRange"* %474 to i64
  %476 = bitcast %"class.viz::SurfaceRange"** %467 to i64*
  store i64 %475, i64* %476, align 8
  br label %530

477:                                              ; preds = %464
  %478 = ptrtoint %"class.viz::SurfaceRange"* %468 to i64
  %479 = bitcast %"class.viz::SurfaceRange"** %467 to i64*
  %480 = bitcast %"class.std::__1::vector.317"* %466 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = sub i64 %478, %481
  %483 = sdiv exact i64 %482, 72
  %484 = add nsw i64 %483, 1
  %485 = icmp ugt i64 %484, 256204778801521550
  br i1 %485, label %486, label %488

486:                                              ; preds = %477
  %487 = bitcast %"class.std::__1::vector.317"* %466 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %487) #18
  unreachable

488:                                              ; preds = %477
  %489 = bitcast %"class.viz::SurfaceRange"** %469 to i64*
  %490 = sub i64 %472, %481
  %491 = sdiv exact i64 %490, 72
  %492 = icmp ult i64 %491, 128102389400760775
  br i1 %492, label %493, label %498

493:                                              ; preds = %488
  %494 = shl nsw i64 %491, 1
  %495 = icmp ult i64 %494, %484
  %496 = select i1 %495, i64 %484, i64 %494
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %503, label %498

498:                                              ; preds = %493, %488
  %499 = phi i64 [ %496, %493 ], [ 256204778801521550, %488 ]
  %500 = mul i64 %499, 72
  %501 = call i8* @_Znwm(i64 %500) #17
  %502 = bitcast i8* %501 to %"class.viz::SurfaceRange"*
  br label %503

503:                                              ; preds = %498, %493
  %504 = phi i64 [ %499, %498 ], [ 0, %493 ]
  %505 = phi %"class.viz::SurfaceRange"* [ %502, %498 ], [ null, %493 ]
  %506 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %505, i64 %483
  %507 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %505, i64 %504
  %508 = ptrtoint %"class.viz::SurfaceRange"* %507 to i64
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %506, %"class.viz::SurfaceRange"* dereferenceable(72) %391) #16
  %509 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %506, i64 1
  %510 = ptrtoint %"class.viz::SurfaceRange"* %509 to i64
  %511 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %466, i64 0, i32 0, i32 0
  %512 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %511, align 8
  %513 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %467, align 8
  %514 = icmp eq %"class.viz::SurfaceRange"* %513, %512
  br i1 %514, label %523, label %515

515:                                              ; preds = %503, %515
  %516 = phi %"class.viz::SurfaceRange"* [ %518, %515 ], [ %506, %503 ]
  %517 = phi %"class.viz::SurfaceRange"* [ %519, %515 ], [ %513, %503 ]
  %518 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %516, i64 -1
  %519 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %517, i64 -1
  call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %518, %"class.viz::SurfaceRange"* dereferenceable(72) %519) #16
  %520 = icmp eq %"class.viz::SurfaceRange"* %519, %512
  br i1 %520, label %521, label %515

521:                                              ; preds = %515
  %522 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %511, align 8
  br label %523

523:                                              ; preds = %521, %503
  %524 = phi %"class.viz::SurfaceRange"* [ %518, %521 ], [ %506, %503 ]
  %525 = phi %"class.viz::SurfaceRange"* [ %522, %521 ], [ %512, %503 ]
  %526 = ptrtoint %"class.viz::SurfaceRange"* %524 to i64
  store i64 %526, i64* %480, align 8
  store i64 %510, i64* %479, align 8
  store i64 %508, i64* %489, align 8
  %527 = icmp eq %"class.viz::SurfaceRange"* %525, null
  br i1 %527, label %530, label %528

528:                                              ; preds = %523
  %529 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %525, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %529) #17
  br label %530

530:                                              ; preds = %473, %523, %528, %457
  %531 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %391, i64 1
  %532 = icmp eq %"class.viz::SurfaceRange"* %531, %374
  br i1 %532, label %378, label %390

533:                                              ; preds = %560, %378
  %534 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %44, i64 0, i32 0, i32 0
  %535 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %534, align 8
  %536 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %45, align 8
  %537 = icmp eq %"class.std::__1::unique_ptr.359"* %535, %536
  br i1 %537, label %563, label %538

538:                                              ; preds = %533
  %539 = bitcast %"class.util::IdType"* %22 to i8*
  %540 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 0, i32 0, i32 0
  %541 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23
  %542 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %544 = bitcast %"class.util::IdType"** %543 to i64*
  %545 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %541, i64 0, i32 0
  %546 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 30
  br label %587

547:                                              ; preds = %384, %560
  %548 = phi %"class.viz::SurfaceId"* [ %380, %384 ], [ %561, %560 ]
  %549 = call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %385, %"class.viz::SurfaceId"* dereferenceable(32) %548) #16
  %550 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %549, 0
  %551 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %549, 1
  %552 = icmp eq %"struct.std::__1::pair.212"* %551, %550
  br i1 %552, label %553, label %560

553:                                              ; preds = %547
  %554 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %386, %"class.viz::SurfaceId"* dereferenceable(32) %548, %"class.viz::SurfaceId"* dereferenceable(32) %548) #16
  %555 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %387, align 8
  %556 = call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %555, %"class.viz::SurfaceId"* dereferenceable(32) %548) #16
  %557 = icmp eq %"class.viz::Surface"* %556, null
  br i1 %557, label %560, label %558

558:                                              ; preds = %553
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %388) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %389, i8 0, i64 16, i1 false)
  %559 = call { i64, i64 } @_ZN3viz17SurfaceAggregator14PrewalkSurfaceEPNS_7SurfaceEbN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEbRKN3gfx4RectEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* nonnull %556, i1 zeroext false, i64 0, i1 zeroext false, %"class.gfx::Rect"* nonnull dereferenceable(16) %21, %"struct.viz::SurfaceAggregator::PrewalkResult"* %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %388) #16
  br label %560

560:                                              ; preds = %558, %553, %547
  %561 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %548, i64 1
  %562 = icmp eq %"class.viz::SurfaceId"* %561, %382
  br i1 %562, label %533, label %547

563:                                              ; preds = %640, %533
  %564 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %24, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  %565 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %564, 0
  %566 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %564, 1
  %567 = icmp eq %"class.viz::SurfaceId"* %565, %566
  br i1 %567, label %581, label %568

568:                                              ; preds = %563
  %569 = ptrtoint %"class.viz::SurfaceId"* %566 to i64
  %570 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %571 = bitcast %"class.viz::SurfaceId"** %570 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = sub i64 %572, %569
  %574 = ashr exact i64 %573, 5
  %575 = icmp eq i64 %573, 0
  br i1 %575, label %579, label %576

576:                                              ; preds = %568
  %577 = bitcast %"class.viz::SurfaceId"* %565 to i8*
  %578 = bitcast %"class.viz::SurfaceId"* %566 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %577, i8* align 8 %578, i64 %573, i1 false) #16
  br label %579

579:                                              ; preds = %576, %568
  %580 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %565, i64 %574
  store %"class.viz::SurfaceId"* %580, %"class.viz::SurfaceId"** %570, align 8
  br label %581

581:                                              ; preds = %563, %579
  %582 = load i32, i32* %228, align 8
  %583 = icmp eq i32 %582, 0
  %584 = load i32, i32* %229, align 4
  %585 = icmp eq i32 %584, 0
  %586 = or i1 %583, %585
  br i1 %586, label %649, label %643

587:                                              ; preds = %538, %640
  %588 = phi %"class.std::__1::unique_ptr.359"* [ %535, %538 ], [ %641, %640 ]
  %589 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %588, i64 0, i32 0, i32 0, i32 0
  %590 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %589, align 8
  %591 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %590, i64 0, i32 0, i32 10, i32 0, i32 0
  %592 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %591, align 8
  %593 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %590, i64 0, i32 0, i32 10, i32 0, i32 1
  %594 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %593, align 8
  %595 = icmp eq %"class.std::__1::unique_ptr.260"* %592, %594
  br i1 %595, label %634, label %596

596:                                              ; preds = %587
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %539) #16
  store i64 -6148914691236517206, i64* %540, align 8
  %597 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %589, align 8
  %598 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %597, i64 0, i32 1, i32 0, i32 0
  %599 = load i64, i64* %598, align 8
  %600 = call i64 @_ZN3viz20RenderPassIdRemapper5RemapEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEERKNS_9SurfaceIdE(%"class.viz::RenderPassIdRemapper"* %43, i64 %599, %"class.viz::SurfaceId"* dereferenceable(32) %25) #16
  store i64 %600, i64* %540, align 8
  %601 = load %"class.util::IdType"*, %"class.util::IdType"** %542, align 8
  %602 = load i64, i64* %544, align 8
  %603 = ptrtoint %"class.util::IdType"* %601 to i64
  %604 = sub i64 %602, %603
  %605 = icmp eq i64 %604, 0
  %606 = inttoptr i64 %602 to %"class.util::IdType"*
  br i1 %605, label %623, label %607

607:                                              ; preds = %596
  %608 = ashr exact i64 %604, 3
  br label %609

609:                                              ; preds = %609, %607
  %610 = phi %"class.util::IdType"* [ %601, %607 ], [ %621, %609 ]
  %611 = phi i64 [ %608, %607 ], [ %620, %609 ]
  %612 = lshr i64 %611, 1
  %613 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %610, i64 %612
  %614 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %613, i64 0, i32 0, i32 0
  %615 = load i64, i64* %614, align 8
  %616 = icmp ult i64 %615, %600
  %617 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %613, i64 1
  %618 = xor i64 %612, -1
  %619 = add i64 %611, %618
  %620 = select i1 %616, i64 %619, i64 %612
  %621 = select i1 %616, %"class.util::IdType"* %617, %"class.util::IdType"* %610
  %622 = icmp eq i64 %620, 0
  br i1 %622, label %623, label %609

623:                                              ; preds = %609, %596
  %624 = phi %"class.util::IdType"* [ %601, %596 ], [ %621, %609 ]
  %625 = icmp eq %"class.util::IdType"* %624, %606
  br i1 %625, label %630, label %626

626:                                              ; preds = %623
  %627 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %624, i64 0, i32 0, i32 0
  %628 = load i64, i64* %627, align 8
  %629 = icmp ult i64 %600, %628
  br i1 %629, label %630, label %632

630:                                              ; preds = %626, %623
  %631 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %545, %"class.util::IdType"* %624, %"class.util::IdType"* nonnull dereferenceable(8) %22) #16
  br label %632

632:                                              ; preds = %626, %630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %539) #16
  %633 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %589, align 8
  br label %634

634:                                              ; preds = %632, %587
  %635 = phi %"class.viz::CompositorRenderPass"* [ %633, %632 ], [ %590, %587 ]
  %636 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %635, i64 0, i32 0, i32 7
  %637 = load i8, i8* %636, align 1, !range !2
  %638 = icmp eq i8 %637, 0
  br i1 %638, label %640, label %639

639:                                              ; preds = %634
  store i8 1, i8* %546, align 2
  br label %640

640:                                              ; preds = %634, %639
  %641 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %588, i64 1
  %642 = icmp eq %"class.std::__1::unique_ptr.359"* %641, %536
  br i1 %642, label %563, label %587

643:                                              ; preds = %581
  %644 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 0, i32 5
  %645 = load i8, i8* %644, align 1, !range !2
  %646 = icmp eq i8 %645, 0
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %6, i64 0, i32 1
  store i8 1, i8* %648, align 8
  br label %649

649:                                              ; preds = %581, %643, %647
  %650 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %6, i64 0, i32 3
  %651 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %40, i64 0, i32 0, i32 4
  %652 = load i8, i8* %650, align 1
  %653 = load i8, i8* %651, align 1
  %654 = icmp ult i8 %652, %653
  %655 = select i1 %654, i8 %653, i8 %652
  store i8 %655, i8* %650, align 2
  %656 = load i64, i64* %232, align 8
  %657 = load i64, i64* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #16
  br label %658

658:                                              ; preds = %211, %649
  %659 = phi i64 [ %657, %649 ], [ 0, %211 ]
  %660 = phi i64 [ %656, %649 ], [ 0, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #16
  %661 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %142, align 8
  %662 = icmp eq %"struct.std::__1::pair.376"* %661, null
  br i1 %662, label %667, label %663

663:                                              ; preds = %658
  %664 = ptrtoint %"struct.std::__1::pair.376"* %661 to i64
  %665 = bitcast %"struct.std::__1::pair.376"** %143 to i64*
  store i64 %664, i64* %665, align 8
  %666 = bitcast %"struct.std::__1::pair.376"* %661 to i8*
  call void @_ZdlPv(i8* %666) #17
  br label %667

667:                                              ; preds = %658, %663
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  br label %668

668:                                              ; preds = %30, %7, %667
  %669 = phi i64 [ %659, %667 ], [ 0, %7 ], [ 0, %30 ]
  %670 = phi i64 [ %660, %667 ], [ 0, %7 ], [ 0, %30 ]
  %671 = insertvalue { i64, i64 } undef, i64 %670, 0
  %672 = insertvalue { i64, i64 } %671, i64 %669, 1
  ret { i64, i64 } %672
}

declare { i64, i64 } @_ZN2cc8MathUtil36MapEnclosingClippedRectIgnoringErrorERKN3gfx9TransformERKNS1_4RectEf(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz17SurfaceAggregator26DeclareResourcesToProviderEPNS_7SurfaceERKNSt3__16vectorINS_20TransferableResourceENS3_9allocatorIS5_EEEERKNS4_INS3_10unique_ptrINS_20CompositorRenderPassENS3_14default_deleteISC_EEEENS6_ISF_EEEE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*, %"class.std::__1::vector.443"* dereferenceable(24), %"class.std::__1::vector.357"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %6 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %7 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %8 = alloca %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare", align 1
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = alloca %"class.base::WeakPtr", align 8
  %12 = alloca %"class.std::__1::vector.592", align 8
  %13 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %14 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %15 = alloca %"class.base::internal::flat_tree.599", align 8
  %16 = tail call i32 @_ZN3viz17SurfaceAggregator17ChildIdForSurfaceEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::Surface"* %1)
  %17 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 3, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %18, %"class.base::internal::WeakReference"* dereferenceable(8) %19) #16
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 3, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !77
  store i64 %22, i64* %20, align 8, !alias.scope !77
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %18) #16
  %24 = bitcast i64* %20 to %"class.viz::SurfaceClient"**
  %25 = load %"class.viz::SurfaceClient"*, %"class.viz::SurfaceClient"** %24, align 8
  %26 = icmp ne %"class.viz::SurfaceClient"* %25, null
  %27 = and i1 %23, %26
  %28 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  br i1 %27, label %29, label %48

29:                                               ; preds = %4
  %30 = bitcast %"class.base::WeakPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #16
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %31, %"class.base::internal::WeakReference"* dereferenceable(8) %19) #16
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 1
  %33 = load i64, i64* %21, align 8, !noalias !80
  store i64 %33, i64* %32, align 8, !alias.scope !80
  %34 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %31) #16
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %35, %29
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %31) #16
  %40 = bitcast i64* %32 to %"class.viz::SurfaceClient"**
  %41 = load %"class.viz::SurfaceClient"*, %"class.viz::SurfaceClient"** %40, align 8
  %42 = select i1 %39, %"class.viz::SurfaceClient"* %41, %"class.viz::SurfaceClient"* null
  %43 = bitcast %"class.viz::SurfaceClient"* %42 to void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)***
  %44 = load void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)**, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)*, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)** %44, i64 5
  %46 = load void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)*, void (%"class.viz::SurfaceClient"*, %"class.std::__1::vector.443"*)** %45, align 8
  call void %46(%"class.viz::SurfaceClient"* %42, %"class.std::__1::vector.443"* dereferenceable(24) %2) #16
  %47 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %47) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #16
  br label %48

48:                                               ; preds = %38, %4
  %49 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 1
  %50 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %49, align 8
  call void @_ZN3viz23DisplayResourceProvider16ReceiveFromChildEiRKNSt3__16vectorINS_20TransferableResourceENS1_9allocatorIS3_EEEE(%"class.viz::DisplayResourceProvider"* %50, i32 %16, %"class.std::__1::vector.443"* dereferenceable(24) %2) #16
  %51 = getelementptr inbounds %"class.std::__1::vector.443", %"class.std::__1::vector.443"* %2, i64 0, i32 0, i32 1
  %52 = bitcast %"struct.viz::TransferableResource"** %51 to i64*
  %53 = bitcast %"class.std::__1::vector.443"* %2 to i64*
  %54 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %58, !prof !28

57:                                               ; preds = %48
  call void @llvm.trap() #16
  unreachable

58:                                               ; preds = %48
  %59 = load i64, i64* %52, align 8
  %60 = load i64, i64* %53, align 8
  %61 = sub i64 %59, %60
  %62 = lshr exact i64 %61, 8
  %63 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = trunc i64 %62 to i32
  %66 = add i32 %64, %65
  store i32 %66, i32* %63, align 8
  %67 = bitcast %"class.std::__1::vector.592"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #16
  %68 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %12, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %12, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #16
  %71 = load i64, i64* %52, align 8
  %72 = load i64, i64* %53, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 8
  %75 = bitcast %"class.util::IdType.445"** %70 to i64*
  %76 = bitcast %"class.std::__1::vector.592"* %12 to i64*
  %77 = icmp eq i64 %73, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %58
  %79 = icmp ugt i64 %74, 4611686018427387903
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  call void @abort() #18
  unreachable

81:                                               ; preds = %78
  %82 = bitcast %"class.util::IdType.445"** %69 to i64*
  %83 = ashr exact i64 %73, 6
  %84 = call i8* @_Znwm(i64 %83) #17
  %85 = bitcast i8* %84 to %"class.util::IdType.445"*
  %86 = ptrtoint i8* %84 to i64
  %87 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %85, i64 %74
  %88 = ptrtoint %"class.util::IdType.445"* %87 to i64
  %89 = ptrtoint i8* %84 to i64
  store i64 %89, i64* %76, align 8
  store i64 %86, i64* %82, align 8
  store i64 %88, i64* %75, align 8
  br label %90

90:                                               ; preds = %81, %58
  %91 = phi i64 [ 0, %58 ], [ %88, %81 ]
  %92 = phi i64 [ 0, %58 ], [ %86, %81 ]
  %93 = phi i64 [ 0, %58 ], [ %89, %81 ]
  %94 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %49, align 8
  %95 = call dereferenceable(40) %"class.std::__1::unordered_map.554"* @_ZNK3viz23DisplayResourceProvider19GetChildToParentMapEi(%"class.viz::DisplayResourceProvider"* %94, i32 %16) #16
  %96 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %3, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %3, i64 0, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.359"* %97, %99
  br i1 %100, label %263, label %101

101:                                              ; preds = %90
  %102 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13 to i8*
  %103 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0, i32 0, i32 2
  %104 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0, i32 1
  %105 = bitcast %"class.cc::ListContainerHelper::Iterator"* %7 to i8*
  %106 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %7, i64 0, i32 0
  %108 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %7, i64 0, i32 1
  %109 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %14 to i8*
  %110 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %14, i64 0, i32 0, i32 1
  %111 = bitcast %"class.cc::ListContainerHelper::Iterator"* %6 to i8*
  %112 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %14, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 0
  %114 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 1
  %115 = bitcast i8** %103 to %"class.viz::DrawQuad"**
  %116 = getelementptr inbounds %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.554"* %95, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.554"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.util::IdType.445"** %69 to i64*
  %119 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %5 to i8*
  %120 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %14, i64 0, i32 0
  %121 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0
  %122 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13 to i8*
  %123 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %14 to i8*
  br label %124

124:                                              ; preds = %101, %256
  %125 = phi %"class.std::__1::unique_ptr.359"* [ %97, %101 ], [ %257, %256 ]
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %126, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #16, !noalias !83
  %128 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %127, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %7, %"class.cc::ListContainerHelper"* %128) #16, !noalias !83
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %106, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %107) #16
  %129 = load i64, i64* %108, align 8, !noalias !83
  store i64 %129, i64* %104, align 8, !alias.scope !83
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #16, !noalias !83
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #16, !noalias !86
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %6, %"class.cc::ListContainerHelper"* %128) #16, !noalias !86
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %112, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %113) #16
  %130 = load i64, i64* %114, align 8, !noalias !86
  store i64 %130, i64* %110, align 8, !alias.scope !86
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #16, !noalias !86
  %131 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %106, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %112) #16
  br i1 %131, label %132, label %256

132:                                              ; preds = %124, %251
  %133 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %115, align 8
  %134 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 7, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 7, i32 1, i64 %136
  %138 = icmp eq i32 %135, 0
  br i1 %138, label %251, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 7, i32 1, i64 0
  br label %141

141:                                              ; preds = %139, %248
  %142 = phi %"class.util::IdType.445"* [ %249, %248 ], [ %140, %139 ]
  %143 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %142, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = load i64, i64* %116, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %255, label %148

148:                                              ; preds = %141
  %149 = call i64 @llvm.ctpop.i64(i64 %146) #16, !range !55
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = add i64 %146, 4294967295
  %153 = and i64 %152, %145
  br label %158

154:                                              ; preds = %148
  %155 = icmp ugt i64 %146, %145
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %145, %146
  br label %158

158:                                              ; preds = %156, %154, %151
  %159 = phi i64 [ %153, %151 ], [ %157, %156 ], [ %145, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base.559"**, %"struct.std::__1::__hash_node_base.559"*** %117, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %160, i64 %159
  %162 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.559"* %162, null
  br i1 %163, label %255, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %162, i64 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base.559"* %166, null
  br i1 %167, label %255, label %168

168:                                              ; preds = %164
  %169 = add i64 %146, -1
  br label %170

170:                                              ; preds = %191, %168
  %171 = phi %"struct.std::__1::__hash_node_base.559"* [ %166, %168 ], [ %193, %191 ]
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %171, i64 1
  %173 = bitcast %"struct.std::__1::__hash_node_base.559"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, %145
  br i1 %175, label %186, label %176

176:                                              ; preds = %170
  br i1 %150, label %179, label %177

177:                                              ; preds = %176
  %178 = and i64 %174, %169
  br label %183

179:                                              ; preds = %176
  %180 = icmp ult i64 %174, %146
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = urem i64 %174, %146
  br label %183

183:                                              ; preds = %181, %179, %177
  %184 = phi i64 [ %178, %177 ], [ %182, %181 ], [ %174, %179 ]
  %185 = icmp eq i64 %184, %159
  br i1 %185, label %191, label %255

186:                                              ; preds = %170
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %171, i64 2
  %188 = bitcast %"struct.std::__1::__hash_node_base.559"* %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %144
  br i1 %190, label %195, label %191

191:                                              ; preds = %186, %183
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.559", %"struct.std::__1::__hash_node_base.559"* %171, i64 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.559"*, %"struct.std::__1::__hash_node_base.559"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.559"* %193, null
  br i1 %194, label %255, label %170

195:                                              ; preds = %186
  %196 = load %"class.util::IdType.445"*, %"class.util::IdType.445"** %69, align 8
  %197 = load %"class.util::IdType.445"*, %"class.util::IdType.445"** %70, align 8
  %198 = icmp eq %"class.util::IdType.445"* %196, %197
  %199 = ptrtoint %"class.util::IdType.445"* %197 to i64
  br i1 %198, label %204, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %196, i64 0, i32 0, i32 0
  store i32 %144, i32* %201, align 4
  %202 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %196, i64 1
  %203 = ptrtoint %"class.util::IdType.445"* %202 to i64
  store i64 %203, i64* %118, align 8
  br label %248

204:                                              ; preds = %195
  %205 = ptrtoint %"class.util::IdType.445"* %196 to i64
  %206 = load i64, i64* %76, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 2
  %209 = add nsw i64 %208, 1
  %210 = icmp ugt i64 %209, 4611686018427387903
  br i1 %210, label %211, label %213

211:                                              ; preds = %204
  %212 = bitcast %"class.std::__1::vector.592"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %212) #18
  unreachable

213:                                              ; preds = %204
  %214 = sub i64 %199, %206
  %215 = ashr exact i64 %214, 2
  %216 = icmp ult i64 %215, 2305843009213693951
  br i1 %216, label %217, label %225

217:                                              ; preds = %213
  %218 = ashr exact i64 %214, 1
  %219 = icmp ult i64 %218, %209
  %220 = select i1 %219, i64 %209, i64 %218
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %217
  %223 = icmp ugt i64 %220, 4611686018427387903
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  call void @abort() #18
  unreachable

225:                                              ; preds = %222, %213
  %226 = phi i64 [ %220, %222 ], [ 4611686018427387903, %213 ]
  %227 = shl i64 %226, 2
  %228 = call i8* @_Znwm(i64 %227) #17
  %229 = bitcast i8* %228 to %"class.util::IdType.445"*
  br label %230

230:                                              ; preds = %225, %217
  %231 = phi i64 [ %226, %225 ], [ 0, %217 ]
  %232 = phi i8* [ %228, %225 ], [ null, %217 ]
  %233 = phi %"class.util::IdType.445"* [ %229, %225 ], [ null, %217 ]
  %234 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %233, i64 %208
  %235 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %233, i64 %231
  %236 = ptrtoint %"class.util::IdType.445"* %235 to i64
  %237 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %234, i64 0, i32 0, i32 0
  store i32 %144, i32* %237, align 4
  %238 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %234, i64 1
  %239 = ptrtoint %"class.util::IdType.445"* %238 to i64
  %240 = ptrtoint %"class.util::IdType.445"* %233 to i64
  %241 = icmp sgt i64 %207, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %230
  %243 = inttoptr i64 %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %243, i64 %207, i1 false) #16
  br label %244

244:                                              ; preds = %242, %230
  store i64 %240, i64* %76, align 8
  store i64 %239, i64* %118, align 8
  store i64 %236, i64* %75, align 8
  %245 = icmp eq i64 %206, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = inttoptr i64 %206 to i8*
  call void @_ZdlPv(i8* %247) #17
  br label %248

248:                                              ; preds = %200, %244, %246
  %249 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %142, i64 1
  %250 = icmp eq %"class.util::IdType.445"* %249, %137
  br i1 %250, label %251, label %141

251:                                              ; preds = %248, %132
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %5, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %106) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #16
  %252 = load i64, i64* %104, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %104, align 8
  %254 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %106, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %112) #16
  br i1 %254, label %132, label %256

255:                                              ; preds = %164, %141, %158, %183, %191
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #16
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %121) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #16
  br label %357

256:                                              ; preds = %251, %124
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #16
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %121) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #16
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %125, i64 1
  %258 = icmp eq %"class.std::__1::unique_ptr.359"* %257, %99
  br i1 %258, label %259, label %124

259:                                              ; preds = %256
  %260 = load i64, i64* %76, align 8
  %261 = load i64, i64* %118, align 8
  %262 = load i64, i64* %75, align 8
  br label %263

263:                                              ; preds = %90, %259
  %264 = phi i64 [ %262, %259 ], [ %91, %90 ]
  %265 = phi i64 [ %261, %259 ], [ %92, %90 ]
  %266 = phi i64 [ %260, %259 ], [ %93, %90 ]
  %267 = bitcast %"class.base::internal::flat_tree.599"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #16
  %268 = getelementptr inbounds %"class.base::internal::flat_tree.599", %"class.base::internal::flat_tree.599"* %15, i64 0, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"class.base::internal::flat_tree.599", %"class.base::internal::flat_tree.599"* %15, i64 0, i32 0, i32 0, i32 1
  %270 = getelementptr inbounds %"class.base::internal::flat_tree.599", %"class.base::internal::flat_tree.599"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %271 = bitcast %"class.base::internal::flat_tree.599"* %15 to i64*
  store i64 %266, i64* %271, align 8
  %272 = bitcast %"class.util::IdType.445"** %269 to i64*
  store i64 %265, i64* %272, align 8
  %273 = bitcast %"class.util::IdType.445"** %270 to i64*
  store i64 %264, i64* %273, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #16
  %274 = inttoptr i64 %266 to %"class.util::IdType.445"*
  %275 = inttoptr i64 %265 to %"class.util::IdType.445"*
  %276 = getelementptr inbounds %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare", %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %276)
  %277 = sub i64 %265, %266
  %278 = ashr exact i64 %277, 2
  %279 = icmp sgt i64 %277, 512
  br i1 %279, label %280, label %291

280:                                              ; preds = %263
  %281 = icmp slt i64 %278, 2305843009213693951
  %282 = select i1 %281, i64 %278, i64 2305843009213693951
  br label %283

283:                                              ; preds = %288, %280
  %284 = phi i64 [ %289, %288 ], [ %282, %280 ]
  %285 = shl i64 %284, 2
  %286 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %285, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #16
  %287 = icmp eq i8* %286, null
  br i1 %287, label %288, label %292

288:                                              ; preds = %283
  %289 = lshr i64 %284, 1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %283

291:                                              ; preds = %288, %263
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %274, %"class.util::IdType.445"* %275, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* nonnull dereferenceable(1) %8, i64 %278, %"class.util::IdType.445"* null, i64 0) #16
  br label %294

292:                                              ; preds = %283
  %293 = bitcast i8* %286 to %"class.util::IdType.445"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %274, %"class.util::IdType.445"* %275, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* nonnull dereferenceable(1) %8, i64 %278, %"class.util::IdType.445"* nonnull %293, i64 %284) #16
  call void @_ZdlPv(i8* nonnull %286) #17
  br label %294

294:                                              ; preds = %291, %292
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %276)
  %295 = icmp eq %"class.util::IdType.445"* %274, %275
  br i1 %295, label %349, label %296

296:                                              ; preds = %294, %300
  %297 = phi %"class.util::IdType.445"* [ %298, %300 ], [ %274, %294 ]
  %298 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %297, i64 1
  %299 = icmp eq %"class.util::IdType.445"* %298, %275
  br i1 %299, label %349, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %297, i64 0, i32 0, i32 0
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %298, i64 0, i32 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = icmp ult i32 %302, %304
  br i1 %305, label %296, label %306

306:                                              ; preds = %300
  %307 = icmp eq %"class.util::IdType.445"* %297, %275
  br i1 %307, label %349, label %308

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %297, i64 2
  %310 = icmp eq %"class.util::IdType.445"* %309, %275
  br i1 %310, label %335, label %311

311:                                              ; preds = %308
  %312 = ptrtoint %"class.util::IdType.445"* %297 to i64
  br label %313

313:                                              ; preds = %330, %311
  %314 = phi i32 [ %332, %330 ], [ %302, %311 ]
  %315 = phi %"class.util::IdType.445"* [ %329, %330 ], [ %297, %311 ]
  %316 = phi %"class.util::IdType.445"* [ %327, %330 ], [ %309, %311 ]
  %317 = phi i64 [ %326, %330 ], [ %312, %311 ]
  %318 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %316, i64 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = icmp ult i32 %314, %319
  br i1 %320, label %321, label %325

321:                                              ; preds = %313
  %322 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %315, i64 1
  %323 = ptrtoint %"class.util::IdType.445"* %322 to i64
  %324 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %322, i64 0, i32 0, i32 0
  store i32 %319, i32* %324, align 4
  br label %325

325:                                              ; preds = %321, %313
  %326 = phi i64 [ %317, %313 ], [ %323, %321 ]
  %327 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %316, i64 1
  %328 = icmp eq %"class.util::IdType.445"* %327, %275
  %329 = inttoptr i64 %326 to %"class.util::IdType.445"*
  br i1 %328, label %333, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %329, i64 0, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  br label %313

333:                                              ; preds = %325
  %334 = inttoptr i64 %326 to %"class.util::IdType.445"*
  br label %335

335:                                              ; preds = %333, %308
  %336 = phi %"class.util::IdType.445"* [ %297, %308 ], [ %334, %333 ]
  %337 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %336, i64 1
  %338 = icmp eq %"class.util::IdType.445"* %337, %275
  br i1 %338, label %349, label %339

339:                                              ; preds = %335
  %340 = load i64, i64* %272, align 8
  %341 = sub i64 %340, %265
  %342 = ashr exact i64 %341, 2
  %343 = icmp eq i64 %341, 0
  br i1 %343, label %347, label %344

344:                                              ; preds = %339
  %345 = bitcast %"class.util::IdType.445"* %337 to i8*
  %346 = inttoptr i64 %265 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 %341, i1 false) #16
  br label %347

347:                                              ; preds = %344, %339
  %348 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %337, i64 %342
  store %"class.util::IdType.445"* %348, %"class.util::IdType.445"** %269, align 8
  br label %349

349:                                              ; preds = %296, %294, %306, %335, %347
  %350 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %49, align 8
  call void @_ZN3viz23DisplayResourceProvider29DeclareUsedResourcesFromChildEiRKN4base8internal9flat_treeIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENSt3__14lessIvEENS9_6vectorIS7_NS9_9allocatorIS7_EEEEEE(%"class.viz::DisplayResourceProvider"* %350, i32 %16, %"class.base::internal::flat_tree.599"* nonnull dereferenceable(24) %15) #16
  %351 = load %"class.util::IdType.445"*, %"class.util::IdType.445"** %268, align 8
  %352 = icmp eq %"class.util::IdType.445"* %351, null
  br i1 %352, label %356, label %353

353:                                              ; preds = %349
  %354 = ptrtoint %"class.util::IdType.445"* %351 to i64
  store i64 %354, i64* %272, align 8
  %355 = bitcast %"class.util::IdType.445"* %351 to i8*
  call void @_ZdlPv(i8* %355) #17
  br label %356

356:                                              ; preds = %349, %353
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #16
  br label %357

357:                                              ; preds = %255, %356
  %358 = phi i1 [ true, %356 ], [ false, %255 ]
  %359 = load %"class.util::IdType.445"*, %"class.util::IdType.445"** %68, align 8
  %360 = icmp eq %"class.util::IdType.445"* %359, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %357
  %362 = ptrtoint %"class.util::IdType.445"* %359 to i64
  %363 = bitcast %"class.util::IdType.445"** %69 to i64*
  store i64 %362, i64* %363, align 8
  %364 = bitcast %"class.util::IdType.445"* %359 to i8*
  call void @_ZdlPv(i8* %364) #17
  br label %365

365:                                              ; preds = %357, %361
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #16
  ret i1 %358
}

declare void @_ZN3viz23DisplayResourceProvider16ReceiveFromChildEiRKNSt3__16vectorINS_20TransferableResourceENS1_9allocatorIS3_EEEE(%"class.viz::DisplayResourceProvider"*, i32, %"class.std::__1::vector.443"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #2

declare void @_ZN3viz23DisplayResourceProvider29DeclareUsedResourcesFromChildEiRKN4base8internal9flat_treeIN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENSt3__14lessIvEENS9_6vectorIS7_NS9_9allocatorIS7_EEEEEE(%"class.viz::DisplayResourceProvider"*, i32, %"class.base::internal::flat_tree.599"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz17SurfaceAggregator22CheckFrameSinksChangedEPKNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.viz::LocalSurfaceId", align 8
  %4 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %2 ]
  %12 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16
  %13 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %14 = tail call dereferenceable(8) i64* @_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map.208"* %12, %"class.viz::SurfaceId"* dereferenceable(32) %13)
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18
  %16 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.base::flat_map.218", %"class.base::flat_map.218"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %17, align 8
  %19 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::pair.222"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint %"struct.std::__1::pair.222"* %18 to i64
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %21 to %"struct.std::__1::pair.222"*
  br i1 %24, label %54, label %26

26:                                               ; preds = %10
  %27 = ashr exact i64 %23, 5
  %28 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  br label %32

32:                                               ; preds = %50, %26
  %33 = phi %"struct.std::__1::pair.222"* [ %18, %26 ], [ %52, %50 ]
  %34 = phi i64 [ %27, %26 ], [ %51, %50 ]
  %35 = lshr i64 %34, 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %33, i64 %35
  %37 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %36, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %33, i64 %35, i32 0, i32 1
  %39 = load i32, i32* %37, align 4
  %40 = icmp ult i32 %39, %30
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = icmp ult i32 %30, %39
  br i1 %42, label %50, label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %38, align 4
  %45 = icmp ult i32 %44, %31
  br i1 %45, label %46, label %50

46:                                               ; preds = %43, %32
  %47 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %36, i64 1
  %48 = xor i64 %35, -1
  %49 = add i64 %34, %48
  br label %50

50:                                               ; preds = %46, %43, %41
  %51 = phi i64 [ %49, %46 ], [ %35, %43 ], [ %35, %41 ]
  %52 = phi %"struct.std::__1::pair.222"* [ %47, %46 ], [ %33, %43 ], [ %33, %41 ]
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %32

54:                                               ; preds = %50, %10
  %55 = phi %"struct.std::__1::pair.222"* [ %18, %10 ], [ %52, %50 ]
  %56 = icmp eq %"struct.std::__1::pair.222"* %55, %25
  br i1 %56, label %71, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 0, i32 0, i32 1
  %62 = load i32, i32* %58, align 4
  %63 = load i32, i32* %60, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %57
  %66 = icmp ult i32 %63, %62
  br i1 %66, label %75, label %67

67:                                               ; preds = %65
  %68 = load i32, i32* %59, align 4
  %69 = load i32, i32* %61, align 4
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %67, %57, %54
  %72 = bitcast %"class.viz::LocalSurfaceId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #16
  %73 = getelementptr inbounds %"class.base::flat_map.218", %"class.base::flat_map.218"* %15, i64 0, i32 0, i32 0
  %74 = call %"struct.std::__1::pair.222"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEENS_9allocatorIS5_EEE7emplaceIJRKS3_S4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.220"* %73, %"struct.std::__1::pair.222"* %55, %"class.viz::FrameSinkId"* dereferenceable(8) %16, %"class.viz::LocalSurfaceId"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #16
  br label %75

75:                                               ; preds = %65, %67, %71
  %76 = phi %"struct.std::__1::pair.222"* [ %74, %71 ], [ %55, %67 ], [ %55, %65 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %76, i64 0, i32 1
  %78 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %78, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %"struct.std::__1::pair.222"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint %"struct.std::__1::pair.222"* %79 to i64
  %84 = sub i64 %82, %83
  %85 = icmp eq i64 %84, 0
  %86 = inttoptr i64 %82 to %"struct.std::__1::pair.222"*
  br i1 %85, label %115, label %87

87:                                               ; preds = %75
  %88 = ashr exact i64 %84, 5
  %89 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %90, align 4
  br label %93

93:                                               ; preds = %111, %87
  %94 = phi %"struct.std::__1::pair.222"* [ %79, %87 ], [ %113, %111 ]
  %95 = phi i64 [ %88, %87 ], [ %112, %111 ]
  %96 = lshr i64 %95, 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %94, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %97, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %94, i64 %96, i32 0, i32 1
  %100 = load i32, i32* %98, align 4
  %101 = icmp ult i32 %100, %91
  br i1 %101, label %107, label %102

102:                                              ; preds = %93
  %103 = icmp ult i32 %91, %100
  br i1 %103, label %111, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %99, align 4
  %106 = icmp ult i32 %105, %92
  br i1 %106, label %107, label %111

107:                                              ; preds = %104, %93
  %108 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %97, i64 1
  %109 = xor i64 %96, -1
  %110 = add i64 %95, %109
  br label %111

111:                                              ; preds = %107, %104, %102
  %112 = phi i64 [ %110, %107 ], [ %96, %104 ], [ %96, %102 ]
  %113 = phi %"struct.std::__1::pair.222"* [ %108, %107 ], [ %94, %104 ], [ %94, %102 ]
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %115, label %93

115:                                              ; preds = %111, %75
  %116 = phi %"struct.std::__1::pair.222"* [ %79, %75 ], [ %113, %111 ]
  %117 = icmp eq %"struct.std::__1::pair.222"* %116, %86
  br i1 %117, label %132, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %116, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %116, i64 0, i32 0, i32 1
  %123 = load i32, i32* %119, align 4
  %124 = load i32, i32* %121, align 4
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %132, label %126

126:                                              ; preds = %118
  %127 = icmp ult i32 %124, %123
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = load i32, i32* %120, align 4
  %130 = load i32, i32* %122, align 4
  %131 = icmp ult i32 %129, %130
  br label %132

132:                                              ; preds = %115, %118, %126, %128
  %133 = phi i1 [ true, %115 ], [ %131, %128 ], [ true, %118 ], [ false, %126 ]
  %134 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %134, i64 0, i32 0
  %136 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %137 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %77, i64 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %76, i64 0, i32 1, i32 1
  %139 = load i32, i32* %135, align 4
  %140 = load i32, i32* %137, align 4
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %164, label %142

142:                                              ; preds = %132
  %143 = icmp ult i32 %140, %139
  br i1 %143, label %165, label %144

144:                                              ; preds = %142
  %145 = load i32, i32* %136, align 4
  %146 = load i32, i32* %138, align 4
  %147 = icmp ult i32 %145, %146
  br i1 %147, label %164, label %148

148:                                              ; preds = %144
  %149 = icmp ult i32 %146, %145
  br i1 %149, label %165, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %152 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %153 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %76, i64 0, i32 1, i32 2, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %76, i64 0, i32 1, i32 2, i32 0, i32 1
  %155 = load i64, i64* %151, align 8
  %156 = load i64, i64* %153, align 8
  %157 = icmp ult i64 %155, %156
  br i1 %157, label %164, label %158

158:                                              ; preds = %150
  %159 = icmp ult i64 %156, %155
  br i1 %159, label %165, label %160

160:                                              ; preds = %158
  %161 = load i64, i64* %152, align 8
  %162 = load i64, i64* %154, align 8
  %163 = icmp ult i64 %161, %162
  br i1 %163, label %164, label %165

164:                                              ; preds = %160, %150, %144, %132
  br label %165

165:                                              ; preds = %142, %148, %158, %160, %164
  %166 = phi %"class.viz::LocalSurfaceId"* [ %77, %164 ], [ %134, %160 ], [ %134, %142 ], [ %134, %148 ], [ %134, %158 ]
  %167 = bitcast %"class.viz::LocalSurfaceId"* %77 to i8*
  %168 = bitcast %"class.viz::LocalSurfaceId"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false)
  ret i1 %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map.208"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.base::flat_map.208", %"class.base::flat_map.208"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.208", %"class.base::flat_map.208"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.212"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.212"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.212"*
  br i1 %11, label %73, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 40
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"struct.std::__1::pair.212"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30, i32 0, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30, i32 0, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"struct.std::__1::pair.212"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69, %2
  %74 = phi %"struct.std::__1::pair.212"* [ %5, %2 ], [ %71, %69 ]
  %75 = icmp eq %"struct.std::__1::pair.212"* %74, %12
  br i1 %75, label %122, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %77, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %122, label %84

84:                                               ; preds = %76
  %85 = icmp ult i32 %82, %81
  br i1 %85, label %126, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %78, align 4
  %88 = load i32, i32* %80, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %122, label %90

90:                                               ; preds = %86
  %91 = icmp ult i32 %88, %87
  br i1 %91, label %126, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 1, i32 1
  %97 = load i32, i32* %93, align 4
  %98 = load i32, i32* %95, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %92
  %101 = icmp ult i32 %98, %97
  br i1 %101, label %126, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %96, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp ult i32 %104, %103
  br i1 %107, label %126, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %113 = load i64, i64* %109, align 8
  %114 = load i64, i64* %111, align 8
  %115 = icmp ult i64 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %108
  %117 = icmp ult i64 %114, %113
  br i1 %117, label %126, label %118

118:                                              ; preds = %116
  %119 = load i64, i64* %110, align 8
  %120 = load i64, i64* %112, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %126

122:                                              ; preds = %76, %92, %102, %108, %86, %73, %118
  %123 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #16
  store i64 0, i64* %3, align 8
  %124 = getelementptr inbounds %"class.base::flat_map.208", %"class.base::flat_map.208"* %0, i64 0, i32 0, i32 0
  %125 = call %"struct.std::__1::pair.212"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.210"* %124, %"struct.std::__1::pair.212"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1, i64* nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #16
  br label %126

126:                                              ; preds = %84, %100, %106, %116, %90, %122, %118
  %127 = phi %"struct.std::__1::pair.212"* [ %125, %122 ], [ %74, %118 ], [ %74, %90 ], [ %74, %116 ], [ %74, %106 ], [ %74, %100 ], [ %74, %84 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %127, i64 0, i32 1
  ret i64* %128
}

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #1

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #1

declare void @_ZN3viz7Surface22NotifyAggregatedDamageERKN3gfx4RectEN4base9TimeTicksE(%"class.viz::Surface"*, %"class.gfx::Rect"* dereferenceable(16), i64) local_unnamed_addr #1

declare void @_ZN3viz7Surface32TakeCopyOutputRequestsFromClientEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3viz7Surface26IsVideoCaptureOnFromClientEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare void @_ZN3viz7Surface13OnWillBeDrawnEv(%"class.viz::Surface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.317"* @_ZN4base8flat_mapIN3viz11FrameSinkIdENSt3__16vectorINS1_12SurfaceRangeENS3_9allocatorIS5_EEEENS3_4lessIvEENS4_INS3_4pairIS2_S8_EENS6_ISC_EEEEEixERKS2_(%"class.base::flat_map.312"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.317", align 8
  %4 = getelementptr inbounds %"class.base::flat_map.312", %"class.base::flat_map.312"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.312", %"class.base::flat_map.312"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.316"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.316"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.316"*
  br i1 %11, label %41, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 5
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  br label %19

19:                                               ; preds = %37, %13
  %20 = phi %"struct.std::__1::pair.316"* [ %5, %13 ], [ %39, %37 ]
  %21 = phi i64 [ %14, %13 ], [ %38, %37 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %20, i64 %22, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = icmp ult i32 %26, %17
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = icmp ult i32 %17, %26
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %25, align 4
  %32 = icmp ult i32 %31, %18
  br i1 %32, label %33, label %37

33:                                               ; preds = %30, %19
  %34 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %23, i64 1
  %35 = xor i64 %22, -1
  %36 = add i64 %21, %35
  br label %37

37:                                               ; preds = %33, %30, %28
  %38 = phi i64 [ %36, %33 ], [ %22, %30 ], [ %22, %28 ]
  %39 = phi %"struct.std::__1::pair.316"* [ %34, %33 ], [ %20, %30 ], [ %20, %28 ]
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %19

41:                                               ; preds = %37, %2
  %42 = phi %"struct.std::__1::pair.316"* [ %5, %2 ], [ %39, %37 ]
  %43 = icmp eq %"struct.std::__1::pair.316"* %42, %12
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %46 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %42, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %42, i64 0, i32 0, i32 1
  %49 = load i32, i32* %45, align 4
  %50 = load i32, i32* %47, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %44
  %53 = icmp ult i32 %50, %49
  br i1 %53, label %71, label %54

54:                                               ; preds = %52
  %55 = load i32, i32* %46, align 4
  %56 = load i32, i32* %48, align 4
  %57 = icmp ult i32 %55, %56
  br i1 %57, label %58, label %71

58:                                               ; preds = %44, %41, %54
  %59 = bitcast %"class.std::__1::vector.317"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #16
  %60 = getelementptr inbounds %"class.base::flat_map.312", %"class.base::flat_map.312"* %0, i64 0, i32 0, i32 0
  %61 = call %"struct.std::__1::pair.316"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_INS2_12SurfaceRangeENS_9allocatorIS4_EEEEEENS5_IS8_EEE7emplaceIJRKS3_S7_EEENS_11__wrap_iterIPS8_EENSE_IPKS8_EEDpOT_(%"class.std::__1::vector.314"* %60, %"struct.std::__1::pair.316"* %42, %"class.viz::FrameSinkId"* dereferenceable(8) %1, %"class.std::__1::vector.317"* nonnull dereferenceable(24) %3) #16
  %62 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %62, align 8
  %64 = icmp eq %"class.viz::SurfaceRange"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = ptrtoint %"class.viz::SurfaceRange"* %63 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %3, i64 0, i32 0, i32 1
  %68 = bitcast %"class.viz::SurfaceRange"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %69) #17
  br label %70

70:                                               ; preds = %58, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #16
  br label %71

71:                                               ; preds = %52, %70, %54
  %72 = phi %"struct.std::__1::pair.316"* [ %61, %70 ], [ %42, %54 ], [ %42, %52 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %72, i64 0, i32 1
  ret %"class.std::__1::vector.317"* %73
}

declare zeroext i1 @_ZNK3viz12SurfaceRange24HasDifferentFrameSinkIdsEv(%"class.viz::SurfaceRange"*) local_unnamed_addr #1

declare %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator19CopyUndrawnSurfacesEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"*, %"struct.viz::SurfaceAggregator::PrewalkResult"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.29", align 8
  %4 = alloca %"class.viz::SurfaceId", align 8
  %5 = bitcast %"class.std::__1::vector.29"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %9, align 8
  %11 = ptrtoint %"class.viz::SurfaceId"* %10 to i64
  %12 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #16
  %14 = ptrtoint %"class.viz::SurfaceId"* %13 to i64
  %15 = sub i64 %14, %11
  %16 = ashr exact i64 %15, 5
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %134, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 576460752303423487
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.29"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #18
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #17
  %24 = bitcast i8* %23 to %"class.viz::SurfaceId"*
  %25 = bitcast %"class.viz::SurfaceId"** %6 to i8**
  store i8* %23, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %24, i64 %16
  store %"class.viz::SurfaceId"* %27, %"class.viz::SurfaceId"** %7, align 8
  %28 = bitcast %"class.viz::SurfaceId"** %6 to i64*
  %29 = icmp eq %"class.viz::SurfaceId"* %10, %13
  br i1 %29, label %63, label %30

30:                                               ; preds = %22
  %31 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %13, i64 -1, i32 0, i32 0
  %32 = ptrtoint i32* %31 to i64
  %33 = sub i64 %32, %11
  %34 = and i64 %33, 32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %58

36:                                               ; preds = %30
  %37 = bitcast i8* %23 to i32*
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds i8, i8* %23, i64 4
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds i8, i8* %23, i64 8
  %45 = bitcast i8* %44 to i32*
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %45, align 8
  %48 = getelementptr inbounds i8, i8* %23, i64 12
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds i8, i8* %23, i64 16
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 0, i32 1, i32 2
  %54 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %54, i64 16, i1 false) #16
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %10, i64 1
  %56 = getelementptr inbounds i8, i8* %23, i64 32
  %57 = bitcast i8* %56 to %"class.viz::SurfaceId"*
  br label %58

58:                                               ; preds = %36, %30
  %59 = phi %"class.viz::SurfaceId"* [ undef, %30 ], [ %57, %36 ]
  %60 = phi %"class.viz::SurfaceId"* [ %24, %30 ], [ %57, %36 ]
  %61 = phi %"class.viz::SurfaceId"* [ %10, %30 ], [ %55, %36 ]
  %62 = icmp ult i64 %33, 32
  br i1 %62, label %104, label %66

63:                                               ; preds = %22
  %64 = ptrtoint i8* %23 to i64
  store i64 %64, i64* %28, align 8
  %65 = bitcast i8* %23 to %"class.viz::SurfaceId"*
  br label %130

66:                                               ; preds = %58, %66
  %67 = phi %"class.viz::SurfaceId"* [ %102, %66 ], [ %60, %58 ]
  %68 = phi %"class.viz::SurfaceId"* [ %101, %66 ], [ %61, %58 ]
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %75, align 8
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 0, i32 1, i32 1
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 0, i32 1, i32 2
  %83 = bitcast %"class.base::UnguessableToken"* %81 to i8*
  %84 = bitcast %"class.base::UnguessableToken"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 16, i1 false) #16
  %85 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 1, i32 0, i32 0
  %86 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 1, i32 0, i32 1
  %89 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 1, i32 1, i32 0
  %92 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 0
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %91, align 8
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 1, i32 1, i32 1
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 1
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 1, i32 1, i32 2
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 1, i32 1, i32 2
  %99 = bitcast %"class.base::UnguessableToken"* %97 to i8*
  %100 = bitcast %"class.base::UnguessableToken"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #16
  %101 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %68, i64 2
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %67, i64 2
  %103 = icmp eq %"class.viz::SurfaceId"* %101, %13
  br i1 %103, label %104, label %66

104:                                              ; preds = %66, %58
  %105 = phi %"class.viz::SurfaceId"* [ %59, %58 ], [ %102, %66 ]
  %106 = ptrtoint %"class.viz::SurfaceId"* %105 to i64
  %107 = bitcast %"class.std::__1::vector.29"* %3 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %106, i64* %28, align 8
  %109 = inttoptr i64 %108 to %"class.viz::SurfaceId"*
  %110 = icmp eq i64 %108, %106
  br i1 %110, label %127, label %111

111:                                              ; preds = %104
  %112 = bitcast %"class.viz::SurfaceId"* %4 to i8*
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %4, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %4, i64 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %4, i64 0, i32 1, i32 0
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %4, i64 0, i32 1, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %4, i64 0, i32 1, i32 2
  %118 = bitcast %"class.base::UnguessableToken"* %117 to i8*
  %119 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  %120 = bitcast %"class.viz::SurfaceId"** %12 to i64*
  %121 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11
  %122 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %123 = bitcast %"class.viz::SurfaceId"** %122 to i64*
  %124 = bitcast %"class.viz::SurfaceId"* %4 to i8*
  br label %135

125:                                              ; preds = %232
  %126 = inttoptr i64 %235 to %"class.viz::SurfaceId"*
  br label %127

127:                                              ; preds = %125, %104
  %128 = phi %"class.viz::SurfaceId"* [ %109, %104 ], [ %126, %125 ]
  %129 = icmp eq %"class.viz::SurfaceId"* %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %63, %127
  %131 = phi %"class.viz::SurfaceId"* [ %65, %63 ], [ %128, %127 ]
  %132 = ptrtoint %"class.viz::SurfaceId"* %131 to i64
  store i64 %132, i64* %28, align 8
  %133 = bitcast %"class.viz::SurfaceId"* %131 to i8*
  call void @_ZdlPv(i8* %133) #17
  br label %134

134:                                              ; preds = %2, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void

135:                                              ; preds = %111, %232
  %136 = phi %"class.viz::SurfaceId"* [ %109, %111 ], [ %239, %232 ]
  %137 = phi i64 [ 0, %111 ], [ %233, %232 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #16
  %138 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %136, i64 %137, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 32, i1 false)
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %113, align 8
  %140 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %136, i64 %137, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %114, align 4
  %142 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %136, i64 %137, i32 1, i32 0
  %143 = load i32, i32* %142, align 8
  store i32 %143, i32* %115, align 8
  %144 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %136, i64 %137, i32 1, i32 1
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %116, align 4
  %146 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %136, i64 %137, i32 1, i32 2
  %147 = bitcast %"class.base::UnguessableToken"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %147, i64 16, i1 false) #16
  %148 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %119, align 8
  %149 = call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %148, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %4) #16
  %150 = icmp eq %"class.viz::Surface"* %149, null
  br i1 %150, label %232, label %151

151:                                              ; preds = %135
  %152 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %149, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %153 = load i8, i8* %152, align 8, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %232, label %155

155:                                              ; preds = %151
  %156 = call zeroext i1 @_ZNK3viz7Surface21HasCopyOutputRequestsEv(%"class.viz::Surface"* nonnull %149) #16
  br i1 %156, label %198, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %149, i64 0, i32 10, i32 0, i32 0, i32 0
  %159 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %158, align 8
  %160 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %149, i64 0, i32 10, i32 0, i32 0, i32 1
  %161 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %160, align 8
  %162 = icmp eq %"class.viz::SurfaceId"* %159, %161
  br i1 %162, label %232, label %163

163:                                              ; preds = %157, %195
  %164 = phi %"class.viz::SurfaceId"* [ %196, %195 ], [ %159, %157 ]
  %165 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %8, %"class.viz::SurfaceId"* dereferenceable(32) %164) #16
  %166 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %165, 0
  %167 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %165, 1
  %168 = icmp eq %"class.viz::SurfaceId"* %167, %166
  br i1 %168, label %169, label %195

169:                                              ; preds = %163
  %170 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %6, align 8
  %171 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %7, align 8
  %172 = icmp eq %"class.viz::SurfaceId"* %170, %171
  br i1 %172, label %192, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  store i32 %176, i32* %174, align 4
  %177 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 0, i32 0, i32 1
  %178 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %177, align 4
  %180 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 0, i32 1, i32 0
  %181 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 0
  %182 = load i32, i32* %181, align 8
  store i32 %182, i32* %180, align 8
  %183 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 0, i32 1, i32 1
  %184 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 1
  %185 = load i32, i32* %184, align 4
  store i32 %185, i32* %183, align 4
  %186 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 0, i32 1, i32 2
  %187 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 0, i32 1, i32 2
  %188 = bitcast %"class.base::UnguessableToken"* %186 to i8*
  %189 = bitcast %"class.base::UnguessableToken"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 16, i1 false) #16
  %190 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %170, i64 1
  %191 = ptrtoint %"class.viz::SurfaceId"* %190 to i64
  store i64 %191, i64* %28, align 8
  br label %193

192:                                              ; preds = %169
  call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.29"* nonnull %3, %"class.viz::SurfaceId"* dereferenceable(32) %164) #16
  br label %193

193:                                              ; preds = %173, %192
  %194 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %8, %"class.viz::SurfaceId"* dereferenceable(32) %164, %"class.viz::SurfaceId"* dereferenceable(32) %164) #16
  br label %195

195:                                              ; preds = %163, %193
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %164, i64 1
  %197 = icmp eq %"class.viz::SurfaceId"* %196, %161
  br i1 %197, label %232, label %163

198:                                              ; preds = %155
  %199 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %8, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %4) #16
  %200 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %199, 0
  %201 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %199, 1
  %202 = icmp eq %"class.viz::SurfaceId"* %200, %201
  br i1 %202, label %214, label %203

203:                                              ; preds = %198
  %204 = ptrtoint %"class.viz::SurfaceId"* %201 to i64
  %205 = load i64, i64* %120, align 8
  %206 = sub i64 %205, %204
  %207 = ashr exact i64 %206, 5
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %203
  %210 = bitcast %"class.viz::SurfaceId"* %200 to i8*
  %211 = bitcast %"class.viz::SurfaceId"* %201 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 %206, i1 false) #16
  br label %212

212:                                              ; preds = %209, %203
  %213 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %200, i64 %207
  store %"class.viz::SurfaceId"* %213, %"class.viz::SurfaceId"** %12, align 8
  br label %214

214:                                              ; preds = %198, %212
  %215 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %121, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %4, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %4) #16
  %216 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* nonnull %149) #16
  call void @_ZN3viz17SurfaceAggregator10CopyPassesERKNS_15CompositorFrameEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::CompositorFrame"* dereferenceable(296) %216, %"class.viz::Surface"* nonnull %149)
  %217 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %121, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %4) #16
  %218 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %217, 0
  %219 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %217, 1
  %220 = icmp eq %"class.viz::SurfaceId"* %218, %219
  br i1 %220, label %232, label %221

221:                                              ; preds = %214
  %222 = ptrtoint %"class.viz::SurfaceId"* %219 to i64
  %223 = load i64, i64* %123, align 8
  %224 = sub i64 %223, %222
  %225 = ashr exact i64 %224, 5
  %226 = icmp eq i64 %224, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %221
  %228 = bitcast %"class.viz::SurfaceId"* %218 to i8*
  %229 = bitcast %"class.viz::SurfaceId"* %219 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %229, i64 %224, i1 false) #16
  br label %230

230:                                              ; preds = %227, %221
  %231 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %218, i64 %225
  store %"class.viz::SurfaceId"* %231, %"class.viz::SurfaceId"** %122, align 8
  br label %232

232:                                              ; preds = %195, %157, %151, %230, %214, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #16
  %233 = add nuw i64 %137, 1
  %234 = load i64, i64* %28, align 8
  %235 = load i64, i64* %107, align 8
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 5
  %238 = icmp ult i64 %233, %237
  %239 = inttoptr i64 %235 to %"class.viz::SurfaceId"*
  br i1 %238, label %135, label %125
}

declare zeroext i1 @_ZNK3viz7Surface21HasCopyOutputRequestsEv(%"class.viz::Surface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator26PropagateCopyRequestPassesEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.295", align 8
  %3 = alloca %"class.util::IdType", align 8
  %4 = bitcast %"class.std::__1::vector.295"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.util::IdType"*, %"class.util::IdType"** %9, align 8
  %11 = bitcast %"class.util::IdType"* %10 to i8*
  %12 = ptrtoint %"class.util::IdType"* %10 to i64
  %13 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %14 = load %"class.util::IdType"*, %"class.util::IdType"** %13, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #16
  %15 = ptrtoint %"class.util::IdType"* %14 to i64
  %16 = sub i64 %15, %12
  %17 = ashr exact i64 %16, 3
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %366, label %19

19:                                               ; preds = %1
  %20 = icmp ugt i64 %17, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.295"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #18
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #17
  %25 = bitcast i8* %24 to %"class.util::IdType"*
  %26 = bitcast %"class.util::IdType"** %6 to i8**
  store i8* %24, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector.295"* %2 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %17
  store %"class.util::IdType"* %28, %"class.util::IdType"** %7, align 8
  %29 = bitcast %"class.util::IdType"** %6 to i64*
  %30 = ptrtoint i8* %24 to i64
  %31 = icmp eq %"class.util::IdType"* %10, %14
  br i1 %31, label %194, label %32

32:                                               ; preds = %23
  %33 = getelementptr %"class.util::IdType", %"class.util::IdType"* %14, i64 -1, i32 0, i32 0
  %34 = ptrtoint i64* %33 to i64
  %35 = sub i64 %34, %12
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %32
  %40 = getelementptr %"class.util::IdType", %"class.util::IdType"* %14, i64 -1, i32 0, i32 0
  %41 = ptrtoint i64* %40 to i64
  %42 = sub i64 %41, %12
  %43 = lshr i64 %42, 3
  %44 = add i64 %42, 8
  %45 = and i64 %44, -8
  %46 = getelementptr i8, i8* %24, i64 %45
  %47 = add nuw nsw i64 %43, 1
  %48 = getelementptr %"class.util::IdType", %"class.util::IdType"* %10, i64 %47
  %49 = bitcast %"class.util::IdType"* %48 to i8*
  %50 = icmp ult i8* %24, %49
  %51 = icmp ugt i8* %46, %11
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.util::IdType", %"class.util::IdType"* %25, i64 %54
  %56 = getelementptr %"class.util::IdType", %"class.util::IdType"* %10, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 %65, i32 0, i32 0
  %68 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %65, i32 0, i32 0
  %69 = bitcast i64* %67 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !89
  %71 = getelementptr i64, i64* %67, i64 2
  %72 = bitcast i64* %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !89
  %74 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !92, !noalias !89
  %75 = getelementptr i64, i64* %68, i64 2
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !92, !noalias !89
  %77 = or i64 %65, 4
  %78 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 %77, i32 0, i32 0
  %79 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %77, i32 0, i32 0
  %80 = bitcast i64* %78 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !89
  %82 = getelementptr i64, i64* %78, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !89
  %85 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !92, !noalias !89
  %86 = getelementptr i64, i64* %79, i64 2
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !92, !noalias !89
  %88 = or i64 %65, 8
  %89 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 %88, i32 0, i32 0
  %90 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %88, i32 0, i32 0
  %91 = bitcast i64* %89 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !89
  %93 = getelementptr i64, i64* %89, i64 2
  %94 = bitcast i64* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !89
  %96 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !92, !noalias !89
  %97 = getelementptr i64, i64* %90, i64 2
  %98 = bitcast i64* %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !92, !noalias !89
  %99 = or i64 %65, 12
  %100 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 %99, i32 0, i32 0
  %101 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %99, i32 0, i32 0
  %102 = bitcast i64* %100 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !89
  %104 = getelementptr i64, i64* %100, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !89
  %107 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !92, !noalias !89
  %108 = getelementptr i64, i64* %101, i64 2
  %109 = bitcast i64* %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !92, !noalias !89
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !94

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %10, i64 %117, i32 0, i32 0
  %120 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %25, i64 %117, i32 0, i32 0
  %121 = bitcast i64* %119 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !89
  %123 = getelementptr i64, i64* %119, i64 2
  %124 = bitcast i64* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !89
  %126 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !92, !noalias !89
  %127 = getelementptr i64, i64* %120, i64 2
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !92, !noalias !89
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !96

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %191, label %134

134:                                              ; preds = %132, %39, %32
  %135 = phi %"class.util::IdType"* [ %25, %39 ], [ %25, %32 ], [ %55, %132 ]
  %136 = phi %"class.util::IdType"* [ %10, %39 ], [ %10, %32 ], [ %56, %132 ]
  %137 = ptrtoint %"class.util::IdType"* %136 to i64
  %138 = getelementptr %"class.util::IdType", %"class.util::IdType"* %14, i64 -1, i32 0, i32 0
  %139 = ptrtoint i64* %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.util::IdType"* [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.util::IdType"* [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %147, i64 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %146, i64 0, i32 0, i32 0
  %151 = load i64, i64* %149, align 8
  store i64 %151, i64* %150, align 8
  %152 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %147, i64 1
  %153 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !98

156:                                              ; preds = %145, %134
  %157 = phi %"class.util::IdType"* [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.util::IdType"* [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.util::IdType"* [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.util::IdType"* [ %189, %161 ], [ %158, %156 ]
  %163 = phi %"class.util::IdType"* [ %188, %161 ], [ %159, %156 ]
  %164 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 0, i32 0, i32 0
  %166 = load i64, i64* %164, align 8
  store i64 %166, i64* %165, align 8
  %167 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 1, i32 0, i32 0
  %168 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 1, i32 0, i32 0
  %169 = load i64, i64* %167, align 8
  store i64 %169, i64* %168, align 8
  %170 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 2, i32 0, i32 0
  %171 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 2, i32 0, i32 0
  %172 = load i64, i64* %170, align 8
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 3, i32 0, i32 0
  %174 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 3, i32 0, i32 0
  %175 = load i64, i64* %173, align 8
  store i64 %175, i64* %174, align 8
  %176 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 4, i32 0, i32 0
  %177 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 4, i32 0, i32 0
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 5, i32 0, i32 0
  %180 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 5, i32 0, i32 0
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 6, i32 0, i32 0
  %183 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 6, i32 0, i32 0
  %184 = load i64, i64* %182, align 8
  store i64 %184, i64* %183, align 8
  %185 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 7, i32 0, i32 0
  %186 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 7, i32 0, i32 0
  %187 = load i64, i64* %185, align 8
  store i64 %187, i64* %186, align 8
  %188 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %163, i64 8
  %189 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %162, i64 8
  %190 = icmp eq %"class.util::IdType"* %188, %14
  br i1 %190, label %191, label %161, !llvm.loop !99

191:                                              ; preds = %156, %161, %132
  %192 = phi %"class.util::IdType"* [ %55, %132 ], [ %157, %156 ], [ %189, %161 ]
  %193 = ptrtoint %"class.util::IdType"* %192 to i64
  br label %194

194:                                              ; preds = %23, %191
  %195 = phi i64 [ %30, %23 ], [ %193, %191 ]
  store i64 %195, i64* %29, align 8
  %196 = inttoptr i64 %195 to %"class.util::IdType"*
  %197 = icmp eq %"class.util::IdType"* %25, %196
  br i1 %197, label %359, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %201 = bitcast %"struct.std::__1::pair.306"** %200 to i64*
  %202 = bitcast %"class.util::IdType"* %3 to i8*
  %203 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %3, i64 0, i32 0, i32 0
  %204 = bitcast %"class.util::IdType"** %13 to i64*
  %205 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %8, i64 0, i32 0
  %206 = bitcast %"class.util::IdType"** %6 to i64*
  %207 = bitcast %"class.std::__1::vector.295"* %2 to i64*
  %208 = bitcast %"class.util::IdType"** %7 to i64*
  br label %209

209:                                              ; preds = %198, %355
  %210 = phi %"class.util::IdType"* [ %196, %198 ], [ %356, %355 ]
  %211 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %210, i64 -1
  %212 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %211, i64 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  store %"class.util::IdType"* %211, %"class.util::IdType"** %6, align 8
  %214 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %199, align 8
  %215 = load i64, i64* %201, align 8
  %216 = ptrtoint %"struct.std::__1::pair.306"* %214 to i64
  %217 = sub i64 %215, %216
  %218 = icmp eq i64 %217, 0
  %219 = inttoptr i64 %215 to %"struct.std::__1::pair.306"*
  br i1 %218, label %238, label %220

220:                                              ; preds = %209
  %221 = ashr exact i64 %217, 5
  br label %222

222:                                              ; preds = %222, %220
  %223 = phi %"struct.std::__1::pair.306"* [ %214, %220 ], [ %234, %222 ]
  %224 = phi i64 [ %221, %220 ], [ %233, %222 ]
  %225 = lshr i64 %224, 1
  %226 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %223, i64 %225
  %227 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %226, i64 0, i32 0, i32 0, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = icmp ult i64 %228, %213
  %230 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %226, i64 1
  %231 = xor i64 %225, -1
  %232 = add i64 %224, %231
  %233 = select i1 %229, i64 %232, i64 %225
  %234 = select i1 %229, %"struct.std::__1::pair.306"* %230, %"struct.std::__1::pair.306"* %223
  %235 = icmp eq i64 %233, 0
  br i1 %235, label %236, label %222

236:                                              ; preds = %222
  %237 = ptrtoint %"struct.std::__1::pair.306"* %234 to i64
  br label %238

238:                                              ; preds = %236, %209
  %239 = phi i64 [ %237, %236 ], [ %216, %209 ]
  %240 = phi %"struct.std::__1::pair.306"* [ %234, %236 ], [ %214, %209 ]
  %241 = icmp eq %"struct.std::__1::pair.306"* %240, %219
  br i1 %241, label %249, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %240, i64 0, i32 0, i32 0, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = icmp ult i64 %213, %244
  br i1 %245, label %249, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %240, i64 1
  %248 = ptrtoint %"struct.std::__1::pair.306"* %247 to i64
  br label %249

249:                                              ; preds = %238, %242, %246
  %250 = phi i64 [ %248, %246 ], [ %239, %238 ], [ %239, %242 ]
  %251 = inttoptr i64 %250 to %"struct.std::__1::pair.306"*
  %252 = icmp eq %"struct.std::__1::pair.306"* %240, %251
  %253 = select i1 %252, %"struct.std::__1::pair.306"* %219, %"struct.std::__1::pair.306"* %240
  %254 = icmp eq %"struct.std::__1::pair.306"* %253, %219
  br i1 %254, label %355, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %253, i64 0, i32 1, i32 0, i32 0, i32 0
  %257 = load %"class.util::IdType"*, %"class.util::IdType"** %256, align 8
  %258 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %253, i64 0, i32 1, i32 0, i32 0, i32 1
  %259 = load %"class.util::IdType"*, %"class.util::IdType"** %258, align 8
  %260 = icmp eq %"class.util::IdType"* %257, %259
  br i1 %260, label %355, label %261

261:                                              ; preds = %255, %350
  %262 = phi %"class.util::IdType"* [ %351, %350 ], [ %257, %255 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #16
  store i64 -6148914691236517206, i64* %203, align 8
  %263 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %262, i64 0, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %203, align 8
  %265 = load %"class.util::IdType"*, %"class.util::IdType"** %9, align 8
  %266 = load i64, i64* %204, align 8
  %267 = ptrtoint %"class.util::IdType"* %265 to i64
  %268 = sub i64 %266, %267
  %269 = icmp eq i64 %268, 0
  %270 = inttoptr i64 %266 to %"class.util::IdType"*
  br i1 %269, label %287, label %271

271:                                              ; preds = %261
  %272 = ashr exact i64 %268, 3
  br label %273

273:                                              ; preds = %273, %271
  %274 = phi %"class.util::IdType"* [ %265, %271 ], [ %285, %273 ]
  %275 = phi i64 [ %272, %271 ], [ %284, %273 ]
  %276 = lshr i64 %275, 1
  %277 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %274, i64 %276
  %278 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 0, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = icmp ult i64 %279, %264
  %281 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 1
  %282 = xor i64 %276, -1
  %283 = add i64 %275, %282
  %284 = select i1 %280, i64 %283, i64 %276
  %285 = select i1 %280, %"class.util::IdType"* %281, %"class.util::IdType"* %274
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %287, label %273

287:                                              ; preds = %273, %261
  %288 = phi %"class.util::IdType"* [ %265, %261 ], [ %285, %273 ]
  %289 = icmp eq %"class.util::IdType"* %288, %270
  br i1 %289, label %294, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %288, i64 0, i32 0, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = icmp ult i64 %264, %292
  br i1 %293, label %294, label %350

294:                                              ; preds = %290, %287
  %295 = call %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"* %205, %"class.util::IdType"* %288, %"class.util::IdType"* nonnull dereferenceable(8) %3) #16
  %296 = load %"class.util::IdType"*, %"class.util::IdType"** %6, align 8
  %297 = load %"class.util::IdType"*, %"class.util::IdType"** %7, align 8
  %298 = icmp eq %"class.util::IdType"* %296, %297
  %299 = ptrtoint %"class.util::IdType"* %297 to i64
  br i1 %298, label %305, label %300

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %296, i64 0, i32 0, i32 0
  %302 = load i64, i64* %203, align 8
  store i64 %302, i64* %301, align 8
  %303 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %296, i64 1
  %304 = ptrtoint %"class.util::IdType"* %303 to i64
  store i64 %304, i64* %206, align 8
  br label %350

305:                                              ; preds = %294
  %306 = ptrtoint %"class.util::IdType"* %296 to i64
  %307 = load i64, i64* %207, align 8
  %308 = sub i64 %306, %307
  %309 = ashr exact i64 %308, 3
  %310 = add nsw i64 %309, 1
  %311 = icmp ugt i64 %310, 2305843009213693951
  br i1 %311, label %312, label %314

312:                                              ; preds = %305
  %313 = bitcast %"class.std::__1::vector.295"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %313) #18
  unreachable

314:                                              ; preds = %305
  %315 = sub i64 %299, %307
  %316 = ashr exact i64 %315, 3
  %317 = icmp ult i64 %316, 1152921504606846975
  br i1 %317, label %318, label %326

318:                                              ; preds = %314
  %319 = ashr exact i64 %315, 2
  %320 = icmp ult i64 %319, %310
  %321 = select i1 %320, i64 %310, i64 %319
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %331, label %323

323:                                              ; preds = %318
  %324 = icmp ugt i64 %321, 2305843009213693951
  br i1 %324, label %325, label %326

325:                                              ; preds = %323
  call void @abort() #18
  unreachable

326:                                              ; preds = %323, %314
  %327 = phi i64 [ %321, %323 ], [ 2305843009213693951, %314 ]
  %328 = shl i64 %327, 3
  %329 = call i8* @_Znwm(i64 %328) #17
  %330 = bitcast i8* %329 to %"class.util::IdType"*
  br label %331

331:                                              ; preds = %326, %318
  %332 = phi i64 [ %327, %326 ], [ 0, %318 ]
  %333 = phi i8* [ %329, %326 ], [ null, %318 ]
  %334 = phi %"class.util::IdType"* [ %330, %326 ], [ null, %318 ]
  %335 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %334, i64 %309
  %336 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %334, i64 %332
  %337 = ptrtoint %"class.util::IdType"* %336 to i64
  %338 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %335, i64 0, i32 0, i32 0
  %339 = load i64, i64* %203, align 8
  store i64 %339, i64* %338, align 8
  %340 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %335, i64 1
  %341 = ptrtoint %"class.util::IdType"* %340 to i64
  %342 = ptrtoint %"class.util::IdType"* %334 to i64
  %343 = icmp sgt i64 %308, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %331
  %345 = inttoptr i64 %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* align 8 %345, i64 %308, i1 false) #16
  br label %346

346:                                              ; preds = %344, %331
  store i64 %342, i64* %207, align 8
  store i64 %341, i64* %206, align 8
  store i64 %337, i64* %208, align 8
  %347 = icmp eq i64 %307, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %346
  %349 = inttoptr i64 %307 to i8*
  call void @_ZdlPv(i8* %349) #17
  br label %350

350:                                              ; preds = %290, %348, %346, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #16
  %351 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %262, i64 1
  %352 = icmp eq %"class.util::IdType"* %351, %259
  br i1 %352, label %353, label %261

353:                                              ; preds = %350
  %354 = load %"class.util::IdType"*, %"class.util::IdType"** %6, align 8
  br label %355

355:                                              ; preds = %353, %255, %249
  %356 = phi %"class.util::IdType"* [ %354, %353 ], [ %211, %255 ], [ %211, %249 ]
  %357 = load %"class.util::IdType"*, %"class.util::IdType"** %5, align 8
  %358 = icmp eq %"class.util::IdType"* %357, %356
  br i1 %358, label %359, label %209

359:                                              ; preds = %355, %194
  %360 = phi %"class.util::IdType"* [ %196, %194 ], [ %356, %355 ]
  %361 = icmp eq %"class.util::IdType"* %360, null
  br i1 %361, label %366, label %362

362:                                              ; preds = %359
  %363 = ptrtoint %"class.util::IdType"* %360 to i64
  %364 = bitcast %"class.util::IdType"** %6 to i64*
  store i64 %363, i64* %364, align 8
  %365 = bitcast %"class.util::IdType"* %360 to i8*
  call void @_ZdlPv(i8* %365) #17
  br label %366

366:                                              ; preds = %1, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectEl(%"class.viz::AggregatedFrame"* noalias sret, %"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32), i64, i32, %"class.gfx::Rect"* dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.viz::AggregatedFrame", align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::SizeF", align 4
  %11 = alloca %"class.base::ElapsedTimer", align 8
  %12 = alloca %"struct.viz::SurfaceAggregator::PrewalkResult", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"class.gfx::Rect"*
  %15 = alloca %"class.gfx::Rect", align 4
  %16 = alloca %"class.gfx::Rect", align 4
  %17 = alloca %"class.base::ElapsedTimer", align 8
  %18 = alloca %"struct.std::__1::pair.212", align 16
  %19 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 12
  %20 = bitcast %"class.viz::SurfaceId"* %19 to i8*
  %21 = bitcast %"class.viz::SurfaceId"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false)
  %22 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 0
  %23 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %22, align 8
  %24 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %23, %"class.viz::SurfaceId"* dereferenceable(32) %2) #16
  %25 = tail call zeroext i1 @_ZN3viz17SurfaceAggregator22CheckFrameSinksChangedEPKNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %1, %"class.viz::Surface"* %24)
  %26 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %24, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %7
  tail call void @_ZN3viz15AggregatedFrameC1Ev(%"class.viz::AggregatedFrame"* %0) #16
  br label %559

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast i32* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 40, i1 false) #16
  store i8 1, i8* %31, align 8
  %34 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 34
  store i64 %6, i64* %34, align 8
  %35 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 21, i32 0, i32 0
  store i64 %3, i64* %35, align 8
  %36 = tail call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* %24) #16
  %37 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectElE29trace_event_unique_atomic1817 monotonic, align 8
  %38 = inttoptr i64 %37 to i8*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %43, !prof !28

40:                                               ; preds = %30
  %41 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #16
  %42 = ptrtoint i8* %41 to i64
  store atomic volatile i64 %42, i64* @_ZZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectElE29trace_event_unique_atomic1817 monotonic, align 8
  br label %43

43:                                               ; preds = %40, %30
  %44 = phi i8* [ %41, %40 ], [ %38, %30 ]
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 25
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48, !prof !27

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %36, i64 0, i32 0, i32 12, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRA19_KcRlEEN4base11trace_event16TraceEventHandleEcPKhPS1_SA_yjySA_OT_SA_OT0_(i8 signext 88, i8* %44, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 4480, i64 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), [19 x i8]* nonnull dereferenceable(19) @.str.3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64* dereferenceable(8) %34)
  br label %52

52:                                               ; preds = %43, %48
  %53 = phi i8* [ null, %43 ], [ %44, %48 ]
  %54 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %43 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), %48 ]
  %55 = phi i64 [ -6148914691236517206, %43 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %56) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.423 } } } }, %"class.std::__1::vector.402", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.241", %"class.std::__1::unique_ptr.340", %"class.std::__1::vector.228" }, { { { { { i8, [3 x i8], %union.anon.423 } } } }, %"class.std::__1::vector.402", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.241", %"class.std::__1::unique_ptr.340", %"class.std::__1::vector.228" }* @__const._ZN3viz17SurfaceAggregator9AggregateERKNS_9SurfaceIdEN4base9TimeTicksEN3gfx16OverlayTransformERKNS6_4RectEl.frame, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 96, i1 false)
  call void @_ZN3viz15AggregatedFrameC1Ev(%"class.viz::AggregatedFrame"* nonnull %8) #16
  %57 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %36, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast i8* %57 to i64*
  %59 = bitcast %"class.viz::AggregatedFrame"* %8 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 8
  %62 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 20
  store %"class.std::__1::vector.228"* %61, %"class.std::__1::vector.228"** %62, align 8
  %63 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 6
  %64 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 27
  store %"class.std::__1::vector.241"* %63, %"class.std::__1::vector.241"** %64, align 8
  %65 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %36, i64 0, i32 2, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %66, i64 -1, i32 0, i32 0, i32 0
  %68 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %67, align 8
  %69 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %68, i64 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.gfx::Size"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  %73 = lshr i64 %71, 32
  %74 = trunc i64 %73 to i32
  %75 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %75) #16
  %76 = bitcast %"class.gfx::SizeF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #16
  %77 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %10, i64 0, i32 0
  %78 = icmp sgt i32 %72, 0
  %79 = select i1 %78, i32 %72, i32 0
  %80 = sitofp i32 %79 to float
  store float %80, float* %77, align 4
  %81 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %10, i64 0, i32 1
  %82 = icmp sgt i32 %74, 0
  %83 = select i1 %82, i32 %74, i32 0
  %84 = sitofp i32 %83 to float
  store float %84, float* %81, align 4
  call void @_ZN3gfx27OverlayTransformToTransformENS_16OverlayTransformERKNS_5SizeFE(%"class.gfx::Transform"* nonnull sret %9, i32 %4, %"class.gfx::SizeF"* nonnull dereferenceable(8) %10) #16
  %85 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 13
  %86 = bitcast %"class.gfx::Transform"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 4 %75, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %75) #16
  %87 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %87, align 8
  %89 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1
  %90 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %89, align 8
  %91 = icmp eq %"struct.std::__1::pair.316"* %90, %88
  br i1 %91, label %105, label %92

92:                                               ; preds = %52, %103
  %93 = phi %"struct.std::__1::pair.316"* [ %94, %103 ], [ %90, %52 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %93, i64 -1
  %95 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %93, i64 -1, i32 1, i32 0, i32 0
  %96 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %95, align 8
  %97 = icmp eq %"class.viz::SurfaceRange"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = ptrtoint %"class.viz::SurfaceRange"* %96 to i64
  %100 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %93, i64 -1, i32 1, i32 0, i32 1
  %101 = bitcast %"class.viz::SurfaceRange"** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %98, %92
  %104 = icmp eq %"struct.std::__1::pair.316"* %94, %88
  br i1 %104, label %105, label %92

105:                                              ; preds = %103, %52
  store %"struct.std::__1::pair.316"* %88, %"struct.std::__1::pair.316"** %89, align 8
  %106 = bitcast %"class.base::ElapsedTimer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #16
  %107 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %107, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %11) #16
  %108 = bitcast %"struct.viz::SurfaceAggregator::PrewalkResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #16
  %109 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %12, i64 0, i32 1
  %112 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %12, i64 0, i32 2
  %113 = getelementptr inbounds %"struct.viz::SurfaceAggregator::PrewalkResult", %"struct.viz::SurfaceAggregator::PrewalkResult"* %12, i64 0, i32 3
  %114 = bitcast %"struct.viz::SurfaceAggregator::PrewalkResult"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 27, i1 false) #16
  %115 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #16
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %117 = bitcast %"class.gfx::Rect"* %15 to i8*
  %118 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #16
  %119 = bitcast %"class.gfx::Rect"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %119, i8 0, i64 16, i1 false)
  %120 = call { i64, i64 } @_ZN3viz17SurfaceAggregator14PrewalkSurfaceEPNS_7SurfaceEbN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEbRKN3gfx4RectEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %1, %"class.viz::Surface"* %24, i1 zeroext false, i64 0, i1 zeroext true, %"class.gfx::Rect"* nonnull dereferenceable(16) %15, %"struct.viz::SurfaceAggregator::PrewalkResult"* nonnull %12)
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %122 = extractvalue { i64, i64 } %120, 0
  store i64 %122, i64* %121, align 8
  %123 = extractvalue { i64, i64 } %120, 1
  store i64 %123, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #16
  %124 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %11) #16
  %125 = load i8, i8* %31, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %128, !prof !28

127:                                              ; preds = %105
  call void @llvm.trap() #16
  unreachable

128:                                              ; preds = %105
  %129 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  store i64 %124, i64* %129, align 8
  %130 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 26
  %131 = bitcast %"class.gfx::Rect"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %115, i64 16, i1 false)
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %130, %"class.gfx::Rect"* dereferenceable(16) %5) #16
  %132 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 28
  %133 = load i8, i8* %132, align 8
  %134 = load i8, i8* %113, align 2
  %135 = icmp ne i8 %133, %134
  br i1 %135, label %136, label %155

136:                                              ; preds = %128
  %137 = bitcast %"class.gfx::Rect"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #16
  %138 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %65, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %138, i64 -1, i32 0, i32 0, i32 0
  %140 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %139, align 8
  %141 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %140, i64 0, i32 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 0, i32 0, i32 0
  store i32 0, i32* %142, align 4
  %143 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 0, i32 0, i32 1
  store i32 0, i32* %143, align 4
  %144 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 0, i32 1
  %145 = bitcast %"class.gfx::Size"* %141 to i64*
  %146 = bitcast %"class.gfx::Size"* %144 to i64*
  %147 = load i64, i64* %145, align 4
  store i64 %147, i64* %146, align 4
  %148 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %85, %"class.gfx::Rect"* nonnull dereferenceable(16) %16) #16
  %149 = extractvalue { i64, i64 } %148, 0
  %150 = extractvalue { i64, i64 } %148, 1
  %151 = bitcast %"class.gfx::Rect"* %130 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 26, i32 1
  %153 = bitcast %"class.gfx::Size"* %152 to i64*
  store i64 %150, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #16
  %154 = load i8, i8* %113, align 2
  store i8 %154, i8* %132, align 8
  br label %155

155:                                              ; preds = %136, %128
  %156 = load i8, i8* %112, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %22, align 8
  call void @_ZN3viz14SurfaceManager27AggregatedFrameSinksChangedEv(%"class.viz::SurfaceManager"* %159) #16
  br label %160

160:                                              ; preds = %155, %158
  call void @_ZN3viz17SurfaceAggregator26PropagateCopyRequestPassesEv(%"class.viz::SurfaceAggregator"* %1)
  %161 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 23
  %162 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.util::IdType"*, %"class.util::IdType"** %162, align 8
  %164 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 23, i32 0, i32 0, i32 1
  %165 = load %"class.util::IdType"*, %"class.util::IdType"** %164, align 8
  %166 = icmp ne %"class.util::IdType"* %163, %165
  %167 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 29
  %168 = zext i1 %166 to i8
  store i8 %168, i8* %167, align 1
  %169 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 3
  store i8 %168, i8* %169, align 1
  %170 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 42
  %171 = load i8, i8* %170, align 2, !range !2
  %172 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 4
  store i8 %171, i8* %172, align 2
  %173 = load i8, i8* %111, align 8, !range !2
  %174 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 5
  store i8 %173, i8* %174, align 1
  %175 = load i8, i8* %113, align 2
  %176 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 2
  store i8 %175, i8* %176, align 8
  %177 = bitcast %"class.base::ElapsedTimer"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #16
  %178 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %178, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %17) #16
  call void @_ZN3viz17SurfaceAggregator19CopyUndrawnSurfacesEPNS0_13PrewalkResultE(%"class.viz::SurfaceAggregator"* %1, %"struct.viz::SurfaceAggregator::PrewalkResult"* nonnull %12)
  %179 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 11
  %180 = call { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"* %179, %"class.viz::SurfaceId"* dereferenceable(32) %2, %"class.viz::SurfaceId"* dereferenceable(32) %2) #16
  call void @_ZN3viz17SurfaceAggregator10CopyPassesERKNS_15CompositorFrameEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %1, %"class.viz::CompositorFrame"* dereferenceable(296) %36, %"class.viz::Surface"* %24)
  %181 = call { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"* %179, %"class.viz::SurfaceId"* dereferenceable(32) %2) #16
  %182 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %181, 0
  %183 = extractvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %181, 1
  %184 = icmp eq %"class.viz::SurfaceId"* %182, %183
  br i1 %184, label %198, label %185

185:                                              ; preds = %160
  %186 = ptrtoint %"class.viz::SurfaceId"* %183 to i64
  %187 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %188 = bitcast %"class.viz::SurfaceId"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %189, %186
  %191 = ashr exact i64 %190, 5
  %192 = icmp eq i64 %190, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = bitcast %"class.viz::SurfaceId"* %182 to i8*
  %195 = bitcast %"class.viz::SurfaceId"* %183 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 %190, i1 false) #16
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %182, i64 %191
  store %"class.viz::SurfaceId"* %197, %"class.viz::SurfaceId"** %187, align 8
  br label %198

198:                                              ; preds = %160, %196
  %199 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %17) #16
  %200 = load i8, i8* %31, align 8, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %203, !prof !28

202:                                              ; preds = %198
  call void @llvm.trap() #16
  unreachable

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0
  store i64 %199, i64* %204, align 8
  call void @_ZN3viz17SurfaceAggregator20RecordStatHistogramsEv(%"class.viz::SurfaceAggregator"* %1)
  %205 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %62, align 8
  %206 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %206, align 8
  %208 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %205, i64 0, i32 0, i32 1
  %209 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %208, align 8
  %210 = icmp eq %"class.std::__1::unique_ptr.230"* %207, %209
  br i1 %210, label %211, label %269

211:                                              ; preds = %203
  store %"class.std::__1::vector.241"* null, %"class.std::__1::vector.241"** %64, align 8
  %212 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 41
  store i8 0, i8* %212, align 1
  %213 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 19
  %214 = bitcast %"class.base::internal::flat_tree.28"* %213 to i64*
  %215 = bitcast %"class.std::__1::vector.228"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 16, i1 false) #16
  %216 = load i64, i64* %214, align 8
  %217 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %218 = bitcast %"class.viz::SurfaceId"** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 30
  store i8 0, i8* %219, align 2
  %220 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 31
  store i8 0, i8* %220, align 1
  %221 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 36
  %222 = bitcast %"class.base::internal::flat_tree.28"* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 36, i32 0, i32 0, i32 1
  %225 = bitcast %"class.viz::SurfaceId"** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22
  %227 = bitcast %"class.base::internal::flat_tree.294"* %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22, i32 0, i32 0, i32 1
  %230 = bitcast %"class.util::IdType"** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast %"class.base::internal::flat_tree.294"* %161 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.util::IdType"** %164 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 24
  %235 = bitcast %"class.base::internal::flat_tree.294"* %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 24, i32 0, i32 0, i32 1
  %238 = bitcast %"class.util::IdType"** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %240 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %239, align 8
  %241 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %242 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %241, align 8
  %243 = icmp eq %"struct.std::__1::pair.306"* %242, %240
  br i1 %243, label %257, label %244

244:                                              ; preds = %211, %255
  %245 = phi %"struct.std::__1::pair.306"* [ %246, %255 ], [ %242, %211 ]
  %246 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %245, i64 -1
  %247 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %245, i64 -1, i32 1, i32 0, i32 0, i32 0
  %248 = load %"class.util::IdType"*, %"class.util::IdType"** %247, align 8
  %249 = icmp eq %"class.util::IdType"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %244
  %251 = ptrtoint %"class.util::IdType"* %248 to i64
  %252 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %245, i64 -1, i32 1, i32 0, i32 0, i32 1
  %253 = bitcast %"class.util::IdType"** %252 to i64*
  store i64 %251, i64* %253, align 8
  %254 = bitcast %"class.util::IdType"* %248 to i8*
  call void @_ZdlPv(i8* %254) #17
  br label %255

255:                                              ; preds = %250, %244
  %256 = icmp eq %"struct.std::__1::pair.306"* %246, %240
  br i1 %256, label %257, label %244

257:                                              ; preds = %255, %211
  store %"struct.std::__1::pair.306"* %240, %"struct.std::__1::pair.306"** %241, align 8
  %258 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 43
  call void @_ZN3viz20RenderPassIdRemapper19ClearUnusedMappingsEv(%"class.viz::RenderPassIdRemapper"* %258) #16
  %259 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0
  %260 = bitcast %"class.base::internal::flat_tree.209"* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %263 = bitcast %"struct.std::__1::pair.212"** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18, i32 0
  %265 = bitcast %"class.base::internal::flat_tree.219"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %268 = bitcast %"struct.std::__1::pair.222"** %267 to i64*
  store i64 %266, i64* %268, align 8
  store i64 -1, i64* %34, align 8
  store i8 0, i8* %170, align 2
  call void @_ZN3viz15AggregatedFrameC1Ev(%"class.viz::AggregatedFrame"* %0) #16
  br label %546

269:                                              ; preds = %203
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %209, i64 -1, i32 0, i32 0, i32 0
  %271 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %270, align 8
  br i1 %135, label %368, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 40
  %274 = load i8, i8* %273, align 8, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %368

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %271, i64 0, i32 1
  %278 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %271, i64 0, i32 0, i32 7
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %368

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %283 = load %"class.util::IdType"*, %"class.util::IdType"** %282, align 8
  %284 = bitcast %"class.util::IdType"** %164 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = ptrtoint %"class.util::IdType"* %283 to i64
  %287 = sub i64 %285, %286
  %288 = icmp eq i64 %287, 0
  %289 = inttoptr i64 %285 to %"class.util::IdType"*
  br i1 %288, label %310, label %290

290:                                              ; preds = %281
  %291 = ashr exact i64 %287, 3
  %292 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 0, i32 0, i32 0
  %293 = load i64, i64* %292, align 8
  br label %294

294:                                              ; preds = %294, %290
  %295 = phi %"class.util::IdType"* [ %283, %290 ], [ %306, %294 ]
  %296 = phi i64 [ %291, %290 ], [ %305, %294 ]
  %297 = lshr i64 %296, 1
  %298 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %295, i64 %297
  %299 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %298, i64 0, i32 0, i32 0
  %300 = load i64, i64* %299, align 8
  %301 = icmp ult i64 %300, %293
  %302 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %298, i64 1
  %303 = xor i64 %297, -1
  %304 = add i64 %296, %303
  %305 = select i1 %301, i64 %304, i64 %297
  %306 = select i1 %301, %"class.util::IdType"* %302, %"class.util::IdType"* %295
  %307 = icmp eq i64 %305, 0
  br i1 %307, label %308, label %294

308:                                              ; preds = %294
  %309 = ptrtoint %"class.util::IdType"* %306 to i64
  br label %310

310:                                              ; preds = %308, %281
  %311 = phi i64 [ %309, %308 ], [ %286, %281 ]
  %312 = phi %"class.util::IdType"* [ %306, %308 ], [ %283, %281 ]
  %313 = icmp eq %"class.util::IdType"* %312, %289
  br i1 %313, label %320, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 0, i32 0, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %312, i64 0, i32 0, i32 0
  %318 = load i64, i64* %317, align 8
  %319 = icmp ult i64 %316, %318
  br i1 %319, label %320, label %368

320:                                              ; preds = %314, %310
  %321 = ptrtoint %"class.util::IdType"* %312 to i64
  %322 = icmp eq i64 %311, %321
  br i1 %322, label %323, label %368

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %325 = load %"class.util::IdType"*, %"class.util::IdType"** %324, align 8
  %326 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22, i32 0, i32 0, i32 1
  %327 = bitcast %"class.util::IdType"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = ptrtoint %"class.util::IdType"* %325 to i64
  %330 = sub i64 %328, %329
  %331 = icmp eq i64 %330, 0
  %332 = inttoptr i64 %328 to %"class.util::IdType"*
  br i1 %331, label %353, label %333

333:                                              ; preds = %323
  %334 = ashr exact i64 %330, 3
  %335 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 0, i32 0, i32 0
  %336 = load i64, i64* %335, align 8
  br label %337

337:                                              ; preds = %337, %333
  %338 = phi %"class.util::IdType"* [ %325, %333 ], [ %349, %337 ]
  %339 = phi i64 [ %334, %333 ], [ %348, %337 ]
  %340 = lshr i64 %339, 1
  %341 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %338, i64 %340
  %342 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %341, i64 0, i32 0, i32 0
  %343 = load i64, i64* %342, align 8
  %344 = icmp ult i64 %343, %336
  %345 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %341, i64 1
  %346 = xor i64 %340, -1
  %347 = add i64 %339, %346
  %348 = select i1 %344, i64 %347, i64 %340
  %349 = select i1 %344, %"class.util::IdType"* %345, %"class.util::IdType"* %338
  %350 = icmp eq i64 %348, 0
  br i1 %350, label %351, label %337

351:                                              ; preds = %337
  %352 = ptrtoint %"class.util::IdType"* %349 to i64
  br label %353

353:                                              ; preds = %351, %323
  %354 = phi i64 [ %352, %351 ], [ %329, %323 ]
  %355 = phi %"class.util::IdType"* [ %349, %351 ], [ %325, %323 ]
  %356 = icmp eq %"class.util::IdType"* %355, %332
  br i1 %356, label %363, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %277, i64 0, i32 0, i32 0
  %359 = load i64, i64* %358, align 8
  %360 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %355, i64 0, i32 0, i32 0
  %361 = load i64, i64* %360, align 8
  %362 = icmp ult i64 %359, %361
  br i1 %362, label %363, label %368

363:                                              ; preds = %353, %357
  %364 = ptrtoint %"class.util::IdType"* %355 to i64
  %365 = icmp eq i64 %354, %364
  br i1 %365, label %366, label %368

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %271, i64 0, i32 0, i32 1
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %367, %"class.gfx::Rect"* nonnull dereferenceable(16) %14) #16
  br label %368

368:                                              ; preds = %363, %276, %314, %320, %357, %272, %366, %269
  %369 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 4
  %370 = load i8, i8* %369, align 2, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %373, label %372

372:                                              ; preds = %368
  call void @_ZN3viz17SurfaceAggregator13HandleDeJellyEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"* %1, %"class.viz::Surface"* undef)
  br label %373

373:                                              ; preds = %368, %372
  call void @_ZN3viz17SurfaceAggregator22AddColorConversionPassEv(%"class.viz::SurfaceAggregator"* %1)
  %374 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %375 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %374, align 8
  %376 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %377 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %376, align 8
  %378 = icmp eq %"struct.std::__1::pair.212"* %375, %377
  br i1 %378, label %379, label %383

379:                                              ; preds = %373
  %380 = ptrtoint %"struct.std::__1::pair.212"* %377 to i64
  %381 = ptrtoint %"struct.std::__1::pair.212"* %375 to i64
  %382 = bitcast %"struct.std::__1::pair.212"** %376 to i64*
  br label %402

383:                                              ; preds = %373
  %384 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0
  br label %385

385:                                              ; preds = %393, %383
  %386 = phi %"struct.std::__1::pair.212"* [ %375, %383 ], [ %394, %393 ]
  %387 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %386, i64 0, i32 0
  %388 = call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %384, %"class.viz::SurfaceId"* dereferenceable(32) %387) #16
  %389 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %388, 0
  %390 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %388, 1
  %391 = icmp eq %"struct.std::__1::pair.212"* %390, %389
  br i1 %391, label %392, label %393

392:                                              ; preds = %385
  call void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %1, %"class.viz::SurfaceId"* dereferenceable(32) %387) #16
  br label %393

393:                                              ; preds = %392, %385
  %394 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %386, i64 1
  %395 = icmp eq %"struct.std::__1::pair.212"* %394, %377
  br i1 %395, label %396, label %385

396:                                              ; preds = %393
  %397 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 15
  %398 = bitcast %"class.base::flat_map.208"* %397 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = bitcast %"struct.std::__1::pair.212"** %376 to i64*
  %401 = load i64, i64* %400, align 8
  br label %402

402:                                              ; preds = %379, %396
  %403 = phi i64* [ %382, %379 ], [ %400, %396 ]
  %404 = phi i64 [ %380, %379 ], [ %401, %396 ]
  %405 = phi i64 [ %381, %379 ], [ %399, %396 ]
  %406 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16
  %407 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 15
  %408 = bitcast %"class.base::flat_map.208"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %411 = bitcast %"struct.std::__1::pair.212"** %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %414 = bitcast %"struct.std::__1::pair.212"** %413 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"class.base::flat_map.208"* %407 to i64*
  store i64 %405, i64* %408, align 8
  store i64 %404, i64* %411, align 8
  %417 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %418 = bitcast %"struct.std::__1::pair.212"** %417 to i64*
  %419 = load i64, i64* %418, align 8
  store i64 %419, i64* %414, align 8
  store i64 %409, i64* %416, align 8
  store i64 %412, i64* %403, align 8
  store i64 %415, i64* %418, align 8
  %420 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18
  %421 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 17
  %422 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %423 = bitcast %"struct.std::__1::pair.222"** %422 to i64*
  %424 = bitcast %"class.base::flat_map.218"* %420 to <2 x i64>*
  %425 = load <2 x i64>, <2 x i64>* %424, align 8
  %426 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %427 = bitcast %"struct.std::__1::pair.222"** %426 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = bitcast %"class.base::flat_map.218"* %421 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8
  %431 = bitcast %"class.base::flat_map.218"* %420 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %431, align 8
  %432 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %433 = bitcast %"struct.std::__1::pair.222"** %432 to i64*
  %434 = load i64, i64* %433, align 8
  store i64 %434, i64* %427, align 8
  %435 = bitcast %"class.base::flat_map.218"* %421 to <2 x i64>*
  store <2 x i64> %425, <2 x i64>* %435, align 8
  store i64 %428, i64* %433, align 8
  store %"class.std::__1::vector.241"* null, %"class.std::__1::vector.241"** %64, align 8
  %436 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 41
  store i8 0, i8* %436, align 1
  %437 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 19
  %438 = bitcast %"class.base::internal::flat_tree.28"* %437 to i64*
  %439 = bitcast %"class.std::__1::vector.228"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %439, i8 0, i64 16, i1 false) #16
  %440 = load i64, i64* %438, align 8
  %441 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %442 = bitcast %"class.viz::SurfaceId"** %441 to i64*
  store i64 %440, i64* %442, align 8
  %443 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 30
  store i8 0, i8* %443, align 2
  %444 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 31
  store i8 0, i8* %444, align 1
  %445 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 36
  %446 = bitcast %"class.base::internal::flat_tree.28"* %445 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 36, i32 0, i32 0, i32 1
  %449 = bitcast %"class.viz::SurfaceId"** %448 to i64*
  store i64 %447, i64* %449, align 8
  %450 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22
  %451 = bitcast %"class.base::internal::flat_tree.294"* %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 22, i32 0, i32 0, i32 1
  %454 = bitcast %"class.util::IdType"** %453 to i64*
  store i64 %452, i64* %454, align 8
  %455 = bitcast %"class.base::internal::flat_tree.294"* %161 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.util::IdType"** %164 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 24
  %459 = bitcast %"class.base::internal::flat_tree.294"* %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 24, i32 0, i32 0, i32 1
  %462 = bitcast %"class.util::IdType"** %461 to i64*
  store i64 %460, i64* %462, align 8
  %463 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %464 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %463, align 8
  %465 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %466 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %465, align 8
  %467 = icmp eq %"struct.std::__1::pair.306"* %466, %464
  br i1 %467, label %481, label %468

468:                                              ; preds = %402, %479
  %469 = phi %"struct.std::__1::pair.306"* [ %470, %479 ], [ %466, %402 ]
  %470 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %469, i64 -1
  %471 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %469, i64 -1, i32 1, i32 0, i32 0, i32 0
  %472 = load %"class.util::IdType"*, %"class.util::IdType"** %471, align 8
  %473 = icmp eq %"class.util::IdType"* %472, null
  br i1 %473, label %479, label %474

474:                                              ; preds = %468
  %475 = ptrtoint %"class.util::IdType"* %472 to i64
  %476 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %469, i64 -1, i32 1, i32 0, i32 0, i32 1
  %477 = bitcast %"class.util::IdType"** %476 to i64*
  store i64 %475, i64* %477, align 8
  %478 = bitcast %"class.util::IdType"* %472 to i8*
  call void @_ZdlPv(i8* %478) #17
  br label %479

479:                                              ; preds = %474, %468
  %480 = icmp eq %"struct.std::__1::pair.306"* %470, %464
  br i1 %480, label %481, label %468

481:                                              ; preds = %479, %402
  store %"struct.std::__1::pair.306"* %464, %"struct.std::__1::pair.306"** %465, align 8
  %482 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 43
  call void @_ZN3viz20RenderPassIdRemapper19ClearUnusedMappingsEv(%"class.viz::RenderPassIdRemapper"* %482) #16
  %483 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 16, i32 0
  %484 = bitcast %"class.base::internal::flat_tree.209"* %483 to i64*
  %485 = load i64, i64* %484, align 8
  store i64 %485, i64* %411, align 8
  %486 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 18, i32 0
  %487 = bitcast %"class.base::internal::flat_tree.219"* %486 to i64*
  %488 = load i64, i64* %487, align 8
  store i64 %488, i64* %423, align 8
  store i64 -1, i64* %34, align 8
  store i8 0, i8* %170, align 2
  %489 = getelementptr inbounds %"class.base::flat_map.208", %"class.base::flat_map.208"* %407, i64 0, i32 0, i32 0, i32 0, i32 0
  %490 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %489, align 8
  %491 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %376, align 8
  %492 = icmp eq %"struct.std::__1::pair.212"* %490, %491
  br i1 %492, label %521, label %493

493:                                              ; preds = %481
  %494 = bitcast %"struct.std::__1::pair.212"* %18 to i8*
  %495 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %18, i64 0, i32 0, i32 1, i32 2
  %496 = bitcast %"class.base::UnguessableToken"* %495 to i8*
  %497 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %18, i64 0, i32 1
  %498 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %18, i64 0, i32 0
  %499 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 1
  %500 = bitcast %"struct.std::__1::pair.212"* %18 to <4 x i32>*
  br label %501

501:                                              ; preds = %515, %493
  %502 = phi %"struct.std::__1::pair.212"* [ %490, %493 ], [ %517, %515 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %494) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %494, i8 -86, i64 40, i1 false)
  %503 = bitcast %"struct.std::__1::pair.212"* %502 to <4 x i32>*
  %504 = load <4 x i32>, <4 x i32>* %503, align 4
  store <4 x i32> %504, <4 x i32>* %500, align 16
  %505 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %502, i64 0, i32 0, i32 1, i32 2
  %506 = bitcast %"class.base::UnguessableToken"* %505 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %496, i8* align 8 %506, i64 16, i1 false) #16
  %507 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %502, i64 0, i32 1
  %508 = load i64, i64* %507, align 8
  store i64 %508, i64* %497, align 16
  %509 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %22, align 8
  %510 = call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %509, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %498) #16
  %511 = icmp eq %"class.viz::Surface"* %510, null
  br i1 %511, label %515, label %512

512:                                              ; preds = %501
  %513 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %510, i64 0, i32 17
  %514 = load %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceAllocationGroup"** %513, align 8
  call void @_ZN3viz22SurfaceAllocationGroup29TakeAggregatedLatencyInfoUpToEPNS_7SurfaceEPNSt3__16vectorIN2ui11LatencyInfoENS3_9allocatorIS6_EEEE(%"class.viz::SurfaceAllocationGroup"* %514, %"class.viz::Surface"* nonnull %510, %"class.std::__1::vector.402"* %499) #16
  br label %515

515:                                              ; preds = %501, %512
  %516 = call zeroext i1 @_ZN2ui11LatencyInfo6VerifyERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEPKc(%"class.std::__1::vector.402"* dereferenceable(24) %499, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %494) #16
  %517 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %502, i64 1
  %518 = xor i1 %516, true
  %519 = icmp eq %"struct.std::__1::pair.212"* %517, %491
  %520 = or i1 %519, %518
  br i1 %520, label %521, label %501

521:                                              ; preds = %515, %481
  %522 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 39, i32 0, i32 0, i32 0
  %523 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %522, align 8
  %524 = icmp eq %"class.gfx::DelegatedInkMetadata"* %523, null
  br i1 %524, label %534, label %525

525:                                              ; preds = %521
  %526 = ptrtoint %"class.gfx::DelegatedInkMetadata"* %523 to i64
  %527 = getelementptr inbounds %"class.viz::AggregatedFrame", %"class.viz::AggregatedFrame"* %8, i64 0, i32 7
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %522, align 8
  %528 = getelementptr inbounds %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.340"* %527, i64 0, i32 0, i32 0, i32 0
  %529 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %528, align 8
  %530 = bitcast %"class.std::__1::unique_ptr.340"* %527 to i64*
  store i64 %526, i64* %530, align 8
  %531 = icmp eq %"class.gfx::DelegatedInkMetadata"* %529, null
  br i1 %531, label %534, label %532

532:                                              ; preds = %525
  %533 = bitcast %"class.gfx::DelegatedInkMetadata"* %529 to i8*
  call void @_ZdlPv(i8* %533) #17
  br label %534

534:                                              ; preds = %521, %532, %525
  %535 = phi i8 [ 1, %525 ], [ 1, %532 ], [ 0, %521 ]
  %536 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 40
  store i8 %535, i8* %536, align 8
  %537 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %1, i64 0, i32 33, i32 0, i32 0, i32 0
  %538 = load %"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::SurfaceAggregator::FrameAnnotator"** %537, align 8
  %539 = icmp eq %"class.viz::SurfaceAggregator::FrameAnnotator"* %538, null
  br i1 %539, label %545, label %540

540:                                              ; preds = %534
  %541 = bitcast %"class.viz::SurfaceAggregator::FrameAnnotator"* %538 to void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)***
  %542 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)**, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)*** %541, align 8
  %543 = getelementptr inbounds void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)** %542, i64 2
  %544 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::AggregatedFrame"*)** %543, align 8
  call void %544(%"class.viz::SurfaceAggregator::FrameAnnotator"* nonnull %538, %"class.viz::AggregatedFrame"* nonnull %8) #16
  br label %545

545:                                              ; preds = %534, %540
  call void @_ZN3viz15AggregatedFrameC1EOS0_(%"class.viz::AggregatedFrame"* %0, %"class.viz::AggregatedFrame"* nonnull dereferenceable(96) %8) #16
  br label %546

546:                                              ; preds = %545, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #16
  %547 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %109, align 8
  %548 = icmp eq %"class.viz::SurfaceId"* %547, null
  br i1 %548, label %553, label %549

549:                                              ; preds = %546
  %550 = ptrtoint %"class.viz::SurfaceId"* %547 to i64
  %551 = bitcast %"class.viz::SurfaceId"** %110 to i64*
  store i64 %550, i64* %551, align 8
  %552 = bitcast %"class.viz::SurfaceId"* %547 to i8*
  call void @_ZdlPv(i8* %552) #17
  br label %553

553:                                              ; preds = %546, %549
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #16
  call void @_ZN3viz15AggregatedFrameD1Ev(%"class.viz::AggregatedFrame"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %56) #16
  %554 = icmp eq i8* %53, null
  br i1 %554, label %559, label %555

555:                                              ; preds = %553
  %556 = load i8, i8* %53, align 1
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %559, label %558

558:                                              ; preds = %555
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %53, i8* %54, i64 %55) #16
  br label %559

559:                                              ; preds = %558, %555, %553, %29
  ret void
}

declare void @_ZN3viz15AggregatedFrameC1Ev(%"class.viz::AggregatedFrame"*) unnamed_addr #1

declare void @_ZN3gfx27OverlayTransformToTransformENS_16OverlayTransformERKNS_5SizeFE(%"class.gfx::Transform"* sret, i32, %"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3viz14SurfaceManager27AggregatedFrameSinksChangedEv(%"class.viz::SurfaceManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator20RecordStatHistogramsEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #16
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14, !prof !28

13:                                               ; preds = %8
  tail call void @llvm.trap() #16
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %18 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %18, i64 6
  %20 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, align 8
  tail call void %20(%"class.base::HistogramBase"* %9, i32 %16) #16
  %21 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %22 = inttoptr i64 %21 to %"class.base::HistogramBase"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #16
  %26 = ptrtoint %"class.base::HistogramBase"* %25 to i64
  store atomic i64 %26, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %27

27:                                               ; preds = %14, %24
  %28 = phi %"class.base::HistogramBase"* [ %22, %14 ], [ %25, %24 ]
  %29 = load i8, i8* %10, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32, !prof !28

31:                                               ; preds = %27
  tail call void @llvm.trap() #16
  unreachable

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = bitcast %"class.base::HistogramBase"* %28 to void (%"class.base::HistogramBase"*, i32)***
  %36 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %36, i64 6
  %38 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %37, align 8
  tail call void %38(%"class.base::HistogramBase"* %28, i32 %34) #16
  %39 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %40 = inttoptr i64 %39 to %"class.base::HistogramBase"*
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %32
  %43 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #16
  %44 = ptrtoint %"class.base::HistogramBase"* %43 to i64
  store atomic i64 %44, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %45

45:                                               ; preds = %32, %42
  %46 = phi %"class.base::HistogramBase"* [ %40, %32 ], [ %43, %42 ]
  %47 = load i8, i8* %10, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %50, !prof !28

49:                                               ; preds = %45
  tail call void @llvm.trap() #16
  unreachable

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"class.base::HistogramBase"* %46 to void (%"class.base::HistogramBase"*, i32)***
  %54 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %54, i64 6
  %56 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %55, align 8
  tail call void %56(%"class.base::HistogramBase"* %46, i32 %52) #16
  %57 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %58 = inttoptr i64 %57 to %"class.base::HistogramBase"*
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %50
  %61 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i64 0, i64 0), i64 5, i64 10000, i32 50, i32 1) #16
  %62 = ptrtoint %"class.base::HistogramBase"* %61 to i64
  store atomic i64 %62, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %63

63:                                               ; preds = %50, %60
  %64 = phi %"class.base::HistogramBase"* [ %58, %50 ], [ %61, %60 ]
  %65 = load i8, i8* %10, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68, !prof !28

67:                                               ; preds = %63
  tail call void @llvm.trap() #16
  unreachable

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %64, %"class.base::TimeDelta"* dereferenceable(8) %69) #16
  %70 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %71 = inttoptr i64 %70 to %"class.base::HistogramBase"*
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i64 5, i64 10000, i32 50, i32 1) #16
  %75 = ptrtoint %"class.base::HistogramBase"* %74 to i64
  store atomic i64 %75, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %76

76:                                               ; preds = %68, %73
  %77 = phi %"class.base::HistogramBase"* [ %71, %68 ], [ %74, %73 ]
  %78 = load i8, i8* %10, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %81, !prof !28

80:                                               ; preds = %76
  tail call void @llvm.trap() #16
  unreachable

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  tail call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %77, %"class.base::TimeDelta"* dereferenceable(8) %82) #16
  %83 = load atomic i64, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %84 = inttoptr i64 %83 to %"class.base::HistogramBase"*
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.18, i64 0, i64 0), i64 5, i64 10000, i32 50, i32 1) #16
  %88 = ptrtoint %"class.base::HistogramBase"* %87 to i64
  store atomic i64 %88, i64* @_ZZN3viz17SurfaceAggregator20RecordStatHistogramsEvE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %89

89:                                               ; preds = %81, %86
  %90 = phi %"class.base::HistogramBase"* [ %84, %81 ], [ %87, %86 ]
  %91 = load i8, i8* %10, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94, !prof !28

93:                                               ; preds = %89
  tail call void @llvm.trap() #16
  unreachable

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  tail call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %90, %"class.base::TimeDelta"* dereferenceable(8) %95) #16
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator19ResetAfterAggregateEv(%"class.viz::SurfaceAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 27
  store %"class.std::__1::vector.241"* null, %"class.std::__1::vector.241"** %3, align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 41
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19
  %6 = bitcast %"class.base::internal::flat_tree.28"* %5 to i64*
  %7 = bitcast %"class.std::__1::vector.228"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = load i64, i64* %6, align 8
  %9 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %10 = bitcast %"class.viz::SurfaceId"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 30
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 31
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36
  %14 = bitcast %"class.base::internal::flat_tree.28"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %17 = bitcast %"class.viz::SurfaceId"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22
  %19 = bitcast %"class.base::internal::flat_tree.294"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  %22 = bitcast %"class.util::IdType"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23
  %24 = bitcast %"class.base::internal::flat_tree.294"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %27 = bitcast %"class.util::IdType"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24
  %29 = bitcast %"class.base::internal::flat_tree.294"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %32 = bitcast %"class.util::IdType"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %33, align 8
  %35 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %36 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %35, align 8
  %37 = icmp eq %"struct.std::__1::pair.306"* %36, %34
  br i1 %37, label %51, label %38

38:                                               ; preds = %1, %49
  %39 = phi %"struct.std::__1::pair.306"* [ %40, %49 ], [ %36, %1 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %39, i64 -1, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.util::IdType"*, %"class.util::IdType"** %41, align 8
  %43 = icmp eq %"class.util::IdType"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = ptrtoint %"class.util::IdType"* %42 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %39, i64 -1, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast %"class.util::IdType"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"class.util::IdType"* %42 to i8*
  tail call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %44, %38
  %50 = icmp eq %"struct.std::__1::pair.306"* %40, %34
  br i1 %50, label %51, label %38

51:                                               ; preds = %49, %1
  store %"struct.std::__1::pair.306"* %34, %"struct.std::__1::pair.306"** %35, align 8
  %52 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  tail call void @_ZN3viz20RenderPassIdRemapper19ClearUnusedMappingsEv(%"class.viz::RenderPassIdRemapper"* %52) #16
  %53 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0
  %54 = bitcast %"class.base::internal::flat_tree.209"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"struct.std::__1::pair.212"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18, i32 0
  %59 = bitcast %"class.base::internal::flat_tree.219"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %"struct.std::__1::pair.222"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 34
  store i64 -1, i64* %63, align 8
  %64 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 42
  store i8 0, i8* %64, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator13HandleDeJellyEPNS_7SurfaceE(%"class.viz::SurfaceAggregator"*, %"class.viz::Surface"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %5 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %6 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %7 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %8 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %9 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %10 = alloca %"class.base::TimeTicks", align 8
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %13 = alloca %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", align 8
  %14 = alloca %"class.std::__1::unique_ptr.230", align 8
  %15 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %16 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %"class.gfx::Rect", align 4
  %19 = alloca %"class.gfx::Rect", align 4
  %20 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %21 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %22 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %23 = and i8 %22, 25
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %31, label %25, !prof !27

25:                                               ; preds = %2
  %26 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %27 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %29 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %29, i64* %28, align 8
  %30 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %26, %"class.base::TimeTicks"* nonnull dereferenceable(8) %10, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %31

31:                                               ; preds = %2, %25
  %32 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %25 ]
  %33 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), %25 ]
  %34 = phi i64 [ -6148914691236517206, %2 ], [ %30, %25 ]
  %35 = call zeroext i1 @_ZN3viz13DeJellyActiveEv() #16
  br i1 %35, label %51, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 37
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %42 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %42, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %44, i64 -1, i32 0, i32 0, i32 0
  %46 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %45, align 8
  %47 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %46, i64 0, i32 0, i32 1
  %48 = bitcast %"class.gfx::Rect"* %47 to i8*
  %49 = bitcast %"class.viz::AggregatedRenderPass"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 4 %49, i64 16, i1 false) #16
  br label %50

50:                                               ; preds = %36, %40
  store i8 0, i8* %37, align 8
  br label %356

51:                                               ; preds = %31
  %52 = bitcast %"class.gfx::Rect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #16
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %52, i8 0, i64 16, i1 false) #16
  %57 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %58 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %58, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %60, i64 -1, i32 0, i32 0, i32 0
  %62 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %61, align 8
  %63 = call float @_ZN3viz18DeJellyScreenWidthEv() #16
  %64 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #16
  %65 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12, i64 0, i32 0, i32 1
  %66 = bitcast %"class.cc::ListContainerHelper::Iterator"* %9 to i8*
  %67 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #16, !noalias !100
  %68 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %62, i64 0, i32 0, i32 12, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %9, %"class.cc::ListContainerHelper"* %68) #16, !noalias !100
  %69 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %9, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %69, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %70) #16
  %71 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %9, i64 0, i32 1
  %72 = load i64, i64* %71, align 8, !noalias !100
  store i64 %72, i64* %65, align 8, !alias.scope !100
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #16, !noalias !100
  %73 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #16
  %74 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %13, i64 0, i32 0, i32 1
  %75 = bitcast %"class.cc::ListContainerHelper::Iterator"* %8 to i8*
  %76 = bitcast %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #16, !noalias !103
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %8, %"class.cc::ListContainerHelper"* %68) #16, !noalias !103
  %77 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %13, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %8, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %77, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %78) #16
  %79 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %8, i64 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !103
  store i64 %80, i64* %74, align 8, !alias.scope !103
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #16, !noalias !103
  %81 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %69, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %77) #16
  br i1 %81, label %82, label %86

82:                                               ; preds = %51
  %83 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12, i64 0, i32 0, i32 0, i32 2
  %84 = bitcast i8** %83 to %"class.viz::SharedQuadState"**
  %85 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %7 to i8*
  br label %92

86:                                               ; preds = %114, %51
  %87 = phi float [ 0.000000e+00, %51 ], [ %115, %114 ]
  %88 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %13, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %88) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #16
  %89 = getelementptr inbounds %"class.cc::ListContainer<viz::SharedQuadState>::Iterator", %"class.cc::ListContainer<viz::SharedQuadState>::Iterator"* %12, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %89) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #16
  %90 = fcmp oeq float %87, 0.000000e+00
  %91 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 37
  br i1 %90, label %119, label %132

92:                                               ; preds = %82, %114
  %93 = phi float [ 0.000000e+00, %82 ], [ %115, %114 ]
  %94 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %84, align 8
  %95 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %94, i64 0, i32 13
  %96 = load float, float* %95, align 8
  %97 = fcmp oeq float %96, 0.000000e+00
  br i1 %97, label %114, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %94, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 4, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %94, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* dereferenceable(16) %103) #16
  br label %104

104:                                              ; preds = %98, %102
  %105 = call float @atan2f(float %96, float %63) #16
  %106 = fmul float %105, 1.800000e+02
  %107 = fdiv float %106, 0x400921FB60000000
  %108 = call float @llvm.fabs.f32(float %107) #16
  %109 = fdiv float %107, %108
  %110 = call float @llvm.fabs.f32(float %93) #16
  %111 = fcmp olt float %108, %110
  %112 = select i1 %111, float %110, float %108
  %113 = fmul float %109, %112
  br label %114

114:                                              ; preds = %92, %104
  %115 = phi float [ %113, %104 ], [ %93, %92 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %7, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %69) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #16
  %116 = load i64, i64* %65, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %65, align 8
  %118 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %69, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %77) #16
  br i1 %118, label %92, label %86

119:                                              ; preds = %86
  %120 = load i8, i8* %91, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %119
  %123 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %57, align 8
  %124 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %123, i64 0, i32 0, i32 1
  %125 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %125, i64 -1, i32 0, i32 0, i32 0
  %127 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %126, align 8
  %128 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %127, i64 0, i32 0, i32 1
  %129 = bitcast %"class.gfx::Rect"* %128 to i8*
  %130 = bitcast %"class.viz::AggregatedRenderPass"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 4 %130, i64 16, i1 false) #16
  br label %131

131:                                              ; preds = %119, %122
  store i8 0, i8* %91, align 8
  br label %355

132:                                              ; preds = %86
  store i8 1, i8* %91, align 8
  %133 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %57, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %133, i64 0, i32 0, i32 1
  %135 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %135, i64 -1, i32 0, i32 0, i32 0
  %137 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %136, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %136, align 8
  %138 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %57, align 8
  %139 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %138, i64 0, i32 0, i32 1
  %140 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %142, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %142, align 8
  %144 = icmp eq %"class.viz::AggregatedRenderPass"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %132
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %143) #16
  %146 = bitcast %"class.viz::AggregatedRenderPass"* %143 to i8*
  call void @_ZdlPv(i8* %146) #17
  br label %147

147:                                              ; preds = %132, %145
  store %"class.std::__1::unique_ptr.230"* %141, %"class.std::__1::unique_ptr.230"** %139, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.230"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #16
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %14, i64 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %62, i64 0, i32 1, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = call %"class.viz::AggregatedRenderPass"* @_ZNK3viz20AggregatedRenderPass4CopyEN4util6IdTypeIS0_mLm0ELm1EEE(%"class.viz::AggregatedRenderPass"* %62, i64 %151) #16
  store %"class.viz::AggregatedRenderPass"* %152, %"class.viz::AggregatedRenderPass"** %149, align 8
  %153 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %137, i64 0, i32 0, i32 10
  %154 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %152, i64 0, i32 0, i32 10
  %155 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %155, align 8
  %157 = icmp eq %"class.std::__1::unique_ptr.260"* %156, null
  br i1 %157, label %179, label %158

158:                                              ; preds = %147
  %159 = bitcast %"class.std::__1::unique_ptr.260"* %156 to i8*
  %160 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %152, i64 0, i32 0, i32 10, i32 0, i32 1
  %161 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %160, align 8
  %162 = icmp eq %"class.std::__1::unique_ptr.260"* %161, %156
  br i1 %162, label %176, label %163

163:                                              ; preds = %158, %171
  %164 = phi %"class.std::__1::unique_ptr.260"* [ %165, %171 ], [ %161, %158 ]
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %164, i64 -1
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %166, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %166, align 8
  %168 = icmp eq %"class.viz::CopyOutputRequest"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %163
  call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %167) #16
  %170 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %167, i64 0, i32 0
  call void @_ZdlPv(i8* %170) #17
  br label %171

171:                                              ; preds = %169, %163
  %172 = icmp eq %"class.std::__1::unique_ptr.260"* %165, %156
  br i1 %172, label %173, label %163

173:                                              ; preds = %171
  %174 = bitcast %"class.std::__1::vector.258"* %154 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %173, %158
  %177 = phi i8* [ %175, %173 ], [ %159, %158 ]
  store %"class.std::__1::unique_ptr.260"* %156, %"class.std::__1::unique_ptr.260"** %160, align 8
  call void @_ZdlPv(i8* %177) #17
  %178 = bitcast %"class.std::__1::vector.258"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #16
  br label %179

179:                                              ; preds = %147, %176
  %180 = bitcast %"class.std::__1::vector.258"* %153 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::vector.258"* %154 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %137, i64 0, i32 0, i32 10, i32 0, i32 1
  %184 = bitcast %"class.std::__1::unique_ptr.260"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %152, i64 0, i32 0, i32 10, i32 0, i32 1
  %187 = bitcast %"class.std::__1::unique_ptr.260"** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %137, i64 0, i32 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr.260"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %152, i64 0, i32 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr.260"** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast %"class.std::__1::vector.258"* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 24, i1 false) #16
  %194 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #16
  %195 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15, i64 0, i32 0, i32 1
  %196 = bitcast %"class.cc::ListContainerHelper::Iterator"* %4 to i8*
  %197 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %196) #16, !noalias !106
  %198 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %62, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %198) #16, !noalias !106
  %199 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15, i64 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %199, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %200) #16
  %201 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 1
  %202 = load i64, i64* %201, align 8, !noalias !106
  store i64 %202, i64* %195, align 8, !alias.scope !106
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %196) #16, !noalias !106
  %203 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #16
  %204 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %204) #16, !noalias !109
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %198) #16, !noalias !109
  %205 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %16, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %205, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %206) #16
  %207 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %16, i64 0, i32 0, i32 1
  %208 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %209 = load i64, i64* %208, align 8, !noalias !109
  store i64 %209, i64* %207, align 8, !alias.scope !109
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %204) #16, !noalias !109
  %210 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %199, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %205) #16
  %211 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %16, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %211) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #16
  br i1 %210, label %212, label %237

212:                                              ; preds = %179
  %213 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15, i64 0, i32 0, i32 0, i32 2
  %214 = bitcast i8** %213 to %"class.viz::DrawQuad"**
  %215 = bitcast %"class.gfx::Transform"* %17 to i8*
  %216 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0, i32 1
  %217 = fpext float %87 to double
  %218 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 43
  %219 = bitcast %"class.gfx::Rect"* %18 to i8*
  %220 = bitcast %"class.gfx::Rect"* %19 to i8*
  %221 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %20 to i8*
  %222 = bitcast %"class.cc::ListContainerHelper::Iterator"* %5 to i8*
  %223 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %20, i64 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %5, i64 0, i32 0
  %225 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %20, i64 0, i32 0, i32 1
  %226 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %5, i64 0, i32 1
  %227 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %20, i64 0, i32 0
  %228 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %21 to i8*
  %229 = bitcast %"class.cc::ListContainerHelper::Iterator"* %6 to i8*
  %230 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %21, i64 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 0
  %232 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %21, i64 0, i32 0, i32 1
  %233 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 1
  %234 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %21, i64 0, i32 0
  %235 = bitcast %"class.gfx::Rect"* %18 to i8*
  %236 = bitcast %"class.gfx::Rect"* %19 to i8*
  br label %243

237:                                              ; preds = %320, %179
  %238 = phi i64 [ 0, %179 ], [ %325, %320 ]
  %239 = phi i32 [ -1431655766, %179 ], [ %324, %320 ]
  %240 = phi float [ 0xFFFFFFFFE0000000, %179 ], [ %323, %320 ]
  %241 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %15, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %241) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #16
  %242 = icmp eq i64 %238, 0
  br i1 %242, label %331, label %328

243:                                              ; preds = %212, %320
  %244 = phi float [ 0xFFFFFFFFE0000000, %212 ], [ %323, %320 ]
  %245 = phi i32 [ -1431655766, %212 ], [ %324, %320 ]
  %246 = phi i64 [ 0, %212 ], [ %325, %320 ]
  %247 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %214, align 8
  %248 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %247, i64 0, i32 6
  %249 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %248, align 8
  %250 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 13
  %251 = load float, float* %250, align 8
  %252 = fcmp une float %251, 0.000000e+00
  %253 = inttoptr i64 %246 to %"class.viz::AggregatedRenderPass"*
  %254 = icmp eq i64 %246, 0
  br i1 %254, label %264, label %255

255:                                              ; preds = %243
  br i1 %252, label %256, label %262

256:                                              ; preds = %255
  %257 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 8
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %245, %258
  %260 = icmp eq i32 %258, 3
  %261 = and i1 %259, %260
  br i1 %261, label %265, label %262

262:                                              ; preds = %255, %256
  %263 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %149, align 8
  call void @_ZN3viz17SurfaceAggregator23AppendDeJellyRenderPassEfRKN3gfx4RectEf11SkBlendModePNS_20AggregatedRenderPassENSt3__110unique_ptrIS6_NS8_14default_deleteIS6_EEEE(%"class.viz::SurfaceAggregator"* %0, float %87, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, float %244, i32 %245, %"class.viz::AggregatedRenderPass"* %263, %"class.viz::AggregatedRenderPass"* nonnull %253)
  br label %264

264:                                              ; preds = %243, %262
  br i1 %252, label %265, label %316

265:                                              ; preds = %256, %264
  %266 = phi i64 [ 0, %264 ], [ %246, %256 ]
  %267 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %268 = load i8, i8* %267, align 4, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %308, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = load i32, i32* %53, align 4
  %274 = icmp eq i32 %272, %273
  br i1 %274, label %275, label %290

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = load i32, i32* %54, align 4
  %279 = icmp eq i32 %277, %278
  br i1 %279, label %280, label %290

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = load i32, i32* %55, align 4
  %284 = icmp eq i32 %282, %283
  br i1 %284, label %285, label %290

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = load i32, i32* %56, align 4
  %289 = icmp ne i32 %287, %288
  br label %290

290:                                              ; preds = %285, %280, %275, %270
  %291 = phi i1 [ true, %275 ], [ true, %280 ], [ %289, %285 ], [ true, %270 ]
  %292 = icmp ne i64 %266, 0
  %293 = xor i1 %291, true
  %294 = or i1 %292, %293
  br i1 %294, label %308, label %295

295:                                              ; preds = %290
  %296 = call i8* @_Znwm(i64 272) #17
  %297 = bitcast i8* %296 to %"class.viz::AggregatedRenderPass"*
  call void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"* nonnull %297, i64 1, i64 1) #16
  %298 = ptrtoint i8* %296 to i64
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %215) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %215, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %215, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  store i8 0, i8* %216, align 4
  call void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"* nonnull %17, double 0.000000e+00, double %217) #16
  %299 = call i64 @_ZN3viz20RenderPassIdRemapper15NextAvailableIdEv(%"class.viz::RenderPassIdRemapper"* %218) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %235, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %236, i8 0, i64 16, i1 false)
  call void @_ZN3viz20AggregatedRenderPass6SetNewEN4util6IdTypeIS0_mLm0ELm1EEERKN3gfx4RectES7_RKNS4_9TransformE(%"class.viz::AggregatedRenderPass"* nonnull %297, i64 %299, %"class.gfx::Rect"* nonnull dereferenceable(16) %18, %"class.gfx::Rect"* nonnull dereferenceable(16) %19, %"class.gfx::Transform"* nonnull dereferenceable(68) %17) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219) #16
  %300 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 8
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %301, 3
  br i1 %302, label %306, label %303

303:                                              ; preds = %295
  %304 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %249, i64 0, i32 7
  %305 = load float, float* %304, align 8
  br label %306

306:                                              ; preds = %303, %295
  %307 = phi float [ %305, %303 ], [ 1.000000e+00, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %215) #16
  br label %310

308:                                              ; preds = %265, %290
  %309 = icmp eq i64 %266, 0
  br i1 %309, label %316, label %310

310:                                              ; preds = %306, %308
  %311 = phi float [ %307, %306 ], [ %244, %308 ]
  %312 = phi i32 [ %301, %306 ], [ %245, %308 ]
  %313 = phi i64 [ %298, %306 ], [ %266, %308 ]
  %314 = inttoptr i64 %313 to %"class.viz::AggregatedRenderPass"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222) #16, !noalias !112
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %5, %"class.cc::ListContainerHelper"* %198) #16, !noalias !112
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %223, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %224) #16
  %315 = load i64, i64* %226, align 8, !noalias !112
  store i64 %315, i64* %225, align 8, !alias.scope !112
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222) #16, !noalias !112
  call void @_ZN3viz17SurfaceAggregator28CreateDeJellyRenderPassQuadsEPN2cc13ListContainerINS_8DrawQuadEE8IteratorERKS5_RKN3gfx4RectEfPNS_20AggregatedRenderPassE(%"class.viz::SurfaceAggregator"* %0, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull %15, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull dereferenceable(32) %20, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, float undef, %"class.viz::AggregatedRenderPass"* nonnull %314)
  br label %320

316:                                              ; preds = %264, %308
  %317 = select i1 %252, float %87, float 0.000000e+00
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %228) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %229) #16, !noalias !115
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %6, %"class.cc::ListContainerHelper"* %198) #16, !noalias !115
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %230, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %231) #16
  %318 = load i64, i64* %233, align 8, !noalias !115
  store i64 %318, i64* %232, align 8, !alias.scope !115
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %229) #16, !noalias !115
  %319 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %149, align 8
  call void @_ZN3viz17SurfaceAggregator24CreateDeJellyNormalQuadsEPN2cc13ListContainerINS_8DrawQuadEE8IteratorERKS5_PNS_20AggregatedRenderPassEf(%"class.viz::SurfaceAggregator"* %0, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull %15, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull dereferenceable(32) %21, %"class.viz::AggregatedRenderPass"* %319, float %317)
  br label %320

320:                                              ; preds = %316, %310
  %321 = phi %"class.cc::ListContainerHelper::Iterator"* [ %234, %316 ], [ %227, %310 ]
  %322 = phi i8* [ %228, %316 ], [ %221, %310 ]
  %323 = phi float [ %244, %316 ], [ %311, %310 ]
  %324 = phi i32 [ %245, %316 ], [ %312, %310 ]
  %325 = phi i64 [ 0, %316 ], [ %313, %310 ]
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %321) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %322) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %204) #16, !noalias !109
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %198) #16, !noalias !109
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %205, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %206) #16
  %326 = load i64, i64* %208, align 8, !noalias !109
  store i64 %326, i64* %207, align 8, !alias.scope !109
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %204) #16, !noalias !109
  %327 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %199, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %205) #16
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %211) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #16
  br i1 %327, label %243, label %237

328:                                              ; preds = %237
  %329 = inttoptr i64 %238 to %"class.viz::AggregatedRenderPass"*
  %330 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %149, align 8
  call void @_ZN3viz17SurfaceAggregator23AppendDeJellyRenderPassEfRKN3gfx4RectEf11SkBlendModePNS_20AggregatedRenderPassENSt3__110unique_ptrIS6_NS8_14default_deleteIS6_EEEE(%"class.viz::SurfaceAggregator"* %0, float %87, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, float %240, i32 %239, %"class.viz::AggregatedRenderPass"* %330, %"class.viz::AggregatedRenderPass"* nonnull %329)
  br label %331

331:                                              ; preds = %237, %328
  %332 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %57, align 8
  %333 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %332, i64 0, i32 0, i32 1
  %334 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %333, align 8
  %335 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %332, i64 0, i32 0, i32 2, i32 0, i32 0
  %336 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %335, align 8
  %337 = icmp ult %"class.std::__1::unique_ptr.230"* %334, %336
  br i1 %337, label %338, label %345

338:                                              ; preds = %331
  %339 = bitcast %"class.std::__1::unique_ptr.230"* %14 to i64*
  %340 = load i64, i64* %339, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %149, align 8
  %341 = bitcast %"class.std::__1::unique_ptr.230"* %334 to i64*
  store i64 %340, i64* %341, align 8
  %342 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %334, i64 1
  %343 = ptrtoint %"class.std::__1::unique_ptr.230"* %342 to i64
  %344 = bitcast %"class.std::__1::unique_ptr.230"** %333 to i64*
  store i64 %343, i64* %344, align 8
  br label %346

345:                                              ; preds = %331
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %332, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %14) #16
  br label %346

346:                                              ; preds = %338, %345
  %347 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %149, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %149, align 8
  %348 = icmp eq %"class.viz::AggregatedRenderPass"* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %346
  %350 = bitcast %"class.viz::AggregatedRenderPass"* %347 to i8*
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %347) #16
  call void @_ZdlPv(i8* %350) #17
  br label %351

351:                                              ; preds = %346, %349
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #16
  %352 = icmp eq %"class.viz::AggregatedRenderPass"* %137, null
  br i1 %352, label %355, label %353

353:                                              ; preds = %351
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %137) #16
  %354 = bitcast %"class.viz::AggregatedRenderPass"* %137 to i8*
  call void @_ZdlPv(i8* %354) #17
  br label %355

355:                                              ; preds = %353, %351, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #16
  br label %356

356:                                              ; preds = %355, %50
  %357 = icmp eq i8* %32, null
  br i1 %357, label %362, label %358

358:                                              ; preds = %356
  %359 = load i8, i8* %32, align 1
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %32, i8* %33, i64 %34) #16
  br label %362

362:                                              ; preds = %356, %358, %361
  ret void
}

declare void @_ZN3viz22SurfaceAllocationGroup29TakeAggregatedLatencyInfoUpToEPNS_7SurfaceEPNSt3__16vectorIN2ui11LatencyInfoENS3_9allocatorIS6_EEEE(%"class.viz::SurfaceAllocationGroup"*, %"class.viz::Surface"*, %"class.std::__1::vector.402"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui11LatencyInfo6VerifyERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEPKc(%"class.std::__1::vector.402"* dereferenceable(24), i8*) local_unnamed_addr #1

declare void @_ZN3viz15AggregatedFrameC1EOS0_(%"class.viz::AggregatedFrame"*, %"class.viz::AggregatedFrame"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz15AggregatedFrameD1Ev(%"class.viz::AggregatedFrame"*) unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3viz20RenderPassIdRemapper19ClearUnusedMappingsEv(%"class.viz::RenderPassIdRemapper"*) local_unnamed_addr #1

declare void @_ZN3viz23DisplayResourceProvider12DestroyChildEi(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator23SetFullDamageForSurfaceERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0
  %4 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #16
  %5 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %4, 0
  %6 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %4, 1
  %7 = icmp eq %"struct.std::__1::pair.212"* %5, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.212"* %5, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1
  store i64 0, i64* %13, align 8
  br label %14

14:                                               ; preds = %2, %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.viz::SurfaceAggregator"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 6, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 436, i1 false) #16
  %5 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 6, i32 3
  %6 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional.188", %"class.absl::optional.188"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %13, label %18, label %15

15:                                               ; preds = %9
  %16 = bitcast %"struct.gfx::HDRStaticMetadata"* %14 to i8*
  %17 = bitcast %"struct.gfx::HDRStaticMetadata"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #16
  br label %21

18:                                               ; preds = %9
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %14, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %10) #16
  store i8 1, i8* %11, align 8
  br label %21

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional.188", %"class.absl::optional.188"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  br label %21

21:                                               ; preds = %15, %18, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz17SurfaceAggregator22SetMaxRenderTargetSizeEi(%"class.viz::SurfaceAggregator"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 7
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz17SurfaceAggregator43NotifySurfaceDamageAndCheckForDisplayDamageERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 15, i32 0
  %4 = tail call { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #16
  %5 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %4, 0
  %6 = extractvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %4, 1
  %7 = icmp eq %"struct.std::__1::pair.212"* %6, %5
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 0
  %10 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %9, align 8
  %11 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %10, %"class.viz::SurfaceId"* dereferenceable(32) %1) #16
  %12 = icmp eq %"class.viz::Surface"* %11, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %8
  %14 = tail call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface28GetActiveOrInterpolatedFrameEv(%"class.viz::Surface"* nonnull %11) #16
  %15 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %15, align 8
  %17 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %14, i64 0, i32 1, i32 0, i32 1
  %18 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %17, align 8
  %19 = icmp eq %"struct.viz::TransferableResource"* %16, %18
  br i1 %19, label %20, label %100

20:                                               ; preds = %13
  tail call void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %1)
  br label %100

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair.316"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = ptrtoint %"struct.std::__1::pair.316"* %23 to i64
  %28 = sub i64 %26, %27
  %29 = icmp eq i64 %28, 0
  %30 = inttoptr i64 %26 to %"struct.std::__1::pair.316"*
  br i1 %29, label %61, label %31

31:                                               ; preds = %21
  %32 = ashr exact i64 %28, 5
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %35 = load i32, i32* %33, align 4
  %36 = load i32, i32* %34, align 4
  br label %37

37:                                               ; preds = %55, %31
  %38 = phi %"struct.std::__1::pair.316"* [ %23, %31 ], [ %57, %55 ]
  %39 = phi i64 [ %32, %31 ], [ %56, %55 ]
  %40 = lshr i64 %39, 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %38, i64 %40
  %42 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %41, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %38, i64 %40, i32 0, i32 1
  %44 = load i32, i32* %42, align 4
  %45 = icmp ult i32 %44, %35
  br i1 %45, label %51, label %46

46:                                               ; preds = %37
  %47 = icmp ult i32 %35, %44
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %43, align 4
  %50 = icmp ult i32 %49, %36
  br i1 %50, label %51, label %55

51:                                               ; preds = %48, %37
  %52 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %41, i64 1
  %53 = xor i64 %40, -1
  %54 = add i64 %39, %53
  br label %55

55:                                               ; preds = %51, %48, %46
  %56 = phi i64 [ %54, %51 ], [ %40, %48 ], [ %40, %46 ]
  %57 = phi %"struct.std::__1::pair.316"* [ %52, %51 ], [ %38, %48 ], [ %38, %46 ]
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %37

59:                                               ; preds = %55
  %60 = ptrtoint %"struct.std::__1::pair.316"* %57 to i64
  br label %61

61:                                               ; preds = %59, %21
  %62 = phi i64 [ %60, %59 ], [ %27, %21 ]
  %63 = phi %"struct.std::__1::pair.316"* [ %57, %59 ], [ %23, %21 ]
  %64 = icmp eq %"struct.std::__1::pair.316"* %63, %30
  br i1 %64, label %82, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %63, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %63, i64 0, i32 0, i32 1
  %70 = load i32, i32* %66, align 4
  %71 = load i32, i32* %68, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %82, label %73

73:                                               ; preds = %65
  %74 = icmp ult i32 %71, %70
  br i1 %74, label %79, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %67, align 4
  %77 = load i32, i32* %69, align 4
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %82, label %79

79:                                               ; preds = %75, %73
  %80 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %63, i64 1
  %81 = ptrtoint %"struct.std::__1::pair.316"* %80 to i64
  br label %82

82:                                               ; preds = %61, %65, %75, %79
  %83 = phi i64 [ %81, %79 ], [ %62, %61 ], [ %62, %75 ], [ %62, %65 ]
  %84 = inttoptr i64 %83 to %"struct.std::__1::pair.316"*
  %85 = icmp eq %"struct.std::__1::pair.316"* %63, %84
  %86 = select i1 %85, %"struct.std::__1::pair.316"* %30, %"struct.std::__1::pair.316"* %63
  %87 = icmp eq %"struct.std::__1::pair.316"* %86, %30
  br i1 %87, label %100, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %86, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %86, i64 0, i32 1, i32 0, i32 1
  %92 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %91, align 8
  %93 = icmp eq %"class.viz::SurfaceRange"* %90, %92
  br i1 %93, label %100, label %96

94:                                               ; preds = %96
  %95 = icmp eq %"class.viz::SurfaceRange"* %99, %92
  br i1 %95, label %100, label %96

96:                                               ; preds = %88, %94
  %97 = phi %"class.viz::SurfaceRange"* [ %99, %94 ], [ %90, %88 ]
  %98 = tail call zeroext i1 @_ZNK3viz12SurfaceRange18IsInRangeInclusiveERKNS_9SurfaceIdE(%"class.viz::SurfaceRange"* %97, %"class.viz::SurfaceId"* dereferenceable(32) %1) #16
  %99 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %97, i64 1
  br i1 %98, label %100, label %94

100:                                              ; preds = %94, %96, %88, %82, %20, %13, %8
  %101 = phi i1 [ true, %8 ], [ true, %13 ], [ true, %20 ], [ false, %82 ], [ false, %88 ], [ false, %94 ], [ true, %96 ]
  ret i1 %101
}

declare zeroext i1 @_ZNK3viz12SurfaceRange18IsInRangeInclusiveERKNS_9SurfaceIdE(%"class.viz::SurfaceRange"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz17SurfaceAggregator17HasFrameAnnotatorEv(%"class.viz::SurfaceAggregator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %3 = load %"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::SurfaceAggregator::FrameAnnotator"** %2, align 8
  %4 = icmp ne %"class.viz::SurfaceAggregator::FrameAnnotator"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator17SetFrameAnnotatorENSt3__110unique_ptrINS0_14FrameAnnotatorENS1_14default_deleteIS3_EEEE(%"class.viz::SurfaceAggregator"* nocapture, %"class.viz::SurfaceAggregator::FrameAnnotator"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.viz::SurfaceAggregator::FrameAnnotator"* %1 to i64
  %4 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 33
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.334"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::SurfaceAggregator::FrameAnnotator"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.334"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.viz::SurfaceAggregator::FrameAnnotator"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.viz::SurfaceAggregator::FrameAnnotator"* %6 to void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)***
  %11 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)**, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %11, i64 1
  %13 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %12, align 8
  tail call void %13(%"class.viz::SurfaceAggregator::FrameAnnotator"* nonnull %6) #16
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator21DestroyFrameAnnotatorEv(%"class.viz::SurfaceAggregator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 33, i32 0, i32 0, i32 0
  %3 = load %"class.viz::SurfaceAggregator::FrameAnnotator"*, %"class.viz::SurfaceAggregator::FrameAnnotator"** %2, align 8
  store %"class.viz::SurfaceAggregator::FrameAnnotator"* null, %"class.viz::SurfaceAggregator::FrameAnnotator"** %2, align 8
  %4 = icmp eq %"class.viz::SurfaceAggregator::FrameAnnotator"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.viz::SurfaceAggregator::FrameAnnotator"* %3 to void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)***
  %7 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)**, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %7, i64 1
  %9 = load void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)*, void (%"class.viz::SurfaceAggregator::FrameAnnotator"*)** %8, align 8
  tail call void %9(%"class.viz::SurfaceAggregator::FrameAnnotator"* nonnull %3) #16
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

declare void @_ZNK3gfx9Transform14TransformPointEPNS_6PointFE(%"class.gfx::Transform"*, %"class.gfx::PointF"*) local_unnamed_addr #1

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #1

declare void @_ZNK3gfx20DelegatedInkMetadata8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::DelegatedInkMetadata"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3viz13DeJellyActiveEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator20SetLastFrameHadJellyEb(%"class.viz::SurfaceAggregator"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 37
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = or i1 %6, %1
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %10 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %10, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %12, i64 -1, i32 0, i32 0, i32 0
  %14 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %13, align 8
  %15 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %14, i64 0, i32 0, i32 1
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  %17 = bitcast %"class.viz::AggregatedRenderPass"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  br label %18

18:                                               ; preds = %2, %8
  store i8 %3, i8* %4, align 8
  ret void
}

declare float @_ZN3viz18DeJellyScreenWidthEv() local_unnamed_addr #1

declare %"class.viz::AggregatedRenderPass"* @_ZNK3viz20AggregatedRenderPass4CopyEN4util6IdTypeIS0_mLm0ELm1EEE(%"class.viz::AggregatedRenderPass"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator23AppendDeJellyRenderPassEfRKN3gfx4RectEf11SkBlendModePNS_20AggregatedRenderPassENSt3__110unique_ptrIS6_NS8_14default_deleteIS6_EEEE(%"class.viz::SurfaceAggregator"* nocapture readonly, float, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, i32, %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.230", align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::MaskFilterInfo", align 4
  %11 = alloca %"class.absl::optional.268", align 4
  %12 = alloca %"class.gfx::RectF", align 4
  %13 = alloca %"class.gfx::Size", align 4
  %14 = alloca %"class.gfx::Vector2dF", align 4
  %15 = alloca %"class.gfx::PointF", align 4
  %16 = alloca %"class.gfx::RectF", align 4
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %"class.gfx::Transform", align 4
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.viz::AggregatedRenderPass"* %6, %"class.viz::AggregatedRenderPass"** %19, align 8
  %20 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0
  %21 = tail call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %20) #16
  %22 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %22) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %23 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0, i32 1
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 0
  %25 = bitcast %"class.gfx::MaskFilterInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.gfx::MaskFilterInfo"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 0, i64 52, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #16
  store i8 1, i8* %26, align 4
  %28 = getelementptr inbounds %"class.absl::optional.268", %"class.absl::optional.268"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %"class.gfx::Rect"* %28 to i8*
  %30 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 16, i1 false) #16
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %21, %"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.gfx::Rect"* dereferenceable(16) %24, %"class.gfx::Rect"* dereferenceable(16) %24, %"class.gfx::MaskFilterInfo"* nonnull dereferenceable(52) %10, %"class.absl::optional.268"* nonnull dereferenceable(20) %11, i1 zeroext false, float %3, i32 %4, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %25) #16
  %31 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 11, i32 0, i32 0
  %32 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %31, i64 8, i64 152) #16
  %33 = bitcast i8* %32 to %"class.viz::AggregatedRenderPassDrawQuad"*
  call void @_ZN3viz28AggregatedRenderPassDrawQuadC1Ev(%"class.viz::AggregatedRenderPassDrawQuad"* %33) #16
  %34 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 1, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.gfx::RectF"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #16
  %37 = bitcast %"class.gfx::Size"* %13 to i8*
  %38 = bitcast %"class.gfx::RectF"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  %39 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %13, i64 0, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %13, i64 0, i32 1
  store i32 0, i32* %40, align 4
  %41 = bitcast %"class.gfx::Vector2dF"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %14, i64 0, i32 0
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %14, i64 0, i32 1
  store float 0.000000e+00, float* %43, align 4
  %44 = bitcast %"class.gfx::PointF"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %15, i64 0, i32 0
  store float 0.000000e+00, float* %45, align 4
  %46 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %15, i64 0, i32 1
  store float 0.000000e+00, float* %46, align 4
  %47 = bitcast %"class.gfx::RectF"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %6, i64 0, i32 0, i32 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %49, 0
  %53 = select i1 %52, i32 %49, i32 0
  %54 = sitofp i32 %53 to float
  %55 = icmp sgt i32 %51, 0
  %56 = select i1 %55, i32 %51, i32 0
  %57 = sitofp i32 %56 to float
  %58 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %16, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %58, align 4
  %59 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %16, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %59, align 4
  %60 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %16, i64 0, i32 1, i32 0
  store float %54, float* %60, align 4
  %61 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %16, i64 0, i32 1, i32 1
  store float %57, float* %61, align 4
  call void @_ZN3viz28AggregatedRenderPassDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_N4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEENS9_INS_20ResourceIdTypeMarkerEjLj0ELj1EEERKNS4_5RectFERKNS4_4SizeERKNS4_9Vector2dFERKNS4_6PointFESG_bf(%"class.viz::AggregatedRenderPassDrawQuad"* %33, %"class.viz::SharedQuadState"* %21, %"class.gfx::Rect"* dereferenceable(16) %24, %"class.gfx::Rect"* dereferenceable(16) %24, i64 %35, i32 0, %"class.gfx::RectF"* nonnull dereferenceable(16) %12, %"class.gfx::Size"* nonnull dereferenceable(8) %13, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %14, %"class.gfx::PointF"* nonnull dereferenceable(8) %15, %"class.gfx::RectF"* nonnull dereferenceable(16) %16, i1 zeroext false, float 1.000000e+00) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #16
  %62 = bitcast %"class.gfx::Transform"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %62) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0, i32 1
  store i8 0, i8* %63, align 4
  %64 = fpext float %1 to double
  call void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"* nonnull %17, double 0.000000e+00, double %64) #16
  %65 = bitcast %"class.gfx::Transform"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %65) #16
  %66 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %18, i64 0, i32 0
  %67 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0
  %68 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %21, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %66, %class.SkMatrix44* nonnull dereferenceable(68) %67, %class.SkMatrix44* dereferenceable(68) %68) #16
  %69 = bitcast %"class.viz::SharedQuadState"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 4 %65, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %65) #16
  %70 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %71 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %71, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %71, i64 0, i32 0, i32 2, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %74, align 8
  %76 = icmp ult %"class.std::__1::unique_ptr.230"* %73, %75
  br i1 %76, label %77, label %84

77:                                               ; preds = %7
  %78 = bitcast %"class.std::__1::unique_ptr.230"* %8 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %19, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.230"* %73 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %73, i64 1
  %82 = ptrtoint %"class.std::__1::unique_ptr.230"* %81 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.230"** %72 to i64*
  store i64 %82, i64* %83, align 8
  br label %85

84:                                               ; preds = %7
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"* %71, %"class.std::__1::unique_ptr.230"* nonnull dereferenceable(8) %8) #16
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %62) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %22) #16
  %86 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %19, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %19, align 8
  %87 = icmp eq %"class.viz::AggregatedRenderPass"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %86) #16
  %89 = bitcast %"class.viz::AggregatedRenderPass"* %86 to i8*
  call void @_ZdlPv(i8* %89) #17
  br label %90

90:                                               ; preds = %85, %88
  ret void
}

declare void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"*, double, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator28CreateDeJellyRenderPassQuadsEPN2cc13ListContainerINS_8DrawQuadEE8IteratorERKS5_RKN3gfx4RectEfPNS_20AggregatedRenderPassE(%"class.viz::SurfaceAggregator"* nocapture readonly, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* dereferenceable(32), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, %"class.viz::AggregatedRenderPass"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast i8** %12 to %"class.viz::DrawQuad"**
  %14 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %13, align 8
  %15 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %14, i64 0, i32 6
  %16 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %15, align 8
  %17 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !28

20:                                               ; preds = %6
  tail call void @llvm.trap() #16
  unreachable

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %23, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = tail call float @_ZN3viz16MaxDeJellyHeightEv() #16
  %29 = fptosi float %28 to i32
  %30 = sub i32 0, %29
  %31 = load i8, i8* %17, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34, !prof !28

33:                                               ; preds = %27
  tail call void @llvm.trap() #16
  unreachable

34:                                               ; preds = %21, %27
  %35 = phi i32 [ %30, %27 ], [ 0, %21 ]
  %36 = load i32, i32* %22, align 4
  %37 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, %36
  %40 = load i32, i32* %24, align 4
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, %40
  %44 = icmp slt i32 %39, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %34
  %46 = tail call float @_ZN3viz16MaxDeJellyHeightEv() #16
  %47 = fptosi float %46 to i32
  %48 = sub i32 0, %47
  br label %49

49:                                               ; preds = %34, %45
  %50 = phi i32 [ %48, %45 ], [ 0, %34 ]
  %51 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #16
  %52 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 2
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %56, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to float
  %60 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 2, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 2, i32 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 2, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  store float %59, float* %52, align 4
  store float %62, float* %53, align 4
  %67 = icmp sgt i32 %64, 0
  %68 = select i1 %67, i32 %64, i32 0
  %69 = sitofp i32 %68 to float
  store float %69, float* %54, align 4
  %70 = icmp sgt i32 %66, 0
  %71 = select i1 %70, i32 %66, i32 0
  %72 = sitofp i32 %71 to float
  store float %72, float* %55, align 4
  %73 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %14, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 3
  br i1 %75, label %76, label %122

76:                                               ; preds = %49
  %77 = tail call %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %14) #16
  %78 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %0, i64 0, i32 20
  %81 = load %"class.std::__1::vector.228"*, %"class.std::__1::vector.228"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %81, i64 0, i32 0, i32 1
  %85 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %84, align 8
  %86 = icmp eq %"class.std::__1::unique_ptr.230"* %83, %85
  br i1 %86, label %122, label %89

87:                                               ; preds = %89
  %88 = icmp eq %"class.std::__1::unique_ptr.230"* %96, %85
  br i1 %88, label %122, label %89

89:                                               ; preds = %76, %87
  %90 = phi %"class.std::__1::unique_ptr.230"* [ %96, %87 ], [ %83, %76 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %91, align 8
  %93 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %92, i64 0, i32 1, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, %79
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %90, i64 1
  br i1 %95, label %97, label %87

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %92, i64 0, i32 0, i32 3
  %99 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %99) #16
  %100 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %100, align 16
  %101 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %102, align 16
  %103 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %103, align 16
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  store i32 16, i32* %104, align 4
  %105 = call { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* %98, %"class.gfx::Rect"* dereferenceable(16) %56, %class.SkMatrix* nonnull dereferenceable(40) %9) #16
  %106 = extractvalue { i64, i64 } %105, 0
  %107 = trunc i64 %106 to i32
  %108 = lshr i64 %106, 32
  %109 = trunc i64 %108 to i32
  %110 = extractvalue { i64, i64 } %105, 1
  %111 = sitofp i32 %107 to float
  %112 = sitofp i32 %109 to float
  %113 = trunc i64 %110 to i32
  %114 = lshr i64 %110, 32
  %115 = trunc i64 %114 to i32
  %116 = icmp sgt i32 %113, 0
  %117 = select i1 %116, i32 %113, i32 0
  %118 = sitofp i32 %117 to float
  %119 = icmp sgt i32 %115, 0
  %120 = select i1 %119, i32 %115, i32 0
  %121 = sitofp i32 %120 to float
  store float %111, float* %52, align 4
  store float %112, float* %53, align 4
  store float %118, float* %54, align 4
  store float %121, float* %55, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %99) #16
  br label %122

122:                                              ; preds = %87, %76, %97, %49
  %123 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 0
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %123, %"class.gfx::RectF"* nonnull %8) #16
  %124 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #16
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %126 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %8) #16
  %127 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %128 = extractvalue { i64, i64 } %126, 0
  store i64 %128, i64* %127, align 8
  %129 = extractvalue { i64, i64 } %126, 1
  store i64 %129, i64* %125, align 8
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %11, i32 0, i32 %35, i32 0, i32 %50) #16
  %130 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0
  %131 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 0
  %132 = call { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16) %131, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #16
  %133 = extractvalue { i64, i64 } %132, 0
  %134 = extractvalue { i64, i64 } %132, 1
  %135 = bitcast %"class.viz::AggregatedRenderPass"* %5 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 0, i32 1
  %137 = bitcast %"class.gfx::Size"* %136 to i64*
  store i64 %134, i64* %137, align 8
  %138 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %5, i64 0, i32 0, i32 1
  %139 = bitcast %"class.gfx::Rect"* %138 to i8*
  %140 = bitcast %"class.viz::AggregatedRenderPass"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 4 %140, i64 16, i1 false)
  %141 = call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %130) #16
  %142 = bitcast %"class.viz::SharedQuadState"* %141 to i8*
  %143 = bitcast %"class.viz::SharedQuadState"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 213, i1 false)
  %144 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %16, i64 0, i32 8
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 3
  br i1 %146, label %150, label %147

147:                                              ; preds = %122
  %148 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %141, i64 0, i32 7
  store float 1.000000e+00, float* %148, align 8
  %149 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %141, i64 0, i32 8
  store i32 3, i32* %149, align 4
  br label %150

150:                                              ; preds = %122, %147
  %151 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %141, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %152 = load i8, i8* %151, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %155, !prof !28

154:                                              ; preds = %150
  call void @llvm.trap() #16
  unreachable

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %141, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* %156, i32 0, i32 %35, i32 0, i32 %50) #16
  %157 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0
  %158 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %7 to i8*
  %159 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 1
  %160 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  br label %161

161:                                              ; preds = %175, %155
  %162 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %13, align 8
  %163 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %162, i64 0, i32 6
  %164 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %163, align 8
  %165 = icmp eq %"class.viz::SharedQuadState"* %164, %16
  br i1 %165, label %166, label %179

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %162, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 4
  br i1 %169, label %170, label %173

170:                                              ; preds = %166
  %171 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %162) #16
  %172 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::AggregatedRenderPass"* %5, %"class.viz::AggregatedRenderPassDrawQuad"* %171) #16
  br label %175

173:                                              ; preds = %166
  %174 = call %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"* %5, %"class.viz::DrawQuad"* %162) #16
  br label %175

175:                                              ; preds = %173, %170
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %7, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %157) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #16
  %176 = load i64, i64* %159, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %159, align 8
  %178 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatoreqERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %157, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %160) #16
  br i1 %178, label %179, label %161

179:                                              ; preds = %161, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator24CreateDeJellyNormalQuadsEPN2cc13ListContainerINS_8DrawQuadEE8IteratorERKS5_PNS_20AggregatedRenderPassEf(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* dereferenceable(32), %"class.viz::AggregatedRenderPass"*, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast i8** %9 to %"class.viz::DrawQuad"**
  %11 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %10, align 8
  %12 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %11, i64 0, i32 6
  %13 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %12, align 8
  %14 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %3, i64 0, i32 0
  %15 = tail call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %14) #16
  %16 = bitcast %"class.viz::SharedQuadState"* %15 to i8*
  %17 = bitcast %"class.viz::SharedQuadState"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 213, i1 false)
  %18 = fcmp une float %4, 0.000000e+00
  br i1 %18, label %19, label %27

19:                                               ; preds = %5
  %20 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %20) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz12_GLOBAL__N_128CalculateQuadSpaceDamageRectERKN3gfx9TransformES4_RKNS1_4RectEPS5_.inverse_transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #16
  %21 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %21, align 4
  %22 = fpext float %4 to double
  call void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"* nonnull %7, double 0.000000e+00, double %22) #16
  %23 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0
  %26 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %15, i64 0, i32 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %24, %class.SkMatrix44* nonnull dereferenceable(68) %25, %class.SkMatrix44* dereferenceable(68) %26) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 4 %23, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %20) #16
  br label %27

27:                                               ; preds = %19, %5
  %28 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0
  %29 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %46, %27
  %33 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %10, align 8
  %34 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %33, i64 0, i32 6
  %35 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %34, align 8
  %36 = icmp eq %"class.viz::SharedQuadState"* %35, %13
  br i1 %36, label %37, label %50

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %33, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %33) #16
  %43 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::AggregatedRenderPass"* %3, %"class.viz::AggregatedRenderPassDrawQuad"* %42) #16
  br label %46

44:                                               ; preds = %37
  %45 = call %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"* %3, %"class.viz::DrawQuad"* %33) #16
  br label %46

46:                                               ; preds = %44, %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %28) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  %47 = load i64, i64* %30, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %30, align 8
  %49 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatoreqERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %28, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %31) #16
  br i1 %49, label %50, label %32

50:                                               ; preds = %32, %46
  ret void
}

declare float @_ZN3viz16MaxDeJellyHeightEv() local_unnamed_addr #1

declare { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx10UnionRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceAggregator36AppendDeJellyQuadsForSharedQuadStateEPN2cc13ListContainerINS_8DrawQuadEE8IteratorERKS5_PNS_20AggregatedRenderPassEPKNS_15SharedQuadStateE(%"class.viz::SurfaceAggregator"* nocapture readnone, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* dereferenceable(32), %"class.viz::AggregatedRenderPass"*, %"class.viz::SharedQuadState"* readnone) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast i8** %7 to %"class.viz::DrawQuad"**
  %9 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 0
  %10 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  %11 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %1, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %27, %5
  %14 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %8, align 8
  %15 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %14, i64 0, i32 6
  %16 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %15, align 8
  %17 = icmp eq %"class.viz::SharedQuadState"* %16, %4
  br i1 %17, label %18, label %31

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %14, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %14) #16
  %24 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::AggregatedRenderPass"* %3, %"class.viz::AggregatedRenderPassDrawQuad"* %23) #16
  br label %27

25:                                               ; preds = %18
  %26 = call %"class.viz::DrawQuad"* @_ZN3viz20AggregatedRenderPass25CopyFromAndAppendDrawQuadEPKNS_8DrawQuadE(%"class.viz::AggregatedRenderPass"* %3, %"class.viz::DrawQuad"* %14) #16
  br label %27

27:                                               ; preds = %25, %22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %11, align 8
  %30 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatoreqERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %9, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %12) #16
  br i1 %30, label %31, label %13

31:                                               ; preds = %27, %13
  ret void
}

declare %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

declare %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz20AggregatedRenderPass35CopyFromAndAppendRenderPassDrawQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPassDrawQuad"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatoreqERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_NS4_17SurfaceAggregator18RenderPassMapEntryEEENS8_9allocatorISF_EEEEE15sort_and_uniqueENS8_11__wrap_iterIPSF_EESM_(%"class.base::internal::flat_tree.373"*, %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare", align 1
  %5 = ptrtoint %"struct.std::__1::pair.376"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare", %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.376"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #16
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %1, %"struct.std::__1::pair.376"* %2, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.376"* null, i64 0) #16
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.376"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %1, %"struct.std::__1::pair.376"* %2, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.376"* nonnull %24, i64 %15) #16
  call void @_ZdlPv(i8* nonnull %17) #17
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"struct.std::__1::pair.376"* %1, %2
  br i1 %26, label %74, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.std::__1::pair.376"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %28, i64 1
  %30 = icmp eq %"struct.std::__1::pair.376"* %29, %2
  br i1 %30, label %74, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %29, i64 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"struct.std::__1::pair.376"* %28 to i64
  %39 = icmp eq %"struct.std::__1::pair.376"* %28, %2
  br i1 %39, label %74, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %28, i64 2
  %42 = icmp eq %"struct.std::__1::pair.376"* %41, %2
  br i1 %42, label %70, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %28, i64 1
  br label %45

45:                                               ; preds = %63, %43
  %46 = phi %"struct.std::__1::pair.376"* [ %67, %63 ], [ %28, %43 ]
  %47 = phi %"struct.std::__1::pair.376"* [ %65, %63 ], [ %41, %43 ]
  %48 = phi %"struct.std::__1::pair.376"* [ %47, %63 ], [ %44, %43 ]
  %49 = phi i64 [ %64, %63 ], [ %38, %43 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %46, i64 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %55, label %63

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %46, i64 1
  %57 = ptrtoint %"struct.std::__1::pair.376"* %56 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %56, i64 0, i32 0, i32 0, i32 0
  store i64 %53, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %48, i64 1, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %46, i64 1, i32 1
  %61 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %60 to i8*
  %62 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 9, i1 false) #16
  br label %63

63:                                               ; preds = %55, %45
  %64 = phi i64 [ %49, %45 ], [ %57, %55 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %47, i64 1
  %66 = icmp eq %"struct.std::__1::pair.376"* %65, %2
  %67 = inttoptr i64 %64 to %"struct.std::__1::pair.376"*
  br i1 %66, label %68, label %45

68:                                               ; preds = %63
  %69 = inttoptr i64 %64 to %"struct.std::__1::pair.376"*
  br label %70

70:                                               ; preds = %68, %40
  %71 = phi %"struct.std::__1::pair.376"* [ %28, %40 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %71, i64 1
  %73 = ptrtoint %"struct.std::__1::pair.376"* %72 to i64
  br label %74

74:                                               ; preds = %27, %25, %37, %70
  %75 = phi i64 [ %73, %70 ], [ %38, %37 ], [ %5, %25 ], [ %5, %27 ]
  %76 = inttoptr i64 %75 to %"struct.std::__1::pair.376"*
  %77 = icmp eq %"struct.std::__1::pair.376"* %76, %2
  br i1 %77, label %97, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.base::internal::flat_tree.373", %"class.base::internal::flat_tree.373"* %0, i64 0, i32 0, i32 0, i32 1
  %80 = load %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"** %79, align 8
  %81 = icmp eq %"struct.std::__1::pair.376"* %80, %2
  br i1 %81, label %95, label %82

82:                                               ; preds = %78, %82
  %83 = phi %"struct.std::__1::pair.376"* [ %93, %82 ], [ %76, %78 ]
  %84 = phi %"struct.std::__1::pair.376"* [ %92, %82 ], [ %2, %78 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %83, i64 0, i32 0, i32 0, i32 0
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %84, i64 0, i32 1
  %89 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %83, i64 0, i32 1
  %90 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %89 to i8*
  %91 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 9, i1 false) #16
  %92 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %84, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %83, i64 1
  %94 = icmp eq %"struct.std::__1::pair.376"* %92, %80
  br i1 %94, label %95, label %82

95:                                               ; preds = %82, %78
  %96 = phi %"struct.std::__1::pair.376"* [ %76, %78 ], [ %93, %82 ]
  store %"struct.std::__1::pair.376"* %96, %"struct.std::__1::pair.376"** %79, align 8
  br label %97

97:                                               ; preds = %74, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.376"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %24 [
    i64 0, label %132
    i64 1, label %132
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %1, i64 -1, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %132

13:                                               ; preds = %7
  store i64 %9, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %1, i64 -1, i32 1
  %16 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %14 to i8*
  %21 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 9, i1 false) #16
  %22 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %15 to i64*
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %1, i64 -1, i32 1, i32 1
  store i8 %19, i8* %23, align 8
  br label %132

24:                                               ; preds = %6
  %25 = icmp slt i64 %3, 1
  br i1 %25, label %26, label %63

26:                                               ; preds = %24
  %27 = icmp eq %"struct.std::__1::pair.376"* %0, %1
  br i1 %27, label %132, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 1
  %30 = icmp eq %"struct.std::__1::pair.376"* %29, %1
  br i1 %30, label %132, label %31

31:                                               ; preds = %28, %48
  %32 = phi %"struct.std::__1::pair.376"* [ %54, %48 ], [ %29, %28 ]
  %33 = phi %"struct.std::__1::pair.376"* [ %32, %48 ], [ %0, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %33, i64 1, i32 1, i32 0
  %37 = bitcast %"class.viz::CompositorRenderPass"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %33, i64 1, i32 1, i32 1
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq %"struct.std::__1::pair.376"* %32, %0
  br i1 %41, label %48, label %42

42:                                               ; preds = %31, %56
  %43 = phi %"struct.std::__1::pair.376"* [ %44, %56 ], [ %32, %31 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %43, i64 -1
  %45 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %35, %46
  br i1 %47, label %56, label %48

48:                                               ; preds = %56, %42, %31
  %49 = phi %"struct.std::__1::pair.376"* [ %0, %31 ], [ %43, %42 ], [ %0, %56 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %49, i64 0, i32 0, i32 0, i32 0
  store i64 %35, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %49, i64 0, i32 1, i32 0
  %52 = bitcast %"class.viz::CompositorRenderPass"** %51 to i64*
  store i64 %38, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %49, i64 0, i32 1, i32 1
  store i8 %40, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %32, i64 1
  %55 = icmp eq %"struct.std::__1::pair.376"* %54, %1
  br i1 %55, label %132, label %31

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %43, i64 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %43, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %43, i64 0, i32 1
  %60 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %59 to i8*
  %61 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 9, i1 false) #16
  %62 = icmp eq %"struct.std::__1::pair.376"* %44, %0
  br i1 %62, label %48, label %42

63:                                               ; preds = %24
  %64 = lshr i64 %3, 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 %64
  %66 = icmp sgt i64 %3, %5
  br i1 %66, label %130, label %67

67:                                               ; preds = %63
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.376"* %0, %"struct.std::__1::pair.376"* %65, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %64, %"struct.std::__1::pair.376"* %4)
  %68 = sub nsw i64 %3, %64
  %69 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 %64
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.376"* %65, %"struct.std::__1::pair.376"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %68, %"struct.std::__1::pair.376"* %69)
  %70 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 %3
  br label %73

71:                                               ; preds = %112
  %72 = icmp eq %"struct.std::__1::pair.376"* %113, %70
  br i1 %72, label %132, label %117

73:                                               ; preds = %67, %112
  %74 = phi %"struct.std::__1::pair.376"* [ %114, %112 ], [ %4, %67 ]
  %75 = phi %"struct.std::__1::pair.376"* [ %113, %112 ], [ %69, %67 ]
  %76 = phi %"struct.std::__1::pair.376"* [ %115, %112 ], [ %0, %67 ]
  %77 = icmp eq %"struct.std::__1::pair.376"* %75, %70
  br i1 %77, label %78, label %93

78:                                               ; preds = %73
  %79 = icmp eq %"struct.std::__1::pair.376"* %74, %69
  br i1 %79, label %132, label %80

80:                                               ; preds = %78, %80
  %81 = phi %"struct.std::__1::pair.376"* [ %90, %80 ], [ %74, %78 ]
  %82 = phi %"struct.std::__1::pair.376"* [ %91, %80 ], [ %76, %78 ]
  %83 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %82, i64 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %81, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %82, i64 0, i32 1
  %88 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %87 to i8*
  %89 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 9, i1 false) #16
  %90 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %81, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %82, i64 1
  %92 = icmp eq %"struct.std::__1::pair.376"* %90, %69
  br i1 %92, label %132, label %80

93:                                               ; preds = %73
  %94 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %75, i64 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %74, i64 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %95, %97
  %99 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %76, i64 0, i32 0, i32 0, i32 0
  br i1 %98, label %100, label %106

100:                                              ; preds = %93
  store i64 %95, i64* %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %75, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %76, i64 0, i32 1
  %103 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %102 to i8*
  %104 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 9, i1 false) #16
  %105 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %75, i64 1
  br label %112

106:                                              ; preds = %93
  store i64 %97, i64* %99, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %74, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %76, i64 0, i32 1
  %109 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %108 to i8*
  %110 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 9, i1 false) #16
  %111 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %74, i64 1
  br label %112

112:                                              ; preds = %106, %100
  %113 = phi %"struct.std::__1::pair.376"* [ %105, %100 ], [ %75, %106 ]
  %114 = phi %"struct.std::__1::pair.376"* [ %74, %100 ], [ %111, %106 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %76, i64 1
  %116 = icmp eq %"struct.std::__1::pair.376"* %114, %69
  br i1 %116, label %71, label %73

117:                                              ; preds = %71, %117
  %118 = phi %"struct.std::__1::pair.376"* [ %127, %117 ], [ %113, %71 ]
  %119 = phi %"struct.std::__1::pair.376"* [ %128, %117 ], [ %115, %71 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %118, i64 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %120, align 8
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %118, i64 0, i32 1
  %124 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %119, i64 0, i32 1
  %125 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %124 to i8*
  %126 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 9, i1 false) #16
  %127 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %118, i64 1
  %128 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %119, i64 1
  %129 = icmp eq %"struct.std::__1::pair.376"* %127, %70
  br i1 %129, label %132, label %117

130:                                              ; preds = %63
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %0, %"struct.std::__1::pair.376"* %65, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %64, %"struct.std::__1::pair.376"* %4, i64 %5)
  %131 = sub nsw i64 %3, %64
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %65, %"struct.std::__1::pair.376"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %131, %"struct.std::__1::pair.376"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.376"* %0, %"struct.std::__1::pair.376"* %65, %"struct.std::__1::pair.376"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %64, i64 %131, %"struct.std::__1::pair.376"* %4, i64 %5)
  ret void

132:                                              ; preds = %117, %80, %48, %78, %71, %28, %26, %7, %13, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.376"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %27 [
    i64 0, label %128
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.std::__1::pair.376"* %4 to i8*
  %8 = bitcast %"struct.std::__1::pair.376"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  br label %128

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  %16 = bitcast %"struct.std::__1::pair.376"* %4 to i8*
  br i1 %15, label %17, label %22

17:                                               ; preds = %9
  %18 = bitcast %"struct.std::__1::pair.376"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 24, i1 false)
  %19 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 1
  %20 = bitcast %"struct.std::__1::pair.376"* %19 to i8*
  %21 = bitcast %"struct.std::__1::pair.376"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  br label %128

22:                                               ; preds = %9
  %23 = bitcast %"struct.std::__1::pair.376"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %23, i64 24, i1 false)
  %24 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 1
  %25 = bitcast %"struct.std::__1::pair.376"* %24 to i8*
  %26 = bitcast %"struct.std::__1::pair.376"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false)
  br label %128

27:                                               ; preds = %5
  %28 = icmp slt i64 %3, 9
  br i1 %28, label %29, label %77

29:                                               ; preds = %27
  %30 = icmp eq %"struct.std::__1::pair.376"* %0, %1
  br i1 %30, label %128, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.std::__1::pair.376"* %4 to i8*
  %33 = bitcast %"struct.std::__1::pair.376"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #16
  %34 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 1
  %35 = icmp eq %"struct.std::__1::pair.376"* %34, %1
  br i1 %35, label %128, label %36

36:                                               ; preds = %31, %74
  %37 = phi %"struct.std::__1::pair.376"* [ %75, %74 ], [ %34, %31 ]
  %38 = phi %"struct.std::__1::pair.376"* [ %40, %74 ], [ %4, %31 ]
  %39 = phi %"struct.std::__1::pair.376"* [ %37, %74 ], [ %0, %31 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %38, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %37, i64 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  %46 = bitcast %"struct.std::__1::pair.376"* %40 to i8*
  br i1 %45, label %47, label %72

47:                                               ; preds = %36
  %48 = bitcast %"struct.std::__1::pair.376"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 24, i1 false) #16
  %49 = icmp eq %"struct.std::__1::pair.376"* %38, %4
  br i1 %49, label %64, label %50

50:                                               ; preds = %47, %57
  %51 = phi %"struct.std::__1::pair.376"* [ %52, %57 ], [ %38, %47 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %51, i64 -1
  %53 = load i64, i64* %41, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %53, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %51, i64 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %51, i64 -1, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %51, i64 0, i32 1
  %61 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %60 to i8*
  %62 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 9, i1 false) #16
  %63 = icmp eq %"struct.std::__1::pair.376"* %52, %4
  br i1 %63, label %64, label %50

64:                                               ; preds = %57, %50, %47
  %65 = phi %"struct.std::__1::pair.376"* [ %4, %47 ], [ %51, %50 ], [ %4, %57 ]
  %66 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load i64, i64* %41, align 8
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %39, i64 1, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %65, i64 0, i32 1
  %70 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %69 to i8*
  %71 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 9, i1 false) #16
  br label %74

72:                                               ; preds = %36
  %73 = bitcast %"struct.std::__1::pair.376"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %73, i64 24, i1 false) #16
  br label %74

74:                                               ; preds = %72, %64
  %75 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %37, i64 1
  %76 = icmp eq %"struct.std::__1::pair.376"* %75, %1
  br i1 %76, label %128, label %36

77:                                               ; preds = %27
  %78 = lshr i64 %3, 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %0, i64 %78
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %0, %"struct.std::__1::pair.376"* %79, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %78, %"struct.std::__1::pair.376"* %4, i64 %78)
  %80 = sub nsw i64 %3, %78
  %81 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %4, i64 %78
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.376"* %79, %"struct.std::__1::pair.376"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %2, i64 %80, %"struct.std::__1::pair.376"* %81, i64 %80)
  %82 = icmp eq i64 %78, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %123, %77
  %84 = phi %"struct.std::__1::pair.376"* [ %79, %77 ], [ %124, %123 ]
  %85 = phi %"struct.std::__1::pair.376"* [ %4, %77 ], [ %126, %123 ]
  %86 = icmp eq %"struct.std::__1::pair.376"* %84, %1
  br i1 %86, label %128, label %87

87:                                               ; preds = %83, %87
  %88 = phi %"struct.std::__1::pair.376"* [ %93, %87 ], [ %85, %83 ]
  %89 = phi %"struct.std::__1::pair.376"* [ %92, %87 ], [ %84, %83 ]
  %90 = bitcast %"struct.std::__1::pair.376"* %88 to i8*
  %91 = bitcast %"struct.std::__1::pair.376"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #16
  %92 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %89, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %88, i64 1
  %94 = icmp eq %"struct.std::__1::pair.376"* %92, %1
  br i1 %94, label %128, label %87

95:                                               ; preds = %77, %123
  %96 = phi %"struct.std::__1::pair.376"* [ %126, %123 ], [ %4, %77 ]
  %97 = phi %"struct.std::__1::pair.376"* [ %125, %123 ], [ %0, %77 ]
  %98 = phi %"struct.std::__1::pair.376"* [ %124, %123 ], [ %79, %77 ]
  %99 = icmp eq %"struct.std::__1::pair.376"* %98, %1
  br i1 %99, label %100, label %110

100:                                              ; preds = %95
  %101 = icmp eq %"struct.std::__1::pair.376"* %97, %79
  br i1 %101, label %128, label %102

102:                                              ; preds = %100, %102
  %103 = phi %"struct.std::__1::pair.376"* [ %108, %102 ], [ %96, %100 ]
  %104 = phi %"struct.std::__1::pair.376"* [ %107, %102 ], [ %97, %100 ]
  %105 = bitcast %"struct.std::__1::pair.376"* %103 to i8*
  %106 = bitcast %"struct.std::__1::pair.376"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #16
  %107 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %104, i64 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %103, i64 1
  %109 = icmp eq %"struct.std::__1::pair.376"* %107, %79
  br i1 %109, label %128, label %102

110:                                              ; preds = %95
  %111 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %98, i64 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %97, i64 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %112, %114
  %116 = bitcast %"struct.std::__1::pair.376"* %96 to i8*
  br i1 %115, label %117, label %120

117:                                              ; preds = %110
  %118 = bitcast %"struct.std::__1::pair.376"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %118, i64 24, i1 false) #16
  %119 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %98, i64 1
  br label %123

120:                                              ; preds = %110
  %121 = bitcast %"struct.std::__1::pair.376"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %121, i64 24, i1 false) #16
  %122 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %97, i64 1
  br label %123

123:                                              ; preds = %120, %117
  %124 = phi %"struct.std::__1::pair.376"* [ %119, %117 ], [ %98, %120 ]
  %125 = phi %"struct.std::__1::pair.376"* [ %97, %117 ], [ %122, %120 ]
  %126 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %96, i64 1
  %127 = icmp eq %"struct.std::__1::pair.376"* %125, %79
  br i1 %127, label %83, label %95

128:                                              ; preds = %102, %87, %74, %100, %83, %31, %29, %17, %22, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*, %"struct.std::__1::pair.376"*, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.376"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %333, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"struct.std::__1::pair.376"* %1 to i64
  %12 = ptrtoint %"struct.std::__1::pair.376"* %0 to i64
  br label %13

13:                                               ; preds = %10, %326
  %14 = phi %"struct.std::__1::pair.376"* [ %331, %326 ], [ %2, %10 ]
  %15 = phi i64 [ %330, %326 ], [ %4, %10 ]
  %16 = phi i64 [ %329, %326 ], [ %5, %10 ]
  %17 = phi i64 [ %328, %326 ], [ %11, %10 ]
  %18 = phi i64 [ %327, %326 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %333, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"struct.std::__1::pair.376"*
  %26 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %135

28:                                               ; preds = %13
  %29 = inttoptr i64 %18 to %"struct.std::__1::pair.376"*
  %30 = inttoptr i64 %17 to %"struct.std::__1::pair.376"*
  %31 = icmp sgt i64 %15, %16
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = icmp eq %"struct.std::__1::pair.376"* %29, %30
  br i1 %33, label %333, label %80

34:                                               ; preds = %28
  %35 = icmp eq %"struct.std::__1::pair.376"* %14, %30
  br i1 %35, label %333, label %127

36:                                               ; preds = %80
  %37 = icmp eq %"struct.std::__1::pair.376"* %86, %6
  br i1 %37, label %333, label %38

38:                                               ; preds = %36, %75
  %39 = phi %"struct.std::__1::pair.376"* [ %77, %75 ], [ %6, %36 ]
  %40 = phi %"struct.std::__1::pair.376"* [ %78, %75 ], [ %29, %36 ]
  %41 = phi %"struct.std::__1::pair.376"* [ %76, %75 ], [ %30, %36 ]
  %42 = icmp eq %"struct.std::__1::pair.376"* %41, %14
  br i1 %42, label %43, label %56

43:                                               ; preds = %38, %43
  %44 = phi %"struct.std::__1::pair.376"* [ %54, %43 ], [ %40, %38 ]
  %45 = phi %"struct.std::__1::pair.376"* [ %53, %43 ], [ %39, %38 ]
  %46 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %45, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %44, i64 0, i32 1
  %51 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %50 to i8*
  %52 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 9, i1 false) #16
  %53 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %45, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %44, i64 1
  %55 = icmp eq %"struct.std::__1::pair.376"* %45, %81
  br i1 %55, label %333, label %43

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %41, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %39, i64 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %58, %60
  %62 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %40, i64 0, i32 0, i32 0, i32 0
  br i1 %61, label %63, label %69

63:                                               ; preds = %56
  store i64 %58, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %41, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %40, i64 0, i32 1
  %66 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %65 to i8*
  %67 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 9, i1 false) #16
  %68 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %41, i64 1
  br label %75

69:                                               ; preds = %56
  store i64 %60, i64* %62, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %39, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %40, i64 0, i32 1
  %72 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %71 to i8*
  %73 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 9, i1 false) #16
  %74 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %39, i64 1
  br label %75

75:                                               ; preds = %69, %63
  %76 = phi %"struct.std::__1::pair.376"* [ %68, %63 ], [ %41, %69 ]
  %77 = phi %"struct.std::__1::pair.376"* [ %39, %63 ], [ %74, %69 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %40, i64 1
  %79 = icmp eq %"struct.std::__1::pair.376"* %77, %86
  br i1 %79, label %333, label %38

80:                                               ; preds = %32, %80
  %81 = phi %"struct.std::__1::pair.376"* [ %86, %80 ], [ %6, %32 ]
  %82 = phi %"struct.std::__1::pair.376"* [ %85, %80 ], [ %29, %32 ]
  %83 = bitcast %"struct.std::__1::pair.376"* %81 to i8*
  %84 = bitcast %"struct.std::__1::pair.376"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #16
  %85 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %82, i64 1
  %86 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %81, i64 1
  %87 = icmp eq %"struct.std::__1::pair.376"* %85, %30
  br i1 %87, label %36, label %80

88:                                               ; preds = %127
  %89 = icmp eq %"struct.std::__1::pair.376"* %133, %6
  br i1 %89, label %333, label %90

90:                                               ; preds = %88, %108
  %91 = phi %"struct.std::__1::pair.376"* [ %125, %108 ], [ %14, %88 ]
  %92 = phi %"struct.std::__1::pair.376"* [ %120, %108 ], [ %133, %88 ]
  %93 = phi %"struct.std::__1::pair.376"* [ %119, %108 ], [ %30, %88 ]
  %94 = icmp eq %"struct.std::__1::pair.376"* %93, %29
  br i1 %94, label %95, label %108

95:                                               ; preds = %90, %95
  %96 = phi %"struct.std::__1::pair.376"* [ %98, %95 ], [ %92, %90 ]
  %97 = phi %"struct.std::__1::pair.376"* [ %99, %95 ], [ %91, %90 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %96, i64 -1
  %99 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %97, i64 -1
  %100 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = load i64, i64* %100, align 8
  store i64 %102, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %96, i64 -1, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %97, i64 -1, i32 1
  %105 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %104 to i8*
  %106 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 9, i1 false) #16
  %107 = icmp eq %"struct.std::__1::pair.376"* %98, %6
  br i1 %107, label %333, label %95

108:                                              ; preds = %90
  %109 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %93, i64 -1
  %110 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %92, i64 -1
  %111 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %109, i64 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp ult i64 %112, %114
  %116 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %91, i64 -1, i32 0, i32 0, i32 0
  %117 = select i1 %115, i64 %114, i64 %112
  %118 = select i1 %115, %"struct.std::__1::pair.376"* %93, %"struct.std::__1::pair.376"* %92
  %119 = select i1 %115, %"struct.std::__1::pair.376"* %109, %"struct.std::__1::pair.376"* %93
  %120 = select i1 %115, %"struct.std::__1::pair.376"* %92, %"struct.std::__1::pair.376"* %110
  store i64 %117, i64* %116, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %118, i64 -1, i32 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %91, i64 -1, i32 1
  %123 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %122 to i8*
  %124 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 9, i1 false) #16
  %125 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %91, i64 -1
  %126 = icmp eq %"struct.std::__1::pair.376"* %120, %6
  br i1 %126, label %333, label %90

127:                                              ; preds = %34, %127
  %128 = phi %"struct.std::__1::pair.376"* [ %133, %127 ], [ %6, %34 ]
  %129 = phi %"struct.std::__1::pair.376"* [ %132, %127 ], [ %30, %34 ]
  %130 = bitcast %"struct.std::__1::pair.376"* %128 to i8*
  %131 = bitcast %"struct.std::__1::pair.376"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #16
  %132 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %129, i64 1
  %133 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %128, i64 1
  %134 = icmp eq %"struct.std::__1::pair.376"* %132, %14
  br i1 %134, label %88, label %127

135:                                              ; preds = %24, %142
  %136 = phi i64 [ %15, %24 ], [ %145, %142 ]
  %137 = phi i64 [ %18, %24 ], [ %144, %142 ]
  %138 = inttoptr i64 %137 to %"struct.std::__1::pair.376"*
  %139 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp ult i64 %27, %140
  br i1 %141, label %147, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %138, i64 1
  %144 = ptrtoint %"struct.std::__1::pair.376"* %143 to i64
  %145 = add nsw i64 %136, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %333, label %135

147:                                              ; preds = %135
  %148 = inttoptr i64 %137 to %"struct.std::__1::pair.376"*
  %149 = icmp slt i64 %136, %16
  br i1 %149, label %150, label %179

150:                                              ; preds = %147
  %151 = sdiv i64 %16, 2
  %152 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %25, i64 %151
  %153 = ptrtoint %"struct.std::__1::pair.376"* %152 to i64
  %154 = sub i64 %17, %137
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %174, label %156

156:                                              ; preds = %150
  %157 = sdiv exact i64 %154, 24
  %158 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %152, i64 0, i32 0, i32 0, i32 0
  %159 = load i64, i64* %158, align 8
  br label %160

160:                                              ; preds = %160, %156
  %161 = phi %"struct.std::__1::pair.376"* [ %148, %156 ], [ %172, %160 ]
  %162 = phi i64 [ %157, %156 ], [ %171, %160 ]
  %163 = lshr i64 %162, 1
  %164 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %161, i64 %163
  %165 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp ult i64 %159, %166
  %168 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %164, i64 1
  %169 = xor i64 %163, -1
  %170 = add i64 %162, %169
  %171 = select i1 %167, i64 %163, i64 %170
  %172 = select i1 %167, %"struct.std::__1::pair.376"* %161, %"struct.std::__1::pair.376"* %168
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %174, label %160

174:                                              ; preds = %160, %150
  %175 = phi %"struct.std::__1::pair.376"* [ %148, %150 ], [ %172, %160 ]
  %176 = ptrtoint %"struct.std::__1::pair.376"* %175 to i64
  %177 = sub i64 %176, %137
  %178 = sdiv exact i64 %177, 24
  br label %225

179:                                              ; preds = %147
  %180 = icmp eq i64 %136, 1
  br i1 %180, label %181, label %195

181:                                              ; preds = %179
  %182 = inttoptr i64 %17 to %"struct.std::__1::pair.376"*
  %183 = inttoptr i64 %137 to %"struct.std::__1::pair.376"*
  %184 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %183, i64 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %184, align 8
  store i64 %140, i64* %26, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %183, i64 0, i32 1
  %186 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %182, i64 0, i32 1
  %187 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %183, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 8
  %191 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %185 to i8*
  %192 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 9, i1 false) #16
  %193 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %186 to i64*
  store i64 %188, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %182, i64 0, i32 1, i32 1
  store i8 %190, i8* %194, align 8
  br label %333

195:                                              ; preds = %179
  %196 = sdiv i64 %136, 2
  %197 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %148, i64 %196
  %198 = ptrtoint %"struct.std::__1::pair.376"* %197 to i64
  %199 = ptrtoint %"struct.std::__1::pair.376"* %14 to i64
  %200 = sub i64 %199, %17
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %220, label %202

202:                                              ; preds = %195
  %203 = sdiv exact i64 %200, 24
  %204 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %197, i64 0, i32 0, i32 0, i32 0
  %205 = load i64, i64* %204, align 8
  br label %206

206:                                              ; preds = %206, %202
  %207 = phi %"struct.std::__1::pair.376"* [ %25, %202 ], [ %218, %206 ]
  %208 = phi i64 [ %203, %202 ], [ %217, %206 ]
  %209 = lshr i64 %208, 1
  %210 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %207, i64 %209
  %211 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %210, i64 0, i32 0, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = icmp ult i64 %212, %205
  %214 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %210, i64 1
  %215 = xor i64 %209, -1
  %216 = add i64 %208, %215
  %217 = select i1 %213, i64 %216, i64 %209
  %218 = select i1 %213, %"struct.std::__1::pair.376"* %214, %"struct.std::__1::pair.376"* %207
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %220, label %206

220:                                              ; preds = %206, %195
  %221 = phi %"struct.std::__1::pair.376"* [ %25, %195 ], [ %218, %206 ]
  %222 = ptrtoint %"struct.std::__1::pair.376"* %221 to i64
  %223 = sub i64 %222, %17
  %224 = sdiv exact i64 %223, 24
  br label %225

225:                                              ; preds = %220, %174
  %226 = phi i64 [ %176, %174 ], [ %198, %220 ]
  %227 = phi i64 [ %153, %174 ], [ %222, %220 ]
  %228 = phi i64 [ %151, %174 ], [ %224, %220 ]
  %229 = phi i64 [ %178, %174 ], [ %196, %220 ]
  %230 = sub nsw i64 %136, %229
  %231 = sub nsw i64 %16, %228
  %232 = inttoptr i64 %226 to %"struct.std::__1::pair.376"*
  %233 = inttoptr i64 %227 to %"struct.std::__1::pair.376"*
  %234 = icmp eq %"struct.std::__1::pair.376"* %232, %25
  br i1 %234, label %318, label %235

235:                                              ; preds = %225
  %236 = icmp eq %"struct.std::__1::pair.376"* %25, %233
  br i1 %236, label %318, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %232, i64 0, i32 0, i32 0, i32 0
  %239 = load i64, i64* %238, align 8
  store i64 %27, i64* %238, align 8
  store i64 %239, i64* %26, align 8
  %240 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %232, i64 0, i32 1
  %241 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %25, i64 0, i32 1
  %242 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %240 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %232, i64 0, i32 1, i32 1
  %245 = load i8, i8* %244, align 8
  %246 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %240 to i8*
  %247 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 9, i1 false) #16
  %248 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %241 to i64*
  store i64 %243, i64* %248, align 8
  %249 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %25, i64 0, i32 1, i32 1
  store i8 %245, i8* %249, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %232, i64 1
  %251 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %25, i64 1
  %252 = icmp eq %"struct.std::__1::pair.376"* %251, %233
  br i1 %252, label %281, label %253

253:                                              ; preds = %237, %253
  %254 = phi %"struct.std::__1::pair.376"* [ %278, %253 ], [ %25, %237 ]
  %255 = phi %"struct.std::__1::pair.376"* [ %276, %253 ], [ %251, %237 ]
  %256 = phi %"struct.std::__1::pair.376"* [ %275, %253 ], [ %250, %237 ]
  %257 = phi i64 [ %260, %253 ], [ %17, %237 ]
  %258 = ptrtoint %"struct.std::__1::pair.376"* %255 to i64
  %259 = icmp eq %"struct.std::__1::pair.376"* %256, %254
  %260 = select i1 %259, i64 %258, i64 %257
  %261 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %256, i64 0, i32 0, i32 0, i32 0
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 0, i32 0, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  store i64 %262, i64* %263, align 8
  %265 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %256, i64 0, i32 1
  %266 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 0, i32 1
  %267 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %265 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %256, i64 0, i32 1, i32 1
  %270 = load i8, i8* %269, align 8
  %271 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %265 to i8*
  %272 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %266 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %272, i64 9, i1 false) #16
  %273 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %266 to i64*
  store i64 %268, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 0, i32 1, i32 1
  store i8 %270, i8* %274, align 8
  %275 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %256, i64 1
  %276 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %255, i64 1
  %277 = icmp eq %"struct.std::__1::pair.376"* %276, %233
  %278 = inttoptr i64 %260 to %"struct.std::__1::pair.376"*
  br i1 %277, label %279, label %253

279:                                              ; preds = %253
  %280 = inttoptr i64 %260 to %"struct.std::__1::pair.376"*
  br label %281

281:                                              ; preds = %279, %237
  %282 = phi i64 [ %17, %237 ], [ %260, %279 ]
  %283 = phi %"struct.std::__1::pair.376"* [ %250, %237 ], [ %275, %279 ]
  %284 = phi %"struct.std::__1::pair.376"* [ %25, %237 ], [ %280, %279 ]
  %285 = icmp eq %"struct.std::__1::pair.376"* %283, %284
  br i1 %285, label %318, label %286

286:                                              ; preds = %281
  %287 = inttoptr i64 %282 to %"struct.std::__1::pair.376"*
  br label %288

288:                                              ; preds = %286, %315
  %289 = phi i64 [ %282, %286 ], [ %317, %315 ]
  %290 = phi %"struct.std::__1::pair.376"* [ %283, %286 ], [ %310, %315 ]
  %291 = phi %"struct.std::__1::pair.376"* [ %287, %286 ], [ %311, %315 ]
  %292 = inttoptr i64 %289 to %"struct.std::__1::pair.376"*
  br label %293

293:                                              ; preds = %288, %314
  %294 = phi %"struct.std::__1::pair.376"* [ %310, %314 ], [ %290, %288 ]
  %295 = phi %"struct.std::__1::pair.376"* [ %292, %314 ], [ %291, %288 ]
  %296 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %294, i64 0, i32 0, i32 0, i32 0
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %295, i64 0, i32 0, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %296, align 8
  store i64 %297, i64* %298, align 8
  %300 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %294, i64 0, i32 1
  %301 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %295, i64 0, i32 1
  %302 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %300 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %294, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 8
  %306 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %300 to i8*
  %307 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %301 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* align 8 %307, i64 9, i1 false) #16
  %308 = bitcast %"struct.viz::SurfaceAggregator::RenderPassMapEntry"* %301 to i64*
  store i64 %303, i64* %308, align 8
  %309 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %295, i64 0, i32 1, i32 1
  store i8 %305, i8* %309, align 8
  %310 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %294, i64 1
  %311 = getelementptr inbounds %"struct.std::__1::pair.376", %"struct.std::__1::pair.376"* %295, i64 1
  %312 = icmp eq %"struct.std::__1::pair.376"* %311, %233
  %313 = icmp eq %"struct.std::__1::pair.376"* %310, %292
  br i1 %312, label %314, label %315

314:                                              ; preds = %293
  br i1 %313, label %318, label %293

315:                                              ; preds = %293
  %316 = ptrtoint %"struct.std::__1::pair.376"* %311 to i64
  %317 = select i1 %313, i64 %316, i64 %289
  br label %288

318:                                              ; preds = %314, %225, %235, %281
  %319 = phi %"struct.std::__1::pair.376"* [ %232, %235 ], [ %233, %225 ], [ %283, %281 ], [ %283, %314 ]
  %320 = add nsw i64 %229, %228
  %321 = add nsw i64 %230, %231
  %322 = icmp slt i64 %320, %321
  br i1 %322, label %323, label %325

323:                                              ; preds = %318
  %324 = ptrtoint %"struct.std::__1::pair.376"* %319 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.376"* %148, %"struct.std::__1::pair.376"* %232, %"struct.std::__1::pair.376"* %319, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %3, i64 %229, i64 %228, %"struct.std::__1::pair.376"* %6, i64 %7)
  br label %326

325:                                              ; preds = %318
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS8_NS6_17SurfaceAggregator18RenderPassMapEntryEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.376"* %319, %"struct.std::__1::pair.376"* %233, %"struct.std::__1::pair.376"* %14, %"struct.base::internal::flat_tree<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry>, std::__1::allocator<std::__1::pair<util::IdType<viz::CompositorRenderPass, unsigned long, 0, 1>, viz::SurfaceAggregator::RenderPassMapEntry> > > >::value_compare"* dereferenceable(1) %3, i64 %230, i64 %231, %"struct.std::__1::pair.376"* %6, i64 %7)
  br label %326

326:                                              ; preds = %323, %325
  %327 = phi i64 [ %324, %323 ], [ %137, %325 ]
  %328 = phi i64 [ %227, %323 ], [ %226, %325 ]
  %329 = phi i64 [ %231, %323 ], [ %228, %325 ]
  %330 = phi i64 [ %230, %323 ], [ %229, %325 ]
  %331 = phi %"struct.std::__1::pair.376"* [ %14, %323 ], [ %319, %325 ]
  %332 = icmp eq i64 %329, 0
  br i1 %332, label %333, label %13

333:                                              ; preds = %326, %22, %142, %75, %43, %108, %95, %8, %181, %88, %36, %34, %32
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68), %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #1

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3viz17CopyOutputRequestENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.258"*, %"class.std::__1::unique_ptr.260"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.260"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.258"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.258"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.260"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.260"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.260"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.260"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.260"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.260"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.260"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.260"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.260"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.viz::CopyOutputRequest"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.260"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.260"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.260"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.260"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !118

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.260"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.260"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.260"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.260"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.260"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.260"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.260"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.260"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.260"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.260"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.260"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.260"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.260"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.260"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.260"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.260"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.260"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.260"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.260"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.260"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.260"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.260"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.260"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.260"*, %"class.std::__1::unique_ptr.260"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.260"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.260"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.260"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.260"*
  %138 = icmp eq %"class.std::__1::unique_ptr.260"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.260"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %142, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %142, align 8
  %144 = icmp eq %"class.viz::CopyOutputRequest"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %143) #16
  %146 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %146) #17
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.260"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE5eraseENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #16
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.viz::CopyOutputRequest"**
  %47 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %46, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %46, align 8
  %48 = icmp eq %"class.viz::CopyOutputRequest"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %38
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %47) #16
  %50 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %47, i64 0, i32 0
  tail call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %38, %49
  %52 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #1

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3gfx14MaskFilterInfo9TransformERKNS_9TransformE(%"class.gfx::MaskFilterInfo"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #11

declare void @_ZNK2cc19ListContainerHelper7crbeginEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper20ConstReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ConstReverseIterator"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK2cc19ListContainerHelper5crendEv(%"class.cc::ListContainerHelper::ConstReverseIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_iEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.194"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.194", %"class.base::internal::flat_tree.194"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.194", %"class.base::internal::flat_tree.194"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.197"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.197"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.197"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"struct.std::__1::pair.197"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29, i32 0, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29, i32 0, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"struct.std::__1::pair.197"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"struct.std::__1::pair.197"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"struct.std::__1::pair.197"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"struct.std::__1::pair.197"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %76, i64 1
  %126 = ptrtoint %"struct.std::__1::pair.197"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } undef, %"struct.std::__1::pair.197"* %76, 0
  %130 = inttoptr i64 %128 to %"struct.std::__1::pair.197"*
  %131 = insertvalue { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %129, %"struct.std::__1::pair.197"* %130, 1
  ret { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"* } %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS4_16ReturnedResourceENS7_9allocatorIS9_EEEEEJS6_EEEFvSC_EE3RunEPNS0_13BindStateBaseEOSC_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.529"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::WeakPtr"*
  tail call void @_ZN4base8internal13FunctorTraitsIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEvE6InvokeIRKSD_JRKS5_SB_EEEvOT_DpOT0_(void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)** dereferenceable(8) %4, %"class.base::WeakPtr"* dereferenceable(16) %6, %"class.std::__1::vector.529"* dereferenceable(24) %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEvE6InvokeIRKSD_JRKS5_SB_EEEvOT_DpOT0_(void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)** dereferenceable(8), %"class.base::WeakPtr"* dereferenceable(16), %"class.std::__1::vector.529"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = alloca %"class.std::__1::vector.529", align 16
  %6 = load void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)*, void (%"class.base::WeakPtr"*, %"class.std::__1::vector.529"*)** %0, align 8
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %7, %"class.base::internal::WeakReference"* dereferenceable(8) %8) #16
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = bitcast %"class.std::__1::vector.529"* %2 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %5, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.529"* %5 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %15, align 16
  %16 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.viz::ReturnedResource"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.viz::ReturnedResource"** %19 to i64*
  store i64 %18, i64* %20, align 16
  %21 = bitcast %"class.std::__1::vector.529"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #16
  call void %6(%"class.base::WeakPtr"* nonnull %4, %"class.std::__1::vector.529"* nonnull %5) #16
  %22 = getelementptr inbounds %"class.std::__1::vector.529", %"class.std::__1::vector.529"* %5, i64 0, i32 0, i32 0
  %23 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %22, align 16
  %24 = icmp eq %"struct.viz::ReturnedResource"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %3
  %26 = bitcast %"struct.viz::ReturnedResource"* %23 to i8*
  %27 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %14, align 8
  %28 = icmp eq %"struct.viz::ReturnedResource"* %27, %23
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"struct.viz::ReturnedResource"* [ %31, %29 ], [ %27, %25 ]
  %31 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %30, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %31) #16
  %32 = icmp eq %"struct.viz::ReturnedResource"* %31, %23
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = bitcast %"class.std::__1::vector.529"* %5 to i8**
  %35 = load i8*, i8** %34, align 16
  br label %36

36:                                               ; preds = %33, %25
  %37 = phi i8* [ %35, %33 ], [ %26, %25 ]
  store %"struct.viz::ReturnedResource"* %23, %"struct.viz::ReturnedResource"** %14, align 8
  call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %3, %36
  %39 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %39) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS3_16ReturnedResourceENS6_9allocatorIS8_EEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.197"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEiEENS_9allocatorIS4_EEE7emplaceIJRKS3_iEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.195"*, %"struct.std::__1::pair.197"*, %"class.viz::SurfaceId"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer.701", align 8
  %7 = ptrtoint %"struct.std::__1::pair.197"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.195", %"class.std::__1::vector.195"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.195", %"class.std::__1::vector.195"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.195", %"class.std::__1::vector.195"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair.197"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair.197"* %10 to i64
  %15 = ptrtoint %"struct.std::__1::pair.197"* %12 to i64
  br i1 %13, label %16, label %100

16:                                               ; preds = %4
  %17 = icmp eq %"struct.std::__1::pair.197"* %10, %1
  br i1 %17, label %18, label %40

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 1, i32 2
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  %34 = bitcast %"class.base::UnguessableToken"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #16
  %35 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 1
  %36 = load i32, i32* %3, align 4
  store i32 %36, i32* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 1
  %38 = ptrtoint %"struct.std::__1::pair.197"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair.197"** %9 to i64*
  store i64 %38, i64* %39, align 8
  br label %246

40:                                               ; preds = %16
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %45 = bitcast %"class.base::UnguessableToken"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %45, i64 16, i1 false)
  %46 = load i32, i32* %3, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 1
  %48 = ptrtoint %"struct.std::__1::pair.197"* %47 to i64
  %49 = sub i64 %14, %48
  %50 = sdiv exact i64 %49, 40
  %51 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 %50
  %52 = bitcast %"struct.std::__1::pair.197"** %9 to i64*
  %53 = icmp ult %"struct.std::__1::pair.197"* %51, %10
  br i1 %53, label %70, label %56

54:                                               ; preds = %70
  %55 = ptrtoint %"struct.std::__1::pair.197"* %93 to i64
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i64 [ %55, %54 ], [ %14, %40 ]
  store i64 %57, i64* %52, align 8
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %56, %59
  %60 = phi %"struct.std::__1::pair.197"* [ %63, %59 ], [ %10, %56 ]
  %61 = phi %"struct.std::__1::pair.197"* [ %62, %59 ], [ %51, %56 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %61, i64 -1
  %63 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %60, i64 -1
  %64 = bitcast %"struct.std::__1::pair.197"* %63 to i8*
  %65 = bitcast %"struct.std::__1::pair.197"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 32, i1 false) #16
  %66 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %61, i64 -1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %60, i64 -1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = icmp eq %"struct.std::__1::pair.197"* %62, %1
  br i1 %69, label %95, label %59

70:                                               ; preds = %40, %70
  %71 = phi %"struct.std::__1::pair.197"* [ %93, %70 ], [ %10, %40 ]
  %72 = phi %"struct.std::__1::pair.197"* [ %92, %70 ], [ %51, %40 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %79, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 0, i32 1, i32 1
  %83 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 0, i32 1, i32 2
  %86 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 0, i32 1, i32 2
  %87 = bitcast %"class.base::UnguessableToken"* %85 to i8*
  %88 = bitcast %"class.base::UnguessableToken"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #16
  %89 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  store i32 %91, i32* %89, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %72, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %71, i64 1
  %94 = icmp ult %"struct.std::__1::pair.197"* %92, %10
  br i1 %94, label %70, label %54

95:                                               ; preds = %59, %56
  %96 = bitcast %"struct.std::__1::pair.197"* %1 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 0, i32 1, i32 2
  %98 = bitcast %"class.base::UnguessableToken"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %41, i64 16, i1 false)
  %99 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %1, i64 0, i32 1
  store i32 %46, i32* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  br label %246

100:                                              ; preds = %4
  %101 = getelementptr inbounds %"class.std::__1::vector.195", %"class.std::__1::vector.195"* %0, i64 0, i32 0, i32 2
  %102 = bitcast %"struct.std::__1::__split_buffer.701"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #16
  %103 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %6, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %6, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %6, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %6, i64 0, i32 3, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %6, i64 0, i32 3, i32 1, i32 0
  %108 = bitcast %"struct.std::__1::pair.197"** %9 to i64*
  %109 = bitcast %"class.std::__1::vector.195"* %0 to i64*
  %110 = bitcast %"struct.std::__1::__split_buffer.701"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false)
  %111 = load i64, i64* %109, align 8
  %112 = sub i64 %14, %111
  %113 = sdiv exact i64 %112, 40
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 461168601842738790
  br i1 %115, label %116, label %118

116:                                              ; preds = %100
  %117 = bitcast %"class.std::__1::vector.195"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #18
  unreachable

118:                                              ; preds = %100
  %119 = bitcast %"struct.std::__1::pair.197"** %11 to i64*
  %120 = sub i64 %15, %111
  %121 = sdiv exact i64 %120, 40
  %122 = icmp ult i64 %121, 230584300921369395
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = sub i64 %7, %111
  %125 = sdiv exact i64 %124, 40
  store %"struct.std::__1::pair.197"* null, %"struct.std::__1::pair.197"** %106, align 8
  %126 = bitcast %"class.std::__1::allocator.201"** %107 to %"class.std::__1::__compressed_pair.198"**
  store %"class.std::__1::__compressed_pair.198"* %101, %"class.std::__1::__compressed_pair.198"** %126, align 8
  br label %135

127:                                              ; preds = %118
  %128 = shl nsw i64 %121, 1
  %129 = icmp ult i64 %128, %114
  %130 = select i1 %129, i64 %114, i64 %128
  %131 = sub i64 %7, %111
  %132 = sdiv exact i64 %131, 40
  store %"struct.std::__1::pair.197"* null, %"struct.std::__1::pair.197"** %106, align 8
  %133 = bitcast %"class.std::__1::allocator.201"** %107 to %"class.std::__1::__compressed_pair.198"**
  store %"class.std::__1::__compressed_pair.198"* %101, %"class.std::__1::__compressed_pair.198"** %133, align 8
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %127, %123
  %136 = phi i64 [ %125, %123 ], [ %132, %127 ]
  %137 = phi i64 [ 461168601842738790, %123 ], [ %130, %127 ]
  %138 = mul i64 %137, 40
  %139 = tail call i8* @_Znwm(i64 %138) #17
  %140 = bitcast i8* %139 to %"struct.std::__1::pair.197"*
  br label %141

141:                                              ; preds = %127, %135
  %142 = phi i64 [ %136, %135 ], [ %132, %127 ]
  %143 = phi i64 [ %137, %135 ], [ 0, %127 ]
  %144 = phi %"struct.std::__1::pair.197"* [ %140, %135 ], [ null, %127 ]
  store %"struct.std::__1::pair.197"* %144, %"struct.std::__1::pair.197"** %103, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %144, i64 %142
  store %"struct.std::__1::pair.197"* %145, %"struct.std::__1::pair.197"** %105, align 8
  store %"struct.std::__1::pair.197"* %145, %"struct.std::__1::pair.197"** %104, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %144, i64 %143
  store %"struct.std::__1::pair.197"* %146, %"struct.std::__1::pair.197"** %106, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer.701"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2, i32* dereferenceable(4) %3)
  %147 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %104, align 8
  %148 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %8, align 8
  %149 = icmp eq %"struct.std::__1::pair.197"* %148, %1
  br i1 %149, label %176, label %150

150:                                              ; preds = %141, %150
  %151 = phi %"struct.std::__1::pair.197"* [ %174, %150 ], [ %147, %141 ]
  %152 = phi %"struct.std::__1::pair.197"* [ %153, %150 ], [ %1, %141 ]
  %153 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1
  %154 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %153, i64 0, i32 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1, i32 0, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1, i32 0, i32 1, i32 0
  %162 = load i32, i32* %161, align 8
  store i32 %162, i32* %160, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 0, i32 1, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1, i32 0, i32 1, i32 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 0, i32 1, i32 2
  %167 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1, i32 0, i32 1, i32 2
  %168 = bitcast %"class.base::UnguessableToken"* %166 to i8*
  %169 = bitcast %"class.base::UnguessableToken"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #16
  %170 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %151, i64 -1, i32 1
  %171 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %152, i64 -1, i32 1
  %172 = load i32, i32* %171, align 8
  store i32 %172, i32* %170, align 8
  %173 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %104, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %173, i64 -1
  store %"struct.std::__1::pair.197"* %174, %"struct.std::__1::pair.197"** %104, align 8
  %175 = icmp eq %"struct.std::__1::pair.197"* %153, %148
  br i1 %175, label %176, label %150

176:                                              ; preds = %150, %141
  %177 = phi %"struct.std::__1::pair.197"* [ %147, %141 ], [ %174, %150 ]
  %178 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %9, align 8
  %179 = icmp eq %"struct.std::__1::pair.197"* %178, %1
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = ptrtoint %"struct.std::__1::pair.197"* %178 to i64
  %182 = ptrtoint %"struct.std::__1::pair.197"* %177 to i64
  %183 = bitcast %"struct.std::__1::pair.197"** %104 to i64*
  %184 = bitcast %"struct.std::__1::pair.197"** %105 to i64*
  %185 = load i64, i64* %184, align 8
  br label %220

186:                                              ; preds = %176
  %187 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %105, align 8
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi %"struct.std::__1::pair.197"* [ %212, %188 ], [ %187, %186 ]
  %190 = phi %"struct.std::__1::pair.197"* [ %210, %188 ], [ %1, %186 ]
  %191 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  store i32 %193, i32* %191, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 0, i32 0, i32 1
  %195 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 0, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %194, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 0, i32 1, i32 0
  %198 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 8
  store i32 %199, i32* %197, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 0, i32 1, i32 1
  %201 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 0, i32 1, i32 1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 0, i32 1, i32 2
  %204 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 0, i32 1, i32 2
  %205 = bitcast %"class.base::UnguessableToken"* %203 to i8*
  %206 = bitcast %"class.base::UnguessableToken"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 16, i1 false) #16
  %207 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %189, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  store i32 %209, i32* %207, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %190, i64 1
  %211 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %105, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %211, i64 1
  store %"struct.std::__1::pair.197"* %212, %"struct.std::__1::pair.197"** %105, align 8
  %213 = icmp eq %"struct.std::__1::pair.197"* %210, %178
  br i1 %213, label %214, label %188

214:                                              ; preds = %188
  %215 = ptrtoint %"struct.std::__1::pair.197"* %212 to i64
  %216 = bitcast %"struct.std::__1::pair.197"** %104 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %108, align 8
  %219 = bitcast %"struct.std::__1::pair.197"** %105 to i64*
  br label %220

220:                                              ; preds = %180, %214
  %221 = phi i64* [ %184, %180 ], [ %219, %214 ]
  %222 = phi i64 [ %185, %180 ], [ %215, %214 ]
  %223 = phi i64 [ %181, %180 ], [ %218, %214 ]
  %224 = phi i64* [ %183, %180 ], [ %216, %214 ]
  %225 = phi i64 [ %182, %180 ], [ %217, %214 ]
  %226 = load i64, i64* %109, align 8
  store i64 %225, i64* %109, align 8
  store i64 %226, i64* %224, align 8
  store i64 %222, i64* %108, align 8
  store i64 %223, i64* %221, align 8
  %227 = load i64, i64* %119, align 8
  %228 = bitcast %"struct.std::__1::pair.197"** %106 to i64*
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %119, align 8
  store i64 %227, i64* %228, align 8
  %230 = bitcast %"struct.std::__1::__split_buffer.701"* %6 to i64*
  store i64 %226, i64* %230, align 8
  %231 = inttoptr i64 %226 to %"struct.std::__1::pair.197"*
  %232 = inttoptr i64 %223 to %"struct.std::__1::pair.197"*
  %233 = icmp eq %"struct.std::__1::pair.197"* %232, %231
  br i1 %233, label %241, label %234

234:                                              ; preds = %220
  %235 = getelementptr %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %232, i64 -1, i32 0, i32 0, i32 0
  %236 = ptrtoint i32* %235 to i64
  %237 = sub i64 %236, %226
  %238 = udiv i64 %237, 40
  %239 = xor i64 %238, -1
  %240 = getelementptr %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %232, i64 %239
  store %"struct.std::__1::pair.197"* %240, %"struct.std::__1::pair.197"** %105, align 8
  br label %241

241:                                              ; preds = %234, %220
  %242 = icmp eq i64 %226, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = inttoptr i64 %226 to i8*
  call void @_ZdlPv(i8* %244) #17
  br label %245

245:                                              ; preds = %241, %243
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #16
  br label %246

246:                                              ; preds = %18, %95, %245
  %247 = phi %"struct.std::__1::pair.197"* [ %1, %18 ], [ %1, %95 ], [ %147, %245 ]
  ret %"struct.std::__1::pair.197"* %247
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEiEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_iEEEvDpOT_(%"struct.std::__1::__split_buffer.701"*, %"class.viz::SurfaceId"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.197"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.197"* %7 to i64
  br i1 %8, label %10, label %106

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.701", %"struct.std::__1::__split_buffer.701"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.197"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.197"* %14 to i64
  br i1 %15, label %17, label %42

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.197"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 40
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.197"* %12, %5
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair.197"* [ %34, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.197"* [ %33, %25 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.197"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair.197"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #16
  %30 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %26, i64 0, i32 1
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %27, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %26, i64 1
  %35 = icmp eq %"struct.std::__1::pair.197"* %33, %5
  br i1 %35, label %36, label %25

36:                                               ; preds = %25
  %37 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %11, align 8
  br label %38

38:                                               ; preds = %36, %17
  %39 = phi %"struct.std::__1::pair.197"* [ %5, %17 ], [ %37, %36 ]
  %40 = phi %"struct.std::__1::pair.197"* [ %23, %17 ], [ %34, %36 ]
  store %"struct.std::__1::pair.197"* %40, %"struct.std::__1::pair.197"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %39, i64 %22
  store %"struct.std::__1::pair.197"* %41, %"struct.std::__1::pair.197"** %11, align 8
  br label %106

42:                                               ; preds = %10
  %43 = bitcast %"struct.std::__1::pair.197"** %6 to i64*
  %44 = bitcast %"struct.std::__1::__split_buffer.701"* %0 to i64*
  %45 = sub i64 %9, %16
  %46 = sdiv exact i64 %45, 40
  %47 = shl nsw i64 %46, 1
  %48 = icmp eq i64 %45, 0
  %49 = select i1 %48, i64 1, i64 %47
  %50 = icmp ugt i64 %49, 461168601842738790
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  tail call void @abort() #18
  unreachable

52:                                               ; preds = %42
  %53 = lshr i64 %49, 2
  %54 = mul i64 %49, 40
  %55 = tail call i8* @_Znwm(i64 %54) #17
  %56 = bitcast i8* %55 to %"struct.std::__1::pair.197"*
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %56, i64 %53
  %59 = ptrtoint %"struct.std::__1::pair.197"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %56, i64 %49
  %61 = ptrtoint %"struct.std::__1::pair.197"* %60 to i64
  %62 = ptrtoint %"struct.std::__1::pair.197"* %12 to i64
  %63 = ptrtoint %"struct.std::__1::pair.197"* %5 to i64
  %64 = sub i64 %63, %62
  %65 = sdiv exact i64 %64, 40
  %66 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %58, i64 %65
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %96, label %68

68:                                               ; preds = %52, %68
  %69 = phi %"struct.std::__1::pair.197"* [ %90, %68 ], [ %58, %52 ]
  %70 = phi %"struct.std::__1::pair.197"* [ %91, %68 ], [ %12, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 0, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #16
  %87 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %69, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %70, i64 1
  %92 = icmp eq %"struct.std::__1::pair.197"* %66, %90
  br i1 %92, label %93, label %68

93:                                               ; preds = %68
  %94 = ptrtoint %"struct.std::__1::pair.197"* %66 to i64
  %95 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %13, align 8
  br label %96

96:                                               ; preds = %52, %93
  %97 = phi %"struct.std::__1::pair.197"* [ %95, %93 ], [ %14, %52 ]
  %98 = phi i64 [ %94, %93 ], [ %59, %52 ]
  store i64 %57, i64* %44, align 8
  %99 = bitcast %"struct.std::__1::pair.197"** %11 to i64*
  store i64 %59, i64* %99, align 8
  %100 = bitcast %"struct.std::__1::pair.197"** %4 to i64*
  store i64 %98, i64* %100, align 8
  store i64 %61, i64* %43, align 8
  %101 = icmp eq %"struct.std::__1::pair.197"* %97, null
  %102 = inttoptr i64 %98 to %"struct.std::__1::pair.197"*
  br i1 %101, label %106, label %103

103:                                              ; preds = %96
  %104 = bitcast %"struct.std::__1::pair.197"* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #17
  %105 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %4, align 8
  br label %106

106:                                              ; preds = %103, %96, %38, %3
  %107 = phi %"struct.std::__1::pair.197"* [ %105, %103 ], [ %102, %96 ], [ %40, %38 ], [ %5, %3 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 0, i32 1, i32 0
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 0, i32 1, i32 1
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %117, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 0, i32 1, i32 2
  %121 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %122 = bitcast %"class.base::UnguessableToken"* %120 to i8*
  %123 = bitcast %"class.base::UnguessableToken"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #16
  %124 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %107, i64 0, i32 1
  %125 = load i32, i32* %2, align 4
  store i32 %125, i32* %124, align 8
  %126 = load %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"** %4, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.197", %"struct.std::__1::pair.197"* %126, i64 1
  store %"struct.std::__1::pair.197"* %127, %"struct.std::__1::pair.197"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree.209"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.209", %"class.base::internal::flat_tree.209"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.209", %"class.base::internal::flat_tree.209"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.212"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.212"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.212"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"struct.std::__1::pair.212"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29, i32 0, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29, i32 0, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"struct.std::__1::pair.212"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"struct.std::__1::pair.212"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"struct.std::__1::pair.212"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"struct.std::__1::pair.212"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %76, i64 1
  %126 = ptrtoint %"struct.std::__1::pair.212"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } undef, %"struct.std::__1::pair.212"* %76, 0
  %130 = inttoptr i64 %128 to %"struct.std::__1::pair.212"*
  %131 = insertvalue { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %129, %"struct.std::__1::pair.212"* %130, 1
  ret { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"* } %131
}

declare i64 @_ZNK2cc19ListContainerHelper4sizeEv(%"class.cc::ListContainerHelper"*) local_unnamed_addr #1

declare void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"*) unnamed_addr #2

declare void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE11equal_rangeIS3_EENS5_4pairINS5_11__wrap_iterIPKS3_EESI_EERKT_(%"class.base::internal::flat_tree.28"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.viz::SurfaceId"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.viz::SurfaceId"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 5
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"class.viz::SurfaceId"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %30, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 0
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %27, i64 %29, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"class.viz::SurfaceId"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"class.viz::SurfaceId"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"class.viz::SurfaceId"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"class.viz::SurfaceId"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %76, i64 1
  %126 = ptrtoint %"class.viz::SurfaceId"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } undef, %"class.viz::SurfaceId"* %76, 0
  %130 = inttoptr i64 %128 to %"class.viz::SurfaceId"*
  %131 = insertvalue { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %129, %"class.viz::SurfaceId"* %130, 1
  ret { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* } %131
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_10unique_ptrINS4_17CopyOutputRequestENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS6_SC_NS_4lessIS6_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputRequest"** %10, align 8
  store %"class.viz::CopyOutputRequest"* null, %"class.viz::CopyOutputRequest"** %10, align 8
  %12 = icmp eq %"class.viz::CopyOutputRequest"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %11) #16
  %14 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.viz::SurfaceId"*, i8 } @_ZN4base8internal9flat_treeIN3viz9SurfaceIdENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE16emplace_key_argsIS3_JRKS3_EEENS5_4pairINS5_11__wrap_iterIPS3_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.28"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.viz::SurfaceId"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.viz::SurfaceId"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.viz::SurfaceId"*
  br i1 %11, label %75, label %13

13:                                               ; preds = %3
  %14 = ashr exact i64 %10, 5
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"class.viz::SurfaceId"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %31, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 0
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 %30, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"class.viz::SurfaceId"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69
  %74 = ptrtoint %"class.viz::SurfaceId"* %71 to i64
  br label %75

75:                                               ; preds = %73, %3
  %76 = phi i64 [ %74, %73 ], [ %9, %3 ]
  %77 = phi %"class.viz::SurfaceId"* [ %71, %73 ], [ %5, %3 ]
  %78 = icmp eq %"class.viz::SurfaceId"* %77, %12
  br i1 %78, label %125, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 0, i32 1
  %84 = load i32, i32* %80, align 4
  %85 = load i32, i32* %82, align 4
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %125, label %87

87:                                               ; preds = %79
  %88 = icmp ult i32 %85, %84
  br i1 %88, label %129, label %89

89:                                               ; preds = %87
  %90 = load i32, i32* %81, align 4
  %91 = load i32, i32* %83, align 4
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %125, label %93

93:                                               ; preds = %89
  %94 = icmp ult i32 %91, %90
  br i1 %94, label %129, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 1
  %100 = load i32, i32* %96, align 4
  %101 = load i32, i32* %98, align 4
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %125, label %103

103:                                              ; preds = %95
  %104 = icmp ult i32 %101, %100
  br i1 %104, label %129, label %105

105:                                              ; preds = %103
  %106 = load i32, i32* %97, align 4
  %107 = load i32, i32* %99, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %125, label %109

109:                                              ; preds = %105
  %110 = icmp ult i32 %107, %106
  br i1 %110, label %129, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 2, i32 0, i32 0
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %77, i64 0, i32 1, i32 2, i32 0, i32 1
  %116 = load i64, i64* %112, align 8
  %117 = load i64, i64* %114, align 8
  %118 = icmp ult i64 %116, %117
  br i1 %118, label %125, label %119

119:                                              ; preds = %111
  %120 = icmp ult i64 %117, %116
  br i1 %120, label %129, label %121

121:                                              ; preds = %119
  %122 = load i64, i64* %113, align 8
  %123 = load i64, i64* %115, align 8
  %124 = icmp ult i64 %122, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %79, %95, %105, %111, %89, %75, %121
  %126 = getelementptr inbounds %"class.base::internal::flat_tree.28", %"class.base::internal::flat_tree.28"* %0, i64 0, i32 0
  %127 = tail call %"class.viz::SurfaceId"* @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.29"* %126, %"class.viz::SurfaceId"* %77, %"class.viz::SurfaceId"* dereferenceable(32) %2) #16
  %128 = ptrtoint %"class.viz::SurfaceId"* %127 to i64
  br label %129

129:                                              ; preds = %87, %103, %109, %119, %93, %121, %125
  %130 = phi i64 [ %128, %125 ], [ %76, %121 ], [ %76, %93 ], [ %76, %119 ], [ %76, %109 ], [ %76, %103 ], [ %76, %87 ]
  %131 = phi i8 [ 1, %125 ], [ 0, %121 ], [ 0, %93 ], [ 0, %119 ], [ 0, %109 ], [ 0, %103 ], [ 0, %87 ]
  %132 = inttoptr i64 %130 to %"class.viz::SurfaceId"*
  %133 = insertvalue { %"class.viz::SurfaceId"*, i8 } undef, %"class.viz::SurfaceId"* %132, 0
  %134 = insertvalue { %"class.viz::SurfaceId"*, i8 } %133, i8 %131, 1
  ret { %"class.viz::SurfaceId"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::SurfaceId"* @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.29"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.viz::SurfaceId"* %1 to i64
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer.717", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  %12 = icmp ult %"class.viz::SurfaceId"* %9, %11
  %13 = ptrtoint %"class.viz::SurfaceId"* %9 to i64
  %14 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  br i1 %12, label %15, label %136

15:                                               ; preds = %3
  %16 = icmp eq %"class.viz::SurfaceId"* %9, %1
  br i1 %16, label %17, label %37

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %27, align 4
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %32 = bitcast %"class.base::UnguessableToken"* %30 to i8*
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #16
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 1
  %35 = ptrtoint %"class.viz::SurfaceId"* %34 to i64
  %36 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  store i64 %35, i64* %36, align 8
  br label %279

37:                                               ; preds = %15
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  %39 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 4
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %42 = bitcast %"class.base::UnguessableToken"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 1
  %44 = ptrtoint %"class.viz::SurfaceId"* %43 to i64
  %45 = sub i64 %13, %44
  %46 = ashr exact i64 %45, 5
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46
  %48 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  %49 = icmp ult %"class.viz::SurfaceId"* %47, %9
  br i1 %49, label %50, label %86

50:                                               ; preds = %37
  %51 = sub nsw i64 0, %46
  %52 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 %51, i32 0, i32 0
  %53 = bitcast i32* %52 to i8*
  %54 = xor i64 %4, -1
  %55 = getelementptr i8, i8* %53, i64 %54
  %56 = ptrtoint i8* %55 to i64
  %57 = and i64 %56, 32
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %78

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %47, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 1
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 2
  %73 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 %46, i32 1, i32 2
  %74 = bitcast %"class.base::UnguessableToken"* %72 to i8*
  %75 = bitcast %"class.base::UnguessableToken"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #16
  %76 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %47, i64 1
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 1
  br label %78

78:                                               ; preds = %59, %50
  %79 = phi %"class.viz::SurfaceId"* [ %9, %50 ], [ %77, %59 ]
  %80 = phi %"class.viz::SurfaceId"* [ %47, %50 ], [ %76, %59 ]
  %81 = phi %"class.viz::SurfaceId"* [ undef, %50 ], [ %77, %59 ]
  %82 = icmp ult i8* %55, inttoptr (i64 32 to i8*)
  br i1 %82, label %83, label %94

83:                                               ; preds = %94, %78
  %84 = phi %"class.viz::SurfaceId"* [ %81, %78 ], [ %130, %94 ]
  %85 = ptrtoint %"class.viz::SurfaceId"* %84 to i64
  br label %86

86:                                               ; preds = %83, %37
  %87 = phi i64 [ %85, %83 ], [ %13, %37 ]
  store i64 %87, i64* %48, align 8
  %88 = icmp eq i64 %45, 0
  br i1 %88, label %132, label %89

89:                                               ; preds = %86
  %90 = sub nsw i64 0, %46
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 %90
  %92 = bitcast %"class.viz::SurfaceId"* %91 to i8*
  %93 = bitcast %"class.viz::SurfaceId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %45, i1 false) #16
  br label %132

94:                                               ; preds = %78, %94
  %95 = phi %"class.viz::SurfaceId"* [ %130, %94 ], [ %79, %78 ]
  %96 = phi %"class.viz::SurfaceId"* [ %129, %94 ], [ %80, %78 ]
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %103, align 8
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 1
  %107 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 1
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 0, i32 1, i32 2
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  %112 = bitcast %"class.base::UnguessableToken"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #16
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 1, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 1, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #16
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %96, i64 2
  %130 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 2
  %131 = icmp ult %"class.viz::SurfaceId"* %129, %9
  br i1 %131, label %94, label %83

132:                                              ; preds = %86, %89
  %133 = bitcast %"class.viz::SurfaceId"* %1 to <4 x i32>*
  store <4 x i32> %40, <4 x i32>* %133, align 8
  %134 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %135 = bitcast %"class.base::UnguessableToken"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* nonnull align 8 %38, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  br label %279

136:                                              ; preds = %3
  %137 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2
  %138 = bitcast %"struct.std::__1::__split_buffer.717"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #16
  %139 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %6, i64 0, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %6, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %6, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %6, i64 0, i32 3, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %6, i64 0, i32 3, i32 1, i32 0
  %144 = bitcast %"class.viz::SurfaceId"** %8 to i64*
  %145 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %146 = bitcast %"struct.std::__1::__split_buffer.717"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 40, i1 false)
  %147 = load i64, i64* %145, align 8
  %148 = sub i64 %13, %147
  %149 = ashr exact i64 %148, 5
  %150 = add nsw i64 %149, 1
  %151 = icmp ugt i64 %150, 576460752303423487
  br i1 %151, label %152, label %154

152:                                              ; preds = %136
  %153 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #18
  unreachable

154:                                              ; preds = %136
  %155 = bitcast %"class.viz::SurfaceId"** %10 to i64*
  %156 = sub i64 %14, %147
  %157 = ashr exact i64 %156, 5
  %158 = icmp ult i64 %157, 288230376151711743
  br i1 %158, label %163, label %159

159:                                              ; preds = %154
  %160 = sub i64 %4, %147
  %161 = ashr exact i64 %160, 5
  store %"class.viz::SurfaceId"* null, %"class.viz::SurfaceId"** %142, align 8
  %162 = bitcast %"class.std::__1::allocator.34"** %143 to %"class.std::__1::__compressed_pair.31"**
  store %"class.std::__1::__compressed_pair.31"* %137, %"class.std::__1::__compressed_pair.31"** %162, align 8
  br label %174

163:                                              ; preds = %154
  %164 = ashr exact i64 %156, 4
  %165 = icmp ult i64 %164, %150
  %166 = select i1 %165, i64 %150, i64 %164
  %167 = sub i64 %4, %147
  %168 = ashr exact i64 %167, 5
  store %"class.viz::SurfaceId"* null, %"class.viz::SurfaceId"** %142, align 8
  %169 = bitcast %"class.std::__1::allocator.34"** %143 to %"class.std::__1::__compressed_pair.31"**
  store %"class.std::__1::__compressed_pair.31"* %137, %"class.std::__1::__compressed_pair.31"** %169, align 8
  %170 = icmp eq i64 %166, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %163
  %172 = icmp ugt i64 %166, 576460752303423487
  br i1 %172, label %173, label %174

173:                                              ; preds = %171
  tail call void @abort() #18
  unreachable

174:                                              ; preds = %159, %171
  %175 = phi i64 [ 576460752303423487, %159 ], [ %166, %171 ]
  %176 = phi i64 [ %161, %159 ], [ %168, %171 ]
  %177 = shl i64 %175, 5
  %178 = tail call i8* @_Znwm(i64 %177) #17
  %179 = bitcast i8* %178 to %"class.viz::SurfaceId"*
  br label %180

180:                                              ; preds = %163, %174
  %181 = phi i64 [ %176, %174 ], [ %168, %163 ]
  %182 = phi i64 [ %175, %174 ], [ 0, %163 ]
  %183 = phi %"class.viz::SurfaceId"* [ %179, %174 ], [ null, %163 ]
  store %"class.viz::SurfaceId"* %183, %"class.viz::SurfaceId"** %139, align 8
  %184 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %183, i64 %181
  store %"class.viz::SurfaceId"* %184, %"class.viz::SurfaceId"** %141, align 8
  store %"class.viz::SurfaceId"* %184, %"class.viz::SurfaceId"** %140, align 8
  %185 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %183, i64 %182
  store %"class.viz::SurfaceId"* %185, %"class.viz::SurfaceId"** %142, align 8
  call void @_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.717"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2)
  %186 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %140, align 8
  %187 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %7, align 8
  %188 = icmp eq %"class.viz::SurfaceId"* %187, %1
  br i1 %188, label %212, label %189

189:                                              ; preds = %180, %189
  %190 = phi %"class.viz::SurfaceId"* [ %210, %189 ], [ %186, %180 ]
  %191 = phi %"class.viz::SurfaceId"* [ %192, %189 ], [ %1, %180 ]
  %192 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1
  %193 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 0, i32 0
  %194 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %192, i64 0, i32 0, i32 0
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %193, align 4
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 0, i32 1
  %197 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  store i32 %198, i32* %196, align 4
  %199 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 0
  %200 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 0
  %201 = load i32, i32* %200, align 8
  store i32 %201, i32* %199, align 8
  %202 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 1
  %203 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 1
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %202, align 4
  %205 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %190, i64 -1, i32 1, i32 2
  %206 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %191, i64 -1, i32 1, i32 2
  %207 = bitcast %"class.base::UnguessableToken"* %205 to i8*
  %208 = bitcast %"class.base::UnguessableToken"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 16, i1 false) #16
  %209 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %140, align 8
  %210 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %209, i64 -1
  store %"class.viz::SurfaceId"* %210, %"class.viz::SurfaceId"** %140, align 8
  %211 = icmp eq %"class.viz::SurfaceId"* %192, %187
  br i1 %211, label %212, label %189

212:                                              ; preds = %189, %180
  %213 = phi %"class.viz::SurfaceId"* [ %186, %180 ], [ %210, %189 ]
  %214 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %8, align 8
  %215 = icmp eq %"class.viz::SurfaceId"* %214, %1
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = ptrtoint %"class.viz::SurfaceId"* %214 to i64
  %218 = ptrtoint %"class.viz::SurfaceId"* %213 to i64
  %219 = bitcast %"class.viz::SurfaceId"** %140 to i64*
  %220 = bitcast %"class.viz::SurfaceId"** %141 to i64*
  %221 = load i64, i64* %220, align 8
  br label %253

222:                                              ; preds = %212
  %223 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %141, align 8
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi %"class.viz::SurfaceId"* [ %245, %224 ], [ %223, %222 ]
  %226 = phi %"class.viz::SurfaceId"* [ %243, %224 ], [ %1, %222 ]
  %227 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  store i32 %229, i32* %227, align 4
  %230 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  store i32 %232, i32* %230, align 4
  %233 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 0
  %234 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 0
  %235 = load i32, i32* %234, align 8
  store i32 %235, i32* %233, align 8
  %236 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 1
  %237 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 1
  %238 = load i32, i32* %237, align 4
  store i32 %238, i32* %236, align 4
  %239 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %225, i64 0, i32 1, i32 2
  %240 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 0, i32 1, i32 2
  %241 = bitcast %"class.base::UnguessableToken"* %239 to i8*
  %242 = bitcast %"class.base::UnguessableToken"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false) #16
  %243 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %226, i64 1
  %244 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %141, align 8
  %245 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %244, i64 1
  store %"class.viz::SurfaceId"* %245, %"class.viz::SurfaceId"** %141, align 8
  %246 = icmp eq %"class.viz::SurfaceId"* %243, %214
  br i1 %246, label %247, label %224

247:                                              ; preds = %224
  %248 = ptrtoint %"class.viz::SurfaceId"* %245 to i64
  %249 = bitcast %"class.viz::SurfaceId"** %140 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = load i64, i64* %144, align 8
  %252 = bitcast %"class.viz::SurfaceId"** %141 to i64*
  br label %253

253:                                              ; preds = %216, %247
  %254 = phi i64* [ %220, %216 ], [ %252, %247 ]
  %255 = phi i64 [ %221, %216 ], [ %248, %247 ]
  %256 = phi i64 [ %217, %216 ], [ %251, %247 ]
  %257 = phi i64* [ %219, %216 ], [ %249, %247 ]
  %258 = phi i64 [ %218, %216 ], [ %250, %247 ]
  %259 = load i64, i64* %145, align 8
  store i64 %258, i64* %145, align 8
  store i64 %259, i64* %257, align 8
  store i64 %255, i64* %144, align 8
  store i64 %256, i64* %254, align 8
  %260 = load i64, i64* %155, align 8
  %261 = bitcast %"class.viz::SurfaceId"** %142 to i64*
  %262 = load i64, i64* %261, align 8
  store i64 %262, i64* %155, align 8
  store i64 %260, i64* %261, align 8
  %263 = bitcast %"struct.std::__1::__split_buffer.717"* %6 to i64*
  store i64 %259, i64* %263, align 8
  %264 = inttoptr i64 %259 to %"class.viz::SurfaceId"*
  %265 = inttoptr i64 %256 to %"class.viz::SurfaceId"*
  %266 = icmp eq %"class.viz::SurfaceId"* %265, %264
  br i1 %266, label %274, label %267

267:                                              ; preds = %253
  %268 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %265, i64 -1, i32 0, i32 0
  %269 = ptrtoint i32* %268 to i64
  %270 = sub i64 %269, %259
  %271 = lshr i64 %270, 5
  %272 = xor i64 %271, -1
  %273 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %265, i64 %272
  store %"class.viz::SurfaceId"* %273, %"class.viz::SurfaceId"** %141, align 8
  br label %274

274:                                              ; preds = %267, %253
  %275 = icmp eq i64 %259, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = inttoptr i64 %259 to i8*
  call void @_ZdlPv(i8* %277) #17
  br label %278

278:                                              ; preds = %274, %276
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #16
  br label %279

279:                                              ; preds = %17, %132, %278
  %280 = phi %"class.viz::SurfaceId"* [ %1, %17 ], [ %1, %132 ], [ %186, %278 ]
  ret %"class.viz::SurfaceId"* %280
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3viz9SurfaceIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.717"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %0, i64 0, i32 2
  %4 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %5, align 8
  %7 = icmp eq %"class.viz::SurfaceId"* %4, %6
  %8 = ptrtoint %"class.viz::SurfaceId"* %6 to i64
  br i1 %7, label %9, label %138

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %0, i64 0, i32 1
  %11 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.717", %"struct.std::__1::__split_buffer.717"* %0, i64 0, i32 0
  %13 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %12, align 8
  %14 = icmp ugt %"class.viz::SurfaceId"* %11, %13
  %15 = ptrtoint %"class.viz::SurfaceId"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 5
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 %21
  %23 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.viz::SurfaceId"* %22 to i8*
  %29 = bitcast %"class.viz::SurfaceId"* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #16
  %30 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"class.viz::SurfaceId"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %22, i64 %25
  store %"class.viz::SurfaceId"* %33, %"class.viz::SurfaceId"** %3, align 8
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %32, i64 %21
  store %"class.viz::SurfaceId"* %34, %"class.viz::SurfaceId"** %10, align 8
  br label %138

35:                                               ; preds = %9
  %36 = bitcast %"class.viz::SurfaceId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.717"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 4
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 576460752303423487
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #18
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 5
  %47 = tail call i8* @_Znwm(i64 %46) #17
  %48 = bitcast i8* %47 to %"class.viz::SurfaceId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45
  %51 = ptrtoint %"class.viz::SurfaceId"* %50 to i64
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %41
  %53 = ptrtoint %"class.viz::SurfaceId"* %52 to i64
  %54 = ptrtoint %"class.viz::SurfaceId"* %11 to i64
  %55 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %128, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -32
  %62 = and i64 %61, 32
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %83

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 0, i32 1
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %68, align 4
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %48, i64 %45, i32 1, i32 2
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 0, i32 1, i32 2
  %79 = bitcast %"class.base::UnguessableToken"* %77 to i8*
  %80 = bitcast %"class.base::UnguessableToken"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false) #16
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %50, i64 1
  %82 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %11, i64 1
  br label %83

83:                                               ; preds = %64, %60
  %84 = phi %"class.viz::SurfaceId"* [ %50, %60 ], [ %81, %64 ]
  %85 = phi %"class.viz::SurfaceId"* [ %11, %60 ], [ %82, %64 ]
  %86 = icmp ult i64 %61, 32
  br i1 %86, label %125, label %87

87:                                               ; preds = %83, %87
  %88 = phi %"class.viz::SurfaceId"* [ %122, %87 ], [ %84, %83 ]
  %89 = phi %"class.viz::SurfaceId"* [ %123, %87 ], [ %85, %83 ]
  %90 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 8
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 0, i32 1, i32 2
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 0, i32 1, i32 2
  %104 = bitcast %"class.base::UnguessableToken"* %102 to i8*
  %105 = bitcast %"class.base::UnguessableToken"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #16
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 0, i32 0
  %107 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 0, i32 1
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 0
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 0
  %114 = load i32, i32* %113, align 8
  store i32 %114, i32* %112, align 8
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 1
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 1
  %117 = load i32, i32* %116, align 4
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 1, i32 1, i32 2
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 1, i32 1, i32 2
  %120 = bitcast %"class.base::UnguessableToken"* %118 to i8*
  %121 = bitcast %"class.base::UnguessableToken"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false) #16
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %88, i64 2
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %89, i64 2
  %124 = icmp eq %"class.viz::SurfaceId"* %58, %122
  br i1 %124, label %125, label %87

125:                                              ; preds = %87, %83
  %126 = ptrtoint %"class.viz::SurfaceId"* %58 to i64
  %127 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %12, align 8
  br label %128

128:                                              ; preds = %44, %125
  %129 = phi %"class.viz::SurfaceId"* [ %127, %125 ], [ %13, %44 ]
  %130 = phi i64 [ %126, %125 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %131 = bitcast %"class.viz::SurfaceId"** %10 to i64*
  store i64 %51, i64* %131, align 8
  %132 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  store i64 %130, i64* %132, align 8
  store i64 %53, i64* %36, align 8
  %133 = icmp eq %"class.viz::SurfaceId"* %129, null
  %134 = inttoptr i64 %130 to %"class.viz::SurfaceId"*
  br i1 %133, label %138, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.viz::SurfaceId"* %129 to i8*
  tail call void @_ZdlPv(i8* %136) #17
  %137 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  br label %138

138:                                              ; preds = %135, %128, %31, %2
  %139 = phi %"class.viz::SurfaceId"* [ %137, %135 ], [ %134, %128 ], [ %33, %31 ], [ %4, %2 ]
  %140 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %143, align 4
  %146 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 0
  %147 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %146, align 8
  %149 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 1
  %150 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %139, i64 0, i32 1, i32 2
  %153 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %154 = bitcast %"class.base::UnguessableToken"* %152 to i8*
  %155 = bitcast %"class.base::UnguessableToken"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 16, i1 false) #16
  %156 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %157 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %156, i64 1
  store %"class.viz::SurfaceId"* %157, %"class.viz::SurfaceId"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3viz20AggregatedRenderPassC1Emm(%"class.viz::AggregatedRenderPass"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.util::IdType"* @_ZNSt3__16vectorIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE7emplaceIJRKS5_EEENS_11__wrap_iterIPS5_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.295"*, %"class.util::IdType"*, %"class.util::IdType"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.util::IdType"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.722", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.util::IdType"*, %"class.util::IdType"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.util::IdType"*, %"class.util::IdType"** %9, align 8
  %11 = icmp ult %"class.util::IdType"* %8, %10
  %12 = ptrtoint %"class.util::IdType"* %8 to i64
  %13 = ptrtoint %"class.util::IdType"* %10 to i64
  br i1 %11, label %14, label %164

14:                                               ; preds = %3
  %15 = icmp eq %"class.util::IdType"* %8, %1
  %16 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %2, i64 0, i32 0, i32 0
  br i1 %15, label %17, label %23

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %16, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 1
  %21 = ptrtoint %"class.util::IdType"* %20 to i64
  %22 = bitcast %"class.util::IdType"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %314

23:                                               ; preds = %14
  %24 = load i64, i64* %16, align 8
  %25 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 1
  %26 = ptrtoint %"class.util::IdType"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 %28
  %30 = bitcast %"class.util::IdType"** %7 to i64*
  %31 = icmp ult %"class.util::IdType"* %29, %8
  br i1 %31, label %32, label %145

32:                                               ; preds = %23
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.util::IdType", %"class.util::IdType"* %8, i64 %33, i32 0, i32 0
  %35 = bitcast i64* %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %40, 4
  br i1 %41, label %42, label %45

42:                                               ; preds = %140, %45, %32
  %43 = phi %"class.util::IdType"* [ %8, %45 ], [ %8, %32 ], [ %63, %140 ]
  %44 = phi %"class.util::IdType"* [ %29, %45 ], [ %29, %32 ], [ %64, %140 ]
  br label %153

45:                                               ; preds = %32
  %46 = sub nsw i64 0, %28
  %47 = getelementptr %"class.util::IdType", %"class.util::IdType"* %8, i64 %46, i32 0, i32 0
  %48 = bitcast i64* %47 to i8*
  %49 = xor i64 %4, -1
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr %"class.util::IdType", %"class.util::IdType"* %8, i64 %53
  %55 = add nsw i64 %28, %52
  %56 = add nsw i64 %55, 1
  %57 = getelementptr %"class.util::IdType", %"class.util::IdType"* %1, i64 %56
  %58 = icmp ult %"class.util::IdType"* %8, %57
  %59 = icmp ult %"class.util::IdType"* %29, %54
  %60 = and i1 %58, %59
  br i1 %60, label %42, label %61

61:                                               ; preds = %45
  %62 = and i64 %40, 4611686018427387900
  %63 = getelementptr %"class.util::IdType", %"class.util::IdType"* %8, i64 %62
  %64 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %62
  %65 = add nsw i64 %62, -4
  %66 = lshr exact i64 %65, 2
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 12
  br i1 %69, label %121, label %70

70:                                               ; preds = %61
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %73
  %76 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %73, i32 0, i32 0
  %77 = bitcast %"class.util::IdType"* %75 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !119
  %79 = getelementptr %"class.util::IdType", %"class.util::IdType"* %75, i64 2
  %80 = bitcast %"class.util::IdType"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !119
  %82 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %82, align 8, !alias.scope !122, !noalias !119
  %83 = getelementptr i64, i64* %76, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 8, !alias.scope !122, !noalias !119
  %85 = or i64 %73, 4
  %86 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %85
  %87 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %85, i32 0, i32 0
  %88 = bitcast %"class.util::IdType"* %86 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !119
  %90 = getelementptr %"class.util::IdType", %"class.util::IdType"* %86, i64 2
  %91 = bitcast %"class.util::IdType"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !119
  %93 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 8, !alias.scope !122, !noalias !119
  %94 = getelementptr i64, i64* %87, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 8, !alias.scope !122, !noalias !119
  %96 = or i64 %73, 8
  %97 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %96
  %98 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %96, i32 0, i32 0
  %99 = bitcast %"class.util::IdType"* %97 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !119
  %101 = getelementptr %"class.util::IdType", %"class.util::IdType"* %97, i64 2
  %102 = bitcast %"class.util::IdType"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !119
  %104 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 8, !alias.scope !122, !noalias !119
  %105 = getelementptr i64, i64* %98, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 8, !alias.scope !122, !noalias !119
  %107 = or i64 %73, 12
  %108 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %107
  %109 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %107, i32 0, i32 0
  %110 = bitcast %"class.util::IdType"* %108 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !119
  %112 = getelementptr %"class.util::IdType", %"class.util::IdType"* %108, i64 2
  %113 = bitcast %"class.util::IdType"* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8, !alias.scope !119
  %115 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %115, align 8, !alias.scope !122, !noalias !119
  %116 = getelementptr i64, i64* %109, i64 2
  %117 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %117, align 8, !alias.scope !122, !noalias !119
  %118 = add i64 %73, 16
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !124

121:                                              ; preds = %72, %61
  %122 = phi i64 [ 0, %61 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr %"class.util::IdType", %"class.util::IdType"* %29, i64 %125
  %128 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %125, i32 0, i32 0
  %129 = bitcast %"class.util::IdType"* %127 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !119
  %131 = getelementptr %"class.util::IdType", %"class.util::IdType"* %127, i64 2
  %132 = bitcast %"class.util::IdType"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !119
  %134 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !122, !noalias !119
  %135 = getelementptr i64, i64* %128, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !122, !noalias !119
  %137 = add i64 %125, 4
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !125

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %40, %62
  br i1 %141, label %142, label %42

142:                                              ; preds = %153, %140
  %143 = phi %"class.util::IdType"* [ %63, %140 ], [ %160, %153 ]
  %144 = ptrtoint %"class.util::IdType"* %143 to i64
  br label %145

145:                                              ; preds = %142, %23
  %146 = phi i64 [ %144, %142 ], [ %12, %23 ]
  store i64 %146, i64* %30, align 8
  %147 = icmp eq i64 %27, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %145
  %149 = sub nsw i64 0, %28
  %150 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %8, i64 %149
  %151 = bitcast %"class.util::IdType"* %150 to i8*
  %152 = bitcast %"class.util::IdType"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %27, i1 false) #16
  br label %162

153:                                              ; preds = %42, %153
  %154 = phi %"class.util::IdType"* [ %160, %153 ], [ %43, %42 ]
  %155 = phi %"class.util::IdType"* [ %159, %153 ], [ %44, %42 ]
  %156 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %155, i64 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %154, i64 0, i32 0, i32 0
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %157, align 8
  %159 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %155, i64 1
  %160 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %154, i64 1
  %161 = icmp ult %"class.util::IdType"* %159, %8
  br i1 %161, label %153, label %142, !llvm.loop !126

162:                                              ; preds = %145, %148
  %163 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  store i64 %24, i64* %163, align 8
  br label %314

164:                                              ; preds = %3
  %165 = getelementptr inbounds %"class.std::__1::vector.295", %"class.std::__1::vector.295"* %0, i64 0, i32 0, i32 2
  %166 = bitcast %"struct.std::__1::__split_buffer.722"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #16
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %5, i64 0, i32 0
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %5, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %5, i64 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %5, i64 0, i32 3, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %5, i64 0, i32 3, i32 1, i32 0
  %172 = bitcast %"class.util::IdType"** %7 to i64*
  %173 = bitcast %"class.std::__1::vector.295"* %0 to i64*
  %174 = bitcast %"struct.std::__1::__split_buffer.722"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 40, i1 false)
  %175 = load i64, i64* %173, align 8
  %176 = sub i64 %12, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %164
  %181 = bitcast %"class.std::__1::vector.295"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #18
  unreachable

182:                                              ; preds = %164
  %183 = bitcast %"class.util::IdType"** %9 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = sub i64 %4, %175
  %189 = ashr exact i64 %188, 3
  store %"class.util::IdType"* null, %"class.util::IdType"** %170, align 8
  %190 = bitcast %"class.std::__1::allocator.300"** %171 to %"class.std::__1::__compressed_pair.297"**
  store %"class.std::__1::__compressed_pair.297"* %165, %"class.std::__1::__compressed_pair.297"** %190, align 8
  br label %202

191:                                              ; preds = %182
  %192 = ashr exact i64 %184, 2
  %193 = icmp ult i64 %192, %178
  %194 = select i1 %193, i64 %178, i64 %192
  %195 = sub i64 %4, %175
  %196 = ashr exact i64 %195, 3
  store %"class.util::IdType"* null, %"class.util::IdType"** %170, align 8
  %197 = bitcast %"class.std::__1::allocator.300"** %171 to %"class.std::__1::__compressed_pair.297"**
  store %"class.std::__1::__compressed_pair.297"* %165, %"class.std::__1::__compressed_pair.297"** %197, align 8
  %198 = icmp eq i64 %194, 0
  br i1 %198, label %208, label %199

199:                                              ; preds = %191
  %200 = icmp ugt i64 %194, 2305843009213693951
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  tail call void @abort() #18
  unreachable

202:                                              ; preds = %187, %199
  %203 = phi i64 [ 2305843009213693951, %187 ], [ %194, %199 ]
  %204 = phi i64 [ %189, %187 ], [ %196, %199 ]
  %205 = shl i64 %203, 3
  %206 = tail call i8* @_Znwm(i64 %205) #17
  %207 = bitcast i8* %206 to %"class.util::IdType"*
  br label %208

208:                                              ; preds = %191, %202
  %209 = phi i64 [ %204, %202 ], [ %196, %191 ]
  %210 = phi i64 [ %203, %202 ], [ 0, %191 ]
  %211 = phi %"class.util::IdType"* [ %207, %202 ], [ null, %191 ]
  store %"class.util::IdType"* %211, %"class.util::IdType"** %167, align 8
  %212 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %211, i64 %209
  store %"class.util::IdType"* %212, %"class.util::IdType"** %169, align 8
  store %"class.util::IdType"* %212, %"class.util::IdType"** %168, align 8
  %213 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %211, i64 %210
  store %"class.util::IdType"* %213, %"class.util::IdType"** %170, align 8
  call void @_ZNSt3__114__split_bufferIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.722"* nonnull %5, %"class.util::IdType"* dereferenceable(8) %2)
  %214 = load %"class.util::IdType"*, %"class.util::IdType"** %168, align 8
  %215 = load %"class.util::IdType"*, %"class.util::IdType"** %6, align 8
  %216 = ptrtoint %"class.util::IdType"* %215 to i64
  %217 = sub i64 %4, %216
  %218 = ashr exact i64 %217, 3
  %219 = sub nsw i64 0, %218
  %220 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %214, i64 %219
  store %"class.util::IdType"* %220, %"class.util::IdType"** %168, align 8
  %221 = icmp sgt i64 %217, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %208
  %223 = bitcast %"class.util::IdType"* %220 to i8*
  %224 = bitcast %"class.util::IdType"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 %217, i1 false) #16
  br label %225

225:                                              ; preds = %222, %208
  %226 = load %"class.util::IdType"*, %"class.util::IdType"** %7, align 8
  %227 = icmp eq %"class.util::IdType"* %226, %1
  br i1 %227, label %228, label %232

228:                                              ; preds = %225
  %229 = ptrtoint %"class.util::IdType"* %226 to i64
  %230 = bitcast %"class.util::IdType"** %169 to i64*
  %231 = load i64, i64* %230, align 8
  br label %288

232:                                              ; preds = %225
  %233 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %234 = getelementptr %"class.util::IdType", %"class.util::IdType"* %226, i64 -1, i32 0, i32 0
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %232, %241
  %242 = phi %"class.util::IdType"* [ %250, %241 ], [ %233, %232 ]
  %243 = phi %"class.util::IdType"* [ %248, %241 ], [ %1, %232 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %232 ]
  %245 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %243, i64 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %242, i64 0, i32 0, i32 0
  %247 = load i64, i64* %245, align 8
  store i64 %247, i64* %246, align 8
  %248 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %243, i64 1
  %249 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %250 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %249, i64 1
  store %"class.util::IdType"* %250, %"class.util::IdType"** %169, align 8
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !127

253:                                              ; preds = %241, %232
  %254 = phi %"class.util::IdType"* [ undef, %232 ], [ %250, %241 ]
  %255 = phi %"class.util::IdType"* [ %233, %232 ], [ %250, %241 ]
  %256 = phi %"class.util::IdType"* [ %1, %232 ], [ %248, %241 ]
  %257 = icmp ult i64 %236, 24
  br i1 %257, label %283, label %258

258:                                              ; preds = %253, %258
  %259 = phi %"class.util::IdType"* [ %281, %258 ], [ %255, %253 ]
  %260 = phi %"class.util::IdType"* [ %279, %258 ], [ %256, %253 ]
  %261 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %260, i64 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %259, i64 0, i32 0, i32 0
  %263 = load i64, i64* %261, align 8
  store i64 %263, i64* %262, align 8
  %264 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %265 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %264, i64 1
  store %"class.util::IdType"* %265, %"class.util::IdType"** %169, align 8
  %266 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %260, i64 1, i32 0, i32 0
  %267 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %265, i64 0, i32 0, i32 0
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %270 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %269, i64 1
  store %"class.util::IdType"* %270, %"class.util::IdType"** %169, align 8
  %271 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %260, i64 2, i32 0, i32 0
  %272 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %270, i64 0, i32 0, i32 0
  %273 = load i64, i64* %271, align 8
  store i64 %273, i64* %272, align 8
  %274 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %275 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %274, i64 1
  store %"class.util::IdType"* %275, %"class.util::IdType"** %169, align 8
  %276 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %260, i64 3, i32 0, i32 0
  %277 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %275, i64 0, i32 0, i32 0
  %278 = load i64, i64* %276, align 8
  store i64 %278, i64* %277, align 8
  %279 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %260, i64 4
  %280 = load %"class.util::IdType"*, %"class.util::IdType"** %169, align 8
  %281 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %280, i64 1
  store %"class.util::IdType"* %281, %"class.util::IdType"** %169, align 8
  %282 = icmp eq %"class.util::IdType"* %279, %226
  br i1 %282, label %283, label %258

283:                                              ; preds = %258, %253
  %284 = phi %"class.util::IdType"* [ %254, %253 ], [ %281, %258 ]
  %285 = ptrtoint %"class.util::IdType"* %284 to i64
  %286 = load i64, i64* %172, align 8
  %287 = bitcast %"class.util::IdType"** %169 to i64*
  br label %288

288:                                              ; preds = %228, %283
  %289 = phi i64* [ %230, %228 ], [ %287, %283 ]
  %290 = phi i64 [ %231, %228 ], [ %285, %283 ]
  %291 = phi i64 [ %229, %228 ], [ %286, %283 ]
  %292 = load i64, i64* %173, align 8
  %293 = bitcast %"class.util::IdType"** %168 to i64*
  %294 = load i64, i64* %293, align 8
  store i64 %294, i64* %173, align 8
  store i64 %292, i64* %293, align 8
  store i64 %290, i64* %172, align 8
  store i64 %291, i64* %289, align 8
  %295 = load i64, i64* %183, align 8
  %296 = bitcast %"class.util::IdType"** %170 to i64*
  %297 = load i64, i64* %296, align 8
  store i64 %297, i64* %183, align 8
  store i64 %295, i64* %296, align 8
  %298 = bitcast %"struct.std::__1::__split_buffer.722"* %5 to i64*
  store i64 %292, i64* %298, align 8
  %299 = inttoptr i64 %292 to %"class.util::IdType"*
  %300 = inttoptr i64 %291 to %"class.util::IdType"*
  %301 = icmp eq %"class.util::IdType"* %300, %299
  br i1 %301, label %309, label %302

302:                                              ; preds = %288
  %303 = getelementptr %"class.util::IdType", %"class.util::IdType"* %300, i64 -1, i32 0, i32 0
  %304 = ptrtoint i64* %303 to i64
  %305 = sub i64 %304, %292
  %306 = lshr i64 %305, 3
  %307 = xor i64 %306, -1
  %308 = getelementptr %"class.util::IdType", %"class.util::IdType"* %300, i64 %307
  store %"class.util::IdType"* %308, %"class.util::IdType"** %169, align 8
  br label %309

309:                                              ; preds = %302, %288
  %310 = icmp eq i64 %292, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %309
  %312 = inttoptr i64 %292 to i8*
  call void @_ZdlPv(i8* %312) #17
  br label %313

313:                                              ; preds = %309, %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #16
  br label %314

314:                                              ; preds = %17, %162, %313
  %315 = phi %"class.util::IdType"* [ %1, %17 ], [ %1, %162 ], [ %214, %313 ]
  ret %"class.util::IdType"* %315
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEERNS_9allocatorIS5_EEE12emplace_backIJRKS5_EEEvDpOT_(%"struct.std::__1::__split_buffer.722"*, %"class.util::IdType"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %0, i64 0, i32 2
  %4 = load %"class.util::IdType"*, %"class.util::IdType"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.util::IdType"*, %"class.util::IdType"** %5, align 8
  %7 = icmp eq %"class.util::IdType"* %4, %6
  %8 = ptrtoint %"class.util::IdType"* %6 to i64
  br i1 %7, label %9, label %233

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %0, i64 0, i32 1
  %11 = load %"class.util::IdType"*, %"class.util::IdType"** %10, align 8
  %12 = bitcast %"class.util::IdType"* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.722", %"struct.std::__1::__split_buffer.722"* %0, i64 0, i32 0
  %14 = load %"class.util::IdType"*, %"class.util::IdType"** %13, align 8
  %15 = icmp ugt %"class.util::IdType"* %11, %14
  %16 = ptrtoint %"class.util::IdType"* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint %"class.util::IdType"* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %22
  %24 = ptrtoint %"class.util::IdType"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.util::IdType"* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #16
  %30 = load %"class.util::IdType"*, %"class.util::IdType"** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi %"class.util::IdType"* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %23, i64 %26
  store %"class.util::IdType"* %33, %"class.util::IdType"** %3, align 8
  %34 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %32, i64 %22
  store %"class.util::IdType"* %34, %"class.util::IdType"** %10, align 8
  br label %233

35:                                               ; preds = %9
  %36 = bitcast %"class.util::IdType"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.722"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #18
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #17
  %48 = bitcast i8* %47 to %"class.util::IdType"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %48, i64 %45
  %51 = ptrtoint %"class.util::IdType"* %50 to i64
  %52 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %48, i64 %41
  %53 = ptrtoint %"class.util::IdType"* %52 to i64
  %54 = ptrtoint %"class.util::IdType"* %11 to i64
  %55 = ptrtoint %"class.util::IdType"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %223, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr %"class.util::IdType", %"class.util::IdType"* %11, i64 %74
  %76 = bitcast %"class.util::IdType"* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %81
  %83 = getelementptr %"class.util::IdType", %"class.util::IdType"* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %92
  %95 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %92, i32 0, i32 0
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !128
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !128
  %101 = bitcast %"class.util::IdType"* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !131, !noalias !128
  %102 = getelementptr %"class.util::IdType", %"class.util::IdType"* %94, i64 2
  %103 = bitcast %"class.util::IdType"* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !131, !noalias !128
  %104 = or i64 %92, 4
  %105 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %104
  %106 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %104, i32 0, i32 0
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !128
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !128
  %112 = bitcast %"class.util::IdType"* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !131, !noalias !128
  %113 = getelementptr %"class.util::IdType", %"class.util::IdType"* %105, i64 2
  %114 = bitcast %"class.util::IdType"* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !131, !noalias !128
  %115 = or i64 %92, 8
  %116 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %115
  %117 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %115, i32 0, i32 0
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !128
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !128
  %123 = bitcast %"class.util::IdType"* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !131, !noalias !128
  %124 = getelementptr %"class.util::IdType", %"class.util::IdType"* %116, i64 2
  %125 = bitcast %"class.util::IdType"* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !131, !noalias !128
  %126 = or i64 %92, 12
  %127 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %126
  %128 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %126, i32 0, i32 0
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !128
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !128
  %134 = bitcast %"class.util::IdType"* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !131, !noalias !128
  %135 = getelementptr %"class.util::IdType", %"class.util::IdType"* %127, i64 2
  %136 = bitcast %"class.util::IdType"* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !131, !noalias !128
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !133

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr %"class.util::IdType", %"class.util::IdType"* %50, i64 %144
  %147 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %11, i64 %144, i32 0, i32 0
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !128
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !128
  %153 = bitcast %"class.util::IdType"* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !131, !noalias !128
  %154 = getelementptr %"class.util::IdType", %"class.util::IdType"* %146, i64 2
  %155 = bitcast %"class.util::IdType"* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !131, !noalias !128
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !134

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %220, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi %"class.util::IdType"* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi %"class.util::IdType"* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint %"class.util::IdType"* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %186, label %175

175:                                              ; preds = %161, %175
  %176 = phi %"class.util::IdType"* [ %182, %175 ], [ %162, %161 ]
  %177 = phi %"class.util::IdType"* [ %183, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %184, %175 ], [ %173, %161 ]
  %179 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %177, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %176, i64 0, i32 0, i32 0
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %176, i64 1
  %183 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %177, i64 1
  %184 = add i64 %178, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %175, !llvm.loop !135

186:                                              ; preds = %175, %161
  %187 = phi %"class.util::IdType"* [ %162, %161 ], [ %182, %175 ]
  %188 = phi %"class.util::IdType"* [ %163, %161 ], [ %183, %175 ]
  %189 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %189, label %220, label %190

190:                                              ; preds = %186, %190
  %191 = phi %"class.util::IdType"* [ %217, %190 ], [ %187, %186 ]
  %192 = phi %"class.util::IdType"* [ %218, %190 ], [ %188, %186 ]
  %193 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 0, i32 0, i32 0
  %195 = load i64, i64* %193, align 8
  store i64 %195, i64* %194, align 8
  %196 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 1, i32 0, i32 0
  %197 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 1, i32 0, i32 0
  %198 = load i64, i64* %196, align 8
  store i64 %198, i64* %197, align 8
  %199 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 2, i32 0, i32 0
  %200 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 2, i32 0, i32 0
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 3, i32 0, i32 0
  %203 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 3, i32 0, i32 0
  %204 = load i64, i64* %202, align 8
  store i64 %204, i64* %203, align 8
  %205 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 4, i32 0, i32 0
  %206 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 4, i32 0, i32 0
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  %208 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 5, i32 0, i32 0
  %209 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 5, i32 0, i32 0
  %210 = load i64, i64* %208, align 8
  store i64 %210, i64* %209, align 8
  %211 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 6, i32 0, i32 0
  %212 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 6, i32 0, i32 0
  %213 = load i64, i64* %211, align 8
  store i64 %213, i64* %212, align 8
  %214 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 7, i32 0, i32 0
  %215 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 7, i32 0, i32 0
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %191, i64 8
  %218 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %192, i64 8
  %219 = icmp eq %"class.util::IdType"* %58, %217
  br i1 %219, label %220, label %190, !llvm.loop !136

220:                                              ; preds = %186, %190, %159
  %221 = ptrtoint %"class.util::IdType"* %58 to i64
  %222 = load %"class.util::IdType"*, %"class.util::IdType"** %13, align 8
  br label %223

223:                                              ; preds = %44, %220
  %224 = phi %"class.util::IdType"* [ %222, %220 ], [ %14, %44 ]
  %225 = phi i64 [ %221, %220 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %226 = bitcast %"class.util::IdType"** %10 to i64*
  store i64 %51, i64* %226, align 8
  %227 = bitcast %"class.util::IdType"** %3 to i64*
  store i64 %225, i64* %227, align 8
  store i64 %53, i64* %36, align 8
  %228 = icmp eq %"class.util::IdType"* %224, null
  %229 = inttoptr i64 %225 to %"class.util::IdType"*
  br i1 %228, label %233, label %230

230:                                              ; preds = %223
  %231 = bitcast %"class.util::IdType"* %224 to i8*
  tail call void @_ZdlPv(i8* %231) #17
  %232 = load %"class.util::IdType"*, %"class.util::IdType"** %3, align 8
  br label %233

233:                                              ; preds = %230, %223, %31, %2
  %234 = phi %"class.util::IdType"* [ %232, %230 ], [ %229, %223 ], [ %33, %31 ], [ %4, %2 ]
  %235 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %234, i64 0, i32 0, i32 0
  %237 = load i64, i64* %235, align 8
  store i64 %237, i64* %236, align 8
  %238 = load %"class.util::IdType"*, %"class.util::IdType"** %3, align 8
  %239 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %238, i64 1
  store %"class.util::IdType"* %239, %"class.util::IdType"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3viz20AggregatedRenderPassENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.228"*, %"class.std::__1::unique_ptr.230"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.230"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.228"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.228"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.230"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.230"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.230"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.230"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.230"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.230"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.230"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.230"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.230"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.viz::AggregatedRenderPass"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.230"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.230"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.230"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.230"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !137

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.230"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.230"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.230"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.230"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.230"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.230"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.230"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.230"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.230"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.230"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.230"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.230"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.230"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.230"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.230"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.230"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.230"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.230"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.230"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.230"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.230"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.230"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.230"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.230"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.230"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.230"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.230"*
  %138 = icmp eq %"class.std::__1::unique_ptr.230"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.230"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %142, align 8
  store %"class.viz::AggregatedRenderPass"* null, %"class.viz::AggregatedRenderPass"** %142, align 8
  %144 = icmp eq %"class.viz::AggregatedRenderPass"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"* nonnull %143) #16
  %146 = bitcast %"class.viz::AggregatedRenderPass"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #17
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.230"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #1

declare void @_ZN3viz28AggregatedRenderPassDrawQuadC1Ev(%"class.viz::AggregatedRenderPassDrawQuad"*) unnamed_addr #1

declare void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"*) unnamed_addr #1

declare void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper15ReverseIteratorD2Ev(%"class.cc::ListContainerHelper::ReverseIterator"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper6rbeginEv(%"class.cc::ListContainerHelper::ReverseIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper15ReverseIteratorD1Ev(%"class.cc::ListContainerHelper::ReverseIterator"*) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator16ReverseIncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.306"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS0_IS6_NS_9allocatorIS6_EEEEEEEENSD_ISH_EEE7emplaceIJRKS6_SG_EEENS_11__wrap_iterIPSH_EENSN_IPKSH_EEDpOT_(%"class.std::__1::vector.304"*, %"struct.std::__1::pair.306"*, %"class.util::IdType"* dereferenceable(8), %"class.base::internal::flat_tree.294"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.306"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.737", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.304", %"class.std::__1::vector.304"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.304", %"class.std::__1::vector.304"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.304", %"class.std::__1::vector.304"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.306"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.306"* %11 to i64
  br i1 %12, label %14, label %196

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair.306"* %9, %1
  %16 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %2, i64 0, i32 0, i32 0
  br i1 %15, label %17, label %39

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %16, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1
  %21 = bitcast %"class.base::internal::flat_tree.294"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #16
  %22 = bitcast %"class.base::internal::flat_tree.294"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::internal::flat_tree.294"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %3, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.util::IdType"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = bitcast %"class.util::IdType"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.util::IdType"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.util::IdType"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.base::internal::flat_tree.294"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #16
  %36 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 1
  %37 = ptrtoint %"struct.std::__1::pair.306"* %36 to i64
  %38 = bitcast %"struct.std::__1::pair.306"** %8 to i64*
  store i64 %37, i64* %38, align 8
  br label %474

39:                                               ; preds = %14
  %40 = load i64, i64* %16, align 8
  %41 = bitcast %"class.base::internal::flat_tree.294"* %3 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.util::IdType"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::internal::flat_tree.294"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #16
  %47 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %8, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 1
  %49 = ptrtoint %"struct.std::__1::pair.306"* %47 to i64
  %50 = ptrtoint %"struct.std::__1::pair.306"* %48 to i64
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 5
  %53 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 %52
  %54 = bitcast %"struct.std::__1::pair.306"** %8 to i64*
  %55 = icmp ult %"struct.std::__1::pair.306"* %53, %47
  br i1 %55, label %56, label %96

56:                                               ; preds = %39
  %57 = sub nsw i64 0, %52
  %58 = getelementptr %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 %57, i32 0, i32 0, i32 0
  %59 = bitcast i64* %58 to i8*
  %60 = xor i64 %5, -1
  %61 = getelementptr i8, i8* %59, i64 %60
  %62 = ptrtoint i8* %61 to i64
  %63 = and i64 %62, 32
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %88

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %53, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 %52, i32 1
  %71 = bitcast %"class.base::internal::flat_tree.294"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #16
  %72 = bitcast %"class.base::internal::flat_tree.294"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.base::internal::flat_tree.294"* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 %52, i32 1, i32 0, i32 0, i32 1
  %76 = bitcast %"class.util::IdType"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 0, i32 1, i32 0, i32 0, i32 1
  %79 = bitcast %"class.util::IdType"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 %52, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.util::IdType"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast %"class.util::IdType"** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast %"class.base::internal::flat_tree.294"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #16
  %86 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %53, i64 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %47, i64 1
  br label %88

88:                                               ; preds = %65, %56
  %89 = phi %"struct.std::__1::pair.306"* [ %47, %56 ], [ %87, %65 ]
  %90 = phi %"struct.std::__1::pair.306"* [ %53, %56 ], [ %86, %65 ]
  %91 = phi %"struct.std::__1::pair.306"* [ undef, %56 ], [ %87, %65 ]
  %92 = icmp ult i8* %61, inttoptr (i64 32 to i8*)
  br i1 %92, label %93, label %134

93:                                               ; preds = %134, %88
  %94 = phi %"struct.std::__1::pair.306"* [ %91, %88 ], [ %178, %134 ]
  %95 = ptrtoint %"struct.std::__1::pair.306"* %94 to i64
  br label %96

96:                                               ; preds = %93, %39
  %97 = phi i64 [ %95, %93 ], [ %49, %39 ]
  store i64 %97, i64* %54, align 8
  %98 = icmp eq i64 %51, 0
  br i1 %98, label %180, label %99

99:                                               ; preds = %96, %118
  %100 = phi %"struct.std::__1::pair.306"* [ %103, %118 ], [ %47, %96 ]
  %101 = phi %"struct.std::__1::pair.306"* [ %102, %118 ], [ %53, %96 ]
  %102 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 -1
  %103 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %100, i64 -1
  %104 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %102, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %103, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 -1, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %100, i64 -1, i32 1
  %109 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.util::IdType"*, %"class.util::IdType"** %109, align 8
  %111 = icmp eq %"class.util::IdType"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %99
  %113 = ptrtoint %"class.util::IdType"* %110 to i64
  %114 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %100, i64 -1, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.util::IdType"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.util::IdType"* %110 to i8*
  tail call void @_ZdlPv(i8* %116) #17
  %117 = bitcast %"class.base::internal::flat_tree.294"* %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #16
  br label %118

118:                                              ; preds = %99, %112
  %119 = bitcast %"class.base::internal::flat_tree.294"* %107 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.base::internal::flat_tree.294"* %108 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 -1, i32 1, i32 0, i32 0, i32 1
  %123 = bitcast %"class.util::IdType"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %100, i64 -1, i32 1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.util::IdType"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %101, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = bitcast %"class.util::IdType"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %100, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast %"class.util::IdType"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast %"class.base::internal::flat_tree.294"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #16
  %133 = icmp eq %"struct.std::__1::pair.306"* %102, %1
  br i1 %133, label %180, label %99

134:                                              ; preds = %88, %134
  %135 = phi %"struct.std::__1::pair.306"* [ %178, %134 ], [ %89, %88 ]
  %136 = phi %"struct.std::__1::pair.306"* [ %177, %134 ], [ %90, %88 ]
  %137 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 0, i32 0, i32 0, i32 0
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 0, i32 1
  %142 = bitcast %"class.base::internal::flat_tree.294"* %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #16
  %143 = bitcast %"class.base::internal::flat_tree.294"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.base::internal::flat_tree.294"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 0, i32 1, i32 0, i32 0, i32 1
  %147 = bitcast %"class.util::IdType"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 0, i32 1, i32 0, i32 0, i32 1
  %150 = bitcast %"class.util::IdType"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"class.util::IdType"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %155 = bitcast %"class.util::IdType"** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = bitcast %"class.base::internal::flat_tree.294"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #16
  %157 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 1, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 1, i32 0, i32 0, i32 0
  %159 = load i64, i64* %157, align 8
  store i64 %159, i64* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 1, i32 1
  %161 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 1, i32 1
  %162 = bitcast %"class.base::internal::flat_tree.294"* %160 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #16
  %163 = bitcast %"class.base::internal::flat_tree.294"* %161 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.base::internal::flat_tree.294"* %160 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 1, i32 1, i32 0, i32 0, i32 1
  %167 = bitcast %"class.util::IdType"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 1, i32 1, i32 0, i32 0, i32 1
  %170 = bitcast %"class.util::IdType"** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %172 = bitcast %"class.util::IdType"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %175 = bitcast %"class.util::IdType"** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = bitcast %"class.base::internal::flat_tree.294"* %161 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 24, i1 false) #16
  %177 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %136, i64 2
  %178 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %135, i64 2
  %179 = icmp ult %"struct.std::__1::pair.306"* %177, %47
  br i1 %179, label %134, label %93

180:                                              ; preds = %118, %96
  %181 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 0, i32 0, i32 0
  store i64 %40, i64* %181, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1
  %183 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.util::IdType"*, %"class.util::IdType"** %183, align 8
  %185 = icmp eq %"class.util::IdType"* %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %180
  %187 = ptrtoint %"class.util::IdType"* %184 to i64
  %188 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %189 = bitcast %"class.util::IdType"** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast %"class.util::IdType"* %184 to i8*
  tail call void @_ZdlPv(i8* %190) #17
  %191 = bitcast %"class.base::internal::flat_tree.294"* %182 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #16
  br label %192

192:                                              ; preds = %180, %186
  %193 = bitcast %"class.base::internal::flat_tree.294"* %182 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %193, align 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %195 = bitcast %"class.util::IdType"** %194 to i64*
  store i64 %45, i64* %195, align 8
  br label %474

196:                                              ; preds = %4
  %197 = ptrtoint %"struct.std::__1::pair.306"* %9 to i64
  %198 = getelementptr inbounds %"class.std::__1::vector.304", %"class.std::__1::vector.304"* %0, i64 0, i32 0, i32 2
  %199 = bitcast %"struct.std::__1::__split_buffer.737"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %199) #16
  %200 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %6, i64 0, i32 0
  %201 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %6, i64 0, i32 1
  %202 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %6, i64 0, i32 2
  %203 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %6, i64 0, i32 3, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %6, i64 0, i32 3, i32 1, i32 0
  %205 = bitcast %"struct.std::__1::pair.306"** %8 to i64*
  %206 = bitcast %"class.std::__1::vector.304"* %0 to i64*
  %207 = bitcast %"struct.std::__1::__split_buffer.737"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 -86, i64 40, i1 false)
  %208 = load i64, i64* %206, align 8
  %209 = sub i64 %197, %208
  %210 = ashr exact i64 %209, 5
  %211 = add nsw i64 %210, 1
  %212 = icmp ugt i64 %211, 576460752303423487
  br i1 %212, label %213, label %215

213:                                              ; preds = %196
  %214 = bitcast %"class.std::__1::vector.304"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %214) #18
  unreachable

215:                                              ; preds = %196
  %216 = bitcast %"struct.std::__1::pair.306"** %10 to i64*
  %217 = sub i64 %13, %208
  %218 = ashr exact i64 %217, 5
  %219 = icmp ult i64 %218, 288230376151711743
  br i1 %219, label %224, label %220

220:                                              ; preds = %215
  %221 = sub i64 %5, %208
  %222 = ashr exact i64 %221, 5
  store %"struct.std::__1::pair.306"* null, %"struct.std::__1::pair.306"** %203, align 8
  %223 = bitcast %"class.std::__1::allocator.310"** %204 to %"class.std::__1::__compressed_pair.307"**
  store %"class.std::__1::__compressed_pair.307"* %198, %"class.std::__1::__compressed_pair.307"** %223, align 8
  br label %235

224:                                              ; preds = %215
  %225 = ashr exact i64 %217, 4
  %226 = icmp ult i64 %225, %211
  %227 = select i1 %226, i64 %211, i64 %225
  %228 = sub i64 %5, %208
  %229 = ashr exact i64 %228, 5
  store %"struct.std::__1::pair.306"* null, %"struct.std::__1::pair.306"** %203, align 8
  %230 = bitcast %"class.std::__1::allocator.310"** %204 to %"class.std::__1::__compressed_pair.307"**
  store %"class.std::__1::__compressed_pair.307"* %198, %"class.std::__1::__compressed_pair.307"** %230, align 8
  %231 = icmp eq i64 %227, 0
  br i1 %231, label %241, label %232

232:                                              ; preds = %224
  %233 = icmp ugt i64 %227, 576460752303423487
  br i1 %233, label %234, label %235

234:                                              ; preds = %232
  tail call void @abort() #18
  unreachable

235:                                              ; preds = %220, %232
  %236 = phi i64 [ 576460752303423487, %220 ], [ %227, %232 ]
  %237 = phi i64 [ %222, %220 ], [ %229, %232 ]
  %238 = shl i64 %236, 5
  %239 = tail call i8* @_Znwm(i64 %238) #17
  %240 = bitcast i8* %239 to %"struct.std::__1::pair.306"*
  br label %241

241:                                              ; preds = %224, %235
  %242 = phi i64 [ %237, %235 ], [ %229, %224 ]
  %243 = phi i64 [ %236, %235 ], [ 0, %224 ]
  %244 = phi %"struct.std::__1::pair.306"* [ %240, %235 ], [ null, %224 ]
  store %"struct.std::__1::pair.306"* %244, %"struct.std::__1::pair.306"** %200, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %244, i64 %242
  store %"struct.std::__1::pair.306"* %245, %"struct.std::__1::pair.306"** %202, align 8
  store %"struct.std::__1::pair.306"* %245, %"struct.std::__1::pair.306"** %201, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %244, i64 %243
  store %"struct.std::__1::pair.306"* %246, %"struct.std::__1::pair.306"** %203, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEEEEERNSE_ISI_EEE12emplace_backIJRKS6_SH_EEEvDpOT_(%"struct.std::__1::__split_buffer.737"* nonnull %6, %"class.util::IdType"* dereferenceable(8) %2, %"class.base::internal::flat_tree.294"* dereferenceable(24) %3)
  %247 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %201, align 8
  %248 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %7, align 8
  %249 = icmp eq %"struct.std::__1::pair.306"* %248, %1
  br i1 %249, label %335, label %250

250:                                              ; preds = %241
  %251 = ptrtoint %"struct.std::__1::pair.306"* %248 to i64
  %252 = getelementptr %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 -1, i32 0, i32 0, i32 0
  %253 = ptrtoint i64* %252 to i64
  %254 = sub i64 %253, %251
  %255 = and i64 %254, 32
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %281

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 -1
  %259 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %247, i64 -1, i32 0, i32 0, i32 0
  %261 = load i64, i64* %259, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %247, i64 -1, i32 1
  %263 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 -1, i32 1
  %264 = bitcast %"class.base::internal::flat_tree.294"* %262 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %264, i8 0, i64 24, i1 false) #16
  %265 = bitcast %"class.base::internal::flat_tree.294"* %263 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.base::internal::flat_tree.294"* %262 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 -1, i32 1, i32 0, i32 0, i32 1
  %269 = bitcast %"class.util::IdType"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %247, i64 -1, i32 1, i32 0, i32 0, i32 1
  %272 = bitcast %"class.util::IdType"** %271 to i64*
  store i64 %270, i64* %272, align 8
  %273 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %274 = bitcast %"class.util::IdType"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %247, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %277 = bitcast %"class.util::IdType"** %276 to i64*
  store i64 %275, i64* %277, align 8
  %278 = bitcast %"class.base::internal::flat_tree.294"* %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 24, i1 false) #16
  %279 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %201, align 8
  %280 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %279, i64 -1
  store %"struct.std::__1::pair.306"* %280, %"struct.std::__1::pair.306"** %201, align 8
  br label %281

281:                                              ; preds = %257, %250
  %282 = phi %"struct.std::__1::pair.306"* [ undef, %250 ], [ %280, %257 ]
  %283 = phi %"struct.std::__1::pair.306"* [ %247, %250 ], [ %280, %257 ]
  %284 = phi %"struct.std::__1::pair.306"* [ %1, %250 ], [ %258, %257 ]
  %285 = icmp ult i64 %254, 32
  br i1 %285, label %335, label %286

286:                                              ; preds = %281, %286
  %287 = phi %"struct.std::__1::pair.306"* [ %333, %286 ], [ %283, %281 ]
  %288 = phi %"struct.std::__1::pair.306"* [ %311, %286 ], [ %284, %281 ]
  %289 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -1, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %287, i64 -1, i32 0, i32 0, i32 0
  %291 = load i64, i64* %289, align 8
  store i64 %291, i64* %290, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %287, i64 -1, i32 1
  %293 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -1, i32 1
  %294 = bitcast %"class.base::internal::flat_tree.294"* %292 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #16
  %295 = bitcast %"class.base::internal::flat_tree.294"* %293 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.base::internal::flat_tree.294"* %292 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -1, i32 1, i32 0, i32 0, i32 1
  %299 = bitcast %"class.util::IdType"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %287, i64 -1, i32 1, i32 0, i32 0, i32 1
  %302 = bitcast %"class.util::IdType"** %301 to i64*
  store i64 %300, i64* %302, align 8
  %303 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %304 = bitcast %"class.util::IdType"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %287, i64 -1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %307 = bitcast %"class.util::IdType"** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = bitcast %"class.base::internal::flat_tree.294"* %293 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %308, i8 0, i64 24, i1 false) #16
  %309 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %201, align 8
  %310 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %309, i64 -1
  store %"struct.std::__1::pair.306"* %310, %"struct.std::__1::pair.306"** %201, align 8
  %311 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -2
  %312 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %309, i64 -2, i32 0, i32 0, i32 0
  %314 = load i64, i64* %312, align 8
  store i64 %314, i64* %313, align 8
  %315 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %309, i64 -2, i32 1
  %316 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -2, i32 1
  %317 = bitcast %"class.base::internal::flat_tree.294"* %315 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 24, i1 false) #16
  %318 = bitcast %"class.base::internal::flat_tree.294"* %316 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.base::internal::flat_tree.294"* %315 to i64*
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -2, i32 1, i32 0, i32 0, i32 1
  %322 = bitcast %"class.util::IdType"** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %309, i64 -2, i32 1, i32 0, i32 0, i32 1
  %325 = bitcast %"class.util::IdType"** %324 to i64*
  store i64 %323, i64* %325, align 8
  %326 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %288, i64 -2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %327 = bitcast %"class.util::IdType"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %309, i64 -2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %330 = bitcast %"class.util::IdType"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = bitcast %"class.base::internal::flat_tree.294"* %316 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 24, i1 false) #16
  %332 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %201, align 8
  %333 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %332, i64 -1
  store %"struct.std::__1::pair.306"* %333, %"struct.std::__1::pair.306"** %201, align 8
  %334 = icmp eq %"struct.std::__1::pair.306"* %311, %248
  br i1 %334, label %335, label %286

335:                                              ; preds = %281, %286, %241
  %336 = phi %"struct.std::__1::pair.306"* [ %247, %241 ], [ %282, %281 ], [ %333, %286 ]
  %337 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %8, align 8
  %338 = icmp eq %"struct.std::__1::pair.306"* %337, %1
  br i1 %338, label %339, label %345

339:                                              ; preds = %335
  %340 = ptrtoint %"struct.std::__1::pair.306"* %337 to i64
  %341 = ptrtoint %"struct.std::__1::pair.306"* %336 to i64
  %342 = bitcast %"struct.std::__1::pair.306"** %201 to i64*
  %343 = bitcast %"struct.std::__1::pair.306"** %202 to i64*
  %344 = load i64, i64* %343, align 8
  br label %437

345:                                              ; preds = %335
  %346 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %202, align 8
  %347 = getelementptr %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %337, i64 -1, i32 0, i32 0, i32 0
  %348 = ptrtoint i64* %347 to i64
  %349 = sub i64 %348, %5
  %350 = and i64 %349, 32
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %376

352:                                              ; preds = %345
  %353 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 0, i32 0, i32 0
  %354 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %346, i64 0, i32 0, i32 0, i32 0
  %355 = load i64, i64* %353, align 8
  store i64 %355, i64* %354, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %346, i64 0, i32 1
  %357 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1
  %358 = bitcast %"class.base::internal::flat_tree.294"* %356 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 24, i1 false) #16
  %359 = bitcast %"class.base::internal::flat_tree.294"* %357 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast %"class.base::internal::flat_tree.294"* %356 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %363 = bitcast %"class.util::IdType"** %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %346, i64 0, i32 1, i32 0, i32 0, i32 1
  %366 = bitcast %"class.util::IdType"** %365 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %368 = bitcast %"class.util::IdType"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %346, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %371 = bitcast %"class.util::IdType"** %370 to i64*
  store i64 %369, i64* %371, align 8
  %372 = bitcast %"class.base::internal::flat_tree.294"* %357 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 24, i1 false) #16
  %373 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %1, i64 1
  %374 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %202, align 8
  %375 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %374, i64 1
  store %"struct.std::__1::pair.306"* %375, %"struct.std::__1::pair.306"** %202, align 8
  br label %376

376:                                              ; preds = %352, %345
  %377 = phi %"struct.std::__1::pair.306"* [ undef, %345 ], [ %375, %352 ]
  %378 = phi %"struct.std::__1::pair.306"* [ %346, %345 ], [ %375, %352 ]
  %379 = phi %"struct.std::__1::pair.306"* [ %1, %345 ], [ %373, %352 ]
  %380 = icmp ult i64 %349, 32
  br i1 %380, label %430, label %381

381:                                              ; preds = %376, %381
  %382 = phi %"struct.std::__1::pair.306"* [ %428, %381 ], [ %378, %376 ]
  %383 = phi %"struct.std::__1::pair.306"* [ %426, %381 ], [ %379, %376 ]
  %384 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 0, i32 0, i32 0, i32 0
  %385 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %382, i64 0, i32 0, i32 0, i32 0
  %386 = load i64, i64* %384, align 8
  store i64 %386, i64* %385, align 8
  %387 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %382, i64 0, i32 1
  %388 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 0, i32 1
  %389 = bitcast %"class.base::internal::flat_tree.294"* %387 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %389, i8 0, i64 24, i1 false) #16
  %390 = bitcast %"class.base::internal::flat_tree.294"* %388 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = bitcast %"class.base::internal::flat_tree.294"* %387 to i64*
  store i64 %391, i64* %392, align 8
  %393 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 0, i32 1, i32 0, i32 0, i32 1
  %394 = bitcast %"class.util::IdType"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %382, i64 0, i32 1, i32 0, i32 0, i32 1
  %397 = bitcast %"class.util::IdType"** %396 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %399 = bitcast %"class.util::IdType"** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %382, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %402 = bitcast %"class.util::IdType"** %401 to i64*
  store i64 %400, i64* %402, align 8
  %403 = bitcast %"class.base::internal::flat_tree.294"* %388 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %403, i8 0, i64 24, i1 false) #16
  %404 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %202, align 8
  %405 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %404, i64 1
  store %"struct.std::__1::pair.306"* %405, %"struct.std::__1::pair.306"** %202, align 8
  %406 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 1, i32 0, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %405, i64 0, i32 0, i32 0, i32 0
  %408 = load i64, i64* %406, align 8
  store i64 %408, i64* %407, align 8
  %409 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %404, i64 1, i32 1
  %410 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 1, i32 1
  %411 = bitcast %"class.base::internal::flat_tree.294"* %409 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %411, i8 0, i64 24, i1 false) #16
  %412 = bitcast %"class.base::internal::flat_tree.294"* %410 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = bitcast %"class.base::internal::flat_tree.294"* %409 to i64*
  store i64 %413, i64* %414, align 8
  %415 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 1, i32 1, i32 0, i32 0, i32 1
  %416 = bitcast %"class.util::IdType"** %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %404, i64 1, i32 1, i32 0, i32 0, i32 1
  %419 = bitcast %"class.util::IdType"** %418 to i64*
  store i64 %417, i64* %419, align 8
  %420 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %421 = bitcast %"class.util::IdType"** %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %404, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %424 = bitcast %"class.util::IdType"** %423 to i64*
  store i64 %422, i64* %424, align 8
  %425 = bitcast %"class.base::internal::flat_tree.294"* %410 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %425, i8 0, i64 24, i1 false) #16
  %426 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %383, i64 2
  %427 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %202, align 8
  %428 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %427, i64 1
  store %"struct.std::__1::pair.306"* %428, %"struct.std::__1::pair.306"** %202, align 8
  %429 = icmp eq %"struct.std::__1::pair.306"* %426, %337
  br i1 %429, label %430, label %381

430:                                              ; preds = %381, %376
  %431 = phi %"struct.std::__1::pair.306"* [ %377, %376 ], [ %428, %381 ]
  %432 = ptrtoint %"struct.std::__1::pair.306"* %431 to i64
  %433 = bitcast %"struct.std::__1::pair.306"** %201 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = load i64, i64* %205, align 8
  %436 = bitcast %"struct.std::__1::pair.306"** %202 to i64*
  br label %437

437:                                              ; preds = %339, %430
  %438 = phi i64* [ %343, %339 ], [ %436, %430 ]
  %439 = phi i64 [ %344, %339 ], [ %432, %430 ]
  %440 = phi i64 [ %340, %339 ], [ %435, %430 ]
  %441 = phi i64* [ %342, %339 ], [ %433, %430 ]
  %442 = phi i64 [ %341, %339 ], [ %434, %430 ]
  %443 = load i64, i64* %206, align 8
  store i64 %442, i64* %206, align 8
  store i64 %443, i64* %441, align 8
  store i64 %439, i64* %205, align 8
  store i64 %440, i64* %438, align 8
  %444 = load i64, i64* %216, align 8
  %445 = bitcast %"struct.std::__1::pair.306"** %203 to i64*
  %446 = load i64, i64* %445, align 8
  store i64 %446, i64* %216, align 8
  store i64 %444, i64* %445, align 8
  %447 = bitcast %"struct.std::__1::__split_buffer.737"* %6 to i64*
  store i64 %443, i64* %447, align 8
  %448 = inttoptr i64 %443 to %"struct.std::__1::pair.306"*
  %449 = inttoptr i64 %440 to %"struct.std::__1::pair.306"*
  %450 = icmp eq %"struct.std::__1::pair.306"* %449, %448
  br i1 %450, label %468, label %451

451:                                              ; preds = %437, %463
  %452 = phi %"struct.std::__1::pair.306"* [ %464, %463 ], [ %449, %437 ]
  %453 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %452, i64 -1
  store %"struct.std::__1::pair.306"* %453, %"struct.std::__1::pair.306"** %202, align 8
  %454 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %452, i64 -1, i32 1, i32 0, i32 0, i32 0
  %455 = load %"class.util::IdType"*, %"class.util::IdType"** %454, align 8
  %456 = icmp eq %"class.util::IdType"* %455, null
  br i1 %456, label %463, label %457

457:                                              ; preds = %451
  %458 = ptrtoint %"class.util::IdType"* %455 to i64
  %459 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %452, i64 -1, i32 1, i32 0, i32 0, i32 1
  %460 = bitcast %"class.util::IdType"** %459 to i64*
  store i64 %458, i64* %460, align 8
  %461 = bitcast %"class.util::IdType"* %455 to i8*
  call void @_ZdlPv(i8* %461) #17
  %462 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %202, align 8
  br label %463

463:                                              ; preds = %457, %451
  %464 = phi %"struct.std::__1::pair.306"* [ %453, %451 ], [ %462, %457 ]
  %465 = icmp eq %"struct.std::__1::pair.306"* %464, %448
  br i1 %465, label %466, label %451

466:                                              ; preds = %463
  %467 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %200, align 8
  br label %468

468:                                              ; preds = %466, %437
  %469 = phi %"struct.std::__1::pair.306"* [ %467, %466 ], [ %448, %437 ]
  %470 = icmp eq %"struct.std::__1::pair.306"* %469, null
  br i1 %470, label %473, label %471

471:                                              ; preds = %468
  %472 = bitcast %"struct.std::__1::pair.306"* %469 to i8*
  call void @_ZdlPv(i8* %472) #17
  br label %473

473:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %199) #16
  br label %474

474:                                              ; preds = %17, %192, %473
  %475 = phi %"struct.std::__1::pair.306"* [ %1, %17 ], [ %1, %192 ], [ %247, %473 ]
  ret %"struct.std::__1::pair.306"* %475
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEEN4base8internal9flat_treeIS6_NS7_8identityENS_4lessIvEENS_6vectorIS6_NS_9allocatorIS6_EEEEEEEERNSE_ISI_EEE12emplace_backIJRKS6_SH_EEEvDpOT_(%"struct.std::__1::__split_buffer.737"*, %"class.util::IdType"* dereferenceable(8), %"class.base::internal::flat_tree.294"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.306"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.306"* %7 to i64
  br i1 %8, label %10, label %198

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.737", %"struct.std::__1::__split_buffer.737"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.306"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.306"* %14 to i64
  br i1 %15, label %17, label %66

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.306"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 5
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.306"* %12, %5
  br i1 %24, label %62, label %25

25:                                               ; preds = %17, %42
  %26 = phi %"struct.std::__1::pair.306"* [ %58, %42 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.306"* [ %57, %42 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.util::IdType"*, %"class.util::IdType"** %33, align 8
  %35 = icmp eq %"class.util::IdType"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = ptrtoint %"class.util::IdType"* %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 0, i32 1, i32 0, i32 0, i32 1
  %39 = bitcast %"class.util::IdType"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.util::IdType"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #17
  %41 = bitcast %"class.base::internal::flat_tree.294"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #16
  br label %42

42:                                               ; preds = %25, %36
  %43 = bitcast %"class.base::internal::flat_tree.294"* %31 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::internal::flat_tree.294"* %32 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %27, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast %"class.util::IdType"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 0, i32 1, i32 0, i32 0, i32 1
  %50 = bitcast %"class.util::IdType"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %27, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.util::IdType"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.util::IdType"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.base::internal::flat_tree.294"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %27, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %26, i64 1
  %59 = icmp eq %"struct.std::__1::pair.306"* %57, %5
  br i1 %59, label %60, label %25

60:                                               ; preds = %42
  %61 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %11, align 8
  br label %62

62:                                               ; preds = %60, %17
  %63 = phi %"struct.std::__1::pair.306"* [ %5, %17 ], [ %61, %60 ]
  %64 = phi %"struct.std::__1::pair.306"* [ %23, %17 ], [ %58, %60 ]
  store %"struct.std::__1::pair.306"* %64, %"struct.std::__1::pair.306"** %4, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %63, i64 %22
  store %"struct.std::__1::pair.306"* %65, %"struct.std::__1::pair.306"** %11, align 8
  br label %198

66:                                               ; preds = %10
  %67 = bitcast %"struct.std::__1::pair.306"** %6 to i64*
  %68 = bitcast %"struct.std::__1::__split_buffer.737"* %0 to i64*
  %69 = sub i64 %9, %16
  %70 = ashr exact i64 %69, 4
  %71 = icmp eq i64 %69, 0
  %72 = select i1 %71, i64 1, i64 %70
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  tail call void @abort() #18
  unreachable

75:                                               ; preds = %66
  %76 = lshr i64 %72, 2
  %77 = shl i64 %72, 5
  %78 = tail call i8* @_Znwm(i64 %77) #17
  %79 = bitcast i8* %78 to %"struct.std::__1::pair.306"*
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %79, i64 %76
  %82 = ptrtoint %"struct.std::__1::pair.306"* %81 to i64
  %83 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %79, i64 %72
  %84 = ptrtoint %"struct.std::__1::pair.306"* %83 to i64
  %85 = ptrtoint %"struct.std::__1::pair.306"* %12 to i64
  %86 = ptrtoint %"struct.std::__1::pair.306"* %5 to i64
  %87 = sub i64 %86, %85
  %88 = ashr exact i64 %87, 5
  %89 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %81, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %173, label %91

91:                                               ; preds = %75
  %92 = add i64 %87, -32
  %93 = and i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %118

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %81, i64 0, i32 0, i32 0, i32 0
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %79, i64 %76, i32 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 0, i32 1
  %101 = bitcast %"class.base::internal::flat_tree.294"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #16
  %102 = bitcast %"class.base::internal::flat_tree.294"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::internal::flat_tree.294"* %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %106 = bitcast %"class.util::IdType"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %79, i64 %76, i32 1, i32 0, i32 0, i32 1
  %109 = bitcast %"class.util::IdType"** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.util::IdType"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %79, i64 %76, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.util::IdType"** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast %"class.base::internal::flat_tree.294"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #16
  %116 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %81, i64 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %12, i64 1
  br label %118

118:                                              ; preds = %95, %91
  %119 = phi %"struct.std::__1::pair.306"* [ %81, %91 ], [ %116, %95 ]
  %120 = phi %"struct.std::__1::pair.306"* [ %12, %91 ], [ %117, %95 ]
  %121 = icmp ult i64 %92, 32
  br i1 %121, label %168, label %122

122:                                              ; preds = %118, %122
  %123 = phi %"struct.std::__1::pair.306"* [ %165, %122 ], [ %119, %118 ]
  %124 = phi %"struct.std::__1::pair.306"* [ %166, %122 ], [ %120, %118 ]
  %125 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %125, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 0, i32 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 0, i32 1
  %130 = bitcast %"class.base::internal::flat_tree.294"* %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #16
  %131 = bitcast %"class.base::internal::flat_tree.294"* %129 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.base::internal::flat_tree.294"* %128 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 0, i32 1, i32 0, i32 0, i32 1
  %135 = bitcast %"class.util::IdType"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast %"class.util::IdType"** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"class.util::IdType"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast %"class.util::IdType"** %142 to i64*
  store i64 %141, i64* %143, align 8
  %144 = bitcast %"class.base::internal::flat_tree.294"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 24, i1 false) #16
  %145 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 1, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 1, i32 0, i32 0, i32 0
  %147 = load i64, i64* %145, align 8
  store i64 %147, i64* %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 1, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 1, i32 1
  %150 = bitcast %"class.base::internal::flat_tree.294"* %148 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #16
  %151 = bitcast %"class.base::internal::flat_tree.294"* %149 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.base::internal::flat_tree.294"* %148 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 1, i32 1, i32 0, i32 0, i32 1
  %155 = bitcast %"class.util::IdType"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 1, i32 1, i32 0, i32 0, i32 1
  %158 = bitcast %"class.util::IdType"** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %160 = bitcast %"class.util::IdType"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %163 = bitcast %"class.util::IdType"** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = bitcast %"class.base::internal::flat_tree.294"* %149 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #16
  %165 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %123, i64 2
  %166 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %124, i64 2
  %167 = icmp eq %"struct.std::__1::pair.306"* %89, %165
  br i1 %167, label %168, label %122

168:                                              ; preds = %122, %118
  %169 = ptrtoint %"struct.std::__1::pair.306"* %89 to i64
  %170 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %13, align 8
  %171 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %11, align 8
  %172 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %4, align 8
  br label %173

173:                                              ; preds = %75, %168
  %174 = phi %"struct.std::__1::pair.306"* [ %172, %168 ], [ %5, %75 ]
  %175 = phi %"struct.std::__1::pair.306"* [ %171, %168 ], [ %12, %75 ]
  %176 = phi %"struct.std::__1::pair.306"* [ %170, %168 ], [ %14, %75 ]
  %177 = phi i64 [ %169, %168 ], [ %82, %75 ]
  store i64 %80, i64* %68, align 8
  %178 = bitcast %"struct.std::__1::pair.306"** %11 to i64*
  store i64 %82, i64* %178, align 8
  %179 = bitcast %"struct.std::__1::pair.306"** %4 to i64*
  store i64 %177, i64* %179, align 8
  store i64 %84, i64* %67, align 8
  %180 = icmp eq %"struct.std::__1::pair.306"* %174, %175
  br i1 %180, label %194, label %181

181:                                              ; preds = %173, %192
  %182 = phi %"struct.std::__1::pair.306"* [ %183, %192 ], [ %174, %173 ]
  %183 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %182, i64 -1
  %184 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %182, i64 -1, i32 1, i32 0, i32 0, i32 0
  %185 = load %"class.util::IdType"*, %"class.util::IdType"** %184, align 8
  %186 = icmp eq %"class.util::IdType"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = ptrtoint %"class.util::IdType"* %185 to i64
  %189 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %182, i64 -1, i32 1, i32 0, i32 0, i32 1
  %190 = bitcast %"class.util::IdType"** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"class.util::IdType"* %185 to i8*
  tail call void @_ZdlPv(i8* %191) #17
  br label %192

192:                                              ; preds = %187, %181
  %193 = icmp eq %"struct.std::__1::pair.306"* %183, %175
  br i1 %193, label %194, label %181

194:                                              ; preds = %192, %173
  %195 = icmp eq %"struct.std::__1::pair.306"* %176, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %194
  %197 = bitcast %"struct.std::__1::pair.306"* %176 to i8*
  tail call void @_ZdlPv(i8* %197) #17
  br label %198

198:                                              ; preds = %196, %194, %62, %3
  %199 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %4, align 8
  %200 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %199, i64 0, i32 0, i32 0, i32 0
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %199, i64 0, i32 1
  %204 = bitcast %"class.base::internal::flat_tree.294"* %203 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  %205 = bitcast %"class.base::internal::flat_tree.294"* %2 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.base::internal::flat_tree.294"* %203 to i64*
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %2, i64 0, i32 0, i32 0, i32 1
  %209 = bitcast %"class.util::IdType"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %199, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.util::IdType"** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::internal::flat_tree.294", %"class.base::internal::flat_tree.294"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast %"class.util::IdType"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %199, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"class.util::IdType"** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast %"class.base::internal::flat_tree.294"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #16
  %219 = load %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"** %4, align 8
  %220 = getelementptr inbounds %"struct.std::__1::pair.306", %"struct.std::__1::pair.306"* %219, i64 1
  store %"struct.std::__1::pair.306"* %220, %"struct.std::__1::pair.306"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"*, %"class.util::IdType.445"*, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1), i64, %"class.util::IdType.445"*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %"class.util::IdType.445"* %0 to i64
  switch i64 %3, label %15 [
    i64 0, label %421
    i64 1, label %421
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %421

14:                                               ; preds = %8
  store i32 %10, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  br label %421

15:                                               ; preds = %6
  %16 = icmp slt i64 %3, 129
  br i1 %16, label %17, label %68

17:                                               ; preds = %15
  %18 = icmp eq %"class.util::IdType.445"* %0, %1
  br i1 %18, label %421, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 1
  %21 = icmp eq %"class.util::IdType.445"* %20, %1
  br i1 %21, label %421, label %22

22:                                               ; preds = %19
  %23 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -2, i32 0, i32 0
  %24 = ptrtoint i32* %23 to i64
  %25 = sub i64 %24, %7
  %26 = and i64 %25, 4
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %44

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %20, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %37, %28
  %32 = phi %"class.util::IdType.445"* [ %33, %37 ], [ %20, %28 ]
  %33 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 -1
  %34 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %33, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %30, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 0, i32 0, i32 0
  store i32 %35, i32* %38, align 4
  %39 = icmp eq %"class.util::IdType.445"* %33, %0
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %37
  %41 = phi %"class.util::IdType.445"* [ %32, %31 ], [ %0, %37 ]
  %42 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %41, i64 0, i32 0, i32 0
  store i32 %30, i32* %42, align 4
  %43 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 2
  br label %44

44:                                               ; preds = %40, %22
  %45 = phi %"class.util::IdType.445"* [ %20, %22 ], [ %43, %40 ]
  %46 = icmp ult i64 %25, 4
  br i1 %46, label %421, label %47

47:                                               ; preds = %44, %431
  %48 = phi %"class.util::IdType.445"* [ %434, %431 ], [ %45, %44 ]
  %49 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %48, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq %"class.util::IdType.445"* %48, %0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47, %65
  %53 = phi %"class.util::IdType.445"* [ %54, %65 ], [ %48, %47 ]
  %54 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %53, i64 -1
  %55 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %54, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ult i32 %50, %56
  br i1 %57, label %65, label %58

58:                                               ; preds = %65, %52, %47
  %59 = phi %"class.util::IdType.445"* [ %0, %47 ], [ %53, %52 ], [ %0, %65 ]
  %60 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %59, i64 0, i32 0, i32 0
  store i32 %50, i32* %60, align 4
  %61 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %48, i64 1
  %62 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %61, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq %"class.util::IdType.445"* %61, %0
  br i1 %64, label %431, label %422

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %53, i64 0, i32 0, i32 0
  store i32 %56, i32* %66, align 4
  %67 = icmp eq %"class.util::IdType.445"* %54, %0
  br i1 %67, label %58, label %52

68:                                               ; preds = %15
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 %69
  %71 = icmp sgt i64 %3, %5
  br i1 %71, label %419, label %72

72:                                               ; preds = %68
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.util::IdType.445"* %0, %"class.util::IdType.445"* %70, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.util::IdType.445"* %4)
  %73 = sub nsw i64 %3, %69
  %74 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %69
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.util::IdType.445"* %70, %"class.util::IdType.445"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %73, %"class.util::IdType.445"* %74)
  %75 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %3
  br label %207

76:                                               ; preds = %384
  %77 = ptrtoint %"class.util::IdType.445"* %385 to i64
  %78 = icmp eq %"class.util::IdType.445"* %385, %75
  br i1 %78, label %421, label %79

79:                                               ; preds = %76
  %80 = add i64 %3, -1
  %81 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %80, i32 0, i32 0
  %82 = ptrtoint i32* %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 2
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 8
  br i1 %86, label %87, label %114

87:                                               ; preds = %205, %114, %79
  %88 = phi %"class.util::IdType.445"* [ %385, %114 ], [ %385, %79 ], [ %128, %205 ]
  %89 = phi %"class.util::IdType.445"* [ %387, %114 ], [ %387, %79 ], [ %129, %205 ]
  %90 = ptrtoint %"class.util::IdType.445"* %88 to i64
  %91 = add i64 %3, -1
  %92 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %91, i32 0, i32 0
  %93 = ptrtoint i32* %92 to i64
  %94 = sub i64 %93, %90
  %95 = lshr i64 %94, 2
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"class.util::IdType.445"* [ %106, %99 ], [ %88, %87 ]
  %101 = phi %"class.util::IdType.445"* [ %107, %99 ], [ %89, %87 ]
  %102 = phi i64 [ %108, %99 ], [ %97, %87 ]
  %103 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %100, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %101, i64 0, i32 0, i32 0
  %105 = load i32, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  %106 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %100, i64 1
  %107 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %101, i64 1
  %108 = add i64 %102, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %99, !llvm.loop !138

110:                                              ; preds = %99, %87
  %111 = phi %"class.util::IdType.445"* [ %88, %87 ], [ %106, %99 ]
  %112 = phi %"class.util::IdType.445"* [ %89, %87 ], [ %107, %99 ]
  %113 = icmp ult i64 %94, 28
  br i1 %113, label %421, label %389

114:                                              ; preds = %79
  %115 = add i64 %3, -1
  %116 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %115, i32 0, i32 0
  %117 = ptrtoint i32* %116 to i64
  %118 = sub i64 %117, %77
  %119 = lshr i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %120
  %122 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %120
  %123 = icmp ult %"class.util::IdType.445"* %387, %122
  %124 = icmp ult %"class.util::IdType.445"* %385, %121
  %125 = and i1 %123, %124
  br i1 %125, label %87, label %126

126:                                              ; preds = %114
  %127 = and i64 %85, 9223372036854775800
  %128 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %127
  %129 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %127
  %130 = add nsw i64 %127, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 24
  br i1 %134, label %186, label %135

135:                                              ; preds = %126
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %183, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %184, %137 ]
  %140 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %138
  %141 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %138, i32 0, i32 0
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4, !alias.scope !139
  %144 = getelementptr i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !alias.scope !139
  %147 = bitcast %"class.util::IdType.445"* %140 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %147, align 4, !alias.scope !142, !noalias !139
  %148 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %140, i64 4
  %149 = bitcast %"class.util::IdType.445"* %148 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %149, align 4, !alias.scope !142, !noalias !139
  %150 = or i64 %138, 8
  %151 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %150
  %152 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %150, i32 0, i32 0
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !139
  %155 = getelementptr i32, i32* %152, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  %157 = load <4 x i32>, <4 x i32>* %156, align 4, !alias.scope !139
  %158 = bitcast %"class.util::IdType.445"* %151 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %158, align 4, !alias.scope !142, !noalias !139
  %159 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %151, i64 4
  %160 = bitcast %"class.util::IdType.445"* %159 to <4 x i32>*
  store <4 x i32> %157, <4 x i32>* %160, align 4, !alias.scope !142, !noalias !139
  %161 = or i64 %138, 16
  %162 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %161
  %163 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %161, i32 0, i32 0
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !139
  %166 = getelementptr i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4, !alias.scope !139
  %169 = bitcast %"class.util::IdType.445"* %162 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %169, align 4, !alias.scope !142, !noalias !139
  %170 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %162, i64 4
  %171 = bitcast %"class.util::IdType.445"* %170 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %171, align 4, !alias.scope !142, !noalias !139
  %172 = or i64 %138, 24
  %173 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %172
  %174 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %172, i32 0, i32 0
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4, !alias.scope !139
  %177 = getelementptr i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4, !alias.scope !139
  %180 = bitcast %"class.util::IdType.445"* %173 to <4 x i32>*
  store <4 x i32> %176, <4 x i32>* %180, align 4, !alias.scope !142, !noalias !139
  %181 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %173, i64 4
  %182 = bitcast %"class.util::IdType.445"* %181 to <4 x i32>*
  store <4 x i32> %179, <4 x i32>* %182, align 4, !alias.scope !142, !noalias !139
  %183 = add i64 %138, 32
  %184 = add i64 %139, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %137, !llvm.loop !144

186:                                              ; preds = %137, %126
  %187 = phi i64 [ 0, %126 ], [ %183, %137 ]
  %188 = icmp eq i64 %133, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %202, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %203, %189 ], [ %133, %186 ]
  %192 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %387, i64 %190
  %193 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %385, i64 %190, i32 0, i32 0
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4, !alias.scope !139
  %196 = getelementptr i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4, !alias.scope !139
  %199 = bitcast %"class.util::IdType.445"* %192 to <4 x i32>*
  store <4 x i32> %195, <4 x i32>* %199, align 4, !alias.scope !142, !noalias !139
  %200 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %192, i64 4
  %201 = bitcast %"class.util::IdType.445"* %200 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %201, align 4, !alias.scope !142, !noalias !139
  %202 = add i64 %190, 8
  %203 = add i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !145

205:                                              ; preds = %189, %186
  %206 = icmp eq i64 %85, %127
  br i1 %206, label %421, label %87

207:                                              ; preds = %72, %384
  %208 = phi %"class.util::IdType.445"* [ %386, %384 ], [ %4, %72 ]
  %209 = phi %"class.util::IdType.445"* [ %385, %384 ], [ %74, %72 ]
  %210 = phi %"class.util::IdType.445"* [ %387, %384 ], [ %0, %72 ]
  %211 = icmp eq %"class.util::IdType.445"* %209, %75
  br i1 %211, label %212, label %373

212:                                              ; preds = %207
  %213 = ptrtoint %"class.util::IdType.445"* %208 to i64
  %214 = icmp eq %"class.util::IdType.445"* %208, %74
  br i1 %214, label %421, label %215

215:                                              ; preds = %212
  %216 = add nsw i64 %69, -1
  %217 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %216, i32 0, i32 0
  %218 = ptrtoint i32* %217 to i64
  %219 = sub i64 %218, %213
  %220 = lshr i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = icmp ult i64 %221, 8
  br i1 %222, label %316, label %223

223:                                              ; preds = %215
  %224 = add nsw i64 %69, -1
  %225 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %224, i32 0, i32 0
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %213
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %229
  %231 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %229
  %232 = icmp ult %"class.util::IdType.445"* %210, %231
  %233 = icmp ult %"class.util::IdType.445"* %208, %230
  %234 = and i1 %232, %233
  br i1 %234, label %316, label %235

235:                                              ; preds = %223
  %236 = and i64 %221, 9223372036854775800
  %237 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %236
  %238 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %247, i32 0, i32 0
  %250 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %247, i32 0, i32 0
  %251 = bitcast i32* %249 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !146
  %253 = getelementptr i32, i32* %249, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !146
  %256 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !149, !noalias !146
  %257 = getelementptr i32, i32* %250, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !149, !noalias !146
  %259 = or i64 %247, 8
  %260 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %259, i32 0, i32 0
  %261 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %259, i32 0, i32 0
  %262 = bitcast i32* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !146
  %264 = getelementptr i32, i32* %260, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !146
  %267 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !149, !noalias !146
  %268 = getelementptr i32, i32* %261, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !149, !noalias !146
  %270 = or i64 %247, 16
  %271 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %270, i32 0, i32 0
  %272 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %270, i32 0, i32 0
  %273 = bitcast i32* %271 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !146
  %275 = getelementptr i32, i32* %271, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !146
  %278 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !149, !noalias !146
  %279 = getelementptr i32, i32* %272, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !149, !noalias !146
  %281 = or i64 %247, 24
  %282 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %281, i32 0, i32 0
  %283 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %281, i32 0, i32 0
  %284 = bitcast i32* %282 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !146
  %286 = getelementptr i32, i32* %282, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !146
  %289 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !149, !noalias !146
  %290 = getelementptr i32, i32* %283, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !149, !noalias !146
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !151

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 %299, i32 0, i32 0
  %302 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 %299, i32 0, i32 0
  %303 = bitcast i32* %301 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !146
  %305 = getelementptr i32, i32* %301, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !146
  %308 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !149, !noalias !146
  %309 = getelementptr i32, i32* %302, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !149, !noalias !146
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !152

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %221, %236
  br i1 %315, label %421, label %316

316:                                              ; preds = %314, %223, %215
  %317 = phi %"class.util::IdType.445"* [ %208, %223 ], [ %208, %215 ], [ %237, %314 ]
  %318 = phi %"class.util::IdType.445"* [ %210, %223 ], [ %210, %215 ], [ %238, %314 ]
  %319 = ptrtoint %"class.util::IdType.445"* %317 to i64
  %320 = add nsw i64 %69, -1
  %321 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %320, i32 0, i32 0
  %322 = ptrtoint i32* %321 to i64
  %323 = sub i64 %322, %319
  %324 = lshr i64 %323, 2
  %325 = add nuw nsw i64 %324, 1
  %326 = and i64 %325, 7
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %339, label %328

328:                                              ; preds = %316, %328
  %329 = phi %"class.util::IdType.445"* [ %335, %328 ], [ %317, %316 ]
  %330 = phi %"class.util::IdType.445"* [ %336, %328 ], [ %318, %316 ]
  %331 = phi i64 [ %337, %328 ], [ %326, %316 ]
  %332 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %329, i64 0, i32 0, i32 0
  %333 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %330, i64 0, i32 0, i32 0
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %329, i64 1
  %336 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %330, i64 1
  %337 = add i64 %331, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %328, !llvm.loop !153

339:                                              ; preds = %328, %316
  %340 = phi %"class.util::IdType.445"* [ %317, %316 ], [ %335, %328 ]
  %341 = phi %"class.util::IdType.445"* [ %318, %316 ], [ %336, %328 ]
  %342 = icmp ult i64 %323, 28
  br i1 %342, label %421, label %343

343:                                              ; preds = %339, %343
  %344 = phi %"class.util::IdType.445"* [ %370, %343 ], [ %340, %339 ]
  %345 = phi %"class.util::IdType.445"* [ %371, %343 ], [ %341, %339 ]
  %346 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 0, i32 0, i32 0
  %347 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 0, i32 0, i32 0
  %348 = load i32, i32* %346, align 4
  store i32 %348, i32* %347, align 4
  %349 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 1, i32 0, i32 0
  %350 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 1, i32 0, i32 0
  %351 = load i32, i32* %349, align 4
  store i32 %351, i32* %350, align 4
  %352 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 2, i32 0, i32 0
  %353 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 2, i32 0, i32 0
  %354 = load i32, i32* %352, align 4
  store i32 %354, i32* %353, align 4
  %355 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 3, i32 0, i32 0
  %356 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 3, i32 0, i32 0
  %357 = load i32, i32* %355, align 4
  store i32 %357, i32* %356, align 4
  %358 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 4, i32 0, i32 0
  %359 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 4, i32 0, i32 0
  %360 = load i32, i32* %358, align 4
  store i32 %360, i32* %359, align 4
  %361 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 5, i32 0, i32 0
  %362 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 5, i32 0, i32 0
  %363 = load i32, i32* %361, align 4
  store i32 %363, i32* %362, align 4
  %364 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 6, i32 0, i32 0
  %365 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 6, i32 0, i32 0
  %366 = load i32, i32* %364, align 4
  store i32 %366, i32* %365, align 4
  %367 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 7, i32 0, i32 0
  %368 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 7, i32 0, i32 0
  %369 = load i32, i32* %367, align 4
  store i32 %369, i32* %368, align 4
  %370 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %344, i64 8
  %371 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %345, i64 8
  %372 = icmp eq %"class.util::IdType.445"* %370, %74
  br i1 %372, label %421, label %343, !llvm.loop !154

373:                                              ; preds = %207
  %374 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %209, i64 0, i32 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 0, i32 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = icmp ult i32 %375, %377
  %379 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 0, i32 0, i32 0
  br i1 %378, label %380, label %382

380:                                              ; preds = %373
  store i32 %375, i32* %379, align 4
  %381 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %209, i64 1
  br label %384

382:                                              ; preds = %373
  store i32 %377, i32* %379, align 4
  %383 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %208, i64 1
  br label %384

384:                                              ; preds = %382, %380
  %385 = phi %"class.util::IdType.445"* [ %381, %380 ], [ %209, %382 ]
  %386 = phi %"class.util::IdType.445"* [ %208, %380 ], [ %383, %382 ]
  %387 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %210, i64 1
  %388 = icmp eq %"class.util::IdType.445"* %386, %74
  br i1 %388, label %76, label %207

389:                                              ; preds = %110, %389
  %390 = phi %"class.util::IdType.445"* [ %416, %389 ], [ %111, %110 ]
  %391 = phi %"class.util::IdType.445"* [ %417, %389 ], [ %112, %110 ]
  %392 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 0, i32 0, i32 0
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 1, i32 0, i32 0
  %396 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 1, i32 0, i32 0
  %397 = load i32, i32* %395, align 4
  store i32 %397, i32* %396, align 4
  %398 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 2, i32 0, i32 0
  %399 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 2, i32 0, i32 0
  %400 = load i32, i32* %398, align 4
  store i32 %400, i32* %399, align 4
  %401 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 3, i32 0, i32 0
  %402 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 3, i32 0, i32 0
  %403 = load i32, i32* %401, align 4
  store i32 %403, i32* %402, align 4
  %404 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 4, i32 0, i32 0
  %405 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 4, i32 0, i32 0
  %406 = load i32, i32* %404, align 4
  store i32 %406, i32* %405, align 4
  %407 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 5, i32 0, i32 0
  %408 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 5, i32 0, i32 0
  %409 = load i32, i32* %407, align 4
  store i32 %409, i32* %408, align 4
  %410 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 6, i32 0, i32 0
  %411 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 6, i32 0, i32 0
  %412 = load i32, i32* %410, align 4
  store i32 %412, i32* %411, align 4
  %413 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 7, i32 0, i32 0
  %414 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 7, i32 0, i32 0
  %415 = load i32, i32* %413, align 4
  store i32 %415, i32* %414, align 4
  %416 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %390, i64 8
  %417 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %391, i64 8
  %418 = icmp eq %"class.util::IdType.445"* %416, %75
  br i1 %418, label %421, label %389, !llvm.loop !155

419:                                              ; preds = %68
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %0, %"class.util::IdType.445"* %70, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.util::IdType.445"* %4, i64 %5)
  %420 = sub nsw i64 %3, %69
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %70, %"class.util::IdType.445"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %420, %"class.util::IdType.445"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.util::IdType.445"* %0, %"class.util::IdType.445"* %70, %"class.util::IdType.445"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %69, i64 %420, %"class.util::IdType.445"* %4, i64 %5)
  ret void

421:                                              ; preds = %110, %389, %339, %343, %44, %431, %205, %314, %212, %76, %19, %17, %8, %14, %6, %6
  ret void

422:                                              ; preds = %58, %428
  %423 = phi %"class.util::IdType.445"* [ %424, %428 ], [ %61, %58 ]
  %424 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %423, i64 -1
  %425 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %424, i64 0, i32 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = icmp ult i32 %63, %426
  br i1 %427, label %428, label %431

428:                                              ; preds = %422
  %429 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %423, i64 0, i32 0, i32 0
  store i32 %426, i32* %429, align 4
  %430 = icmp eq %"class.util::IdType.445"* %424, %0
  br i1 %430, label %431, label %422

431:                                              ; preds = %422, %428, %58
  %432 = phi %"class.util::IdType.445"* [ %0, %58 ], [ %423, %422 ], [ %0, %428 ]
  %433 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %432, i64 0, i32 0, i32 0
  store i32 %63, i32* %433, align 4
  %434 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %48, i64 2
  %435 = icmp eq %"class.util::IdType.445"* %434, %1
  br i1 %435, label %421, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.util::IdType.445"*, %"class.util::IdType.445"*, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1), i64, %"class.util::IdType.445"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %23 [
    i64 0, label %412
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 0, i32 0, i32 0
  %9 = load i32, i32* %7, align 4
  store i32 %9, i32* %8, align 4
  br label %412

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -1, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %12, %14
  %16 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 0, i32 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %10
  store i32 %12, i32* %16, align 4
  %18 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 1, i32 0, i32 0
  %19 = load i32, i32* %13, align 4
  store i32 %19, i32* %18, align 4
  br label %412

20:                                               ; preds = %10
  store i32 %14, i32* %16, align 4
  %21 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 1, i32 0, i32 0
  %22 = load i32, i32* %11, align 4
  store i32 %22, i32* %21, align 4
  br label %412

23:                                               ; preds = %5
  %24 = icmp slt i64 %3, 9
  br i1 %24, label %25, label %64

25:                                               ; preds = %23
  %26 = icmp eq %"class.util::IdType.445"* %0, %1
  br i1 %26, label %412, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 0, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  %31 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 1
  %32 = icmp eq %"class.util::IdType.445"* %31, %1
  br i1 %32, label %412, label %33

33:                                               ; preds = %27, %62
  %34 = phi i32 [ %63, %62 ], [ %30, %27 ]
  %35 = phi %"class.util::IdType.445"* [ %60, %62 ], [ %31, %27 ]
  %36 = phi %"class.util::IdType.445"* [ %37, %62 ], [ %4, %27 ]
  %37 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %36, i64 1
  %38 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %35, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %39, %34
  %41 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %37, i64 0, i32 0, i32 0
  br i1 %40, label %42, label %58

42:                                               ; preds = %33
  store i32 %34, i32* %41, align 4
  %43 = icmp eq %"class.util::IdType.445"* %36, %4
  br i1 %43, label %54, label %44

44:                                               ; preds = %42, %51
  %45 = phi %"class.util::IdType.445"* [ %46, %51 ], [ %36, %42 ]
  %46 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %45, i64 -1
  %47 = load i32, i32* %38, align 4
  %48 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %46, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %45, i64 0, i32 0, i32 0
  store i32 %49, i32* %52, align 4
  %53 = icmp eq %"class.util::IdType.445"* %46, %4
  br i1 %53, label %54, label %44

54:                                               ; preds = %51, %44, %42
  %55 = phi %"class.util::IdType.445"* [ %4, %42 ], [ %45, %44 ], [ %4, %51 ]
  %56 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %55, i64 0, i32 0, i32 0
  %57 = load i32, i32* %38, align 4
  store i32 %57, i32* %56, align 4
  br label %59

58:                                               ; preds = %33
  store i32 %39, i32* %41, align 4
  br label %59

59:                                               ; preds = %58, %54
  %60 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %35, i64 1
  %61 = icmp eq %"class.util::IdType.445"* %60, %1
  br i1 %61, label %412, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %41, align 4
  br label %33

64:                                               ; preds = %23
  %65 = lshr i64 %3, 1
  %66 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 %65
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %0, %"class.util::IdType.445"* %66, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %65, %"class.util::IdType.445"* %4, i64 %65)
  %67 = sub nsw i64 %3, %65
  %68 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %4, i64 %65
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.util::IdType.445"* %66, %"class.util::IdType.445"* %1, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %2, i64 %67, %"class.util::IdType.445"* %68, i64 %67)
  %69 = icmp eq i64 %65, 0
  br i1 %69, label %70, label %230

70:                                               ; preds = %407, %64
  %71 = phi %"class.util::IdType.445"* [ %66, %64 ], [ %408, %407 ]
  %72 = phi %"class.util::IdType.445"* [ %4, %64 ], [ %410, %407 ]
  %73 = ptrtoint %"class.util::IdType.445"* %71 to i64
  %74 = icmp eq %"class.util::IdType.445"* %71, %1
  br i1 %74, label %412, label %75

75:                                               ; preds = %70
  %76 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -1, i32 0, i32 0
  %77 = ptrtoint i32* %76 to i64
  %78 = sub i64 %77, %73
  %79 = lshr i64 %78, 2
  %80 = add nuw nsw i64 %79, 1
  %81 = icmp ult i64 %80, 8
  br i1 %81, label %174, label %82

82:                                               ; preds = %75
  %83 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -1, i32 0, i32 0
  %84 = ptrtoint i32* %83 to i64
  %85 = sub i64 %84, %73
  %86 = lshr i64 %85, 2
  %87 = add nuw nsw i64 %86, 1
  %88 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %87
  %89 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %87
  %90 = icmp ult %"class.util::IdType.445"* %72, %89
  %91 = icmp ult %"class.util::IdType.445"* %71, %88
  %92 = and i1 %90, %91
  br i1 %92, label %174, label %93

93:                                               ; preds = %82
  %94 = and i64 %80, 9223372036854775800
  %95 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %94
  %96 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %94
  %97 = add nsw i64 %94, -8
  %98 = lshr exact i64 %97, 3
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 24
  br i1 %101, label %153, label %102

102:                                              ; preds = %93
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %105, i32 0, i32 0
  %108 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %105, i32 0, i32 0
  %109 = bitcast i32* %107 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !156
  %111 = getelementptr i32, i32* %107, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !156
  %114 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !159, !noalias !156
  %115 = getelementptr i32, i32* %108, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !159, !noalias !156
  %117 = or i64 %105, 8
  %118 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %117, i32 0, i32 0
  %119 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %117, i32 0, i32 0
  %120 = bitcast i32* %118 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !156
  %122 = getelementptr i32, i32* %118, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !156
  %125 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !159, !noalias !156
  %126 = getelementptr i32, i32* %119, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !159, !noalias !156
  %128 = or i64 %105, 16
  %129 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %128, i32 0, i32 0
  %130 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %128, i32 0, i32 0
  %131 = bitcast i32* %129 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !156
  %133 = getelementptr i32, i32* %129, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !156
  %136 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !159, !noalias !156
  %137 = getelementptr i32, i32* %130, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !159, !noalias !156
  %139 = or i64 %105, 24
  %140 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %139, i32 0, i32 0
  %141 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %139, i32 0, i32 0
  %142 = bitcast i32* %140 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4, !alias.scope !156
  %144 = getelementptr i32, i32* %140, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !alias.scope !156
  %147 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %147, align 4, !alias.scope !159, !noalias !156
  %148 = getelementptr i32, i32* %141, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %149, align 4, !alias.scope !159, !noalias !156
  %150 = add i64 %105, 32
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !161

153:                                              ; preds = %104, %93
  %154 = phi i64 [ 0, %93 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %71, i64 %157, i32 0, i32 0
  %160 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %72, i64 %157, i32 0, i32 0
  %161 = bitcast i32* %159 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4, !alias.scope !156
  %163 = getelementptr i32, i32* %159, i64 4
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !156
  %166 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %162, <4 x i32>* %166, align 4, !alias.scope !159, !noalias !156
  %167 = getelementptr i32, i32* %160, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %168, align 4, !alias.scope !159, !noalias !156
  %169 = add i64 %157, 8
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !162

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %80, %94
  br i1 %173, label %412, label %174

174:                                              ; preds = %172, %82, %75
  %175 = phi %"class.util::IdType.445"* [ %72, %82 ], [ %72, %75 ], [ %95, %172 ]
  %176 = phi %"class.util::IdType.445"* [ %71, %82 ], [ %71, %75 ], [ %96, %172 ]
  %177 = ptrtoint %"class.util::IdType.445"* %176 to i64
  %178 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %1, i64 -1, i32 0, i32 0
  %179 = ptrtoint i32* %178 to i64
  %180 = sub i64 %179, %177
  %181 = lshr i64 %180, 2
  %182 = add nuw nsw i64 %181, 1
  %183 = and i64 %182, 7
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %196, label %185

185:                                              ; preds = %174, %185
  %186 = phi %"class.util::IdType.445"* [ %193, %185 ], [ %175, %174 ]
  %187 = phi %"class.util::IdType.445"* [ %192, %185 ], [ %176, %174 ]
  %188 = phi i64 [ %194, %185 ], [ %183, %174 ]
  %189 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %187, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %186, i64 0, i32 0, i32 0
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %190, align 4
  %192 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %187, i64 1
  %193 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %186, i64 1
  %194 = add i64 %188, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %185, !llvm.loop !163

196:                                              ; preds = %185, %174
  %197 = phi %"class.util::IdType.445"* [ %175, %174 ], [ %193, %185 ]
  %198 = phi %"class.util::IdType.445"* [ %176, %174 ], [ %192, %185 ]
  %199 = icmp ult i64 %180, 28
  br i1 %199, label %412, label %200

200:                                              ; preds = %196, %200
  %201 = phi %"class.util::IdType.445"* [ %228, %200 ], [ %197, %196 ]
  %202 = phi %"class.util::IdType.445"* [ %227, %200 ], [ %198, %196 ]
  %203 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 0, i32 0, i32 0
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 1, i32 0, i32 0
  %207 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 1, i32 0, i32 0
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 2, i32 0, i32 0
  %210 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 2, i32 0, i32 0
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 3, i32 0, i32 0
  %213 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 3, i32 0, i32 0
  %214 = load i32, i32* %212, align 4
  store i32 %214, i32* %213, align 4
  %215 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 4, i32 0, i32 0
  %216 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 4, i32 0, i32 0
  %217 = load i32, i32* %215, align 4
  store i32 %217, i32* %216, align 4
  %218 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 5, i32 0, i32 0
  %219 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 5, i32 0, i32 0
  %220 = load i32, i32* %218, align 4
  store i32 %220, i32* %219, align 4
  %221 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 6, i32 0, i32 0
  %222 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 6, i32 0, i32 0
  %223 = load i32, i32* %221, align 4
  store i32 %223, i32* %222, align 4
  %224 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 7, i32 0, i32 0
  %225 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 7, i32 0, i32 0
  %226 = load i32, i32* %224, align 4
  store i32 %226, i32* %225, align 4
  %227 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %202, i64 8
  %228 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %201, i64 8
  %229 = icmp eq %"class.util::IdType.445"* %227, %1
  br i1 %229, label %412, label %200, !llvm.loop !164

230:                                              ; preds = %64, %407
  %231 = phi %"class.util::IdType.445"* [ %410, %407 ], [ %4, %64 ]
  %232 = phi %"class.util::IdType.445"* [ %409, %407 ], [ %0, %64 ]
  %233 = phi %"class.util::IdType.445"* [ %408, %407 ], [ %66, %64 ]
  %234 = icmp eq %"class.util::IdType.445"* %233, %1
  br i1 %234, label %235, label %396

235:                                              ; preds = %230
  %236 = ptrtoint %"class.util::IdType.445"* %232 to i64
  %237 = icmp eq %"class.util::IdType.445"* %232, %66
  br i1 %237, label %412, label %238

238:                                              ; preds = %235
  %239 = add nsw i64 %65, -1
  %240 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 %239, i32 0, i32 0
  %241 = ptrtoint i32* %240 to i64
  %242 = sub i64 %241, %236
  %243 = lshr i64 %242, 2
  %244 = add nuw nsw i64 %243, 1
  %245 = icmp ult i64 %244, 8
  br i1 %245, label %339, label %246

246:                                              ; preds = %238
  %247 = add nsw i64 %65, -1
  %248 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 %247, i32 0, i32 0
  %249 = ptrtoint i32* %248 to i64
  %250 = sub i64 %249, %236
  %251 = lshr i64 %250, 2
  %252 = add nuw nsw i64 %251, 1
  %253 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %252
  %254 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %252
  %255 = icmp ult %"class.util::IdType.445"* %231, %254
  %256 = icmp ult %"class.util::IdType.445"* %232, %253
  %257 = and i1 %255, %256
  br i1 %257, label %339, label %258

258:                                              ; preds = %246
  %259 = and i64 %244, 9223372036854775800
  %260 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %259
  %261 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %259
  %262 = add nsw i64 %259, -8
  %263 = lshr exact i64 %262, 3
  %264 = add nuw nsw i64 %263, 1
  %265 = and i64 %264, 3
  %266 = icmp ult i64 %262, 24
  br i1 %266, label %318, label %267

267:                                              ; preds = %258
  %268 = sub nsw i64 %264, %265
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi i64 [ 0, %267 ], [ %315, %269 ]
  %271 = phi i64 [ %268, %267 ], [ %316, %269 ]
  %272 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %270, i32 0, i32 0
  %273 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %270, i32 0, i32 0
  %274 = bitcast i32* %272 to <4 x i32>*
  %275 = load <4 x i32>, <4 x i32>* %274, align 4, !alias.scope !165
  %276 = getelementptr i32, i32* %272, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  %278 = load <4 x i32>, <4 x i32>* %277, align 4, !alias.scope !165
  %279 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> %275, <4 x i32>* %279, align 4, !alias.scope !168, !noalias !165
  %280 = getelementptr i32, i32* %273, i64 4
  %281 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %278, <4 x i32>* %281, align 4, !alias.scope !168, !noalias !165
  %282 = or i64 %270, 8
  %283 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %282, i32 0, i32 0
  %284 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %282, i32 0, i32 0
  %285 = bitcast i32* %283 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4, !alias.scope !165
  %287 = getelementptr i32, i32* %283, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4, !alias.scope !165
  %290 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %290, align 4, !alias.scope !168, !noalias !165
  %291 = getelementptr i32, i32* %284, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %292, align 4, !alias.scope !168, !noalias !165
  %293 = or i64 %270, 16
  %294 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %293, i32 0, i32 0
  %295 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %293, i32 0, i32 0
  %296 = bitcast i32* %294 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4, !alias.scope !165
  %298 = getelementptr i32, i32* %294, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4, !alias.scope !165
  %301 = bitcast i32* %295 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %301, align 4, !alias.scope !168, !noalias !165
  %302 = getelementptr i32, i32* %295, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %300, <4 x i32>* %303, align 4, !alias.scope !168, !noalias !165
  %304 = or i64 %270, 24
  %305 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %304, i32 0, i32 0
  %306 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %304, i32 0, i32 0
  %307 = bitcast i32* %305 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4, !alias.scope !165
  %309 = getelementptr i32, i32* %305, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4, !alias.scope !165
  %312 = bitcast i32* %306 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !168, !noalias !165
  %313 = getelementptr i32, i32* %306, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  store <4 x i32> %311, <4 x i32>* %314, align 4, !alias.scope !168, !noalias !165
  %315 = add i64 %270, 32
  %316 = add i64 %271, -4
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %269, !llvm.loop !170

318:                                              ; preds = %269, %258
  %319 = phi i64 [ 0, %258 ], [ %315, %269 ]
  %320 = icmp eq i64 %265, 0
  br i1 %320, label %337, label %321

321:                                              ; preds = %318, %321
  %322 = phi i64 [ %334, %321 ], [ %319, %318 ]
  %323 = phi i64 [ %335, %321 ], [ %265, %318 ]
  %324 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 %322, i32 0, i32 0
  %325 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 %322, i32 0, i32 0
  %326 = bitcast i32* %324 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4, !alias.scope !165
  %328 = getelementptr i32, i32* %324, i64 4
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4, !alias.scope !165
  %331 = bitcast i32* %325 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %331, align 4, !alias.scope !168, !noalias !165
  %332 = getelementptr i32, i32* %325, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  store <4 x i32> %330, <4 x i32>* %333, align 4, !alias.scope !168, !noalias !165
  %334 = add i64 %322, 8
  %335 = add i64 %323, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %321, !llvm.loop !171

337:                                              ; preds = %321, %318
  %338 = icmp eq i64 %244, %259
  br i1 %338, label %412, label %339

339:                                              ; preds = %337, %246, %238
  %340 = phi %"class.util::IdType.445"* [ %231, %246 ], [ %231, %238 ], [ %260, %337 ]
  %341 = phi %"class.util::IdType.445"* [ %232, %246 ], [ %232, %238 ], [ %261, %337 ]
  %342 = ptrtoint %"class.util::IdType.445"* %341 to i64
  %343 = add nsw i64 %65, -1
  %344 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %0, i64 %343, i32 0, i32 0
  %345 = ptrtoint i32* %344 to i64
  %346 = sub i64 %345, %342
  %347 = lshr i64 %346, 2
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %339, %351
  %352 = phi %"class.util::IdType.445"* [ %359, %351 ], [ %340, %339 ]
  %353 = phi %"class.util::IdType.445"* [ %358, %351 ], [ %341, %339 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %339 ]
  %355 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %353, i64 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %352, i64 0, i32 0, i32 0
  %357 = load i32, i32* %355, align 4
  store i32 %357, i32* %356, align 4
  %358 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %353, i64 1
  %359 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %352, i64 1
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !172

362:                                              ; preds = %351, %339
  %363 = phi %"class.util::IdType.445"* [ %340, %339 ], [ %359, %351 ]
  %364 = phi %"class.util::IdType.445"* [ %341, %339 ], [ %358, %351 ]
  %365 = icmp ult i64 %346, 28
  br i1 %365, label %412, label %366

366:                                              ; preds = %362, %366
  %367 = phi %"class.util::IdType.445"* [ %394, %366 ], [ %363, %362 ]
  %368 = phi %"class.util::IdType.445"* [ %393, %366 ], [ %364, %362 ]
  %369 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 0, i32 0, i32 0
  %370 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 0, i32 0, i32 0
  %371 = load i32, i32* %369, align 4
  store i32 %371, i32* %370, align 4
  %372 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 1, i32 0, i32 0
  %373 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 1, i32 0, i32 0
  %374 = load i32, i32* %372, align 4
  store i32 %374, i32* %373, align 4
  %375 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 2, i32 0, i32 0
  %376 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 2, i32 0, i32 0
  %377 = load i32, i32* %375, align 4
  store i32 %377, i32* %376, align 4
  %378 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 3, i32 0, i32 0
  %379 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 3, i32 0, i32 0
  %380 = load i32, i32* %378, align 4
  store i32 %380, i32* %379, align 4
  %381 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 4, i32 0, i32 0
  %382 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 4, i32 0, i32 0
  %383 = load i32, i32* %381, align 4
  store i32 %383, i32* %382, align 4
  %384 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 5, i32 0, i32 0
  %385 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 5, i32 0, i32 0
  %386 = load i32, i32* %384, align 4
  store i32 %386, i32* %385, align 4
  %387 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 6, i32 0, i32 0
  %388 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 6, i32 0, i32 0
  %389 = load i32, i32* %387, align 4
  store i32 %389, i32* %388, align 4
  %390 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 7, i32 0, i32 0
  %391 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 7, i32 0, i32 0
  %392 = load i32, i32* %390, align 4
  store i32 %392, i32* %391, align 4
  %393 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 8
  %394 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 8
  %395 = icmp eq %"class.util::IdType.445"* %393, %66
  br i1 %395, label %412, label %366, !llvm.loop !173

396:                                              ; preds = %230
  %397 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %233, i64 0, i32 0, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 0, i32 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = icmp ult i32 %398, %400
  %402 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 0, i32 0, i32 0
  br i1 %401, label %403, label %405

403:                                              ; preds = %396
  store i32 %398, i32* %402, align 4
  %404 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %233, i64 1
  br label %407

405:                                              ; preds = %396
  store i32 %400, i32* %402, align 4
  %406 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %232, i64 1
  br label %407

407:                                              ; preds = %405, %403
  %408 = phi %"class.util::IdType.445"* [ %404, %403 ], [ %233, %405 ]
  %409 = phi %"class.util::IdType.445"* [ %232, %403 ], [ %406, %405 ]
  %410 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %231, i64 1
  %411 = icmp eq %"class.util::IdType.445"* %409, %66
  br i1 %411, label %70, label %230

412:                                              ; preds = %362, %366, %196, %200, %59, %337, %172, %235, %70, %27, %25, %17, %20, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.util::IdType.445"*, %"class.util::IdType.445"*, %"class.util::IdType.445"*, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1), i64, i64, %"class.util::IdType.445"*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint %"class.util::IdType.445"* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %940, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.util::IdType.445"* %1 to i64
  %13 = ptrtoint %"class.util::IdType.445"* %0 to i64
  br label %14

14:                                               ; preds = %11, %933
  %15 = phi %"class.util::IdType.445"* [ %938, %933 ], [ %2, %11 ]
  %16 = phi i64 [ %937, %933 ], [ %4, %11 ]
  %17 = phi i64 [ %936, %933 ], [ %5, %11 ]
  %18 = phi i64 [ %935, %933 ], [ %12, %11 ]
  %19 = phi i64 [ %934, %933 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %940, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"class.util::IdType.445"*
  %27 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  br label %567

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"class.util::IdType.445"*
  %31 = inttoptr i64 %19 to i8*
  %32 = inttoptr i64 %18 to %"class.util::IdType.445"*
  %33 = inttoptr i64 %18 to i8*
  %34 = icmp sgt i64 %16, %17
  br i1 %34, label %168, label %35

35:                                               ; preds = %29
  %36 = icmp eq %"class.util::IdType.445"* %30, %32
  br i1 %36, label %940, label %37

37:                                               ; preds = %35
  %38 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 -1, i32 0, i32 0
  %39 = bitcast i32* %38 to i8*
  %40 = sub i64 0, %19
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 8
  br i1 %45, label %46, label %73

46:                                               ; preds = %166, %73, %37
  %47 = phi %"class.util::IdType.445"* [ %6, %73 ], [ %6, %37 ], [ %89, %166 ]
  %48 = phi %"class.util::IdType.445"* [ %30, %73 ], [ %30, %37 ], [ %90, %166 ]
  %49 = ptrtoint %"class.util::IdType.445"* %48 to i64
  %50 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 -1, i32 0, i32 0
  %51 = ptrtoint i32* %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 2
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %46, %57
  %58 = phi %"class.util::IdType.445"* [ %65, %57 ], [ %47, %46 ]
  %59 = phi %"class.util::IdType.445"* [ %64, %57 ], [ %48, %46 ]
  %60 = phi i64 [ %66, %57 ], [ %55, %46 ]
  %61 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %59, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %58, i64 0, i32 0, i32 0
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %64 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %59, i64 1
  %65 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %58, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !174

68:                                               ; preds = %57, %46
  %69 = phi %"class.util::IdType.445"* [ undef, %46 ], [ %65, %57 ]
  %70 = phi %"class.util::IdType.445"* [ %47, %46 ], [ %65, %57 ]
  %71 = phi %"class.util::IdType.445"* [ %48, %46 ], [ %64, %57 ]
  %72 = icmp ult i64 %52, 28
  br i1 %72, label %301, label %333

73:                                               ; preds = %37
  %74 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 -1, i32 0, i32 0
  %75 = bitcast i32* %74 to i8*
  %76 = sub i64 0, %19
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = ptrtoint i8* %77 to i64
  %79 = lshr i64 %78, 2
  %80 = add nuw nsw i64 %79, 1
  %81 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %80
  %82 = bitcast %"class.util::IdType.445"* %81 to i8*
  %83 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %80
  %84 = icmp ugt %"class.util::IdType.445"* %83, %6
  %85 = icmp ult i8* %31, %82
  %86 = and i1 %84, %85
  br i1 %86, label %46, label %87

87:                                               ; preds = %73
  %88 = and i64 %44, 9223372036854775800
  %89 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %88
  %90 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %88
  %91 = add nsw i64 %88, -8
  %92 = lshr exact i64 %91, 3
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp ult i64 %91, 24
  br i1 %95, label %147, label %96

96:                                               ; preds = %87
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %144, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %145, %98 ]
  %101 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %99, i32 0, i32 0
  %102 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %99, i32 0, i32 0
  %103 = bitcast i32* %101 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !175
  %105 = getelementptr i32, i32* %101, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !175
  %108 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !178, !noalias !175
  %109 = getelementptr i32, i32* %102, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !178, !noalias !175
  %111 = or i64 %99, 8
  %112 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %111, i32 0, i32 0
  %113 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %111, i32 0, i32 0
  %114 = bitcast i32* %112 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !175
  %116 = getelementptr i32, i32* %112, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4, !alias.scope !175
  %119 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %119, align 4, !alias.scope !178, !noalias !175
  %120 = getelementptr i32, i32* %113, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %118, <4 x i32>* %121, align 4, !alias.scope !178, !noalias !175
  %122 = or i64 %99, 16
  %123 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %122, i32 0, i32 0
  %124 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %122, i32 0, i32 0
  %125 = bitcast i32* %123 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !175
  %127 = getelementptr i32, i32* %123, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4, !alias.scope !175
  %130 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %130, align 4, !alias.scope !178, !noalias !175
  %131 = getelementptr i32, i32* %124, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %129, <4 x i32>* %132, align 4, !alias.scope !178, !noalias !175
  %133 = or i64 %99, 24
  %134 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %133, i32 0, i32 0
  %135 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %133, i32 0, i32 0
  %136 = bitcast i32* %134 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !175
  %138 = getelementptr i32, i32* %134, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4, !alias.scope !175
  %141 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %141, align 4, !alias.scope !178, !noalias !175
  %142 = getelementptr i32, i32* %135, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %143, align 4, !alias.scope !178, !noalias !175
  %144 = add i64 %99, 32
  %145 = add i64 %100, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %98, !llvm.loop !180

147:                                              ; preds = %98, %87
  %148 = phi i64 [ 0, %87 ], [ %144, %98 ]
  %149 = icmp eq i64 %94, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %163, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %164, %150 ], [ %94, %147 ]
  %153 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %30, i64 %151, i32 0, i32 0
  %154 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %151, i32 0, i32 0
  %155 = bitcast i32* %153 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !175
  %157 = getelementptr i32, i32* %153, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4, !alias.scope !175
  %160 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %160, align 4, !alias.scope !178, !noalias !175
  %161 = getelementptr i32, i32* %154, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %159, <4 x i32>* %162, align 4, !alias.scope !178, !noalias !175
  %163 = add i64 %151, 8
  %164 = add i64 %152, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %150, !llvm.loop !181

166:                                              ; preds = %150, %147
  %167 = icmp eq i64 %44, %88
  br i1 %167, label %301, label %46

168:                                              ; preds = %29
  %169 = icmp eq %"class.util::IdType.445"* %15, %32
  br i1 %169, label %940, label %170

170:                                              ; preds = %168
  %171 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %15, i64 -1, i32 0, i32 0
  %172 = bitcast i32* %171 to i8*
  %173 = sub i64 0, %18
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 2
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 8
  br i1 %178, label %179, label %206

179:                                              ; preds = %299, %206, %170
  %180 = phi %"class.util::IdType.445"* [ %6, %206 ], [ %6, %170 ], [ %222, %299 ]
  %181 = phi %"class.util::IdType.445"* [ %32, %206 ], [ %32, %170 ], [ %223, %299 ]
  %182 = ptrtoint %"class.util::IdType.445"* %181 to i64
  %183 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %15, i64 -1, i32 0, i32 0
  %184 = ptrtoint i32* %183 to i64
  %185 = sub i64 %184, %182
  %186 = lshr i64 %185, 2
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %179, %190
  %191 = phi %"class.util::IdType.445"* [ %198, %190 ], [ %180, %179 ]
  %192 = phi %"class.util::IdType.445"* [ %197, %190 ], [ %181, %179 ]
  %193 = phi i64 [ %199, %190 ], [ %188, %179 ]
  %194 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %192, i64 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %191, i64 0, i32 0, i32 0
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %192, i64 1
  %198 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %191, i64 1
  %199 = add i64 %193, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !182

201:                                              ; preds = %190, %179
  %202 = phi %"class.util::IdType.445"* [ undef, %179 ], [ %198, %190 ]
  %203 = phi %"class.util::IdType.445"* [ %180, %179 ], [ %198, %190 ]
  %204 = phi %"class.util::IdType.445"* [ %181, %179 ], [ %197, %190 ]
  %205 = icmp ult i64 %185, 28
  br i1 %205, label %363, label %537

206:                                              ; preds = %170
  %207 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %15, i64 -1, i32 0, i32 0
  %208 = bitcast i32* %207 to i8*
  %209 = sub i64 0, %18
  %210 = getelementptr i8, i8* %208, i64 %209
  %211 = ptrtoint i8* %210 to i64
  %212 = lshr i64 %211, 2
  %213 = add nuw nsw i64 %212, 1
  %214 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %213
  %215 = bitcast %"class.util::IdType.445"* %214 to i8*
  %216 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %213
  %217 = icmp ugt %"class.util::IdType.445"* %216, %6
  %218 = icmp ult i8* %33, %215
  %219 = and i1 %217, %218
  br i1 %219, label %179, label %220

220:                                              ; preds = %206
  %221 = and i64 %177, 9223372036854775800
  %222 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %221
  %223 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %221
  %224 = add nsw i64 %221, -8
  %225 = lshr exact i64 %224, 3
  %226 = add nuw nsw i64 %225, 1
  %227 = and i64 %226, 3
  %228 = icmp ult i64 %224, 24
  br i1 %228, label %280, label %229

229:                                              ; preds = %220
  %230 = sub nsw i64 %226, %227
  br label %231

231:                                              ; preds = %231, %229
  %232 = phi i64 [ 0, %229 ], [ %277, %231 ]
  %233 = phi i64 [ %230, %229 ], [ %278, %231 ]
  %234 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %232, i32 0, i32 0
  %235 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %232, i32 0, i32 0
  %236 = bitcast i32* %234 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !183
  %238 = getelementptr i32, i32* %234, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !183
  %241 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %241, align 4, !alias.scope !186, !noalias !183
  %242 = getelementptr i32, i32* %235, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %243, align 4, !alias.scope !186, !noalias !183
  %244 = or i64 %232, 8
  %245 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %244, i32 0, i32 0
  %246 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %244, i32 0, i32 0
  %247 = bitcast i32* %245 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4, !alias.scope !183
  %249 = getelementptr i32, i32* %245, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !183
  %252 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %248, <4 x i32>* %252, align 4, !alias.scope !186, !noalias !183
  %253 = getelementptr i32, i32* %246, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %254, align 4, !alias.scope !186, !noalias !183
  %255 = or i64 %232, 16
  %256 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %255, i32 0, i32 0
  %257 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %255, i32 0, i32 0
  %258 = bitcast i32* %256 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4, !alias.scope !183
  %260 = getelementptr i32, i32* %256, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !183
  %263 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %263, align 4, !alias.scope !186, !noalias !183
  %264 = getelementptr i32, i32* %257, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %265, align 4, !alias.scope !186, !noalias !183
  %266 = or i64 %232, 24
  %267 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %266, i32 0, i32 0
  %268 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %266, i32 0, i32 0
  %269 = bitcast i32* %267 to <4 x i32>*
  %270 = load <4 x i32>, <4 x i32>* %269, align 4, !alias.scope !183
  %271 = getelementptr i32, i32* %267, i64 4
  %272 = bitcast i32* %271 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !183
  %274 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %270, <4 x i32>* %274, align 4, !alias.scope !186, !noalias !183
  %275 = getelementptr i32, i32* %268, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %276, align 4, !alias.scope !186, !noalias !183
  %277 = add i64 %232, 32
  %278 = add i64 %233, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %231, !llvm.loop !188

280:                                              ; preds = %231, %220
  %281 = phi i64 [ 0, %220 ], [ %277, %231 ]
  %282 = icmp eq i64 %227, 0
  br i1 %282, label %299, label %283

283:                                              ; preds = %280, %283
  %284 = phi i64 [ %296, %283 ], [ %281, %280 ]
  %285 = phi i64 [ %297, %283 ], [ %227, %280 ]
  %286 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %32, i64 %284, i32 0, i32 0
  %287 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %6, i64 %284, i32 0, i32 0
  %288 = bitcast i32* %286 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4, !alias.scope !183
  %290 = getelementptr i32, i32* %286, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !183
  %293 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %293, align 4, !alias.scope !186, !noalias !183
  %294 = getelementptr i32, i32* %287, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %295, align 4, !alias.scope !186, !noalias !183
  %296 = add i64 %284, 8
  %297 = add i64 %285, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %283, !llvm.loop !189

299:                                              ; preds = %283, %280
  %300 = icmp eq i64 %177, %221
  br i1 %300, label %363, label %179

301:                                              ; preds = %68, %333, %166
  %302 = phi %"class.util::IdType.445"* [ %89, %166 ], [ %69, %68 ], [ %361, %333 ]
  %303 = icmp eq %"class.util::IdType.445"* %302, %6
  br i1 %303, label %940, label %304

304:                                              ; preds = %301, %328
  %305 = phi %"class.util::IdType.445"* [ %330, %328 ], [ %6, %301 ]
  %306 = phi %"class.util::IdType.445"* [ %331, %328 ], [ %30, %301 ]
  %307 = phi %"class.util::IdType.445"* [ %329, %328 ], [ %32, %301 ]
  %308 = icmp eq %"class.util::IdType.445"* %307, %15
  br i1 %308, label %309, label %317

309:                                              ; preds = %304
  %310 = ptrtoint %"class.util::IdType.445"* %302 to i64
  %311 = ptrtoint %"class.util::IdType.445"* %305 to i64
  %312 = sub i64 %310, %311
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %940, label %314

314:                                              ; preds = %309
  %315 = bitcast %"class.util::IdType.445"* %306 to i8*
  %316 = bitcast %"class.util::IdType.445"* %305 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %315, i8* align 4 %316, i64 %312, i1 false) #16
  br label %940

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %307, i64 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %305, i64 0, i32 0, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = icmp ult i32 %319, %321
  %323 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %306, i64 0, i32 0, i32 0
  br i1 %322, label %324, label %326

324:                                              ; preds = %317
  store i32 %319, i32* %323, align 4
  %325 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %307, i64 1
  br label %328

326:                                              ; preds = %317
  store i32 %321, i32* %323, align 4
  %327 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %305, i64 1
  br label %328

328:                                              ; preds = %326, %324
  %329 = phi %"class.util::IdType.445"* [ %325, %324 ], [ %307, %326 ]
  %330 = phi %"class.util::IdType.445"* [ %305, %324 ], [ %327, %326 ]
  %331 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %306, i64 1
  %332 = icmp eq %"class.util::IdType.445"* %330, %302
  br i1 %332, label %940, label %304

333:                                              ; preds = %68, %333
  %334 = phi %"class.util::IdType.445"* [ %361, %333 ], [ %70, %68 ]
  %335 = phi %"class.util::IdType.445"* [ %360, %333 ], [ %71, %68 ]
  %336 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 0, i32 0, i32 0
  %337 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 0, i32 0, i32 0
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 1, i32 0, i32 0
  %340 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 1, i32 0, i32 0
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 2, i32 0, i32 0
  %343 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 2, i32 0, i32 0
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 3, i32 0, i32 0
  %346 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 3, i32 0, i32 0
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 4, i32 0, i32 0
  %349 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 4, i32 0, i32 0
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 5, i32 0, i32 0
  %352 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 5, i32 0, i32 0
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 6, i32 0, i32 0
  %355 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 6, i32 0, i32 0
  %356 = load i32, i32* %354, align 4
  store i32 %356, i32* %355, align 4
  %357 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 7, i32 0, i32 0
  %358 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 7, i32 0, i32 0
  %359 = load i32, i32* %357, align 4
  store i32 %359, i32* %358, align 4
  %360 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %335, i64 8
  %361 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %334, i64 8
  %362 = icmp eq %"class.util::IdType.445"* %360, %32
  br i1 %362, label %301, label %333, !llvm.loop !190

363:                                              ; preds = %201, %537, %299
  %364 = phi %"class.util::IdType.445"* [ %222, %299 ], [ %202, %201 ], [ %565, %537 ]
  %365 = icmp eq %"class.util::IdType.445"* %364, %6
  br i1 %365, label %940, label %366

366:                                              ; preds = %363, %523
  %367 = phi %"class.util::IdType.445"* [ %535, %523 ], [ %15, %363 ]
  %368 = phi %"class.util::IdType.445"* [ %534, %523 ], [ %364, %363 ]
  %369 = phi %"class.util::IdType.445"* [ %533, %523 ], [ %32, %363 ]
  %370 = icmp eq %"class.util::IdType.445"* %369, %30
  br i1 %370, label %371, label %523

371:                                              ; preds = %366
  %372 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1, i32 0, i32 0
  %373 = ptrtoint i32* %372 to i64
  %374 = sub i64 %373, %9
  %375 = lshr i64 %374, 2
  %376 = add nuw nsw i64 %375, 1
  %377 = icmp ult i64 %376, 8
  br i1 %377, label %468, label %378

378:                                              ; preds = %371
  %379 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1, i32 0, i32 0
  %380 = ptrtoint i32* %379 to i64
  %381 = sub i64 %380, %9
  %382 = lshr i64 %381, 2
  %383 = xor i64 %382, -1
  %384 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 %383
  %385 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 %383
  %386 = icmp ult %"class.util::IdType.445"* %384, %368
  %387 = icmp ult %"class.util::IdType.445"* %385, %367
  %388 = and i1 %386, %387
  br i1 %388, label %468, label %389

389:                                              ; preds = %378
  %390 = and i64 %376, 9223372036854775800
  %391 = sub nsw i64 0, %390
  %392 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 %391
  %393 = sub nsw i64 0, %390
  %394 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 %393
  %395 = add nsw i64 %390, -8
  %396 = lshr exact i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 1
  %399 = icmp eq i64 %395, 0
  br i1 %399, label %446, label %400

400:                                              ; preds = %389
  %401 = sub nuw nsw i64 %397, %398
  %402 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1
  %403 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 -1
  %404 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1
  %405 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 -1
  br label %406

406:                                              ; preds = %406, %400
  %407 = phi i64 [ 0, %400 ], [ %441, %406 ]
  %408 = phi i64 [ %401, %400 ], [ %442, %406 ]
  %409 = sub i64 0, %407
  %410 = sub i64 0, %407
  %411 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %402, i64 %409
  %412 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %403, i64 %410
  %413 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %411, i64 0, i32 0, i32 0
  %414 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %412, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds i32, i32* %413, i64 -3
  %416 = bitcast i32* %415 to <4 x i32>*
  %417 = load <4 x i32>, <4 x i32>* %416, align 4, !alias.scope !191
  %418 = getelementptr inbounds i32, i32* %413, i64 -7
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !191
  %421 = getelementptr inbounds i32, i32* %414, i64 -3
  %422 = bitcast i32* %421 to <4 x i32>*
  store <4 x i32> %417, <4 x i32>* %422, align 4, !alias.scope !194, !noalias !191
  %423 = getelementptr inbounds i32, i32* %414, i64 -7
  %424 = bitcast i32* %423 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %424, align 4, !alias.scope !194, !noalias !191
  %425 = sub nuw nsw i64 -8, %407
  %426 = sub nuw nsw i64 -8, %407
  %427 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %404, i64 %425
  %428 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %405, i64 %426
  %429 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %427, i64 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %428, i64 0, i32 0, i32 0
  %431 = getelementptr inbounds i32, i32* %429, i64 -3
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !191
  %434 = getelementptr inbounds i32, i32* %429, i64 -7
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !191
  %437 = getelementptr inbounds i32, i32* %430, i64 -3
  %438 = bitcast i32* %437 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %438, align 4, !alias.scope !194, !noalias !191
  %439 = getelementptr inbounds i32, i32* %430, i64 -7
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %440, align 4, !alias.scope !194, !noalias !191
  %441 = add i64 %407, 16
  %442 = add i64 %408, -2
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %406, !llvm.loop !196

444:                                              ; preds = %406
  %445 = sub nuw nsw i64 -16, %407
  br label %446

446:                                              ; preds = %444, %389
  %447 = phi i64 [ 0, %389 ], [ %445, %444 ]
  %448 = icmp eq i64 %398, 0
  br i1 %448, label %466, label %449

449:                                              ; preds = %446
  %450 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1
  %451 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 -1
  %452 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %450, i64 %447
  %453 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %451, i64 %447
  %454 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %452, i64 0, i32 0, i32 0
  %455 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %453, i64 0, i32 0, i32 0
  %456 = getelementptr inbounds i32, i32* %454, i64 -3
  %457 = bitcast i32* %456 to <4 x i32>*
  %458 = load <4 x i32>, <4 x i32>* %457, align 4, !alias.scope !191
  %459 = getelementptr inbounds i32, i32* %454, i64 -7
  %460 = bitcast i32* %459 to <4 x i32>*
  %461 = load <4 x i32>, <4 x i32>* %460, align 4, !alias.scope !191
  %462 = getelementptr inbounds i32, i32* %455, i64 -3
  %463 = bitcast i32* %462 to <4 x i32>*
  store <4 x i32> %458, <4 x i32>* %463, align 4, !alias.scope !194, !noalias !191
  %464 = getelementptr inbounds i32, i32* %455, i64 -7
  %465 = bitcast i32* %464 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %465, align 4, !alias.scope !194, !noalias !191
  br label %466

466:                                              ; preds = %446, %449
  %467 = icmp eq i64 %376, %390
  br i1 %467, label %940, label %468

468:                                              ; preds = %466, %378, %371
  %469 = phi %"class.util::IdType.445"* [ %368, %378 ], [ %368, %371 ], [ %392, %466 ]
  %470 = phi %"class.util::IdType.445"* [ %367, %378 ], [ %367, %371 ], [ %394, %466 ]
  %471 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %469, i64 -1, i32 0, i32 0
  %472 = ptrtoint i32* %471 to i64
  %473 = sub i64 %472, %9
  %474 = lshr i64 %473, 2
  %475 = add nuw nsw i64 %474, 1
  %476 = and i64 %475, 7
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %478
  %479 = phi %"class.util::IdType.445"* [ %482, %478 ], [ %469, %468 ]
  %480 = phi %"class.util::IdType.445"* [ %483, %478 ], [ %470, %468 ]
  %481 = phi i64 [ %487, %478 ], [ %476, %468 ]
  %482 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %479, i64 -1
  %483 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %480, i64 -1
  %484 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %482, i64 0, i32 0, i32 0
  %485 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %483, i64 0, i32 0, i32 0
  %486 = load i32, i32* %484, align 4
  store i32 %486, i32* %485, align 4
  %487 = add i64 %481, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %478, !llvm.loop !197

489:                                              ; preds = %478, %468
  %490 = phi %"class.util::IdType.445"* [ %469, %468 ], [ %482, %478 ]
  %491 = phi %"class.util::IdType.445"* [ %470, %468 ], [ %483, %478 ]
  %492 = icmp ult i64 %473, 28
  br i1 %492, label %940, label %493

493:                                              ; preds = %489, %493
  %494 = phi %"class.util::IdType.445"* [ %517, %493 ], [ %490, %489 ]
  %495 = phi %"class.util::IdType.445"* [ %518, %493 ], [ %491, %489 ]
  %496 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -1, i32 0, i32 0
  %497 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -1, i32 0, i32 0
  %498 = load i32, i32* %496, align 4
  store i32 %498, i32* %497, align 4
  %499 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -2, i32 0, i32 0
  %500 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -2, i32 0, i32 0
  %501 = load i32, i32* %499, align 4
  store i32 %501, i32* %500, align 4
  %502 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -3, i32 0, i32 0
  %503 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -3, i32 0, i32 0
  %504 = load i32, i32* %502, align 4
  store i32 %504, i32* %503, align 4
  %505 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -4, i32 0, i32 0
  %506 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -4, i32 0, i32 0
  %507 = load i32, i32* %505, align 4
  store i32 %507, i32* %506, align 4
  %508 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -5, i32 0, i32 0
  %509 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -5, i32 0, i32 0
  %510 = load i32, i32* %508, align 4
  store i32 %510, i32* %509, align 4
  %511 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -6, i32 0, i32 0
  %512 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -6, i32 0, i32 0
  %513 = load i32, i32* %511, align 4
  store i32 %513, i32* %512, align 4
  %514 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -7, i32 0, i32 0
  %515 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -7, i32 0, i32 0
  %516 = load i32, i32* %514, align 4
  store i32 %516, i32* %515, align 4
  %517 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %494, i64 -8
  %518 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %495, i64 -8
  %519 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %517, i64 0, i32 0, i32 0
  %520 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %518, i64 0, i32 0, i32 0
  %521 = load i32, i32* %519, align 4
  store i32 %521, i32* %520, align 4
  %522 = icmp eq %"class.util::IdType.445"* %517, %6
  br i1 %522, label %940, label %493, !llvm.loop !198

523:                                              ; preds = %366
  %524 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %369, i64 -1
  %525 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %368, i64 -1
  %526 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %525, i64 0, i32 0, i32 0
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %524, i64 0, i32 0, i32 0
  %529 = load i32, i32* %528, align 4
  %530 = icmp ult i32 %527, %529
  %531 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 -1, i32 0, i32 0
  %532 = select i1 %530, i32 %529, i32 %527
  %533 = select i1 %530, %"class.util::IdType.445"* %524, %"class.util::IdType.445"* %369
  %534 = select i1 %530, %"class.util::IdType.445"* %368, %"class.util::IdType.445"* %525
  store i32 %532, i32* %531, align 4
  %535 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %367, i64 -1
  %536 = icmp eq %"class.util::IdType.445"* %534, %6
  br i1 %536, label %940, label %366

537:                                              ; preds = %201, %537
  %538 = phi %"class.util::IdType.445"* [ %565, %537 ], [ %203, %201 ]
  %539 = phi %"class.util::IdType.445"* [ %564, %537 ], [ %204, %201 ]
  %540 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 0, i32 0, i32 0
  %541 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 0, i32 0, i32 0
  %542 = load i32, i32* %540, align 4
  store i32 %542, i32* %541, align 4
  %543 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 1, i32 0, i32 0
  %544 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 1, i32 0, i32 0
  %545 = load i32, i32* %543, align 4
  store i32 %545, i32* %544, align 4
  %546 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 2, i32 0, i32 0
  %547 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 2, i32 0, i32 0
  %548 = load i32, i32* %546, align 4
  store i32 %548, i32* %547, align 4
  %549 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 3, i32 0, i32 0
  %550 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 3, i32 0, i32 0
  %551 = load i32, i32* %549, align 4
  store i32 %551, i32* %550, align 4
  %552 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 4, i32 0, i32 0
  %553 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 4, i32 0, i32 0
  %554 = load i32, i32* %552, align 4
  store i32 %554, i32* %553, align 4
  %555 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 5, i32 0, i32 0
  %556 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 5, i32 0, i32 0
  %557 = load i32, i32* %555, align 4
  store i32 %557, i32* %556, align 4
  %558 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 6, i32 0, i32 0
  %559 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 6, i32 0, i32 0
  %560 = load i32, i32* %558, align 4
  store i32 %560, i32* %559, align 4
  %561 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 7, i32 0, i32 0
  %562 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 7, i32 0, i32 0
  %563 = load i32, i32* %561, align 4
  store i32 %563, i32* %562, align 4
  %564 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %539, i64 8
  %565 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %538, i64 8
  %566 = icmp eq %"class.util::IdType.445"* %564, %15
  br i1 %566, label %363, label %537, !llvm.loop !199

567:                                              ; preds = %25, %574
  %568 = phi i64 [ %16, %25 ], [ %577, %574 ]
  %569 = phi i64 [ %19, %25 ], [ %576, %574 ]
  %570 = inttoptr i64 %569 to %"class.util::IdType.445"*
  %571 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %570, i64 0, i32 0, i32 0
  %572 = load i32, i32* %571, align 4
  %573 = icmp ult i32 %28, %572
  br i1 %573, label %579, label %574

574:                                              ; preds = %567
  %575 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %570, i64 1
  %576 = ptrtoint %"class.util::IdType.445"* %575 to i64
  %577 = add nsw i64 %568, -1
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %940, label %567

579:                                              ; preds = %567
  %580 = inttoptr i64 %569 to %"class.util::IdType.445"*
  %581 = icmp slt i64 %568, %17
  br i1 %581, label %582, label %611

582:                                              ; preds = %579
  %583 = sdiv i64 %17, 2
  %584 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 %583
  %585 = ptrtoint %"class.util::IdType.445"* %584 to i64
  %586 = sub i64 %18, %569
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %606, label %588

588:                                              ; preds = %582
  %589 = ashr exact i64 %586, 2
  %590 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %584, i64 0, i32 0, i32 0
  %591 = load i32, i32* %590, align 4
  br label %592

592:                                              ; preds = %592, %588
  %593 = phi %"class.util::IdType.445"* [ %580, %588 ], [ %604, %592 ]
  %594 = phi i64 [ %589, %588 ], [ %603, %592 ]
  %595 = lshr i64 %594, 1
  %596 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %593, i64 %595
  %597 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %596, i64 0, i32 0, i32 0
  %598 = load i32, i32* %597, align 4
  %599 = icmp ult i32 %591, %598
  %600 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %596, i64 1
  %601 = xor i64 %595, -1
  %602 = add i64 %594, %601
  %603 = select i1 %599, i64 %595, i64 %602
  %604 = select i1 %599, %"class.util::IdType.445"* %593, %"class.util::IdType.445"* %600
  %605 = icmp eq i64 %603, 0
  br i1 %605, label %606, label %592

606:                                              ; preds = %592, %582
  %607 = phi %"class.util::IdType.445"* [ %580, %582 ], [ %604, %592 ]
  %608 = ptrtoint %"class.util::IdType.445"* %607 to i64
  %609 = sub i64 %608, %569
  %610 = ashr exact i64 %609, 2
  br label %648

611:                                              ; preds = %579
  %612 = icmp eq i64 %568, 1
  br i1 %612, label %613, label %618

613:                                              ; preds = %611
  %614 = inttoptr i64 %18 to %"class.util::IdType.445"*
  %615 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %614, i64 0, i32 0, i32 0
  %616 = inttoptr i64 %569 to %"class.util::IdType.445"*
  %617 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %616, i64 0, i32 0, i32 0
  store i32 %28, i32* %617, align 4
  store i32 %572, i32* %615, align 4
  br label %940

618:                                              ; preds = %611
  %619 = sdiv i64 %568, 2
  %620 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %580, i64 %619
  %621 = ptrtoint %"class.util::IdType.445"* %620 to i64
  %622 = ptrtoint %"class.util::IdType.445"* %15 to i64
  %623 = sub i64 %622, %18
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %643, label %625

625:                                              ; preds = %618
  %626 = ashr exact i64 %623, 2
  %627 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %620, i64 0, i32 0, i32 0
  %628 = load i32, i32* %627, align 4
  br label %629

629:                                              ; preds = %629, %625
  %630 = phi %"class.util::IdType.445"* [ %26, %625 ], [ %641, %629 ]
  %631 = phi i64 [ %626, %625 ], [ %640, %629 ]
  %632 = lshr i64 %631, 1
  %633 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %630, i64 %632
  %634 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %633, i64 0, i32 0, i32 0
  %635 = load i32, i32* %634, align 4
  %636 = icmp ult i32 %635, %628
  %637 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %633, i64 1
  %638 = xor i64 %632, -1
  %639 = add i64 %631, %638
  %640 = select i1 %636, i64 %639, i64 %632
  %641 = select i1 %636, %"class.util::IdType.445"* %637, %"class.util::IdType.445"* %630
  %642 = icmp eq i64 %640, 0
  br i1 %642, label %643, label %629

643:                                              ; preds = %629, %618
  %644 = phi %"class.util::IdType.445"* [ %26, %618 ], [ %641, %629 ]
  %645 = ptrtoint %"class.util::IdType.445"* %644 to i64
  %646 = sub i64 %645, %18
  %647 = ashr exact i64 %646, 2
  br label %648

648:                                              ; preds = %643, %606
  %649 = phi i64 [ %608, %606 ], [ %621, %643 ]
  %650 = phi i64 [ %585, %606 ], [ %645, %643 ]
  %651 = phi i64 [ %583, %606 ], [ %647, %643 ]
  %652 = phi i64 [ %610, %606 ], [ %619, %643 ]
  %653 = sub nsw i64 %568, %652
  %654 = sub nsw i64 %17, %651
  %655 = inttoptr i64 %649 to %"class.util::IdType.445"*
  %656 = inttoptr i64 %650 to %"class.util::IdType.445"*
  %657 = inttoptr i64 %649 to i8*
  %658 = inttoptr i64 %18 to i8*
  %659 = icmp eq %"class.util::IdType.445"* %655, %26
  br i1 %659, label %925, label %660

660:                                              ; preds = %648
  %661 = icmp eq %"class.util::IdType.445"* %26, %656
  br i1 %661, label %925, label %662

662:                                              ; preds = %660
  %663 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 1
  %664 = icmp eq %"class.util::IdType.445"* %663, %26
  br i1 %664, label %665, label %675

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 0, i32 0, i32 0
  %667 = load i32, i32* %666, align 4
  %668 = sub i64 %650, %18
  %669 = ashr exact i64 %668, 2
  %670 = icmp eq i64 %668, 0
  br i1 %670, label %672, label %671

671:                                              ; preds = %665
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %657, i8* align 4 %658, i64 %668, i1 false) #16
  br label %672

672:                                              ; preds = %671, %665
  %673 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %669
  %674 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %673, i64 0, i32 0, i32 0
  store i32 %667, i32* %674, align 4
  br label %925

675:                                              ; preds = %662
  %676 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 1
  %677 = icmp eq %"class.util::IdType.445"* %676, %656
  br i1 %677, label %678, label %693

678:                                              ; preds = %675
  %679 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %656, i64 -1
  %680 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %679, i64 0, i32 0, i32 0
  %681 = load i32, i32* %680, align 4
  %682 = ptrtoint %"class.util::IdType.445"* %679 to i64
  %683 = sub i64 %682, %649
  %684 = icmp eq i64 %683, 0
  br i1 %684, label %690, label %685

685:                                              ; preds = %678
  %686 = ashr exact i64 %683, 2
  %687 = sub nsw i64 0, %686
  %688 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %656, i64 %687
  %689 = bitcast %"class.util::IdType.445"* %688 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %689, i8* align 4 %657, i64 %683, i1 false) #16
  br label %690

690:                                              ; preds = %685, %678
  %691 = phi %"class.util::IdType.445"* [ %688, %685 ], [ %656, %678 ]
  %692 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 0, i32 0, i32 0
  store i32 %681, i32* %692, align 4
  br label %925

693:                                              ; preds = %675
  %694 = sub i64 %18, %649
  %695 = ashr exact i64 %694, 2
  %696 = sub i64 %650, %18
  %697 = ashr exact i64 %696, 2
  %698 = icmp eq i64 %695, %697
  br i1 %698, label %699, label %858

699:                                              ; preds = %693
  %700 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 0, i32 0, i32 0
  %701 = load i32, i32* %700, align 4
  %702 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 0, i32 0, i32 0
  store i32 %28, i32* %700, align 4
  store i32 %701, i32* %702, align 4
  %703 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 1
  %704 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 1
  %705 = icmp eq %"class.util::IdType.445"* %703, %26
  br i1 %705, label %925, label %706

706:                                              ; preds = %699
  %707 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 -2
  %708 = bitcast %"class.util::IdType.445"* %707 to i8*
  %709 = sub i64 0, %649
  %710 = getelementptr i8, i8* %708, i64 %709
  %711 = ptrtoint i8* %710 to i64
  %712 = lshr i64 %711, 2
  %713 = add nuw nsw i64 %712, 1
  %714 = icmp ult i64 %713, 8
  br i1 %714, label %801, label %715

715:                                              ; preds = %706
  %716 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 2
  %717 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 -2
  %718 = bitcast %"class.util::IdType.445"* %717 to i8*
  %719 = sub i64 0, %649
  %720 = getelementptr i8, i8* %718, i64 %719
  %721 = ptrtoint i8* %720 to i64
  %722 = lshr i64 %721, 2
  %723 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %716, i64 %722
  %724 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 2
  %725 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %724, i64 %722
  %726 = icmp ult %"class.util::IdType.445"* %703, %725
  %727 = icmp ult %"class.util::IdType.445"* %704, %723
  %728 = and i1 %726, %727
  br i1 %728, label %801, label %729

729:                                              ; preds = %715
  %730 = and i64 %713, 9223372036854775800
  %731 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %704, i64 %730
  %732 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %703, i64 %730
  %733 = add nsw i64 %730, -8
  %734 = lshr exact i64 %733, 3
  %735 = add nuw nsw i64 %734, 1
  %736 = and i64 %735, 1
  %737 = icmp eq i64 %733, 0
  br i1 %737, label %779, label %738

738:                                              ; preds = %729
  %739 = sub nuw nsw i64 %735, %736
  br label %740

740:                                              ; preds = %740, %738
  %741 = phi i64 [ 0, %738 ], [ %776, %740 ]
  %742 = phi i64 [ %739, %738 ], [ %777, %740 ]
  %743 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %704, i64 %741
  %744 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %703, i64 %741
  %745 = bitcast %"class.util::IdType.445"* %743 to <4 x i32>*
  %746 = load <4 x i32>, <4 x i32>* %745, align 4, !alias.scope !200
  %747 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %743, i64 4
  %748 = bitcast %"class.util::IdType.445"* %747 to <4 x i32>*
  %749 = load <4 x i32>, <4 x i32>* %748, align 4, !alias.scope !200
  %750 = bitcast %"class.util::IdType.445"* %744 to <4 x i32>*
  %751 = load <4 x i32>, <4 x i32>* %750, align 4, !alias.scope !203, !noalias !200
  %752 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %744, i64 4
  %753 = bitcast %"class.util::IdType.445"* %752 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !203, !noalias !200
  %755 = bitcast %"class.util::IdType.445"* %744 to <4 x i32>*
  store <4 x i32> %746, <4 x i32>* %755, align 4, !alias.scope !203, !noalias !200
  %756 = bitcast %"class.util::IdType.445"* %752 to <4 x i32>*
  store <4 x i32> %749, <4 x i32>* %756, align 4, !alias.scope !203, !noalias !200
  %757 = bitcast %"class.util::IdType.445"* %743 to <4 x i32>*
  store <4 x i32> %751, <4 x i32>* %757, align 4, !alias.scope !200
  %758 = bitcast %"class.util::IdType.445"* %747 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %758, align 4, !alias.scope !200
  %759 = or i64 %741, 8
  %760 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %704, i64 %759
  %761 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %703, i64 %759
  %762 = bitcast %"class.util::IdType.445"* %760 to <4 x i32>*
  %763 = load <4 x i32>, <4 x i32>* %762, align 4, !alias.scope !200
  %764 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %760, i64 4
  %765 = bitcast %"class.util::IdType.445"* %764 to <4 x i32>*
  %766 = load <4 x i32>, <4 x i32>* %765, align 4, !alias.scope !200
  %767 = bitcast %"class.util::IdType.445"* %761 to <4 x i32>*
  %768 = load <4 x i32>, <4 x i32>* %767, align 4, !alias.scope !203, !noalias !200
  %769 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %761, i64 4
  %770 = bitcast %"class.util::IdType.445"* %769 to <4 x i32>*
  %771 = load <4 x i32>, <4 x i32>* %770, align 4, !alias.scope !203, !noalias !200
  %772 = bitcast %"class.util::IdType.445"* %761 to <4 x i32>*
  store <4 x i32> %763, <4 x i32>* %772, align 4, !alias.scope !203, !noalias !200
  %773 = bitcast %"class.util::IdType.445"* %769 to <4 x i32>*
  store <4 x i32> %766, <4 x i32>* %773, align 4, !alias.scope !203, !noalias !200
  %774 = bitcast %"class.util::IdType.445"* %760 to <4 x i32>*
  store <4 x i32> %768, <4 x i32>* %774, align 4, !alias.scope !200
  %775 = bitcast %"class.util::IdType.445"* %764 to <4 x i32>*
  store <4 x i32> %771, <4 x i32>* %775, align 4, !alias.scope !200
  %776 = add i64 %741, 16
  %777 = add i64 %742, -2
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %779, label %740, !llvm.loop !205

779:                                              ; preds = %740, %729
  %780 = phi i64 [ 0, %729 ], [ %776, %740 ]
  %781 = icmp eq i64 %736, 0
  br i1 %781, label %799, label %782

782:                                              ; preds = %779
  %783 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %704, i64 %780
  %784 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %703, i64 %780
  %785 = bitcast %"class.util::IdType.445"* %783 to <4 x i32>*
  %786 = load <4 x i32>, <4 x i32>* %785, align 4, !alias.scope !200
  %787 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %783, i64 4
  %788 = bitcast %"class.util::IdType.445"* %787 to <4 x i32>*
  %789 = load <4 x i32>, <4 x i32>* %788, align 4, !alias.scope !200
  %790 = bitcast %"class.util::IdType.445"* %784 to <4 x i32>*
  %791 = load <4 x i32>, <4 x i32>* %790, align 4, !alias.scope !203, !noalias !200
  %792 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %784, i64 4
  %793 = bitcast %"class.util::IdType.445"* %792 to <4 x i32>*
  %794 = load <4 x i32>, <4 x i32>* %793, align 4, !alias.scope !203, !noalias !200
  %795 = bitcast %"class.util::IdType.445"* %784 to <4 x i32>*
  store <4 x i32> %786, <4 x i32>* %795, align 4, !alias.scope !203, !noalias !200
  %796 = bitcast %"class.util::IdType.445"* %792 to <4 x i32>*
  store <4 x i32> %789, <4 x i32>* %796, align 4, !alias.scope !203, !noalias !200
  %797 = bitcast %"class.util::IdType.445"* %783 to <4 x i32>*
  store <4 x i32> %791, <4 x i32>* %797, align 4, !alias.scope !200
  %798 = bitcast %"class.util::IdType.445"* %787 to <4 x i32>*
  store <4 x i32> %794, <4 x i32>* %798, align 4, !alias.scope !200
  br label %799

799:                                              ; preds = %779, %782
  %800 = icmp eq i64 %713, %730
  br i1 %800, label %925, label %801

801:                                              ; preds = %799, %715, %706
  %802 = phi %"class.util::IdType.445"* [ %704, %715 ], [ %704, %706 ], [ %731, %799 ]
  %803 = phi %"class.util::IdType.445"* [ %703, %715 ], [ %703, %706 ], [ %732, %799 ]
  %804 = ptrtoint %"class.util::IdType.445"* %803 to i64
  %805 = getelementptr %"class.util::IdType.445", %"class.util::IdType.445"* %26, i64 -1
  %806 = ptrtoint %"class.util::IdType.445"* %805 to i64
  %807 = sub i64 %806, %804
  %808 = lshr i64 %807, 2
  %809 = add nuw nsw i64 %808, 1
  %810 = and i64 %809, 3
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %825, label %812

812:                                              ; preds = %801, %812
  %813 = phi %"class.util::IdType.445"* [ %822, %812 ], [ %802, %801 ]
  %814 = phi %"class.util::IdType.445"* [ %821, %812 ], [ %803, %801 ]
  %815 = phi i64 [ %823, %812 ], [ %810, %801 ]
  %816 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %813, i64 0, i32 0, i32 0
  %817 = load i32, i32* %816, align 4
  %818 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %814, i64 0, i32 0, i32 0
  %819 = load i32, i32* %818, align 4
  %820 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %813, i64 0, i32 0, i32 0
  store i32 %817, i32* %818, align 4
  store i32 %819, i32* %820, align 4
  %821 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %814, i64 1
  %822 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %813, i64 1
  %823 = add i64 %815, -1
  %824 = icmp eq i64 %823, 0
  br i1 %824, label %825, label %812, !llvm.loop !206

825:                                              ; preds = %812, %801
  %826 = phi %"class.util::IdType.445"* [ %802, %801 ], [ %822, %812 ]
  %827 = phi %"class.util::IdType.445"* [ %803, %801 ], [ %821, %812 ]
  %828 = icmp ult i64 %807, 12
  br i1 %828, label %925, label %829

829:                                              ; preds = %825, %829
  %830 = phi %"class.util::IdType.445"* [ %856, %829 ], [ %826, %825 ]
  %831 = phi %"class.util::IdType.445"* [ %855, %829 ], [ %827, %825 ]
  %832 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 0, i32 0, i32 0
  %833 = load i32, i32* %832, align 4
  %834 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %831, i64 0, i32 0, i32 0
  %835 = load i32, i32* %834, align 4
  %836 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 0, i32 0, i32 0
  store i32 %833, i32* %834, align 4
  store i32 %835, i32* %836, align 4
  %837 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 1
  %838 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %837, i64 0, i32 0, i32 0
  %839 = load i32, i32* %838, align 4
  %840 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %831, i64 1, i32 0, i32 0
  %841 = load i32, i32* %840, align 4
  %842 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %837, i64 0, i32 0, i32 0
  store i32 %839, i32* %840, align 4
  store i32 %841, i32* %842, align 4
  %843 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 2
  %844 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %843, i64 0, i32 0, i32 0
  %845 = load i32, i32* %844, align 4
  %846 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %831, i64 2, i32 0, i32 0
  %847 = load i32, i32* %846, align 4
  %848 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %843, i64 0, i32 0, i32 0
  store i32 %845, i32* %846, align 4
  store i32 %847, i32* %848, align 4
  %849 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 3
  %850 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %849, i64 0, i32 0, i32 0
  %851 = load i32, i32* %850, align 4
  %852 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %831, i64 3, i32 0, i32 0
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %849, i64 0, i32 0, i32 0
  store i32 %851, i32* %852, align 4
  store i32 %853, i32* %854, align 4
  %855 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %831, i64 4
  %856 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %830, i64 4
  %857 = icmp eq %"class.util::IdType.445"* %855, %26
  br i1 %857, label %925, label %829, !llvm.loop !207

858:                                              ; preds = %693, %858
  %859 = phi i64 [ %861, %858 ], [ %697, %693 ]
  %860 = phi i64 [ %859, %858 ], [ %695, %693 ]
  %861 = srem i64 %860, %859
  %862 = icmp eq i64 %861, 0
  br i1 %862, label %863, label %858

863:                                              ; preds = %858
  %864 = icmp eq i64 %859, 0
  br i1 %864, label %896, label %865

865:                                              ; preds = %863
  %866 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %859
  %867 = shl nsw i64 %859, 2
  %868 = add i64 %867, -4
  %869 = and i64 %868, 4
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %893

871:                                              ; preds = %865
  %872 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %866, i64 -1
  %873 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %872, i64 0, i32 0, i32 0
  %874 = load i32, i32* %873, align 4
  %875 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %872, i64 %695
  br label %876

876:                                              ; preds = %876, %871
  %877 = phi %"class.util::IdType.445"* [ %872, %871 ], [ %878, %876 ]
  %878 = phi %"class.util::IdType.445"* [ %875, %871 ], [ %889, %876 ]
  %879 = ptrtoint %"class.util::IdType.445"* %878 to i64
  %880 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %878, i64 0, i32 0, i32 0
  %881 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %877, i64 0, i32 0, i32 0
  %882 = load i32, i32* %880, align 4
  store i32 %882, i32* %881, align 4
  %883 = sub i64 %650, %879
  %884 = ashr exact i64 %883, 2
  %885 = icmp slt i64 %695, %884
  %886 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %878, i64 %695
  %887 = sub nsw i64 %695, %884
  %888 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %887
  %889 = select i1 %885, %"class.util::IdType.445"* %886, %"class.util::IdType.445"* %888
  %890 = icmp eq %"class.util::IdType.445"* %889, %872
  br i1 %890, label %891, label %876

891:                                              ; preds = %876
  %892 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %878, i64 0, i32 0, i32 0
  store i32 %874, i32* %892, align 4
  br label %893

893:                                              ; preds = %891, %865
  %894 = phi %"class.util::IdType.445"* [ %872, %891 ], [ %866, %865 ]
  %895 = icmp eq i64 %868, 0
  br i1 %895, label %896, label %898

896:                                              ; preds = %893, %956, %863
  %897 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %697
  br label %925

898:                                              ; preds = %893, %956
  %899 = phi %"class.util::IdType.445"* [ %921, %956 ], [ %894, %893 ]
  %900 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %899, i64 -1
  %901 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %900, i64 0, i32 0, i32 0
  %902 = load i32, i32* %901, align 4
  %903 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %900, i64 %695
  br label %904

904:                                              ; preds = %904, %898
  %905 = phi %"class.util::IdType.445"* [ %900, %898 ], [ %906, %904 ]
  %906 = phi %"class.util::IdType.445"* [ %903, %898 ], [ %917, %904 ]
  %907 = ptrtoint %"class.util::IdType.445"* %906 to i64
  %908 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %906, i64 0, i32 0, i32 0
  %909 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %905, i64 0, i32 0, i32 0
  %910 = load i32, i32* %908, align 4
  store i32 %910, i32* %909, align 4
  %911 = sub i64 %650, %907
  %912 = ashr exact i64 %911, 2
  %913 = icmp slt i64 %695, %912
  %914 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %906, i64 %695
  %915 = sub nsw i64 %695, %912
  %916 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %915
  %917 = select i1 %913, %"class.util::IdType.445"* %914, %"class.util::IdType.445"* %916
  %918 = icmp eq %"class.util::IdType.445"* %917, %900
  br i1 %918, label %919, label %904

919:                                              ; preds = %904
  %920 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %906, i64 0, i32 0, i32 0
  store i32 %902, i32* %920, align 4
  %921 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %899, i64 -2
  %922 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %921, i64 0, i32 0, i32 0
  %923 = load i32, i32* %922, align 4
  %924 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %921, i64 %695
  br label %941

925:                                              ; preds = %825, %829, %699, %799, %648, %660, %672, %690, %896
  %926 = phi %"class.util::IdType.445"* [ %655, %660 ], [ %656, %648 ], [ %673, %672 ], [ %691, %690 ], [ %897, %896 ], [ %26, %799 ], [ %26, %699 ], [ %26, %829 ], [ %26, %825 ]
  %927 = add nsw i64 %652, %651
  %928 = add nsw i64 %653, %654
  %929 = icmp slt i64 %927, %928
  br i1 %929, label %930, label %932

930:                                              ; preds = %925
  %931 = ptrtoint %"class.util::IdType.445"* %926 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.util::IdType.445"* %580, %"class.util::IdType.445"* %655, %"class.util::IdType.445"* %926, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %3, i64 %652, i64 %651, %"class.util::IdType.445"* %6, i64 %7)
  br label %933

932:                                              ; preds = %925
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS1_8identityENS_4lessIvEENS_6vectorIS8_NS_9allocatorIS8_EEEEE13value_compareENS_11__wrap_iterIPS8_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.util::IdType.445"* %926, %"class.util::IdType.445"* %656, %"class.util::IdType.445"* %15, %"struct.base::internal::flat_tree<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, base::identity, std::__1::less<void>, std::__1::vector<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1>, std::__1::allocator<util::IdType<viz::ResourceIdTypeMarker, unsigned int, 0, 1> > > >::value_compare"* dereferenceable(1) %3, i64 %653, i64 %654, %"class.util::IdType.445"* %6, i64 %7)
  br label %933

933:                                              ; preds = %930, %932
  %934 = phi i64 [ %931, %930 ], [ %569, %932 ]
  %935 = phi i64 [ %650, %930 ], [ %649, %932 ]
  %936 = phi i64 [ %654, %930 ], [ %651, %932 ]
  %937 = phi i64 [ %653, %930 ], [ %652, %932 ]
  %938 = phi %"class.util::IdType.445"* [ %15, %930 ], [ %926, %932 ]
  %939 = icmp eq i64 %936, 0
  br i1 %939, label %940, label %14

940:                                              ; preds = %933, %23, %574, %328, %523, %489, %493, %466, %8, %613, %363, %314, %309, %301, %168, %35
  ret void

941:                                              ; preds = %941, %919
  %942 = phi %"class.util::IdType.445"* [ %921, %919 ], [ %943, %941 ]
  %943 = phi %"class.util::IdType.445"* [ %924, %919 ], [ %954, %941 ]
  %944 = ptrtoint %"class.util::IdType.445"* %943 to i64
  %945 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %943, i64 0, i32 0, i32 0
  %946 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %942, i64 0, i32 0, i32 0
  %947 = load i32, i32* %945, align 4
  store i32 %947, i32* %946, align 4
  %948 = sub i64 %650, %944
  %949 = ashr exact i64 %948, 2
  %950 = icmp slt i64 %695, %949
  %951 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %943, i64 %695
  %952 = sub nsw i64 %695, %949
  %953 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %655, i64 %952
  %954 = select i1 %950, %"class.util::IdType.445"* %951, %"class.util::IdType.445"* %953
  %955 = icmp eq %"class.util::IdType.445"* %954, %921
  br i1 %955, label %956, label %941

956:                                              ; preds = %941
  %957 = getelementptr inbounds %"class.util::IdType.445", %"class.util::IdType.445"* %943, i64 0, i32 0, i32 0
  store i32 %923, i32* %957, align 4
  %958 = icmp eq %"class.util::IdType.445"* %921, %655
  br i1 %958, label %896, label %898
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.212"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.210"*, %"struct.std::__1::pair.212"*, %"class.viz::SurfaceId"* dereferenceable(32), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer.757", align 8
  %7 = ptrtoint %"struct.std::__1::pair.212"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair.212"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair.212"* %10 to i64
  %15 = ptrtoint %"struct.std::__1::pair.212"* %12 to i64
  br i1 %13, label %16, label %100

16:                                               ; preds = %4
  %17 = icmp eq %"struct.std::__1::pair.212"* %10, %1
  br i1 %17, label %18, label %40

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 1, i32 2
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  %34 = bitcast %"class.base::UnguessableToken"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #16
  %35 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 1
  %36 = load i64, i64* %3, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 1
  %38 = ptrtoint %"struct.std::__1::pair.212"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair.212"** %9 to i64*
  store i64 %38, i64* %39, align 8
  br label %246

40:                                               ; preds = %16
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %45 = bitcast %"class.base::UnguessableToken"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %45, i64 16, i1 false)
  %46 = load i64, i64* %3, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 1
  %48 = ptrtoint %"struct.std::__1::pair.212"* %47 to i64
  %49 = sub i64 %14, %48
  %50 = sdiv exact i64 %49, 40
  %51 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 %50
  %52 = bitcast %"struct.std::__1::pair.212"** %9 to i64*
  %53 = icmp ult %"struct.std::__1::pair.212"* %51, %10
  br i1 %53, label %70, label %56

54:                                               ; preds = %70
  %55 = ptrtoint %"struct.std::__1::pair.212"* %93 to i64
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i64 [ %55, %54 ], [ %14, %40 ]
  store i64 %57, i64* %52, align 8
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %56, %59
  %60 = phi %"struct.std::__1::pair.212"* [ %63, %59 ], [ %10, %56 ]
  %61 = phi %"struct.std::__1::pair.212"* [ %62, %59 ], [ %51, %56 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %61, i64 -1
  %63 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %60, i64 -1
  %64 = bitcast %"struct.std::__1::pair.212"* %63 to i8*
  %65 = bitcast %"struct.std::__1::pair.212"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 32, i1 false) #16
  %66 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %61, i64 -1, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %60, i64 -1, i32 1
  store i64 %67, i64* %68, align 8
  %69 = icmp eq %"struct.std::__1::pair.212"* %62, %1
  br i1 %69, label %95, label %59

70:                                               ; preds = %40, %70
  %71 = phi %"struct.std::__1::pair.212"* [ %93, %70 ], [ %10, %40 ]
  %72 = phi %"struct.std::__1::pair.212"* [ %92, %70 ], [ %51, %40 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %79, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 0, i32 1, i32 1
  %83 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 0, i32 1, i32 2
  %86 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 0, i32 1, i32 2
  %87 = bitcast %"class.base::UnguessableToken"* %85 to i8*
  %88 = bitcast %"class.base::UnguessableToken"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #16
  %89 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %89, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %72, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %71, i64 1
  %94 = icmp ult %"struct.std::__1::pair.212"* %92, %10
  br i1 %94, label %70, label %54

95:                                               ; preds = %59, %56
  %96 = bitcast %"struct.std::__1::pair.212"* %1 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 0, i32 1, i32 2
  %98 = bitcast %"class.base::UnguessableToken"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %41, i64 16, i1 false)
  %99 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %1, i64 0, i32 1
  store i64 %46, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  br label %246

100:                                              ; preds = %4
  %101 = getelementptr inbounds %"class.std::__1::vector.210", %"class.std::__1::vector.210"* %0, i64 0, i32 0, i32 2
  %102 = bitcast %"struct.std::__1::__split_buffer.757"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #16
  %103 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %6, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %6, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %6, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %6, i64 0, i32 3, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %6, i64 0, i32 3, i32 1, i32 0
  %108 = bitcast %"struct.std::__1::pair.212"** %9 to i64*
  %109 = bitcast %"class.std::__1::vector.210"* %0 to i64*
  %110 = bitcast %"struct.std::__1::__split_buffer.757"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false)
  %111 = load i64, i64* %109, align 8
  %112 = sub i64 %14, %111
  %113 = sdiv exact i64 %112, 40
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 461168601842738790
  br i1 %115, label %116, label %118

116:                                              ; preds = %100
  %117 = bitcast %"class.std::__1::vector.210"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #18
  unreachable

118:                                              ; preds = %100
  %119 = bitcast %"struct.std::__1::pair.212"** %11 to i64*
  %120 = sub i64 %15, %111
  %121 = sdiv exact i64 %120, 40
  %122 = icmp ult i64 %121, 230584300921369395
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = sub i64 %7, %111
  %125 = sdiv exact i64 %124, 40
  store %"struct.std::__1::pair.212"* null, %"struct.std::__1::pair.212"** %106, align 8
  %126 = bitcast %"class.std::__1::allocator.216"** %107 to %"class.std::__1::__compressed_pair.213"**
  store %"class.std::__1::__compressed_pair.213"* %101, %"class.std::__1::__compressed_pair.213"** %126, align 8
  br label %135

127:                                              ; preds = %118
  %128 = shl nsw i64 %121, 1
  %129 = icmp ult i64 %128, %114
  %130 = select i1 %129, i64 %114, i64 %128
  %131 = sub i64 %7, %111
  %132 = sdiv exact i64 %131, 40
  store %"struct.std::__1::pair.212"* null, %"struct.std::__1::pair.212"** %106, align 8
  %133 = bitcast %"class.std::__1::allocator.216"** %107 to %"class.std::__1::__compressed_pair.213"**
  store %"class.std::__1::__compressed_pair.213"* %101, %"class.std::__1::__compressed_pair.213"** %133, align 8
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %127, %123
  %136 = phi i64 [ %125, %123 ], [ %132, %127 ]
  %137 = phi i64 [ 461168601842738790, %123 ], [ %130, %127 ]
  %138 = mul i64 %137, 40
  %139 = tail call i8* @_Znwm(i64 %138) #17
  %140 = bitcast i8* %139 to %"struct.std::__1::pair.212"*
  br label %141

141:                                              ; preds = %127, %135
  %142 = phi i64 [ %136, %135 ], [ %132, %127 ]
  %143 = phi i64 [ %137, %135 ], [ 0, %127 ]
  %144 = phi %"struct.std::__1::pair.212"* [ %140, %135 ], [ null, %127 ]
  store %"struct.std::__1::pair.212"* %144, %"struct.std::__1::pair.212"** %103, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %144, i64 %142
  store %"struct.std::__1::pair.212"* %145, %"struct.std::__1::pair.212"** %105, align 8
  store %"struct.std::__1::pair.212"* %145, %"struct.std::__1::pair.212"** %104, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %144, i64 %143
  store %"struct.std::__1::pair.212"* %146, %"struct.std::__1::pair.212"** %106, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.757"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2, i64* dereferenceable(8) %3)
  %147 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %104, align 8
  %148 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %8, align 8
  %149 = icmp eq %"struct.std::__1::pair.212"* %148, %1
  br i1 %149, label %176, label %150

150:                                              ; preds = %141, %150
  %151 = phi %"struct.std::__1::pair.212"* [ %174, %150 ], [ %147, %141 ]
  %152 = phi %"struct.std::__1::pair.212"* [ %153, %150 ], [ %1, %141 ]
  %153 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1
  %154 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %153, i64 0, i32 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1, i32 0, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1, i32 0, i32 1, i32 0
  %162 = load i32, i32* %161, align 8
  store i32 %162, i32* %160, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 0, i32 1, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1, i32 0, i32 1, i32 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 0, i32 1, i32 2
  %167 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1, i32 0, i32 1, i32 2
  %168 = bitcast %"class.base::UnguessableToken"* %166 to i8*
  %169 = bitcast %"class.base::UnguessableToken"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #16
  %170 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %151, i64 -1, i32 1
  %171 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %152, i64 -1, i32 1
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %104, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %173, i64 -1
  store %"struct.std::__1::pair.212"* %174, %"struct.std::__1::pair.212"** %104, align 8
  %175 = icmp eq %"struct.std::__1::pair.212"* %153, %148
  br i1 %175, label %176, label %150

176:                                              ; preds = %150, %141
  %177 = phi %"struct.std::__1::pair.212"* [ %147, %141 ], [ %174, %150 ]
  %178 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %9, align 8
  %179 = icmp eq %"struct.std::__1::pair.212"* %178, %1
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = ptrtoint %"struct.std::__1::pair.212"* %178 to i64
  %182 = ptrtoint %"struct.std::__1::pair.212"* %177 to i64
  %183 = bitcast %"struct.std::__1::pair.212"** %104 to i64*
  %184 = bitcast %"struct.std::__1::pair.212"** %105 to i64*
  %185 = load i64, i64* %184, align 8
  br label %220

186:                                              ; preds = %176
  %187 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %105, align 8
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi %"struct.std::__1::pair.212"* [ %212, %188 ], [ %187, %186 ]
  %190 = phi %"struct.std::__1::pair.212"* [ %210, %188 ], [ %1, %186 ]
  %191 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  store i32 %193, i32* %191, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 0, i32 0, i32 1
  %195 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 0, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %194, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 0, i32 1, i32 0
  %198 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 8
  store i32 %199, i32* %197, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 0, i32 1, i32 1
  %201 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 0, i32 1, i32 1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 0, i32 1, i32 2
  %204 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 0, i32 1, i32 2
  %205 = bitcast %"class.base::UnguessableToken"* %203 to i8*
  %206 = bitcast %"class.base::UnguessableToken"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 16, i1 false) #16
  %207 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %189, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 0, i32 1
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %190, i64 1
  %211 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %105, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %211, i64 1
  store %"struct.std::__1::pair.212"* %212, %"struct.std::__1::pair.212"** %105, align 8
  %213 = icmp eq %"struct.std::__1::pair.212"* %210, %178
  br i1 %213, label %214, label %188

214:                                              ; preds = %188
  %215 = ptrtoint %"struct.std::__1::pair.212"* %212 to i64
  %216 = bitcast %"struct.std::__1::pair.212"** %104 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %108, align 8
  %219 = bitcast %"struct.std::__1::pair.212"** %105 to i64*
  br label %220

220:                                              ; preds = %180, %214
  %221 = phi i64* [ %184, %180 ], [ %219, %214 ]
  %222 = phi i64 [ %185, %180 ], [ %215, %214 ]
  %223 = phi i64 [ %181, %180 ], [ %218, %214 ]
  %224 = phi i64* [ %183, %180 ], [ %216, %214 ]
  %225 = phi i64 [ %182, %180 ], [ %217, %214 ]
  %226 = load i64, i64* %109, align 8
  store i64 %225, i64* %109, align 8
  store i64 %226, i64* %224, align 8
  store i64 %222, i64* %108, align 8
  store i64 %223, i64* %221, align 8
  %227 = load i64, i64* %119, align 8
  %228 = bitcast %"struct.std::__1::pair.212"** %106 to i64*
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %119, align 8
  store i64 %227, i64* %228, align 8
  %230 = bitcast %"struct.std::__1::__split_buffer.757"* %6 to i64*
  store i64 %226, i64* %230, align 8
  %231 = inttoptr i64 %226 to %"struct.std::__1::pair.212"*
  %232 = inttoptr i64 %223 to %"struct.std::__1::pair.212"*
  %233 = icmp eq %"struct.std::__1::pair.212"* %232, %231
  br i1 %233, label %241, label %234

234:                                              ; preds = %220
  %235 = getelementptr %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %232, i64 -1, i32 0, i32 0, i32 0
  %236 = ptrtoint i32* %235 to i64
  %237 = sub i64 %236, %226
  %238 = udiv i64 %237, 40
  %239 = xor i64 %238, -1
  %240 = getelementptr %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %232, i64 %239
  store %"struct.std::__1::pair.212"* %240, %"struct.std::__1::pair.212"** %105, align 8
  br label %241

241:                                              ; preds = %234, %220
  %242 = icmp eq i64 %226, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = inttoptr i64 %226 to i8*
  call void @_ZdlPv(i8* %244) #17
  br label %245

245:                                              ; preds = %241, %243
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #16
  br label %246

246:                                              ; preds = %18, %95, %245
  %247 = phi %"struct.std::__1::pair.212"* [ %1, %18 ], [ %1, %95 ], [ %147, %245 ]
  ret %"struct.std::__1::pair.212"* %247
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.757"*, %"class.viz::SurfaceId"* dereferenceable(32), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.212"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.212"* %7 to i64
  br i1 %8, label %10, label %106

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.757", %"struct.std::__1::__split_buffer.757"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.212"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.212"* %14 to i64
  br i1 %15, label %17, label %42

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.212"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 40
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.212"* %12, %5
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair.212"* [ %34, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.212"* [ %33, %25 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.212"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair.212"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #16
  %30 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %26, i64 0, i32 1
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %27, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %26, i64 1
  %35 = icmp eq %"struct.std::__1::pair.212"* %33, %5
  br i1 %35, label %36, label %25

36:                                               ; preds = %25
  %37 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %11, align 8
  br label %38

38:                                               ; preds = %36, %17
  %39 = phi %"struct.std::__1::pair.212"* [ %5, %17 ], [ %37, %36 ]
  %40 = phi %"struct.std::__1::pair.212"* [ %23, %17 ], [ %34, %36 ]
  store %"struct.std::__1::pair.212"* %40, %"struct.std::__1::pair.212"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %39, i64 %22
  store %"struct.std::__1::pair.212"* %41, %"struct.std::__1::pair.212"** %11, align 8
  br label %106

42:                                               ; preds = %10
  %43 = bitcast %"struct.std::__1::pair.212"** %6 to i64*
  %44 = bitcast %"struct.std::__1::__split_buffer.757"* %0 to i64*
  %45 = sub i64 %9, %16
  %46 = sdiv exact i64 %45, 40
  %47 = shl nsw i64 %46, 1
  %48 = icmp eq i64 %45, 0
  %49 = select i1 %48, i64 1, i64 %47
  %50 = icmp ugt i64 %49, 461168601842738790
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  tail call void @abort() #18
  unreachable

52:                                               ; preds = %42
  %53 = lshr i64 %49, 2
  %54 = mul i64 %49, 40
  %55 = tail call i8* @_Znwm(i64 %54) #17
  %56 = bitcast i8* %55 to %"struct.std::__1::pair.212"*
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %56, i64 %53
  %59 = ptrtoint %"struct.std::__1::pair.212"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %56, i64 %49
  %61 = ptrtoint %"struct.std::__1::pair.212"* %60 to i64
  %62 = ptrtoint %"struct.std::__1::pair.212"* %12 to i64
  %63 = ptrtoint %"struct.std::__1::pair.212"* %5 to i64
  %64 = sub i64 %63, %62
  %65 = sdiv exact i64 %64, 40
  %66 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %58, i64 %65
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %96, label %68

68:                                               ; preds = %52, %68
  %69 = phi %"struct.std::__1::pair.212"* [ %90, %68 ], [ %58, %52 ]
  %70 = phi %"struct.std::__1::pair.212"* [ %91, %68 ], [ %12, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 0, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #16
  %87 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %69, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %70, i64 1
  %92 = icmp eq %"struct.std::__1::pair.212"* %66, %90
  br i1 %92, label %93, label %68

93:                                               ; preds = %68
  %94 = ptrtoint %"struct.std::__1::pair.212"* %66 to i64
  %95 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %13, align 8
  br label %96

96:                                               ; preds = %52, %93
  %97 = phi %"struct.std::__1::pair.212"* [ %95, %93 ], [ %14, %52 ]
  %98 = phi i64 [ %94, %93 ], [ %59, %52 ]
  store i64 %57, i64* %44, align 8
  %99 = bitcast %"struct.std::__1::pair.212"** %11 to i64*
  store i64 %59, i64* %99, align 8
  %100 = bitcast %"struct.std::__1::pair.212"** %4 to i64*
  store i64 %98, i64* %100, align 8
  store i64 %61, i64* %43, align 8
  %101 = icmp eq %"struct.std::__1::pair.212"* %97, null
  %102 = inttoptr i64 %98 to %"struct.std::__1::pair.212"*
  br i1 %101, label %106, label %103

103:                                              ; preds = %96
  %104 = bitcast %"struct.std::__1::pair.212"* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #17
  %105 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %4, align 8
  br label %106

106:                                              ; preds = %103, %96, %38, %3
  %107 = phi %"struct.std::__1::pair.212"* [ %105, %103 ], [ %102, %96 ], [ %40, %38 ], [ %5, %3 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 0, i32 1, i32 0
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 0, i32 1, i32 1
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %117, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 0, i32 1, i32 2
  %121 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %122 = bitcast %"class.base::UnguessableToken"* %120 to i8*
  %123 = bitcast %"class.base::UnguessableToken"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #16
  %124 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %107, i64 0, i32 1
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = load %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"** %4, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %126, i64 1
  store %"struct.std::__1::pair.212"* %127, %"struct.std::__1::pair.212"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.222"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEENS_9allocatorIS5_EEE7emplaceIJRKS3_S4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.220"*, %"struct.std::__1::pair.222"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.viz::LocalSurfaceId"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.222"* %1 to i64
  %6 = alloca [16 x i8], align 8
  %7 = alloca %"struct.std::__1::__split_buffer.765", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair.222"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair.222"* %10 to i64
  %15 = ptrtoint %"struct.std::__1::pair.222"* %12 to i64
  br i1 %13, label %16, label %209

16:                                               ; preds = %4
  %17 = icmp eq %"struct.std::__1::pair.222"* %10, %1
  br i1 %17, label %18, label %38

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 2
  %32 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 2
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  %34 = bitcast %"class.base::UnguessableToken"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #16
  %35 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 1
  %36 = ptrtoint %"struct.std::__1::pair.222"* %35 to i64
  %37 = bitcast %"struct.std::__1::pair.222"** %9 to i64*
  store i64 %36, i64* %37, align 8
  br label %352

38:                                               ; preds = %16
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  %40 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %3, i64 0, i32 2
  %49 = bitcast %"class.base::UnguessableToken"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %49, i64 16, i1 false)
  %50 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 1
  %51 = ptrtoint %"struct.std::__1::pair.222"* %50 to i64
  %52 = sub i64 %14, %51
  %53 = ashr exact i64 %52, 5
  %54 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 %53
  %55 = bitcast %"struct.std::__1::pair.222"** %9 to i64*
  %56 = icmp ult %"struct.std::__1::pair.222"* %54, %10
  br i1 %56, label %57, label %93

57:                                               ; preds = %38
  %58 = sub nsw i64 0, %53
  %59 = getelementptr %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 %58, i32 0, i32 0
  %60 = bitcast i32* %59 to i8*
  %61 = xor i64 %5, -1
  %62 = getelementptr i8, i8* %60, i64 %61
  %63 = ptrtoint i8* %62 to i64
  %64 = and i64 %63, 32
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %85

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %54, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %67, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 %53, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 %53, i32 1, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 0, i32 1, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 %53, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 0, i32 1, i32 2
  %80 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 %53, i32 1, i32 2
  %81 = bitcast %"class.base::UnguessableToken"* %79 to i8*
  %82 = bitcast %"class.base::UnguessableToken"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #16
  %83 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %54, i64 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %10, i64 1
  br label %85

85:                                               ; preds = %66, %57
  %86 = phi %"struct.std::__1::pair.222"* [ %10, %57 ], [ %84, %66 ]
  %87 = phi %"struct.std::__1::pair.222"* [ %54, %57 ], [ %83, %66 ]
  %88 = phi %"struct.std::__1::pair.222"* [ undef, %57 ], [ %84, %66 ]
  %89 = icmp ult i8* %62, inttoptr (i64 32 to i8*)
  br i1 %89, label %90, label %161

90:                                               ; preds = %161, %85
  %91 = phi %"struct.std::__1::pair.222"* [ %88, %85 ], [ %197, %161 ]
  %92 = ptrtoint %"struct.std::__1::pair.222"* %91 to i64
  br label %93

93:                                               ; preds = %90, %38
  %94 = phi i64 [ %92, %90 ], [ %14, %38 ]
  store i64 %94, i64* %55, align 8
  %95 = icmp eq i64 %52, 0
  br i1 %95, label %199, label %96

96:                                               ; preds = %93
  %97 = add i64 %52, -32
  %98 = lshr i64 %97, 5
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %117, label %102

102:                                              ; preds = %96, %102
  %103 = phi %"struct.std::__1::pair.222"* [ %107, %102 ], [ %10, %96 ]
  %104 = phi %"struct.std::__1::pair.222"* [ %106, %102 ], [ %54, %96 ]
  %105 = phi i64 [ %115, %102 ], [ %100, %96 ]
  %106 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %104, i64 -1
  %107 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %103, i64 -1
  %108 = bitcast %"struct.std::__1::pair.222"* %106 to i64*
  %109 = bitcast %"struct.std::__1::pair.222"* %107 to i64*
  %110 = load i64, i64* %108, align 4
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %104, i64 -1, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %103, i64 -1, i32 1
  %113 = bitcast %"class.viz::LocalSurfaceId"* %112 to i8*
  %114 = bitcast %"class.viz::LocalSurfaceId"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 24, i1 false) #16
  %115 = add i64 %105, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %102, !llvm.loop !208

117:                                              ; preds = %102, %96
  %118 = phi %"struct.std::__1::pair.222"* [ %10, %96 ], [ %107, %102 ]
  %119 = phi %"struct.std::__1::pair.222"* [ %54, %96 ], [ %106, %102 ]
  %120 = icmp ult i64 %97, 96
  br i1 %120, label %199, label %121

121:                                              ; preds = %117, %121
  %122 = phi %"struct.std::__1::pair.222"* [ %152, %121 ], [ %118, %117 ]
  %123 = phi %"struct.std::__1::pair.222"* [ %151, %121 ], [ %119, %117 ]
  %124 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -1
  %125 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -1
  %126 = bitcast %"struct.std::__1::pair.222"* %124 to i64*
  %127 = bitcast %"struct.std::__1::pair.222"* %125 to i64*
  %128 = load i64, i64* %126, align 4
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -1, i32 1
  %130 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -1, i32 1
  %131 = bitcast %"class.viz::LocalSurfaceId"* %130 to i8*
  %132 = bitcast %"class.viz::LocalSurfaceId"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #16
  %133 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -2
  %134 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -2
  %135 = bitcast %"struct.std::__1::pair.222"* %133 to i64*
  %136 = bitcast %"struct.std::__1::pair.222"* %134 to i64*
  %137 = load i64, i64* %135, align 4
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -2, i32 1
  %139 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -2, i32 1
  %140 = bitcast %"class.viz::LocalSurfaceId"* %139 to i8*
  %141 = bitcast %"class.viz::LocalSurfaceId"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 24, i1 false) #16
  %142 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -3
  %143 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -3
  %144 = bitcast %"struct.std::__1::pair.222"* %142 to i64*
  %145 = bitcast %"struct.std::__1::pair.222"* %143 to i64*
  %146 = load i64, i64* %144, align 4
  store i64 %146, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -3, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -3, i32 1
  %149 = bitcast %"class.viz::LocalSurfaceId"* %148 to i8*
  %150 = bitcast %"class.viz::LocalSurfaceId"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #16
  %151 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -4
  %152 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -4
  %153 = bitcast %"struct.std::__1::pair.222"* %151 to i64*
  %154 = bitcast %"struct.std::__1::pair.222"* %152 to i64*
  %155 = load i64, i64* %153, align 4
  store i64 %155, i64* %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %123, i64 -4, i32 1
  %157 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %122, i64 -4, i32 1
  %158 = bitcast %"class.viz::LocalSurfaceId"* %157 to i8*
  %159 = bitcast %"class.viz::LocalSurfaceId"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 24, i1 false) #16
  %160 = icmp eq %"struct.std::__1::pair.222"* %151, %1
  br i1 %160, label %199, label %121

161:                                              ; preds = %85, %161
  %162 = phi %"struct.std::__1::pair.222"* [ %197, %161 ], [ %86, %85 ]
  %163 = phi %"struct.std::__1::pair.222"* [ %196, %161 ], [ %87, %85 ]
  %164 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  store i32 %166, i32* %164, align 4
  %167 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 0, i32 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 0, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  store i32 %169, i32* %167, align 4
  %170 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 0, i32 1, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 0, i32 1, i32 0
  %172 = load i32, i32* %171, align 8
  store i32 %172, i32* %170, align 8
  %173 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 0, i32 1, i32 1
  %174 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 0, i32 1, i32 1
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %173, align 4
  %176 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 0, i32 1, i32 2
  %177 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 0, i32 1, i32 2
  %178 = bitcast %"class.base::UnguessableToken"* %176 to i8*
  %179 = bitcast %"class.base::UnguessableToken"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 16, i1 false) #16
  %180 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 1, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 1, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 1, i32 0, i32 1
  %184 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 1, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  store i32 %185, i32* %183, align 4
  %186 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 1, i32 1, i32 0
  %187 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 1, i32 1, i32 0
  %188 = load i32, i32* %187, align 8
  store i32 %188, i32* %186, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 1, i32 1, i32 1
  %190 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 1, i32 1, i32 1
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 1, i32 1, i32 2
  %193 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 1, i32 1, i32 2
  %194 = bitcast %"class.base::UnguessableToken"* %192 to i8*
  %195 = bitcast %"class.base::UnguessableToken"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 16, i1 false) #16
  %196 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %163, i64 2
  %197 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %162, i64 2
  %198 = icmp ult %"struct.std::__1::pair.222"* %196, %10
  br i1 %198, label %161, label %90

199:                                              ; preds = %117, %121, %93
  %200 = bitcast %"struct.std::__1::pair.222"* %1 to i64*
  %201 = zext i32 %43 to i64
  %202 = shl nuw i64 %201, 32
  %203 = zext i32 %41 to i64
  %204 = or i64 %202, %203
  store i64 %204, i64* %200, align 8
  %205 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 0
  store i32 %45, i32* %205, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 1
  store i32 %47, i32* %206, align 4
  %207 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %1, i64 0, i32 1, i32 2
  %208 = bitcast %"class.base::UnguessableToken"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* nonnull align 8 %39, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  br label %352

209:                                              ; preds = %4
  %210 = getelementptr inbounds %"class.std::__1::vector.220", %"class.std::__1::vector.220"* %0, i64 0, i32 0, i32 2
  %211 = bitcast %"struct.std::__1::__split_buffer.765"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %211) #16
  %212 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %7, i64 0, i32 0
  %213 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %7, i64 0, i32 1
  %214 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %7, i64 0, i32 2
  %215 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %7, i64 0, i32 3, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %7, i64 0, i32 3, i32 1, i32 0
  %217 = bitcast %"struct.std::__1::pair.222"** %9 to i64*
  %218 = bitcast %"class.std::__1::vector.220"* %0 to i64*
  %219 = bitcast %"struct.std::__1::__split_buffer.765"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 40, i1 false)
  %220 = load i64, i64* %218, align 8
  %221 = sub i64 %14, %220
  %222 = ashr exact i64 %221, 5
  %223 = add nsw i64 %222, 1
  %224 = icmp ugt i64 %223, 576460752303423487
  br i1 %224, label %225, label %227

225:                                              ; preds = %209
  %226 = bitcast %"class.std::__1::vector.220"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %226) #18
  unreachable

227:                                              ; preds = %209
  %228 = bitcast %"struct.std::__1::pair.222"** %11 to i64*
  %229 = sub i64 %15, %220
  %230 = ashr exact i64 %229, 5
  %231 = icmp ult i64 %230, 288230376151711743
  br i1 %231, label %236, label %232

232:                                              ; preds = %227
  %233 = sub i64 %5, %220
  %234 = ashr exact i64 %233, 5
  store %"struct.std::__1::pair.222"* null, %"struct.std::__1::pair.222"** %215, align 8
  %235 = bitcast %"class.std::__1::allocator.226"** %216 to %"class.std::__1::__compressed_pair.223"**
  store %"class.std::__1::__compressed_pair.223"* %210, %"class.std::__1::__compressed_pair.223"** %235, align 8
  br label %247

236:                                              ; preds = %227
  %237 = ashr exact i64 %229, 4
  %238 = icmp ult i64 %237, %223
  %239 = select i1 %238, i64 %223, i64 %237
  %240 = sub i64 %5, %220
  %241 = ashr exact i64 %240, 5
  store %"struct.std::__1::pair.222"* null, %"struct.std::__1::pair.222"** %215, align 8
  %242 = bitcast %"class.std::__1::allocator.226"** %216 to %"class.std::__1::__compressed_pair.223"**
  store %"class.std::__1::__compressed_pair.223"* %210, %"class.std::__1::__compressed_pair.223"** %242, align 8
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %253, label %244

244:                                              ; preds = %236
  %245 = icmp ugt i64 %239, 576460752303423487
  br i1 %245, label %246, label %247

246:                                              ; preds = %244
  tail call void @abort() #18
  unreachable

247:                                              ; preds = %232, %244
  %248 = phi i64 [ 576460752303423487, %232 ], [ %239, %244 ]
  %249 = phi i64 [ %234, %232 ], [ %241, %244 ]
  %250 = shl i64 %248, 5
  %251 = tail call i8* @_Znwm(i64 %250) #17
  %252 = bitcast i8* %251 to %"struct.std::__1::pair.222"*
  br label %253

253:                                              ; preds = %236, %247
  %254 = phi i64 [ %249, %247 ], [ %241, %236 ]
  %255 = phi i64 [ %248, %247 ], [ 0, %236 ]
  %256 = phi %"struct.std::__1::pair.222"* [ %252, %247 ], [ null, %236 ]
  store %"struct.std::__1::pair.222"* %256, %"struct.std::__1::pair.222"** %212, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %256, i64 %254
  store %"struct.std::__1::pair.222"* %257, %"struct.std::__1::pair.222"** %214, align 8
  store %"struct.std::__1::pair.222"* %257, %"struct.std::__1::pair.222"** %213, align 8
  %258 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %256, i64 %255
  store %"struct.std::__1::pair.222"* %258, %"struct.std::__1::pair.222"** %215, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEERNS_9allocatorIS5_EEE12emplace_backIJRKS3_S4_EEEvDpOT_(%"struct.std::__1::__split_buffer.765"* nonnull %7, %"class.viz::FrameSinkId"* dereferenceable(8) %2, %"class.viz::LocalSurfaceId"* dereferenceable(24) %3)
  %259 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %213, align 8
  %260 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %8, align 8
  %261 = icmp eq %"struct.std::__1::pair.222"* %260, %1
  br i1 %261, label %285, label %262

262:                                              ; preds = %253, %262
  %263 = phi %"struct.std::__1::pair.222"* [ %283, %262 ], [ %259, %253 ]
  %264 = phi %"struct.std::__1::pair.222"* [ %265, %262 ], [ %1, %253 ]
  %265 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %264, i64 -1
  %266 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %263, i64 -1, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %265, i64 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 4
  store i32 %268, i32* %266, align 4
  %269 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %263, i64 -1, i32 0, i32 1
  %270 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %264, i64 -1, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  store i32 %271, i32* %269, align 4
  %272 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %263, i64 -1, i32 1, i32 0
  %273 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %264, i64 -1, i32 1, i32 0
  %274 = load i32, i32* %273, align 8
  store i32 %274, i32* %272, align 8
  %275 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %263, i64 -1, i32 1, i32 1
  %276 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %264, i64 -1, i32 1, i32 1
  %277 = load i32, i32* %276, align 4
  store i32 %277, i32* %275, align 4
  %278 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %263, i64 -1, i32 1, i32 2
  %279 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %264, i64 -1, i32 1, i32 2
  %280 = bitcast %"class.base::UnguessableToken"* %278 to i8*
  %281 = bitcast %"class.base::UnguessableToken"* %279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 16, i1 false) #16
  %282 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %213, align 8
  %283 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %282, i64 -1
  store %"struct.std::__1::pair.222"* %283, %"struct.std::__1::pair.222"** %213, align 8
  %284 = icmp eq %"struct.std::__1::pair.222"* %265, %260
  br i1 %284, label %285, label %262

285:                                              ; preds = %262, %253
  %286 = phi %"struct.std::__1::pair.222"* [ %259, %253 ], [ %283, %262 ]
  %287 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %9, align 8
  %288 = icmp eq %"struct.std::__1::pair.222"* %287, %1
  br i1 %288, label %289, label %295

289:                                              ; preds = %285
  %290 = ptrtoint %"struct.std::__1::pair.222"* %287 to i64
  %291 = ptrtoint %"struct.std::__1::pair.222"* %286 to i64
  %292 = bitcast %"struct.std::__1::pair.222"** %213 to i64*
  %293 = bitcast %"struct.std::__1::pair.222"** %214 to i64*
  %294 = load i64, i64* %293, align 8
  br label %326

295:                                              ; preds = %285
  %296 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %214, align 8
  br label %297

297:                                              ; preds = %297, %295
  %298 = phi %"struct.std::__1::pair.222"* [ %318, %297 ], [ %296, %295 ]
  %299 = phi %"struct.std::__1::pair.222"* [ %316, %297 ], [ %1, %295 ]
  %300 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %298, i64 0, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 0, i32 0, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %300, align 4
  %303 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %298, i64 0, i32 0, i32 1
  %304 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 0, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %303, align 4
  %306 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %298, i64 0, i32 1, i32 0
  %307 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 0, i32 1, i32 0
  %308 = load i32, i32* %307, align 8
  store i32 %308, i32* %306, align 8
  %309 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %298, i64 0, i32 1, i32 1
  %310 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 0, i32 1, i32 1
  %311 = load i32, i32* %310, align 4
  store i32 %311, i32* %309, align 4
  %312 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %298, i64 0, i32 1, i32 2
  %313 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 0, i32 1, i32 2
  %314 = bitcast %"class.base::UnguessableToken"* %312 to i8*
  %315 = bitcast %"class.base::UnguessableToken"* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %314, i8* align 8 %315, i64 16, i1 false) #16
  %316 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %299, i64 1
  %317 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %214, align 8
  %318 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %317, i64 1
  store %"struct.std::__1::pair.222"* %318, %"struct.std::__1::pair.222"** %214, align 8
  %319 = icmp eq %"struct.std::__1::pair.222"* %316, %287
  br i1 %319, label %320, label %297

320:                                              ; preds = %297
  %321 = ptrtoint %"struct.std::__1::pair.222"* %318 to i64
  %322 = bitcast %"struct.std::__1::pair.222"** %213 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = load i64, i64* %217, align 8
  %325 = bitcast %"struct.std::__1::pair.222"** %214 to i64*
  br label %326

326:                                              ; preds = %289, %320
  %327 = phi i64* [ %293, %289 ], [ %325, %320 ]
  %328 = phi i64 [ %294, %289 ], [ %321, %320 ]
  %329 = phi i64 [ %290, %289 ], [ %324, %320 ]
  %330 = phi i64* [ %292, %289 ], [ %322, %320 ]
  %331 = phi i64 [ %291, %289 ], [ %323, %320 ]
  %332 = load i64, i64* %218, align 8
  store i64 %331, i64* %218, align 8
  store i64 %332, i64* %330, align 8
  store i64 %328, i64* %217, align 8
  store i64 %329, i64* %327, align 8
  %333 = load i64, i64* %228, align 8
  %334 = bitcast %"struct.std::__1::pair.222"** %215 to i64*
  %335 = load i64, i64* %334, align 8
  store i64 %335, i64* %228, align 8
  store i64 %333, i64* %334, align 8
  %336 = bitcast %"struct.std::__1::__split_buffer.765"* %7 to i64*
  store i64 %332, i64* %336, align 8
  %337 = inttoptr i64 %332 to %"struct.std::__1::pair.222"*
  %338 = inttoptr i64 %329 to %"struct.std::__1::pair.222"*
  %339 = icmp eq %"struct.std::__1::pair.222"* %338, %337
  br i1 %339, label %347, label %340

340:                                              ; preds = %326
  %341 = getelementptr %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %338, i64 -1, i32 0, i32 0
  %342 = ptrtoint i32* %341 to i64
  %343 = sub i64 %342, %332
  %344 = lshr i64 %343, 5
  %345 = xor i64 %344, -1
  %346 = getelementptr %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %338, i64 %345
  store %"struct.std::__1::pair.222"* %346, %"struct.std::__1::pair.222"** %214, align 8
  br label %347

347:                                              ; preds = %340, %326
  %348 = icmp eq i64 %332, 0
  br i1 %348, label %351, label %349

349:                                              ; preds = %347
  %350 = inttoptr i64 %332 to i8*
  call void @_ZdlPv(i8* %350) #17
  br label %351

351:                                              ; preds = %347, %349
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %211) #16
  br label %352

352:                                              ; preds = %18, %199, %351
  %353 = phi %"struct.std::__1::pair.222"* [ %1, %18 ], [ %1, %199 ], [ %259, %351 ]
  ret %"struct.std::__1::pair.222"* %353
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS2_14LocalSurfaceIdEEERNS_9allocatorIS5_EEE12emplace_backIJRKS3_S4_EEEvDpOT_(%"struct.std::__1::__split_buffer.765"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.viz::LocalSurfaceId"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.222"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.222"* %7 to i64
  br i1 %8, label %10, label %203

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.222"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.765", %"struct.std::__1::__split_buffer.765"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.222"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.222"* %15 to i64
  br i1 %16, label %18, label %101

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.222"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 5
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.222"* %12, %5
  br i1 %25, label %97, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %5, i64 -1, i32 0, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 5
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.222"* [ %46, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.222"* [ %45, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %47, %34 ], [ %32, %26 ]
  %38 = bitcast %"struct.std::__1::pair.222"* %36 to i64*
  %39 = bitcast %"struct.std::__1::pair.222"* %35 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %36, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %35, i64 0, i32 1
  %43 = bitcast %"class.viz::LocalSurfaceId"* %42 to i8*
  %44 = bitcast %"class.viz::LocalSurfaceId"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #16
  %45 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %36, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %35, i64 1
  %47 = add i64 %37, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %34, !llvm.loop !209

49:                                               ; preds = %34, %26
  %50 = phi %"struct.std::__1::pair.222"* [ undef, %26 ], [ %46, %34 ]
  %51 = phi %"struct.std::__1::pair.222"* [ %24, %26 ], [ %46, %34 ]
  %52 = phi %"struct.std::__1::pair.222"* [ %12, %26 ], [ %45, %34 ]
  %53 = icmp ult i64 %29, 96
  br i1 %53, label %94, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair.222"* [ %92, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair.222"* [ %91, %54 ], [ %52, %49 ]
  %57 = bitcast %"struct.std::__1::pair.222"* %56 to i64*
  %58 = bitcast %"struct.std::__1::pair.222"* %55 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 0, i32 1
  %62 = bitcast %"class.viz::LocalSurfaceId"* %61 to i8*
  %63 = bitcast %"class.viz::LocalSurfaceId"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #16
  %64 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 1
  %66 = bitcast %"struct.std::__1::pair.222"* %64 to i64*
  %67 = bitcast %"struct.std::__1::pair.222"* %65 to i64*
  %68 = load i64, i64* %66, align 4
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 1, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 1, i32 1
  %71 = bitcast %"class.viz::LocalSurfaceId"* %70 to i8*
  %72 = bitcast %"class.viz::LocalSurfaceId"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false) #16
  %73 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 2
  %74 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 2
  %75 = bitcast %"struct.std::__1::pair.222"* %73 to i64*
  %76 = bitcast %"struct.std::__1::pair.222"* %74 to i64*
  %77 = load i64, i64* %75, align 4
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 2, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 2, i32 1
  %80 = bitcast %"class.viz::LocalSurfaceId"* %79 to i8*
  %81 = bitcast %"class.viz::LocalSurfaceId"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #16
  %82 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 3
  %83 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 3
  %84 = bitcast %"struct.std::__1::pair.222"* %82 to i64*
  %85 = bitcast %"struct.std::__1::pair.222"* %83 to i64*
  %86 = load i64, i64* %84, align 4
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 3, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 3, i32 1
  %89 = bitcast %"class.viz::LocalSurfaceId"* %88 to i8*
  %90 = bitcast %"class.viz::LocalSurfaceId"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #16
  %91 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %56, i64 4
  %92 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %55, i64 4
  %93 = icmp eq %"struct.std::__1::pair.222"* %91, %5
  br i1 %93, label %94, label %54

94:                                               ; preds = %54, %49
  %95 = phi %"struct.std::__1::pair.222"* [ %50, %49 ], [ %92, %54 ]
  %96 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %11, align 8
  br label %97

97:                                               ; preds = %94, %18
  %98 = phi %"struct.std::__1::pair.222"* [ %5, %18 ], [ %96, %94 ]
  %99 = phi %"struct.std::__1::pair.222"* [ %24, %18 ], [ %95, %94 ]
  store %"struct.std::__1::pair.222"* %99, %"struct.std::__1::pair.222"** %4, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %98, i64 %23
  store %"struct.std::__1::pair.222"* %100, %"struct.std::__1::pair.222"** %11, align 8
  br label %203

101:                                              ; preds = %10
  %102 = bitcast %"struct.std::__1::pair.222"** %6 to i64*
  %103 = bitcast %"struct.std::__1::__split_buffer.765"* %0 to i64*
  %104 = sub i64 %9, %17
  %105 = ashr exact i64 %104, 4
  %106 = icmp eq i64 %104, 0
  %107 = select i1 %106, i64 1, i64 %105
  %108 = icmp ugt i64 %107, 576460752303423487
  br i1 %108, label %109, label %110

109:                                              ; preds = %101
  tail call void @abort() #18
  unreachable

110:                                              ; preds = %101
  %111 = lshr i64 %107, 2
  %112 = shl i64 %107, 5
  %113 = tail call i8* @_Znwm(i64 %112) #17
  %114 = bitcast i8* %113 to %"struct.std::__1::pair.222"*
  %115 = ptrtoint i8* %113 to i64
  %116 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %111
  %117 = ptrtoint %"struct.std::__1::pair.222"* %116 to i64
  %118 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %107
  %119 = ptrtoint %"struct.std::__1::pair.222"* %118 to i64
  %120 = ptrtoint %"struct.std::__1::pair.222"* %5 to i64
  %121 = sub i64 %120, %13
  %122 = ashr exact i64 %121, 5
  %123 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %116, i64 %122
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %193, label %125

125:                                              ; preds = %110
  %126 = add i64 %121, -32
  %127 = and i64 %126, 32
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %148

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %116, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %111, i32 0, i32 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 0, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %111, i32 1, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 0, i32 1, i32 0
  %138 = load i32, i32* %137, align 8
  store i32 %138, i32* %136, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %111, i32 1, i32 1
  %140 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 0, i32 1, i32 1
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %139, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %114, i64 %111, i32 1, i32 2
  %143 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 0, i32 1, i32 2
  %144 = bitcast %"class.base::UnguessableToken"* %142 to i8*
  %145 = bitcast %"class.base::UnguessableToken"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #16
  %146 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %116, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %12, i64 1
  br label %148

148:                                              ; preds = %129, %125
  %149 = phi %"struct.std::__1::pair.222"* [ %116, %125 ], [ %146, %129 ]
  %150 = phi %"struct.std::__1::pair.222"* [ %12, %125 ], [ %147, %129 ]
  %151 = icmp ult i64 %126, 32
  br i1 %151, label %190, label %152

152:                                              ; preds = %148, %152
  %153 = phi %"struct.std::__1::pair.222"* [ %187, %152 ], [ %149, %148 ]
  %154 = phi %"struct.std::__1::pair.222"* [ %188, %152 ], [ %150, %148 ]
  %155 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 0, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %155, align 4
  %158 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 0, i32 0, i32 1
  %159 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %158, align 4
  %161 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 0, i32 1, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 0, i32 1, i32 0
  %163 = load i32, i32* %162, align 8
  store i32 %163, i32* %161, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 0, i32 1, i32 1
  %165 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 0, i32 1, i32 1
  %166 = load i32, i32* %165, align 4
  store i32 %166, i32* %164, align 4
  %167 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 0, i32 1, i32 2
  %168 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 0, i32 1, i32 2
  %169 = bitcast %"class.base::UnguessableToken"* %167 to i8*
  %170 = bitcast %"class.base::UnguessableToken"* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #16
  %171 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 1, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 1, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  store i32 %173, i32* %171, align 4
  %174 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 1, i32 0, i32 1
  %175 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 1, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  store i32 %176, i32* %174, align 4
  %177 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 1, i32 1, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 1, i32 1, i32 0
  %179 = load i32, i32* %178, align 8
  store i32 %179, i32* %177, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 1, i32 1, i32 1
  %181 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 1, i32 1, i32 1
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 1, i32 1, i32 2
  %184 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 1, i32 1, i32 2
  %185 = bitcast %"class.base::UnguessableToken"* %183 to i8*
  %186 = bitcast %"class.base::UnguessableToken"* %184 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 16, i1 false) #16
  %187 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %153, i64 2
  %188 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %154, i64 2
  %189 = icmp eq %"struct.std::__1::pair.222"* %123, %187
  br i1 %189, label %190, label %152

190:                                              ; preds = %152, %148
  %191 = ptrtoint %"struct.std::__1::pair.222"* %123 to i64
  %192 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %14, align 8
  br label %193

193:                                              ; preds = %110, %190
  %194 = phi %"struct.std::__1::pair.222"* [ %192, %190 ], [ %15, %110 ]
  %195 = phi i64 [ %191, %190 ], [ %117, %110 ]
  store i64 %115, i64* %103, align 8
  %196 = bitcast %"struct.std::__1::pair.222"** %11 to i64*
  store i64 %117, i64* %196, align 8
  %197 = bitcast %"struct.std::__1::pair.222"** %4 to i64*
  store i64 %195, i64* %197, align 8
  store i64 %119, i64* %102, align 8
  %198 = icmp eq %"struct.std::__1::pair.222"* %194, null
  %199 = inttoptr i64 %195 to %"struct.std::__1::pair.222"*
  br i1 %198, label %203, label %200

200:                                              ; preds = %193
  %201 = bitcast %"struct.std::__1::pair.222"* %194 to i8*
  tail call void @_ZdlPv(i8* %201) #17
  %202 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %4, align 8
  br label %203

203:                                              ; preds = %200, %193, %97, %3
  %204 = phi %"struct.std::__1::pair.222"* [ %202, %200 ], [ %199, %193 ], [ %99, %97 ], [ %5, %3 ]
  %205 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %204, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  store i32 %207, i32* %205, align 4
  %208 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %204, i64 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  store i32 %210, i32* %208, align 4
  %211 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %204, i64 0, i32 1, i32 0
  %212 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %2, i64 0, i32 0
  %213 = load i32, i32* %212, align 8
  store i32 %213, i32* %211, align 8
  %214 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %204, i64 0, i32 1, i32 1
  %215 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %2, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  store i32 %216, i32* %214, align 4
  %217 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %204, i64 0, i32 1, i32 2
  %218 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %2, i64 0, i32 2
  %219 = bitcast %"class.base::UnguessableToken"* %217 to i8*
  %220 = bitcast %"class.base::UnguessableToken"* %218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 16, i1 false) #16
  %221 = load %"struct.std::__1::pair.222"*, %"struct.std::__1::pair.222"** %4, align 8
  %222 = getelementptr inbounds %"struct.std::__1::pair.222", %"struct.std::__1::pair.222"* %221, i64 1
  store %"struct.std::__1::pair.222"* %222, %"struct.std::__1::pair.222"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.316"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdENS0_INS2_12SurfaceRangeENS_9allocatorIS4_EEEEEENS5_IS8_EEE7emplaceIJRKS3_S7_EEENS_11__wrap_iterIPS8_EENSE_IPKS8_EEDpOT_(%"class.std::__1::vector.314"*, %"struct.std::__1::pair.316"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.std::__1::vector.317"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.316"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.772", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.314", %"class.std::__1::vector.314"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.314", %"class.std::__1::vector.314"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.314", %"class.std::__1::vector.314"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.316"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.316"* %11 to i64
  br i1 %12, label %14, label %215

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair.316"* %9, %1
  br i1 %15, label %16, label %42

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1
  %24 = bitcast %"class.std::__1::vector.317"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #16
  %25 = bitcast %"class.std::__1::vector.317"* %3 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.317"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %3, i64 0, i32 0, i32 1
  %29 = bitcast %"class.viz::SurfaceRange"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.viz::SurfaceRange"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.viz::SurfaceRange"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.viz::SurfaceRange"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.317"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.316"* %39 to i64
  %41 = bitcast %"struct.std::__1::pair.316"** %8 to i64*
  store i64 %40, i64* %41, align 8
  br label %384

42:                                               ; preds = %14
  %43 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"class.std::__1::vector.317"* %3 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.viz::SurfaceRange"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.317"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #16
  %53 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %8, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 1
  %55 = ptrtoint %"struct.std::__1::pair.316"* %53 to i64
  %56 = ptrtoint %"struct.std::__1::pair.316"* %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 %58
  %60 = bitcast %"struct.std::__1::pair.316"** %8 to i64*
  %61 = icmp ult %"struct.std::__1::pair.316"* %59, %53
  br i1 %61, label %62, label %105

62:                                               ; preds = %42
  %63 = sub nsw i64 0, %58
  %64 = getelementptr %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 %63, i32 0, i32 0
  %65 = bitcast i32* %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = and i64 %68, 32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %97

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %59, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 %58, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %75, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 %58, i32 1
  %80 = bitcast %"class.std::__1::vector.317"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #16
  %81 = bitcast %"class.std::__1::vector.317"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.317"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 %58, i32 1, i32 0, i32 1
  %85 = bitcast %"class.viz::SurfaceRange"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 0, i32 1, i32 0, i32 1
  %88 = bitcast %"class.viz::SurfaceRange"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 %58, i32 1, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.viz::SurfaceRange"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.viz::SurfaceRange"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.std::__1::vector.317"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #16
  %95 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %59, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %53, i64 1
  br label %97

97:                                               ; preds = %71, %62
  %98 = phi %"struct.std::__1::pair.316"* [ %53, %62 ], [ %96, %71 ]
  %99 = phi %"struct.std::__1::pair.316"* [ %59, %62 ], [ %95, %71 ]
  %100 = phi %"struct.std::__1::pair.316"* [ undef, %62 ], [ %96, %71 ]
  %101 = icmp ult i8* %67, inttoptr (i64 32 to i8*)
  br i1 %101, label %102, label %143

102:                                              ; preds = %143, %97
  %103 = phi %"struct.std::__1::pair.316"* [ %100, %97 ], [ %193, %143 ]
  %104 = ptrtoint %"struct.std::__1::pair.316"* %103 to i64
  br label %105

105:                                              ; preds = %102, %42
  %106 = phi i64 [ %104, %102 ], [ %55, %42 ]
  store i64 %106, i64* %60, align 8
  %107 = icmp eq i64 %57, 0
  br i1 %107, label %195, label %108

108:                                              ; preds = %105, %127
  %109 = phi %"struct.std::__1::pair.316"* [ %112, %127 ], [ %53, %105 ]
  %110 = phi %"struct.std::__1::pair.316"* [ %111, %127 ], [ %59, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %110, i64 -1
  %112 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %109, i64 -1
  %113 = bitcast %"struct.std::__1::pair.316"* %111 to i64*
  %114 = bitcast %"struct.std::__1::pair.316"* %112 to i64*
  %115 = load i64, i64* %113, align 4
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %110, i64 -1, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %109, i64 -1, i32 1
  %118 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %118, align 8
  %120 = icmp eq %"class.viz::SurfaceRange"* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %108
  %122 = ptrtoint %"class.viz::SurfaceRange"* %119 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %109, i64 -1, i32 1, i32 0, i32 1
  %124 = bitcast %"class.viz::SurfaceRange"** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %125) #17
  %126 = bitcast %"class.std::__1::vector.317"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #16
  br label %127

127:                                              ; preds = %108, %121
  %128 = bitcast %"class.std::__1::vector.317"* %116 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector.317"* %117 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %110, i64 -1, i32 1, i32 0, i32 1
  %132 = bitcast %"class.viz::SurfaceRange"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %109, i64 -1, i32 1, i32 0, i32 1
  %135 = bitcast %"class.viz::SurfaceRange"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %110, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"class.viz::SurfaceRange"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %109, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"class.viz::SurfaceRange"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"class.std::__1::vector.317"* %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #16
  %142 = icmp eq %"struct.std::__1::pair.316"* %111, %1
  br i1 %142, label %195, label %108

143:                                              ; preds = %97, %143
  %144 = phi %"struct.std::__1::pair.316"* [ %193, %143 ], [ %98, %97 ]
  %145 = phi %"struct.std::__1::pair.316"* [ %192, %143 ], [ %99, %97 ]
  %146 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 0, i32 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 0, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 0, i32 1
  %153 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 0, i32 1
  %154 = bitcast %"class.std::__1::vector.317"* %152 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #16
  %155 = bitcast %"class.std::__1::vector.317"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::vector.317"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 0, i32 1, i32 0, i32 1
  %159 = bitcast %"class.viz::SurfaceRange"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 0, i32 1, i32 0, i32 1
  %162 = bitcast %"class.viz::SurfaceRange"** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast %"class.viz::SurfaceRange"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %167 = bitcast %"class.viz::SurfaceRange"** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast %"class.std::__1::vector.317"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #16
  %169 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 1, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 1, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 1, i32 0, i32 1
  %173 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 1, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 1, i32 1
  %176 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 1, i32 1
  %177 = bitcast %"class.std::__1::vector.317"* %175 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #16
  %178 = bitcast %"class.std::__1::vector.317"* %176 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::vector.317"* %175 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 1, i32 1, i32 0, i32 1
  %182 = bitcast %"class.viz::SurfaceRange"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 1, i32 1, i32 0, i32 1
  %185 = bitcast %"class.viz::SurfaceRange"** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %187 = bitcast %"class.viz::SurfaceRange"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %190 = bitcast %"class.viz::SurfaceRange"** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"class.std::__1::vector.317"* %176 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #16
  %192 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %145, i64 2
  %193 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %144, i64 2
  %194 = icmp ult %"struct.std::__1::pair.316"* %192, %53
  br i1 %194, label %143, label %102

195:                                              ; preds = %127, %105
  %196 = bitcast %"struct.std::__1::pair.316"* %1 to i64*
  %197 = zext i32 %46 to i64
  %198 = shl nuw i64 %197, 32
  %199 = zext i32 %44 to i64
  %200 = or i64 %198, %199
  store i64 %200, i64* %196, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1
  %202 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %201, i64 0, i32 0, i32 0
  %203 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %202, align 8
  %204 = icmp eq %"class.viz::SurfaceRange"* %203, null
  br i1 %204, label %211, label %205

205:                                              ; preds = %195
  %206 = ptrtoint %"class.viz::SurfaceRange"* %203 to i64
  %207 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1, i32 0, i32 1
  %208 = bitcast %"class.viz::SurfaceRange"** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %209) #17
  %210 = bitcast %"class.std::__1::vector.317"* %201 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 24, i1 false) #16
  br label %211

211:                                              ; preds = %195, %205
  %212 = bitcast %"class.std::__1::vector.317"* %201 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %212, align 8
  %213 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast %"class.viz::SurfaceRange"** %213 to i64*
  store i64 %51, i64* %214, align 8
  br label %384

215:                                              ; preds = %4
  %216 = ptrtoint %"struct.std::__1::pair.316"* %9 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.314", %"class.std::__1::vector.314"* %0, i64 0, i32 0, i32 2
  %218 = bitcast %"struct.std::__1::__split_buffer.772"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %218) #16
  %219 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %6, i64 0, i32 0
  %220 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %6, i64 0, i32 1
  %221 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %6, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %6, i64 0, i32 3, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %6, i64 0, i32 3, i32 1, i32 0
  %224 = bitcast %"struct.std::__1::pair.316"** %8 to i64*
  %225 = bitcast %"class.std::__1::vector.314"* %0 to i64*
  %226 = bitcast %"struct.std::__1::__split_buffer.772"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 40, i1 false)
  %227 = load i64, i64* %225, align 8
  %228 = sub i64 %216, %227
  %229 = ashr exact i64 %228, 5
  %230 = add nsw i64 %229, 1
  %231 = icmp ugt i64 %230, 576460752303423487
  br i1 %231, label %232, label %234

232:                                              ; preds = %215
  %233 = bitcast %"class.std::__1::vector.314"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %233) #18
  unreachable

234:                                              ; preds = %215
  %235 = bitcast %"struct.std::__1::pair.316"** %10 to i64*
  %236 = sub i64 %13, %227
  %237 = ashr exact i64 %236, 5
  %238 = icmp ult i64 %237, 288230376151711743
  br i1 %238, label %243, label %239

239:                                              ; preds = %234
  %240 = sub i64 %5, %227
  %241 = ashr exact i64 %240, 5
  store %"struct.std::__1::pair.316"* null, %"struct.std::__1::pair.316"** %222, align 8
  %242 = bitcast %"class.std::__1::allocator.332"** %223 to %"class.std::__1::__compressed_pair.329"**
  store %"class.std::__1::__compressed_pair.329"* %217, %"class.std::__1::__compressed_pair.329"** %242, align 8
  br label %254

243:                                              ; preds = %234
  %244 = ashr exact i64 %236, 4
  %245 = icmp ult i64 %244, %230
  %246 = select i1 %245, i64 %230, i64 %244
  %247 = sub i64 %5, %227
  %248 = ashr exact i64 %247, 5
  store %"struct.std::__1::pair.316"* null, %"struct.std::__1::pair.316"** %222, align 8
  %249 = bitcast %"class.std::__1::allocator.332"** %223 to %"class.std::__1::__compressed_pair.329"**
  store %"class.std::__1::__compressed_pair.329"* %217, %"class.std::__1::__compressed_pair.329"** %249, align 8
  %250 = icmp eq i64 %246, 0
  br i1 %250, label %260, label %251

251:                                              ; preds = %243
  %252 = icmp ugt i64 %246, 576460752303423487
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  tail call void @abort() #18
  unreachable

254:                                              ; preds = %239, %251
  %255 = phi i64 [ 576460752303423487, %239 ], [ %246, %251 ]
  %256 = phi i64 [ %241, %239 ], [ %248, %251 ]
  %257 = shl i64 %255, 5
  %258 = tail call i8* @_Znwm(i64 %257) #17
  %259 = bitcast i8* %258 to %"struct.std::__1::pair.316"*
  br label %260

260:                                              ; preds = %243, %254
  %261 = phi i64 [ %256, %254 ], [ %248, %243 ]
  %262 = phi i64 [ %255, %254 ], [ 0, %243 ]
  %263 = phi %"struct.std::__1::pair.316"* [ %259, %254 ], [ null, %243 ]
  store %"struct.std::__1::pair.316"* %263, %"struct.std::__1::pair.316"** %219, align 8
  %264 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %263, i64 %261
  store %"struct.std::__1::pair.316"* %264, %"struct.std::__1::pair.316"** %221, align 8
  store %"struct.std::__1::pair.316"* %264, %"struct.std::__1::pair.316"** %220, align 8
  %265 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %263, i64 %262
  store %"struct.std::__1::pair.316"* %265, %"struct.std::__1::pair.316"** %222, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorINS2_12SurfaceRangeENS_9allocatorIS5_EEEEEERNS6_IS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_(%"struct.std::__1::__split_buffer.772"* nonnull %6, %"class.viz::FrameSinkId"* dereferenceable(8) %2, %"class.std::__1::vector.317"* dereferenceable(24) %3)
  %266 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %220, align 8
  %267 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %7, align 8
  %268 = icmp eq %"struct.std::__1::pair.316"* %267, %1
  br i1 %268, label %299, label %269

269:                                              ; preds = %260, %269
  %270 = phi %"struct.std::__1::pair.316"* [ %297, %269 ], [ %266, %260 ]
  %271 = phi %"struct.std::__1::pair.316"* [ %272, %269 ], [ %1, %260 ]
  %272 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %271, i64 -1
  %273 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %270, i64 -1, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %272, i64 0, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %273, align 4
  %276 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %270, i64 -1, i32 0, i32 1
  %277 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %271, i64 -1, i32 0, i32 1
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %270, i64 -1, i32 1
  %280 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %271, i64 -1, i32 1
  %281 = bitcast %"class.std::__1::vector.317"* %279 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 24, i1 false) #16
  %282 = bitcast %"class.std::__1::vector.317"* %280 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.std::__1::vector.317"* %279 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %271, i64 -1, i32 1, i32 0, i32 1
  %286 = bitcast %"class.viz::SurfaceRange"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %270, i64 -1, i32 1, i32 0, i32 1
  %289 = bitcast %"class.viz::SurfaceRange"** %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %271, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %291 = bitcast %"class.viz::SurfaceRange"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %270, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %294 = bitcast %"class.viz::SurfaceRange"** %293 to i64*
  store i64 %292, i64* %294, align 8
  %295 = bitcast %"class.std::__1::vector.317"* %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 24, i1 false) #16
  %296 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %220, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %296, i64 -1
  store %"struct.std::__1::pair.316"* %297, %"struct.std::__1::pair.316"** %220, align 8
  %298 = icmp eq %"struct.std::__1::pair.316"* %272, %267
  br i1 %298, label %299, label %269

299:                                              ; preds = %269, %260
  %300 = phi %"struct.std::__1::pair.316"* [ %266, %260 ], [ %297, %269 ]
  %301 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %8, align 8
  %302 = icmp eq %"struct.std::__1::pair.316"* %301, %1
  br i1 %302, label %303, label %309

303:                                              ; preds = %299
  %304 = ptrtoint %"struct.std::__1::pair.316"* %301 to i64
  %305 = ptrtoint %"struct.std::__1::pair.316"* %300 to i64
  %306 = bitcast %"struct.std::__1::pair.316"** %220 to i64*
  %307 = bitcast %"struct.std::__1::pair.316"** %221 to i64*
  %308 = load i64, i64* %307, align 8
  br label %347

309:                                              ; preds = %299
  %310 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %221, align 8
  br label %311

311:                                              ; preds = %311, %309
  %312 = phi %"struct.std::__1::pair.316"* [ %339, %311 ], [ %310, %309 ]
  %313 = phi %"struct.std::__1::pair.316"* [ %337, %311 ], [ %1, %309 ]
  %314 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %312, i64 0, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 0, i32 0, i32 0
  %316 = load i32, i32* %315, align 4
  store i32 %316, i32* %314, align 4
  %317 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %312, i64 0, i32 0, i32 1
  %318 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 0, i32 0, i32 1
  %319 = load i32, i32* %318, align 4
  store i32 %319, i32* %317, align 4
  %320 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %312, i64 0, i32 1
  %321 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 0, i32 1
  %322 = bitcast %"class.std::__1::vector.317"* %320 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 24, i1 false) #16
  %323 = bitcast %"class.std::__1::vector.317"* %321 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.std::__1::vector.317"* %320 to i64*
  store i64 %324, i64* %325, align 8
  %326 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 0, i32 1, i32 0, i32 1
  %327 = bitcast %"class.viz::SurfaceRange"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %312, i64 0, i32 1, i32 0, i32 1
  %330 = bitcast %"class.viz::SurfaceRange"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %332 = bitcast %"class.viz::SurfaceRange"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %312, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %335 = bitcast %"class.viz::SurfaceRange"** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast %"class.std::__1::vector.317"* %321 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 24, i1 false) #16
  %337 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %313, i64 1
  %338 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %221, align 8
  %339 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %338, i64 1
  store %"struct.std::__1::pair.316"* %339, %"struct.std::__1::pair.316"** %221, align 8
  %340 = icmp eq %"struct.std::__1::pair.316"* %337, %301
  br i1 %340, label %341, label %311

341:                                              ; preds = %311
  %342 = ptrtoint %"struct.std::__1::pair.316"* %339 to i64
  %343 = bitcast %"struct.std::__1::pair.316"** %220 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = load i64, i64* %224, align 8
  %346 = bitcast %"struct.std::__1::pair.316"** %221 to i64*
  br label %347

347:                                              ; preds = %303, %341
  %348 = phi i64* [ %307, %303 ], [ %346, %341 ]
  %349 = phi i64 [ %308, %303 ], [ %342, %341 ]
  %350 = phi i64 [ %304, %303 ], [ %345, %341 ]
  %351 = phi i64* [ %306, %303 ], [ %343, %341 ]
  %352 = phi i64 [ %305, %303 ], [ %344, %341 ]
  %353 = load i64, i64* %225, align 8
  store i64 %352, i64* %225, align 8
  store i64 %353, i64* %351, align 8
  store i64 %349, i64* %224, align 8
  store i64 %350, i64* %348, align 8
  %354 = load i64, i64* %235, align 8
  %355 = bitcast %"struct.std::__1::pair.316"** %222 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %235, align 8
  store i64 %354, i64* %355, align 8
  %357 = bitcast %"struct.std::__1::__split_buffer.772"* %6 to i64*
  store i64 %353, i64* %357, align 8
  %358 = inttoptr i64 %353 to %"struct.std::__1::pair.316"*
  %359 = inttoptr i64 %350 to %"struct.std::__1::pair.316"*
  %360 = icmp eq %"struct.std::__1::pair.316"* %359, %358
  br i1 %360, label %378, label %361

361:                                              ; preds = %347, %373
  %362 = phi %"struct.std::__1::pair.316"* [ %374, %373 ], [ %359, %347 ]
  %363 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %362, i64 -1
  store %"struct.std::__1::pair.316"* %363, %"struct.std::__1::pair.316"** %221, align 8
  %364 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %362, i64 -1, i32 1, i32 0, i32 0
  %365 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %364, align 8
  %366 = icmp eq %"class.viz::SurfaceRange"* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %361
  %368 = ptrtoint %"class.viz::SurfaceRange"* %365 to i64
  %369 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %362, i64 -1, i32 1, i32 0, i32 1
  %370 = bitcast %"class.viz::SurfaceRange"** %369 to i64*
  store i64 %368, i64* %370, align 8
  %371 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %365, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %371) #17
  %372 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %221, align 8
  br label %373

373:                                              ; preds = %367, %361
  %374 = phi %"struct.std::__1::pair.316"* [ %363, %361 ], [ %372, %367 ]
  %375 = icmp eq %"struct.std::__1::pair.316"* %374, %358
  br i1 %375, label %376, label %361

376:                                              ; preds = %373
  %377 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %219, align 8
  br label %378

378:                                              ; preds = %376, %347
  %379 = phi %"struct.std::__1::pair.316"* [ %377, %376 ], [ %358, %347 ]
  %380 = icmp eq %"struct.std::__1::pair.316"* %379, null
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = bitcast %"struct.std::__1::pair.316"* %379 to i8*
  call void @_ZdlPv(i8* %382) #17
  br label %383

383:                                              ; preds = %378, %381
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %218) #16
  br label %384

384:                                              ; preds = %16, %211, %383
  %385 = phi %"struct.std::__1::pair.316"* [ %1, %16 ], [ %1, %211 ], [ %266, %383 ]
  ret %"struct.std::__1::pair.316"* %385
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdENS_6vectorINS2_12SurfaceRangeENS_9allocatorIS5_EEEEEERNS6_IS9_EEE12emplace_backIJRKS3_S8_EEEvDpOT_(%"struct.std::__1::__split_buffer.772"*, %"class.viz::FrameSinkId"* dereferenceable(8), %"class.std::__1::vector.317"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.316"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.316"* %7 to i64
  br i1 %8, label %10, label %207

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.772", %"struct.std::__1::__split_buffer.772"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.316"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.316"* %14 to i64
  br i1 %15, label %17, label %66

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.316"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 5
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.316"* %12, %5
  br i1 %24, label %62, label %25

25:                                               ; preds = %17, %42
  %26 = phi %"struct.std::__1::pair.316"* [ %58, %42 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.316"* [ %57, %42 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.316"* %27 to i64*
  %29 = bitcast %"struct.std::__1::pair.316"* %26 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %33, align 8
  %35 = icmp eq %"class.viz::SurfaceRange"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %25
  %37 = ptrtoint %"class.viz::SurfaceRange"* %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %26, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast %"class.viz::SurfaceRange"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %40) #17
  %41 = bitcast %"class.std::__1::vector.317"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #16
  br label %42

42:                                               ; preds = %25, %36
  %43 = bitcast %"class.std::__1::vector.317"* %31 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.317"* %32 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %27, i64 0, i32 1, i32 0, i32 1
  %47 = bitcast %"class.viz::SurfaceRange"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %26, i64 0, i32 1, i32 0, i32 1
  %50 = bitcast %"class.viz::SurfaceRange"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %27, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.viz::SurfaceRange"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.viz::SurfaceRange"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector.317"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #16
  %57 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %27, i64 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %26, i64 1
  %59 = icmp eq %"struct.std::__1::pair.316"* %57, %5
  br i1 %59, label %60, label %25

60:                                               ; preds = %42
  %61 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %11, align 8
  br label %62

62:                                               ; preds = %60, %17
  %63 = phi %"struct.std::__1::pair.316"* [ %5, %17 ], [ %61, %60 ]
  %64 = phi %"struct.std::__1::pair.316"* [ %23, %17 ], [ %58, %60 ]
  store %"struct.std::__1::pair.316"* %64, %"struct.std::__1::pair.316"** %4, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %63, i64 %22
  store %"struct.std::__1::pair.316"* %65, %"struct.std::__1::pair.316"** %11, align 8
  br label %207

66:                                               ; preds = %10
  %67 = bitcast %"struct.std::__1::pair.316"** %6 to i64*
  %68 = bitcast %"struct.std::__1::__split_buffer.772"* %0 to i64*
  %69 = sub i64 %9, %16
  %70 = ashr exact i64 %69, 4
  %71 = icmp eq i64 %69, 0
  %72 = select i1 %71, i64 1, i64 %70
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  tail call void @abort() #18
  unreachable

75:                                               ; preds = %66
  %76 = lshr i64 %72, 2
  %77 = shl i64 %72, 5
  %78 = tail call i8* @_Znwm(i64 %77) #17
  %79 = bitcast i8* %78 to %"struct.std::__1::pair.316"*
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %76
  %82 = ptrtoint %"struct.std::__1::pair.316"* %81 to i64
  %83 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %72
  %84 = ptrtoint %"struct.std::__1::pair.316"* %83 to i64
  %85 = ptrtoint %"struct.std::__1::pair.316"* %12 to i64
  %86 = ptrtoint %"struct.std::__1::pair.316"* %5 to i64
  %87 = sub i64 %86, %85
  %88 = ashr exact i64 %87, 5
  %89 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %81, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %182, label %91

91:                                               ; preds = %75
  %92 = add i64 %87, -32
  %93 = and i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %121

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %81, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %76, i32 0, i32 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %76, i32 1
  %103 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 0, i32 1
  %104 = bitcast %"class.std::__1::vector.317"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #16
  %105 = bitcast %"class.std::__1::vector.317"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::vector.317"* %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"class.viz::SurfaceRange"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %76, i32 1, i32 0, i32 1
  %112 = bitcast %"class.viz::SurfaceRange"** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.viz::SurfaceRange"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %79, i64 %76, i32 1, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast %"class.viz::SurfaceRange"** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast %"class.std::__1::vector.317"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #16
  %119 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %81, i64 1
  %120 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %12, i64 1
  br label %121

121:                                              ; preds = %95, %91
  %122 = phi %"struct.std::__1::pair.316"* [ %81, %91 ], [ %119, %95 ]
  %123 = phi %"struct.std::__1::pair.316"* [ %12, %91 ], [ %120, %95 ]
  %124 = icmp ult i64 %92, 32
  br i1 %124, label %177, label %125

125:                                              ; preds = %121, %125
  %126 = phi %"struct.std::__1::pair.316"* [ %174, %125 ], [ %122, %121 ]
  %127 = phi %"struct.std::__1::pair.316"* [ %175, %125 ], [ %123, %121 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 0, i32 1
  %136 = bitcast %"class.std::__1::vector.317"* %134 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #16
  %137 = bitcast %"class.std::__1::vector.317"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::vector.317"* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 0, i32 1, i32 0, i32 1
  %141 = bitcast %"class.viz::SurfaceRange"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 0, i32 1, i32 0, i32 1
  %144 = bitcast %"class.viz::SurfaceRange"** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast %"class.viz::SurfaceRange"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"class.viz::SurfaceRange"** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast %"class.std::__1::vector.317"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #16
  %151 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 1, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 1, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 1, i32 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 1, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 1, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 1, i32 1
  %159 = bitcast %"class.std::__1::vector.317"* %157 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #16
  %160 = bitcast %"class.std::__1::vector.317"* %158 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.std::__1::vector.317"* %157 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 1, i32 1, i32 0, i32 1
  %164 = bitcast %"class.viz::SurfaceRange"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 1, i32 1, i32 0, i32 1
  %167 = bitcast %"class.viz::SurfaceRange"** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %169 = bitcast %"class.viz::SurfaceRange"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %172 = bitcast %"class.viz::SurfaceRange"** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast %"class.std::__1::vector.317"* %158 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #16
  %174 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %126, i64 2
  %175 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %127, i64 2
  %176 = icmp eq %"struct.std::__1::pair.316"* %89, %174
  br i1 %176, label %177, label %125

177:                                              ; preds = %125, %121
  %178 = ptrtoint %"struct.std::__1::pair.316"* %89 to i64
  %179 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %13, align 8
  %180 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %11, align 8
  %181 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %4, align 8
  br label %182

182:                                              ; preds = %75, %177
  %183 = phi %"struct.std::__1::pair.316"* [ %181, %177 ], [ %5, %75 ]
  %184 = phi %"struct.std::__1::pair.316"* [ %180, %177 ], [ %12, %75 ]
  %185 = phi %"struct.std::__1::pair.316"* [ %179, %177 ], [ %14, %75 ]
  %186 = phi i64 [ %178, %177 ], [ %82, %75 ]
  store i64 %80, i64* %68, align 8
  %187 = bitcast %"struct.std::__1::pair.316"** %11 to i64*
  store i64 %82, i64* %187, align 8
  %188 = bitcast %"struct.std::__1::pair.316"** %4 to i64*
  store i64 %186, i64* %188, align 8
  store i64 %84, i64* %67, align 8
  %189 = icmp eq %"struct.std::__1::pair.316"* %183, %184
  br i1 %189, label %203, label %190

190:                                              ; preds = %182, %201
  %191 = phi %"struct.std::__1::pair.316"* [ %192, %201 ], [ %183, %182 ]
  %192 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %191, i64 -1
  %193 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %191, i64 -1, i32 1, i32 0, i32 0
  %194 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %193, align 8
  %195 = icmp eq %"class.viz::SurfaceRange"* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %190
  %197 = ptrtoint %"class.viz::SurfaceRange"* %194 to i64
  %198 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %191, i64 -1, i32 1, i32 0, i32 1
  %199 = bitcast %"class.viz::SurfaceRange"** %198 to i64*
  store i64 %197, i64* %199, align 8
  %200 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %200) #17
  br label %201

201:                                              ; preds = %196, %190
  %202 = icmp eq %"struct.std::__1::pair.316"* %192, %184
  br i1 %202, label %203, label %190

203:                                              ; preds = %201, %182
  %204 = icmp eq %"struct.std::__1::pair.316"* %185, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = bitcast %"struct.std::__1::pair.316"* %185 to i8*
  tail call void @_ZdlPv(i8* %206) #17
  br label %207

207:                                              ; preds = %205, %203, %62, %3
  %208 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %4, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %208, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  store i32 %211, i32* %209, align 4
  %212 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %208, i64 0, i32 0, i32 1
  %213 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* %212, align 4
  %215 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %208, i64 0, i32 1
  %216 = bitcast %"class.std::__1::vector.317"* %215 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 24, i1 false) #16
  %217 = bitcast %"class.std::__1::vector.317"* %2 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::vector.317"* %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %2, i64 0, i32 0, i32 1
  %221 = bitcast %"class.viz::SurfaceRange"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %208, i64 0, i32 1, i32 0, i32 1
  %224 = bitcast %"class.viz::SurfaceRange"** %223 to i64*
  store i64 %222, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector.317", %"class.std::__1::vector.317"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %226 = bitcast %"class.viz::SurfaceRange"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %208, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast %"class.viz::SurfaceRange"** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast %"class.std::__1::vector.317"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 24, i1 false) #16
  %231 = load %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"** %4, align 8
  %232 = getelementptr inbounds %"struct.std::__1::pair.316", %"struct.std::__1::pair.316"* %231, i64 1
  store %"struct.std::__1::pair.316"* %232, %"struct.std::__1::pair.316"** %4, align 8
  ret void
}

declare void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.29"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.viz::SurfaceId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.viz::SurfaceId"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.viz::SurfaceId"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %35
  %39 = ptrtoint %"class.viz::SurfaceId"* %38 to i64
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 0, i32 1
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 0
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 1
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 2
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %54 = bitcast %"class.base::UnguessableToken"* %52 to i8*
  %55 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #16
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 1
  %57 = ptrtoint %"class.viz::SurfaceId"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %58, align 8
  %60 = ptrtoint %"class.viz::SurfaceId"* %59 to i64
  %61 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %62 = icmp eq %"class.viz::SurfaceId"* %61, %59
  br i1 %62, label %134, label %63

63:                                               ; preds = %34
  %64 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %60
  %67 = and i64 %66, 32
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %88

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 2
  %84 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #16
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1
  br label %88

88:                                               ; preds = %69, %63
  %89 = phi %"class.viz::SurfaceId"* [ undef, %63 ], [ %87, %69 ]
  %90 = phi %"class.viz::SurfaceId"* [ %37, %63 ], [ %87, %69 ]
  %91 = phi %"class.viz::SurfaceId"* [ %61, %63 ], [ %70, %69 ]
  %92 = icmp ult i64 %66, 32
  br i1 %92, label %131, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.viz::SurfaceId"* [ %129, %93 ], [ %90, %88 ]
  %95 = phi %"class.viz::SurfaceId"* [ %112, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 0
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 0
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %102, align 8
  %105 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 1
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 1
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 2
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 2
  %110 = bitcast %"class.base::UnguessableToken"* %108 to i8*
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #16
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #16
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2
  %130 = icmp eq %"class.viz::SurfaceId"* %112, %59
  br i1 %130, label %131, label %93

131:                                              ; preds = %93, %88
  %132 = phi %"class.viz::SurfaceId"* [ %89, %88 ], [ %129, %93 ]
  %133 = load i64, i64* %6, align 8
  br label %134

134:                                              ; preds = %34, %131
  %135 = phi %"class.viz::SurfaceId"* [ %132, %131 ], [ %37, %34 ]
  %136 = phi i64 [ %133, %131 ], [ %60, %34 ]
  %137 = ptrtoint %"class.viz::SurfaceId"* %135 to i64
  store i64 %137, i64* %6, align 8
  store i64 %57, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %140) #17
  br label %141

141:                                              ; preds = %134, %139
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #16
  %16 = bitcast %"class.base::trace_event::TraceArguments"* %14 to i64*
  store i64 -6148914691236517206, i64* %16, align 8
  store i8 2, i8* %15, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 1
  store i8 7, i8* %18, align 1
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 1
  store i8* %11, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %22 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = bitcast %"union.base::trace_event::TraceValue"* %21 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 1
  %32 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %39 = select i1 %35, i8* %37, i8* %38
  %40 = bitcast %"union.base::trace_event::TraceValue"* %31 to i8**
  store i8* %39, i8** %40, align 8
  %41 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #16
  %42 = load i8, i8* %15, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %78, label %44

44:                                               ; preds = %13, %73
  %45 = phi i64 [ %74, %73 ], [ 0, %13 ]
  %46 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %60

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %45
  %51 = bitcast %"union.base::trace_event::TraceValue"* %50 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %52 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %51, align 8
  %53 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %52, null
  br i1 %53, label %73, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %52 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %56 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %56, i64 1
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %57, align 8
  call void %58(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %52) #16
  %59 = load i8, i8* %46, align 1
  br label %60

60:                                               ; preds = %54, %44
  %61 = phi i8 [ %47, %44 ], [ %59, %54 ]
  %62 = icmp eq i8 %61, 9
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %45
  %65 = bitcast %"union.base::trace_event::TraceValue"* %64 to %"class.protozero::HeapBuffered"**
  %66 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %65, align 8
  %67 = icmp eq %"class.protozero::HeapBuffered"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %69) #16
  %70 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %70) #16
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %71) #16
  %72 = bitcast %"class.protozero::HeapBuffered"* %66 to i8*
  call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %68, %63, %60, %49
  %74 = add nuw nsw i64 %45, 1
  %75 = load i8, i8* %15, align 8
  %76 = zext i8 %75 to i64
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %44, label %78

78:                                               ; preds = %73, %13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #16
  ret i64 %41
}

; Function Attrs: nounwind
declare void @_ZN3viz20AggregatedRenderPassD1Ev(%"class.viz::AggregatedRenderPass"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3viz7Surface6clientEv: argument 0"}
!5 = distinct !{!5, !"_ZN3viz7Surface6clientEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS4_16ReturnedResourceENS7_9allocatorIS9_EEEEEJS6_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS4_16ReturnedResourceENS7_9allocatorIS9_EEEEEJS6_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base13BindRepeatingIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS2_16ReturnedResourceENS5_9allocatorIS7_EEEEEJS4_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13BindRepeatingIPFvNS_7WeakPtrIN3viz13SurfaceClientEEENSt3__16vectorINS2_16ReturnedResourceENS5_9allocatorIS7_EEEEEJS4_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6rbeginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6rbeginEv"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE7crbeginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE7crbeginEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv"}
!20 = distinct !{!20, !21, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv: argument 0"}
!24 = distinct !{!24, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv"}
!25 = distinct !{!25, !26, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{!"branch_weights", i32 1, i32 2000}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3viz17SurfaceAggregator17CalculateClipRectERKN4absl8optionalIN3gfx4RectEEES7_RKNS3_9TransformE: argument 0"}
!31 = distinct !{!31, !"_ZN3viz17SurfaceAggregator17CalculateClipRectERKN4absl8optionalIN3gfx4RectEEES7_RKNS3_9TransformE"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE6cbeginEv: argument 0"}
!34 = distinct !{!34, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE6cbeginEv"}
!35 = distinct !{!35, !36, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv: argument 0"}
!36 = distinct !{!36, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE4cendEv: argument 0"}
!39 = distinct !{!39, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE4cendEv"}
!40 = distinct !{!40, !41, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE3endEv: argument 0"}
!41 = distinct !{!41, !"_ZNK2cc13ListContainerIN3viz15SharedQuadStateEE3endEv"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv: argument 0"}
!44 = distinct !{!44, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv"}
!45 = distinct !{!45, !46, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv: argument 0"}
!49 = distinct !{!49, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv"}
!50 = distinct !{!50, !51, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!51 = distinct !{!51, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE6rbeginEv: argument 0"}
!54 = distinct !{!54, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE6rbeginEv"}
!55 = !{i64 0, i64 65}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3viz17SurfaceAggregator17CalculateClipRectERKN4absl8optionalIN3gfx4RectEEES7_RKNS3_9TransformE: argument 0"}
!58 = distinct !{!58, !"_ZN3viz17SurfaceAggregator17CalculateClipRectERKN4absl8optionalIN3gfx4RectEEES7_RKNS3_9TransformE"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv: argument 0"}
!61 = distinct !{!61, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv: argument 0"}
!64 = distinct !{!64, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6rbeginEv: argument 0"}
!67 = distinct !{!67, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6rbeginEv"}
!68 = !{!69, !66}
!69 = distinct !{!69, !70, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE7crbeginEv: argument 0"}
!70 = distinct !{!70, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE7crbeginEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4rendEv: argument 0"}
!73 = distinct !{!73, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4rendEv"}
!74 = !{!75, !72}
!75 = distinct !{!75, !76, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5crendEv: argument 0"}
!76 = distinct !{!76, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5crendEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN3viz7Surface6clientEv: argument 0"}
!79 = distinct !{!79, !"_ZN3viz7Surface6clientEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN3viz7Surface6clientEv: argument 0"}
!82 = distinct !{!82, !"_ZN3viz7Surface6clientEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!85 = distinct !{!85, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!88 = distinct !{!88, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !95}
!95 = !{!"llvm.loop.isvectorized", i32 1}
!96 = distinct !{!96, !97}
!97 = !{!"llvm.loop.unroll.disable"}
!98 = distinct !{!98, !97}
!99 = distinct !{!99, !95}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv: argument 0"}
!102 = distinct !{!102, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE5beginEv"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv: argument 0"}
!105 = distinct !{!105, !"_ZN2cc13ListContainerIN3viz15SharedQuadStateEE3endEv"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!108 = distinct !{!108, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!111 = distinct !{!111, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!114 = distinct !{!114, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!117 = distinct !{!117, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!118 = distinct !{!118, !97}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !95}
!125 = distinct !{!125, !97}
!126 = distinct !{!126, !95}
!127 = distinct !{!127, !97}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !95}
!134 = distinct !{!134, !97}
!135 = distinct !{!135, !97}
!136 = distinct !{!136, !95}
!137 = distinct !{!137, !97}
!138 = distinct !{!138, !97}
!139 = !{!140}
!140 = distinct !{!140, !141}
!141 = distinct !{!141, !"LVerDomain"}
!142 = !{!143}
!143 = distinct !{!143, !141}
!144 = distinct !{!144, !95}
!145 = distinct !{!145, !97}
!146 = !{!147}
!147 = distinct !{!147, !148}
!148 = distinct !{!148, !"LVerDomain"}
!149 = !{!150}
!150 = distinct !{!150, !148}
!151 = distinct !{!151, !95}
!152 = distinct !{!152, !97}
!153 = distinct !{!153, !97}
!154 = distinct !{!154, !95}
!155 = distinct !{!155, !95}
!156 = !{!157}
!157 = distinct !{!157, !158}
!158 = distinct !{!158, !"LVerDomain"}
!159 = !{!160}
!160 = distinct !{!160, !158}
!161 = distinct !{!161, !95}
!162 = distinct !{!162, !97}
!163 = distinct !{!163, !97}
!164 = distinct !{!164, !95}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !95}
!171 = distinct !{!171, !97}
!172 = distinct !{!172, !97}
!173 = distinct !{!173, !95}
!174 = distinct !{!174, !97}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !95}
!181 = distinct !{!181, !97}
!182 = distinct !{!182, !97}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !95}
!189 = distinct !{!189, !97}
!190 = distinct !{!190, !95}
!191 = !{!192}
!192 = distinct !{!192, !193}
!193 = distinct !{!193, !"LVerDomain"}
!194 = !{!195}
!195 = distinct !{!195, !193}
!196 = distinct !{!196, !95}
!197 = distinct !{!197, !97}
!198 = distinct !{!198, !95}
!199 = distinct !{!199, !95}
!200 = !{!201}
!201 = distinct !{!201, !202}
!202 = distinct !{!202, !"LVerDomain"}
!203 = !{!204}
!204 = distinct !{!204, !202}
!205 = distinct !{!205, !95}
!206 = distinct !{!206, !97}
!207 = distinct !{!207, !95}
!208 = distinct !{!208, !97}
!209 = distinct !{!209, !97}
