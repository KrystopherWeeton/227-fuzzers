; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_datetimepicker.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_datetimepicker.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr.115" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.116" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.117" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.118" }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.120" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::UnownedPtr.125" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.97", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.107" }
%"class.fxcrt::UnownedPtr.97" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { float*, float*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.105", %"class.fxcrt::UnownedPtr.106" }
%"class.fxcrt::UnownedPtr.105" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.106" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.std::__1::unique_ptr.109"*, %"class.std::__1::unique_ptr.109"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::unique_ptr.109" = type opaque
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::unique_ptr.109"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i16 }
%class.CFWL_DateTimePicker = type { %class.CFWL_Widget, i8, i32, i32, i32, i32, float, %class.CFX_RectF, %class.CFX_RectF, %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5" }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.7", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.8" }
%"class.cppgc::internal::BasicMember.7" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::AllocationHandle" = type opaque
%class.CFWL_DateTimeEdit = type { %class.CFWL_Edit }
%class.CFWL_Edit = type { %class.CFWL_Widget, %"class.CFDE_TextEditEngine::Delegate", %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, i8, i32, float, float, float, float, i64, %"class.std::__1::unique_ptr", %"class.cppgc::internal::BasicMember.73", %"class.cppgc::internal::BasicMember.73", %"class.cppgc::internal::BasicMember.74", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.CFDE_TextEditEngine::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextEditEngine* }
%class.CFDE_TextEditEngine = type { %"class.CFGAS_TxtBreak::Engine", %class.CFX_RectF, %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::vector.12", %class.CFGAS_TxtBreak, %"class.fxcrt::RetainPtr", i32, float, float, %"class.std::__1::vector.57", i64, i64, i64, i64, i64, i64, %"class.std::__1::vector.64", i64, i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, %"struct.CFDE_TextEditEngine::Selection" }
%"class.CFGAS_TxtBreak::Engine" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %"class.CFDE_TextEditEngine::Delegate"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.FDE_TEXTEDITPIECE*, %struct.FDE_TEXTEDITPIECE*, %"class.std::__1::__compressed_pair.9" }
%struct.FDE_TEXTEDITPIECE = type { %class.CFX_RectF, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.FDE_TEXTEDITPIECE* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { i64*, i64*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64* }
%class.CFGAS_TxtBreak = type { %class.CFGAS_Break, i32, i32 }
%class.CFGAS_Break = type { i32 (...)**, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.23", i8, [7 x i8], [2 x %class.CFGAS_BreakLine] }
%"class.fxcrt::UnownedPtr.23" = type { %class.CFGAS_BreakLine* }
%class.CFGAS_BreakLine = type <{ %"class.std::__1::vector.24", %"class.std::__1::vector.49", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %class.CFGAS_Char*, %class.CFGAS_Char*, %"class.std::__1::__compressed_pair.44" }
%class.CFGAS_Char = type <{ i8, i8, i8, i8, i32, i32, i16, i16, i16, [2 x i8], i32, i32, [4 x i8], %"class.fxcrt::RetainPtr.26", i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.fxcrt::RetainPtr.26" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CFGAS_TextUserData* }
%class.CFGAS_TextUserData = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.30", %"class.fxcrt::RetainPtr.36" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.fxcrt::RetainPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.CFGAS_LinkUserData* }
%class.CFGAS_LinkUserData = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.CFGAS_Char* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %class.CFGAS_BreakPiece*, %class.CFGAS_BreakPiece*, %"class.std::__1::__compressed_pair.52" }
%class.CFGAS_BreakPiece = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::RetainPtr.26" }
%"class.fxcrt::UnownedPtr.51" = type { %"class.std::__1::vector.24"* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.CFGAS_BreakPiece* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i32*, i32*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i32* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr.66" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.66"* }
%"struct.CFDE_TextEditEngine::Selection" = type { i64, i64 }
%"class.cppgc::internal::BasicMember.73" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.74" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.75" }
%"class.fxcrt::RetainPtr.75" = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFWL_MonthCalendar = type { %class.CFWL_Widget, i8, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.std::__1::vector.81", i32, i32, i32, i32, i32, i32, i32, i32, %"struct.CFWL_MonthCalendar::DATE", %"struct.CFWL_MonthCalendar::DATE", %class.CFX_STemplate, %class.CFX_STemplate, %class.CFX_STemplate, %"class.std::__1::vector.89", %class.CFX_RectF }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.std::__1::unique_ptr.83"*, %"class.std::__1::unique_ptr.83"*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::unique_ptr.83" = type opaque
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::unique_ptr.83"* }
%"struct.CFWL_MonthCalendar::DATE" = type { i32, i32, i32 }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { i32*, i32*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i32* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96", %"class.cppgc::internal::BasicMember.96" }
%"class.cppgc::internal::BasicMember.96" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.117", %"class.fxcrt::UnownedPtr.125" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.115", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.116" }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFWL_MessageSetFocus = type { %class.CFWL_Message }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.116", %"class.fxcrt::UnownedPtr.116" }
%class.CFWL_WidgetMgr = type { %"class.cppgc::internal::BasicMember.127", %"class.cppgc::internal::BasicMember.0", %"class.std::__1::map" }
%"class.cppgc::internal::BasicMember.127" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i64 }
%class.CFWL_EventSelectChanged = type { %class.CFWL_Event, i8, i32, i32, i32 }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }

$_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI17CFWL_DateTimeEditE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI18CFWL_MonthCalendarE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index = comdat any

@_ZTV19CFWL_DateTimePicker = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_DateTimePicker*, %"class.cppgc::Visitor"*)* @_ZNK19CFWL_DateTimePicker5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*)* @_ZN19CFWL_DateTimePickerD2Ev to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*)* @_ZN19CFWL_DateTimePickerD0Ev to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*, %class.CFWL_Message*)* @_ZN19CFWL_DateTimePicker16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN19CFWL_DateTimePicker12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*)* @_ZN19CFWL_DateTimePicker11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_DateTimePicker*)* @_ZNK19CFWL_DateTimePicker10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*)* @_ZN19CFWL_DateTimePicker6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_DateTimePicker*, %class.CFX_PTemplate*)* @_ZN19CFWL_DateTimePicker7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_DateTimePicker*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN19CFWL_DateTimePicker10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*)] }, align 8
@__const._ZN19CFWL_DateTimePicker18DrawDropDownButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix.param = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.115", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.116" }, %"class.fxcrt::UnownedPtr.117", %"class.fxcrt::UnownedPtr.125" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.115", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.116" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.115" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.116" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.117" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.125" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8
@.str = private unnamed_addr constant [9 x i32] [i32 37, i32 100, i32 45, i32 37, i32 100, i32 45, i32 37, i32 100, i32 0], align 4
@.str.1 = private unnamed_addr constant [24 x i32] [i32 37, i32 100, i32 32, i32 89, i32 101, i32 97, i32 114, i32 32, i32 37, i32 100, i32 32, i32 77, i32 111, i32 110, i32 116, i32 104, i32 32, i32 37, i32 100, i32 32, i32 68, i32 97, i32 121, i32 0], align 4
@_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1

@_ZN19CFWL_DateTimePickerC1EP8CFWL_App = hidden unnamed_addr alias void (%class.CFWL_DateTimePicker*, %class.CFWL_App*), void (%class.CFWL_DateTimePicker*, %class.CFWL_App*)* @_ZN19CFWL_DateTimePickerC2EP8CFWL_App
@_ZN19CFWL_DateTimePickerD1Ev = hidden unnamed_addr alias void (%class.CFWL_DateTimePicker*), void (%class.CFWL_DateTimePicker*)* @_ZN19CFWL_DateTimePickerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePickerC2EP8CFWL_App(%class.CFWL_DateTimePicker*, %class.CFWL_App*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.CFWL_Widget::Properties", align 4
  %4 = alloca %"class.CFWL_Widget::Properties", align 4
  %5 = alloca %"class.CFWL_Widget::Properties", align 4
  %6 = alloca %class.CFX_RectF, align 4
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %8 = bitcast %"class.CFWL_Widget::Properties"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 1
  store i32 2, i32* %10, align 4
  %11 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 2
  store i32 0, i32* %11, align 4
  call void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget* %7, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* nonnull dereferenceable(12) %3, %class.CFWL_Widget* null) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #7
  %12 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV19CFWL_DateTimePicker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 1
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 -1>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  %17 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %18 = bitcast %class.CFWL_App* %1 to %"class.CFWL_App::AdapterIface"**
  %19 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 36, i1 false)
  %20 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %18, align 8
  %21 = bitcast %"class.CFWL_App::AdapterIface"* %20 to %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)***
  %22 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)**, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %22, i64 6
  %24 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %23, align 8
  %25 = call %"class.cppgc::Heap"* %24(%"class.CFWL_App::AdapterIface"* %20) #7
  %26 = call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %25) #7
  %27 = bitcast %"class.CFWL_Widget::Properties"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %4, i64 0, i32 0
  store i32 2, i32* %28, align 4
  %29 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %4, i64 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %4, i64 0, i32 2
  store i32 0, i32* %30, align 4
  %31 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %2
  %34 = call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv, i1 zeroext true) #7
  br label %35

35:                                               ; preds = %2, %33
  %36 = phi i16 [ %34, %33 ], [ %31, %2 ]
  %37 = call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %26, i64 240, i16 zeroext %36) #7
  %38 = bitcast i8* %37 to %class.CFWL_DateTimeEdit*
  call void @_ZN17CFWL_DateTimeEditC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_DateTimeEdit* %38, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* nonnull dereferenceable(12) %4, %class.CFWL_Widget* %7) #7
  %39 = getelementptr inbounds i8, i8* %37, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = atomicrmw or i16* %40, i16 1 release
  %42 = bitcast %"class.cppgc::internal::BasicMember.4"* %17 to %class.CFWL_DateTimeEdit**
  %43 = getelementptr inbounds %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.4"* %17, i64 0, i32 0, i32 0
  store i8* %37, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #7
  %44 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %45 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %18, align 8
  %46 = bitcast %"class.CFWL_App::AdapterIface"* %45 to %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)***
  %47 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)**, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %47, i64 6
  %49 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %48, align 8
  %50 = call %"class.cppgc::Heap"* %49(%"class.CFWL_App::AdapterIface"* %45) #7
  %51 = call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %50) #7
  %52 = bitcast %"class.CFWL_Widget::Properties"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %52) #7
  %53 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %5, i64 0, i32 0
  store i32 5, i32* %53, align 4
  %54 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %5, i64 0, i32 1
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %5, i64 0, i32 2
  store i32 32, i32* %55, align 4
  %56 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %35
  %59 = call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv, i1 zeroext true) #7
  br label %60

60:                                               ; preds = %35, %58
  %61 = phi i16 [ %59, %58 ], [ %56, %35 ]
  %62 = call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %51, i64 400, i16 zeroext %61) #7
  %63 = bitcast i8* %62 to %class.CFWL_MonthCalendar*
  call void @_ZN18CFWL_MonthCalendarC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_MonthCalendar* %63, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* nonnull dereferenceable(12) %5, %class.CFWL_Widget* %7) #7
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = atomicrmw or i16* %65, i16 1 release
  %67 = bitcast %"class.cppgc::internal::BasicMember.5"* %44 to %class.CFWL_MonthCalendar**
  %68 = getelementptr inbounds %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.5"* %44, i64 0, i32 0, i32 0
  store i8* %62, i8** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %52) #7
  %69 = bitcast i8* %62 to %class.CFWL_Widget*
  %70 = bitcast %class.CFX_RectF* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #7
  %71 = call { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv(%class.CFWL_MonthCalendar* %63) #7
  %72 = extractvalue { <2 x float>, <2 x float> } %71, 1
  %73 = bitcast <2 x float> %72 to <2 x i32>
  %74 = extractelement <2 x i32> %73, i32 0
  %75 = extractelement <2 x i32> %73, i32 1
  %76 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 0
  store float 0.000000e+00, float* %76, align 4
  %77 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 1
  store float 0.000000e+00, float* %77, align 4
  %78 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 2
  %79 = bitcast float* %78 to i32*
  store i32 %74, i32* %79, align 4
  %80 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 3
  %81 = bitcast float* %80 to i32*
  store i32 %75, i32* %81, align 4
  call void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget* %69, %class.CFX_RectF* nonnull dereferenceable(16) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #7
  %82 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %67, align 8
  %83 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %82, i64 0, i32 0
  call void @_ZN11CFWL_Widget19RegisterEventTargetEPS_(%class.CFWL_Widget* %7, %class.CFWL_Widget* %83) #7
  %84 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %42, align 8
  %85 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %84, i64 0, i32 0, i32 0
  call void @_ZN11CFWL_Widget19RegisterEventTargetEPS_(%class.CFWL_Widget* %7, %class.CFWL_Widget* %85) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv(%class.CFWL_MonthCalendar*) unnamed_addr #2

declare void @_ZN11CFWL_Widget19RegisterEventTargetEPS_(%class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePickerD2Ev(%class.CFWL_DateTimePicker*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePickerD0Ev(%class.CFWL_DateTimePicker*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker11PreFinalizeEv(%class.CFWL_DateTimePicker*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget21UnregisterEventTargetEv(%class.CFWL_Widget* %2) #7
  tail call void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget* %2) #7
  ret void
}

declare void @_ZN11CFWL_Widget21UnregisterEventTargetEv(%class.CFWL_Widget*) local_unnamed_addr #2

declare void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19CFWL_DateTimePicker5TraceEPN5cppgc7VisitorE(%class.CFWL_DateTimePicker*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %1) #7
  %4 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %5 = bitcast %"class.cppgc::internal::BasicMember.4"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %11 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %11, i64 4
  %13 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.cppgc::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI17CFWL_DateTimeEditE5TraceEPNS_7VisitorEPKv) #7
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %16 = bitcast %"class.cppgc::internal::BasicMember.5"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %22 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %22, i64 4
  %24 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.cppgc::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI18CFWL_MonthCalendarE5TraceEPNS_7VisitorEPKv) #7
  br label %25

25:                                               ; preds = %14, %19
  ret void
}

declare void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget*, %"class.cppgc::Visitor"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK19CFWL_DateTimePicker10GetClassIDEv(%class.CFWL_DateTimePicker* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker6UpdateEv(%class.CFWL_DateTimePicker*) unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_RectF, align 4
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %71, label %7

7:                                                ; preds = %1
  %8 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget* %3) #7
  %9 = extractvalue { <2 x float>, <2 x float> } %8, 0
  %10 = extractvalue { <2 x float>, <2 x float> } %8, 1
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8
  %12 = bitcast %class.CFX_RectF* %11 to <2 x float>*
  store <2 x float> %9, <2 x float>* %12, align 8
  %13 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  store <2 x float> %10, <2 x float>* %14, align 8
  %15 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %16 = bitcast %"class.cppgc::internal::BasicMember.4"* %15 to %class.CFWL_DateTimeEdit**
  %17 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %16, align 8
  %18 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %17, i64 0, i32 0, i32 0
  tail call void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget* %18, %class.CFX_RectF* dereferenceable(16) %11) #7
  %19 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %16, align 8
  %20 = icmp eq %class.CFWL_DateTimeEdit* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 32
  %26 = select i1 %25, i32 524288, i32 0
  %27 = icmp eq i32 %24, 16
  %28 = select i1 %27, i32 262144, i32 %26
  %29 = trunc i32 %23 to i8
  %30 = and i8 %29, -64
  switch i8 %30, label %35 [
    i8 64, label %31
    i8 -128, label %33
  ]

31:                                               ; preds = %21
  %32 = or i32 %28, 1048576
  br label %35

33:                                               ; preds = %21
  %34 = or i32 %28, 2097152
  br label %35

35:                                               ; preds = %33, %31, %21
  %36 = phi i32 [ %34, %33 ], [ %32, %31 ], [ %28, %21 ]
  %37 = shl i32 %23, 14
  %38 = and i32 %37, 4194304
  %39 = or i32 %36, %38
  %40 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %19, i64 0, i32 0, i32 0
  tail call void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* %40, i32 %39, i32 16515072) #7
  %41 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %16, align 8
  br label %42

42:                                               ; preds = %7, %35
  %43 = phi %class.CFWL_DateTimeEdit* [ null, %7 ], [ %41, %35 ]
  %44 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %43, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit6UpdateEv(%class.CFWL_Edit* %44) #7
  %45 = tail call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %3) #7
  %46 = bitcast %class.IFWL_ThemeProvider* %45 to float (%class.IFWL_ThemeProvider*)***
  %47 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %46, align 8
  %48 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %47, i64 12
  %49 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %48, align 8
  %50 = tail call float %49(%class.IFWL_ThemeProvider* %45) #7
  %51 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  store float %50, float* %51, align 4
  %52 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %53 = bitcast %"class.cppgc::internal::BasicMember.5"* %52 to %class.CFWL_MonthCalendar**
  %54 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %53, align 8
  %55 = tail call { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv(%class.CFWL_MonthCalendar* %54) #7
  %56 = extractvalue { <2 x float>, <2 x float> } %55, 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 1
  %58 = bitcast %class.CFX_RectF* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #7
  %59 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %60 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %61 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %62 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %63 = extractelement <2 x float> %56, i32 0
  %64 = extractelement <2 x float> %56, i32 1
  %65 = fadd float %64, 2.000000e+01
  %66 = extractelement <2 x float> %57, i32 0
  %67 = extractelement <2 x float> %57, i32 1
  store float %63, float* %59, align 4
  store float %65, float* %60, align 4
  store float %66, float* %61, align 4
  store float %67, float* %62, align 4
  %68 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %53, align 8
  %69 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %68, i64 0, i32 0
  call void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget* %69, %class.CFX_RectF* nonnull dereferenceable(16) %2) #7
  %70 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %53, align 8
  call void @_ZN18CFWL_MonthCalendar6UpdateEv(%class.CFWL_MonthCalendar* %70) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #7
  br label %71

71:                                               ; preds = %1, %42
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker18ResetEditAlignmentEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = icmp eq %class.CFWL_DateTimeEdit* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 32
  %11 = select i1 %10, i32 524288, i32 0
  %12 = icmp eq i32 %9, 16
  %13 = select i1 %12, i32 262144, i32 %11
  %14 = trunc i32 %8 to i8
  %15 = and i8 %14, -64
  switch i8 %15, label %20 [
    i8 64, label %16
    i8 -128, label %18
  ]

16:                                               ; preds = %6
  %17 = or i32 %13, 1048576
  br label %20

18:                                               ; preds = %6
  %19 = or i32 %13, 2097152
  br label %20

20:                                               ; preds = %6, %18, %16
  %21 = phi i32 [ %19, %18 ], [ %17, %16 ], [ %13, %6 ]
  %22 = shl i32 %8, 14
  %23 = and i32 %22, 4194304
  %24 = or i32 %21, %23
  %25 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0, i32 0
  tail call void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* %25, i32 %24, i32 16515072) #7
  br label %26

26:                                               ; preds = %1, %20
  ret void
}

declare void @_ZN9CFWL_Edit6UpdateEv(%class.CFWL_Edit*) unnamed_addr #2

declare %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget*) local_unnamed_addr #2

declare void @_ZN18CFWL_MonthCalendar6UpdateEv(%class.CFWL_MonthCalendar*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19CFWL_DateTimePicker7HitTestERK13CFX_PTemplateIfE(%class.CFWL_DateTimePicker* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 3
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp oge float %8, 0.000000e+00
  %10 = fadd float %4, 0.000000e+00
  %11 = fcmp olt float %8, %10
  %12 = and i1 %11, %9
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp oge float %15, 0.000000e+00
  %17 = fadd float %6, 0.000000e+00
  %18 = fcmp olt float %15, %17
  %19 = and i1 %16, %18
  br i1 %19, label %88, label %20

20:                                               ; preds = %13, %2
  %21 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %27 = bitcast %"class.cppgc::internal::BasicMember.5"* %26 to %class.CFWL_MonthCalendar**
  %28 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %27, align 8
  %29 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %28, i64 0, i32 0, i32 1, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %35 = bitcast %"class.cppgc::internal::BasicMember.4"* %34 to %class.CFWL_DateTimeEdit**
  %36 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %35, align 8
  %37 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %36, i64 0, i32 0, i32 0, i32 1, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %33, %20, %25
  %42 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  %43 = load float, float* %42, align 4
  %44 = fadd float %4, %43
  %45 = fadd float %44, 0.000000e+00
  br label %46

46:                                               ; preds = %33, %41
  %47 = phi float [ %10, %33 ], [ %45, %41 ]
  %48 = fcmp olt float %8, %47
  %49 = and i1 %48, %9
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp oge float %52, 0.000000e+00
  %54 = fadd float %6, 0.000000e+00
  %55 = fcmp olt float %52, %54
  %56 = and i1 %53, %55
  br i1 %56, label %88, label %57

57:                                               ; preds = %50, %46
  %58 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %59 = bitcast %"class.cppgc::internal::BasicMember.5"* %58 to %class.CFWL_MonthCalendar**
  %60 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %59, align 8
  %61 = icmp eq %class.CFWL_MonthCalendar* %60, null
  br i1 %61, label %87, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %60, i64 0, i32 0
  %64 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %63) #7
  br i1 %64, label %65, label %87

65:                                               ; preds = %62
  %66 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %59, align 8
  %67 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %66, i64 0, i32 0
  %68 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %67) #7
  %69 = extractvalue { <2 x float>, <2 x float> } %68, 0
  %70 = extractvalue { <2 x float>, <2 x float> } %68, 1
  %71 = load float, float* %7, align 4
  %72 = extractelement <2 x float> %69, i32 0
  %73 = fcmp ult float %71, %72
  br i1 %73, label %87, label %74

74:                                               ; preds = %65
  %75 = extractelement <2 x float> %70, i32 0
  %76 = fadd float %72, %75
  %77 = fcmp olt float %71, %76
  br i1 %77, label %78, label %87

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %80 = load float, float* %79, align 4
  %81 = extractelement <2 x float> %69, i32 1
  %82 = fcmp ult float %80, %81
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = extractelement <2 x float> %70, i32 1
  %85 = fadd float %81, %84
  %86 = fcmp olt float %80, %85
  br i1 %86, label %88, label %87

87:                                               ; preds = %65, %74, %78, %57, %83, %62
  br label %88

88:                                               ; preds = %50, %13, %83, %87
  %89 = phi i32 [ 0, %87 ], [ 1, %83 ], [ 18, %13 ], [ 1, %50 ]
  ret i32 %89
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19CFWL_DateTimePicker17NeedsToShowButtonEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %8 = bitcast %"class.cppgc::internal::BasicMember.5"* %7 to %class.CFWL_MonthCalendar**
  %9 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %8, align 8
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %9, i64 0, i32 0, i32 1, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %16 = bitcast %"class.cppgc::internal::BasicMember.4"* %15 to %class.CFWL_DateTimeEdit**
  %17 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %16, align 8
  %18 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %17, i64 0, i32 0, i32 0, i32 1, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 16
  %21 = icmp ne i32 %20, 0
  br label %22

22:                                               ; preds = %6, %1, %14
  %23 = phi i1 [ true, %6 ], [ true, %1 ], [ %21, %14 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19CFWL_DateTimePicker22IsMonthCalendarVisibleEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %3 = bitcast %"class.cppgc::internal::BasicMember.5"* %2 to %class.CFWL_MonthCalendar**
  %4 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %3, align 8
  %5 = icmp eq %class.CFWL_MonthCalendar* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %4, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %7) #7
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i1 [ false, %1 ], [ %8, %6 ]
  ret i1 %10
}

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_DateTimePicker*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = alloca %class.CFX_Matrix, align 16
  %6 = alloca %class.CFX_Matrix, align 16
  %7 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %7, label %115, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget* %9) #7
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  tail call void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget* %9, %class.CFGAS_GEGraphics* nonnull %1, i8 zeroext 3, %class.CFX_Matrix* dereferenceable(24) %2) #7
  br label %12

12:                                               ; preds = %11, %8
  %13 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %14 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %15 = load float, float* %14, align 4
  %16 = fcmp ugt float %15, 0.000000e+00
  br i1 %16, label %17, label %36

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %19 = load float, float* %18, align 4
  %20 = fcmp ugt float %19, 0.000000e+00
  br i1 %20, label %21, label %36

21:                                               ; preds = %17
  %22 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.115", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.116" }, %"class.fxcrt::UnownedPtr.117", %"class.fxcrt::UnownedPtr.125" }* @__const._ZN19CFWL_DateTimePicker18DrawDropDownButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #7
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %9, %class.CFGAS_GEGraphics* nonnull %1) #7
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 14, i8* %23, align 4
  %24 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %28 = bitcast %class.CFX_RectF* %27 to i8*
  %29 = bitcast %class.CFX_RectF* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 16, i1 false) #7
  %30 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 4 %30, i64 24, i1 false) #7
  %31 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %9) #7
  %32 = bitcast %class.IFWL_ThemeProvider* %31 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %33 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %33, i64 3
  %35 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %34, align 8
  call void %35(%class.IFWL_ThemeProvider* %31, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #7
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #7
  br label %36

36:                                               ; preds = %17, %12, %21
  %37 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %38 = bitcast %"class.cppgc::internal::BasicMember.4"* %37 to %class.CFWL_DateTimeEdit**
  %39 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %38, align 8
  %40 = icmp eq %class.CFWL_DateTimeEdit* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %39, i64 0, i32 0
  %43 = call { <2 x float>, <2 x float> } @_ZN9CFWL_Edit13GetWidgetRectEv(%class.CFWL_Edit* %42) #7
  %44 = extractvalue { <2 x float>, <2 x float> } %43, 0
  %45 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #7
  %46 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %47 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %48 = extractelement <2 x float> %44, i32 0
  %49 = extractelement <2 x float> %44, i32 1
  %50 = bitcast %class.CFX_Matrix* %2 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 4, !noalias !2
  %52 = extractelement <4 x float> %51, i32 2
  %53 = extractelement <4 x float> %51, i32 3
  %54 = extractelement <4 x float> %51, i32 0
  %55 = extractelement <4 x float> %51, i32 1
  %56 = fmul <4 x float> %51, zeroinitializer
  %57 = shufflevector <4 x float> %56, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %58 = fadd <4 x float> %51, %57
  %59 = fmul float %48, %54
  %60 = fmul float %49, %52
  %61 = fadd float %59, %60
  %62 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %63 = load float, float* %62, align 4, !noalias !2
  %64 = fadd float %61, %63
  %65 = fmul float %48, %55
  %66 = fmul float %49, %53
  %67 = fadd float %65, %66
  %68 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %69 = load float, float* %68, align 4, !noalias !2
  %70 = fadd float %67, %69
  %71 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  store <4 x float> %58, <4 x float>* %71, align 16
  store float %64, float* %46, align 16
  store float %70, float* %47, align 4
  %72 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %38, align 8
  %73 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %72, i64 0, i32 0
  call void @_ZN9CFWL_Edit10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Edit* %73, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #7
  br label %74

74:                                               ; preds = %36, %41
  %75 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %76 = bitcast %"class.cppgc::internal::BasicMember.5"* %75 to %class.CFWL_MonthCalendar**
  %77 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %76, align 8
  %78 = icmp eq %class.CFWL_MonthCalendar* %77, null
  br i1 %78, label %115, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %77, i64 0, i32 0
  %81 = call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %80) #7
  br i1 %81, label %82, label %115

82:                                               ; preds = %79
  %83 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %76, align 8
  %84 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %83, i64 0, i32 0
  %85 = call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %84) #7
  %86 = extractvalue { <2 x float>, <2 x float> } %85, 0
  %87 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #7
  %88 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 4
  %89 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 5
  %90 = extractelement <2 x float> %86, i32 0
  %91 = extractelement <2 x float> %86, i32 1
  %92 = bitcast %class.CFX_Matrix* %2 to <4 x float>*
  %93 = load <4 x float>, <4 x float>* %92, align 4, !noalias !5
  %94 = extractelement <4 x float> %93, i32 2
  %95 = extractelement <4 x float> %93, i32 3
  %96 = extractelement <4 x float> %93, i32 0
  %97 = extractelement <4 x float> %93, i32 1
  %98 = fmul <4 x float> %93, zeroinitializer
  %99 = shufflevector <4 x float> %98, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %100 = fadd <4 x float> %93, %99
  %101 = fmul float %90, %96
  %102 = fmul float %91, %94
  %103 = fadd float %101, %102
  %104 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %105 = load float, float* %104, align 4, !noalias !5
  %106 = fadd float %103, %105
  %107 = fmul float %90, %97
  %108 = fmul float %91, %95
  %109 = fadd float %107, %108
  %110 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %111 = load float, float* %110, align 4, !noalias !5
  %112 = fadd float %109, %111
  %113 = bitcast %class.CFX_Matrix* %6 to <4 x float>*
  store <4 x float> %100, <4 x float>* %113, align 16
  store float %106, float* %88, align 16
  store float %112, float* %89, align 4
  %114 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %76, align 8
  call void @_ZN18CFWL_MonthCalendar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %114, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #7
  br label %115

115:                                              ; preds = %74, %3, %79, %82
  ret void
}

declare zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget*) local_unnamed_addr #2

declare void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker18DrawDropDownButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_DateTimePicker*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.115", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.116" }, %"class.fxcrt::UnownedPtr.117", %"class.fxcrt::UnownedPtr.125" }* @__const._ZN19CFWL_DateTimePicker18DrawDropDownButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #7
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 14, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_RectF* %12 to i8*
  %14 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 16, i1 false)
  %15 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %15, i64 24, i1 false)
  %16 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #7
  %17 = bitcast %class.IFWL_ThemeProvider* %16 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %18 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %18, i64 3
  %20 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %19, align 8
  call void %20(%class.IFWL_ThemeProvider* %16, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #7
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #7
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN9CFWL_Edit13GetWidgetRectEv(%class.CFWL_Edit*) unnamed_addr #2

declare void @_ZN9CFWL_Edit10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Edit*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #2

declare void @_ZN18CFWL_MonthCalendar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker9GetCurSelERiS0_S0_(%class.CFWL_DateTimePicker* nocapture readonly, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %1, align 4
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %2, align 4
  %9 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker9SetCurSelEiii(%class.CFWL_DateTimePicker* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = add i32 %1, -1
  %6 = icmp ugt i32 %5, 2998
  %7 = add i32 %2, -1
  %8 = icmp ugt i32 %7, 11
  %9 = or i1 %6, %8
  %10 = add i32 %3, -1
  %11 = icmp ugt i32 %10, 30
  %12 = or i1 %9, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 3
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 4
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 5
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %18 = bitcast %"class.cppgc::internal::BasicMember.5"* %17 to %class.CFWL_MonthCalendar**
  %19 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %18, align 8
  tail call void @_ZN18CFWL_MonthCalendar9SetSelectEiii(%class.CFWL_MonthCalendar* %19, i32 %1, i32 %2, i32 %3) #7
  br label %20

20:                                               ; preds = %4, %13
  ret void
}

declare void @_ZN18CFWL_MonthCalendar9SetSelectEiii(%class.CFWL_MonthCalendar*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker11SetEditTextERKN5fxcrt10WideStringE(%class.CFWL_DateTimePicker*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFWL_Event, align 8
  %4 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %5 = bitcast %"class.cppgc::internal::BasicMember.4"* %4 to %class.CFWL_DateTimeEdit**
  %6 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %5, align 8
  %7 = icmp eq %class.CFWL_DateTimeEdit* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %6, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit7SetTextERKN5fxcrt10WideStringE(%class.CFWL_Edit* %9, %"class.fxcrt::WideString"* dereferenceable(8) %1) #7
  %10 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %10, %class.CFX_RectF* dereferenceable(16) %11) #7
  %12 = bitcast %class.CFWL_Event* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN10CFWL_EventC1ENS_4TypeE(%class.CFWL_Event* nonnull %3, i32 3) #7
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %10, %class.CFWL_Event* nonnull %3) #7
  call void @_ZN10CFWL_EventD1Ev(%class.CFWL_Event* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN9CFWL_Edit7SetTextERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN10CFWL_EventC1ENS_4TypeE(%class.CFWL_Event*, i32) unnamed_addr #2

declare void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10CFWL_EventD1Ev(%class.CFWL_Event*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19CFWL_DateTimePicker11GetEditTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %1, i64 0, i32 9
  %4 = bitcast %"class.cppgc::internal::BasicMember.4"* %3 to %class.CFWL_DateTimeEdit**
  %5 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %4, align 8
  %6 = icmp eq %class.CFWL_DateTimeEdit* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %5, i64 0, i32 0
  tail call void @_ZNK9CFWL_Edit7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CFWL_Edit* %8) #7
  br label %10

9:                                                ; preds = %2
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #7
  br label %10

10:                                               ; preds = %9, %7
  ret void
}

declare void @_ZNK9CFWL_Edit7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CFWL_Edit*) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19CFWL_DateTimePicker17GetEditTextLengthEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = icmp eq %class.CFWL_DateTimeEdit* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  %8 = tail call i32 @_ZNK9CFWL_Edit13GetTextLengthEv(%class.CFWL_Edit* %7) #7
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %1 ]
  ret i32 %10
}

declare i32 @_ZNK9CFWL_Edit13GetTextLengthEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK19CFWL_DateTimePicker7GetBBoxEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2
  %3 = bitcast %class.CFX_RectF* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %13 = bitcast %"class.cppgc::internal::BasicMember.5"* %12 to %class.CFWL_MonthCalendar**
  %14 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %13, align 8
  br i1 %11, label %15, label %28

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %14, i64 0, i32 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %22 = bitcast %"class.cppgc::internal::BasicMember.4"* %21 to %class.CFWL_DateTimeEdit**
  %23 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %22, align 8
  %24 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %23, i64 0, i32 0, i32 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 16
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %1, %20, %15
  %29 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  %30 = load float, float* %29, align 4
  %31 = extractelement <2 x float> %7, i32 0
  %32 = fadd float %31, %30
  %33 = insertelement <2 x float> %7, float %32, i32 0
  br label %34

34:                                               ; preds = %20, %28
  %35 = phi <2 x float> [ %7, %20 ], [ %33, %28 ]
  %36 = icmp eq %class.CFWL_MonthCalendar* %14, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %14, i64 0, i32 0
  %39 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %38) #7
  br i1 %39, label %40, label %56

40:                                               ; preds = %37
  %41 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %13, align 8
  %42 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %41, i64 0, i32 0
  %43 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %42) #7
  %44 = extractvalue { <2 x float>, <2 x float> } %43, 0
  %45 = extractvalue { <2 x float>, <2 x float> } %43, 1
  %46 = bitcast %class.CFX_RectF* %2 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = fadd <2 x float> %47, %44
  %49 = fadd <2 x float> %4, %35
  %50 = fcmp olt <2 x float> %48, %4
  %51 = select <2 x i1> %50, <2 x float> %48, <2 x float> %4
  %52 = fadd <2 x float> %45, %48
  %53 = fcmp olt <2 x float> %49, %52
  %54 = select <2 x i1> %53, <2 x float> %52, <2 x float> %49
  %55 = fsub <2 x float> %54, %51
  br label %56

56:                                               ; preds = %34, %37, %40
  %57 = phi <2 x float> [ %55, %40 ], [ %35, %37 ], [ %35, %34 ]
  %58 = phi <2 x float> [ %51, %40 ], [ %4, %37 ], [ %4, %34 ]
  %59 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %58, 0
  %60 = insertvalue { <2 x float>, <2 x float> } %59, <2 x float> %57, 1
  ret { <2 x float>, <2 x float> } %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker18ModifyEditStylesExEjj(%class.CFWL_DateTimePicker* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %5 = bitcast %"class.cppgc::internal::BasicMember.4"* %4 to %class.CFWL_DateTimeEdit**
  %6 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %5, align 8
  %7 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %6, i64 0, i32 0, i32 0
  tail call void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* %7, i32 %1, i32 %2) #7
  ret void
}

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #2

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker16FormatDateStringEiii(%"class.fxcrt::WideString"* noalias sret, %class.CFWL_DateTimePicker* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %1, i64 0, i32 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32* getelementptr inbounds ([24 x i32], [24 x i32]* @.str.1, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str, i64 0, i64 0)
  tail call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret %0, i32* %10, i32 %2, i32 %3, i32 %4) #7
  ret void
}

declare void @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret, i32*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_RectF*
  %5 = alloca %class.CFX_RectF, align 4
  %6 = alloca %class.CFWL_MessageSetFocus, align 8
  %7 = alloca <4 x float>, align 16
  %8 = bitcast <4 x float>* %7 to %class.CFX_RectF*
  %9 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %10 = bitcast %"class.cppgc::internal::BasicMember.5"* %9 to %class.CFWL_MonthCalendar**
  %11 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  %12 = icmp eq %class.CFWL_MonthCalendar* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  br i1 %1, label %20, label %122

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %11, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %15) #7
  %17 = xor i1 %16, %1
  br i1 %17, label %18, label %122

18:                                               ; preds = %14
  %19 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  br i1 %1, label %20, label %85

20:                                               ; preds = %18, %13
  %21 = phi %class.CFWL_MonthCalendar* [ null, %13 ], [ %19, %18 ]
  %22 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 1
  %24 = tail call { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv(%class.CFWL_MonthCalendar* %21) #7
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %26 = extractvalue { <2 x float>, <2 x float> } %24, 1
  store <2 x float> %26, <2 x float>* %25, align 8
  %27 = extractelement <2 x float> %26, i32 1
  %28 = bitcast %class.CFX_RectF* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %5, i64 0, i32 2
  %30 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %5, i64 0, i32 3
  %31 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2
  %32 = bitcast %class.CFX_RectF* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %32, i64 16, i1 false)
  %33 = bitcast <2 x float> %26 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 0
  %35 = bitcast float* %29 to i32*
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8, i32 0
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = bitcast { <2 x float>, <2 x float> }* %3 to i32*
  store i32 %38, i32* %39, align 8
  %40 = bitcast float* %30 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = bitcast float* %23 to i32*
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %44 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 7
  %45 = bitcast %"class.cppgc::internal::BasicMember.1"* %44 to %class.CFWL_WidgetMgr**
  %46 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %45, align 8
  call void @_ZNK14CFWL_WidgetMgr18GetAdapterPopupPosEP11CFWL_WidgetffRK9CFX_RectFPS2_(%class.CFWL_WidgetMgr* %46, %class.CFWL_Widget* %43, float %27, float %27, %class.CFX_RectF* nonnull dereferenceable(16) %5, %class.CFX_RectF* nonnull %4) #7
  %47 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  %48 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %47, i64 0, i32 0
  call void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget* %48, %class.CFX_RectF* nonnull dereferenceable(16) %4) #7
  %49 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %20
  %53 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  call void @_ZN18CFWL_MonthCalendar9SetSelectEiii(%class.CFWL_MonthCalendar* %61, i32 %50, i32 %54, i32 %58) #7
  br label %62

62:                                               ; preds = %60, %56, %52, %20
  %63 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  call void @_ZN18CFWL_MonthCalendar6UpdateEv(%class.CFWL_MonthCalendar* %63) #7
  %64 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  %65 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %64, i64 0, i32 0
  call void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget* %65, i32 32) #7
  %66 = bitcast %class.CFWL_MessageSetFocus* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 32, i1 false)
  %67 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %68 = bitcast %"class.cppgc::internal::BasicMember.4"* %67 to %class.CFWL_DateTimeEdit**
  %69 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %68, align 8
  %70 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %69, i64 0, i32 0, i32 0
  %71 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  %72 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %71, i64 0, i32 0
  call void @_ZN20CFWL_MessageSetFocusC1EP11CFWL_WidgetS1_(%class.CFWL_MessageSetFocus* nonnull %6, %class.CFWL_Widget* %70, %class.CFWL_Widget* %72) #7
  %73 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %68, align 8
  %74 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %73, i64 0, i32 0, i32 0, i32 8
  %75 = bitcast %"class.cppgc::internal::BasicMember.2"* %74 to %class.IFWL_WidgetDelegate**
  %76 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %75, align 8
  %77 = icmp eq %class.IFWL_WidgetDelegate* %76, null
  %78 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %73, i64 0, i32 0, i32 0, i32 0
  %79 = select i1 %77, %class.IFWL_WidgetDelegate* %78, %class.IFWL_WidgetDelegate* %76
  %80 = getelementptr inbounds %class.CFWL_MessageSetFocus, %class.CFWL_MessageSetFocus* %6, i64 0, i32 0
  %81 = bitcast %class.IFWL_WidgetDelegate* %79 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %82 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %82, i64 3
  %84 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %83, align 8
  call void %84(%class.IFWL_WidgetDelegate* %79, %class.CFWL_Message* nonnull %80) #7
  call void @_ZN20CFWL_MessageSetFocusD1Ev(%class.CFWL_MessageSetFocus* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  br label %87

85:                                               ; preds = %18
  %86 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %19, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %86, i32 32) #7
  br label %87

87:                                               ; preds = %85, %62
  %88 = bitcast <4 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #7
  %89 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %90 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 2
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 3
  %93 = load float, float* %92, align 4
  %94 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %10, align 8
  %95 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %94, i64 0, i32 0
  %96 = call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %95) #7
  %97 = extractvalue { <2 x float>, <2 x float> } %96, 0
  %98 = extractvalue { <2 x float>, <2 x float> } %96, 1
  %99 = fadd float %91, 0.000000e+00
  %100 = fadd float %93, 0.000000e+00
  %101 = extractelement <2 x float> %97, i32 0
  %102 = fcmp olt float %101, 0.000000e+00
  %103 = select i1 %102, float %101, float 0.000000e+00
  %104 = extractelement <2 x float> %97, i32 1
  %105 = fcmp olt float %104, 0.000000e+00
  %106 = select i1 %105, float %104, float 0.000000e+00
  %107 = extractelement <2 x float> %98, i32 0
  %108 = fadd float %101, %107
  %109 = fcmp olt float %99, %108
  %110 = select i1 %109, float %108, float %99
  %111 = extractelement <2 x float> %98, i32 1
  %112 = fadd float %104, %111
  %113 = fcmp olt float %100, %112
  %114 = select i1 %113, float %112, float %100
  %115 = fsub float %110, %103
  %116 = fsub float %114, %106
  %117 = insertelement <4 x float> undef, float %103, i32 0
  %118 = insertelement <4 x float> %117, float %106, i32 1
  %119 = insertelement <4 x float> %118, float %115, i32 2
  %120 = insertelement <4 x float> %119, float %116, i32 3
  %121 = fadd <4 x float> %120, <float -2.000000e+00, float -2.000000e+00, float 4.000000e+00, float 4.000000e+00>
  store <4 x float> %121, <4 x float>* %7, align 16
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %89, %class.CFX_RectF* nonnull dereferenceable(16) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #7
  br label %122

122:                                              ; preds = %13, %14, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker11GetPopupPosEffRK9CFX_RectFPS0_(%class.CFWL_DateTimePicker*, float, float, %class.CFX_RectF* dereferenceable(16), %class.CFX_RectF*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 7
  %8 = bitcast %"class.cppgc::internal::BasicMember.1"* %7 to %class.CFWL_WidgetMgr**
  %9 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %8, align 8
  tail call void @_ZNK14CFWL_WidgetMgr18GetAdapterPopupPosEP11CFWL_WidgetffRK9CFX_RectFPS2_(%class.CFWL_WidgetMgr* %9, %class.CFWL_Widget* %6, float %1, float %2, %class.CFX_RectF* dereferenceable(16) %3, %class.CFX_RectF* %4) #7
  ret void
}

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #2

declare void @_ZN20CFWL_MessageSetFocusC1EP11CFWL_WidgetS1_(%class.CFWL_MessageSetFocus*, %class.CFWL_Widget*, %class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20CFWL_MessageSetFocusD1Ev(%class.CFWL_MessageSetFocus*) unnamed_addr #3

declare void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker17ProcessSelChangedEiii(%class.CFWL_DateTimePicker*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %class.CFWL_EventSelectChanged, align 8
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 3
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 4
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 5
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %11 = bitcast %"class.cppgc::internal::BasicMember.4"* %10 to %class.CFWL_DateTimeEdit**
  %12 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %11, align 8
  %13 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %12, i64 0, i32 0
  %14 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32* getelementptr inbounds ([24 x i32], [24 x i32]* @.str.1, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str, i64 0, i64 0)
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %5, i32* %19, i32 %1, i32 %2, i32 %3) #7
  call void @_ZN9CFWL_Edit7SetTextERKN5fxcrt10WideStringE(%class.CFWL_Edit* %13, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %20 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %11, align 8
  %21 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %20, i64 0, i32 0
  call void @_ZN9CFWL_Edit6UpdateEv(%class.CFWL_Edit* %21) #7
  %22 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %23 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %22, %class.CFX_RectF* dereferenceable(16) %23) #7
  %24 = bitcast %class.CFWL_EventSelectChanged* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 48, i1 false)
  %25 = load i32, i32* %7, align 8
  %26 = load i32, i32* %8, align 4
  %27 = load i32, i32* %9, align 8
  call void @_ZN23CFWL_EventSelectChangedC1EP11CFWL_Widgetiii(%class.CFWL_EventSelectChanged* nonnull %6, %class.CFWL_Widget* %22, i32 %25, i32 %26, i32 %27) #7
  %28 = getelementptr inbounds %class.CFWL_EventSelectChanged, %class.CFWL_EventSelectChanged* %6, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %22, %class.CFWL_Event* nonnull %28) #7
  call void @_ZN23CFWL_EventSelectChangedD1Ev(%class.CFWL_EventSelectChanged* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

declare void @_ZN23CFWL_EventSelectChangedC1EP11CFWL_Widgetiii(%class.CFWL_EventSelectChanged*, %class.CFWL_Widget*, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN23CFWL_EventSelectChangedD1Ev(%class.CFWL_EventSelectChanged*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker16OnProcessMessageEP12CFWL_Message(%class.CFWL_DateTimePicker*, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = alloca <4 x float>, align 16
  %4 = bitcast <4 x float>* %3 to %class.CFX_RectF*
  %5 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %153 [
    i32 4, label %7
    i32 1, label %58
    i32 2, label %59
    i32 0, label %134
  ]

7:                                                ; preds = %2
  %8 = icmp eq %class.CFWL_Message* %1, null
  br i1 %8, label %153, label %9

9:                                                ; preds = %7
  %10 = bitcast <4 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %12 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 8 %12, i64 16, i1 false) #7
  %13 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, 16
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %18 = bitcast %"class.cppgc::internal::BasicMember.4"* %17 to %class.CFWL_DateTimeEdit**
  %19 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %18, align 8
  %20 = icmp eq %class.CFWL_DateTimeEdit* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %19, i64 0, i32 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 2
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 3
  %34 = load float, float* %33, align 4
  %35 = fadd float %34, -1.000000e+00
  %36 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 0
  %37 = bitcast float* %36 to i32*
  store i32 %29, i32* %37, align 8
  %38 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %40 = bitcast float* %39 to i32*
  store i32 %32, i32* %40, align 8
  %41 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  store float %35, float* %41, align 4
  br label %42

42:                                               ; preds = %26, %21, %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 4 %12, i64 16, i1 false) #7
  %43 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %19, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %43, %class.CFWL_Widget** %44, align 8
  %45 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %18, align 8
  %46 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %45, i64 0, i32 0, i32 0, i32 8
  %47 = bitcast %"class.cppgc::internal::BasicMember.2"* %46 to %class.IFWL_WidgetDelegate**
  %48 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %47, align 8
  %49 = icmp eq %class.IFWL_WidgetDelegate* %48, null
  %50 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %45, i64 0, i32 0, i32 0, i32 0
  %51 = select i1 %49, %class.IFWL_WidgetDelegate* %50, %class.IFWL_WidgetDelegate* %48
  %52 = bitcast %class.IFWL_WidgetDelegate* %51 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %53 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %53, i64 3
  %55 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %54, align 8
  tail call void %55(%class.IFWL_WidgetDelegate* %51, %class.CFWL_Message* nonnull %1) #7
  %56 = load <4 x float>, <4 x float>* %3, align 16
  %57 = fadd <4 x float> %56, <float -2.000000e+00, float -2.000000e+00, float 4.000000e+00, float 4.000000e+00>
  store <4 x float> %57, <4 x float>* %3, align 16
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %13, %class.CFX_RectF* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  br label %153

58:                                               ; preds = %2
  tail call void @_ZN19CFWL_DateTimePicker14OnFocusChangedEP12CFWL_Messageb(%class.CFWL_DateTimePicker* %0, %class.CFWL_Message* %1, i1 zeroext false)
  br label %153

59:                                               ; preds = %2
  %60 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %61 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %62 = bitcast %class.CFWL_Message* %61 to i8*
  %63 = load i8, i8* %62, align 8
  switch i8 %63, label %153 [
    i8 0, label %64
    i8 1, label %65
    i8 6, label %100
    i8 8, label %128
  ]

64:                                               ; preds = %59
  tail call void @_ZN19CFWL_DateTimePicker13OnLButtonDownEP17CFWL_MessageMouse(%class.CFWL_DateTimePicker* %0, %class.CFWL_MessageMouse* %60)
  br label %153

65:                                               ; preds = %59
  %66 = icmp eq %class.CFWL_Message* %1, null
  br i1 %66, label %153, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 1
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %70 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %60, i64 0, i32 4, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %69, i64 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fcmp ult float %71, %73
  br i1 %74, label %87, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %77 = load float, float* %76, align 4
  %78 = fadd float %73, %77
  %79 = fcmp olt float %71, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %82 = bitcast i32* %81 to float*
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp ult float %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %80, %75, %67
  %88 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  br label %96

89:                                               ; preds = %80
  %90 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %91 = load float, float* %90, align 4
  %92 = fadd float %85, %91
  %93 = fcmp olt float %83, %92
  %94 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  br i1 %93, label %95, label %96

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %95, %89, %87
  %97 = phi i32* [ %94, %95 ], [ %94, %89 ], [ %88, %87 ]
  %98 = phi i32 [ 128, %95 ], [ 0, %89 ], [ 0, %87 ]
  store i32 %98, i32* %97, align 4
  %99 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %99, %class.CFX_RectF* dereferenceable(16) %69) #7
  br label %153

100:                                              ; preds = %59
  %101 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %102 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %60, i64 0, i32 4, i32 0
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %101, i64 0, i32 0
  %105 = load float, float* %104, align 4
  %106 = fcmp ult float %103, %105
  br i1 %106, label %124, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %109 = load float, float* %108, align 4
  %110 = fadd float %105, %109
  %111 = fcmp olt float %103, %110
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %114 = bitcast i32* %113 to float*
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  %117 = load float, float* %116, align 4
  %118 = fcmp ult float %115, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %121 = load float, float* %120, align 4
  %122 = fadd float %117, %121
  %123 = fcmp olt float %115, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %119, %112, %107, %100
  %125 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  store i32 0, i32* %125, align 4
  br label %126

126:                                              ; preds = %119, %124
  %127 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %127, %class.CFX_RectF* dereferenceable(16) %101) #7
  br label %153

128:                                              ; preds = %59
  %129 = icmp eq %class.CFWL_Message* %1, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %133 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %132, %class.CFX_RectF* dereferenceable(16) %133) #7
  br label %153

134:                                              ; preds = %2
  %135 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %136 = bitcast %"class.cppgc::internal::BasicMember.4"* %135 to %class.CFWL_DateTimeEdit**
  %137 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %136, align 8
  %138 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %137, i64 0, i32 0, i32 0, i32 1, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 16
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %137, i64 0, i32 0, i32 0, i32 8
  %144 = bitcast %"class.cppgc::internal::BasicMember.2"* %143 to %class.IFWL_WidgetDelegate**
  %145 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %144, align 8
  %146 = icmp eq %class.IFWL_WidgetDelegate* %145, null
  %147 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %137, i64 0, i32 0, i32 0, i32 0
  %148 = select i1 %146, %class.IFWL_WidgetDelegate* %147, %class.IFWL_WidgetDelegate* %145
  %149 = bitcast %class.IFWL_WidgetDelegate* %148 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %150 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %150, i64 3
  %152 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %151, align 8
  tail call void %152(%class.IFWL_WidgetDelegate* %148, %class.CFWL_Message* %1) #7
  br label %159

153:                                              ; preds = %130, %128, %96, %65, %42, %7, %64, %126, %59, %134, %2, %58
  %154 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %155 = load %class.CFWL_Widget*, %class.CFWL_Widget** %154, align 8
  %156 = icmp eq %class.CFWL_Widget* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget* %158, %class.CFWL_Message* %1) #7
  br label %159

159:                                              ; preds = %153, %142, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker14OnFocusChangedEP12CFWL_Messageb(%class.CFWL_DateTimePicker*, %class.CFWL_Message*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %class.CFX_RectF*
  %6 = icmp eq %class.CFWL_Message* %1, null
  br i1 %6, label %90, label %7

7:                                                ; preds = %3
  %8 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %10 = bitcast %class.CFX_RectF* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %8, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 1, i32 2
  %13 = load i32, i32* %12, align 8
  br i1 %2, label %14, label %55

14:                                               ; preds = %7
  %15 = or i32 %13, 16
  store i32 %15, i32* %12, align 8
  %16 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %17 = bitcast %"class.cppgc::internal::BasicMember.4"* %16 to %class.CFWL_DateTimeEdit**
  %18 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %17, align 8
  %19 = icmp eq %class.CFWL_DateTimeEdit* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %18, i64 0, i32 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 2
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 6
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0, i32 2, i32 3
  %33 = load float, float* %32, align 4
  %34 = fadd float %33, -1.000000e+00
  %35 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 0
  %36 = bitcast float* %35 to i32*
  store i32 %28, i32* %36, align 8
  %37 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %39 = bitcast float* %38 to i32*
  store i32 %31, i32* %39, align 8
  %40 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  store float %34, float* %40, align 4
  br label %41

41:                                               ; preds = %14, %20, %25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %8, i8* align 4 %10, i64 16, i1 false)
  %42 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %18, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  store %class.CFWL_Widget* %42, %class.CFWL_Widget** %43, align 8
  %44 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %17, align 8
  %45 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %44, i64 0, i32 0, i32 0, i32 8
  %46 = bitcast %"class.cppgc::internal::BasicMember.2"* %45 to %class.IFWL_WidgetDelegate**
  %47 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %46, align 8
  %48 = icmp eq %class.IFWL_WidgetDelegate* %47, null
  %49 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %44, i64 0, i32 0, i32 0, i32 0
  %50 = select i1 %48, %class.IFWL_WidgetDelegate* %49, %class.IFWL_WidgetDelegate* %47
  %51 = bitcast %class.IFWL_WidgetDelegate* %50 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %52 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %52, i64 3
  %54 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %53, align 8
  tail call void %54(%class.IFWL_WidgetDelegate* %50, %class.CFWL_Message* nonnull %1) #7
  br label %87

55:                                               ; preds = %7
  %56 = and i32 %13, -17
  store i32 %56, i32* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %57 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %58 = bitcast %"class.cppgc::internal::BasicMember.5"* %57 to %class.CFWL_MonthCalendar**
  %59 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %58, align 8
  %60 = icmp eq %class.CFWL_MonthCalendar* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %59, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %62) #7
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker* %0, i1 zeroext false)
  br label %65

65:                                               ; preds = %55, %64, %61
  %66 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %67 = bitcast %"class.cppgc::internal::BasicMember.4"* %66 to %class.CFWL_DateTimeEdit**
  %68 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %67, align 8
  %69 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %68, i64 0, i32 0, i32 0, i32 1, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 16
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %68, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 2, i32 0
  store %class.CFWL_Widget* %74, %class.CFWL_Widget** %75, align 8
  %76 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %67, align 8
  %77 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %76, i64 0, i32 0, i32 0, i32 8
  %78 = bitcast %"class.cppgc::internal::BasicMember.2"* %77 to %class.IFWL_WidgetDelegate**
  %79 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %78, align 8
  %80 = icmp eq %class.IFWL_WidgetDelegate* %79, null
  %81 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %76, i64 0, i32 0, i32 0, i32 0
  %82 = select i1 %80, %class.IFWL_WidgetDelegate* %81, %class.IFWL_WidgetDelegate* %79
  %83 = bitcast %class.IFWL_WidgetDelegate* %82 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %84 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %84, i64 3
  %86 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %85, align 8
  tail call void %86(%class.IFWL_WidgetDelegate* %82, %class.CFWL_Message* nonnull %1) #7
  br label %87

87:                                               ; preds = %65, %73, %41
  %88 = load <4 x float>, <4 x float>* %4, align 16
  %89 = fadd <4 x float> %88, <float -2.000000e+00, float -2.000000e+00, float 4.000000e+00, float 4.000000e+00>
  store <4 x float> %89, <4 x float>* %4, align 16
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %11, %class.CFX_RectF* nonnull dereferenceable(16) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  br label %90

90:                                               ; preds = %3, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker13OnLButtonDownEP17CFWL_MessageMouse(%class.CFWL_DateTimePicker*, %class.CFWL_MessageMouse* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.CFWL_MessageMouse* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp ult float %6, %8
  br i1 %9, label %39, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %12 = load float, float* %11, align 4
  %13 = fadd float %8, %12
  %14 = fcmp olt float %6, %13
  br i1 %14, label %15, label %39

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp ult float %17, %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %23 = load float, float* %22, align 4
  %24 = fadd float %19, %23
  %25 = fcmp olt float %17, %24
  br i1 %25, label %26, label %39

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 10
  %28 = bitcast %"class.cppgc::internal::BasicMember.5"* %27 to %class.CFWL_MonthCalendar**
  %29 = load %class.CFWL_MonthCalendar*, %class.CFWL_MonthCalendar** %28, align 8
  %30 = icmp eq %class.CFWL_MonthCalendar* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %29, i64 0, i32 0
  %33 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* %32) #7
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker* %0, i1 zeroext false)
  br label %39

35:                                               ; preds = %26, %31
  tail call void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker* %0, i1 zeroext true)
  %36 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 1
  store i8 1, i8* %36, align 8
  %37 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %38 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 8
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %37, %class.CFX_RectF* dereferenceable(16) %38) #7
  br label %39

39:                                               ; preds = %4, %10, %15, %2, %21, %35, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker11OnLButtonUpEP17CFWL_MessageMouse(%class.CFWL_DateTimePicker*, %class.CFWL_MessageMouse* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.CFWL_MessageMouse* %1, null
  br i1 %3, label %36, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %7 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fcmp ult float %8, %10
  br i1 %11, label %23, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %14 = load float, float* %13, align 4
  %15 = fadd float %10, %14
  %16 = fcmp olt float %8, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp ult float %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17, %12, %4
  %24 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  br label %32

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %27 = load float, float* %26, align 4
  %28 = fadd float %21, %27
  %29 = fcmp olt float %19, %28
  %30 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  br i1 %29, label %31, label %32

31:                                               ; preds = %25
  br label %32

32:                                               ; preds = %23, %25, %31
  %33 = phi i32* [ %30, %31 ], [ %30, %25 ], [ %24, %23 ]
  %34 = phi i32 [ 128, %31 ], [ 0, %25 ], [ 0, %23 ]
  store i32 %34, i32* %33, align 4
  %35 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %35, %class.CFX_RectF* dereferenceable(16) %6) #7
  br label %36

36:                                               ; preds = %2, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker11OnMouseMoveEP17CFWL_MessageMouse(%class.CFWL_DateTimePicker*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  %4 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp ult float %5, %7
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 2
  %11 = load float, float* %10, align 4
  %12 = fadd float %7, %11
  %13 = fcmp olt float %5, %12
  br i1 %13, label %14, label %25

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ult float %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7, i32 3
  %22 = load float, float* %21, align 4
  %23 = fadd float %18, %22
  %24 = fcmp olt float %16, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %2, %9, %14, %20
  %26 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  store i32 0, i32* %26, align 4
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %28, %class.CFX_RectF* dereferenceable(16) %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker12OnMouseLeaveEP17CFWL_MessageMouse(%class.CFWL_DateTimePicker*, %class.CFWL_MessageMouse* readnone) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.CFWL_MessageMouse* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 7
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %6, %class.CFX_RectF* dereferenceable(16) %7) #7
  br label %8

8:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget*, %class.CFWL_Message*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_DateTimePicker*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN19CFWL_DateTimePicker10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_DateTimePicker* %0, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2)
  ret void
}

declare void @_ZNK14CFWL_WidgetMgr18GetAdapterPopupPosEP11CFWL_WidgetffRK9CFX_RectFPS2_(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, float, float, %class.CFX_RectF* dereferenceable(16), %class.CFX_RectF*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker9ClearTextEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit9ClearTextEv(%class.CFWL_Edit* %5) #7
  ret void
}

declare void @_ZN9CFWL_Edit9ClearTextEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker9SelectAllEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit9SelectAllEv(%class.CFWL_Edit* %5) #7
  ret void
}

declare void @_ZN9CFWL_Edit9SelectAllEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker14ClearSelectionEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit14ClearSelectionEv(%class.CFWL_Edit* %5) #7
  ret void
}

declare void @_ZN9CFWL_Edit14ClearSelectionEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker4CopyEv(%"class.pdfium::Optional"* noalias sret, %class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %1, i64 0, i32 9
  %4 = bitcast %"class.cppgc::internal::BasicMember.4"* %3 to %class.CFWL_DateTimeEdit**
  %5 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %5, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit4CopyEv(%"class.pdfium::Optional"* sret %0, %class.CFWL_Edit* %6) #7
  ret void
}

declare void @_ZN9CFWL_Edit4CopyEv(%"class.pdfium::Optional"* sret, %class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CFWL_DateTimePicker3CutEv(%"class.pdfium::Optional"* noalias sret, %class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %1, i64 0, i32 9
  %4 = bitcast %"class.cppgc::internal::BasicMember.4"* %3 to %class.CFWL_DateTimeEdit**
  %5 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %5, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit3CutEv(%"class.pdfium::Optional"* sret %0, %class.CFWL_Edit* %6) #7
  ret void
}

declare void @_ZN9CFWL_Edit3CutEv(%"class.pdfium::Optional"* sret, %class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19CFWL_DateTimePicker5PasteERKN5fxcrt10WideStringE(%class.CFWL_DateTimePicker* nocapture readonly, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %4 = bitcast %"class.cppgc::internal::BasicMember.4"* %3 to %class.CFWL_DateTimeEdit**
  %5 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %5, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN9CFWL_Edit5PasteERKN5fxcrt10WideStringE(%class.CFWL_Edit* %6, %"class.fxcrt::WideString"* dereferenceable(8) %1) #7
  ret i1 %7
}

declare zeroext i1 @_ZN9CFWL_Edit5PasteERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19CFWL_DateTimePicker4UndoEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN9CFWL_Edit4UndoEv(%class.CFWL_Edit* %5) #7
  ret i1 %6
}

declare zeroext i1 @_ZN9CFWL_Edit4UndoEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19CFWL_DateTimePicker4RedoEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN9CFWL_Edit4RedoEv(%class.CFWL_Edit* %5) #7
  ret i1 %6
}

declare zeroext i1 @_ZN9CFWL_Edit4RedoEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19CFWL_DateTimePicker7CanUndoEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN9CFWL_Edit7CanUndoEv(%class.CFWL_Edit* %5) #7
  ret i1 %6
}

declare zeroext i1 @_ZN9CFWL_Edit7CanUndoEv(%class.CFWL_Edit*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19CFWL_DateTimePicker7CanRedoEv(%class.CFWL_DateTimePicker* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimePicker, %class.CFWL_DateTimePicker* %0, i64 0, i32 9
  %3 = bitcast %"class.cppgc::internal::BasicMember.4"* %2 to %class.CFWL_DateTimeEdit**
  %4 = load %class.CFWL_DateTimeEdit*, %class.CFWL_DateTimeEdit** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN9CFWL_Edit7CanRedoEv(%class.CFWL_Edit* %5) #7
  ret i1 %6
}

declare zeroext i1 @_ZN9CFWL_Edit7CanRedoEv(%class.CFWL_Edit*) local_unnamed_addr #2

declare void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) unnamed_addr #2

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #2

declare void @_ZN17CFWL_DateTimeEditC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_DateTimeEdit*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #2

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #2

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CFWL_Widget*
  %3 = bitcast i8* %0 to void (%class.CFWL_Widget*)***
  %4 = load void (%class.CFWL_Widget*)**, void (%class.CFWL_Widget*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %4, i64 1
  %6 = load void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  %4 = bitcast i8* %1 to void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)**, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

declare void @_ZN18CFWL_MonthCalendarC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_MonthCalendar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI17CFWL_DateTimeEditE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Edit*
  tail call void @_ZNK9CFWL_Edit5TraceEPN5cppgc7VisitorE(%class.CFWL_Edit* %3, %"class.cppgc::Visitor"* %0) #7
  ret void
}

declare void @_ZNK9CFWL_Edit5TraceEPN5cppgc7VisitorE(%class.CFWL_Edit*, %"class.cppgc::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI18CFWL_MonthCalendarE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  tail call void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %0) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!7 = distinct !{!7, !"_ZNK10CFX_MatrixmlERKS_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN19CFWL_DateTimePicker16FormatDateStringEiii: argument 0"}
!10 = distinct !{!10, !"_ZN19CFWL_DateTimePicker16FormatDateStringEiii"}
