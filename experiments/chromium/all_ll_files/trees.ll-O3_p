; ModuleID = '../../third_party/zlib/trees.c'
source_filename = "../../third_party/zlib/trees.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.static_tree_desc_s = type { %struct.ct_data_s*, i32*, i32, i32, i32 }
%struct.ct_data_s = type { %union.anon, %union.anon.0 }
%union.anon = type { i16 }
%union.anon.0 = type { i16 }
%struct.internal_state = type { %struct.z_stream_s*, i32, i8*, i64, i8*, i64, i32, %struct.Cr_z_gz_header_s*, i64, i8, i32, [20 x i32], i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s, %struct.tree_desc_s, %struct.tree_desc_s, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i32, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.Cr_z_gz_header_s = type { i32, i64, i32, i32, i8*, i32, i32, i8*, i32, i8*, i32, i32, i32 }
%struct.tree_desc_s = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s* }

@Cr_z__dist_code = hidden local_unnamed_addr constant [512 x i8] calign 16
@Cr_z__length_code = hidden local_unnamed_addr constant [256 x i8] calign 16
@static_l_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* getelementptr inbounds ([288 x %struct.ct_data_s], [288 x %struct.ct_data_s]* @static_ltree, i32 0, i32 0), i32* getelementptr inbounds ([29 x i32], [29 x i32]* @extra_lbits, i32 0, i32 0), i32 257, i32 286, i32 15 }, align 8
@static_d_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* getelementptr inbounds ([30 x %struct.ct_data_s], [30 x %struct.ct_data_s]* @static_dtree, i32 0, i32 0), i32* getelementptr inbounds ([30 x i32], [30 x i32]* @extra_dbits, i32 0, i32 0), i32 0, i32 30, i32 15 }, align 8
@static_bl_desc = internal constant %struct.static_tree_desc_s { %struct.ct_data_s* null, i32* getelementptr inbounds ([19 x i32], [19 x i32]* @extra_blbits, i32 0, i32 0), i32 0, i32 19, i32 7 }, align 8
@static_ltree = internal constant [288 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon { i16 12 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 140 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 76 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 204 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 44 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 172 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 108 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 236 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 156 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 92 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 220 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 60 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 188 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 124 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 252 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 130 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 66 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 194 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 34 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 162 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 98 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 226 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 146 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 82 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 210 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 50 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 178 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 114 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 242 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 138 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 74 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 202 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 42 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 170 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 106 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 234 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 154 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 90 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 218 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 58 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 186 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 122 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 250 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 134 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 70 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 198 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 38 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 166 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 102 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 230 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 150 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 86 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 214 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 54 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 182 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 118 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 246 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 142 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 78 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 206 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 46 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 174 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 110 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 238 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 158 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 94 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 222 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 62 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 190 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 126 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 254 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 129 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 65 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 193 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 33 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 161 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 97 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 225 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 145 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 81 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 209 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 49 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 177 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 113 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 241 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 137 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 73 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 201 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 41 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 169 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 105 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 233 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 153 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 89 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 217 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 57 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 185 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 121 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 249 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 133 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 69 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 197 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 37 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 165 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 101 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 229 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 149 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 85 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 213 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 53 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 181 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 117 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 245 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 141 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 77 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 205 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 45 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 173 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 109 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 237 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 157 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 93 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 221 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 61 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 189 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 125 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 253 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 275 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 147 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 403 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 83 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 339 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 211 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 467 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 51 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 307 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 179 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 435 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 115 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 371 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 243 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 499 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 267 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 139 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 395 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 75 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 331 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 203 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 459 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 43 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 299 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 171 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 427 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 107 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 363 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 235 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 491 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 283 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 155 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 411 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 91 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 347 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 219 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 475 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 59 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 315 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 187 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 443 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 123 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 379 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 251 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 507 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 263 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 135 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 391 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 71 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 327 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 199 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 455 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 39 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 295 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 167 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 423 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 103 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 359 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 231 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 487 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 279 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 151 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 407 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 87 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 343 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 215 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 471 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 55 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 311 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 183 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 439 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 119 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 375 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 247 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 503 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 15 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 271 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 143 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 399 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 79 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 335 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 207 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 463 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 47 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 303 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 175 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 431 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 111 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 367 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 239 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 495 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 31 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 287 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 159 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 415 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 95 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 351 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 223 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 479 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 63 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 319 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 191 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 447 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 127 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 383 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 255 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon { i16 511 }, %union.anon.0 { i16 9 } }, %struct.ct_data_s { %union.anon zeroinitializer, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 64 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 32 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 96 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 80 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 48 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 112 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 72 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 40 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 104 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 88 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 56 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 120 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 68 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 36 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 100 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 84 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 52 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 116 }, %union.anon.0 { i16 7 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 131 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 67 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 195 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 35 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 163 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 99 }, %union.anon.0 { i16 8 } }, %struct.ct_data_s { %union.anon { i16 227 }, %union.anon.0 { i16 8 } }], align 16
@static_dtree = internal constant [30 x %struct.ct_data_s] [%struct.ct_data_s { %union.anon zeroinitializer, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 16 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 8 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 24 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 4 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 20 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 12 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 28 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 2 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 18 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 10 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 26 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 6 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 22 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 14 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 30 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 1 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 17 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 9 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 25 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 5 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 21 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 13 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 29 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 3 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 19 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 11 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 27 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 7 }, %union.anon.0 { i16 5 } }, %struct.ct_data_s { %union.anon { i16 23 }, %union.anon.0 { i16 5 } }], align 16
@extra_lbits = internal constant [29 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0], align 16
@extra_dbits = internal constant [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13], align 16
@extra_blbits = internal constant [19 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 7], align 16
@bl_order = internal unnamed_addr constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@base_length = internal unnamed_addr constant [29 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 10, i32 12, i32 14, i32 16, i32 20, i32 24, i32 28, i32 32, i32 40, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 160, i32 192, i32 224, i32 0], align 16
@base_dist = internal unnamed_addr constant [30 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 12, i32 16, i32 24, i32 32, i32 48, i32 64, i32 96, i32 128, i32 192, i32 256, i32 384, i32 512, i32 768, i32 1024, i32 1536, i32 2048, i32 3072, i32 4096, i32 6144, i32 8192, i32 12288, i32 16384, i32 24576], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z__tr_init(%struct.internal_state*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 0
  store %struct.ct_data_s* %2, %struct.ct_data_s** %3, align 8
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 2
  store %struct.static_tree_desc_s* @static_l_desc, %struct.static_tree_desc_s** %4, align 8
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 0
  store %struct.ct_data_s* %5, %struct.ct_data_s** %6, align 8
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 2
  store %struct.static_tree_desc_s* @static_d_desc, %struct.static_tree_desc_s** %7, align 8
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 0
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i32 0
  store %struct.ct_data_s* %8, %struct.ct_data_s** %9, align 8
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43, i32 2
  store %struct.static_tree_desc_s* @static_bl_desc, %struct.static_tree_desc_s** %10, align 8
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  store i16 0, i16* %11, align 8
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  store i32 0, i32* %12, align 4
  br label %13

13:                                               ; preds = %13, %1
  %14 = phi i64 [ 0, %1 ], [ %18, %13 ]
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %14, i32 0, i32 0
  store i16 0, i16* %15, align 4
  %16 = or i64 %14, 1
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %16, i32 0, i32 0
  store i16 0, i16* %17, align 4
  %18 = add nuw nsw i64 %14, 2
  %19 = icmp eq i64 %18, 286
  br i1 %19, label %20, label %13

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 0, i32 0
  store i16 0, i16* %21, align 4
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 1, i32 0, i32 0
  store i16 0, i16* %22, align 4
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 2, i32 0, i32 0
  store i16 0, i16* %23, align 4
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 3, i32 0, i32 0
  store i16 0, i16* %24, align 4
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 4, i32 0, i32 0
  store i16 0, i16* %25, align 4
  %26 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 5, i32 0, i32 0
  store i16 0, i16* %26, align 4
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 6, i32 0, i32 0
  store i16 0, i16* %27, align 4
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 7, i32 0, i32 0
  store i16 0, i16* %28, align 4
  %29 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 8, i32 0, i32 0
  store i16 0, i16* %29, align 4
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 9, i32 0, i32 0
  store i16 0, i16* %30, align 4
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 10, i32 0, i32 0
  store i16 0, i16* %31, align 4
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 11, i32 0, i32 0
  store i16 0, i16* %32, align 4
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 12, i32 0, i32 0
  store i16 0, i16* %33, align 4
  %34 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 13, i32 0, i32 0
  store i16 0, i16* %34, align 4
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 14, i32 0, i32 0
  store i16 0, i16* %35, align 4
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 15, i32 0, i32 0
  store i16 0, i16* %36, align 4
  %37 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  store i16 0, i16* %37, align 4
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  store i16 0, i16* %38, align 4
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  store i16 0, i16* %39, align 4
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 19, i32 0, i32 0
  store i16 0, i16* %40, align 4
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 20, i32 0, i32 0
  store i16 0, i16* %41, align 4
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 21, i32 0, i32 0
  store i16 0, i16* %42, align 4
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 22, i32 0, i32 0
  store i16 0, i16* %43, align 4
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 23, i32 0, i32 0
  store i16 0, i16* %44, align 4
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 24, i32 0, i32 0
  store i16 0, i16* %45, align 4
  %46 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 25, i32 0, i32 0
  store i16 0, i16* %46, align 4
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 26, i32 0, i32 0
  store i16 0, i16* %47, align 4
  %48 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 27, i32 0, i32 0
  store i16 0, i16* %48, align 4
  %49 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 28, i32 0, i32 0
  store i16 0, i16* %49, align 4
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 29, i32 0, i32 0
  store i16 0, i16* %50, align 4
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 0, i32 0, i32 0
  store i16 0, i16* %51, align 4
  %52 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 1, i32 0, i32 0
  store i16 0, i16* %52, align 4
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 2, i32 0, i32 0
  store i16 0, i16* %53, align 4
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 3, i32 0, i32 0
  store i16 0, i16* %54, align 4
  %55 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 4, i32 0, i32 0
  store i16 0, i16* %55, align 4
  %56 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 5, i32 0, i32 0
  store i16 0, i16* %56, align 4
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 6, i32 0, i32 0
  store i16 0, i16* %57, align 4
  %58 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 7, i32 0, i32 0
  store i16 0, i16* %58, align 4
  %59 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 8, i32 0, i32 0
  store i16 0, i16* %59, align 4
  %60 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 9, i32 0, i32 0
  store i16 0, i16* %60, align 4
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 10, i32 0, i32 0
  store i16 0, i16* %61, align 4
  %62 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 11, i32 0, i32 0
  store i16 0, i16* %62, align 4
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 12, i32 0, i32 0
  store i16 0, i16* %63, align 4
  %64 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 13, i32 0, i32 0
  store i16 0, i16* %64, align 4
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 14, i32 0, i32 0
  store i16 0, i16* %65, align 4
  %66 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 15, i32 0, i32 0
  store i16 0, i16* %66, align 4
  %67 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 0, i32 0
  store i16 0, i16* %67, align 4
  %68 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 0, i32 0
  store i16 0, i16* %68, align 4
  %69 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 0, i32 0
  store i16 0, i16* %69, align 4
  %70 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 256, i32 0, i32 0
  store i16 1, i16* %70, align 4
  %71 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %72 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  store i32 0, i32* %72, align 4
  %73 = bitcast i64* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 20, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z__tr_stored_block(%struct.internal_state* nocapture, i8* nocapture readonly, i64, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 13
  %8 = and i32 %3, 65535
  %9 = shl i32 %8, %6
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %11 = load i16, i16* %10, align 8
  %12 = trunc i32 %9 to i16
  %13 = or i16 %11, %12
  store i16 %13, i16* %10, align 8
  br i1 %7, label %14, label %34

14:                                               ; preds = %4
  %15 = trunc i16 %13 to i8
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 %19
  store i8 %15, i8* %21, align 1
  %22 = load i16, i16* %10, align 8
  %23 = lshr i16 %22, 8
  %24 = trunc i16 %23 to i8
  %25 = load i8*, i8** %16, align 8
  %26 = load i64, i64* %18, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %18, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %24, i8* %28, align 1
  %29 = load i32, i32* %5, align 4
  %30 = sub nsw i32 16, %29
  %31 = lshr i32 %8, %30
  %32 = trunc i32 %31 to i16
  store i16 %32, i16* %10, align 8
  %33 = add nsw i32 %29, -13
  br label %36

34:                                               ; preds = %4
  %35 = add nsw i32 %6, 3
  br label %36

36:                                               ; preds = %34, %14
  %37 = phi i16 [ %13, %34 ], [ %32, %14 ]
  %38 = phi i32 [ %35, %34 ], [ %33, %14 ]
  store i32 %38, i32* %5, align 4
  %39 = icmp sgt i32 %38, 8
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = trunc i16 %37 to i8
  %42 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 %45
  store i8 %41, i8* %47, align 1
  %48 = load i16, i16* %10, align 8
  %49 = lshr i16 %48, 8
  %50 = load i8*, i8** %42, align 8
  %51 = load i64, i64* %44, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %44, align 8
  %53 = getelementptr inbounds i8, i8* %50, i64 %51
  br label %63

54:                                               ; preds = %36
  %55 = icmp sgt i32 %38, 0
  br i1 %55, label %56, label %67

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 %60
  br label %63

63:                                               ; preds = %56, %40
  %64 = phi i8* [ %53, %40 ], [ %62, %56 ]
  %65 = phi i16 [ %49, %40 ], [ %37, %56 ]
  %66 = trunc i16 %65 to i8
  store i8 %66, i8* %64, align 1
  br label %67

67:                                               ; preds = %63, %54
  store i16 0, i16* %10, align 8
  store i32 0, i32* %5, align 4
  %68 = trunc i64 %2 to i32
  %69 = trunc i64 %2 to i8
  %70 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = getelementptr inbounds i8, i8* %71, i64 %73
  store i8 %69, i8* %75, align 1
  %76 = lshr i32 %68, 8
  %77 = trunc i32 %76 to i8
  %78 = load i8*, i8** %70, align 8
  %79 = load i64, i64* %72, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %72, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 %79
  store i8 %77, i8* %81, align 1
  %82 = and i32 %68, 65535
  %83 = xor i32 %82, 65535
  %84 = trunc i32 %83 to i8
  %85 = load i8*, i8** %70, align 8
  %86 = load i64, i64* %72, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %72, align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 %86
  store i8 %84, i8* %88, align 1
  %89 = lshr i32 %83, 8
  %90 = trunc i32 %89 to i8
  %91 = load i8*, i8** %70, align 8
  %92 = load i64, i64* %72, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %72, align 8
  %94 = getelementptr inbounds i8, i8* %91, i64 %92
  store i8 %90, i8* %94, align 1
  %95 = load i8*, i8** %70, align 8
  %96 = load i64, i64* %72, align 8
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %1, i64 %2, i1 false)
  %98 = load i64, i64* %72, align 8
  %99 = add i64 %98, %2
  store i64 %99, i64* %72, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @Cr_z__tr_flush_bits(%struct.internal_state* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 16
  br i1 %4, label %5, label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %7 = load i16, i16* %6, align 8
  %8 = trunc i16 %7 to i8
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 %12
  store i8 %8, i8* %14, align 1
  %15 = load i16, i16* %6, align 8
  %16 = lshr i16 %15, 8
  %17 = trunc i16 %16 to i8
  %18 = load i8*, i8** %9, align 8
  %19 = load i64, i64* %11, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %11, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 %19
  store i8 %17, i8* %21, align 1
  store i16 0, i16* %6, align 8
  br label %38

22:                                               ; preds = %1
  %23 = icmp sgt i32 %3, 7
  br i1 %23, label %24, label %40

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %26 = load i16, i16* %25, align 8
  %27 = trunc i16 %26 to i8
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 %31
  store i8 %27, i8* %33, align 1
  %34 = load i16, i16* %25, align 8
  %35 = lshr i16 %34, 8
  store i16 %35, i16* %25, align 8
  %36 = load i32, i32* %2, align 4
  %37 = add nsw i32 %36, -8
  br label %38

38:                                               ; preds = %24, %5
  %39 = phi i32 [ 0, %5 ], [ %37, %24 ]
  store i32 %39, i32* %2, align 4
  br label %40

40:                                               ; preds = %38, %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @Cr_z__tr_align(%struct.internal_state* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 13
  %5 = shl i32 2, %3
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %7 = load i16, i16* %6, align 8
  %8 = trunc i32 %5 to i16
  %9 = or i16 %7, %8
  store i16 %9, i16* %6, align 8
  br i1 %4, label %10, label %30

10:                                               ; preds = %1
  %11 = trunc i16 %9 to i8
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 %15
  store i8 %11, i8* %17, align 1
  %18 = load i16, i16* %6, align 8
  %19 = lshr i16 %18, 8
  %20 = trunc i16 %19 to i8
  %21 = load i8*, i8** %12, align 8
  %22 = load i64, i64* %14, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %14, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8 %20, i8* %24, align 1
  %25 = load i32, i32* %2, align 4
  %26 = sub nsw i32 16, %25
  %27 = lshr i32 2, %26
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %6, align 8
  %29 = add nsw i32 %25, -13
  br label %32

30:                                               ; preds = %1
  %31 = add nsw i32 %3, 3
  br label %32

32:                                               ; preds = %30, %10
  %33 = phi i16 [ %9, %30 ], [ %28, %10 ]
  %34 = phi i32 [ %31, %30 ], [ %29, %10 ]
  store i32 %34, i32* %2, align 4
  %35 = icmp sgt i32 %34, 9
  br i1 %35, label %36, label %53

36:                                               ; preds = %32
  %37 = trunc i16 %33 to i8
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8 %37, i8* %43, align 1
  %44 = load i16, i16* %6, align 8
  %45 = lshr i16 %44, 8
  %46 = trunc i16 %45 to i8
  %47 = load i8*, i8** %38, align 8
  %48 = load i64, i64* %40, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %40, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8 %46, i8* %50, align 1
  store i16 0, i16* %6, align 8
  %51 = load i32, i32* %2, align 4
  %52 = add nsw i32 %51, -9
  br label %55

53:                                               ; preds = %32
  %54 = add nsw i32 %34, 7
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i16 [ %33, %53 ], [ 0, %36 ]
  %57 = phi i32 [ %54, %53 ], [ %52, %36 ]
  store i32 %57, i32* %2, align 4
  %58 = icmp eq i32 %57, 16
  br i1 %58, label %59, label %74

59:                                               ; preds = %55
  %60 = trunc i16 %56 to i8
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds i8, i8* %62, i64 %64
  store i8 %60, i8* %66, align 1
  %67 = load i16, i16* %6, align 8
  %68 = lshr i16 %67, 8
  %69 = trunc i16 %68 to i8
  %70 = load i8*, i8** %61, align 8
  %71 = load i64, i64* %63, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %63, align 8
  %73 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8 %69, i8* %73, align 1
  store i16 0, i16* %6, align 8
  br label %88

74:                                               ; preds = %55
  %75 = icmp sgt i32 %57, 7
  br i1 %75, label %76, label %90

76:                                               ; preds = %74
  %77 = trunc i16 %56 to i8
  %78 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 %81
  store i8 %77, i8* %83, align 1
  %84 = load i16, i16* %6, align 8
  %85 = lshr i16 %84, 8
  store i16 %85, i16* %6, align 8
  %86 = load i32, i32* %2, align 4
  %87 = add nsw i32 %86, -8
  br label %88

88:                                               ; preds = %76, %59
  %89 = phi i32 [ 0, %59 ], [ %87, %76 ]
  store i32 %89, i32* %2, align 4
  br label %90

90:                                               ; preds = %88, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z__tr_flush_block(%struct.internal_state*, i8* readonly, i64, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 34
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %362

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %10 = load %struct.z_stream_s*, %struct.z_stream_s** %9, align 8
  %11 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %130

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0, i32 0, i32 0
  %16 = load i16, i16* %15, align 4
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %36, label %128

18:                                               ; preds = %124
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 10, i32 0, i32 0
  %20 = load i16, i16* %19, align 4
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %128

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 13, i32 0, i32 0
  %24 = load i16, i16* %23, align 4
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %31, label %128

26:                                               ; preds = %31
  %27 = or i64 %32, 1
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %27, i32 0, i32 0
  %29 = load i16, i16* %28, align 4
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %690, label %128

31:                                               ; preds = %22, %701
  %32 = phi i64 [ %700, %701 ], [ 32, %22 ]
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %32, i32 0, i32 0
  %34 = load i16, i16* %33, align 4
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %26, label %128

36:                                               ; preds = %14
  %37 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 1, i32 0, i32 0
  %38 = load i16, i16* %37, align 4
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %128

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 2, i32 0, i32 0
  %42 = load i16, i16* %41, align 4
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %128

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 3, i32 0, i32 0
  %46 = load i16, i16* %45, align 4
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %128

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 4, i32 0, i32 0
  %50 = load i16, i16* %49, align 4
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %128

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 5, i32 0, i32 0
  %54 = load i16, i16* %53, align 4
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %128

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 6, i32 0, i32 0
  %58 = load i16, i16* %57, align 4
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %128

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 14, i32 0, i32 0
  %62 = load i16, i16* %61, align 4
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %128

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 15, i32 0, i32 0
  %66 = load i16, i16* %65, align 4
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %128

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 16, i32 0, i32 0
  %70 = load i16, i16* %69, align 4
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 17, i32 0, i32 0
  %74 = load i16, i16* %73, align 4
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %128

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 18, i32 0, i32 0
  %78 = load i16, i16* %77, align 4
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %128

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 19, i32 0, i32 0
  %82 = load i16, i16* %81, align 4
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %84, label %128

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 20, i32 0, i32 0
  %86 = load i16, i16* %85, align 4
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %88, label %128

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 21, i32 0, i32 0
  %90 = load i16, i16* %89, align 4
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %92, label %128

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 22, i32 0, i32 0
  %94 = load i16, i16* %93, align 4
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %96, label %128

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 23, i32 0, i32 0
  %98 = load i16, i16* %97, align 4
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %100, label %128

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 24, i32 0, i32 0
  %102 = load i16, i16* %101, align 4
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %128

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 25, i32 0, i32 0
  %106 = load i16, i16* %105, align 4
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %108, label %128

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 28, i32 0, i32 0
  %110 = load i16, i16* %109, align 4
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 29, i32 0, i32 0
  %114 = load i16, i16* %113, align 4
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 30, i32 0, i32 0
  %118 = load i16, i16* %117, align 4
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %120, label %128

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 31, i32 0, i32 0
  %122 = load i16, i16* %121, align 4
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 9, i32 0, i32 0
  %126 = load i16, i16* %125, align 4
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %18, label %128

128:                                              ; preds = %31, %26, %690, %695, %701, %14, %18, %22, %36, %40, %44, %48, %52, %56, %60, %64, %68, %72, %76, %80, %84, %88, %92, %96, %100, %104, %108, %112, %116, %120, %124
  %129 = phi i32 [ 1, %22 ], [ 1, %18 ], [ 1, %124 ], [ 0, %120 ], [ 0, %116 ], [ 0, %112 ], [ 0, %108 ], [ 0, %104 ], [ 0, %100 ], [ 0, %96 ], [ 0, %92 ], [ 0, %88 ], [ 0, %84 ], [ 0, %80 ], [ 0, %76 ], [ 0, %72 ], [ 0, %68 ], [ 0, %64 ], [ 0, %60 ], [ 0, %56 ], [ 0, %52 ], [ 0, %48 ], [ 0, %44 ], [ 0, %40 ], [ 0, %36 ], [ 0, %14 ], [ 1, %31 ], [ 1, %26 ], [ 1, %690 ], [ 1, %695 ], [ 0, %701 ]
  store i32 %129, i32* %11, align 8
  br label %130

130:                                              ; preds = %128, %8
  %131 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41
  tail call fastcc void @build_tree(%struct.internal_state* %0, %struct.tree_desc_s* %131)
  %132 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42
  tail call fastcc void @build_tree(%struct.internal_state* %0, %struct.tree_desc_s* %132)
  %133 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0, i32 1, i32 0
  %136 = load i16, i16* %135, align 2
  %137 = icmp eq i16 %136, 0
  %138 = add i32 %134, 1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %139, i32 1, i32 0
  store i16 -1, i16* %140, align 2
  %141 = icmp slt i32 %134, 0
  br i1 %141, label %206, label %142

142:                                              ; preds = %130
  %143 = select i1 %137, i32 3, i32 4
  %144 = select i1 %137, i32 138, i32 7
  %145 = zext i16 %136 to i32
  %146 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 0, i32 0
  %147 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 0, i32 0
  %148 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 0, i32 0
  %149 = zext i32 %138 to i64
  br label %150

150:                                              ; preds = %200, %142
  %151 = phi i64 [ %157, %200 ], [ 0, %142 ]
  %152 = phi i32 [ %204, %200 ], [ %143, %142 ]
  %153 = phi i32 [ %203, %200 ], [ %144, %142 ]
  %154 = phi i32 [ %202, %200 ], [ 0, %142 ]
  %155 = phi i32 [ %160, %200 ], [ %145, %142 ]
  %156 = phi i32 [ %201, %200 ], [ -1, %142 ]
  %157 = add nuw nsw i64 %151, 1
  %158 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %157, i32 1, i32 0
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 %154, 1
  %162 = icmp slt i32 %161, %153
  %163 = icmp eq i32 %155, %160
  %164 = and i1 %162, %163
  br i1 %164, label %200, label %165

165:                                              ; preds = %150
  %166 = icmp slt i32 %161, %152
  br i1 %166, label %167, label %173

167:                                              ; preds = %165
  %168 = zext i32 %155 to i64
  %169 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %168, i32 0, i32 0
  %170 = load i16, i16* %169, align 4
  %171 = trunc i32 %161 to i16
  %172 = add i16 %170, %171
  br label %193

173:                                              ; preds = %165
  %174 = icmp eq i32 %155, 0
  br i1 %174, label %185, label %175

175:                                              ; preds = %173
  %176 = icmp eq i32 %155, %156
  br i1 %176, label %182, label %177

177:                                              ; preds = %175
  %178 = zext i32 %155 to i64
  %179 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %178, i32 0, i32 0
  %180 = load i16, i16* %179, align 4
  %181 = add i16 %180, 1
  store i16 %181, i16* %179, align 4
  br label %182

182:                                              ; preds = %177, %175
  %183 = load i16, i16* %146, align 4
  %184 = add i16 %183, 1
  br label %193

185:                                              ; preds = %173
  %186 = icmp slt i32 %161, 11
  br i1 %186, label %187, label %190

187:                                              ; preds = %185
  %188 = load i16, i16* %148, align 4
  %189 = add i16 %188, 1
  br label %193

190:                                              ; preds = %185
  %191 = load i16, i16* %147, align 4
  %192 = add i16 %191, 1
  br label %193

193:                                              ; preds = %190, %187, %182, %167
  %194 = phi i16* [ %147, %190 ], [ %148, %187 ], [ %146, %182 ], [ %169, %167 ]
  %195 = phi i16 [ %192, %190 ], [ %189, %187 ], [ %184, %182 ], [ %172, %167 ]
  store i16 %195, i16* %194, align 4
  %196 = icmp eq i16 %159, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = select i1 %163, i32 6, i32 7
  %199 = select i1 %163, i32 3, i32 4
  br label %200

200:                                              ; preds = %197, %193, %150
  %201 = phi i32 [ %156, %150 ], [ %155, %193 ], [ %155, %197 ]
  %202 = phi i32 [ %161, %150 ], [ 0, %193 ], [ 0, %197 ]
  %203 = phi i32 [ %153, %150 ], [ 138, %193 ], [ %198, %197 ]
  %204 = phi i32 [ %152, %150 ], [ 3, %193 ], [ %199, %197 ]
  %205 = icmp eq i64 %157, %149
  br i1 %205, label %206, label %150

206:                                              ; preds = %200, %130
  %207 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 1, i32 0
  %210 = load i16, i16* %209, align 2
  %211 = icmp eq i16 %210, 0
  %212 = add i32 %208, 1
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %213, i32 1, i32 0
  store i16 -1, i16* %214, align 2
  %215 = icmp slt i32 %208, 0
  br i1 %215, label %280, label %216

216:                                              ; preds = %206
  %217 = select i1 %211, i32 3, i32 4
  %218 = select i1 %211, i32 138, i32 7
  %219 = zext i16 %210 to i32
  %220 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 0, i32 0
  %221 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 0, i32 0
  %222 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 0, i32 0
  %223 = zext i32 %212 to i64
  br label %224

224:                                              ; preds = %274, %216
  %225 = phi i64 [ %231, %274 ], [ 0, %216 ]
  %226 = phi i32 [ %278, %274 ], [ %217, %216 ]
  %227 = phi i32 [ %277, %274 ], [ %218, %216 ]
  %228 = phi i32 [ %276, %274 ], [ 0, %216 ]
  %229 = phi i32 [ %234, %274 ], [ %219, %216 ]
  %230 = phi i32 [ %275, %274 ], [ -1, %216 ]
  %231 = add nuw nsw i64 %225, 1
  %232 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %231, i32 1, i32 0
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = add nsw i32 %228, 1
  %236 = icmp slt i32 %235, %227
  %237 = icmp eq i32 %229, %234
  %238 = and i1 %236, %237
  br i1 %238, label %274, label %239

239:                                              ; preds = %224
  %240 = icmp slt i32 %235, %226
  br i1 %240, label %241, label %247

241:                                              ; preds = %239
  %242 = zext i32 %229 to i64
  %243 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %242, i32 0, i32 0
  %244 = load i16, i16* %243, align 4
  %245 = trunc i32 %235 to i16
  %246 = add i16 %244, %245
  br label %267

247:                                              ; preds = %239
  %248 = icmp eq i32 %229, 0
  br i1 %248, label %259, label %249

249:                                              ; preds = %247
  %250 = icmp eq i32 %229, %230
  br i1 %250, label %256, label %251

251:                                              ; preds = %249
  %252 = zext i32 %229 to i64
  %253 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %252, i32 0, i32 0
  %254 = load i16, i16* %253, align 4
  %255 = add i16 %254, 1
  store i16 %255, i16* %253, align 4
  br label %256

256:                                              ; preds = %251, %249
  %257 = load i16, i16* %220, align 4
  %258 = add i16 %257, 1
  br label %267

259:                                              ; preds = %247
  %260 = icmp slt i32 %235, 11
  br i1 %260, label %261, label %264

261:                                              ; preds = %259
  %262 = load i16, i16* %222, align 4
  %263 = add i16 %262, 1
  br label %267

264:                                              ; preds = %259
  %265 = load i16, i16* %221, align 4
  %266 = add i16 %265, 1
  br label %267

267:                                              ; preds = %264, %261, %256, %241
  %268 = phi i16* [ %221, %264 ], [ %222, %261 ], [ %220, %256 ], [ %243, %241 ]
  %269 = phi i16 [ %266, %264 ], [ %263, %261 ], [ %258, %256 ], [ %246, %241 ]
  store i16 %269, i16* %268, align 4
  %270 = icmp eq i16 %233, 0
  br i1 %270, label %274, label %271

271:                                              ; preds = %267
  %272 = select i1 %237, i32 6, i32 7
  %273 = select i1 %237, i32 3, i32 4
  br label %274

274:                                              ; preds = %271, %267, %224
  %275 = phi i32 [ %230, %224 ], [ %229, %267 ], [ %229, %271 ]
  %276 = phi i32 [ %235, %224 ], [ 0, %267 ], [ 0, %271 ]
  %277 = phi i32 [ %227, %224 ], [ 138, %267 ], [ %272, %271 ]
  %278 = phi i32 [ %226, %224 ], [ 3, %267 ], [ %273, %271 ]
  %279 = icmp eq i64 %231, %223
  br i1 %279, label %280, label %224

280:                                              ; preds = %274, %206
  %281 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 43
  tail call fastcc void @build_tree(%struct.internal_state* %0, %struct.tree_desc_s* %281) #3
  %282 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 15, i32 1, i32 0
  %283 = load i16, i16* %282, align 2
  %284 = icmp eq i16 %283, 0
  br i1 %284, label %285, label %346

285:                                              ; preds = %280
  %286 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 1, i32 1, i32 0
  %287 = load i16, i16* %286, align 2
  %288 = icmp eq i16 %287, 0
  br i1 %288, label %289, label %346

289:                                              ; preds = %285
  %290 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 14, i32 1, i32 0
  %291 = load i16, i16* %290, align 2
  %292 = icmp eq i16 %291, 0
  br i1 %292, label %293, label %346

293:                                              ; preds = %289
  %294 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 2, i32 1, i32 0
  %295 = load i16, i16* %294, align 2
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %297, label %346

297:                                              ; preds = %293
  %298 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 13, i32 1, i32 0
  %299 = load i16, i16* %298, align 2
  %300 = icmp eq i16 %299, 0
  br i1 %300, label %301, label %346

301:                                              ; preds = %297
  %302 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 3, i32 1, i32 0
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, 0
  br i1 %304, label %305, label %346

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 12, i32 1, i32 0
  %307 = load i16, i16* %306, align 2
  %308 = icmp eq i16 %307, 0
  br i1 %308, label %309, label %346

309:                                              ; preds = %305
  %310 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 4, i32 1, i32 0
  %311 = load i16, i16* %310, align 2
  %312 = icmp eq i16 %311, 0
  br i1 %312, label %313, label %346

313:                                              ; preds = %309
  %314 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 11, i32 1, i32 0
  %315 = load i16, i16* %314, align 2
  %316 = icmp eq i16 %315, 0
  br i1 %316, label %317, label %346

317:                                              ; preds = %313
  %318 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 5, i32 1, i32 0
  %319 = load i16, i16* %318, align 2
  %320 = icmp eq i16 %319, 0
  br i1 %320, label %321, label %346

321:                                              ; preds = %317
  %322 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 10, i32 1, i32 0
  %323 = load i16, i16* %322, align 2
  %324 = icmp eq i16 %323, 0
  br i1 %324, label %325, label %346

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 6, i32 1, i32 0
  %327 = load i16, i16* %326, align 2
  %328 = icmp eq i16 %327, 0
  br i1 %328, label %329, label %346

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 9, i32 1, i32 0
  %331 = load i16, i16* %330, align 2
  %332 = icmp eq i16 %331, 0
  br i1 %332, label %333, label %346

333:                                              ; preds = %329
  %334 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 7, i32 1, i32 0
  %335 = load i16, i16* %334, align 2
  %336 = icmp eq i16 %335, 0
  br i1 %336, label %337, label %346

337:                                              ; preds = %333
  %338 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 8, i32 1, i32 0
  %339 = load i16, i16* %338, align 2
  %340 = icmp eq i16 %339, 0
  br i1 %340, label %341, label %346

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 0, i32 1, i32 0
  %343 = load i16, i16* %342, align 2
  %344 = icmp eq i16 %343, 0
  %345 = select i1 %344, i32 2, i32 3
  br label %346

346:                                              ; preds = %280, %285, %289, %293, %297, %301, %305, %309, %313, %317, %321, %325, %329, %333, %337, %341
  %347 = phi i32 [ 18, %280 ], [ 17, %285 ], [ 16, %289 ], [ 15, %293 ], [ 14, %297 ], [ 13, %301 ], [ 12, %305 ], [ 11, %309 ], [ 10, %313 ], [ 9, %317 ], [ 8, %321 ], [ 7, %325 ], [ 6, %329 ], [ 5, %333 ], [ 4, %337 ], [ %345, %341 ]
  %348 = mul nuw nsw i32 %347, 3
  %349 = add nuw nsw i32 %348, 17
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %352 = load i64, i64* %351, align 8
  %353 = add i64 %352, %350
  store i64 %353, i64* %351, align 8
  %354 = add i64 %353, 10
  %355 = lshr i64 %354, 3
  %356 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  %357 = load i64, i64* %356, align 8
  %358 = add i64 %357, 10
  %359 = lshr i64 %358, 3
  %360 = icmp ugt i64 %359, %355
  %361 = select i1 %360, i64 %355, i64 %359
  br label %364

362:                                              ; preds = %4
  %363 = add i64 %2, 5
  br label %364

364:                                              ; preds = %346, %362
  %365 = phi i32 [ 0, %362 ], [ %347, %346 ]
  %366 = phi i64 [ %363, %362 ], [ %359, %346 ]
  %367 = phi i64 [ %363, %362 ], [ %361, %346 ]
  %368 = add i64 %2, 4
  %369 = icmp ule i64 %368, %367
  %370 = icmp ne i8* %1, null
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %373

372:                                              ; preds = %364
  tail call void @Cr_z__tr_stored_block(%struct.internal_state* %0, i8* nonnull %1, i64 %2, i32 %3)
  br label %589

373:                                              ; preds = %364
  %374 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 35
  %375 = load i32, i32* %374, align 8
  %376 = icmp eq i32 %375, 4
  %377 = icmp eq i64 %366, %367
  %378 = or i1 %377, %376
  %379 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %380 = load i32, i32* %379, align 4
  %381 = icmp sgt i32 %380, 13
  br i1 %378, label %382, label %414

382:                                              ; preds = %373
  %383 = add i32 %3, 2
  %384 = and i32 %383, 65535
  %385 = shl i32 %384, %380
  %386 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %387 = load i16, i16* %386, align 8
  %388 = trunc i32 %385 to i16
  %389 = or i16 %387, %388
  store i16 %389, i16* %386, align 8
  br i1 %381, label %390, label %410

390:                                              ; preds = %382
  %391 = trunc i16 %389 to i8
  %392 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %393 = load i8*, i8** %392, align 8
  %394 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %395 = load i64, i64* %394, align 8
  %396 = add i64 %395, 1
  store i64 %396, i64* %394, align 8
  %397 = getelementptr inbounds i8, i8* %393, i64 %395
  store i8 %391, i8* %397, align 1
  %398 = load i16, i16* %386, align 8
  %399 = lshr i16 %398, 8
  %400 = trunc i16 %399 to i8
  %401 = load i8*, i8** %392, align 8
  %402 = load i64, i64* %394, align 8
  %403 = add i64 %402, 1
  store i64 %403, i64* %394, align 8
  %404 = getelementptr inbounds i8, i8* %401, i64 %402
  store i8 %400, i8* %404, align 1
  %405 = load i32, i32* %379, align 4
  %406 = sub nsw i32 16, %405
  %407 = lshr i32 %384, %406
  %408 = trunc i32 %407 to i16
  store i16 %408, i16* %386, align 8
  %409 = add nsw i32 %405, -13
  br label %412

410:                                              ; preds = %382
  %411 = add nsw i32 %380, 3
  br label %412

412:                                              ; preds = %410, %390
  %413 = phi i32 [ %411, %410 ], [ %409, %390 ]
  store i32 %413, i32* %379, align 4
  tail call fastcc void @compress_block(%struct.internal_state* %0, %struct.ct_data_s* getelementptr inbounds ([288 x %struct.ct_data_s], [288 x %struct.ct_data_s]* @static_ltree, i64 0, i64 0), %struct.ct_data_s* getelementptr inbounds ([30 x %struct.ct_data_s], [30 x %struct.ct_data_s]* @static_dtree, i64 0, i64 0))
  br label %589

414:                                              ; preds = %373
  %415 = add i32 %3, 4
  %416 = and i32 %415, 65535
  %417 = shl i32 %416, %380
  %418 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %419 = load i16, i16* %418, align 8
  %420 = trunc i32 %417 to i16
  %421 = or i16 %419, %420
  store i16 %421, i16* %418, align 8
  br i1 %381, label %422, label %442

422:                                              ; preds = %414
  %423 = trunc i16 %421 to i8
  %424 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %425 = load i8*, i8** %424, align 8
  %426 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %427 = load i64, i64* %426, align 8
  %428 = add i64 %427, 1
  store i64 %428, i64* %426, align 8
  %429 = getelementptr inbounds i8, i8* %425, i64 %427
  store i8 %423, i8* %429, align 1
  %430 = load i16, i16* %418, align 8
  %431 = lshr i16 %430, 8
  %432 = trunc i16 %431 to i8
  %433 = load i8*, i8** %424, align 8
  %434 = load i64, i64* %426, align 8
  %435 = add i64 %434, 1
  store i64 %435, i64* %426, align 8
  %436 = getelementptr inbounds i8, i8* %433, i64 %434
  store i8 %432, i8* %436, align 1
  %437 = load i32, i32* %379, align 4
  %438 = sub nsw i32 16, %437
  %439 = lshr i32 %416, %438
  %440 = trunc i32 %439 to i16
  store i16 %440, i16* %418, align 8
  %441 = add nsw i32 %437, -13
  br label %444

442:                                              ; preds = %414
  %443 = add nsw i32 %380, 3
  br label %444

444:                                              ; preds = %442, %422
  %445 = phi i16 [ %421, %442 ], [ %440, %422 ]
  %446 = phi i32 [ %443, %442 ], [ %441, %422 ]
  store i32 %446, i32* %379, align 4
  %447 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 41, i32 1
  %448 = load i32, i32* %447, align 8
  %449 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 42, i32 1
  %450 = load i32, i32* %449, align 8
  %451 = add nuw nsw i32 %365, 1
  %452 = icmp sgt i32 %446, 11
  %453 = add i32 %448, 65280
  %454 = and i32 %453, 65535
  %455 = shl i32 %454, %446
  %456 = trunc i32 %455 to i16
  %457 = or i16 %445, %456
  store i16 %457, i16* %418, align 8
  br i1 %452, label %458, label %478

458:                                              ; preds = %444
  %459 = trunc i16 %457 to i8
  %460 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %461 = load i8*, i8** %460, align 8
  %462 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %463 = load i64, i64* %462, align 8
  %464 = add i64 %463, 1
  store i64 %464, i64* %462, align 8
  %465 = getelementptr inbounds i8, i8* %461, i64 %463
  store i8 %459, i8* %465, align 1
  %466 = load i16, i16* %418, align 8
  %467 = lshr i16 %466, 8
  %468 = trunc i16 %467 to i8
  %469 = load i8*, i8** %460, align 8
  %470 = load i64, i64* %462, align 8
  %471 = add i64 %470, 1
  store i64 %471, i64* %462, align 8
  %472 = getelementptr inbounds i8, i8* %469, i64 %470
  store i8 %468, i8* %472, align 1
  %473 = load i32, i32* %379, align 4
  %474 = sub nsw i32 16, %473
  %475 = lshr i32 %454, %474
  %476 = trunc i32 %475 to i16
  store i16 %476, i16* %418, align 8
  %477 = add nsw i32 %473, -11
  br label %480

478:                                              ; preds = %444
  %479 = add nsw i32 %446, 5
  br label %480

480:                                              ; preds = %478, %458
  %481 = phi i16 [ %457, %478 ], [ %476, %458 ]
  %482 = phi i32 [ %479, %478 ], [ %477, %458 ]
  store i32 %482, i32* %379, align 4
  %483 = icmp sgt i32 %482, 11
  %484 = and i32 %450, 65535
  %485 = shl i32 %484, %482
  %486 = trunc i32 %485 to i16
  %487 = or i16 %481, %486
  store i16 %487, i16* %418, align 8
  br i1 %483, label %488, label %508

488:                                              ; preds = %480
  %489 = trunc i16 %487 to i8
  %490 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %491 = load i8*, i8** %490, align 8
  %492 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %493 = load i64, i64* %492, align 8
  %494 = add i64 %493, 1
  store i64 %494, i64* %492, align 8
  %495 = getelementptr inbounds i8, i8* %491, i64 %493
  store i8 %489, i8* %495, align 1
  %496 = load i16, i16* %418, align 8
  %497 = lshr i16 %496, 8
  %498 = trunc i16 %497 to i8
  %499 = load i8*, i8** %490, align 8
  %500 = load i64, i64* %492, align 8
  %501 = add i64 %500, 1
  store i64 %501, i64* %492, align 8
  %502 = getelementptr inbounds i8, i8* %499, i64 %500
  store i8 %498, i8* %502, align 1
  %503 = load i32, i32* %379, align 4
  %504 = sub nsw i32 16, %503
  %505 = lshr i32 %484, %504
  %506 = trunc i32 %505 to i16
  store i16 %506, i16* %418, align 8
  %507 = add nsw i32 %503, -11
  br label %510

508:                                              ; preds = %480
  %509 = add nsw i32 %482, 5
  br label %510

510:                                              ; preds = %508, %488
  %511 = phi i16 [ %487, %508 ], [ %506, %488 ]
  %512 = phi i32 [ %509, %508 ], [ %507, %488 ]
  store i32 %512, i32* %379, align 4
  %513 = icmp sgt i32 %512, 12
  %514 = add nuw nsw i32 %365, 65533
  %515 = and i32 %514, 65535
  %516 = shl i32 %515, %512
  %517 = trunc i32 %516 to i16
  %518 = or i16 %511, %517
  store i16 %518, i16* %418, align 8
  br i1 %513, label %519, label %539

519:                                              ; preds = %510
  %520 = trunc i16 %518 to i8
  %521 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %522 = load i8*, i8** %521, align 8
  %523 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %524 = load i64, i64* %523, align 8
  %525 = add i64 %524, 1
  store i64 %525, i64* %523, align 8
  %526 = getelementptr inbounds i8, i8* %522, i64 %524
  store i8 %520, i8* %526, align 1
  %527 = load i16, i16* %418, align 8
  %528 = lshr i16 %527, 8
  %529 = trunc i16 %528 to i8
  %530 = load i8*, i8** %521, align 8
  %531 = load i64, i64* %523, align 8
  %532 = add i64 %531, 1
  store i64 %532, i64* %523, align 8
  %533 = getelementptr inbounds i8, i8* %530, i64 %531
  store i8 %529, i8* %533, align 1
  %534 = load i32, i32* %379, align 4
  %535 = sub nsw i32 16, %534
  %536 = lshr i32 %515, %535
  %537 = trunc i32 %536 to i16
  store i16 %537, i16* %418, align 8
  %538 = add nsw i32 %534, -12
  br label %541

539:                                              ; preds = %510
  %540 = add nsw i32 %512, 4
  br label %541

541:                                              ; preds = %519, %539
  %542 = phi i16 [ %518, %539 ], [ %537, %519 ]
  %543 = phi i32 [ %540, %539 ], [ %538, %519 ]
  store i32 %543, i32* %379, align 4
  %544 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %545 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %546 = zext i32 %451 to i64
  br label %547

547:                                              ; preds = %581, %541
  %548 = phi i16 [ %542, %541 ], [ %582, %581 ]
  %549 = phi i32 [ %543, %541 ], [ %583, %581 ]
  %550 = phi i64 [ 0, %541 ], [ %584, %581 ]
  %551 = icmp sgt i32 %549, 13
  %552 = getelementptr inbounds [19 x i8], [19 x i8]* @bl_order, i64 0, i64 %550
  %553 = load i8, i8* %552, align 1
  %554 = zext i8 %553 to i64
  %555 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %554, i32 1, i32 0
  %556 = load i16, i16* %555, align 2
  %557 = zext i16 %556 to i32
  %558 = shl i32 %557, %549
  %559 = trunc i32 %558 to i16
  %560 = or i16 %548, %559
  store i16 %560, i16* %418, align 8
  br i1 %551, label %561, label %579

561:                                              ; preds = %547
  %562 = trunc i16 %560 to i8
  %563 = load i8*, i8** %544, align 8
  %564 = load i64, i64* %545, align 8
  %565 = add i64 %564, 1
  store i64 %565, i64* %545, align 8
  %566 = getelementptr inbounds i8, i8* %563, i64 %564
  store i8 %562, i8* %566, align 1
  %567 = load i16, i16* %418, align 8
  %568 = lshr i16 %567, 8
  %569 = trunc i16 %568 to i8
  %570 = load i8*, i8** %544, align 8
  %571 = load i64, i64* %545, align 8
  %572 = add i64 %571, 1
  store i64 %572, i64* %545, align 8
  %573 = getelementptr inbounds i8, i8* %570, i64 %571
  store i8 %569, i8* %573, align 1
  %574 = load i32, i32* %379, align 4
  %575 = sub nsw i32 16, %574
  %576 = lshr i32 %557, %575
  %577 = trunc i32 %576 to i16
  store i16 %577, i16* %418, align 8
  %578 = add nsw i32 %574, -13
  br label %581

579:                                              ; preds = %547
  %580 = add nsw i32 %549, 3
  br label %581

581:                                              ; preds = %579, %561
  %582 = phi i16 [ %560, %579 ], [ %577, %561 ]
  %583 = phi i32 [ %580, %579 ], [ %578, %561 ]
  store i32 %583, i32* %379, align 4
  %584 = add nuw nsw i64 %550, 1
  %585 = icmp eq i64 %584, %546
  br i1 %585, label %586, label %547

586:                                              ; preds = %581
  %587 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 0
  tail call fastcc void @send_tree(%struct.internal_state* %0, %struct.ct_data_s* %587, i32 %448) #3
  %588 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0
  tail call fastcc void @send_tree(%struct.internal_state* %0, %struct.ct_data_s* %588, i32 %450) #3
  tail call fastcc void @compress_block(%struct.internal_state* %0, %struct.ct_data_s* %587, %struct.ct_data_s* %588)
  br label %589

589:                                              ; preds = %412, %586, %372
  br label %590

590:                                              ; preds = %590, %589
  %591 = phi i64 [ 0, %589 ], [ %595, %590 ]
  %592 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %591, i32 0, i32 0
  store i16 0, i16* %592, align 4
  %593 = or i64 %591, 1
  %594 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %593, i32 0, i32 0
  store i16 0, i16* %594, align 4
  %595 = add nuw nsw i64 %591, 2
  %596 = icmp eq i64 %595, 286
  br i1 %596, label %597, label %590

597:                                              ; preds = %590
  %598 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 0, i32 0, i32 0
  store i16 0, i16* %598, align 4
  %599 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 1, i32 0, i32 0
  store i16 0, i16* %599, align 4
  %600 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 2, i32 0, i32 0
  store i16 0, i16* %600, align 4
  %601 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 3, i32 0, i32 0
  store i16 0, i16* %601, align 4
  %602 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 4, i32 0, i32 0
  store i16 0, i16* %602, align 4
  %603 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 5, i32 0, i32 0
  store i16 0, i16* %603, align 4
  %604 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 6, i32 0, i32 0
  store i16 0, i16* %604, align 4
  %605 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 7, i32 0, i32 0
  store i16 0, i16* %605, align 4
  %606 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 8, i32 0, i32 0
  store i16 0, i16* %606, align 4
  %607 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 9, i32 0, i32 0
  store i16 0, i16* %607, align 4
  %608 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 10, i32 0, i32 0
  store i16 0, i16* %608, align 4
  %609 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 11, i32 0, i32 0
  store i16 0, i16* %609, align 4
  %610 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 12, i32 0, i32 0
  store i16 0, i16* %610, align 4
  %611 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 13, i32 0, i32 0
  store i16 0, i16* %611, align 4
  %612 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 14, i32 0, i32 0
  store i16 0, i16* %612, align 4
  %613 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 15, i32 0, i32 0
  store i16 0, i16* %613, align 4
  %614 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 16, i32 0, i32 0
  store i16 0, i16* %614, align 4
  %615 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 17, i32 0, i32 0
  store i16 0, i16* %615, align 4
  %616 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 18, i32 0, i32 0
  store i16 0, i16* %616, align 4
  %617 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 19, i32 0, i32 0
  store i16 0, i16* %617, align 4
  %618 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 20, i32 0, i32 0
  store i16 0, i16* %618, align 4
  %619 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 21, i32 0, i32 0
  store i16 0, i16* %619, align 4
  %620 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 22, i32 0, i32 0
  store i16 0, i16* %620, align 4
  %621 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 23, i32 0, i32 0
  store i16 0, i16* %621, align 4
  %622 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 24, i32 0, i32 0
  store i16 0, i16* %622, align 4
  %623 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 25, i32 0, i32 0
  store i16 0, i16* %623, align 4
  %624 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 26, i32 0, i32 0
  store i16 0, i16* %624, align 4
  %625 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 27, i32 0, i32 0
  store i16 0, i16* %625, align 4
  %626 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 28, i32 0, i32 0
  store i16 0, i16* %626, align 4
  %627 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 29, i32 0, i32 0
  store i16 0, i16* %627, align 4
  %628 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 0, i32 0, i32 0
  store i16 0, i16* %628, align 4
  %629 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 1, i32 0, i32 0
  store i16 0, i16* %629, align 4
  %630 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 2, i32 0, i32 0
  store i16 0, i16* %630, align 4
  %631 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 3, i32 0, i32 0
  store i16 0, i16* %631, align 4
  %632 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 4, i32 0, i32 0
  store i16 0, i16* %632, align 4
  %633 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 5, i32 0, i32 0
  store i16 0, i16* %633, align 4
  %634 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 6, i32 0, i32 0
  store i16 0, i16* %634, align 4
  %635 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 7, i32 0, i32 0
  store i16 0, i16* %635, align 4
  %636 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 8, i32 0, i32 0
  store i16 0, i16* %636, align 4
  %637 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 9, i32 0, i32 0
  store i16 0, i16* %637, align 4
  %638 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 10, i32 0, i32 0
  store i16 0, i16* %638, align 4
  %639 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 11, i32 0, i32 0
  store i16 0, i16* %639, align 4
  %640 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 12, i32 0, i32 0
  store i16 0, i16* %640, align 4
  %641 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 13, i32 0, i32 0
  store i16 0, i16* %641, align 4
  %642 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 14, i32 0, i32 0
  store i16 0, i16* %642, align 4
  %643 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 15, i32 0, i32 0
  store i16 0, i16* %643, align 4
  %644 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 0, i32 0
  store i16 0, i16* %644, align 4
  %645 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 0, i32 0
  store i16 0, i16* %645, align 4
  %646 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 0, i32 0
  store i16 0, i16* %646, align 4
  %647 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 256, i32 0, i32 0
  store i16 1, i16* %647, align 4
  %648 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %649 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  store i32 0, i32* %649, align 4
  %650 = bitcast i64* %648 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %650, i8 0, i64 20, i1 false) #3
  %651 = icmp eq i32 %3, 0
  br i1 %651, label %689, label %652

652:                                              ; preds = %597
  %653 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %654 = load i32, i32* %653, align 4
  %655 = icmp sgt i32 %654, 8
  br i1 %655, label %656, label %672

656:                                              ; preds = %652
  %657 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %658 = load i16, i16* %657, align 8
  %659 = trunc i16 %658 to i8
  %660 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %661 = load i8*, i8** %660, align 8
  %662 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %663 = load i64, i64* %662, align 8
  %664 = add i64 %663, 1
  store i64 %664, i64* %662, align 8
  %665 = getelementptr inbounds i8, i8* %661, i64 %663
  store i8 %659, i8* %665, align 1
  %666 = load i16, i16* %657, align 8
  %667 = lshr i16 %666, 8
  %668 = load i8*, i8** %660, align 8
  %669 = load i64, i64* %662, align 8
  %670 = add i64 %669, 1
  store i64 %670, i64* %662, align 8
  %671 = getelementptr inbounds i8, i8* %668, i64 %669
  br label %683

672:                                              ; preds = %652
  %673 = icmp sgt i32 %654, 0
  br i1 %673, label %674, label %687

674:                                              ; preds = %672
  %675 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %676 = load i16, i16* %675, align 8
  %677 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %678 = load i8*, i8** %677, align 8
  %679 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %680 = load i64, i64* %679, align 8
  %681 = add i64 %680, 1
  store i64 %681, i64* %679, align 8
  %682 = getelementptr inbounds i8, i8* %678, i64 %680
  br label %683

683:                                              ; preds = %674, %656
  %684 = phi i8* [ %671, %656 ], [ %682, %674 ]
  %685 = phi i16 [ %667, %656 ], [ %676, %674 ]
  %686 = trunc i16 %685 to i8
  store i8 %686, i8* %684, align 1
  br label %687

687:                                              ; preds = %683, %672
  %688 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  store i16 0, i16* %688, align 8
  store i32 0, i32* %653, align 4
  br label %689

689:                                              ; preds = %597, %687
  ret void

690:                                              ; preds = %26
  %691 = or i64 %32, 2
  %692 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %691, i32 0, i32 0
  %693 = load i16, i16* %692, align 4
  %694 = icmp eq i16 %693, 0
  br i1 %694, label %695, label %128

695:                                              ; preds = %690
  %696 = or i64 %32, 3
  %697 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %696, i32 0, i32 0
  %698 = load i16, i16* %697, align 4
  %699 = icmp eq i16 %698, 0
  %700 = add nuw nsw i64 %32, 4
  br i1 %699, label %701, label %128

701:                                              ; preds = %695
  %702 = icmp eq i64 %700, 256
  br i1 %702, label %128, label %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @build_tree(%struct.internal_state*, %struct.tree_desc_s* nocapture) unnamed_addr #0 {
  %3 = alloca [16 x i16], align 16
  %4 = getelementptr %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 0
  %5 = load %struct.ct_data_s*, %struct.ct_data_s** %4, align 8
  %6 = getelementptr %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 2
  %7 = load %struct.static_tree_desc_s*, %struct.static_tree_desc_s** %6, align 8
  %8 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %7, i64 0, i32 0
  %9 = load %struct.ct_data_s*, %struct.ct_data_s** %8, align 8
  %10 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 46
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 47
  store i32 573, i32* %13, align 8
  %14 = icmp sgt i32 %11, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = zext i32 %11 to i64
  br label %43

17:                                               ; preds = %58
  %18 = load i32, i32* %12, align 4
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %84

20:                                               ; preds = %2, %17
  %21 = phi i32 [ %59, %17 ], [ -1, %2 ]
  %22 = phi i32 [ %18, %17 ], [ 0, %2 ]
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %24 = icmp eq %struct.ct_data_s* %9, null
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  br i1 %24, label %26, label %62

26:                                               ; preds = %20, %26
  %27 = phi i32 [ %41, %26 ], [ %22, %20 ]
  %28 = phi i32 [ %31, %26 ], [ %21, %20 ]
  %29 = icmp slt i32 %28, 2
  %30 = add nsw i32 %28, 1
  %31 = select i1 %29, i32 %30, i32 %28
  %32 = select i1 %29, i32 %30, i32 0
  %33 = add nsw i32 %27, 1
  store i32 %33, i32* %12, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %34
  store i32 %32, i32* %35, align 4
  %36 = sext i32 %32 to i64
  %37 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %36, i32 0, i32 0
  store i16 1, i16* %37, align 2
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %36
  store i8 0, i8* %38, align 1
  %39 = load i64, i64* %23, align 8
  %40 = add i64 %39, -1
  store i64 %40, i64* %23, align 8
  %41 = load i32, i32* %12, align 4
  %42 = icmp slt i32 %41, 2
  br i1 %42, label %26, label %84

43:                                               ; preds = %58, %15
  %44 = phi i64 [ 0, %15 ], [ %60, %58 ]
  %45 = phi i32 [ -1, %15 ], [ %59, %58 ]
  %46 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %44, i32 0, i32 0
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = load i32, i32* %12, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %12, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %52
  %54 = trunc i64 %44 to i32
  store i32 %54, i32* %53, align 4
  %55 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %44
  store i8 0, i8* %55, align 1
  br label %58

56:                                               ; preds = %43
  %57 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %44, i32 1, i32 0
  store i16 0, i16* %57, align 2
  br label %58

58:                                               ; preds = %49, %56
  %59 = phi i32 [ %54, %49 ], [ %45, %56 ]
  %60 = add nuw nsw i64 %44, 1
  %61 = icmp eq i64 %60, %16
  br i1 %61, label %17, label %43

62:                                               ; preds = %20, %62
  %63 = phi i32 [ %82, %62 ], [ %22, %20 ]
  %64 = phi i32 [ %67, %62 ], [ %21, %20 ]
  %65 = icmp slt i32 %64, 2
  %66 = add nsw i32 %64, 1
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = select i1 %65, i32 %66, i32 0
  %69 = add nsw i32 %63, 1
  store i32 %69, i32* %12, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %70
  store i32 %68, i32* %71, align 4
  %72 = sext i32 %68 to i64
  %73 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %72, i32 0, i32 0
  store i16 1, i16* %73, align 2
  %74 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %72
  store i8 0, i8* %74, align 1
  %75 = load i64, i64* %23, align 8
  %76 = add i64 %75, -1
  store i64 %76, i64* %23, align 8
  %77 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %9, i64 %72, i32 1, i32 0
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i64
  %80 = load i64, i64* %25, align 8
  %81 = sub i64 %80, %79
  store i64 %81, i64* %25, align 8
  %82 = load i32, i32* %12, align 4
  %83 = icmp slt i32 %82, 2
  br i1 %83, label %62, label %84

84:                                               ; preds = %62, %26, %17
  %85 = phi i32 [ %59, %17 ], [ %31, %26 ], [ %67, %62 ]
  %86 = getelementptr %struct.tree_desc_s, %struct.tree_desc_s* %1, i64 0, i32 1
  store i32 %85, i32* %86, align 8
  %87 = load i32, i32* %12, align 4
  %88 = icmp sgt i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = lshr i32 %87, 1
  %91 = zext i32 %90 to i64
  br label %96

92:                                               ; preds = %165, %84
  %93 = phi i32 [ %87, %84 ], [ %170, %165 ]
  %94 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 1
  %95 = sext i32 %11 to i64
  br label %171

96:                                               ; preds = %165, %89
  %97 = phi i32 [ %87, %89 ], [ %170, %165 ]
  %98 = phi i64 [ %91, %89 ], [ %168, %165 ]
  %99 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %101
  %103 = trunc i64 %98 to i32
  %104 = shl i32 %103, 1
  %105 = icmp sgt i32 %104, %97
  br i1 %105, label %165, label %106

106:                                              ; preds = %96
  %107 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %101, i32 0, i32 0
  br label %108

108:                                              ; preds = %156, %106
  %109 = phi i32 [ %97, %106 ], [ %160, %156 ]
  %110 = phi i32 [ %104, %106 ], [ %159, %156 ]
  %111 = phi i32 [ %103, %106 ], [ %141, %156 ]
  %112 = icmp slt i32 %110, %109
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = sext i32 %110 to i64
  br label %139

115:                                              ; preds = %108
  %116 = or i32 %110, 1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %120, i32 0, i32 0
  %122 = load i16, i16* %121, align 2
  %123 = sext i32 %110 to i64
  %124 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %126, i32 0, i32 0
  %128 = load i16, i16* %127, align 2
  %129 = icmp ult i16 %122, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %115
  %131 = icmp eq i16 %122, %128
  br i1 %131, label %132, label %139

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %120
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %126
  %136 = load i8, i8* %135, align 1
  %137 = icmp ugt i8 %134, %136
  br i1 %137, label %139, label %138

138:                                              ; preds = %132, %115
  br label %139

139:                                              ; preds = %138, %132, %130, %113
  %140 = phi i64 [ %114, %113 ], [ %123, %132 ], [ %117, %138 ], [ %123, %130 ]
  %141 = phi i32 [ %110, %113 ], [ %110, %132 ], [ %116, %138 ], [ %110, %130 ]
  %142 = load i16, i16* %107, align 2
  %143 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %140
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %145, i32 0, i32 0
  %147 = load i16, i16* %146, align 2
  %148 = icmp ult i16 %142, %147
  br i1 %148, label %162, label %149

149:                                              ; preds = %139
  %150 = icmp eq i16 %142, %147
  br i1 %150, label %151, label %156

151:                                              ; preds = %149
  %152 = load i8, i8* %102, align 1
  %153 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %145
  %154 = load i8, i8* %153, align 1
  %155 = icmp ugt i8 %152, %154
  br i1 %155, label %156, label %162

156:                                              ; preds = %151, %149
  %157 = sext i32 %111 to i64
  %158 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %157
  store i32 %144, i32* %158, align 4
  %159 = shl i32 %141, 1
  %160 = load i32, i32* %12, align 4
  %161 = icmp sgt i32 %159, %160
  br i1 %161, label %162, label %108

162:                                              ; preds = %156, %151, %139
  %163 = phi i32 [ %111, %139 ], [ %141, %156 ], [ %111, %151 ]
  %164 = sext i32 %163 to i64
  br label %165

165:                                              ; preds = %96, %162
  %166 = phi i64 [ %164, %162 ], [ %98, %96 ]
  %167 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %166
  store i32 %100, i32* %167, align 4
  %168 = add nsw i64 %98, -1
  %169 = icmp sgt i64 %168, 0
  %170 = load i32, i32* %12, align 4
  br i1 %169, label %96, label %92

171:                                              ; preds = %92, %333
  %172 = phi i32 [ %93, %92 ], [ %336, %333 ]
  %173 = phi i64 [ %95, %92 ], [ %273, %333 ]
  %174 = load i32, i32* %94, align 4
  %175 = add nsw i32 %172, -1
  store i32 %175, i32* %12, align 4
  %176 = sext i32 %172 to i64
  %177 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %176
  %178 = load i32, i32* %177, align 4
  store i32 %178, i32* %94, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %179
  %181 = icmp slt i32 %172, 3
  br i1 %181, label %241, label %182

182:                                              ; preds = %171
  %183 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %179, i32 0, i32 0
  br label %184

184:                                              ; preds = %232, %182
  %185 = phi i32 [ %175, %182 ], [ %236, %232 ]
  %186 = phi i32 [ 2, %182 ], [ %235, %232 ]
  %187 = phi i32 [ 1, %182 ], [ %217, %232 ]
  %188 = icmp slt i32 %186, %185
  br i1 %188, label %191, label %189

189:                                              ; preds = %184
  %190 = sext i32 %186 to i64
  br label %215

191:                                              ; preds = %184
  %192 = or i32 %186, 1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %196, i32 0, i32 0
  %198 = load i16, i16* %197, align 2
  %199 = sext i32 %186 to i64
  %200 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %202, i32 0, i32 0
  %204 = load i16, i16* %203, align 2
  %205 = icmp ult i16 %198, %204
  br i1 %205, label %214, label %206

206:                                              ; preds = %191
  %207 = icmp eq i16 %198, %204
  br i1 %207, label %208, label %215

208:                                              ; preds = %206
  %209 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %196
  %210 = load i8, i8* %209, align 1
  %211 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %202
  %212 = load i8, i8* %211, align 1
  %213 = icmp ugt i8 %210, %212
  br i1 %213, label %215, label %214

214:                                              ; preds = %208, %191
  br label %215

215:                                              ; preds = %214, %208, %206, %189
  %216 = phi i64 [ %190, %189 ], [ %199, %208 ], [ %193, %214 ], [ %199, %206 ]
  %217 = phi i32 [ %186, %189 ], [ %186, %208 ], [ %192, %214 ], [ %186, %206 ]
  %218 = load i16, i16* %183, align 2
  %219 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %216
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %221, i32 0, i32 0
  %223 = load i16, i16* %222, align 2
  %224 = icmp ult i16 %218, %223
  br i1 %224, label %238, label %225

225:                                              ; preds = %215
  %226 = icmp eq i16 %218, %223
  br i1 %226, label %227, label %232

227:                                              ; preds = %225
  %228 = load i8, i8* %180, align 1
  %229 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %221
  %230 = load i8, i8* %229, align 1
  %231 = icmp ugt i8 %228, %230
  br i1 %231, label %232, label %238

232:                                              ; preds = %227, %225
  %233 = sext i32 %187 to i64
  %234 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %233
  store i32 %220, i32* %234, align 4
  %235 = shl i32 %217, 1
  %236 = load i32, i32* %12, align 4
  %237 = icmp sgt i32 %235, %236
  br i1 %237, label %238, label %184

238:                                              ; preds = %232, %227, %215
  %239 = phi i32 [ %187, %215 ], [ %217, %232 ], [ %187, %227 ]
  %240 = sext i32 %239 to i64
  br label %241

241:                                              ; preds = %171, %238
  %242 = phi i64 [ %240, %238 ], [ 1, %171 ]
  %243 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %242
  store i32 %178, i32* %243, align 4
  %244 = load i32, i32* %94, align 4
  %245 = load i32, i32* %13, align 8
  %246 = add nsw i32 %245, -1
  store i32 %246, i32* %13, align 8
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %247
  store i32 %174, i32* %248, align 4
  %249 = load i32, i32* %13, align 8
  %250 = add nsw i32 %249, -1
  store i32 %250, i32* %13, align 8
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %251
  store i32 %244, i32* %252, align 4
  %253 = sext i32 %174 to i64
  %254 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %253, i32 0, i32 0
  %255 = load i16, i16* %254, align 2
  %256 = sext i32 %244 to i64
  %257 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %256, i32 0, i32 0
  %258 = load i16, i16* %257, align 2
  %259 = add i16 %258, %255
  %260 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %173, i32 0, i32 0
  store i16 %259, i16* %260, align 2
  %261 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %253
  %262 = load i8, i8* %261, align 1
  %263 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %256
  %264 = load i8, i8* %263, align 1
  %265 = icmp ult i8 %262, %264
  %266 = select i1 %265, i8 %264, i8 %262
  %267 = add i8 %266, 1
  %268 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %173
  store i8 %267, i8* %268, align 1
  %269 = trunc i64 %173 to i32
  %270 = trunc i64 %173 to i16
  %271 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %256, i32 1, i32 0
  store i16 %270, i16* %271, align 2
  %272 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %253, i32 1, i32 0
  store i16 %270, i16* %272, align 2
  %273 = add i64 %173, 1
  store i32 %269, i32* %94, align 4
  %274 = load i32, i32* %12, align 4
  %275 = icmp slt i32 %274, 2
  br i1 %275, label %333, label %276

276:                                              ; preds = %241, %324
  %277 = phi i32 [ %328, %324 ], [ %274, %241 ]
  %278 = phi i32 [ %327, %324 ], [ 2, %241 ]
  %279 = phi i32 [ %309, %324 ], [ 1, %241 ]
  %280 = icmp slt i32 %278, %277
  br i1 %280, label %283, label %281

281:                                              ; preds = %276
  %282 = sext i32 %278 to i64
  br label %307

283:                                              ; preds = %276
  %284 = or i32 %278, 1
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %288, i32 0, i32 0
  %290 = load i16, i16* %289, align 2
  %291 = sext i32 %278 to i64
  %292 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %294, i32 0, i32 0
  %296 = load i16, i16* %295, align 2
  %297 = icmp ult i16 %290, %296
  br i1 %297, label %306, label %298

298:                                              ; preds = %283
  %299 = icmp eq i16 %290, %296
  br i1 %299, label %300, label %307

300:                                              ; preds = %298
  %301 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %288
  %302 = load i8, i8* %301, align 1
  %303 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %294
  %304 = load i8, i8* %303, align 1
  %305 = icmp ugt i8 %302, %304
  br i1 %305, label %307, label %306

306:                                              ; preds = %300, %283
  br label %307

307:                                              ; preds = %306, %300, %298, %281
  %308 = phi i64 [ %282, %281 ], [ %291, %300 ], [ %285, %306 ], [ %291, %298 ]
  %309 = phi i32 [ %278, %281 ], [ %278, %300 ], [ %284, %306 ], [ %278, %298 ]
  %310 = load i16, i16* %260, align 2
  %311 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %308
  %312 = load i32, i32* %311, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %313, i32 0, i32 0
  %315 = load i16, i16* %314, align 2
  %316 = icmp ult i16 %310, %315
  br i1 %316, label %330, label %317

317:                                              ; preds = %307
  %318 = icmp eq i16 %310, %315
  br i1 %318, label %319, label %324

319:                                              ; preds = %317
  %320 = load i8, i8* %268, align 1
  %321 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 48, i64 %313
  %322 = load i8, i8* %321, align 1
  %323 = icmp ugt i8 %320, %322
  br i1 %323, label %324, label %330

324:                                              ; preds = %319, %317
  %325 = sext i32 %279 to i64
  %326 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %325
  store i32 %312, i32* %326, align 4
  %327 = shl i32 %309, 1
  %328 = load i32, i32* %12, align 4
  %329 = icmp sgt i32 %327, %328
  br i1 %329, label %330, label %276

330:                                              ; preds = %324, %319, %307
  %331 = phi i32 [ %279, %307 ], [ %309, %324 ], [ %279, %319 ]
  %332 = sext i32 %331 to i64
  br label %333

333:                                              ; preds = %241, %330
  %334 = phi i64 [ %332, %330 ], [ 1, %241 ]
  %335 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %334
  store i32 %269, i32* %335, align 4
  %336 = load i32, i32* %12, align 4
  %337 = icmp sgt i32 %336, 1
  br i1 %337, label %171, label %338

338:                                              ; preds = %333
  %339 = load i32, i32* %94, align 4
  %340 = load i32, i32* %13, align 8
  %341 = add nsw i32 %340, -1
  store i32 %341, i32* %13, align 8
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %342
  store i32 %339, i32* %343, align 4
  %344 = load %struct.ct_data_s*, %struct.ct_data_s** %4, align 8
  %345 = load i32, i32* %86, align 8
  %346 = load %struct.static_tree_desc_s*, %struct.static_tree_desc_s** %6, align 8
  %347 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %346, i64 0, i32 0
  %348 = load %struct.ct_data_s*, %struct.ct_data_s** %347, align 8
  %349 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %346, i64 0, i32 1
  %350 = load i32*, i32** %349, align 8
  %351 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %346, i64 0, i32 2
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %struct.static_tree_desc_s, %struct.static_tree_desc_s* %346, i64 0, i32 4
  %354 = load i32, i32* %353, align 8
  %355 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 0
  %356 = bitcast i16* %355 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %356, i8 0, i64 32, i1 false) #3
  %357 = load i32, i32* %13, align 8
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %361, i32 1, i32 0
  store i16 0, i16* %362, align 2
  %363 = load i32, i32* %13, align 8
  %364 = add i32 %363, 1
  %365 = icmp slt i32 %364, 573
  br i1 %365, label %366, label %544

366:                                              ; preds = %338
  %367 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 53
  %368 = icmp eq %struct.ct_data_s* %348, null
  %369 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 54
  %370 = sext i32 %364 to i64
  br i1 %368, label %371, label %416

371:                                              ; preds = %366, %412
  %372 = phi i64 [ %413, %412 ], [ %370, %366 ]
  %373 = phi i32 [ %388, %412 ], [ 0, %366 ]
  %374 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %372
  %375 = load i32, i32* %374, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %376, i32 1, i32 0
  %378 = load i16, i16* %377, align 2
  %379 = zext i16 %378 to i64
  %380 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %379, i32 1, i32 0
  %381 = load i16, i16* %380, align 2
  %382 = zext i16 %381 to i32
  %383 = add nuw nsw i32 %382, 1
  %384 = icmp sgt i32 %354, %382
  %385 = select i1 %384, i32 %383, i32 %354
  %386 = xor i1 %384, true
  %387 = zext i1 %386 to i32
  %388 = add nuw nsw i32 %373, %387
  %389 = trunc i32 %385 to i16
  store i16 %389, i16* %377, align 2
  %390 = icmp sgt i32 %375, %345
  br i1 %390, label %412, label %391

391:                                              ; preds = %371
  %392 = sext i32 %385 to i64
  %393 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %392
  %394 = load i16, i16* %393, align 2
  %395 = add i16 %394, 1
  store i16 %395, i16* %393, align 2
  %396 = icmp slt i32 %375, %352
  br i1 %396, label %402, label %397

397:                                              ; preds = %391
  %398 = sub nsw i32 %375, %352
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i32, i32* %350, i64 %399
  %401 = load i32, i32* %400, align 4
  br label %402

402:                                              ; preds = %397, %391
  %403 = phi i32 [ %401, %397 ], [ 0, %391 ]
  %404 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %376, i32 0, i32 0
  %405 = load i16, i16* %404, align 2
  %406 = zext i16 %405 to i64
  %407 = add nsw i32 %403, %385
  %408 = zext i32 %407 to i64
  %409 = mul nuw nsw i64 %406, %408
  %410 = load i64, i64* %367, align 8
  %411 = add i64 %409, %410
  store i64 %411, i64* %367, align 8
  br label %412

412:                                              ; preds = %402, %371
  %413 = add nsw i64 %372, 1
  %414 = trunc i64 %413 to i32
  %415 = icmp eq i32 %414, 573
  br i1 %415, label %469, label %371

416:                                              ; preds = %366, %465
  %417 = phi i64 [ %466, %465 ], [ %370, %366 ]
  %418 = phi i32 [ %433, %465 ], [ 0, %366 ]
  %419 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %417
  %420 = load i32, i32* %419, align 4
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %421, i32 1, i32 0
  %423 = load i16, i16* %422, align 2
  %424 = zext i16 %423 to i64
  %425 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %424, i32 1, i32 0
  %426 = load i16, i16* %425, align 2
  %427 = zext i16 %426 to i32
  %428 = add nuw nsw i32 %427, 1
  %429 = icmp sgt i32 %354, %427
  %430 = select i1 %429, i32 %428, i32 %354
  %431 = xor i1 %429, true
  %432 = zext i1 %431 to i32
  %433 = add nuw nsw i32 %418, %432
  %434 = trunc i32 %430 to i16
  store i16 %434, i16* %422, align 2
  %435 = icmp sgt i32 %420, %345
  br i1 %435, label %465, label %436

436:                                              ; preds = %416
  %437 = sext i32 %430 to i64
  %438 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %437
  %439 = load i16, i16* %438, align 2
  %440 = add i16 %439, 1
  store i16 %440, i16* %438, align 2
  %441 = icmp slt i32 %420, %352
  br i1 %441, label %447, label %442

442:                                              ; preds = %436
  %443 = sub nsw i32 %420, %352
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, i32* %350, i64 %444
  %446 = load i32, i32* %445, align 4
  br label %447

447:                                              ; preds = %442, %436
  %448 = phi i32 [ %446, %442 ], [ 0, %436 ]
  %449 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %421, i32 0, i32 0
  %450 = load i16, i16* %449, align 2
  %451 = zext i16 %450 to i64
  %452 = add nsw i32 %448, %430
  %453 = zext i32 %452 to i64
  %454 = mul nuw nsw i64 %451, %453
  %455 = load i64, i64* %367, align 8
  %456 = add i64 %454, %455
  store i64 %456, i64* %367, align 8
  %457 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %348, i64 %421, i32 1, i32 0
  %458 = load i16, i16* %457, align 2
  %459 = zext i16 %458 to i32
  %460 = add nsw i32 %448, %459
  %461 = zext i32 %460 to i64
  %462 = mul nuw nsw i64 %461, %451
  %463 = load i64, i64* %369, align 8
  %464 = add i64 %462, %463
  store i64 %464, i64* %369, align 8
  br label %465

465:                                              ; preds = %447, %416
  %466 = add nsw i64 %417, 1
  %467 = trunc i64 %466 to i32
  %468 = icmp eq i32 %467, 573
  br i1 %468, label %469, label %416

469:                                              ; preds = %465, %412
  %470 = phi i32 [ %388, %412 ], [ %433, %465 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %544, label %472

472:                                              ; preds = %469
  %473 = sext i32 %354 to i64
  %474 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %473
  br label %475

475:                                              ; preds = %483, %472
  %476 = phi i32 [ %493, %483 ], [ %470, %472 ]
  br label %477

477:                                              ; preds = %477, %475
  %478 = phi i64 [ %479, %477 ], [ %473, %475 ]
  %479 = add nsw i64 %478, -1
  %480 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %479
  %481 = load i16, i16* %480, align 2
  %482 = icmp eq i16 %481, 0
  br i1 %482, label %477, label %483

483:                                              ; preds = %477
  %484 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %479
  %485 = add i16 %481, -1
  store i16 %485, i16* %484, align 2
  %486 = shl i64 %478, 32
  %487 = ashr exact i64 %486, 32
  %488 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %487
  %489 = load i16, i16* %488, align 2
  %490 = add i16 %489, 2
  store i16 %490, i16* %488, align 2
  %491 = load i16, i16* %474, align 2
  %492 = add i16 %491, -1
  store i16 %492, i16* %474, align 2
  %493 = add nsw i32 %476, -2
  %494 = icmp sgt i32 %493, 0
  br i1 %494, label %475, label %495

495:                                              ; preds = %483
  %496 = icmp eq i32 %354, 0
  br i1 %496, label %544, label %497

497:                                              ; preds = %495, %541
  %498 = phi i16 [ %543, %541 ], [ %492, %495 ]
  %499 = phi i64 [ %539, %541 ], [ %473, %495 ]
  %500 = phi i32 [ %538, %541 ], [ 573, %495 ]
  %501 = trunc i64 %499 to i32
  %502 = trunc i64 %499 to i16
  %503 = icmp eq i16 %498, 0
  br i1 %503, label %537, label %504

504:                                              ; preds = %497
  %505 = zext i16 %498 to i32
  br label %506

506:                                              ; preds = %504, %532
  %507 = phi i32 [ %533, %532 ], [ %505, %504 ]
  %508 = phi i32 [ %517, %532 ], [ %500, %504 ]
  %509 = sext i32 %508 to i64
  br label %510

510:                                              ; preds = %510, %506
  %511 = phi i64 [ %509, %506 ], [ %512, %510 ]
  %512 = add nsw i64 %511, -1
  %513 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 45, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = icmp sgt i32 %514, %345
  br i1 %515, label %510, label %516

516:                                              ; preds = %510
  %517 = trunc i64 %512 to i32
  %518 = sext i32 %514 to i64
  %519 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %518, i32 1, i32 0
  %520 = load i16, i16* %519, align 2
  %521 = zext i16 %520 to i32
  %522 = icmp eq i32 %501, %521
  br i1 %522, label %532, label %523

523:                                              ; preds = %516
  %524 = zext i16 %520 to i64
  %525 = sub nsw i64 %499, %524
  %526 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %344, i64 %518, i32 0, i32 0
  %527 = load i16, i16* %526, align 2
  %528 = zext i16 %527 to i64
  %529 = mul nsw i64 %525, %528
  %530 = load i64, i64* %367, align 8
  %531 = add i64 %529, %530
  store i64 %531, i64* %367, align 8
  store i16 %502, i16* %519, align 2
  br label %532

532:                                              ; preds = %523, %516
  %533 = add nsw i32 %507, -1
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %506

535:                                              ; preds = %532
  %536 = trunc i64 %512 to i32
  br label %537

537:                                              ; preds = %535, %497
  %538 = phi i32 [ %500, %497 ], [ %536, %535 ]
  %539 = add nsw i64 %499, -1
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %544, label %541

541:                                              ; preds = %537
  %542 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 %539
  %543 = load i16, i16* %542, align 2
  br label %497

544:                                              ; preds = %537, %338, %469, %495
  %545 = bitcast [16 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %545) #3
  %546 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 1
  %547 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 2
  %548 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 3
  %549 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 4
  %550 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 5
  %551 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 6
  %552 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 7
  %553 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 8
  %554 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 9
  %555 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 10
  %556 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 11
  %557 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 12
  %558 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 13
  %559 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 14
  %560 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %545, i8 -86, i64 32, i1 false) #3
  %561 = load i16, i16* %355, align 2
  %562 = zext i16 %561 to i32
  %563 = shl nuw nsw i32 %562, 1
  %564 = trunc i32 %563 to i16
  store i16 %564, i16* %546, align 2
  %565 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 1
  %566 = load i16, i16* %565, align 2
  %567 = zext i16 %566 to i32
  %568 = add nuw nsw i32 %563, %567
  %569 = shl nuw nsw i32 %568, 1
  %570 = trunc i32 %569 to i16
  store i16 %570, i16* %547, align 4
  %571 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 2
  %572 = load i16, i16* %571, align 2
  %573 = zext i16 %572 to i32
  %574 = add nuw nsw i32 %569, %573
  %575 = shl nuw nsw i32 %574, 1
  %576 = trunc i32 %575 to i16
  store i16 %576, i16* %548, align 2
  %577 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 3
  %578 = load i16, i16* %577, align 2
  %579 = zext i16 %578 to i32
  %580 = add nuw nsw i32 %575, %579
  %581 = shl i32 %580, 1
  %582 = trunc i32 %581 to i16
  store i16 %582, i16* %549, align 8
  %583 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 4
  %584 = load i16, i16* %583, align 2
  %585 = zext i16 %584 to i32
  %586 = add nuw nsw i32 %581, %585
  %587 = shl i32 %586, 1
  %588 = trunc i32 %587 to i16
  store i16 %588, i16* %550, align 2
  %589 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 5
  %590 = load i16, i16* %589, align 2
  %591 = zext i16 %590 to i32
  %592 = add nuw nsw i32 %587, %591
  %593 = shl i32 %592, 1
  %594 = trunc i32 %593 to i16
  store i16 %594, i16* %551, align 4
  %595 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 6
  %596 = load i16, i16* %595, align 2
  %597 = zext i16 %596 to i32
  %598 = add nuw nsw i32 %593, %597
  %599 = shl i32 %598, 1
  %600 = trunc i32 %599 to i16
  store i16 %600, i16* %552, align 2
  %601 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 7
  %602 = load i16, i16* %601, align 2
  %603 = zext i16 %602 to i32
  %604 = add nuw nsw i32 %599, %603
  %605 = shl i32 %604, 1
  %606 = trunc i32 %605 to i16
  store i16 %606, i16* %553, align 16
  %607 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 8
  %608 = load i16, i16* %607, align 2
  %609 = zext i16 %608 to i32
  %610 = add nuw nsw i32 %605, %609
  %611 = shl i32 %610, 1
  %612 = trunc i32 %611 to i16
  store i16 %612, i16* %554, align 2
  %613 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 9
  %614 = load i16, i16* %613, align 2
  %615 = zext i16 %614 to i32
  %616 = add nuw nsw i32 %611, %615
  %617 = shl i32 %616, 1
  %618 = trunc i32 %617 to i16
  store i16 %618, i16* %555, align 4
  %619 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 10
  %620 = load i16, i16* %619, align 2
  %621 = zext i16 %620 to i32
  %622 = add nuw nsw i32 %617, %621
  %623 = shl i32 %622, 1
  %624 = trunc i32 %623 to i16
  store i16 %624, i16* %556, align 2
  %625 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 11
  %626 = load i16, i16* %625, align 2
  %627 = zext i16 %626 to i32
  %628 = add nuw nsw i32 %623, %627
  %629 = shl i32 %628, 1
  %630 = trunc i32 %629 to i16
  store i16 %630, i16* %557, align 8
  %631 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 12
  %632 = load i16, i16* %631, align 2
  %633 = trunc i32 %629 to i16
  %634 = add i16 %632, %633
  %635 = shl i16 %634, 1
  store i16 %635, i16* %558, align 2
  %636 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 13
  %637 = load i16, i16* %636, align 2
  %638 = add i16 %637, %635
  %639 = shl i16 %638, 1
  store i16 %639, i16* %559, align 4
  %640 = getelementptr %struct.internal_state, %struct.internal_state* %0, i64 0, i32 44, i64 14
  %641 = load i16, i16* %640, align 2
  %642 = add i16 %639, %641
  %643 = shl i16 %642, 1
  store i16 %643, i16* %560, align 2
  %644 = icmp slt i32 %85, 0
  br i1 %644, label %707, label %645

645:                                              ; preds = %544
  %646 = add nuw i32 %85, 1
  %647 = zext i32 %646 to i64
  br label %648

648:                                              ; preds = %704, %645
  %649 = phi i64 [ 0, %645 ], [ %705, %704 ]
  %650 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %649, i32 1, i32 0
  %651 = load i16, i16* %650, align 2
  %652 = icmp eq i16 %651, 0
  br i1 %652, label %704, label %653

653:                                              ; preds = %648
  %654 = zext i16 %651 to i64
  %655 = getelementptr inbounds [16 x i16], [16 x i16]* %3, i64 0, i64 %654
  %656 = load i16, i16* %655, align 2
  %657 = add i16 %656, 1
  store i16 %657, i16* %655, align 2
  %658 = zext i16 %656 to i32
  %659 = zext i16 %651 to i32
  %660 = add nsw i32 %659, -1
  %661 = and i32 %659, 3
  %662 = icmp ult i32 %660, 3
  br i1 %662, label %685, label %663

663:                                              ; preds = %653
  %664 = sub nsw i32 %659, %661
  br label %665

665:                                              ; preds = %665, %663
  %666 = phi i32 [ %658, %663 ], [ %681, %665 ]
  %667 = phi i32 [ 0, %663 ], [ %682, %665 ]
  %668 = phi i32 [ %664, %663 ], [ %683, %665 ]
  %669 = and i32 %666, 1
  %670 = or i32 %667, %669
  %671 = shl i32 %670, 2
  %672 = and i32 %666, 2
  %673 = or i32 %671, %672
  %674 = lshr i32 %666, 2
  %675 = and i32 %674, 1
  %676 = or i32 %673, %675
  %677 = lshr i32 %666, 3
  %678 = shl i32 %676, 1
  %679 = and i32 %677, 1
  %680 = or i32 %678, %679
  %681 = lshr i32 %666, 4
  %682 = shl i32 %680, 1
  %683 = add i32 %668, -4
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %665

685:                                              ; preds = %665, %653
  %686 = phi i32 [ undef, %653 ], [ %680, %665 ]
  %687 = phi i32 [ %658, %653 ], [ %681, %665 ]
  %688 = phi i32 [ 0, %653 ], [ %682, %665 ]
  %689 = icmp eq i32 %661, 0
  br i1 %689, label %700, label %690

690:                                              ; preds = %685, %690
  %691 = phi i32 [ %696, %690 ], [ %687, %685 ]
  %692 = phi i32 [ %697, %690 ], [ %688, %685 ]
  %693 = phi i32 [ %698, %690 ], [ %661, %685 ]
  %694 = and i32 %691, 1
  %695 = or i32 %692, %694
  %696 = lshr i32 %691, 1
  %697 = shl i32 %695, 1
  %698 = add i32 %693, -1
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %690, !llvm.loop !2

700:                                              ; preds = %690, %685
  %701 = phi i32 [ %686, %685 ], [ %695, %690 ]
  %702 = trunc i32 %701 to i16
  %703 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %5, i64 %649, i32 0, i32 0
  store i16 %702, i16* %703, align 2
  br label %704

704:                                              ; preds = %700, %648
  %705 = add nuw nsw i64 %649, 1
  %706 = icmp eq i64 %705, %647
  br i1 %706, label %707, label %648

707:                                              ; preds = %704, %544
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %545) #3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @compress_block(%struct.internal_state*, %struct.ct_data_s* nocapture readonly, %struct.ct_data_s* nocapture readonly) unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %11 = load i16, i16* %10, align 8
  br label %246

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 49
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  br label %18

18:                                               ; preds = %12, %241
  %19 = phi i32 [ %33, %241 ], [ 0, %12 ]
  %20 = load i8*, i8** %13, align 8
  %21 = add nuw i32 %19, 1
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds i8, i8* %20, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = add i32 %19, 2
  %27 = zext i32 %21 to i64
  %28 = getelementptr inbounds i8, i8* %20, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %25
  %33 = add i32 %19, 3
  %34 = zext i32 %26 to i64
  %35 = getelementptr inbounds i8, i8* %20, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %32, 0
  %39 = zext i8 %36 to i64
  br i1 %38, label %40, label %75

40:                                               ; preds = %18
  %41 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %39, i32 1, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = load i32, i32* %14, align 4
  %45 = sub nsw i32 16, %43
  %46 = icmp sgt i32 %44, %45
  %47 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %39, i32 0, i32 0
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = shl i32 %49, %44
  %51 = load i16, i16* %15, align 8
  %52 = trunc i32 %50 to i16
  %53 = or i16 %51, %52
  store i16 %53, i16* %15, align 8
  br i1 %46, label %54, label %73

54:                                               ; preds = %40
  %55 = trunc i16 %53 to i8
  %56 = load i8*, i8** %16, align 8
  %57 = load i64, i64* %17, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %17, align 8
  %59 = getelementptr inbounds i8, i8* %56, i64 %57
  store i8 %55, i8* %59, align 1
  %60 = load i16, i16* %15, align 8
  %61 = lshr i16 %60, 8
  %62 = trunc i16 %61 to i8
  %63 = load i8*, i8** %16, align 8
  %64 = load i64, i64* %17, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %17, align 8
  %66 = getelementptr inbounds i8, i8* %63, i64 %64
  store i8 %62, i8* %66, align 1
  %67 = load i32, i32* %14, align 4
  %68 = sub nsw i32 16, %67
  %69 = lshr i32 %49, %68
  %70 = trunc i32 %69 to i16
  store i16 %70, i16* %15, align 8
  %71 = add nsw i32 %43, -16
  %72 = add nsw i32 %71, %67
  br label %238

73:                                               ; preds = %40
  %74 = add nsw i32 %44, %43
  br label %238

75:                                               ; preds = %18
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* @Cr_z__length_code, i64 0, i64 %39
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %78, 256
  %80 = add nuw nsw i64 %79, 1
  %81 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %80, i32 1, i32 0
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = load i32, i32* %14, align 4
  %85 = sub nsw i32 16, %83
  %86 = icmp sgt i32 %84, %85
  %87 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %80, i32 0, i32 0
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = shl i32 %89, %84
  %91 = load i16, i16* %15, align 8
  %92 = trunc i32 %90 to i16
  %93 = or i16 %91, %92
  store i16 %93, i16* %15, align 8
  br i1 %86, label %94, label %113

94:                                               ; preds = %75
  %95 = trunc i16 %93 to i8
  %96 = load i8*, i8** %16, align 8
  %97 = load i64, i64* %17, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %17, align 8
  %99 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8 %95, i8* %99, align 1
  %100 = load i16, i16* %15, align 8
  %101 = lshr i16 %100, 8
  %102 = trunc i16 %101 to i8
  %103 = load i8*, i8** %16, align 8
  %104 = load i64, i64* %17, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %17, align 8
  %106 = getelementptr inbounds i8, i8* %103, i64 %104
  store i8 %102, i8* %106, align 1
  %107 = load i32, i32* %14, align 4
  %108 = sub nsw i32 16, %107
  %109 = lshr i32 %89, %108
  %110 = trunc i32 %109 to i16
  store i16 %110, i16* %15, align 8
  %111 = add nsw i32 %83, -16
  %112 = add nsw i32 %111, %107
  br label %115

113:                                              ; preds = %75
  %114 = add nsw i32 %84, %83
  br label %115

115:                                              ; preds = %113, %94
  %116 = phi i16 [ %93, %113 ], [ %110, %94 ]
  %117 = phi i32 [ %114, %113 ], [ %112, %94 ]
  store i32 %117, i32* %14, align 4
  %118 = getelementptr inbounds [29 x i32], [29 x i32]* @extra_lbits, i64 0, i64 %78
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i64 %78, -8
  %121 = icmp ult i64 %120, 20
  br i1 %121, label %122, label %156

122:                                              ; preds = %115
  %123 = getelementptr inbounds [29 x i32], [29 x i32]* @base_length, i64 0, i64 %78
  %124 = load i32, i32* %123, align 4
  %125 = sub nsw i32 %37, %124
  %126 = sub nsw i32 16, %119
  %127 = icmp sgt i32 %117, %126
  %128 = and i32 %125, 65535
  %129 = shl i32 %128, %117
  %130 = trunc i32 %129 to i16
  %131 = or i16 %116, %130
  store i16 %131, i16* %15, align 8
  br i1 %127, label %132, label %151

132:                                              ; preds = %122
  %133 = trunc i16 %131 to i8
  %134 = load i8*, i8** %16, align 8
  %135 = load i64, i64* %17, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %17, align 8
  %137 = getelementptr inbounds i8, i8* %134, i64 %135
  store i8 %133, i8* %137, align 1
  %138 = load i16, i16* %15, align 8
  %139 = lshr i16 %138, 8
  %140 = trunc i16 %139 to i8
  %141 = load i8*, i8** %16, align 8
  %142 = load i64, i64* %17, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %17, align 8
  %144 = getelementptr inbounds i8, i8* %141, i64 %142
  store i8 %140, i8* %144, align 1
  %145 = load i32, i32* %14, align 4
  %146 = sub nsw i32 16, %145
  %147 = lshr i32 %128, %146
  %148 = trunc i32 %147 to i16
  store i16 %148, i16* %15, align 8
  %149 = add nsw i32 %119, -16
  %150 = add nsw i32 %149, %145
  br label %153

151:                                              ; preds = %122
  %152 = add nsw i32 %119, %117
  br label %153

153:                                              ; preds = %151, %132
  %154 = phi i16 [ %131, %151 ], [ %148, %132 ]
  %155 = phi i32 [ %152, %151 ], [ %150, %132 ]
  store i32 %155, i32* %14, align 4
  br label %156

156:                                              ; preds = %153, %115
  %157 = phi i16 [ %154, %153 ], [ %116, %115 ]
  %158 = phi i32 [ %155, %153 ], [ %117, %115 ]
  %159 = add nsw i32 %32, -1
  %160 = icmp ult i32 %159, 256
  %161 = lshr i32 %159, 7
  %162 = add nuw nsw i32 %161, 256
  %163 = select i1 %160, i32 %159, i32 %162
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [512 x i8], [512 x i8]* @Cr_z__dist_code, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i64
  %168 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %2, i64 %167, i32 1, i32 0
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = sub nsw i32 16, %170
  %172 = icmp sgt i32 %158, %171
  %173 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %2, i64 %167, i32 0, i32 0
  %174 = load i16, i16* %173, align 2
  %175 = zext i16 %174 to i32
  %176 = shl i32 %175, %158
  %177 = trunc i32 %176 to i16
  %178 = or i16 %157, %177
  store i16 %178, i16* %15, align 8
  br i1 %172, label %179, label %198

179:                                              ; preds = %156
  %180 = trunc i16 %178 to i8
  %181 = load i8*, i8** %16, align 8
  %182 = load i64, i64* %17, align 8
  %183 = add i64 %182, 1
  store i64 %183, i64* %17, align 8
  %184 = getelementptr inbounds i8, i8* %181, i64 %182
  store i8 %180, i8* %184, align 1
  %185 = load i16, i16* %15, align 8
  %186 = lshr i16 %185, 8
  %187 = trunc i16 %186 to i8
  %188 = load i8*, i8** %16, align 8
  %189 = load i64, i64* %17, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %17, align 8
  %191 = getelementptr inbounds i8, i8* %188, i64 %189
  store i8 %187, i8* %191, align 1
  %192 = load i32, i32* %14, align 4
  %193 = sub nsw i32 16, %192
  %194 = lshr i32 %175, %193
  %195 = trunc i32 %194 to i16
  store i16 %195, i16* %15, align 8
  %196 = add nsw i32 %170, -16
  %197 = add nsw i32 %196, %192
  br label %200

198:                                              ; preds = %156
  %199 = add nsw i32 %158, %170
  br label %200

200:                                              ; preds = %198, %179
  %201 = phi i16 [ %178, %198 ], [ %195, %179 ]
  %202 = phi i32 [ %199, %198 ], [ %197, %179 ]
  store i32 %202, i32* %14, align 4
  %203 = getelementptr inbounds [30 x i32], [30 x i32]* @extra_dbits, i64 0, i64 %167
  %204 = load i32, i32* %203, align 4
  %205 = add nsw i64 %167, -4
  %206 = icmp ult i64 %205, 26
  br i1 %206, label %207, label %241

207:                                              ; preds = %200
  %208 = getelementptr inbounds [30 x i32], [30 x i32]* @base_dist, i64 0, i64 %167
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %159, %209
  %211 = sub nsw i32 16, %204
  %212 = icmp sgt i32 %202, %211
  %213 = and i32 %210, 65535
  %214 = shl i32 %213, %202
  %215 = trunc i32 %214 to i16
  %216 = or i16 %201, %215
  store i16 %216, i16* %15, align 8
  br i1 %212, label %217, label %236

217:                                              ; preds = %207
  %218 = trunc i16 %216 to i8
  %219 = load i8*, i8** %16, align 8
  %220 = load i64, i64* %17, align 8
  %221 = add i64 %220, 1
  store i64 %221, i64* %17, align 8
  %222 = getelementptr inbounds i8, i8* %219, i64 %220
  store i8 %218, i8* %222, align 1
  %223 = load i16, i16* %15, align 8
  %224 = lshr i16 %223, 8
  %225 = trunc i16 %224 to i8
  %226 = load i8*, i8** %16, align 8
  %227 = load i64, i64* %17, align 8
  %228 = add i64 %227, 1
  store i64 %228, i64* %17, align 8
  %229 = getelementptr inbounds i8, i8* %226, i64 %227
  store i8 %225, i8* %229, align 1
  %230 = load i32, i32* %14, align 4
  %231 = sub nsw i32 16, %230
  %232 = lshr i32 %213, %231
  %233 = trunc i32 %232 to i16
  store i16 %233, i16* %15, align 8
  %234 = add nsw i32 %204, -16
  %235 = add nsw i32 %234, %230
  br label %238

236:                                              ; preds = %207
  %237 = add nsw i32 %204, %202
  br label %238

238:                                              ; preds = %217, %236, %54, %73
  %239 = phi i32 [ %74, %73 ], [ %72, %54 ], [ %237, %236 ], [ %235, %217 ]
  %240 = phi i16 [ %53, %73 ], [ %70, %54 ], [ %216, %236 ], [ %233, %217 ]
  store i32 %239, i32* %14, align 4
  br label %241

241:                                              ; preds = %238, %200
  %242 = phi i16 [ %201, %200 ], [ %240, %238 ]
  %243 = phi i32 [ %202, %200 ], [ %239, %238 ]
  %244 = load i32, i32* %4, align 4
  %245 = icmp ult i32 %33, %244
  br i1 %245, label %18, label %246

246:                                              ; preds = %241, %7
  %247 = phi i16 [ %11, %7 ], [ %242, %241 ]
  %248 = phi i32 [ %9, %7 ], [ %243, %241 ]
  %249 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 256, i32 1, i32 0
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %253 = sub nsw i32 16, %251
  %254 = icmp sgt i32 %248, %253
  %255 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 256, i32 0, i32 0
  %256 = load i16, i16* %255, align 2
  %257 = zext i16 %256 to i32
  %258 = shl i32 %257, %248
  %259 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %260 = trunc i32 %258 to i16
  %261 = or i16 %247, %260
  store i16 %261, i16* %259, align 8
  br i1 %254, label %262, label %283

262:                                              ; preds = %246
  %263 = trunc i16 %261 to i8
  %264 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %265 = load i8*, i8** %264, align 8
  %266 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds i8, i8* %265, i64 %267
  store i8 %263, i8* %269, align 1
  %270 = load i16, i16* %259, align 8
  %271 = lshr i16 %270, 8
  %272 = trunc i16 %271 to i8
  %273 = load i8*, i8** %264, align 8
  %274 = load i64, i64* %266, align 8
  %275 = add i64 %274, 1
  store i64 %275, i64* %266, align 8
  %276 = getelementptr inbounds i8, i8* %273, i64 %274
  store i8 %272, i8* %276, align 1
  %277 = load i32, i32* %252, align 4
  %278 = sub nsw i32 16, %277
  %279 = lshr i32 %257, %278
  %280 = trunc i32 %279 to i16
  store i16 %280, i16* %259, align 8
  %281 = add nsw i32 %251, -16
  %282 = add nsw i32 %281, %277
  br label %285

283:                                              ; preds = %246
  %284 = add nsw i32 %248, %251
  br label %285

285:                                              ; preds = %283, %262
  %286 = phi i32 [ %284, %283 ], [ %282, %262 ]
  store i32 %286, i32* %252, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Cr_z__tr_tally(%struct.internal_state* nocapture, i32, i32) local_unnamed_addr #2 {
  %4 = trunc i32 %1 to i8
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 49
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  store i8 %4, i8* %11, align 1
  %12 = lshr i32 %1, 8
  %13 = trunc i32 %12 to i8
  %14 = load i8*, i8** %5, align 8
  %15 = load i32, i32* %7, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %7, align 4
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  store i8 %13, i8* %18, align 1
  %19 = trunc i32 %2 to i8
  %20 = load i8*, i8** %5, align 8
  %21 = load i32, i32* %7, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %7, align 4
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8 %19, i8* %24, align 1
  %25 = icmp eq i32 %1, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %3
  %27 = zext i32 %2 to i64
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %27, i32 0, i32 0
  br label %52

29:                                               ; preds = %3
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8
  %33 = add i32 %1, -1
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* @Cr_z__length_code, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = or i64 %37, 256
  %39 = add nuw nsw i64 %38, 1
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %39, i32 0, i32 0
  %41 = load i16, i16* %40, align 4
  %42 = add i16 %41, 1
  store i16 %42, i16* %40, align 4
  %43 = icmp ult i32 %33, 256
  %44 = lshr i32 %33, 7
  %45 = add nuw nsw i32 %44, 256
  %46 = select i1 %43, i32 %33, i32 %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* @Cr_z__dist_code, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %50, i32 0, i32 0
  br label %52

52:                                               ; preds = %29, %26
  %53 = phi i16* [ %51, %29 ], [ %28, %26 ]
  %54 = load i16, i16* %53, align 4
  %55 = add i16 %54, 1
  store i16 %55, i16* %53, align 4
  %56 = load i32, i32* %7, align 4
  %57 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  %60 = zext i1 %59 to i32
  ret i32 %60
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @send_tree(%struct.internal_state*, %struct.ct_data_s* nocapture readonly, i32) unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 0, i32 1, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  %7 = icmp slt i32 %2, 0
  br i1 %7, label %330, label %8

8:                                                ; preds = %3
  %9 = select i1 %6, i32 138, i32 7
  %10 = select i1 %6, i32 3, i32 4
  %11 = zext i16 %5 to i32
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 57
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 1, i32 0
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 16, i32 0, i32 0
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 1, i32 0
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 1, i32 0
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 17, i32 0, i32 0
  %22 = add nuw i32 %2, 1
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %324, %8
  %25 = phi i64 [ %31, %324 ], [ 0, %8 ]
  %26 = phi i32 [ %328, %324 ], [ -1, %8 ]
  %27 = phi i32 [ %34, %324 ], [ %11, %8 ]
  %28 = phi i32 [ %327, %324 ], [ 0, %8 ]
  %29 = phi i32 [ %326, %324 ], [ %9, %8 ]
  %30 = phi i32 [ %325, %324 ], [ %10, %8 ]
  %31 = add nuw nsw i64 %25, 1
  %32 = getelementptr inbounds %struct.ct_data_s, %struct.ct_data_s* %1, i64 %31, i32 1, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = add nsw i32 %28, 1
  %36 = icmp slt i32 %35, %29
  %37 = icmp eq i32 %27, %34
  %38 = and i1 %36, %37
  br i1 %38, label %324, label %39

39:                                               ; preds = %24
  %40 = icmp slt i32 %35, %30
  br i1 %40, label %41, label %84

41:                                               ; preds = %39
  %42 = zext i32 %27 to i64
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %42, i32 1, i32 0
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %42, i32 0, i32 0
  %45 = load i32, i32* %12, align 4
  br label %46

46:                                               ; preds = %41, %80
  %47 = phi i32 [ %81, %80 ], [ %45, %41 ]
  %48 = phi i32 [ %82, %80 ], [ %35, %41 ]
  %49 = load i16, i16* %43, align 2
  %50 = zext i16 %49 to i32
  %51 = sub nsw i32 16, %50
  %52 = icmp sgt i32 %47, %51
  %53 = load i16, i16* %44, align 4
  %54 = zext i16 %53 to i32
  %55 = shl i32 %54, %47
  %56 = load i16, i16* %13, align 8
  %57 = trunc i32 %55 to i16
  %58 = or i16 %56, %57
  store i16 %58, i16* %13, align 8
  br i1 %52, label %59, label %78

59:                                               ; preds = %46
  %60 = trunc i16 %58 to i8
  %61 = load i8*, i8** %14, align 8
  %62 = load i64, i64* %15, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %15, align 8
  %64 = getelementptr inbounds i8, i8* %61, i64 %62
  store i8 %60, i8* %64, align 1
  %65 = load i16, i16* %13, align 8
  %66 = lshr i16 %65, 8
  %67 = trunc i16 %66 to i8
  %68 = load i8*, i8** %14, align 8
  %69 = load i64, i64* %15, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %15, align 8
  %71 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8 %67, i8* %71, align 1
  %72 = load i32, i32* %12, align 4
  %73 = sub nsw i32 16, %72
  %74 = lshr i32 %54, %73
  %75 = trunc i32 %74 to i16
  store i16 %75, i16* %13, align 8
  %76 = add nsw i32 %50, -16
  %77 = add nsw i32 %76, %72
  br label %80

78:                                               ; preds = %46
  %79 = add nsw i32 %47, %50
  br label %80

80:                                               ; preds = %78, %59
  %81 = phi i32 [ %79, %78 ], [ %77, %59 ]
  store i32 %81, i32* %12, align 4
  %82 = add nsw i32 %48, -1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %319, label %46

84:                                               ; preds = %39
  %85 = icmp eq i32 %27, 0
  br i1 %85, label %191, label %86

86:                                               ; preds = %84
  %87 = icmp eq i32 %27, %26
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = load i32, i32* %12, align 4
  br label %128

90:                                               ; preds = %86
  %91 = zext i32 %27 to i64
  %92 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %91, i32 1, i32 0
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i32
  %95 = load i32, i32* %12, align 4
  %96 = sub nsw i32 16, %94
  %97 = icmp sgt i32 %95, %96
  %98 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 40, i64 %91, i32 0, i32 0
  %99 = load i16, i16* %98, align 4
  %100 = zext i16 %99 to i32
  %101 = shl i32 %100, %95
  %102 = load i16, i16* %13, align 8
  %103 = trunc i32 %101 to i16
  %104 = or i16 %102, %103
  store i16 %104, i16* %13, align 8
  br i1 %97, label %105, label %124

105:                                              ; preds = %90
  %106 = trunc i16 %104 to i8
  %107 = load i8*, i8** %14, align 8
  %108 = load i64, i64* %15, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %15, align 8
  %110 = getelementptr inbounds i8, i8* %107, i64 %108
  store i8 %106, i8* %110, align 1
  %111 = load i16, i16* %13, align 8
  %112 = lshr i16 %111, 8
  %113 = trunc i16 %112 to i8
  %114 = load i8*, i8** %14, align 8
  %115 = load i64, i64* %15, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %15, align 8
  %117 = getelementptr inbounds i8, i8* %114, i64 %115
  store i8 %113, i8* %117, align 1
  %118 = load i32, i32* %12, align 4
  %119 = sub nsw i32 16, %118
  %120 = lshr i32 %100, %119
  %121 = trunc i32 %120 to i16
  store i16 %121, i16* %13, align 8
  %122 = add nsw i32 %94, -16
  %123 = add nsw i32 %122, %118
  br label %126

124:                                              ; preds = %90
  %125 = add nsw i32 %95, %94
  br label %126

126:                                              ; preds = %124, %105
  %127 = phi i32 [ %125, %124 ], [ %123, %105 ]
  store i32 %127, i32* %12, align 4
  br label %128

128:                                              ; preds = %88, %126
  %129 = phi i32 [ %127, %126 ], [ %89, %88 ]
  %130 = phi i32 [ %28, %126 ], [ %35, %88 ]
  %131 = load i16, i16* %16, align 2
  %132 = zext i16 %131 to i32
  %133 = sub nsw i32 16, %132
  %134 = icmp sgt i32 %129, %133
  %135 = load i16, i16* %17, align 4
  %136 = zext i16 %135 to i32
  %137 = shl i32 %136, %129
  %138 = load i16, i16* %13, align 8
  %139 = trunc i32 %137 to i16
  %140 = or i16 %138, %139
  store i16 %140, i16* %13, align 8
  br i1 %134, label %141, label %160

141:                                              ; preds = %128
  %142 = trunc i16 %140 to i8
  %143 = load i8*, i8** %14, align 8
  %144 = load i64, i64* %15, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %15, align 8
  %146 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8 %142, i8* %146, align 1
  %147 = load i16, i16* %13, align 8
  %148 = lshr i16 %147, 8
  %149 = trunc i16 %148 to i8
  %150 = load i8*, i8** %14, align 8
  %151 = load i64, i64* %15, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %15, align 8
  %153 = getelementptr inbounds i8, i8* %150, i64 %151
  store i8 %149, i8* %153, align 1
  %154 = load i32, i32* %12, align 4
  %155 = sub nsw i32 16, %154
  %156 = lshr i32 %136, %155
  %157 = trunc i32 %156 to i16
  store i16 %157, i16* %13, align 8
  %158 = add nsw i32 %132, -16
  %159 = add nsw i32 %158, %154
  br label %162

160:                                              ; preds = %128
  %161 = add nsw i32 %129, %132
  br label %162

162:                                              ; preds = %160, %141
  %163 = phi i16 [ %140, %160 ], [ %157, %141 ]
  %164 = phi i32 [ %161, %160 ], [ %159, %141 ]
  store i32 %164, i32* %12, align 4
  %165 = icmp sgt i32 %164, 14
  %166 = add i32 %130, 65533
  %167 = and i32 %166, 65535
  %168 = shl i32 %167, %164
  %169 = trunc i32 %168 to i16
  %170 = or i16 %163, %169
  store i16 %170, i16* %13, align 8
  br i1 %165, label %171, label %189

171:                                              ; preds = %162
  %172 = trunc i16 %170 to i8
  %173 = load i8*, i8** %14, align 8
  %174 = load i64, i64* %15, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %15, align 8
  %176 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8 %172, i8* %176, align 1
  %177 = load i16, i16* %13, align 8
  %178 = lshr i16 %177, 8
  %179 = trunc i16 %178 to i8
  %180 = load i8*, i8** %14, align 8
  %181 = load i64, i64* %15, align 8
  %182 = add i64 %181, 1
  store i64 %182, i64* %15, align 8
  %183 = getelementptr inbounds i8, i8* %180, i64 %181
  store i8 %179, i8* %183, align 1
  %184 = load i32, i32* %12, align 4
  %185 = sub nsw i32 16, %184
  %186 = lshr i32 %167, %185
  %187 = trunc i32 %186 to i16
  store i16 %187, i16* %13, align 8
  %188 = add nsw i32 %184, -14
  br label %317

189:                                              ; preds = %162
  %190 = add nsw i32 %164, 2
  br label %317

191:                                              ; preds = %84
  %192 = icmp slt i32 %35, 11
  br i1 %192, label %193, label %255

193:                                              ; preds = %191
  %194 = load i16, i16* %20, align 2
  %195 = zext i16 %194 to i32
  %196 = load i32, i32* %12, align 4
  %197 = sub nsw i32 16, %195
  %198 = icmp sgt i32 %196, %197
  %199 = load i16, i16* %21, align 4
  %200 = zext i16 %199 to i32
  %201 = shl i32 %200, %196
  %202 = load i16, i16* %13, align 8
  %203 = trunc i32 %201 to i16
  %204 = or i16 %202, %203
  store i16 %204, i16* %13, align 8
  br i1 %198, label %205, label %224

205:                                              ; preds = %193
  %206 = trunc i16 %204 to i8
  %207 = load i8*, i8** %14, align 8
  %208 = load i64, i64* %15, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %15, align 8
  %210 = getelementptr inbounds i8, i8* %207, i64 %208
  store i8 %206, i8* %210, align 1
  %211 = load i16, i16* %13, align 8
  %212 = lshr i16 %211, 8
  %213 = trunc i16 %212 to i8
  %214 = load i8*, i8** %14, align 8
  %215 = load i64, i64* %15, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %15, align 8
  %217 = getelementptr inbounds i8, i8* %214, i64 %215
  store i8 %213, i8* %217, align 1
  %218 = load i32, i32* %12, align 4
  %219 = sub nsw i32 16, %218
  %220 = lshr i32 %200, %219
  %221 = trunc i32 %220 to i16
  store i16 %221, i16* %13, align 8
  %222 = add nsw i32 %195, -16
  %223 = add nsw i32 %222, %218
  br label %226

224:                                              ; preds = %193
  %225 = add nsw i32 %196, %195
  br label %226

226:                                              ; preds = %224, %205
  %227 = phi i16 [ %204, %224 ], [ %221, %205 ]
  %228 = phi i32 [ %225, %224 ], [ %223, %205 ]
  store i32 %228, i32* %12, align 4
  %229 = icmp sgt i32 %228, 13
  %230 = add nsw i32 %28, 65534
  %231 = and i32 %230, 65535
  %232 = shl i32 %231, %228
  %233 = trunc i32 %232 to i16
  %234 = or i16 %227, %233
  store i16 %234, i16* %13, align 8
  br i1 %229, label %235, label %253

235:                                              ; preds = %226
  %236 = trunc i16 %234 to i8
  %237 = load i8*, i8** %14, align 8
  %238 = load i64, i64* %15, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %15, align 8
  %240 = getelementptr inbounds i8, i8* %237, i64 %238
  store i8 %236, i8* %240, align 1
  %241 = load i16, i16* %13, align 8
  %242 = lshr i16 %241, 8
  %243 = trunc i16 %242 to i8
  %244 = load i8*, i8** %14, align 8
  %245 = load i64, i64* %15, align 8
  %246 = add i64 %245, 1
  store i64 %246, i64* %15, align 8
  %247 = getelementptr inbounds i8, i8* %244, i64 %245
  store i8 %243, i8* %247, align 1
  %248 = load i32, i32* %12, align 4
  %249 = sub nsw i32 16, %248
  %250 = lshr i32 %231, %249
  %251 = trunc i32 %250 to i16
  store i16 %251, i16* %13, align 8
  %252 = add nsw i32 %248, -13
  br label %317

253:                                              ; preds = %226
  %254 = add nsw i32 %228, 3
  br label %317

255:                                              ; preds = %191
  %256 = load i16, i16* %18, align 2
  %257 = zext i16 %256 to i32
  %258 = load i32, i32* %12, align 4
  %259 = sub nsw i32 16, %257
  %260 = icmp sgt i32 %258, %259
  %261 = load i16, i16* %19, align 4
  %262 = zext i16 %261 to i32
  %263 = shl i32 %262, %258
  %264 = load i16, i16* %13, align 8
  %265 = trunc i32 %263 to i16
  %266 = or i16 %264, %265
  store i16 %266, i16* %13, align 8
  br i1 %260, label %267, label %286

267:                                              ; preds = %255
  %268 = trunc i16 %266 to i8
  %269 = load i8*, i8** %14, align 8
  %270 = load i64, i64* %15, align 8
  %271 = add i64 %270, 1
  store i64 %271, i64* %15, align 8
  %272 = getelementptr inbounds i8, i8* %269, i64 %270
  store i8 %268, i8* %272, align 1
  %273 = load i16, i16* %13, align 8
  %274 = lshr i16 %273, 8
  %275 = trunc i16 %274 to i8
  %276 = load i8*, i8** %14, align 8
  %277 = load i64, i64* %15, align 8
  %278 = add i64 %277, 1
  store i64 %278, i64* %15, align 8
  %279 = getelementptr inbounds i8, i8* %276, i64 %277
  store i8 %275, i8* %279, align 1
  %280 = load i32, i32* %12, align 4
  %281 = sub nsw i32 16, %280
  %282 = lshr i32 %262, %281
  %283 = trunc i32 %282 to i16
  store i16 %283, i16* %13, align 8
  %284 = add nsw i32 %257, -16
  %285 = add nsw i32 %284, %280
  br label %288

286:                                              ; preds = %255
  %287 = add nsw i32 %258, %257
  br label %288

288:                                              ; preds = %286, %267
  %289 = phi i16 [ %266, %286 ], [ %283, %267 ]
  %290 = phi i32 [ %287, %286 ], [ %285, %267 ]
  store i32 %290, i32* %12, align 4
  %291 = icmp sgt i32 %290, 9
  %292 = add nuw i32 %28, 65526
  %293 = and i32 %292, 65535
  %294 = shl i32 %293, %290
  %295 = trunc i32 %294 to i16
  %296 = or i16 %289, %295
  store i16 %296, i16* %13, align 8
  br i1 %291, label %297, label %315

297:                                              ; preds = %288
  %298 = trunc i16 %296 to i8
  %299 = load i8*, i8** %14, align 8
  %300 = load i64, i64* %15, align 8
  %301 = add i64 %300, 1
  store i64 %301, i64* %15, align 8
  %302 = getelementptr inbounds i8, i8* %299, i64 %300
  store i8 %298, i8* %302, align 1
  %303 = load i16, i16* %13, align 8
  %304 = lshr i16 %303, 8
  %305 = trunc i16 %304 to i8
  %306 = load i8*, i8** %14, align 8
  %307 = load i64, i64* %15, align 8
  %308 = add i64 %307, 1
  store i64 %308, i64* %15, align 8
  %309 = getelementptr inbounds i8, i8* %306, i64 %307
  store i8 %305, i8* %309, align 1
  %310 = load i32, i32* %12, align 4
  %311 = sub nsw i32 16, %310
  %312 = lshr i32 %293, %311
  %313 = trunc i32 %312 to i16
  store i16 %313, i16* %13, align 8
  %314 = add nsw i32 %310, -9
  br label %317

315:                                              ; preds = %288
  %316 = add nsw i32 %290, 7
  br label %317

317:                                              ; preds = %297, %315, %235, %253, %171, %189
  %318 = phi i32 [ %190, %189 ], [ %188, %171 ], [ %254, %253 ], [ %252, %235 ], [ %316, %315 ], [ %314, %297 ]
  store i32 %318, i32* %12, align 4
  br label %319

319:                                              ; preds = %80, %317
  %320 = icmp eq i16 %33, 0
  br i1 %320, label %324, label %321

321:                                              ; preds = %319
  %322 = select i1 %37, i32 3, i32 4
  %323 = select i1 %37, i32 6, i32 7
  br label %324

324:                                              ; preds = %321, %319, %24
  %325 = phi i32 [ %30, %24 ], [ 3, %319 ], [ %322, %321 ]
  %326 = phi i32 [ %29, %24 ], [ 138, %319 ], [ %323, %321 ]
  %327 = phi i32 [ %35, %24 ], [ 0, %319 ], [ 0, %321 ]
  %328 = phi i32 [ %26, %24 ], [ %27, %319 ], [ %27, %321 ]
  %329 = icmp eq i64 %31, %23
  br i1 %329, label %330, label %24

330:                                              ; preds = %324, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
