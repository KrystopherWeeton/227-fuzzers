; ModuleID = '../../third_party/pdfium/core/fxcrt/xml/cfx_xmldocument.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/xml/cfx_xmldocument.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_XMLDocument = type { %"class.std::__1::vector", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type { %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_XMLElement* }
%class.CFX_XMLElement = type { %class.CFX_XMLNode, %"class.fxcrt::WideString", %"class.std::__1::map" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15CFX_XMLDocument10CreateNodeI14CFX_XMLElementJRA5_KwEEEPT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS5_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS5_EESG_SG_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@.str = private unnamed_addr constant [5 x i32] [i32 114, i32 111, i32 111, i32 116, i32 0], align 4

@_ZN15CFX_XMLDocumentC1Ev = hidden unnamed_addr alias void (%class.CFX_XMLDocument*), void (%class.CFX_XMLDocument*)* @_ZN15CFX_XMLDocumentC2Ev
@_ZN15CFX_XMLDocumentD1Ev = hidden unnamed_addr alias void (%class.CFX_XMLDocument*), void (%class.CFX_XMLDocument*)* @_ZN15CFX_XMLDocumentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_XMLDocumentC2Ev(%class.CFX_XMLDocument*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 1, i32 0
  %3 = bitcast %class.CFX_XMLDocument* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  %4 = tail call %class.CFX_XMLElement* @_ZN15CFX_XMLDocument10CreateNodeI14CFX_XMLElementJRA5_KwEEEPT_DpOT0_(%class.CFX_XMLDocument* %0, [5 x i32]* nonnull dereferenceable(20) @.str)
  store %class.CFX_XMLElement* %4, %class.CFX_XMLElement** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CFX_XMLElement* @_ZN15CFX_XMLDocument10CreateNodeI14CFX_XMLElementJRA5_KwEEEPT_DpOT0_(%class.CFX_XMLDocument*, [5 x i32]* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = tail call i8* @_Znwm(i64 80) #10
  %7 = bitcast i8* %6 to %class.CFX_XMLElement*
  %8 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds [5 x i32], [5 x i32]* %1, i64 0, i64 0
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %3, i32* %9) #9
  call void @_ZN14CFX_XMLElementC1ERKN5fxcrt10WideStringE(%class.CFX_XMLElement* nonnull %7, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %10 = ptrtoint i8* %6 to i64
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = icmp ult %"class.std::__1::unique_ptr"* %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %18, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %10, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %25

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %24, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #9
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %26, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %26, align 8
  %28 = icmp eq %class.CFX_XMLNode* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %class.CFX_XMLNode* %27 to void (%class.CFX_XMLNode*)***
  %31 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %31, i64 1
  %33 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %32, align 8
  call void %33(%class.CFX_XMLNode* nonnull %27) #9
  br label %34

34:                                               ; preds = %29, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 -1, i32 0, i32 0, i32 0
  %37 = bitcast %class.CFX_XMLNode** %36 to %class.CFX_XMLElement**
  %38 = load %class.CFX_XMLElement*, %class.CFX_XMLElement** %37, align 8
  ret %class.CFX_XMLElement* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_XMLDocumentD2Ev(%class.CFX_XMLDocument* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %7 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"class.std::__1::unique_ptr"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %13, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %13, align 8
  %15 = icmp eq %class.CFX_XMLNode* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.CFX_XMLNode* %14 to void (%class.CFX_XMLNode*)***
  %18 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %18, i64 1
  %20 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %19, align 8
  tail call void %20(%class.CFX_XMLNode* nonnull %14) #9
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.std::__1::unique_ptr"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %class.CFX_XMLDocument* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_XMLDocument15AppendNodesFromEPS_(%class.CFX_XMLDocument*, %class.CFX_XMLDocument* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.CFX_XMLDocument* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.CFX_XMLDocument* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = add nsw i64 %17, %10
  tail call void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector"* %3, i64 %18)
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %20 = getelementptr inbounds %class.CFX_XMLDocument, %class.CFX_XMLDocument* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %23 = tail call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS5_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS5_EESG_SG_(%"class.std::__1::vector"* %3, %"class.std::__1::unique_ptr"* %19, %"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %22)
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr"* %25, %24
  br i1 %26, label %40, label %27

27:                                               ; preds = %2, %38
  %28 = phi %"class.std::__1::unique_ptr"* [ %29, %38 ], [ %25, %2 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %30, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %30, align 8
  %32 = icmp eq %class.CFX_XMLNode* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.CFX_XMLNode* %31 to void (%class.CFX_XMLNode*)***
  %35 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %35, i64 1
  %37 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %36, align 8
  tail call void %37(%class.CFX_XMLNode* nonnull %31) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = icmp eq %"class.std::__1::unique_ptr"* %29, %24
  br i1 %39, label %40, label %27

40:                                               ; preds = %38, %2
  store %"class.std::__1::unique_ptr"* %24, %"class.std::__1::unique_ptr"** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr"*
  br i1 %10, label %12, label %135

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %class.CFX_XMLNode** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !2

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %130

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr"* %114, %115
  br i1 %116, label %130, label %117

117:                                              ; preds = %110, %128
  %118 = phi %"class.std::__1::unique_ptr"* [ %119, %128 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %120, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %120, align 8
  %122 = icmp eq %class.CFX_XMLNode* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = bitcast %class.CFX_XMLNode* %121 to void (%class.CFX_XMLNode*)***
  %125 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %125, i64 1
  %127 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %126, align 8
  tail call void %127(%class.CFX_XMLNode* nonnull %121) #9
  br label %128

128:                                              ; preds = %123, %117
  %129 = icmp eq %"class.std::__1::unique_ptr"* %119, %115
  br i1 %129, label %130, label %117

130:                                              ; preds = %128, %57, %110
  %131 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %128 ]
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = inttoptr i64 %131 to i8*
  tail call void @_ZdlPv(i8* %134) #10
  br label %135

135:                                              ; preds = %133, %130, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS5_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISG_E9referenceEEE5valueESD_E4typeENSB_IPKS5_EESG_SG_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %568

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  br i1 %21, label %252, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %class.CFX_XMLNode** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::unique_ptr"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %44, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !4

51:                                               ; preds = %39, %30
  %52 = phi %"class.std::__1::unique_ptr"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.std::__1::unique_ptr"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.std::__1::unique_ptr"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.std::__1::unique_ptr"* %57 to i64*
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %60, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 1
  %65 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %66, align 8
  store i64 %68, i64* %65, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 2
  %71 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %72, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 3
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 3
  %77 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %78, align 8
  store i64 %80, i64* %77, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 4
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 4
  %83 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %84, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 5
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 5
  %89 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %90, align 8
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 6
  %95 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %96, align 8
  store i64 %98, i64* %95, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 7
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 7
  %101 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %102, align 8
  store i64 %104, i64* %101, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 8
  %107 = icmp eq %"class.std::__1::unique_ptr"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.std::__1::unique_ptr"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.std::__1::unique_ptr"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %568

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.std::__1::unique_ptr"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.std::__1::unique_ptr"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.std::__1::unique_ptr"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %10
  %121 = ptrtoint %"class.std::__1::unique_ptr"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %123
  %125 = icmp ult %"class.std::__1::unique_ptr"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %class.CFX_XMLNode** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.std::__1::unique_ptr"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.std::__1::unique_ptr"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !5

149:                                              ; preds = %137, %126
  %150 = phi %"class.std::__1::unique_ptr"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.std::__1::unique_ptr"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.std::__1::unique_ptr"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %179

154:                                              ; preds = %179, %149
  %155 = phi %"class.std::__1::unique_ptr"* [ %152, %149 ], [ %229, %179 ]
  %156 = ptrtoint %"class.std::__1::unique_ptr"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %231, label %160

160:                                              ; preds = %157, %177
  %161 = phi %"class.std::__1::unique_ptr"* [ %164, %177 ], [ %118, %157 ]
  %162 = phi %"class.std::__1::unique_ptr"* [ %163, %177 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 -1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %165, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 0, i32 0, i32 0, i32 0
  %169 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %class.CFX_XMLNode* %169, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %160
  %173 = bitcast %class.CFX_XMLNode* %169 to void (%class.CFX_XMLNode*)***
  %174 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %174, i64 1
  %176 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %175, align 8
  tail call void %176(%class.CFX_XMLNode* nonnull %169) #9
  br label %177

177:                                              ; preds = %172, %160
  %178 = icmp eq %"class.std::__1::unique_ptr"* %163, %1
  br i1 %178, label %231, label %160

179:                                              ; preds = %149, %179
  %180 = phi %"class.std::__1::unique_ptr"* [ %229, %179 ], [ %150, %149 ]
  %181 = phi %"class.std::__1::unique_ptr"* [ %228, %179 ], [ %151, %149 ]
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %182, align 8
  %185 = bitcast %"class.std::__1::unique_ptr"* %180 to i64*
  store i64 %184, i64* %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 1
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 1
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %186, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  %190 = load i64, i64* %189, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %188, align 8
  %191 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 2
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 2
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  %196 = load i64, i64* %195, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %194, align 8
  %197 = bitcast %"class.std::__1::unique_ptr"* %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 3
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 3
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 0, i32 0, i32 0, i32 0
  %201 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  %202 = load i64, i64* %201, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %200, align 8
  %203 = bitcast %"class.std::__1::unique_ptr"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 4
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 4
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %204, i64 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::unique_ptr"* %204 to i64*
  %208 = load i64, i64* %207, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %206, align 8
  %209 = bitcast %"class.std::__1::unique_ptr"* %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 5
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 5
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr"* %210 to i64*
  %214 = load i64, i64* %213, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr"* %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 6
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 6
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  %220 = load i64, i64* %219, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %218, align 8
  %221 = bitcast %"class.std::__1::unique_ptr"* %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 7
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 7
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 0, i32 0, i32 0, i32 0
  %225 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %226 = load i64, i64* %225, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %224, align 8
  %227 = bitcast %"class.std::__1::unique_ptr"* %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 8
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 8
  %230 = icmp ult %"class.std::__1::unique_ptr"* %228, %17
  br i1 %230, label %179, label %154

231:                                              ; preds = %177, %157
  %232 = icmp eq %"class.std::__1::unique_ptr"* %119, %2
  br i1 %232, label %568, label %233

233:                                              ; preds = %231, %248
  %234 = phi %"class.std::__1::unique_ptr"* [ %250, %248 ], [ %1, %231 ]
  %235 = phi %"class.std::__1::unique_ptr"* [ %249, %248 ], [ %2, %231 ]
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.std::__1::unique_ptr"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %236, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %240 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %239, align 8
  %241 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %238, i64* %241, align 8
  %242 = icmp eq %class.CFX_XMLNode* %240, null
  br i1 %242, label %248, label %243

243:                                              ; preds = %233
  %244 = bitcast %class.CFX_XMLNode* %240 to void (%class.CFX_XMLNode*)***
  %245 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %244, align 8
  %246 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %245, i64 1
  %247 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %246, align 8
  tail call void %247(%class.CFX_XMLNode* nonnull %240) #9
  br label %248

248:                                              ; preds = %243, %233
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %235, i64 1
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 1
  %251 = icmp eq %"class.std::__1::unique_ptr"* %249, %119
  br i1 %251, label %568, label %233

252:                                              ; preds = %12
  %253 = bitcast %"class.std::__1::vector"* %0 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = sub i64 %18, %254
  %256 = ashr exact i64 %255, 3
  %257 = add nsw i64 %256, %10
  %258 = icmp ugt i64 %257, 2305843009213693951
  br i1 %258, label %259, label %261

259:                                              ; preds = %252
  %260 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %260) #11
  unreachable

261:                                              ; preds = %252
  %262 = sub i64 %15, %254
  %263 = ashr exact i64 %262, 3
  %264 = icmp ult i64 %263, 1152921504606846975
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = sub i64 %6, %254
  %267 = ashr exact i64 %266, 3
  br label %278

268:                                              ; preds = %261
  %269 = ashr exact i64 %262, 2
  %270 = icmp ult i64 %269, %257
  %271 = select i1 %270, i64 %257, i64 %269
  %272 = sub i64 %6, %254
  %273 = ashr exact i64 %272, 3
  %274 = icmp eq i64 %271, 0
  br i1 %274, label %284, label %275

275:                                              ; preds = %268
  %276 = icmp ugt i64 %271, 2305843009213693951
  br i1 %276, label %277, label %278

277:                                              ; preds = %275
  tail call void @abort() #11
  unreachable

278:                                              ; preds = %265, %275
  %279 = phi i64 [ 2305843009213693951, %265 ], [ %271, %275 ]
  %280 = phi i64 [ %267, %265 ], [ %273, %275 ]
  %281 = shl i64 %279, 3
  %282 = tail call i8* @_Znwm(i64 %281) #10
  %283 = bitcast i8* %282 to %"class.std::__1::unique_ptr"*
  br label %284

284:                                              ; preds = %278, %268
  %285 = phi i64 [ %280, %278 ], [ %273, %268 ]
  %286 = phi i64 [ %279, %278 ], [ 0, %268 ]
  %287 = phi %"class.std::__1::unique_ptr"* [ %283, %278 ], [ null, %268 ]
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 %285
  %289 = ptrtoint %"class.std::__1::unique_ptr"* %288 to i64
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 %286
  %291 = ptrtoint %"class.std::__1::unique_ptr"* %290 to i64
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %288, i64 %10
  %293 = add i64 %9, -8
  %294 = lshr i64 %293, 3
  %295 = add nuw nsw i64 %294, 1
  %296 = and i64 %295, 7
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %284, %298
  %299 = phi %"class.std::__1::unique_ptr"* [ %307, %298 ], [ %288, %284 ]
  %300 = phi i64 [ %308, %298 ], [ %289, %284 ]
  %301 = phi %"class.std::__1::unique_ptr"* [ %309, %298 ], [ %2, %284 ]
  %302 = phi i64 [ %310, %298 ], [ %296, %284 ]
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 0, i32 0, i32 0, i32 0
  %304 = bitcast %"class.std::__1::unique_ptr"* %301 to i64*
  %305 = load i64, i64* %304, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %303, align 8
  %306 = inttoptr i64 %300 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %299, i64 1
  %308 = ptrtoint %"class.std::__1::unique_ptr"* %307 to i64
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 1
  %310 = add i64 %302, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %298, !llvm.loop !6

312:                                              ; preds = %298
  %313 = ptrtoint %"class.std::__1::unique_ptr"* %307 to i64
  br label %314

314:                                              ; preds = %284, %312
  %315 = phi %"class.std::__1::unique_ptr"* [ %288, %284 ], [ %307, %312 ]
  %316 = phi i64 [ %289, %284 ], [ %313, %312 ]
  %317 = phi %"class.std::__1::unique_ptr"* [ %2, %284 ], [ %309, %312 ]
  %318 = icmp ult i64 %293, 56
  br i1 %318, label %373, label %319

319:                                              ; preds = %314, %319
  %320 = phi %"class.std::__1::unique_ptr"* [ %369, %319 ], [ %315, %314 ]
  %321 = phi i64 [ %370, %319 ], [ %316, %314 ]
  %322 = phi %"class.std::__1::unique_ptr"* [ %371, %319 ], [ %317, %314 ]
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %323, align 8
  %326 = inttoptr i64 %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 1
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 1
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::unique_ptr"* %328 to i64*
  %331 = load i64, i64* %330, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %329, align 8
  %332 = bitcast %"class.std::__1::unique_ptr"* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 2
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 2
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::unique_ptr"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %335, align 8
  %338 = bitcast %"class.std::__1::unique_ptr"* %333 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 3
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 3
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::unique_ptr"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %341, align 8
  %344 = bitcast %"class.std::__1::unique_ptr"* %339 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 4
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 4
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %346, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::unique_ptr"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %347, align 8
  %350 = bitcast %"class.std::__1::unique_ptr"* %345 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 5
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 5
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.std::__1::unique_ptr"* %352 to i64*
  %355 = load i64, i64* %354, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %353, align 8
  %356 = bitcast %"class.std::__1::unique_ptr"* %351 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 6
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 6
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.std::__1::unique_ptr"* %358 to i64*
  %361 = load i64, i64* %360, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %359, align 8
  %362 = bitcast %"class.std::__1::unique_ptr"* %357 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 7
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 7
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %364, i64 0, i32 0, i32 0, i32 0
  %366 = bitcast %"class.std::__1::unique_ptr"* %364 to i64*
  %367 = load i64, i64* %366, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %365, align 8
  %368 = bitcast %"class.std::__1::unique_ptr"* %363 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 8
  %370 = ptrtoint %"class.std::__1::unique_ptr"* %369 to i64
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 8
  %372 = icmp eq %"class.std::__1::unique_ptr"* %292, %369
  br i1 %372, label %373, label %319

373:                                              ; preds = %319, %314
  %374 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %375 = icmp eq %"class.std::__1::unique_ptr"* %374, %1
  br i1 %375, label %457, label %376

376:                                              ; preds = %373
  %377 = ptrtoint %"class.std::__1::unique_ptr"* %374 to i64
  %378 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %379 = ptrtoint %class.CFX_XMLNode** %378 to i64
  %380 = sub i64 %379, %377
  %381 = lshr i64 %380, 3
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 7
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %397, label %385

385:                                              ; preds = %376, %385
  %386 = phi %"class.std::__1::unique_ptr"* [ %389, %385 ], [ %288, %376 ]
  %387 = phi %"class.std::__1::unique_ptr"* [ %390, %385 ], [ %1, %376 ]
  %388 = phi i64 [ %395, %385 ], [ %383, %376 ]
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %386, i64 -1
  %390 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %387, i64 -1
  %391 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %390, i64 0, i32 0, i32 0, i32 0
  %392 = bitcast %"class.std::__1::unique_ptr"* %390 to i64*
  %393 = load i64, i64* %392, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %391, align 8
  %394 = bitcast %"class.std::__1::unique_ptr"* %389 to i64*
  store i64 %393, i64* %394, align 8
  %395 = add i64 %388, -1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %385, !llvm.loop !7

397:                                              ; preds = %385, %376
  %398 = phi %"class.std::__1::unique_ptr"* [ undef, %376 ], [ %389, %385 ]
  %399 = phi %"class.std::__1::unique_ptr"* [ %288, %376 ], [ %389, %385 ]
  %400 = phi %"class.std::__1::unique_ptr"* [ %1, %376 ], [ %390, %385 ]
  %401 = icmp ult i64 %380, 56
  br i1 %401, label %454, label %402

402:                                              ; preds = %397, %402
  %403 = phi %"class.std::__1::unique_ptr"* [ %447, %402 ], [ %399, %397 ]
  %404 = phi %"class.std::__1::unique_ptr"* [ %448, %402 ], [ %400, %397 ]
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -1
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -1
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.std::__1::unique_ptr"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %407, align 8
  %410 = bitcast %"class.std::__1::unique_ptr"* %405 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -2
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -2
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %412, i64 0, i32 0, i32 0, i32 0
  %414 = bitcast %"class.std::__1::unique_ptr"* %412 to i64*
  %415 = load i64, i64* %414, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %413, align 8
  %416 = bitcast %"class.std::__1::unique_ptr"* %411 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -3
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -3
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %418, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %419, align 8
  %422 = bitcast %"class.std::__1::unique_ptr"* %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -4
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -4
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::unique_ptr"* %424 to i64*
  %427 = load i64, i64* %426, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %425, align 8
  %428 = bitcast %"class.std::__1::unique_ptr"* %423 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -5
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -5
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::unique_ptr"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %431, align 8
  %434 = bitcast %"class.std::__1::unique_ptr"* %429 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -6
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -6
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.std::__1::unique_ptr"* %436 to i64*
  %439 = load i64, i64* %438, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %437, align 8
  %440 = bitcast %"class.std::__1::unique_ptr"* %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -7
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -7
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = bitcast %"class.std::__1::unique_ptr"* %442 to i64*
  %445 = load i64, i64* %444, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %443, align 8
  %446 = bitcast %"class.std::__1::unique_ptr"* %441 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -8
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -8
  %449 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %448, i64 0, i32 0, i32 0, i32 0
  %450 = bitcast %"class.std::__1::unique_ptr"* %448 to i64*
  %451 = load i64, i64* %450, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %449, align 8
  %452 = bitcast %"class.std::__1::unique_ptr"* %447 to i64*
  store i64 %451, i64* %452, align 8
  %453 = icmp eq %"class.std::__1::unique_ptr"* %448, %374
  br i1 %453, label %454, label %402

454:                                              ; preds = %402, %397
  %455 = phi %"class.std::__1::unique_ptr"* [ %398, %397 ], [ %447, %402 ]
  %456 = ptrtoint %"class.std::__1::unique_ptr"* %455 to i64
  br label %457

457:                                              ; preds = %454, %373
  %458 = phi i64 [ %289, %373 ], [ %456, %454 ]
  %459 = phi %"class.std::__1::unique_ptr"* [ %288, %373 ], [ %455, %454 ]
  %460 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %461 = icmp eq %"class.std::__1::unique_ptr"* %460, %1
  br i1 %461, label %487, label %462

462:                                              ; preds = %457
  %463 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %460, i64 -1, i32 0, i32 0, i32 0
  %464 = ptrtoint %class.CFX_XMLNode** %463 to i64
  %465 = sub i64 %464, %6
  %466 = lshr i64 %465, 3
  %467 = add nuw nsw i64 %466, 1
  %468 = and i64 %467, 7
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %482, label %470

470:                                              ; preds = %462, %470
  %471 = phi %"class.std::__1::unique_ptr"* [ %479, %470 ], [ %292, %462 ]
  %472 = phi %"class.std::__1::unique_ptr"* [ %478, %470 ], [ %1, %462 ]
  %473 = phi i64 [ %480, %470 ], [ %468, %462 ]
  %474 = bitcast %"class.std::__1::unique_ptr"* %471 to i64*
  %475 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %472, i64 0, i32 0, i32 0, i32 0
  %476 = bitcast %"class.std::__1::unique_ptr"* %472 to i64*
  %477 = load i64, i64* %476, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %475, align 8
  store i64 %477, i64* %474, align 8
  %478 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %472, i64 1
  %479 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 1
  %480 = add i64 %473, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %470, !llvm.loop !8

482:                                              ; preds = %470, %462
  %483 = phi %"class.std::__1::unique_ptr"* [ undef, %462 ], [ %479, %470 ]
  %484 = phi %"class.std::__1::unique_ptr"* [ %292, %462 ], [ %479, %470 ]
  %485 = phi %"class.std::__1::unique_ptr"* [ %1, %462 ], [ %478, %470 ]
  %486 = icmp ult i64 %465, 56
  br i1 %486, label %541, label %489

487:                                              ; preds = %457
  %488 = ptrtoint %"class.std::__1::unique_ptr"* %459 to i64
  br label %544

489:                                              ; preds = %482, %489
  %490 = phi %"class.std::__1::unique_ptr"* [ %539, %489 ], [ %484, %482 ]
  %491 = phi %"class.std::__1::unique_ptr"* [ %538, %489 ], [ %485, %482 ]
  %492 = bitcast %"class.std::__1::unique_ptr"* %490 to i64*
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr"* %491 to i64*
  %495 = load i64, i64* %494, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %493, align 8
  store i64 %495, i64* %492, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 1
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 1
  %498 = bitcast %"class.std::__1::unique_ptr"* %497 to i64*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %496, i64 0, i32 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::unique_ptr"* %496 to i64*
  %501 = load i64, i64* %500, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %499, align 8
  store i64 %501, i64* %498, align 8
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 2
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 2
  %504 = bitcast %"class.std::__1::unique_ptr"* %503 to i64*
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %502, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.std::__1::unique_ptr"* %502 to i64*
  %507 = load i64, i64* %506, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %505, align 8
  store i64 %507, i64* %504, align 8
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 3
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 3
  %510 = bitcast %"class.std::__1::unique_ptr"* %509 to i64*
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %508, i64 0, i32 0, i32 0, i32 0
  %512 = bitcast %"class.std::__1::unique_ptr"* %508 to i64*
  %513 = load i64, i64* %512, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %511, align 8
  store i64 %513, i64* %510, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 4
  %515 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 4
  %516 = bitcast %"class.std::__1::unique_ptr"* %515 to i64*
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = bitcast %"class.std::__1::unique_ptr"* %514 to i64*
  %519 = load i64, i64* %518, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %517, align 8
  store i64 %519, i64* %516, align 8
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 5
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 5
  %522 = bitcast %"class.std::__1::unique_ptr"* %521 to i64*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %520, i64 0, i32 0, i32 0, i32 0
  %524 = bitcast %"class.std::__1::unique_ptr"* %520 to i64*
  %525 = load i64, i64* %524, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %523, align 8
  store i64 %525, i64* %522, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 6
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 6
  %528 = bitcast %"class.std::__1::unique_ptr"* %527 to i64*
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %526, i64 0, i32 0, i32 0, i32 0
  %530 = bitcast %"class.std::__1::unique_ptr"* %526 to i64*
  %531 = load i64, i64* %530, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %529, align 8
  store i64 %531, i64* %528, align 8
  %532 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 7
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 7
  %534 = bitcast %"class.std::__1::unique_ptr"* %533 to i64*
  %535 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %532, i64 0, i32 0, i32 0, i32 0
  %536 = bitcast %"class.std::__1::unique_ptr"* %532 to i64*
  %537 = load i64, i64* %536, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %535, align 8
  store i64 %537, i64* %534, align 8
  %538 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 8
  %539 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 8
  %540 = icmp eq %"class.std::__1::unique_ptr"* %538, %460
  br i1 %540, label %541, label %489

541:                                              ; preds = %489, %482
  %542 = phi %"class.std::__1::unique_ptr"* [ %483, %482 ], [ %539, %489 ]
  %543 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br label %544

544:                                              ; preds = %541, %487
  %545 = phi %"class.std::__1::unique_ptr"* [ %1, %487 ], [ %543, %541 ]
  %546 = phi %"class.std::__1::unique_ptr"* [ %292, %487 ], [ %542, %541 ]
  %547 = phi i64 [ %488, %487 ], [ %458, %541 ]
  %548 = ptrtoint %"class.std::__1::unique_ptr"* %546 to i64
  %549 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  store i64 %547, i64* %253, align 8
  store i64 %548, i64* %22, align 8
  store i64 %291, i64* %14, align 8
  %550 = icmp eq %"class.std::__1::unique_ptr"* %545, %549
  br i1 %550, label %564, label %551

551:                                              ; preds = %544, %562
  %552 = phi %"class.std::__1::unique_ptr"* [ %553, %562 ], [ %545, %544 ]
  %553 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %552, i64 -1
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %554, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %554, align 8
  %556 = icmp eq %class.CFX_XMLNode* %555, null
  br i1 %556, label %562, label %557

557:                                              ; preds = %551
  %558 = bitcast %class.CFX_XMLNode* %555 to void (%class.CFX_XMLNode*)***
  %559 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %558, align 8
  %560 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %559, i64 1
  %561 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %560, align 8
  tail call void %561(%class.CFX_XMLNode* nonnull %555) #9
  br label %562

562:                                              ; preds = %557, %551
  %563 = icmp eq %"class.std::__1::unique_ptr"* %553, %549
  br i1 %563, label %564, label %551

564:                                              ; preds = %562, %544
  %565 = icmp eq %"class.std::__1::unique_ptr"* %549, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %564
  %567 = bitcast %"class.std::__1::unique_ptr"* %549 to i8*
  tail call void @_ZdlPv(i8* %567) #10
  br label %568

568:                                              ; preds = %248, %566, %564, %111, %231, %4
  %569 = phi %"class.std::__1::unique_ptr"* [ %1, %4 ], [ %1, %231 ], [ %1, %111 ], [ %288, %564 ], [ %288, %566 ], [ %1, %248 ]
  ret %"class.std::__1::unique_ptr"* %569
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_XMLNodeNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_XMLNode** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %142, align 8
  store %class.CFX_XMLNode* null, %class.CFX_XMLNode** %142, align 8
  %144 = icmp eq %class.CFX_XMLNode* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %class.CFX_XMLNode* %143 to void (%class.CFX_XMLNode*)***
  %147 = load void (%class.CFX_XMLNode*)**, void (%class.CFX_XMLNode*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %147, i64 1
  %149 = load void (%class.CFX_XMLNode*)*, void (%class.CFX_XMLNode*)** %148, align 8
  tail call void %149(%class.CFX_XMLNode* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"*, i32*) unnamed_addr #7

declare void @_ZN14CFX_XMLElementC1ERKN5fxcrt10WideStringE(%class.CFX_XMLElement*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
