; ModuleID = '../../third_party/ffmpeg/libavformat/oggdec.c'
source_filename = "../../third_party/ffmpeg/libavformat/oggdec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.ogg_codec = type { i8*, i8, i8*, i32 (%struct.AVFormatContext*, i32)*, i32 (%struct.AVFormatContext*, i32)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i32, i32, void (%struct.AVFormatContext*, i32)* }
%struct.ogg = type { %struct.ogg_stream*, i32, i32, i32, i64, %struct.ogg_state* }
%struct.ogg_stream = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i32, %struct.ogg_codec*, i32, i32, i32, [255 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i8* }
%struct.ogg_state = type { i64, i32, %struct.ogg_state*, i32, [1 x %struct.ogg_stream] }

@.str = private unnamed_addr constant [4 x i8] c"ogg\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Ogg\00", align 1
@ff_ogg_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 8960, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* null, i8* null, %struct.AVInputFormat* null, i32 0, i32 40, i32 (%struct.AVProbeData*)* @ogg_probe, i32 (%struct.AVFormatContext*)* @ogg_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @ogg_read_packet, i32 (%struct.AVFormatContext*)* @ogg_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @ogg_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* @ogg_read_timestamp, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"OggS\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"found headers\0A\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Header parsing failed for stream %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"Headers mismatch for stream %d: expected %d received %d.\0A\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"ogg_packet: curidx=%i\0A\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"ogg_packet: idx=%d pstart=%d psize=%d segp=%d nsegs=%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"Codec not found\0A\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"Page at %ld is missing granule\0A\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"Header processing failed: %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Packet processing failed: %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"cannot find sync word\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"CRC mismatch!\0A\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"Invalid Ogg vers!\0A\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"failed to create or replace stream\0A\00", align 1
@.str.16 = private unnamed_addr constant [46 x i8] c"Changing stream parameters in multistream ogg\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"Cannot identify new stream\0A\00", align 1
@ff_opus_codec = external constant %struct.ogg_codec, align 8
@.str.18 = private unnamed_addr constant [90 x i8] c"New streams are not supposed to be added in between Ogg context save/restore operations.\0A\00", align 1
@ff_skeleton_codec = external constant %struct.ogg_codec, align 8
@ff_vorbis_codec = external constant %struct.ogg_codec, align 8
@ff_theora_codec = external constant %struct.ogg_codec, align 8
@ff_flac_codec = external constant %struct.ogg_codec, align 8
@ff_vp8_codec = external constant %struct.ogg_codec, align 8
@ff_old_flac_codec = external constant %struct.ogg_codec, align 8
@ff_ogm_video_codec = external constant %struct.ogg_codec, align 8
@ff_ogm_audio_codec = external constant %struct.ogg_codec, align 8
@ff_ogm_text_codec = external constant %struct.ogg_codec, align 8
@ff_ogm_old_codec = external constant %struct.ogg_codec, align 8
@.str.19 = private unnamed_addr constant [17 x i8] c"invalid pts %ld\0A\00", align 1
@.str.20 = private unnamed_addr constant [47 x i8] c"Broken file, %skeyframe not correctly marked.\0A\00", align 1
@.str.21 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"non-\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"stream_index < ogg->nstreams\00", align 1
@.str.25 = private unnamed_addr constant [46 x i8] c"../../third_party/ffmpeg/libavformat/oggdec.c\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @ogg_probe(%struct.AVProbeData* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = tail call i32 @bcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %3, i64 5)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %3, i64 5
  %8 = load i8, i8* %7, align 1
  %9 = icmp ult i8 %8, 8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1, %6
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i32 [ 0, %10 ], [ 100, %6 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ogg_read_header(%struct.AVFormatContext*) #1 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.ogg**
  %5 = load %struct.ogg*, %struct.ogg** %4, align 8
  %6 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 3
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 2
  br label %8

8:                                                ; preds = %13, %1
  %9 = tail call fastcc i32 @ogg_packet(%struct.AVFormatContext* %0, i32* null, i32* null, i32* null, i64* null)
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @ogg_read_close(%struct.AVFormatContext* %0)
  br label %325

13:                                               ; preds = %8
  %14 = load i32, i32* %7, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %8, label %16

16:                                               ; preds = %13
  %17 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  %18 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %91

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.ogg, %struct.ogg* %5, i64 0, i32 0
  %23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 32
  %24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %25

25:                                               ; preds = %21, %86
  %26 = phi i64 [ 0, %21 ], [ %87, %86 ]
  %27 = load %struct.ogg_stream*, %struct.ogg_stream** %22, align 8
  %28 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %27, i64 %26, i32 16
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = trunc i64 %26 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 %32) #6
  %33 = load %struct.ogg_stream*, %struct.ogg_stream** %22, align 8
  %34 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %33, i64 %26, i32 15
  store %struct.ogg_codec* null, %struct.ogg_codec** %34, align 8
  %35 = load %struct.ogg_stream*, %struct.ogg_stream** %22, align 8
  %36 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %35, i64 %26, i32 30
  %37 = bitcast i8** %36 to i8*
  tail call void @av_freep(i8* %37) #6
  br label %55

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %27, i64 %26, i32 15
  %40 = load %struct.ogg_codec*, %struct.ogg_codec** %39, align 8
  %41 = icmp eq %struct.ogg_codec* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %27, i64 %26, i32 25
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %40, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = trunc i64 %26 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 %49, i32 %46, i32 %44) #6
  %50 = load i32, i32* %23, align 4
  %51 = and i32 %50, 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = tail call i32 @ogg_read_close(%struct.AVFormatContext* %0)
  br label %325

55:                                               ; preds = %48, %38, %42, %31
  %56 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %27, i64 %26, i32 9
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, -1
  br i1 %58, label %86, label %59

59:                                               ; preds = %55
  %60 = load %struct.ogg*, %struct.ogg** %4, align 8
  %61 = getelementptr inbounds %struct.ogg, %struct.ogg* %60, i64 0, i32 0
  %62 = load %struct.ogg_stream*, %struct.ogg_stream** %61, align 8
  %63 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %62, i64 %26, i32 15
  %64 = load %struct.ogg_codec*, %struct.ogg_codec** %63, align 8
  %65 = icmp eq %struct.ogg_codec* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %64, i64 0, i32 5
  %68 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %67, align 8
  %69 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = trunc i64 %26 to i32
  %72 = tail call i64 %68(%struct.AVFormatContext* %0, i32 %71, i64 %57, i64* null) #6
  br label %73

73:                                               ; preds = %59, %66, %70
  %74 = phi i64 [ %72, %70 ], [ %57, %66 ], [ %57, %59 ]
  %75 = icmp slt i64 %74, 0
  %76 = icmp ne i64 %74, -9223372036854775808
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %74) #6
  br label %79

79:                                               ; preds = %73, %78
  %80 = phi i64 [ -9223372036854775808, %78 ], [ %74, %73 ]
  %81 = load %struct.AVStream**, %struct.AVStream*** %24, align 8
  %82 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %81, i64 %26
  %83 = load %struct.AVStream*, %struct.AVStream** %82, align 8
  %84 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %83, i64 0, i32 5
  store i64 %80, i64* %84, align 8
  %85 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %27, i64 %26, i32 10
  store i64 %80, i64* %85, align 8
  br label %86

86:                                               ; preds = %55, %79
  %87 = add nuw nsw i64 %26, 1
  %88 = load i32, i32* %18, align 8
  %89 = sext i32 %88 to i64
  %90 = icmp slt i64 %87, %89
  br i1 %90, label %25, label %91

91:                                               ; preds = %86, %16
  %92 = load %struct.ogg*, %struct.ogg** %4, align 8
  %93 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #6
  store i32 -1431655766, i32* %2, align 4
  %94 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %95 = load %struct.AVIOContext*, %struct.AVIOContext** %94, align 8
  %96 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %95, i64 0, i32 19
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %321, label %100

100:                                              ; preds = %91
  %101 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 11
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %102, -9223372036854775808
  br i1 %103, label %104, label %321

104:                                              ; preds = %100
  %105 = tail call i64 @avio_size(%struct.AVIOContext* %95) #6
  %106 = icmp slt i64 %105, 0
  br i1 %106, label %321, label %107

107:                                              ; preds = %104
  %108 = tail call fastcc i32 @ogg_save(%struct.AVFormatContext* %0) #6
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %322, label %110

110:                                              ; preds = %107
  %111 = icmp sgt i64 %105, 65307
  %112 = add nsw i64 %105, -65307
  %113 = select i1 %111, i64 %112, i64 0
  %114 = load %struct.AVIOContext*, %struct.AVIOContext** %94, align 8
  %115 = tail call i64 @avio_seek(%struct.AVIOContext* %114, i64 %113, i32 0) #6
  %116 = getelementptr inbounds %struct.ogg, %struct.ogg* %92, i64 0, i32 4
  store i64 -1, i64* %116, align 8
  %117 = call fastcc i32 @ogg_read_page(%struct.AVFormatContext* %0, i32* nonnull %2, i32 1) #6
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %187

119:                                              ; preds = %110
  %120 = getelementptr inbounds %struct.ogg, %struct.ogg* %92, i64 0, i32 0
  %121 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %122

122:                                              ; preds = %183, %119
  %123 = phi i32 [ 0, %119 ], [ %184, %183 ]
  %124 = load i32, i32* %2, align 4
  %125 = icmp sgt i32 %124, -1
  br i1 %125, label %126, label %183

126:                                              ; preds = %122
  %127 = load %struct.ogg_stream*, %struct.ogg_stream** %120, align 8
  %128 = sext i32 %124 to i64
  %129 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %127, i64 %128, i32 8
  %130 = load i64, i64* %129, align 8
  switch i64 %130, label %131 [
    i64 -1, label %183
    i64 0, label %183
  ]

131:                                              ; preds = %126
  %132 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %127, i64 %128, i32 15
  %133 = load %struct.ogg_codec*, %struct.ogg_codec** %132, align 8
  %134 = icmp eq %struct.ogg_codec* %133, null
  br i1 %134, label %183, label %135

135:                                              ; preds = %131
  %136 = load %struct.ogg*, %struct.ogg** %4, align 8
  %137 = getelementptr inbounds %struct.ogg, %struct.ogg* %136, i64 0, i32 0
  %138 = load %struct.ogg_stream*, %struct.ogg_stream** %137, align 8
  %139 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %138, i64 %128, i32 15
  %140 = load %struct.ogg_codec*, %struct.ogg_codec** %139, align 8
  %141 = icmp eq %struct.ogg_codec* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %140, i64 0, i32 5
  %144 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %143, align 8
  %145 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = tail call i64 %144(%struct.AVFormatContext* %0, i32 %124, i64 %130, i64* null) #6
  br label %148

148:                                              ; preds = %146, %142, %135
  %149 = phi i64 [ %147, %146 ], [ %130, %142 ], [ %130, %135 ]
  %150 = icmp slt i64 %149, 0
  %151 = icmp ne i64 %149, -9223372036854775808
  %152 = and i1 %150, %151
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %149) #6
  br label %154

154:                                              ; preds = %153, %148
  %155 = phi i64 [ -9223372036854775808, %153 ], [ %149, %148 ]
  %156 = load %struct.AVStream**, %struct.AVStream*** %121, align 8
  %157 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %156, i64 %128
  %158 = load %struct.AVStream*, %struct.AVStream** %157, align 8
  %159 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %158, i64 0, i32 6
  store i64 %155, i64* %159, align 8
  %160 = load %struct.AVStream**, %struct.AVStream*** %121, align 8
  %161 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %160, i64 %128
  %162 = load %struct.AVStream*, %struct.AVStream** %161, align 8
  %163 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %162, i64 0, i32 5
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, -9223372036854775808
  br i1 %165, label %176, label %166

166:                                              ; preds = %154
  %167 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %162, i64 0, i32 6
  %168 = load i64, i64* %167, align 8
  %169 = sub nsw i64 %168, %164
  store i64 %169, i64* %167, align 8
  %170 = load %struct.ogg_stream*, %struct.ogg_stream** %120, align 8
  %171 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %170, i64 %128, i32 23
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, -1
  %174 = zext i1 %173 to i32
  %175 = sub nsw i32 %123, %174
  store i32 1, i32* %171, align 8
  br label %183

176:                                              ; preds = %154
  %177 = load %struct.ogg_stream*, %struct.ogg_stream** %120, align 8
  %178 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %177, i64 %128, i32 23
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %176
  store i32 -1, i32* %178, align 8
  %182 = add nsw i32 %123, 1
  br label %183

183:                                              ; preds = %181, %176, %166, %131, %126, %126, %122
  %184 = phi i32 [ %175, %166 ], [ %123, %176 ], [ %182, %181 ], [ %123, %131 ], [ %123, %126 ], [ %123, %122 ], [ %123, %126 ]
  %185 = call fastcc i32 @ogg_read_page(%struct.AVFormatContext* %0, i32* nonnull %2, i32 1) #6
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %122, label %187

187:                                              ; preds = %183, %110
  %188 = phi i32 [ 0, %110 ], [ %184, %183 ]
  tail call fastcc void @ogg_restore(%struct.AVFormatContext* %0) #6
  %189 = tail call fastcc i32 @ogg_save(%struct.AVFormatContext* %0) #6
  %190 = icmp slt i32 %189, 0
  br i1 %190, label %322, label %191

191:                                              ; preds = %187
  %192 = load %struct.AVIOContext*, %struct.AVIOContext** %94, align 8
  %193 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %194 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %193, align 8
  %195 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %194, i64 0, i32 3
  %196 = load i64, i64* %195, align 8
  %197 = tail call i64 @avio_seek(%struct.AVIOContext* %192, i64 %196, i32 0) #6
  tail call fastcc void @ogg_reset(%struct.AVFormatContext* %0) #6
  %198 = icmp sgt i32 %188, 0
  br i1 %198, label %199, label %320

199:                                              ; preds = %191
  %200 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %201 = getelementptr inbounds %struct.ogg, %struct.ogg* %92, i64 0, i32 0
  br label %202

202:                                              ; preds = %317, %199
  %203 = phi i32 [ %188, %199 ], [ %318, %317 ]
  %204 = call fastcc i32 @ogg_packet(%struct.AVFormatContext* %0, i32* nonnull %2, i32* null, i32* null, i64* null) #6
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %320

206:                                              ; preds = %202
  %207 = load i32, i32* %2, align 4
  %208 = icmp slt i32 %207, 0
  br i1 %208, label %317, label %209

209:                                              ; preds = %206
  %210 = load %struct.ogg*, %struct.ogg** %4, align 8
  %211 = getelementptr inbounds %struct.ogg, %struct.ogg* %210, i64 0, i32 0
  %212 = load %struct.ogg_stream*, %struct.ogg_stream** %211, align 8
  %213 = sext i32 %207 to i64
  %214 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %212, i64 %213, i32 10
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, -9223372036854775808
  br i1 %216, label %218, label %217

217:                                              ; preds = %209
  store i64 -9223372036854775808, i64* %214, align 8
  br label %218

218:                                              ; preds = %217, %209
  %219 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %212, i64 %213, i32 11
  %220 = load i64, i64* %219, align 8
  %221 = icmp eq i64 %220, -9223372036854775808
  br i1 %221, label %223, label %222

222:                                              ; preds = %218
  store i64 -9223372036854775808, i64* %219, align 8
  br label %223

223:                                              ; preds = %222, %218
  %224 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %212, i64 %213, i32 21
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %284, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %212, i64 %213, i32 8
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %229, -1
  br i1 %230, label %284, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %212, i64 %213, i32 15
  %233 = load %struct.ogg_codec*, %struct.ogg_codec** %232, align 8
  %234 = icmp eq %struct.ogg_codec* %233, null
  br i1 %234, label %258, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %233, i64 0, i32 6
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %258, label %239

239:                                              ; preds = %235
  %240 = load %struct.ogg*, %struct.ogg** %4, align 8
  %241 = getelementptr inbounds %struct.ogg, %struct.ogg* %240, i64 0, i32 0
  %242 = load %struct.ogg_stream*, %struct.ogg_stream** %241, align 8
  %243 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %242, i64 %213, i32 15
  %244 = load %struct.ogg_codec*, %struct.ogg_codec** %243, align 8
  %245 = icmp eq %struct.ogg_codec* %244, null
  br i1 %245, label %252, label %246

246:                                              ; preds = %239
  %247 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %244, i64 0, i32 5
  %248 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %247, align 8
  %249 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = call i64 %248(%struct.AVFormatContext* %0, i32 %207, i64 %229, i64* null) #6
  br label %252

252:                                              ; preds = %250, %246, %239
  %253 = phi i64 [ %251, %250 ], [ %229, %246 ], [ %229, %239 ]
  %254 = icmp slt i64 %253, 0
  %255 = icmp ne i64 %253, -9223372036854775808
  %256 = and i1 %254, %255
  br i1 %256, label %257, label %280

257:                                              ; preds = %252
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %253) #6
  br label %280

258:                                              ; preds = %235, %231
  %259 = load %struct.ogg*, %struct.ogg** %4, align 8
  %260 = getelementptr inbounds %struct.ogg, %struct.ogg* %259, i64 0, i32 0
  %261 = load %struct.ogg_stream*, %struct.ogg_stream** %260, align 8
  %262 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %261, i64 %213, i32 15
  %263 = load %struct.ogg_codec*, %struct.ogg_codec** %262, align 8
  %264 = icmp eq %struct.ogg_codec* %263, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %258
  %266 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %263, i64 0, i32 5
  %267 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %266, align 8
  %268 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = call i64 %267(%struct.AVFormatContext* %0, i32 %207, i64 %229, i64* %219) #6
  br label %272

271:                                              ; preds = %265, %258
  store i64 %229, i64* %219, align 8
  br label %272

272:                                              ; preds = %271, %269
  %273 = phi i64 [ %270, %269 ], [ %229, %271 ]
  %274 = icmp slt i64 %273, 0
  %275 = icmp ne i64 %273, -9223372036854775808
  %276 = and i1 %274, %275
  br i1 %276, label %277, label %278

277:                                              ; preds = %272
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %273) #6
  br label %278

278:                                              ; preds = %277, %272
  %279 = phi i64 [ -9223372036854775808, %277 ], [ %273, %272 ]
  store i64 %279, i64* %214, align 8
  br label %280

280:                                              ; preds = %278, %257, %252
  %281 = phi i64 [ %215, %278 ], [ -9223372036854775808, %257 ], [ %253, %252 ]
  store i64 -1, i64* %228, align 8
  %282 = load i32, i32* %2, align 4
  %283 = sext i32 %282 to i64
  br label %284

284:                                              ; preds = %280, %227, %223
  %285 = phi i64 [ %213, %223 ], [ %213, %227 ], [ %283, %280 ]
  %286 = phi i64 [ %215, %223 ], [ %215, %227 ], [ %281, %280 ]
  %287 = load %struct.AVStream**, %struct.AVStream*** %200, align 8
  %288 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %287, i64 %285
  %289 = load %struct.AVStream*, %struct.AVStream** %288, align 8
  %290 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %289, i64 0, i32 6
  %291 = load i64, i64* %290, align 8
  %292 = icmp eq i64 %291, -9223372036854775808
  br i1 %292, label %317, label %293

293:                                              ; preds = %284
  %294 = icmp eq i64 %286, -9223372036854775808
  %295 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %289, i64 0, i32 5
  %296 = load i64, i64* %295, align 8
  %297 = icmp eq i64 %296, -9223372036854775808
  br i1 %294, label %309, label %298

298:                                              ; preds = %293
  br i1 %297, label %299, label %310

299:                                              ; preds = %298
  %300 = load %struct.ogg_stream*, %struct.ogg_stream** %201, align 8
  %301 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %300, i64 %285, i32 23
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %317

304:                                              ; preds = %299
  %305 = sub nsw i64 %291, %286
  store i64 %305, i64* %290, align 8
  %306 = load %struct.ogg_stream*, %struct.ogg_stream** %201, align 8
  %307 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %306, i64 %285, i32 23
  store i32 1, i32* %307, align 8
  %308 = add nsw i32 %203, -1
  br label %317

309:                                              ; preds = %293
  br i1 %297, label %317, label %310

310:                                              ; preds = %309, %298
  %311 = load %struct.ogg_stream*, %struct.ogg_stream** %201, align 8
  %312 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %311, i64 %285, i32 23
  %313 = load i32, i32* %312, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %310
  store i32 1, i32* %312, align 8
  %316 = add nsw i32 %203, -1
  br label %317

317:                                              ; preds = %315, %310, %309, %304, %299, %284, %206
  %318 = phi i32 [ %203, %206 ], [ %203, %284 ], [ %203, %310 ], [ %316, %315 ], [ %203, %309 ], [ %308, %304 ], [ %203, %299 ]
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %202, label %320

320:                                              ; preds = %317, %202, %191
  call fastcc void @ogg_restore(%struct.AVFormatContext* %0) #6
  br label %321

321:                                              ; preds = %320, %91, %100, %104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  br label %325

322:                                              ; preds = %187, %107
  %323 = phi i32 [ %108, %107 ], [ %189, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  %324 = tail call i32 @ogg_read_close(%struct.AVFormatContext* %0)
  br label %325

325:                                              ; preds = %321, %53, %322, %11
  %326 = phi i32 [ %9, %11 ], [ %323, %322 ], [ -1094995529, %53 ], [ 0, %321 ]
  ret i32 %326
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ogg_read_packet(%struct.AVFormatContext*, %struct.AVPacket*) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  store i32 -1431655766, i32* %3, align 4
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  store i32 -1431655766, i32* %5, align 4
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store i64 -6148914691236517206, i64* %6, align 8
  %12 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  store i64 -6148914691236517206, i64* %7, align 8
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 56
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call fastcc void @ogg_reset(%struct.AVFormatContext* %0)
  store i32 0, i32* %13, align 8
  br label %17

17:                                               ; preds = %2, %16
  %18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %20 = bitcast i8** %19 to %struct.ogg**
  %21 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %22

22:                                               ; preds = %168, %17
  %23 = call fastcc i32 @ogg_packet(%struct.AVFormatContext* %0, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i64* nonnull %6)
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %231, label %25

25:                                               ; preds = %22, %34
  %26 = load i32, i32* %3, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = load %struct.AVStream**, %struct.AVStream*** %18, align 8
  %30 = sext i32 %26 to i64
  %31 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %29, i64 %30
  %32 = load %struct.AVStream*, %struct.AVStream** %31, align 8
  %33 = icmp eq %struct.AVStream* %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %28, %25
  %35 = call fastcc i32 @ogg_packet(%struct.AVFormatContext* %0, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i64* nonnull %6)
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %231, label %25

37:                                               ; preds = %28
  %38 = sext i32 %26 to i64
  %39 = load %struct.ogg*, %struct.ogg** %20, align 8
  %40 = getelementptr inbounds %struct.ogg, %struct.ogg* %39, i64 0, i32 0
  %41 = load %struct.ogg_stream*, %struct.ogg_stream** %40, align 8
  store i64 -9223372036854775808, i64* %7, align 8
  %42 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 10
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, -9223372036854775808
  br i1 %44, label %46, label %45

45:                                               ; preds = %37
  store i64 -9223372036854775808, i64* %42, align 8
  br label %46

46:                                               ; preds = %45, %37
  %47 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 11
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, -9223372036854775808
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  store i64 %48, i64* %7, align 8
  store i64 -9223372036854775808, i64* %47, align 8
  br label %51

51:                                               ; preds = %50, %46
  %52 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 21
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %115, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 8
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, -1
  br i1 %58, label %115, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 15
  %61 = load %struct.ogg_codec*, %struct.ogg_codec** %60, align 8
  %62 = icmp eq %struct.ogg_codec* %61, null
  br i1 %62, label %87, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %61, i64 0, i32 6
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %87, label %67

67:                                               ; preds = %63
  %68 = load %struct.ogg*, %struct.ogg** %20, align 8
  %69 = getelementptr inbounds %struct.ogg, %struct.ogg* %68, i64 0, i32 0
  %70 = load %struct.ogg_stream*, %struct.ogg_stream** %69, align 8
  %71 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %70, i64 %38, i32 15
  %72 = load %struct.ogg_codec*, %struct.ogg_codec** %71, align 8
  %73 = icmp eq %struct.ogg_codec* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %72, i64 0, i32 5
  %76 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %75, align 8
  %77 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = call i64 %76(%struct.AVFormatContext* %0, i32 %26, i64 %57, i64* nonnull %7) #6
  br label %81

80:                                               ; preds = %74, %67
  store i64 %57, i64* %7, align 8
  br label %81

81:                                               ; preds = %80, %78
  %82 = phi i64 [ %79, %78 ], [ %57, %80 ]
  %83 = icmp slt i64 %82, 0
  %84 = icmp ne i64 %82, -9223372036854775808
  %85 = and i1 %83, %84
  br i1 %85, label %86, label %111

86:                                               ; preds = %81
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %82) #6
  br label %111

87:                                               ; preds = %63, %59
  %88 = load %struct.ogg*, %struct.ogg** %20, align 8
  %89 = getelementptr inbounds %struct.ogg, %struct.ogg* %88, i64 0, i32 0
  %90 = load %struct.ogg_stream*, %struct.ogg_stream** %89, align 8
  %91 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %90, i64 %38, i32 15
  %92 = load %struct.ogg_codec*, %struct.ogg_codec** %91, align 8
  %93 = icmp eq %struct.ogg_codec* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %92, i64 0, i32 5
  %96 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %95, align 8
  %97 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = call i64 %96(%struct.AVFormatContext* %0, i32 %26, i64 %57, i64* %47) #6
  br label %103

100:                                              ; preds = %94, %87
  %101 = icmp eq i64* %47, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %100
  store i64 %57, i64* %47, align 8
  br label %103

103:                                              ; preds = %102, %100, %98
  %104 = phi i64 [ %99, %98 ], [ %57, %102 ], [ %57, %100 ]
  %105 = icmp slt i64 %104, 0
  %106 = icmp ne i64 %104, -9223372036854775808
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %104) #6
  br label %109

109:                                              ; preds = %103, %108
  %110 = phi i64 [ -9223372036854775808, %108 ], [ %104, %103 ]
  store i64 %110, i64* %42, align 8
  br label %111

111:                                              ; preds = %86, %81, %109
  %112 = phi i64 [ %43, %109 ], [ -9223372036854775808, %86 ], [ %82, %81 ]
  store i64 -1, i64* %56, align 8
  %113 = load i32, i32* %3, align 4
  %114 = sext i32 %113 to i64
  br label %115

115:                                              ; preds = %51, %55, %111
  %116 = phi i64 [ %38, %51 ], [ %38, %55 ], [ %114, %111 ]
  %117 = phi i64 [ %43, %51 ], [ %43, %55 ], [ %112, %111 ]
  %118 = load i32, i32* %4, align 4
  %119 = load i32, i32* %5, align 4
  %120 = load %struct.ogg*, %struct.ogg** %20, align 8
  %121 = getelementptr inbounds %struct.ogg, %struct.ogg* %120, i64 0, i32 0
  %122 = load %struct.ogg_stream*, %struct.ogg_stream** %121, align 8
  %123 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %122, i64 %116
  %124 = icmp eq i32 %119, 0
  br i1 %124, label %164, label %125

125:                                              ; preds = %115
  %126 = load %struct.AVStream**, %struct.AVStream*** %18, align 8
  %127 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %126, i64 %116
  %128 = load %struct.AVStream*, %struct.AVStream** %127, align 8
  %129 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %128, i64 0, i32 19
  %130 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %129, align 8
  %131 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %130, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  switch i32 %132, label %164 [
    i32 30, label %133
    i32 139, label %142
  ]

133:                                              ; preds = %125
  %134 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %122, i64 %116, i32 5
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %123, i64 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = sext i32 %118 to i64
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = lshr i8 %140, 6
  br label %150

142:                                              ; preds = %125
  %143 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %122, i64 %116, i32 5
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %123, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = sext i32 %118 to i64
  %148 = getelementptr inbounds i8, i8* %146, i64 %147
  %149 = load i8, i8* %148, align 1
  br label %150

150:                                              ; preds = %142, %133
  %151 = phi i8 [ %149, %142 ], [ %141, %133 ]
  %152 = phi i32 [ %144, %142 ], [ %135, %133 ]
  %153 = and i32 %152, 1
  %154 = and i8 %151, 1
  %155 = xor i8 %154, 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %153, %156
  br i1 %157, label %164, label %158

158:                                              ; preds = %150
  %159 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %122, i64 %116, i32 5
  %160 = xor i32 %152, 1
  store i32 %160, i32* %159, align 8
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = select i1 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0)
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0), i8* %163) #6
  br label %164

164:                                              ; preds = %115, %125, %150, %158
  %165 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 22
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 5
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %22, label %173

173:                                              ; preds = %168, %164
  store i32 0, i32* %165, align 4
  %174 = load i32, i32* %5, align 4
  %175 = call i32 @av_new_packet(%struct.AVPacket* %1, i32 %174) #6
  %176 = icmp slt i32 %175, 0
  br i1 %176, label %231, label %177

177:                                              ; preds = %173
  %178 = load i32, i32* %3, align 4
  %179 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = load i32, i32* %4, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %183, i64 %185
  %187 = load i32, i32* %5, align 4
  %188 = sext i32 %187 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 %186, i64 %188, i1 false)
  %189 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 1
  store i64 %117, i64* %189, align 8
  %190 = load i64, i64* %7, align 8
  %191 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 2
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 5
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 6
  store i32 %193, i32* %194, align 8
  %195 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 6
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 9
  store i64 %197, i64* %198, align 8
  %199 = load i64, i64* %6, align 8
  %200 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 10
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 26
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %177
  %205 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 27
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %218, label %208

208:                                              ; preds = %204, %177
  %209 = call i8* @av_packet_new_side_data(%struct.AVPacket* %1, i32 11, i32 10) #6
  %210 = icmp eq i8* %209, null
  br i1 %210, label %231, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %201, align 4
  %213 = bitcast i8* %209 to i32*
  store i32 %212, i32* %213, align 1
  %214 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 27
  %215 = load i32, i32* %214, align 8
  %216 = getelementptr inbounds i8, i8* %209, i64 4
  %217 = bitcast i8* %216 to i32*
  store i32 %215, i32* %217, align 1
  store i32 0, i32* %201, align 4
  store i32 0, i32* %214, align 8
  br label %218

218:                                              ; preds = %211, %204
  %219 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 28
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %229, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %41, i64 %38, i32 29
  %224 = load i32, i32* %223, align 8
  %225 = zext i32 %224 to i64
  %226 = call i32 @av_packet_add_side_data(%struct.AVPacket* %1, i32 18, i8* nonnull %220, i64 %225) #6
  %227 = icmp slt i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %222
  store i8* null, i8** %219, align 8
  store i32 0, i32* %223, align 8
  br label %229

229:                                              ; preds = %218, %228
  %230 = load i32, i32* %5, align 4
  br label %231

231:                                              ; preds = %22, %34, %222, %208, %173, %229
  %232 = phi i32 [ %230, %229 ], [ %175, %173 ], [ -12, %208 ], [ %226, %222 ], [ %35, %34 ], [ %23, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  ret i32 %232
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ogg_read_close(%struct.AVFormatContext*) #1 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.ogg**
  %4 = load %struct.ogg*, %struct.ogg** %3, align 8
  %5 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %1, %33
  %9 = phi %struct.ogg* [ %34, %33 ], [ %4, %1 ]
  %10 = phi i64 [ %29, %33 ], [ 0, %1 ]
  %11 = getelementptr inbounds %struct.ogg, %struct.ogg* %9, i64 0, i32 0
  %12 = load %struct.ogg_stream*, %struct.ogg_stream** %11, align 8
  %13 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %10
  %14 = bitcast %struct.ogg_stream* %13 to i8*
  tail call void @av_freep(i8* %14) #6
  %15 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %10, i32 15
  %16 = load %struct.ogg_codec*, %struct.ogg_codec** %15, align 8
  %17 = icmp eq %struct.ogg_codec* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %16, i64 0, i32 8
  %20 = load void (%struct.AVFormatContext*, i32)*, void (%struct.AVFormatContext*, i32)** %19, align 8
  %21 = icmp eq void (%struct.AVFormatContext*, i32)* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = trunc i64 %10 to i32
  tail call void %20(%struct.AVFormatContext* %0, i32 %23) #6
  br label %24

24:                                               ; preds = %8, %18, %22
  %25 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %10, i32 30
  %26 = bitcast i8** %25 to i8*
  tail call void @av_freep(i8* %26) #6
  %27 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %12, i64 %10, i32 28
  %28 = bitcast i8** %27 to i8*
  tail call void @av_freep(i8* %28) #6
  %29 = add nuw nsw i64 %10, 1
  %30 = load i32, i32* %5, align 8
  %31 = sext i32 %30 to i64
  %32 = icmp slt i64 %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = load %struct.ogg*, %struct.ogg** %3, align 8
  br label %8

35:                                               ; preds = %24, %1
  store i32 0, i32* %5, align 8
  %36 = bitcast %struct.ogg* %4 to i8*
  tail call void @av_freep(i8* %36) #6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ogg_read_seek(%struct.AVFormatContext*, i32, i64, i32) #1 {
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %struct.ogg**
  %7 = load %struct.ogg*, %struct.ogg** %6, align 8
  %8 = getelementptr inbounds %struct.ogg, %struct.ogg* %7, i64 0, i32 0
  %9 = load %struct.ogg_stream*, %struct.ogg_stream** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %struct.ogg, %struct.ogg* %7, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.25, i64 0, i64 0), i32 961) #6
  tail call void @abort() #7
  unreachable

15:                                               ; preds = %4
  tail call fastcc void @ogg_reset(%struct.AVFormatContext* %0)
  %16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %17 = load %struct.AVStream**, %struct.AVStream*** %16, align 8
  %18 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 %10
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 19
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %20, align 8
  %22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %3, 4
  %25 = or i32 %23, %24
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %9, i64 %10, i32 22
  store i32 1, i32* %28, align 4
  br label %29

29:                                               ; preds = %27, %15
  %30 = tail call i32 @ff_seek_frame_binary(%struct.AVFormatContext* %0, i32 %1, i64 %2, i32 %3) #6
  tail call fastcc void @ogg_reset(%struct.AVFormatContext* %0)
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load %struct.ogg_stream*, %struct.ogg_stream** %8, align 8
  %34 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %33, i64 %10, i32 22
  store i32 0, i32* %34, align 4
  br label %35

35:                                               ; preds = %32, %29
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @ogg_read_timestamp(%struct.AVFormatContext*, i32, i64*, i64) #1 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %9 = bitcast i8** %8 to %struct.ogg**
  %10 = load %struct.ogg*, %struct.ogg** %9, align 8
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %11, align 8
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %7, align 4
  %16 = load i64, i64* %2, align 8
  %17 = tail call i64 @avio_seek(%struct.AVIOContext* %12, i64 %16, i32 0) #6
  tail call fastcc void @ogg_reset(%struct.AVFormatContext* %0)
  %18 = getelementptr inbounds %struct.ogg, %struct.ogg* %10, i64 0, i32 0
  %19 = sext i32 %1 to i64
  %20 = bitcast %struct.AVFormatContext* %0 to i8*
  %21 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %22

22:                                               ; preds = %182, %4
  %23 = phi i64 [ %184, %182 ], [ -1, %4 ]
  br label %24

24:                                               ; preds = %22, %39
  %25 = call i64 @avio_seek(%struct.AVIOContext* %12, i64 0, i32 1) #6
  %26 = icmp sgt i64 %25, %3
  br i1 %26, label %186, label %27

27:                                               ; preds = %24
  %28 = call fastcc i32 @ogg_packet(%struct.AVFormatContext* %0, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i64* %2)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %186

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4
  %32 = icmp eq i32 %31, %1
  br i1 %32, label %33, label %182

33:                                               ; preds = %30
  %34 = load %struct.ogg_stream*, %struct.ogg_stream** %18, align 8
  %35 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %34, i64 %19, i32 14
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 6
  %38 = icmp eq i32 %37, 4
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %34, i64 %19, i32 15
  %41 = load %struct.ogg_codec*, %struct.ogg_codec** %40, align 8
  %42 = icmp eq %struct.ogg_codec* %41, @ff_ogm_video_codec
  br i1 %42, label %24, label %43

43:                                               ; preds = %33, %39
  %44 = load %struct.ogg*, %struct.ogg** %9, align 8
  %45 = getelementptr inbounds %struct.ogg, %struct.ogg* %44, i64 0, i32 0
  %46 = load %struct.ogg_stream*, %struct.ogg_stream** %45, align 8
  %47 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %46, i64 %19, i32 10
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, -9223372036854775808
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  store i64 -9223372036854775808, i64* %47, align 8
  br label %51

51:                                               ; preds = %50, %43
  %52 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %46, i64 %19, i32 11
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, -9223372036854775808
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  store i64 -9223372036854775808, i64* %52, align 8
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %46, i64 %19, i32 21
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %119, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %46, i64 %19, i32 8
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %119, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %46, i64 %19, i32 15
  %66 = load %struct.ogg_codec*, %struct.ogg_codec** %65, align 8
  %67 = icmp eq %struct.ogg_codec* %66, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %66, i64 0, i32 6
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %68
  %73 = load %struct.ogg*, %struct.ogg** %9, align 8
  %74 = getelementptr inbounds %struct.ogg, %struct.ogg* %73, i64 0, i32 0
  %75 = load %struct.ogg_stream*, %struct.ogg_stream** %74, align 8
  %76 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %75, i64 %19, i32 15
  %77 = load %struct.ogg_codec*, %struct.ogg_codec** %76, align 8
  %78 = icmp eq %struct.ogg_codec* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %77, i64 0, i32 5
  %81 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %80, align 8
  %82 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = call i64 %81(%struct.AVFormatContext* %0, i32 %1, i64 %62, i64* null) #6
  br label %85

85:                                               ; preds = %72, %79, %83
  %86 = phi i64 [ %84, %83 ], [ %62, %79 ], [ %62, %72 ]
  %87 = icmp slt i64 %86, 0
  %88 = icmp ne i64 %86, -9223372036854775808
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %115

90:                                               ; preds = %85
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %86) #6
  br label %115

91:                                               ; preds = %68, %64
  %92 = load %struct.ogg*, %struct.ogg** %9, align 8
  %93 = getelementptr inbounds %struct.ogg, %struct.ogg* %92, i64 0, i32 0
  %94 = load %struct.ogg_stream*, %struct.ogg_stream** %93, align 8
  %95 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %94, i64 %19, i32 15
  %96 = load %struct.ogg_codec*, %struct.ogg_codec** %95, align 8
  %97 = icmp eq %struct.ogg_codec* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %96, i64 0, i32 5
  %100 = load i64 (%struct.AVFormatContext*, i32, i64, i64*)*, i64 (%struct.AVFormatContext*, i32, i64, i64*)** %99, align 8
  %101 = icmp eq i64 (%struct.AVFormatContext*, i32, i64, i64*)* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = call i64 %100(%struct.AVFormatContext* %0, i32 %1, i64 %62, i64* %52) #6
  br label %107

104:                                              ; preds = %98, %91
  %105 = icmp eq i64* %52, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %104
  store i64 %62, i64* %52, align 8
  br label %107

107:                                              ; preds = %106, %104, %102
  %108 = phi i64 [ %103, %102 ], [ %62, %106 ], [ %62, %104 ]
  %109 = icmp slt i64 %108, 0
  %110 = icmp ne i64 %108, -9223372036854775808
  %111 = and i1 %109, %110
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 %108) #6
  br label %113

113:                                              ; preds = %107, %112
  %114 = phi i64 [ -9223372036854775808, %112 ], [ %108, %107 ]
  store i64 %114, i64* %47, align 8
  br label %115

115:                                              ; preds = %90, %85, %113
  %116 = phi i64 [ %48, %113 ], [ -9223372036854775808, %90 ], [ %86, %85 ]
  store i64 -1, i64* %61, align 8
  %117 = load i32, i32* %5, align 4
  %118 = sext i32 %117 to i64
  br label %119

119:                                              ; preds = %56, %60, %115
  %120 = phi i64 [ %19, %56 ], [ %19, %60 ], [ %118, %115 ]
  %121 = phi i64 [ %48, %56 ], [ %48, %60 ], [ %116, %115 ]
  %122 = load i32, i32* %6, align 4
  %123 = load i32, i32* %7, align 4
  %124 = load %struct.ogg*, %struct.ogg** %9, align 8
  %125 = getelementptr inbounds %struct.ogg, %struct.ogg* %124, i64 0, i32 0
  %126 = load %struct.ogg_stream*, %struct.ogg_stream** %125, align 8
  %127 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %126, i64 %120
  %128 = icmp eq i32 %123, 0
  br i1 %128, label %168, label %129

129:                                              ; preds = %119
  %130 = load %struct.AVStream**, %struct.AVStream*** %21, align 8
  %131 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %130, i64 %120
  %132 = load %struct.AVStream*, %struct.AVStream** %131, align 8
  %133 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %132, i64 0, i32 19
  %134 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %133, align 8
  %135 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  switch i32 %136, label %168 [
    i32 30, label %137
    i32 139, label %146
  ]

137:                                              ; preds = %129
  %138 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %126, i64 %120, i32 5
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %127, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = sext i32 %122 to i64
  %143 = getelementptr inbounds i8, i8* %141, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = lshr i8 %144, 6
  br label %154

146:                                              ; preds = %129
  %147 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %126, i64 %120, i32 5
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %127, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = sext i32 %122 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  %153 = load i8, i8* %152, align 1
  br label %154

154:                                              ; preds = %146, %137
  %155 = phi i8 [ %153, %146 ], [ %145, %137 ]
  %156 = phi i32 [ %148, %146 ], [ %139, %137 ]
  %157 = and i32 %156, 1
  %158 = and i8 %155, 1
  %159 = xor i8 %158, 1
  %160 = zext i8 %159 to i32
  %161 = icmp eq i32 %157, %160
  br i1 %161, label %168, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %126, i64 %120, i32 5
  %164 = xor i32 %156, 1
  store i32 %164, i32* %163, align 8
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = select i1 %166, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21, i64 0, i64 0)
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0), i8* %167) #6
  br label %168

168:                                              ; preds = %119, %129, %154, %162
  %169 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %34, i64 %19, i32 5
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %168
  %174 = load i64, i64* %2, align 8
  br label %182

175:                                              ; preds = %168
  %176 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %34, i64 %19, i32 22
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %175
  %180 = icmp sgt i64 %23, -1
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  store i64 %23, i64* %2, align 8
  br label %182

182:                                              ; preds = %30, %173, %181, %175, %179
  %183 = phi i64 [ -9223372036854775808, %179 ], [ %121, %175 ], [ %121, %181 ], [ %121, %173 ], [ -9223372036854775808, %30 ]
  %184 = phi i64 [ %23, %179 ], [ %23, %175 ], [ %23, %181 ], [ %174, %173 ], [ %23, %30 ]
  %185 = icmp eq i64 %183, -9223372036854775808
  br i1 %185, label %22, label %186

186:                                              ; preds = %182, %24, %27
  %187 = phi i64 [ -9223372036854775808, %27 ], [ -9223372036854775808, %24 ], [ %183, %182 ]
  call fastcc void @ogg_reset(%struct.AVFormatContext* %0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  ret i64 %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ogg_packet(%struct.AVFormatContext*, i32*, i32*, i32*, i64*) unnamed_addr #1 {
  %6 = alloca i32, align 4
  %7 = alloca [64 x i8], align 1
  %8 = alloca [64 x i8], align 1
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to %struct.ogg**
  %11 = load %struct.ogg*, %struct.ogg** %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast %struct.AVFormatContext* %0 to i8*
  %14 = getelementptr inbounds %struct.ogg, %struct.ogg* %11, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 %15) #6
  %16 = icmp ne i32* %1, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %5
  store i32 -1, i32* %1, align 4
  br label %18

18:                                               ; preds = %17, %5
  %19 = getelementptr inbounds %struct.ogg, %struct.ogg* %11, i64 0, i32 0
  br label %20

20:                                               ; preds = %77, %18
  %21 = load i32, i32* %14, align 8
  store i32 %21, i32* %6, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %26, label %29

23:                                               ; preds = %26
  %24 = load i32, i32* %6, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20, %23
  %27 = call fastcc i32 @ogg_read_page(%struct.AVFormatContext* %0, i32* nonnull %6, i32 0)
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %210, label %23

29:                                               ; preds = %23, %20
  %30 = phi i32 [ %21, %20 ], [ %24, %23 ]
  %31 = load %struct.ogg_stream*, %struct.ogg_stream** %19, align 8
  %32 = sext i32 %30 to i64
  %33 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 18
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 17
  %40 = load i32, i32* %39, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 56, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), i32 %30, i32 %34, i32 %36, i32 %38, i32 %40) #6
  %41 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 15
  %42 = load %struct.ogg_codec*, %struct.ogg_codec** %41, align 8
  %43 = icmp eq %struct.ogg_codec* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %29
  %45 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 16
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %210

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = tail call fastcc %struct.ogg_codec* @ogg_find_codec(i8* %50, i32 %52)
  store %struct.ogg_codec* %53, %struct.ogg_codec** %41, align 8
  %54 = icmp eq %struct.ogg_codec* %53, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %48
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #6
  store i32 0, i32* %45, align 8
  br label %210

56:                                               ; preds = %48, %29
  %57 = load i32, i32* %37, align 8
  %58 = load i32, i32* %35, align 4
  %59 = load i32, i32* %39, align 4
  br label %60

60:                                               ; preds = %64, %56
  %61 = phi i32 [ %58, %56 ], [ %70, %64 ]
  %62 = phi i32 [ %57, %56 ], [ %65, %64 ]
  %63 = icmp slt i32 %62, %59
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = add nsw i32 %62, 1
  store i32 %65, i32* %37, align 8
  %66 = sext i32 %62 to i64
  %67 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 19, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = add i32 %61, %69
  store i32 %70, i32* %35, align 4
  %71 = icmp eq i8 %68, -1
  br i1 %71, label %60, label %72

72:                                               ; preds = %64, %60
  %73 = phi i32 [ %65, %64 ], [ %62, %60 ]
  %74 = phi i1 [ false, %64 ], [ true, %60 ]
  br i1 %74, label %75, label %83

75:                                               ; preds = %72
  %76 = icmp eq i32 %73, %59
  br i1 %76, label %78, label %77

77:                                               ; preds = %75, %78
  br label %20

78:                                               ; preds = %75
  store i32 -1, i32* %14, align 8
  %79 = load i32, i32* %35, align 4
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i32
  %82 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 20
  store i32 %81, i32* %82, align 4
  br label %77

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 8
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, -1
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 13
  %89 = load i64, i64* %88, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i64 %89) #6
  br label %90

90:                                               ; preds = %87, %83
  store i32 %30, i32* %14, align 8
  %91 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 20
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 16
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %148, label %95

95:                                               ; preds = %90
  %96 = load %struct.ogg_codec*, %struct.ogg_codec** %41, align 8
  %97 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %96, i64 0, i32 3
  %98 = load i32 (%struct.AVFormatContext*, i32)*, i32 (%struct.AVFormatContext*, i32)** %97, align 8
  %99 = tail call i32 %98(%struct.AVFormatContext* %0, i32 %30) #6
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %102, i8 0, i64 64, i1 false)
  %103 = call i32 @av_strerror(i32 %99, i8* nonnull %102, i64 64) #6
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i8* nonnull %102) #6
  br label %210

104:                                              ; preds = %95
  store i32 %99, i32* %92, align 8
  %105 = icmp eq i32 %99, 0
  br i1 %105, label %106, label %141

106:                                              ; preds = %104
  store i32 %57, i32* %37, align 8
  store i32 %58, i32* %35, align 4
  %107 = getelementptr inbounds %struct.ogg, %struct.ogg* %11, i64 0, i32 2
  store i32 1, i32* %107, align 4
  %108 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %109 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %108, align 8
  %110 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %109, i64 0, i32 3
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 12
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %110, align 8
  br label %116

116:                                              ; preds = %106, %113
  %117 = getelementptr inbounds %struct.ogg, %struct.ogg* %11, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %190

120:                                              ; preds = %116, %136
  %121 = phi i32 [ %137, %136 ], [ %118, %116 ]
  %122 = phi i64 [ %138, %136 ], [ 0, %116 ]
  %123 = load %struct.ogg_stream*, %struct.ogg_stream** %19, align 8
  %124 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %123, i64 %122, i32 20
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %136, label %127

127:                                              ; preds = %120
  %128 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %108, align 8
  %129 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %128, i64 0, i32 3
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %123, i64 %122, i32 12
  %132 = load i64, i64* %131, align 8
  %133 = icmp sgt i64 %130, %132
  %134 = select i1 %133, i64 %132, i64 %130
  store i64 %134, i64* %129, align 8
  %135 = load i32, i32* %117, align 8
  br label %136

136:                                              ; preds = %120, %127
  %137 = phi i32 [ %121, %120 ], [ %135, %127 ]
  %138 = add nuw nsw i64 %122, 1
  %139 = sext i32 %137 to i64
  %140 = icmp slt i64 %138, %139
  br i1 %140, label %120, label %190

141:                                              ; preds = %104
  %142 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 25
  %143 = load i32, i32* %142, align 8
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %142, align 8
  %145 = load i32, i32* %35, align 4
  %146 = load i32, i32* %33, align 8
  %147 = add i32 %146, %145
  store i32 %147, i32* %33, align 8
  store i32 0, i32* %35, align 4
  br label %190

148:                                              ; preds = %90
  %149 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 5
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 6
  store i32 0, i32* %150, align 4
  %151 = load %struct.ogg_codec*, %struct.ogg_codec** %41, align 8
  %152 = icmp eq %struct.ogg_codec* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %151, i64 0, i32 4
  %155 = load i32 (%struct.AVFormatContext*, i32)*, i32 (%struct.AVFormatContext*, i32)** %154, align 8
  %156 = icmp eq i32 (%struct.AVFormatContext*, i32)* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  %158 = tail call i32 %155(%struct.AVFormatContext* %0, i32 %30) #6
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %161, i8 0, i64 64, i1 false)
  %162 = call i32 @av_strerror(i32 %158, i8* nonnull %161, i64 64) #6
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i8* nonnull %161) #6
  br label %210

163:                                              ; preds = %153, %148, %157
  br i1 %16, label %164, label %165

164:                                              ; preds = %163
  store i32 %30, i32* %1, align 4
  br label %165

165:                                              ; preds = %164, %163
  %166 = icmp eq i32* %2, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = load i32, i32* %33, align 8
  store i32 %168, i32* %2, align 4
  br label %169

169:                                              ; preds = %165, %167
  %170 = icmp eq i32* %3, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %169
  %172 = load i32, i32* %35, align 4
  store i32 %172, i32* %3, align 4
  br label %173

173:                                              ; preds = %169, %171
  %174 = icmp eq i64* %4, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 12
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %4, align 8
  br label %178

178:                                              ; preds = %173, %175
  %179 = load i32, i32* %35, align 4
  %180 = load i32, i32* %33, align 8
  %181 = add i32 %180, %179
  store i32 %181, i32* %33, align 8
  store i32 0, i32* %35, align 4
  %182 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %181, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %178
  store i32 0, i32* %33, align 8
  store i32 0, i32* %182, align 4
  br label %186

186:                                              ; preds = %185, %178
  %187 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 13
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 12
  store i64 %188, i64* %189, align 8
  br label %190

190:                                              ; preds = %136, %116, %141, %186
  %191 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 21
  store i32 1, i32* %191, align 8
  %192 = load i32, i32* %37, align 8
  %193 = load i32, i32* %39, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %195, label %207

195:                                              ; preds = %190
  %196 = sext i32 %192 to i64
  %197 = sext i32 %193 to i64
  br label %200

198:                                              ; preds = %200
  %199 = icmp slt i64 %205, %197
  br i1 %199, label %200, label %207

200:                                              ; preds = %195, %198
  %201 = phi i64 [ %196, %195 ], [ %205, %198 ]
  %202 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %31, i64 %32, i32 19, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, -1
  %205 = add nsw i64 %201, 1
  br i1 %204, label %198, label %206

206:                                              ; preds = %200
  store i32 0, i32* %191, align 8
  br label %207

207:                                              ; preds = %198, %190, %206
  %208 = icmp eq i32 %192, %193
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  store i32 -1, i32* %14, align 8
  br label %210

210:                                              ; preds = %44, %26, %207, %209, %160, %101, %55
  %211 = phi i32 [ %99, %101 ], [ %158, %160 ], [ 0, %55 ], [ 0, %209 ], [ 0, %207 ], [ %27, %26 ], [ 0, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  ret i32 %211
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

declare void @av_freep(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ogg_read_page(%struct.AVFormatContext*, i32* nocapture, i32) unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to [4 x i8]*
  %6 = alloca [255 x i8], align 16
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %8, align 8
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %11 = bitcast i8** %10 to %struct.ogg**
  %12 = load %struct.ogg*, %struct.ogg** %11, align 8
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  %14 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 0
  store i32 -1431655766, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 255, i1 false)
  %15 = call i32 @avio_read(%struct.AVIOContext* %9, i8* nonnull %13, i32 4) #6
  %16 = icmp slt i32 %15, 4
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i64 0, i32 19
  %19 = getelementptr inbounds %struct.ogg, %struct.ogg* %12, i64 0, i32 4
  br label %23

20:                                               ; preds = %3
  %21 = icmp slt i32 %15, 0
  %22 = select i1 %21, i32 %15, i32 -541478725
  br label %425

23:                                               ; preds = %67, %17
  %24 = phi i32 [ %69, %67 ], [ 0, %17 ]
  %25 = and i32 %24, 3
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 79
  br i1 %29, label %30, label %51

30:                                               ; preds = %23
  %31 = add nuw nsw i32 %24, 1
  %32 = and i32 %31, 3
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 103
  br i1 %36, label %37, label %51

37:                                               ; preds = %30
  %38 = add nuw nsw i32 %24, 2
  %39 = and i32 %38, 3
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 103
  br i1 %43, label %44, label %51

44:                                               ; preds = %37
  %45 = add nuw nsw i32 %24, 3
  %46 = and i32 %45, 3
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 83
  br i1 %50, label %71, label %51

51:                                               ; preds = %44, %37, %30, %23
  %52 = icmp eq i32 %24, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %51
  %54 = load i32, i32* %18, align 8
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %53
  %58 = load i64, i64* %19, align 8
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  store i32 0, i32* %4, align 4
  %61 = add nuw nsw i64 %58, 4
  %62 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 %61, i32 0) #6
  store i64 -1, i64* %19, align 8
  br label %63

63:                                               ; preds = %53, %51, %60, %57
  %64 = call i32 @avio_r8(%struct.AVIOContext* %9) #6
  %65 = call i32 @avio_feof(%struct.AVIOContext* %9) #6
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %425

67:                                               ; preds = %63
  %68 = trunc i32 %64 to i8
  %69 = add nuw nsw i32 %24, 1
  store i8 %68, i8* %27, align 1
  %70 = icmp eq i32 %69, 65308
  br i1 %70, label %73, label %23

71:                                               ; preds = %44
  %72 = icmp ugt i32 %24, 65306
  br i1 %72, label %73, label %75

73:                                               ; preds = %67, %71
  %74 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %425

75:                                               ; preds = %71
  call void @ffio_init_checksum(%struct.AVIOContext* %9, i64 (i64, i8*, i32)* nonnull @ff_crc04C11DB7_update, i64 1336520799) #6
  %76 = call i32 @ffio_ensure_seekback(%struct.AVIOContext* %9, i64 65307) #6
  %77 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #6
  %78 = call i32 @avio_r8(%struct.AVIOContext* %9) #6
  %79 = call i32 @avio_r8(%struct.AVIOContext* %9) #6
  %80 = call i64 @avio_rl64(%struct.AVIOContext* %9) #6
  %81 = call i32 @avio_rl32(%struct.AVIOContext* %9) #6
  %82 = call i64 @avio_skip(%struct.AVIOContext* %9, i64 4) #6
  %83 = call i64 @ffio_get_checksum(%struct.AVIOContext* %9) #6
  %84 = call i32 @avio_rb32(%struct.AVIOContext* %9) #6
  %85 = bitcast i32* %7 to i8*
  %86 = and i64 %83, 4294967295
  store i32 0, i32* %7, align 4
  %87 = call i64 @ff_crc04C11DB7_update(i64 %86, i8* nonnull %85, i32 4) #6
  %88 = and i64 %87, 4294967295
  call void @ffio_init_checksum(%struct.AVIOContext* %9, i64 (i64, i8*, i32)* nonnull @ff_crc04C11DB7_update, i64 %88) #6
  %89 = call i32 @avio_r8(%struct.AVIOContext* %9) #6
  %90 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #6
  %91 = add nsw i64 %90, -27
  %92 = call i32 @avio_read(%struct.AVIOContext* %9, i8* nonnull %14, i32 %89) #6
  %93 = icmp slt i32 %92, %89
  br i1 %93, label %103, label %94

94:                                               ; preds = %75
  %95 = icmp sgt i32 %89, 0
  br i1 %95, label %96, label %168

96:                                               ; preds = %94
  %97 = zext i32 %89 to i64
  %98 = add nsw i64 %97, -1
  %99 = and i64 %97, 7
  %100 = icmp ult i64 %98, 7
  br i1 %100, label %152, label %101

101:                                              ; preds = %96
  %102 = sub nsw i64 %97, %99
  br label %106

103:                                              ; preds = %75
  %104 = icmp slt i32 %92, 0
  %105 = select i1 %104, i32 %92, i32 -541478725
  br label %425

106:                                              ; preds = %106, %101
  %107 = phi i64 [ 0, %101 ], [ %149, %106 ]
  %108 = phi i32 [ 0, %101 ], [ %148, %106 ]
  %109 = phi i64 [ %102, %101 ], [ %150, %106 ]
  %110 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %107
  %111 = load i8, i8* %110, align 8
  %112 = zext i8 %111 to i32
  %113 = add nuw nsw i32 %108, %112
  %114 = or i64 %107, 1
  %115 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nuw nsw i32 %113, %117
  %119 = or i64 %107, 2
  %120 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %119
  %121 = load i8, i8* %120, align 2
  %122 = zext i8 %121 to i32
  %123 = add nuw nsw i32 %118, %122
  %124 = or i64 %107, 3
  %125 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = add nuw nsw i32 %123, %127
  %129 = or i64 %107, 4
  %130 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %129
  %131 = load i8, i8* %130, align 4
  %132 = zext i8 %131 to i32
  %133 = add nuw nsw i32 %128, %132
  %134 = or i64 %107, 5
  %135 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = add nuw nsw i32 %133, %137
  %139 = or i64 %107, 6
  %140 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %139
  %141 = load i8, i8* %140, align 2
  %142 = zext i8 %141 to i32
  %143 = add nuw nsw i32 %138, %142
  %144 = or i64 %107, 7
  %145 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = add nuw nsw i32 %143, %147
  %149 = add nuw nsw i64 %107, 8
  %150 = add i64 %109, -8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %106

152:                                              ; preds = %106, %96
  %153 = phi i32 [ undef, %96 ], [ %148, %106 ]
  %154 = phi i64 [ 0, %96 ], [ %149, %106 ]
  %155 = phi i32 [ 0, %96 ], [ %148, %106 ]
  %156 = icmp eq i64 %99, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %165, %157 ], [ %154, %152 ]
  %159 = phi i32 [ %164, %157 ], [ %155, %152 ]
  %160 = phi i64 [ %166, %157 ], [ %99, %152 ]
  %161 = getelementptr inbounds [255 x i8], [255 x i8]* %6, i64 0, i64 %158
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nuw nsw i32 %159, %163
  %165 = add nuw nsw i64 %158, 1
  %166 = add i64 %160, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !2

168:                                              ; preds = %152, %157, %94
  %169 = phi i32 [ 0, %94 ], [ %153, %152 ], [ %164, %157 ]
  %170 = getelementptr inbounds %struct.ogg, %struct.ogg* %12, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %215

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.ogg, %struct.ogg* %12, i64 0, i32 0
  %175 = load %struct.ogg_stream*, %struct.ogg_stream** %174, align 8
  %176 = sext i32 %171 to i64
  br label %177

177:                                              ; preds = %182, %173
  %178 = phi i64 [ 0, %173 ], [ %183, %182 ]
  %179 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %175, i64 %178, i32 7
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, %81
  br i1 %181, label %185, label %182

182:                                              ; preds = %177
  %183 = add nuw nsw i64 %178, 1
  %184 = icmp eq i64 %183, %176
  br i1 %184, label %215, label %177

185:                                              ; preds = %177
  %186 = trunc i64 %178 to i32
  %187 = icmp sgt i32 %186, -1
  br i1 %187, label %188, label %215

188:                                              ; preds = %185
  %189 = shl i64 %178, 32
  %190 = ashr exact i64 %189, 32
  %191 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %175, i64 %190
  %192 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %175, i64 %190, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %175, i64 %190, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = sub i32 %193, %195
  %197 = icmp ult i32 %196, %169
  %198 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %191, i64 0, i32 0
  %199 = load i8*, i8** %198, align 8
  br i1 %197, label %200, label %210

200:                                              ; preds = %188
  %201 = shl i32 %193, 1
  %202 = add i32 %201, 64
  %203 = zext i32 %202 to i64
  %204 = call i8* @av_realloc(i8* %199, i64 %203) #6
  %205 = icmp eq i8* %204, null
  br i1 %205, label %425, label %206

206:                                              ; preds = %200
  store i8* %204, i8** %198, align 8
  %207 = load i32, i32* %192, align 8
  %208 = shl i32 %207, 1
  store i32 %208, i32* %192, align 8
  %209 = load i32, i32* %194, align 4
  br label %210

210:                                              ; preds = %188, %206
  %211 = phi i32 [ %209, %206 ], [ %195, %188 ]
  %212 = phi i8* [ %204, %206 ], [ %199, %188 ]
  %213 = zext i32 %211 to i64
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  br label %219

215:                                              ; preds = %182, %168, %185
  %216 = phi i32 [ %186, %185 ], [ -1, %168 ], [ -1, %182 ]
  %217 = zext i32 %169 to i64
  %218 = call noalias i8* @av_malloc(i64 %217) #6
  br label %219

219:                                              ; preds = %215, %210
  %220 = phi i32 [ %186, %210 ], [ %216, %215 ]
  %221 = phi %struct.ogg_stream* [ %191, %210 ], [ inttoptr (i64 -6148914691236517206 to %struct.ogg_stream*), %215 ]
  %222 = phi i8* [ %214, %210 ], [ %218, %215 ]
  %223 = call i32 @avio_read(%struct.AVIOContext* %9, i8* %222, i32 %169) #6
  %224 = icmp slt i32 %223, %169
  br i1 %224, label %225, label %231

225:                                              ; preds = %219
  %226 = icmp slt i32 %220, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %225
  call void @av_free(i8* %222) #6
  br label %228

228:                                              ; preds = %227, %225
  %229 = icmp slt i32 %223, 0
  %230 = select i1 %229, i32 %223, i32 -541478725
  br label %425

231:                                              ; preds = %219
  %232 = zext i32 %84 to i64
  %233 = call i64 @ffio_get_checksum(%struct.AVIOContext* %9) #6
  %234 = icmp eq i64 %233, %232
  br i1 %234, label %241, label %235

235:                                              ; preds = %231
  %236 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %236, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)) #6
  %237 = icmp slt i32 %220, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @av_free(i8* %222) #6
  br label %239

239:                                              ; preds = %238, %235
  %240 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 %77, i32 0) #6
  store i32 -1, i32* %1, align 4
  br label %425

241:                                              ; preds = %231
  %242 = icmp eq i32 %78, 0
  br i1 %242, label %249, label %243

243:                                              ; preds = %241
  %244 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %244, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)) #6
  %245 = icmp slt i32 %220, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @av_free(i8* %222) #6
  br label %247

247:                                              ; preds = %246, %243
  %248 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 %77, i32 0) #6
  store i32 -1, i32* %1, align 4
  br label %425

249:                                              ; preds = %241
  %250 = icmp slt i32 %220, 0
  br i1 %250, label %251, label %372

251:                                              ; preds = %249
  %252 = load i32, i32* %170, align 8
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %295

254:                                              ; preds = %251
  %255 = getelementptr inbounds %struct.ogg, %struct.ogg* %12, i64 0, i32 0
  %256 = load %struct.ogg_stream*, %struct.ogg_stream** %255, align 8
  %257 = sext i32 %252 to i64
  br label %260

258:                                              ; preds = %260
  %259 = icmp eq i64 %265, %257
  br i1 %259, label %295, label %260

260:                                              ; preds = %258, %254
  %261 = phi i64 [ 0, %254 ], [ %265, %258 ]
  %262 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %256, i64 %261, i32 24
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, 0
  %265 = add nuw nsw i64 %261, 1
  br i1 %264, label %258, label %266

266:                                              ; preds = %260
  %267 = load %struct.ogg*, %struct.ogg** %11, align 8
  %268 = getelementptr inbounds %struct.ogg, %struct.ogg* %267, i64 0, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %273, label %271

271:                                              ; preds = %266
  %272 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %272, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %338

273:                                              ; preds = %266
  %274 = call fastcc %struct.ogg_codec* @ogg_find_codec(i8* %222, i32 %169) #6
  %275 = icmp ne %struct.ogg_codec* %274, null
  %276 = icmp ne i32 %2, 0
  %277 = or i1 %276, %275
  br i1 %277, label %280, label %278

278:                                              ; preds = %273
  %279 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %279, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0)) #6
  br label %338

280:                                              ; preds = %273
  %281 = getelementptr inbounds %struct.ogg, %struct.ogg* %267, i64 0, i32 0
  %282 = load %struct.ogg_stream*, %struct.ogg_stream** %281, align 8
  %283 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 15
  %284 = load %struct.ogg_codec*, %struct.ogg_codec** %283, align 8
  %285 = icmp eq %struct.ogg_codec* %284, %274
  br i1 %285, label %286, label %338

286:                                              ; preds = %280
  %287 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 7
  store %struct.ogg_codec* %274, %struct.ogg_codec** %283, align 8
  store i32 %81, i32* %287, align 8
  %288 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 10
  %289 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 26
  store i32 0, i32* %289, align 4
  %290 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 27
  store i32 0, i32* %290, align 8
  %291 = icmp eq %struct.ogg_codec* %274, @ff_opus_codec
  %292 = bitcast i64* %288 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %292, i8 0, i64 16, i1 false) #6
  br i1 %291, label %293, label %341

293:                                              ; preds = %286
  %294 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %282, i64 0, i32 16
  store i32 -1, i32* %294, align 8
  br label %341

295:                                              ; preds = %258, %251
  %296 = load %struct.ogg*, %struct.ogg** %11, align 8
  %297 = getelementptr inbounds %struct.ogg, %struct.ogg* %296, i64 0, i32 1
  %298 = load i32, i32* %297, align 8
  %299 = getelementptr inbounds %struct.ogg, %struct.ogg* %296, i64 0, i32 5
  %300 = load %struct.ogg_state*, %struct.ogg_state** %299, align 8
  %301 = icmp eq %struct.ogg_state* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %295
  %303 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %303, i32 16, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.18, i64 0, i64 0)) #6
  br label %338

304:                                              ; preds = %295
  %305 = add nsw i32 %298, 1
  %306 = sext i32 %305 to i64
  %307 = mul nsw i64 %306, 432
  %308 = icmp slt i32 %305, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %304
  %310 = udiv i64 %307, %306
  %311 = icmp eq i64 %310, 432
  br i1 %311, label %312, label %338

312:                                              ; preds = %309, %304
  %313 = bitcast %struct.ogg* %296 to i8**
  %314 = load i8*, i8** %313, align 8
  %315 = call i8* @av_realloc(i8* %314, i64 %307) #6
  %316 = icmp eq i8* %315, null
  br i1 %316, label %338, label %317

317:                                              ; preds = %312
  %318 = bitcast i8* %315 to %struct.ogg_stream*
  store i8* %315, i8** %313, align 8
  %319 = sext i32 %298 to i64
  %320 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %318, i64 %319
  %321 = bitcast %struct.ogg_stream* %320 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 432, i1 false) #6
  %322 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %318, i64 %319, i32 7
  store i32 %81, i32* %322, align 8
  %323 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %318, i64 %319, i32 1
  store i32 65307, i32* %323, align 8
  %324 = call i8* @av_realloc(i8* null, i64 65371) #6
  %325 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %320, i64 0, i32 0
  store i8* %324, i8** %325, align 8
  %326 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %318, i64 %319, i32 16
  store i32 -1, i32* %326, align 8
  %327 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %318, i64 %319, i32 9
  store i64 -1, i64* %327, align 8
  %328 = icmp eq i8* %324, null
  br i1 %328, label %338, label %329

329:                                              ; preds = %317
  %330 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #6
  %331 = icmp eq %struct.AVStream* %330, null
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @av_freep(i8* %321) #6
  br label %338

333:                                              ; preds = %329
  %334 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %330, i64 0, i32 1
  store i32 %298, i32* %334, align 4
  call void @avpriv_set_pts_info(%struct.AVStream* nonnull %330, i32 64, i32 1, i32 1000000) #6
  %335 = load i32, i32* %297, align 8
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %297, align 8
  %337 = icmp slt i32 %298, 0
  br i1 %337, label %338, label %341

338:                                              ; preds = %309, %317, %312, %332, %302, %280, %278, %271, %333
  %339 = phi i32 [ %298, %333 ], [ -12, %309 ], [ -12, %317 ], [ -12, %312 ], [ -12, %332 ], [ -558323010, %302 ], [ -22, %280 ], [ -1094995529, %278 ], [ -1163346256, %271 ]
  %340 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %340, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i64 0, i64 0)) #6
  call void @av_free(i8* %222) #6
  br label %425

341:                                              ; preds = %286, %293, %333
  %342 = phi i32 [ %298, %333 ], [ 0, %293 ], [ 0, %286 ]
  %343 = getelementptr inbounds %struct.ogg, %struct.ogg* %12, i64 0, i32 0
  %344 = load %struct.ogg_stream*, %struct.ogg_stream** %343, align 8
  %345 = sext i32 %342 to i64
  %346 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %344, i64 %345
  %347 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %344, i64 %345, i32 1
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %344, i64 %345, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %348, %350
  %352 = icmp ult i32 %351, %169
  %353 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %346, i64 0, i32 0
  %354 = load i8*, i8** %353, align 8
  br i1 %352, label %355, label %366

355:                                              ; preds = %341
  %356 = shl i32 %348, 1
  %357 = add i32 %356, 64
  %358 = zext i32 %357 to i64
  %359 = call i8* @av_realloc(i8* %354, i64 %358) #6
  %360 = icmp eq i8* %359, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %355
  store i8* %359, i8** %353, align 8
  %362 = load i32, i32* %347, align 8
  %363 = shl i32 %362, 1
  store i32 %363, i32* %347, align 8
  %364 = load i32, i32* %349, align 4
  br label %366

365:                                              ; preds = %355
  call void @av_free(i8* %222) #6
  br label %425

366:                                              ; preds = %341, %361
  %367 = phi i32 [ %364, %361 ], [ %350, %341 ]
  %368 = phi i8* [ %359, %361 ], [ %354, %341 ]
  %369 = zext i32 %367 to i64
  %370 = getelementptr inbounds i8, i8* %368, i64 %369
  %371 = zext i32 %169 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %370, i8* align 1 %222, i64 %371, i1 false)
  call void @av_free(i8* %222) #6
  br label %372

372:                                              ; preds = %366, %249
  %373 = phi %struct.ogg_stream* [ %346, %366 ], [ %221, %249 ]
  %374 = phi i32 [ %342, %366 ], [ %220, %249 ]
  store i64 %91, i64* %19, align 8
  %375 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 13
  store i64 %91, i64* %375, align 8
  %376 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 17
  store i32 %89, i32* %376, align 4
  %377 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 18
  store i32 0, i32* %377, align 8
  %378 = lshr i32 %79, 1
  %379 = and i32 %378, 1
  %380 = xor i32 %379, 1
  %381 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 24
  store i32 %380, i32* %381, align 4
  %382 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 2
  %383 = load i32, i32* %382, align 4
  %384 = add i32 %383, %169
  store i32 %384, i32* %382, align 4
  %385 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 8
  store i64 %80, i64* %385, align 8
  %386 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 14
  store i32 %79, i32* %386, align 8
  %387 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 19, i64 0
  %388 = sext i32 %89 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* nonnull align 16 %14, i64 %388, i1 false)
  %389 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = zext i32 %384 to i64
  %392 = getelementptr inbounds i8, i8* %390, i64 %391
  call void @llvm.memset.p0i8.i64(i8* align 1 %392, i8 0, i64 64, i1 false)
  %393 = and i32 %79, 1
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %372
  %396 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 20
  %397 = load i32, i32* %396, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %419, label %399

399:                                              ; preds = %395, %372
  %400 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 4
  %401 = load i32, i32* %400, align 4
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %424

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 3
  %405 = load i32, i32* %377, align 8
  %406 = load i32, i32* %376, align 4
  br label %407

407:                                              ; preds = %403, %410
  %408 = phi i32 [ %405, %403 ], [ %411, %410 ]
  %409 = icmp slt i32 %408, %406
  br i1 %409, label %410, label %421

410:                                              ; preds = %407
  %411 = add nsw i32 %408, 1
  store i32 %411, i32* %377, align 8
  %412 = sext i32 %408 to i64
  %413 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 19, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = load i32, i32* %404, align 8
  %417 = add i32 %416, %415
  store i32 %417, i32* %404, align 8
  %418 = icmp eq i8 %414, -1
  br i1 %418, label %407, label %421

419:                                              ; preds = %395
  %420 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 4
  store i32 0, i32* %420, align 4
  br label %421

421:                                              ; preds = %407, %410, %419
  %422 = load i64, i64* %375, align 8
  %423 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %373, i64 0, i32 12
  store i64 %422, i64* %423, align 8
  br label %424

424:                                              ; preds = %421, %399
  store i32 %374, i32* %1, align 4
  br label %425

425:                                              ; preds = %63, %200, %424, %365, %338, %247, %239, %228, %103, %73, %20
  %426 = phi i32 [ %22, %20 ], [ -1094995529, %73 ], [ %105, %103 ], [ %230, %228 ], [ 0, %239 ], [ 0, %247 ], [ %339, %338 ], [ -12, %365 ], [ 0, %424 ], [ -12, %200 ], [ -541478725, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  ret i32 %426
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc %struct.ogg_codec* @ogg_find_codec(i8* nocapture readonly, i32) unnamed_addr #0 {
  %3 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_skeleton_codec, i64 0, i32 1), align 8
  %4 = zext i8 %3 to i32
  %5 = icmp sgt i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_skeleton_codec, i64 0, i32 0), align 8
  %8 = zext i8 %3 to i64
  %9 = tail call i32 @bcmp(i8* %0, i8* %7, i64 %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6, %2
  %12 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_vorbis_codec, i64 0, i32 1), align 8
  %13 = zext i8 %12 to i32
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %22, label %17

15:                                               ; preds = %103, %98, %89, %80, %71, %62, %53, %44, %35, %26, %17, %6
  %16 = phi %struct.ogg_codec* [ @ff_skeleton_codec, %6 ], [ @ff_vorbis_codec, %17 ], [ @ff_theora_codec, %26 ], [ @ff_flac_codec, %35 ], [ @ff_opus_codec, %44 ], [ @ff_vp8_codec, %53 ], [ @ff_old_flac_codec, %62 ], [ @ff_ogm_video_codec, %71 ], [ @ff_ogm_audio_codec, %80 ], [ @ff_ogm_text_codec, %89 ], [ @ff_ogm_old_codec, %98 ], [ null, %103 ]
  ret %struct.ogg_codec* %16

17:                                               ; preds = %11
  %18 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_vorbis_codec, i64 0, i32 0), align 8
  %19 = zext i8 %12 to i64
  %20 = tail call i32 @bcmp(i8* %0, i8* %18, i64 %19)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %15, label %22

22:                                               ; preds = %17, %11
  %23 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_theora_codec, i64 0, i32 1), align 8
  %24 = zext i8 %23 to i32
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_theora_codec, i64 0, i32 0), align 8
  %28 = zext i8 %23 to i64
  %29 = tail call i32 @bcmp(i8* %0, i8* %27, i64 %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %15, label %31

31:                                               ; preds = %26, %22
  %32 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_flac_codec, i64 0, i32 1), align 8
  %33 = zext i8 %32 to i32
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_flac_codec, i64 0, i32 0), align 8
  %37 = zext i8 %32 to i64
  %38 = tail call i32 @bcmp(i8* %0, i8* %36, i64 %37)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %15, label %40

40:                                               ; preds = %35, %31
  %41 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_opus_codec, i64 0, i32 1), align 8
  %42 = zext i8 %41 to i32
  %43 = icmp sgt i32 %42, %1
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_opus_codec, i64 0, i32 0), align 8
  %46 = zext i8 %41 to i64
  %47 = tail call i32 @bcmp(i8* %0, i8* %45, i64 %46)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %15, label %49

49:                                               ; preds = %44, %40
  %50 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_vp8_codec, i64 0, i32 1), align 8
  %51 = zext i8 %50 to i32
  %52 = icmp sgt i32 %51, %1
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_vp8_codec, i64 0, i32 0), align 8
  %55 = zext i8 %50 to i64
  %56 = tail call i32 @bcmp(i8* %0, i8* %54, i64 %55)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %15, label %58

58:                                               ; preds = %53, %49
  %59 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_old_flac_codec, i64 0, i32 1), align 8
  %60 = zext i8 %59 to i32
  %61 = icmp sgt i32 %60, %1
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_old_flac_codec, i64 0, i32 0), align 8
  %64 = zext i8 %59 to i64
  %65 = tail call i32 @bcmp(i8* %0, i8* %63, i64 %64)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %15, label %67

67:                                               ; preds = %62, %58
  %68 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_video_codec, i64 0, i32 1), align 8
  %69 = zext i8 %68 to i32
  %70 = icmp sgt i32 %69, %1
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_video_codec, i64 0, i32 0), align 8
  %73 = zext i8 %68 to i64
  %74 = tail call i32 @bcmp(i8* %0, i8* %72, i64 %73)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %15, label %76

76:                                               ; preds = %71, %67
  %77 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_audio_codec, i64 0, i32 1), align 8
  %78 = zext i8 %77 to i32
  %79 = icmp sgt i32 %78, %1
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_audio_codec, i64 0, i32 0), align 8
  %82 = zext i8 %77 to i64
  %83 = tail call i32 @bcmp(i8* %0, i8* %81, i64 %82)
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %15, label %85

85:                                               ; preds = %80, %76
  %86 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_text_codec, i64 0, i32 1), align 8
  %87 = zext i8 %86 to i32
  %88 = icmp sgt i32 %87, %1
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_text_codec, i64 0, i32 0), align 8
  %91 = zext i8 %86 to i64
  %92 = tail call i32 @bcmp(i8* %0, i8* %90, i64 %91)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %15, label %94

94:                                               ; preds = %89, %85
  %95 = load i8, i8* getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_old_codec, i64 0, i32 1), align 8
  %96 = zext i8 %95 to i32
  %97 = icmp sgt i32 %96, %1
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = load i8*, i8** getelementptr inbounds (%struct.ogg_codec, %struct.ogg_codec* @ff_ogm_old_codec, i64 0, i32 0), align 8
  %100 = zext i8 %95 to i64
  %101 = tail call i32 @bcmp(i8* %0, i8* %99, i64 %100)
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %15, label %103

103:                                              ; preds = %98, %94
  br label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #3

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #3

declare i32 @avio_r8(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_feof(%struct.AVIOContext*) local_unnamed_addr #3

declare void @ffio_init_checksum(%struct.AVIOContext*, i64 (i64, i8*, i32)*, i64) local_unnamed_addr #3

declare i64 @ff_crc04C11DB7_update(i64, i8*, i32) #3

declare i32 @ffio_ensure_seekback(%struct.AVIOContext*, i64) local_unnamed_addr #3

declare i64 @avio_rl64(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_rl32(%struct.AVIOContext*) local_unnamed_addr #3

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #3

declare i64 @ffio_get_checksum(%struct.AVIOContext*) local_unnamed_addr #3

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #3

declare noalias i8* @av_malloc(i64) local_unnamed_addr #3

declare void @av_free(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #3

declare void @avpriv_report_missing_feature(i8*, i8*, ...) local_unnamed_addr #3

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #3

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #3

declare i32 @av_strerror(i32, i8*, i64) local_unnamed_addr #3

declare i64 @avio_size(%struct.AVIOContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ogg_save(%struct.AVFormatContext*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.ogg**
  %4 = load %struct.ogg*, %struct.ogg** %3, align 8
  %5 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  %8 = sext i32 %7 to i64
  %9 = mul nsw i64 %8, 432
  %10 = add nsw i64 %9, 464
  %11 = tail call noalias i8* @av_malloc(i64 %10) #6
  %12 = icmp eq i8* %11, null
  br i1 %12, label %71, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %14, align 8
  %16 = tail call i64 @avio_seek(%struct.AVIOContext* %15, i64 0, i32 1) #6
  %17 = bitcast i8* %11 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 8
  %22 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 5
  %23 = bitcast %struct.ogg_state** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = load i32, i32* %5, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %11, i64 32
  %31 = bitcast i8* %30 to [1 x %struct.ogg_stream]*
  %32 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 0
  %33 = bitcast %struct.ogg* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = load i32, i32* %5, align 8
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %36, 432
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %34, i64 %37, i1 false)
  %38 = load i32, i32* %5, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %13
  %41 = bitcast %struct.ogg_state** %22 to i8**
  store i8* %11, i8** %41, align 8
  br label %71

42:                                               ; preds = %13, %59
  %43 = phi i64 [ %63, %59 ], [ 0, %13 ]
  %44 = phi i32 [ %60, %59 ], [ 0, %13 ]
  %45 = load %struct.ogg_stream*, %struct.ogg_stream** %32, align 8
  %46 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %45, i64 %43, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, 64
  %49 = zext i32 %48 to i64
  %50 = tail call i8* @av_realloc(i8* null, i64 %49) #6
  %51 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %45, i64 %43, i32 0
  store i8* %50, i8** %51, align 8
  %52 = icmp eq i8* %50, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds [1 x %struct.ogg_stream], [1 x %struct.ogg_stream]* %31, i64 0, i64 %43, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %45, i64 %43, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 %55, i64 %58, i1 false)
  br label %59

59:                                               ; preds = %42, %53
  %60 = phi i32 [ %44, %53 ], [ -12, %42 ]
  %61 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %45, i64 %43, i32 28
  store i8* null, i8** %61, align 8
  %62 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %45, i64 %43, i32 29
  store i32 0, i32* %62, align 8
  %63 = add nuw nsw i64 %43, 1
  %64 = load i32, i32* %5, align 8
  %65 = sext i32 %64 to i64
  %66 = icmp slt i64 %63, %65
  br i1 %66, label %42, label %67

67:                                               ; preds = %59
  %68 = bitcast %struct.ogg_state** %22 to i8**
  store i8* %11, i8** %68, align 8
  %69 = icmp slt i32 %60, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call fastcc void @ogg_restore(%struct.AVFormatContext* %0)
  br label %71

71:                                               ; preds = %40, %67, %70, %1
  %72 = phi i32 [ -12, %1 ], [ %60, %70 ], [ %60, %67 ], [ 0, %40 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ogg_restore(%struct.AVFormatContext*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.ogg**
  %4 = load %struct.ogg*, %struct.ogg** %3, align 8
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8
  %7 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 5
  %8 = load %struct.ogg_state*, %struct.ogg_state** %7, align 8
  %9 = icmp eq %struct.ogg_state* %8, null
  br i1 %9, label %84, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 2
  %12 = bitcast %struct.ogg_state** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.ogg_state** %7 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %60

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 0
  %20 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 3
  br label %21

21:                                               ; preds = %18, %55
  %22 = phi i64 [ 0, %18 ], [ %56, %55 ]
  %23 = load %struct.ogg_stream*, %struct.ogg_stream** %19, align 8
  %24 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %23, i64 %22
  %25 = bitcast %struct.ogg_stream* %24 to i8*
  tail call void @av_freep(i8* %25) #6
  %26 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %23, i64 %22, i32 28
  %27 = bitcast i8** %26 to i8*
  tail call void @av_freep(i8* %27) #6
  %28 = load i32, i32* %20, align 8
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %22, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 4, i64 %22, i32 30
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %55

35:                                               ; preds = %31, %21
  %36 = load %struct.ogg*, %struct.ogg** %3, align 8
  %37 = getelementptr inbounds %struct.ogg, %struct.ogg* %36, i64 0, i32 0
  %38 = load %struct.ogg_stream*, %struct.ogg_stream** %37, align 8
  %39 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %38, i64 %22
  %40 = bitcast %struct.ogg_stream* %39 to i8*
  tail call void @av_freep(i8* %40) #6
  %41 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %38, i64 %22, i32 15
  %42 = load %struct.ogg_codec*, %struct.ogg_codec** %41, align 8
  %43 = icmp eq %struct.ogg_codec* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.ogg_codec, %struct.ogg_codec* %42, i64 0, i32 8
  %46 = load void (%struct.AVFormatContext*, i32)*, void (%struct.AVFormatContext*, i32)** %45, align 8
  %47 = icmp eq void (%struct.AVFormatContext*, i32)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = trunc i64 %22 to i32
  tail call void %46(%struct.AVFormatContext* %0, i32 %49) #6
  br label %50

50:                                               ; preds = %35, %44, %48
  %51 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %38, i64 %22, i32 30
  %52 = bitcast i8** %51 to i8*
  tail call void @av_freep(i8* %52) #6
  %53 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %38, i64 %22, i32 28
  %54 = bitcast i8** %53 to i8*
  tail call void @av_freep(i8* %54) #6
  br label %55

55:                                               ; preds = %31, %50
  %56 = add nuw nsw i64 %22, 1
  %57 = load i32, i32* %15, align 8
  %58 = sext i32 %57 to i64
  %59 = icmp slt i64 %56, %58
  br i1 %59, label %21, label %60

60:                                               ; preds = %55, %10
  %61 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 %62, i32 0) #6
  %64 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 4
  store i64 -1, i64* %64, align 8
  %65 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 3
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %15, align 8
  %70 = bitcast %struct.ogg* %4 to i8*
  %71 = sext i32 %69 to i64
  %72 = tail call i32 @av_reallocp_array(i8* %70, i64 %71, i64 432) #6
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %60
  store i32 0, i32* %15, align 8
  br label %84

75:                                               ; preds = %60
  %76 = bitcast %struct.ogg* %4 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %struct.ogg_state, %struct.ogg_state* %8, i64 0, i32 4, i64 0
  %79 = bitcast %struct.ogg_stream* %78 to i8*
  %80 = load i32, i32* %68, align 8
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %81, 432
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 %82, i1 false)
  %83 = bitcast %struct.ogg_state* %8 to i8*
  tail call void @av_free(i8* nonnull %83) #6
  br label %84

84:                                               ; preds = %1, %75, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ogg_reset(%struct.AVFormatContext* nocapture readonly) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.ogg**
  %4 = load %struct.ogg*, %struct.ogg** %3, align 8
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8
  %7 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #6
  %8 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %44

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  br label %14

14:                                               ; preds = %11, %34
  %15 = phi i64 [ 0, %11 ], [ %40, %34 ]
  %16 = load %struct.ogg_stream*, %struct.ogg_stream** %12, align 8
  %17 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 2
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 4
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 8
  store i64 -1, i64* %20, align 8
  %21 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 10
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 12
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 17
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 18
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 20
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 24
  store i32 0, i32* %28, align 4
  %29 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %13, align 8
  %30 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %29, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = icmp sgt i64 %7, %31
  br i1 %32, label %34, label %33

33:                                               ; preds = %14
  store i64 0, i64* %21, align 8
  br label %34

34:                                               ; preds = %14, %33
  %35 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 26
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 27
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 28
  %38 = bitcast i8** %37 to i8*
  tail call void @av_freep(i8* %38) #6
  %39 = getelementptr inbounds %struct.ogg_stream, %struct.ogg_stream* %16, i64 %15, i32 29
  store i32 0, i32* %39, align 8
  %40 = add nuw nsw i64 %15, 1
  %41 = load i32, i32* %8, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %14, label %44

44:                                               ; preds = %34, %1
  %45 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 4
  store i64 -1, i64* %45, align 8
  %46 = getelementptr inbounds %struct.ogg, %struct.ogg* %4, i64 0, i32 3
  store i32 -1, i32* %46, align 8
  ret void
}

declare i32 @av_reallocp_array(i8*, i64, i64) local_unnamed_addr #3

declare i32 @av_new_packet(%struct.AVPacket*, i32) local_unnamed_addr #3

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) local_unnamed_addr #3

declare i32 @av_packet_add_side_data(%struct.AVPacket*, i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

declare i32 @ff_seek_frame_binary(%struct.AVFormatContext*, i32, i64, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
