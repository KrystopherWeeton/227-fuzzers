; ModuleID = '../../third_party/ffmpeg/libavcodec/allcodecs.c'
source_filename = "../../third_party/ffmpeg/libavcodec/allcodecs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque

@codec_list = internal unnamed_addr constant [17 x %struct.AVCodec*] [%struct.AVCodec* @ff_theora_decoder, %struct.AVCodec* @ff_vp3_decoder, %struct.AVCodec* @ff_vp8_decoder, %struct.AVCodec* @ff_flac_decoder, %struct.AVCodec* @ff_mp3_decoder, %struct.AVCodec* @ff_vorbis_decoder, %struct.AVCodec* @ff_pcm_alaw_decoder, %struct.AVCodec* @ff_pcm_f32le_decoder, %struct.AVCodec* @ff_pcm_mulaw_decoder, %struct.AVCodec* @ff_pcm_s16be_decoder, %struct.AVCodec* @ff_pcm_s16le_decoder, %struct.AVCodec* @ff_pcm_s24be_decoder, %struct.AVCodec* @ff_pcm_s24le_decoder, %struct.AVCodec* @ff_pcm_s32le_decoder, %struct.AVCodec* @ff_pcm_u8_decoder, %struct.AVCodec* @ff_libopus_decoder, %struct.AVCodec* null], align 16
@av_codec_static_init = internal global i32 0, align 4
@av_codec_next_init = internal global i32 0, align 4
@ff_theora_decoder = external global %struct.AVCodec, align 8
@ff_vp3_decoder = external global %struct.AVCodec, align 8
@ff_vp8_decoder = external global %struct.AVCodec, align 8
@ff_flac_decoder = external global %struct.AVCodec, align 8
@ff_mp3_decoder = external global %struct.AVCodec, align 8
@ff_vorbis_decoder = external global %struct.AVCodec, align 8
@ff_pcm_alaw_decoder = external global %struct.AVCodec, align 8
@ff_pcm_f32le_decoder = external global %struct.AVCodec, align 8
@ff_pcm_mulaw_decoder = external global %struct.AVCodec, align 8
@ff_pcm_s16be_decoder = external global %struct.AVCodec, align 8
@ff_pcm_s16le_decoder = external global %struct.AVCodec, align 8
@ff_pcm_s24be_decoder = external global %struct.AVCodec, align 8
@ff_pcm_s24le_decoder = external global %struct.AVCodec, align 8
@ff_pcm_s32le_decoder = external global %struct.AVCodec, align 8
@ff_pcm_u8_decoder = external global %struct.AVCodec, align 8
@ff_libopus_decoder = external global %struct.AVCodec, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @av_codec_iterate(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %3
  %5 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  %6 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %7 = icmp eq i64 %3, 16
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = add i64 %3, 1
  %10 = inttoptr i64 %9 to i8*
  store i8* %10, i8** %0, align 8
  br label %11

11:                                               ; preds = %1, %8
  ret %struct.AVCodec* %5
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @av_codec_init_static() #0 {
  %1 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_theora_decoder, i64 0, i32 18), align 8
  %2 = icmp eq void (%struct.AVCodec*)* %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void %1(%struct.AVCodec* nonnull @ff_theora_decoder) #4
  br label %4

4:                                                ; preds = %0, %3
  %5 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_vp3_decoder, i64 0, i32 18), align 8
  %6 = icmp eq void (%struct.AVCodec*)* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void %5(%struct.AVCodec* nonnull @ff_vp3_decoder) #4
  br label %8

8:                                                ; preds = %7, %4
  %9 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_vp8_decoder, i64 0, i32 18), align 8
  %10 = icmp eq void (%struct.AVCodec*)* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void %9(%struct.AVCodec* nonnull @ff_vp8_decoder) #4
  br label %12

12:                                               ; preds = %11, %8
  %13 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_flac_decoder, i64 0, i32 18), align 8
  %14 = icmp eq void (%struct.AVCodec*)* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void %13(%struct.AVCodec* nonnull @ff_flac_decoder) #4
  br label %16

16:                                               ; preds = %15, %12
  %17 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_mp3_decoder, i64 0, i32 18), align 8
  %18 = icmp eq void (%struct.AVCodec*)* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void %17(%struct.AVCodec* nonnull @ff_mp3_decoder) #4
  br label %20

20:                                               ; preds = %19, %16
  %21 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_vorbis_decoder, i64 0, i32 18), align 8
  %22 = icmp eq void (%struct.AVCodec*)* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void %21(%struct.AVCodec* nonnull @ff_vorbis_decoder) #4
  br label %24

24:                                               ; preds = %23, %20
  %25 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_alaw_decoder, i64 0, i32 18), align 8
  %26 = icmp eq void (%struct.AVCodec*)* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  tail call void %25(%struct.AVCodec* nonnull @ff_pcm_alaw_decoder) #4
  br label %28

28:                                               ; preds = %27, %24
  %29 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_f32le_decoder, i64 0, i32 18), align 8
  %30 = icmp eq void (%struct.AVCodec*)* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  tail call void %29(%struct.AVCodec* nonnull @ff_pcm_f32le_decoder) #4
  br label %32

32:                                               ; preds = %31, %28
  %33 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_mulaw_decoder, i64 0, i32 18), align 8
  %34 = icmp eq void (%struct.AVCodec*)* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void %33(%struct.AVCodec* nonnull @ff_pcm_mulaw_decoder) #4
  br label %36

36:                                               ; preds = %35, %32
  %37 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_s16be_decoder, i64 0, i32 18), align 8
  %38 = icmp eq void (%struct.AVCodec*)* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void %37(%struct.AVCodec* nonnull @ff_pcm_s16be_decoder) #4
  br label %40

40:                                               ; preds = %39, %36
  %41 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_s16le_decoder, i64 0, i32 18), align 8
  %42 = icmp eq void (%struct.AVCodec*)* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void %41(%struct.AVCodec* nonnull @ff_pcm_s16le_decoder) #4
  br label %44

44:                                               ; preds = %43, %40
  %45 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_s24be_decoder, i64 0, i32 18), align 8
  %46 = icmp eq void (%struct.AVCodec*)* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  tail call void %45(%struct.AVCodec* nonnull @ff_pcm_s24be_decoder) #4
  br label %48

48:                                               ; preds = %47, %44
  %49 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_s24le_decoder, i64 0, i32 18), align 8
  %50 = icmp eq void (%struct.AVCodec*)* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  tail call void %49(%struct.AVCodec* nonnull @ff_pcm_s24le_decoder) #4
  br label %52

52:                                               ; preds = %51, %48
  %53 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_s32le_decoder, i64 0, i32 18), align 8
  %54 = icmp eq void (%struct.AVCodec*)* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void %53(%struct.AVCodec* nonnull @ff_pcm_s32le_decoder) #4
  br label %56

56:                                               ; preds = %55, %52
  %57 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_pcm_u8_decoder, i64 0, i32 18), align 8
  %58 = icmp eq void (%struct.AVCodec*)* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void %57(%struct.AVCodec* nonnull @ff_pcm_u8_decoder) #4
  br label %60

60:                                               ; preds = %59, %56
  %61 = load void (%struct.AVCodec*)*, void (%struct.AVCodec*)** getelementptr inbounds (%struct.AVCodec, %struct.AVCodec* @ff_libopus_decoder, i64 0, i32 18), align 8
  %62 = icmp eq void (%struct.AVCodec*)* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  tail call void %61(%struct.AVCodec* nonnull @ff_libopus_decoder) #4
  br label %64

64:                                               ; preds = %63, %60
  ret void
}

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @avcodec_register(%struct.AVCodec* nocapture readnone) local_unnamed_addr #2 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_codec_next_init, void ()* nonnull @av_codec_init_next) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @av_codec_init_next() #0 {
  %1 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  br label %2

2:                                                ; preds = %0, %9
  %3 = phi i64 [ 1, %0 ], [ %14, %9 ]
  %4 = phi %struct.AVCodec* [ @ff_theora_decoder, %0 ], [ %11, %9 ]
  %5 = phi %struct.AVCodec* [ null, %0 ], [ %4, %9 ]
  %6 = icmp eq %struct.AVCodec* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %5, i64 0, i32 15
  store %struct.AVCodec* %4, %struct.AVCodec** %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %3
  %11 = load %struct.AVCodec*, %struct.AVCodec** %10, align 8
  %12 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %13 = icmp eq i64 %3, 16
  %14 = add i64 %3, 1
  br i1 %13, label %15, label %2

15:                                               ; preds = %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @av_codec_next(%struct.AVCodec* readonly) local_unnamed_addr #0 {
  %2 = tail call i32 @pthread_once(i32* nonnull @av_codec_next_init, void ()* nonnull @av_codec_init_next) #4
  %3 = icmp eq %struct.AVCodec* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %0, i64 0, i32 15
  %6 = load %struct.AVCodec*, %struct.AVCodec** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %struct.AVCodec* [ %6, %4 ], [ @ff_theora_decoder, %1 ]
  ret %struct.AVCodec* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avcodec_register_all() local_unnamed_addr #0 {
  %1 = tail call i32 @pthread_once(i32* nonnull @av_codec_next_init, void ()* nonnull @av_codec_init_next) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @avcodec_find_encoder(i32) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %21, %1
  %3 = phi i64 [ %13, %21 ], [ 0, %1 ]
  %4 = phi %struct.AVCodec* [ %10, %21 ], [ null, %1 ]
  br label %5

5:                                                ; preds = %2, %17
  %6 = phi i64 [ %13, %17 ], [ %3, %2 ]
  br label %7

7:                                                ; preds = %14, %5
  %8 = phi i64 [ %13, %14 ], [ %6, %5 ]
  %9 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %8
  %10 = load %struct.AVCodec*, %struct.AVCodec** %9, align 8
  %11 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %12 = icmp eq i64 %8, 16
  %13 = add i64 %8, 1
  br i1 %12, label %28, label %14

14:                                               ; preds = %7
  %15 = tail call i32 @av_codec_is_encoder(%struct.AVCodec* nonnull %10) #4, !callees !2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %7, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %10, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %0
  br i1 %20, label %21, label %5

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %10, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 512
  %25 = icmp eq i32 %24, 0
  %26 = icmp ne %struct.AVCodec* %4, null
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %2

28:                                               ; preds = %21, %7
  %29 = phi %struct.AVCodec* [ %4, %7 ], [ %10, %21 ]
  ret %struct.AVCodec* %29
}

declare i32 @av_codec_is_encoder(%struct.AVCodec*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @avcodec_find_decoder(i32) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %21, %1
  %3 = phi i64 [ %13, %21 ], [ 0, %1 ]
  %4 = phi %struct.AVCodec* [ %10, %21 ], [ null, %1 ]
  br label %5

5:                                                ; preds = %2, %17
  %6 = phi i64 [ %13, %17 ], [ %3, %2 ]
  br label %7

7:                                                ; preds = %14, %5
  %8 = phi i64 [ %13, %14 ], [ %6, %5 ]
  %9 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %8
  %10 = load %struct.AVCodec*, %struct.AVCodec** %9, align 8
  %11 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %12 = icmp eq i64 %8, 16
  %13 = add i64 %8, 1
  br i1 %12, label %28, label %14

14:                                               ; preds = %7
  %15 = tail call i32 @av_codec_is_decoder(%struct.AVCodec* nonnull %10) #4, !callees !2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %7, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %10, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %0
  br i1 %20, label %21, label %5

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %10, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 512
  %25 = icmp eq i32 %24, 0
  %26 = icmp ne %struct.AVCodec* %4, null
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %2

28:                                               ; preds = %21, %7
  %29 = phi %struct.AVCodec* [ %4, %7 ], [ %10, %21 ]
  ret %struct.AVCodec* %29
}

declare i32 @av_codec_is_decoder(%struct.AVCodec*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @avcodec_find_encoder_by_name(i8* readonly) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  br label %5

5:                                                ; preds = %15, %3
  %6 = phi i64 [ 1, %3 ], [ %20, %15 ]
  %7 = phi %struct.AVCodec* [ @ff_theora_decoder, %3 ], [ %17, %15 ]
  %8 = tail call i32 @av_codec_is_encoder(%struct.AVCodec* nonnull %7) #4, !callees !2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %7, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @strcmp(i8* nonnull %0, i8* %12) #5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %10, %5
  %16 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %6
  %17 = load %struct.AVCodec*, %struct.AVCodec** %16, align 8
  %18 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %19 = icmp eq i64 %6, 16
  %20 = add nuw nsw i64 %6, 1
  br i1 %19, label %21, label %5

21:                                               ; preds = %10, %15, %1
  %22 = phi %struct.AVCodec* [ null, %1 ], [ %7, %10 ], [ null, %15 ]
  ret %struct.AVCodec* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodec* @avcodec_find_decoder_by_name(i8* readonly) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  br label %5

5:                                                ; preds = %15, %3
  %6 = phi i64 [ 1, %3 ], [ %20, %15 ]
  %7 = phi %struct.AVCodec* [ @ff_theora_decoder, %3 ], [ %17, %15 ]
  %8 = tail call i32 @av_codec_is_decoder(%struct.AVCodec* nonnull %7) #4, !callees !2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %7, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @strcmp(i8* nonnull %0, i8* %12) #5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %10, %5
  %16 = getelementptr inbounds [17 x %struct.AVCodec*], [17 x %struct.AVCodec*]* @codec_list, i64 0, i64 %6
  %17 = load %struct.AVCodec*, %struct.AVCodec** %16, align 8
  %18 = tail call i32 @pthread_once(i32* nonnull @av_codec_static_init, void ()* nonnull @av_codec_init_static) #4
  %19 = icmp eq i64 %6, 16
  %20 = add nuw nsw i64 %6, 1
  br i1 %19, label %21, label %5

21:                                               ; preds = %10, %15, %1
  %22 = phi %struct.AVCodec* [ null, %1 ], [ %7, %10 ], [ null, %15 ]
  ret %struct.AVCodec* %22
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (%struct.AVCodec*)* @av_codec_is_decoder, i32 (%struct.AVCodec*)* @av_codec_is_encoder}
