; ModuleID = '../../third_party/blink/renderer/core/frame/csp/execution_context_csp_delegate.cc'
source_filename = "../../third_party/blink/renderer/core/frame/csp/execution_context_csp_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.228", i32, [4 x i8], %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.366", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.383", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.408", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.346", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__atomic_base.266" }
%"struct.std::__1::__atomic_base.266" = type { %"struct.std::__1::__cxx_atomic_impl.267" }
%"struct.std::__1::__cxx_atomic_impl.267" = type { %"struct.std::__1::__cxx_atomic_base_impl.268" }
%"struct.std::__1::__cxx_atomic_base_impl.268" = type { i64 }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::Worklist.275"* }
%"class.blink::Worklist.275" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::Worklist.282"* }
%"class.blink::Worklist.282" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist.289"* }
%"class.blink::Worklist.289" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::Worklist.296"* }
%"class.blink::Worklist.296" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::Worklist.303"* }
%"class.blink::Worklist.303" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::Worklist.310"* }
%"class.blink::Worklist.310" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::Worklist.317"* }
%"class.blink::Worklist.317" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.264" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.339", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { float }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.349", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.358" }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"struct.std::__1::pair.376"*, i32, i32 }
%"struct.std::__1::pair.376" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.389" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.275"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.282"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.289"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.296"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.303"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.412", i64 }
%"class.std::__1::vector.412" = type { %"class.std::__1::__vector_base.413" }
%"class.std::__1::__vector_base.413" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.414" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.408" = type { %"struct.std::__1::__atomic_base.409" }
%"struct.std::__1::__atomic_base.409" = type { %"struct.std::__1::__cxx_atomic_impl.410" }
%"struct.std::__1::__cxx_atomic_impl.410" = type { %"struct.std::__1::__cxx_atomic_base_impl.411" }
%"struct.std::__1::__cxx_atomic_base_impl.411" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.709", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.711" }
%"class.blink::PersistentBase.711" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.714" }
%"class.blink::HeapHashMap.714" = type { %"class.WTF::HashMap.717" }
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.720" = type { %"class.blink::WeakMember.721", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::ExecutionContextCSPDelegate" = type { %"class.blink::ContentSecurityPolicyDelegate", %"class.blink::Member" }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.54", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.72", %"class.blink::Member.213", %"class.blink::Member.215", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.2929" }
%"class.blink::Member.2929" = type { %"class.blink::MemberBase.2930" }
%"class.blink::MemberBase.2930" = type { %"class.blink::Supplement.2931"* }
%"class.blink::Supplement.2931" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2932" }
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.51", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.16 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.29", %"class.std::__1::map.38"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.38" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair"* }
%"class.WTF::HashSet.51" = type { %"class.WTF::HashTable.52" }
%"class.WTF::HashTable.52" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.58"*, i32, i32 }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.65", i32, i32 }
%"class.blink::HeapHashMap.65" = type { %"class.WTF::HashMap.68" }
%"class.WTF::HashMap.68" = type { %"class.WTF::HashTable.69" }
%"class.WTF::HashTable.69" = type <{ %"struct.WTF::KeyValuePair.71"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.71" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.78" }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %"class.mojo::StructPtr.81"*, i32, i32 }
%"class.mojo::StructPtr.81" = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.85", %"class.WTF::HashMap.92", %"class.WTF::HashMap.97", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.102", i32, %"class.mojo::StructPtr.107", %"class.WTF::Vector.102" }
%"class.mojo::StructPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"struct.WTF::KeyValuePair.96"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.96" = type opaque
%"class.WTF::HashMap.97" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.107" = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.102", i8, i8, [6 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.204" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.122", i32 }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.131", %"class.absl::optional.136", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.157", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.179", %"class.std::__1::map.190", i64, %"class.base::OnceCallback.150", %"class.base::OnceCallback.199", i8, %class.scoped_refptr.141, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.200" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.126" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.150" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.141, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.144", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.155 }
%class.scoped_refptr.155 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.227", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.141, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.227" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.160", %class.scoped_refptr.161 }
%"class.base::RepeatingCallback.160" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.161 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.162", [4 x i8] }>
%"class.base::RefCountedThreadSafe.162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.178" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.179" = type { %"class.std::__1::__tree.180" }
%"class.std::__1::__tree.180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::OnceCallback.150" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.199" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.141 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.150" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.200" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.63", i8, [7 x i8], %"class.WTF::Vector.78", %"class.blink::HeapVector.219", i8, [7 x i8], %"class.WTF::HashSet.51", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.219" = type { %"class.WTF::Vector.222" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::Member.225"*, i32, i32 }
%"class.blink::Member.225" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3056", %"class.blink::FreeList", %"class.WTF::Vector.3061" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.3055" }
%"struct.std::__1::array.3055" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.3056" = type { %"class.WTF::VectorBuffer.3057" }
%"class.WTF::VectorBuffer.3057" = type { %"class.WTF::VectorBufferBase.3058" }
%"class.WTF::VectorBufferBase.3058" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.3061" = type { %"class.WTF::VectorBuffer.3062" }
%"class.WTF::VectorBuffer.3062" = type { %"class.WTF::VectorBufferBase.3063" }
%"class.WTF::VectorBufferBase.3063" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.419" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::KURL"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.462", %"class.blink::Member.468", %"class.blink::HeapHashSet.470", %class.scoped_refptr.477, %"class.blink::Member.479", %"class.blink::Member.481", i32, %"class.WTF::Vector.78", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.485" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.441" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.429" }
%"class.blink::HeapVector.429" = type { %"class.WTF::Vector.432" }
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434", [32 x i8] }
%"class.WTF::VectorBufferBase.434" = type { %"struct.std::__1::pair.435"*, i32, i32 }
%"struct.std::__1::pair.435" = type { %"class.WTF::AtomicString", %"class.blink::Member.436" }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::HeapVector.438"* }
%"class.blink::HeapVector.438" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.WTF::Vector.444"* }
%"class.WTF::Vector.444" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.54", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.72", %"class.blink::Member.213", %"class.blink::Member.215", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.450" }
%"class.blink::Supplementable.450" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.451" }
%"class.blink::HeapHashMap.451" = type { %"class.WTF::HashMap.454" }
%"class.WTF::HashMap.454" = type { %"class.WTF::HashTable.455" }
%"class.WTF::HashTable.455" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type { i8*, %"class.blink::Member.3035" }
%"class.blink::Member.3035" = type { %"class.blink::MemberBase.3036" }
%"class.blink::MemberBase.3036" = type { %"class.blink::Supplement.3037"* }
%"class.blink::Supplement.3037" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3038" }
%"class.blink::Member.3038" = type { %"class.blink::MemberBase.3039" }
%"class.blink::MemberBase.3039" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.458" }
%"struct.std::__1::atomic.458" = type { %"struct.std::__1::__atomic_base.459" }
%"struct.std::__1::__atomic_base.459" = type { %"struct.std::__1::__cxx_atomic_impl.460" }
%"struct.std::__1::__cxx_atomic_impl.460" = type { %"struct.std::__1::__cxx_atomic_base_impl.461" }
%"struct.std::__1::__cxx_atomic_base_impl.461" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::Member.497", %class.scoped_refptr.499, %class.scoped_refptr.499, %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.508", %"class.blink::Member.512", %"class.blink::Member.564", %"class.blink::HeapHashMap.566", %"class.blink::HeapHashSet.573", %"class.blink::HeapHashSet.573", %"class.blink::HeapHashMap.753", %"class.blink::HeapVector.760", %"class.blink::Member.768", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.771", %"class.WTF::Vector.778", %"class.blink::HeapHashSet.784", %"class.blink::HeapHashSet.784", %"class.std::__1::unique_ptr.790", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.802", i8, i8, %"class.base::WeakPtrFactory.804" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.499 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.506" }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.516", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.518", %"class.WTF::HashSet.523", i8, [3 x i8], i32, %"class.blink::HeapHashMap.527", %"class.std::__1::map.534", %"class.std::__1::map.545", %"class.std::__1::unique_ptr.554", %"class.blink::Member.502", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.561", %"class.mojo::InlinedStructPtr.563", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.527" = type { %"class.WTF::HashMap.530" }
%"class.WTF::HashMap.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"struct.WTF::KeyValuePair.533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.533" = type opaque
%"class.std::__1::map.534" = type { %"class.std::__1::__tree.535" }
%"class.std::__1::__tree.535" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.536", %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.563" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.566" = type { %"class.WTF::HashMap.569" }
%"class.WTF::HashMap.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"struct.WTF::KeyValuePair.572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.572" = type opaque
%"class.blink::HeapHashSet.573" = type { %"class.WTF::HashSet.576" }
%"class.WTF::HashSet.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"class.blink::WeakMember.579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.583", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.603", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.696", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.728", %"class.blink::ResourceResponse", %class.scoped_refptr.730, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.583" = type { %"class.absl::optional_internal::optional_data.584" }
%"class.absl::optional_internal::optional_data.584" = type { %"class.absl::optional_internal::optional_data_base.585" }
%"class.absl::optional_internal::optional_data_base.585" = type { %"class.absl::optional_internal::optional_data_dtor_base.586" }
%"class.absl::optional_internal::optional_data_dtor_base.586" = type { i8, %union.anon.587 }
%union.anon.587 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.588", i8, %"class.absl::optional.593", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.588" = type { %"class.absl::optional_internal::optional_data.589" }
%"class.absl::optional_internal::optional_data.589" = type { %"class.absl::optional_internal::optional_data_base.590" }
%"class.absl::optional_internal::optional_data_base.590" = type { %"class.absl::optional_internal::optional_data_dtor_base.591" }
%"class.absl::optional_internal::optional_data_dtor_base.591" = type { i8, [7 x i8], %union.anon.592 }
%union.anon.592 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.593" = type { %"class.absl::optional_internal::optional_data.594" }
%"class.absl::optional_internal::optional_data.594" = type { %"class.absl::optional_internal::optional_data_base.595" }
%"class.absl::optional_internal::optional_data_base.595" = type { %"class.absl::optional_internal::optional_data_dtor_base.596" }
%"class.absl::optional_internal::optional_data_dtor_base.596" = type { i8, %union.anon.597 }
%union.anon.597 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.598", %"class.WTF::Vector.102" }
%"class.WTF::Vector.598" = type { %"class.WTF::VectorBuffer.599" }
%"class.WTF::VectorBuffer.599" = type { %"class.WTF::VectorBufferBase.600" }
%"class.WTF::VectorBufferBase.600" = type { i32*, i32, i32 }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.604" }
%"class.WTF::VectorBuffer.604" = type { %"class.WTF::VectorBufferBase.605" }
%"class.WTF::VectorBufferBase.605" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.692" }
%"class.WTF::HashMap.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type <{ %"class.blink::WeakMember.3001", i32, [4 x i8] }>
%"class.blink::WeakMember.3001" = type { %"class.blink::MemberBase.3002" }
%"class.blink::MemberBase.3002" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3003", [7 x i8], %"class.blink::Member.766", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.3003" = type { i8 }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.580" }
%"class.blink::HeapHashSet.696" = type { %"class.WTF::HashSet.699" }
%"class.WTF::HashSet.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"class.blink::WeakMember.702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.702" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.703", i8, i8, %class.scoped_refptr.708, %class.scoped_refptr.723, %class.scoped_refptr.725 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ %"struct.std::__1::pair.707"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.707" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.708 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.723 = type { %"class.base::RefCountedData.724"* }
%"class.base::RefCountedData.724" = type opaque
%class.scoped_refptr.725 = type { %"class.base::RefCountedData.726"* }
%"class.base::RefCountedData.726" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.655" }
%"class.base::time_internal::TimeBase.655" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.16, %class.scoped_refptr.16, %class.scoped_refptr.16, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.611, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.623", %"class.absl::optional.628", %"class.absl::optional.638", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.643", %"class.absl::optional.638", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.638", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.643", %"class.absl::optional.648", i8, %class.scoped_refptr.653 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.606" }
%"class.WTF::HashMap.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ %"struct.WTF::KeyValuePair.610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.610" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.611 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.612", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.621, i8, %"class.url::Origin" }
%"class.base::RefCounted.612" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.14 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.613" }
%"class.std::__1::vector.613" = type { %"class.std::__1::__vector_base.614" }
%"class.std::__1::__vector_base.614" = type { %"class.std::__1::unique_ptr.615"*, %"class.std::__1::unique_ptr.615"*, %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.2915" }
%"class.std::__1::__compressed_pair.2915" = type { %"struct.std::__1::__compressed_pair_elem.2916" }
%"struct.std::__1::__compressed_pair_elem.2916" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::unique_ptr.615"* }
%class.scoped_refptr.621 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.622", [4 x i8] }>
%"class.base::RefCountedThreadSafe.622" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.628" = type { %"class.absl::optional_internal::optional_data.629" }
%"class.absl::optional_internal::optional_data.629" = type { %"class.absl::optional_internal::optional_data_base.630" }
%"class.absl::optional_internal::optional_data_base.630" = type { %"class.absl::optional_internal::optional_data_dtor_base.631" }
%"class.absl::optional_internal::optional_data_dtor_base.631" = type { i8, %union.anon.632 }
%union.anon.632 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.633", %"class.WTF::Vector.102", %"class.WTF::String" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %class.scoped_refptr.16*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.131", %"class.absl::optional.131" }
%"class.absl::optional.638" = type { %"class.absl::optional_internal::optional_data.639" }
%"class.absl::optional_internal::optional_data.639" = type { %"class.absl::optional_internal::optional_data_base.640" }
%"class.absl::optional_internal::optional_data_base.640" = type { %"class.absl::optional_internal::optional_data_dtor_base.641" }
%"class.absl::optional_internal::optional_data_dtor_base.641" = type { i8, %union.anon.642 }
%union.anon.642 = type { %"class.WTF::String" }
%"class.absl::optional.643" = type { %"class.absl::optional_internal::optional_data.644" }
%"class.absl::optional_internal::optional_data.644" = type { %"class.absl::optional_internal::optional_data_base.645" }
%"class.absl::optional_internal::optional_data_base.645" = type { %"class.absl::optional_internal::optional_data_dtor_base.646" }
%"class.absl::optional_internal::optional_data_dtor_base.646" = type { i8, %union.anon.647 }
%union.anon.647 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.648" = type { %"class.absl::optional_internal::optional_data.649" }
%"class.absl::optional_internal::optional_data.649" = type { %"class.absl::optional_internal::optional_data_base.650" }
%"class.absl::optional_internal::optional_data_base.650" = type { %"class.absl::optional_internal::optional_data_dtor_base.651" }
%"class.absl::optional_internal::optional_data_dtor_base.651" = type { i8, %union.anon.652 }
%union.anon.652 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.653 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2920", %"class.base::internal::flat_tree.2921" }
%"class.base::RefCountedThreadSafe.2920" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2921" = type { %"class.std::__1::vector.2922" }
%"class.std::__1::vector.2922" = type { %"class.std::__1::__vector_base.2923" }
%"class.std::__1::__vector_base.2923" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2924" }
%"class.std::__1::__compressed_pair.2924" = type { %"struct.std::__1::__compressed_pair_elem.2925" }
%"struct.std::__1::__compressed_pair_elem.2925" = type { i32* }
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.656", %class.scoped_refptr.671, %class.scoped_refptr.672, %"struct.blink::CacheControlHeader", %"class.absl::optional.131", %"class.absl::optional.673", %"class.absl::optional.673", %"class.absl::optional.673", i64, %"class.blink::KURL", %"class.WTF::Vector.678", %"class.WTF::String", %"class.WTF::Vector.102", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.643", %"class.WTF::Vector.102", %"class.blink::KURL", %"class.absl::optional.683" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.654", i8 }
%"struct.std::__1::array.654" = type { [16 x i8] }
%"class.absl::optional.656" = type { %"class.absl::optional_internal::optional_data.657" }
%"class.absl::optional_internal::optional_data.657" = type { %"class.absl::optional_internal::optional_data_base.658" }
%"class.absl::optional_internal::optional_data_base.658" = type { %"class.absl::optional_internal::optional_data_dtor_base.659" }
%"class.absl::optional_internal::optional_data_dtor_base.659" = type { i8, %union.anon.660 }
%union.anon.660 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.102", %"class.WTF::String", i64, i64, %"class.WTF::Vector.661", %"class.WTF::Vector.666" }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663" }
%"class.WTF::VectorBufferBase.663" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.671 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.672 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.673" = type { %"class.absl::optional_internal::optional_data.674" }
%"class.absl::optional_internal::optional_data.674" = type { %"class.absl::optional_internal::optional_data_base.675" }
%"class.absl::optional_internal::optional_data_base.675" = type { %"class.absl::optional_internal::optional_data_dtor_base.676" }
%"class.absl::optional_internal::optional_data_dtor_base.676" = type { i8, %union.anon.677 }
%union.anon.677 = type { %"class.base::Time" }
%"class.WTF::Vector.678" = type { %"class.WTF::VectorBuffer.679" }
%"class.WTF::VectorBuffer.679" = type { %"class.WTF::VectorBufferBase.680" }
%"class.WTF::VectorBufferBase.680" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.683" = type { %"class.absl::optional_internal::optional_data.684" }
%"class.absl::optional_internal::optional_data.684" = type { %"class.absl::optional_internal::optional_data_base.685" }
%"class.absl::optional_internal::optional_data_base.685" = type { %"class.absl::optional_internal::optional_data_dtor_base.686" }
%"class.absl::optional_internal::optional_data_dtor_base.686" = type { i8, %union.anon.687 }
%union.anon.687 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.730 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.731", i64, %"class.WTF::Vector.733", %"class.WTF::Vector.738" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.733" = type { %"class.WTF::VectorBuffer.734" }
%"class.WTF::VectorBuffer.734" = type { %"class.WTF::VectorBufferBase.735" }
%"class.WTF::VectorBufferBase.735" = type { i8*, i32, i32 }
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.739" }
%"class.WTF::VectorBuffer.739" = type { %"class.WTF::VectorBufferBase.740" }
%"class.WTF::VectorBufferBase.740" = type { %"class.std::__1::unique_ptr.741"*, i32, i32 }
%"class.std::__1::unique_ptr.741" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.744" }
%"class.std::__1::__tree.744" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.745", %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.blink::HeapHashMap.753" = type { %"class.WTF::HashMap.756" }
%"class.WTF::HashMap.756" = type { %"class.WTF::HashTable.757" }
%"class.WTF::HashTable.757" = type <{ %"struct.WTF::KeyValuePair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.759" = type opaque
%"class.blink::HeapVector.760" = type { %"class.WTF::Vector.763" }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { %"class.blink::Member.766"*, i32, i32 }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.476", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.499, %"class.base::WeakPtrFactory.770" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.476" = type { %"class.blink::MemberBase.469" }
%"class.blink::HeapHashMap.771" = type { %"class.WTF::HashMap.774" }
%"class.WTF::HashMap.774" = type { %"class.WTF::HashTable.775" }
%"class.WTF::HashTable.775" = type <{ %"struct.WTF::KeyValuePair.777"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.777" = type opaque
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780" }
%"class.WTF::VectorBufferBase.780" = type { %class.scoped_refptr.781*, i32, i32 }
%class.scoped_refptr.781 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.784" = type { %"class.WTF::HashSet.787" }
%"class.WTF::HashSet.787" = type { %"class.WTF::HashTable.788" }
%"class.WTF::HashTable.788" = type <{ %"class.blink::Member.728"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.WTF::HashSet.793"* }
%"class.WTF::HashSet.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.557 }
%class.scoped_refptr.557 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.800" }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.804" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.470" = type { %"class.WTF::HashSet.473" }
%"class.WTF::HashSet.473" = type { %"class.WTF::HashTable.474" }
%"class.WTF::HashTable.474" = type <{ %"class.blink::WeakMember.476"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.477 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.478", [4 x i8] }>
%"class.base::RefCounted.478" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.483", i32, [4 x i8] }>
%"class.std::__1::bitset.483" = type { %"class.std::__1::__bitset.484" }
%"class.std::__1::__bitset.484" = type { [25 x i64] }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::Vector.2455" = type { %"class.WTF::VectorBuffer.2456" }
%"class.WTF::VectorBuffer.2456" = type { %"class.WTF::VectorBufferBase.2457" }
%"class.WTF::VectorBufferBase.2457" = type { i32*, i32, i32 }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.918", %"class.blink::ThreadState::PrefinalizerRegistration.926", %"class.blink::Member.927", %"class.blink::Member.929", %"class.blink::Member.931", i8, %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.941", %"class.blink::Member.943", %"class.blink::Member.485", %"class.blink::Member.945", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.102", %"class.blink::Member.947", %class.scoped_refptr.949, %"class.blink::HeapHashSet.1012", %"class.blink::Member.1019", %"class.blink::HeapHashMap.1032", %"class.std::__1::unique_ptr.1039", %"class.blink::Member.1051", %"class.blink::Member.1080", %"class.blink::Member.1090", %"class.blink::Member.1097", %"class.WTF::Vector.1100", %"class.util::TokenType", %"class.WTF::HashSet.1105", %"class.WTF::Deque.1109" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.805", %"class.blink::Member.807", %"class.blink::Member.809", %"class.blink::Member.811", i8, %"class.WTF::Vector.813" }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1214", %"class.blink::Member.1216", %"class.blink::Member.1218", i8, i32, i8, i32, %"class.blink::Member.1220", %"class.blink::Member.807", %"class.blink::FrameLifecycle", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.1057", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1224", %"class.blink::Member.1234", i8, %"class.base::UnguessableToken", %"class.absl::optional.1236", %"class.absl::optional.643", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.805", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1248", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1256", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1264", %"class.blink::FrameLoader", %"class.blink::Member.1281", %"class.blink::Member.1131", %"class.blink::Member.1283", %"class.blink::Member.1285", %"class.blink::Member.1287", %"class.blink::Member.1289", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1291", %class.scoped_refptr.1511, %"class.blink::Member.1512", %"class.blink::Member.1514", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1535", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1538", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1560", %"class.std::__1::unique_ptr.1561", %"class.absl::optional.643", i32, [4 x i8], %"class.std::__1::unique_ptr.1567", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1575", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1580", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1585", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1588", %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.mojo::StructPtr.1597", %"class.blink::Member.1605", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1607", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1248" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1249" }
%"class.blink::HeapHashMap.1249" = type { %"class.WTF::HashMap.1252" }
%"class.WTF::HashMap.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"struct.WTF::KeyValuePair.1255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1255" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1042", %"class.base::WeakPtrFactory.1047" }
%"class.WTF::HashMap.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"struct.WTF::KeyValuePair.1046"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1046" = type opaque
%"class.base::WeakPtrFactory.1047" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1262" }
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2942", i64, %"class.std::__1::map.2943", i8*, i64, %"class.base::WeakPtrFactory.2952" }
%"class.base::RepeatingCallback.2942" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2943" = type { %"class.std::__1::__tree.2944" }
%"class.std::__1::__tree.2944" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2945", %"class.std::__1::__compressed_pair.2949" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.2949" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.2952" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1264" = type { %"class.WTF::HashSet.1267" }
%"class.WTF::HashSet.1267" = type { %"class.WTF::HashTable.1268" }
%"class.WTF::HashTable.1268" = type <{ %"class.blink::WeakMember.1270"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1270" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1057", %"class.blink::Member.1271", %"class.blink::Member.1273", %"class.std::__1::unique_ptr.1275", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.793" }
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.678", %"class.blink::Member.768", %"class.std::__1::unique_ptr.1972", %"class.std::__1::unique_ptr.72", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2126, %"class.WTF::AtomicString", i32, %"class.absl::optional.2025", %class.scoped_refptr.16, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1990", i8, %"class.absl::optional.1997", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1057", %"class.blink::Member.2139", %"class.blink::Member.2150", %"class.blink::Member.479", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2152", %class.scoped_refptr, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2165", %"class.std::__1::unique_ptr.2002", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2167", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.730, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.781, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2172", %"class.blink::Member.2187", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2200", %"class.WTF::Vector.102", i8, i8, i8, %"class.blink::WebVector.2115", %"class.blink::WebVector.2115", %"class.mojo::Remote.2205" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1972" = type { %"class.std::__1::__compressed_pair.1973" }
%"class.std::__1::__compressed_pair.1973" = type { %"struct.std::__1::__compressed_pair_elem.1974" }
%"struct.std::__1::__compressed_pair_elem.1974" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1976", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1990", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1997", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2002", %"class.base::UnguessableToken", %"class.blink::WebVector.2008", %"class.base::TickClock"*, %"class.blink::WebVector.2017", %"class.absl::optional.2025", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2030", %"class.blink::WebVector.1543", i8, %"class.blink::WebVector.2049", i8, %"class.std::__1::unique_ptr.2057", %"class.blink::WebVector.2115", %"class.blink::WebVector.2115" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1976" = type { %"class.std::__1::vector.1977" }
%"class.std::__1::vector.1977" = type { %"class.std::__1::__vector_base.1978" }
%"class.std::__1::__vector_base.1978" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1985" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1979", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1996", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1996" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1975" }
%"class.blink::WebPrivatePtr.1975" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2008" = type { %"class.std::__1::vector.2009" }
%"class.std::__1::vector.2009" = type { %"class.std::__1::__vector_base.2010" }
%"class.std::__1::__vector_base.2010" = type { %"class.std::__1::unique_ptr.2011"*, %"class.std::__1::unique_ptr.2011"*, %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::unique_ptr.2011" = type opaque
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.std::__1::unique_ptr.2011"* }
%"class.blink::WebVector.2017" = type { %"class.std::__1::vector.2018" }
%"class.std::__1::vector.2018" = type { %"class.std::__1::__vector_base.2019" }
%"class.std::__1::__vector_base.2019" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2030" = type { %"class.absl::optional_internal::optional_data.2031" }
%"class.absl::optional_internal::optional_data.2031" = type { %"class.absl::optional_internal::optional_data_base.2032" }
%"class.absl::optional_internal::optional_data_base.2032" = type { %"class.absl::optional_internal::optional_data_dtor_base.2033" }
%"class.absl::optional_internal::optional_data_dtor_base.2033" = type { i8, [7 x i8], %union.anon.2034 }
%union.anon.2034 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1543" = type { %"class.std::__1::vector.1544" }
%"class.std::__1::vector.1544" = type { %"class.std::__1::__vector_base.1545" }
%"class.std::__1::__vector_base.1545" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2049" = type { %"class.std::__1::vector.2050" }
%"class.std::__1::vector.2050" = type { %"class.std::__1::__vector_base.2051" }
%"class.std::__1::__vector_base.2051" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2052" }
%"class.std::__1::__compressed_pair.2052" = type { %"struct.std::__1::__compressed_pair_elem.2053" }
%"struct.std::__1::__compressed_pair_elem.2053" = type { i32* }
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2060" }
%"class.blink::WebVector.2060" = type { %"class.std::__1::vector.2061" }
%"class.std::__1::vector.2061" = type { %"class.std::__1::__vector_base.2062" }
%"class.std::__1::__vector_base.2062" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2107" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2063", %"class.blink::WebVector.2071", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1543", i32, [4 x i8], %"class.absl::optional.2102", %"class.blink::WebVector.1543" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2063" = type { %"class.std::__1::vector.2064" }
%"class.std::__1::vector.2064" = type { %"class.std::__1::__vector_base.2065" }
%"class.std::__1::__vector_base.2065" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2066" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2066" = type { %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2071" = type { %"class.std::__1::vector.2072" }
%"class.std::__1::vector.2072" = type { %"class.std::__1::__vector_base.2073" }
%"class.std::__1::__vector_base.2073" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2097" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2074", %"class.blink::WebVector.1543", %"class.blink::WebVector.2082", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2074" = type { %"class.std::__1::vector.2075" }
%"class.std::__1::vector.2075" = type { %"class.std::__1::__vector_base.2076" }
%"class.std::__1::__vector_base.2076" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2077" }
%"class.std::__1::__compressed_pair.2077" = type { %"struct.std::__1::__compressed_pair_elem.2078" }
%"struct.std::__1::__compressed_pair_elem.2078" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2082" = type { %"class.std::__1::vector.2083" }
%"class.std::__1::vector.2083" = type { %"class.std::__1::__vector_base.2084" }
%"class.std::__1::__vector_base.2084" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2092" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2085" }
%"class.blink::WebVector.2085" = type { %"class.std::__1::vector.2086" }
%"class.std::__1::vector.2086" = type { %"class.std::__1::__vector_base.2087" }
%"class.std::__1::__vector_base.2087" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2088" }
%"class.std::__1::__compressed_pair.2088" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { i8* }
%"class.std::__1::__compressed_pair.2092" = type { %"struct.std::__1::__compressed_pair_elem.2093" }
%"struct.std::__1::__compressed_pair_elem.2093" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.2098" }
%"struct.std::__1::__compressed_pair_elem.2098" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2102" = type { %"class.absl::optional_internal::optional_data.2103" }
%"class.absl::optional_internal::optional_data.2103" = type { %"class.absl::optional_internal::optional_data_base.2104" }
%"class.absl::optional_internal::optional_data_base.2104" = type { %"class.absl::optional_internal::optional_data_dtor_base.2105" }
%"class.absl::optional_internal::optional_data_dtor_base.2105" = type { i8, [7 x i8], %union.anon.2106 }
%union.anon.2106 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1543", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2126 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.2127", [4 x i8], %"class.WTF::Vector.2129", i64, %"class.WTF::Vector.733", i8, [7 x i8] }>
%"class.WTF::RefCounted.2127" = type { %"class.base::RefCounted.2128" }
%"class.base::RefCounted.2128" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2129" = type { %"class.WTF::VectorBuffer.2130" }
%"class.WTF::VectorBuffer.2130" = type { %"class.WTF::VectorBufferBase.2131" }
%"class.WTF::VectorBufferBase.2131" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.733", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2132, i64, i64, %"class.absl::optional.673", %class.scoped_refptr.2136 }
%class.scoped_refptr.2132 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.2133", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.2135", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.2133" = type { %"class.base::RefCountedThreadSafe.2134" }
%"class.base::RefCountedThreadSafe.2134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.2135" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2136 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.absl::optional.2025" = type { %"class.absl::optional_internal::optional_data.2026" }
%"class.absl::optional_internal::optional_data.2026" = type { %"class.absl::optional_internal::optional_data_base.2027" }
%"class.absl::optional_internal::optional_data_base.2027" = type { %"class.absl::optional_internal::optional_data_dtor_base.2028" }
%"class.absl::optional_internal::optional_data_dtor_base.2028" = type { i8, %union.anon.2029 }
%union.anon.2029 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1543", %"class.blink::WebString", %"class.blink::WebVector.1543", %"class.blink::WebVector.1543" }
%"class.std::__1::unique_ptr.1990" = type { %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1997" = type { %"class.absl::optional_internal::optional_data.1998" }
%"class.absl::optional_internal::optional_data.1998" = type { %"class.absl::optional_internal::optional_data_base.1999" }
%"class.absl::optional_internal::optional_data_base.1999" = type { %"class.absl::optional_internal::optional_data_dtor_base.2000" }
%"class.absl::optional_internal::optional_data_dtor_base.2000" = type { i8, %union.anon.2001 }
%union.anon.2001 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2035", %"class.base::flat_map.1224", i8, [7 x i8] }>
%"class.std::__1::vector.2035" = type { %"class.std::__1::__vector_base.2036" }
%"class.std::__1::__vector_base.2036" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2044" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2037", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2037" = type { %"class.std::__1::__vector_base.2038" }
%"class.std::__1::__vector_base.2038" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2044" = type { %"struct.std::__1::__compressed_pair_elem.2045" }
%"struct.std::__1::__compressed_pair_elem.2045" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.102", %"class.blink::Member.2143", %"class.absl::optional.2145", i64, i64, i32, %class.scoped_refptr.949, %class.scoped_refptr.2126, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.949 }
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2145" = type { %"class.absl::optional_internal::optional_data.2146" }
%"class.absl::optional_internal::optional_data.2146" = type { %"class.absl::optional_internal::optional_data_base.2147" }
%"class.absl::optional_internal::optional_data_base.2147" = type { %"class.absl::optional_internal::optional_data_dtor_base.2148" }
%"class.absl::optional_internal::optional_data_dtor_base.2148" = type { i8, %union.anon.2149 }
%union.anon.2149 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.2152" = type { %"class.mojo::internal::InterfacePtrState.2153" }
%"class.mojo::internal::InterfacePtrState.2153" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2154" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.817, %"class.std::__1::unique_ptr.122", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.141, i32 }>
%class.scoped_refptr.817 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.141, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.876", %"class.absl::optional.881", %"class.absl::optional.834", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.901", i8, [7 x i8], %class.scoped_refptr.141, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.162" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.150", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.141, %"class.std::__1::unique_ptr.818", %"class.absl::optional.828", %"struct.std::__1::atomic.408", i8, i8, i8, i8, i32, i32, %"class.absl::optional.834", %"class.std::__1::unique_ptr.839", i8, i64, %class.scoped_refptr.873, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.874", %"class.base::WeakPtrFactory.875" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.141, i8, %"class.mojo::ScopedHandleBase.821", %class.scoped_refptr.822, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.823", i8*, %"class.base::WeakPtrFactory.824" }
%"class.mojo::ScopedHandleBase.821" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.822 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.823" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.824" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.828" = type { %"class.absl::optional_internal::optional_data.829" }
%"class.absl::optional_internal::optional_data.829" = type { %"class.absl::optional_internal::optional_data_base.830" }
%"class.absl::optional_internal::optional_data_base.830" = type { %"class.absl::optional_internal::optional_data_dtor_base.831" }
%"class.absl::optional_internal::optional_data_dtor_base.831" = type { i8, %union.anon.832 }
%union.anon.832 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.833", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.833" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.842", i8, i64, %class.scoped_refptr.843, %class.scoped_refptr.868 }
%"class.base::RepeatingCallback.842" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.843 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.844", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.846", %"class.std::__1::map.857", i8, [7 x i8] }>
%"class.base::RefCounted.844" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.846" = type { %"class.std::__1::__tree.847" }
%"class.std::__1::__tree.847" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.848", %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.857" = type { %"class.std::__1::__tree.858" }
%"class.std::__1::__tree.858" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.859", %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%class.scoped_refptr.868 = type { %"class.base::RefCountedData.869"* }
%"class.base::RefCountedData.869" = type opaque
%class.scoped_refptr.873 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.874" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.875" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.876" = type { %"class.absl::optional_internal::optional_data.877" }
%"class.absl::optional_internal::optional_data.877" = type { %"class.absl::optional_internal::optional_data_base.878" }
%"class.absl::optional_internal::optional_data_base.878" = type { %"class.absl::optional_internal::optional_data_dtor_base.879" }
%"class.absl::optional_internal::optional_data_dtor_base.879" = type { i8, %union.anon.880 }
%union.anon.880 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.881" = type { %"class.absl::optional_internal::optional_data.882" }
%"class.absl::optional_internal::optional_data.882" = type { %"class.absl::optional_internal::optional_data_base.883" }
%"class.absl::optional_internal::optional_data_base.883" = type { %"class.absl::optional_internal::optional_data_dtor_base.884" }
%"class.absl::optional_internal::optional_data_dtor_base.884" = type { i8, [7 x i8], %union.anon.885 }
%union.anon.885 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.886 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.886 = type { %"class.std::__1::map.889" }
%"class.std::__1::map.889" = type { %"class.std::__1::__tree.890" }
%"class.std::__1::__tree.890" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.900"*, i64 }
%"class.std::__1::unique_ptr.900" = type opaque
%"class.std::__1::map.901" = type { %"class.std::__1::__tree.902" }
%"class.std::__1::__tree.902" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.2154" = type { %"class.std::__1::__compressed_pair.2155" }
%"class.std::__1::__compressed_pair.2155" = type { %"struct.std::__1::__compressed_pair_elem.2156" }
%"struct.std::__1::__compressed_pair_elem.2156" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2160", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1273" }
%"class.WTF::Vector.2160" = type { %"class.WTF::VectorBuffer.2161" }
%"class.WTF::VectorBuffer.2161" = type { %"class.WTF::VectorBufferBase.2162" }
%"class.WTF::VectorBufferBase.2162" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1224", %"class.base::flat_map" }
%"class.WTF::Vector.2167" = type { %"class.WTF::VectorBuffer.2168" }
%"class.WTF::VectorBuffer.2168" = type { %"class.WTF::VectorBufferBase.2169" }
%"class.WTF::VectorBufferBase.2169" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2176", %"class.std::__1::unique_ptr.2181", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type { %"class.WTF::Vector.3004", %class.scoped_refptr.3009 }
%"class.WTF::Vector.3004" = type { %"class.WTF::VectorBuffer.3005" }
%"class.WTF::VectorBuffer.3005" = type { %"class.WTF::VectorBufferBase.3006", [32 x i8] }
%"class.WTF::VectorBufferBase.3006" = type { i8*, i32, i32 }
%class.scoped_refptr.3009 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3010", %"class.WTF::Vector.3012", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3010" = type { %"class.base::RefCounted.3011" }
%"class.base::RefCounted.3011" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3012" = type { %"class.WTF::VectorBuffer.3013" }
%"class.WTF::VectorBuffer.3013" = type { %"class.WTF::VectorBufferBase.3006" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3016", i64, %"class.absl::optional.3021" }
%"class.std::__1::unique_ptr.3016" = type { %"class.std::__1::__compressed_pair.3017" }
%"class.std::__1::__compressed_pair.3017" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"class.absl::optional.3021" = type { %"class.absl::optional_internal::optional_data.3022" }
%"class.absl::optional_internal::optional_data.3022" = type { %"class.absl::optional_internal::optional_data_base.3023" }
%"class.absl::optional_internal::optional_data_base.3023" = type { %"class.absl::optional_internal::optional_data_dtor_base.3024" }
%"class.absl::optional_internal::optional_data_dtor_base.3024" = type { i8, %union.anon.3025 }
%union.anon.3025 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3026", %"class.std::__1::unique_ptr.3027" }
%"class.mojo::ScopedHandleBase.3026" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3027" = type { %"class.std::__1::__compressed_pair.3028" }
%"class.std::__1::__compressed_pair.3028" = type { %"struct.std::__1::__compressed_pair_elem.3029" }
%"struct.std::__1::__compressed_pair_elem.3029" = type { i8* }
%"class.std::__1::unique_ptr.2181" = type { %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.2183" }
%"struct.std::__1::__compressed_pair_elem.2183" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2193" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2189", %"class.std::__1::bitset.2189", %"class.std::__1::bitset.2191" }
%"class.std::__1::bitset.2189" = type { %"class.std::__1::__bitset.2190" }
%"class.std::__1::__bitset.2190" = type { [11 x i64] }
%"class.std::__1::bitset.2191" = type { %"class.std::__1::__bitset.2192" }
%"class.std::__1::__bitset.2192" = type { [2 x i64] }
%"class.blink::HeapHashSet.2193" = type { %"class.WTF::HashSet.2196" }
%"class.WTF::HashSet.2196" = type { %"class.WTF::HashTable.2197" }
%"class.WTF::HashTable.2197" = type <{ %"class.blink::Member.2199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2199" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2200" = type { %"class.WTF::VectorBuffer.2201" }
%"class.WTF::VectorBuffer.2201" = type { %"class.WTF::VectorBufferBase.2202" }
%"class.WTF::VectorBufferBase.2202" = type { i32*, i32, i32 }
%"class.blink::WebVector.2115" = type { %"class.std::__1::vector.2116" }
%"class.std::__1::vector.2116" = type { %"class.std::__1::__vector_base.2117" }
%"class.std::__1::__vector_base.2117" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2205" = type { %"class.mojo::internal::InterfacePtrState.2206" }
%"class.mojo::internal::InterfacePtrState.2206" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2207" }
%"class.std::__1::unique_ptr.2207" = type { %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.2209" }
%"struct.std::__1::__compressed_pair_elem.2209" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1686", %"class.blink::Member.1057", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1691", i8, i32, %"class.blink::Color", %"class.absl::optional.1693", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1698", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.std::__1::unique_ptr.1703", i32, [4 x i8], %"class.WTF::HashSet.1706", %"class.blink::Member.1713", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1715", %"class.blink::HeapHashSet.1722", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1730", i8, %"class.blink::Member.1736", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1748", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1762", i8, %"class.std::__1::unique_ptr.1768", %"class.std::__1::unique_ptr.1885", %"class.WTF::Vector.1891", i32, %class.scoped_refptr.1896, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1897", %"class.blink::Member.1899", %"class.blink::Member.1901", %"class.blink::HeapHashSet.1903", %"class.blink::HeapHashSet.1910", %"class.std::__1::unique_ptr.1917", %"class.std::__1::unique_ptr.1923", %"class.WTF::Vector.1929" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %class.scoped_refptr.1690*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1690 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1691" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1692", { i64, i64 } }
%"class.blink::WeakMember.1692" = type { %"class.blink::MemberBase.1282" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1693" = type { %"class.absl::optional_internal::optional_data.1694" }
%"class.absl::optional_internal::optional_data.1694" = type { %"class.absl::optional_internal::optional_data_base.1695" }
%"class.absl::optional_internal::optional_data_base.1695" = type { %"class.absl::optional_internal::optional_data_dtor_base.1696" }
%"class.absl::optional_internal::optional_data_dtor_base.1696" = type { i8, %union.anon.1697 }
%union.anon.1697 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1698" = type { %"class.blink::MemberBase.1699" }
%"class.blink::MemberBase.1699" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::HeapHashSet.1702"* }
%"class.blink::HeapHashSet.1702" = type opaque
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.WTF::HashSet.1706"* }
%"class.WTF::HashSet.1706" = type { %"class.WTF::HashTable.1707" }
%"class.WTF::HashTable.1707" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1715" = type { %"class.WTF::HashSet.1718" }
%"class.WTF::HashSet.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"class.blink::Member.1721"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1721" = type opaque
%"class.blink::HeapHashSet.1722" = type { %"class.WTF::HashSet.1725" }
%"class.WTF::HashSet.1725" = type { %"class.WTF::HashTable.1726" }
%"class.WTF::HashTable.1726" = type <{ %"class.blink::Member.1728"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1957", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1968", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1131" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1959", %"class.blink::Member.1960", %"class.blink::Member.1962", %"class.blink::Member.1964", %"class.blink::Member.1966", %"class.WTF::Vector.1929", i16, %class.scoped_refptr.499 }
%"class.blink::ThreadState::PrefinalizerRegistration.1959" = type { i8 }
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1968" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1969", { i64, i64 } }
%"class.blink::WeakMember.1969" = type { %"class.blink::MemberBase.1729" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1740", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1740" = type { %"class.WTF::HashTable.1741" }
%"class.WTF::HashTable.1741" = type <{ %"struct.WTF::KeyValuePair.1743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1743" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1744", i32, i32 }
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746" }
%"class.WTF::VectorBufferBase.1746" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1748" = type { %"class.WTF::LinkedHashSet.1751" }
%"class.WTF::LinkedHashSet.1751" = type { %"class.WTF::HashMap.1752", %"class.WTF::VectorBackedLinkedList.1756" }
%"class.WTF::HashMap.1752" = type { %"class.WTF::HashTable.1753" }
%"class.WTF::HashTable.1753" = type <{ %"struct.WTF::KeyValuePair.1755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1755" = type opaque
%"class.WTF::VectorBackedLinkedList.1756" = type { %"class.WTF::Vector.1757", i32, i32 }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.WTF::VectorBackedLinkedListNode.1760"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1760" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1762" = type { %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1771, %class.scoped_refptr.1771, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1862", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1867", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1771 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1772", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1779" }
%"class.WTF::RefCounted.1772" = type { %"class.base::RefCounted.1773" }
%"class.base::RefCounted.1773" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1774", i32, [4 x i8] }>
%"class.WTF::Vector.1774" = type { %"class.WTF::VectorBuffer.1775" }
%"class.WTF::VectorBuffer.1775" = type { %"class.WTF::VectorBufferBase.1776" }
%"class.WTF::VectorBufferBase.1776" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1785", %"class.std::__1::unique_ptr.1834", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1782, %class.scoped_refptr.1783, %class.scoped_refptr.1784 }
%class.scoped_refptr.1782 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1798", i8, i8, %class.scoped_refptr.1782, i32, i32 }
%"class.WTF::RefCounted.1798" = type { %"class.base::RefCounted.1799" }
%"class.base::RefCounted.1799" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1783 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1952" }
%"class.blink::PaintPropertyNode.1952" = type { %"class.WTF::RefCounted.1953", i8, i8, %class.scoped_refptr.1783, i32, i32 }
%"class.WTF::RefCounted.1953" = type { %"class.base::RefCounted.1954" }
%"class.base::RefCounted.1954" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1784 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1949" }
%"class.blink::PaintPropertyNode.1949" = type { %"class.WTF::RefCounted.1950", i8, i8, %class.scoped_refptr.1784, i32, i32 }
%"class.WTF::RefCounted.1950" = type { %"class.base::RefCounted.1951" }
%"class.base::RefCounted.1951" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1788", %"class.WTF::Vector.1793", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1793" = type { %"class.WTF::VectorBuffer.1794" }
%"class.WTF::VectorBuffer.1794" = type { %"class.WTF::VectorBufferBase.1795" }
%"class.WTF::VectorBufferBase.1795" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1813" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1806, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1807", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1800" }
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1806 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1934", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1934" = type { %"class.WTF::RefCounted.1935", i8, i8, %class.scoped_refptr.1806, i32, i32 }
%"class.WTF::RefCounted.1935" = type { %"class.base::RefCounted.1936" }
%"class.base::RefCounted.1936" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1937" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1937" = type { %"class.absl::optional_internal::optional_data.1938" }
%"class.absl::optional_internal::optional_data.1938" = type { %"class.absl::optional_internal::optional_data_base.1939" }
%"class.absl::optional_internal::optional_data_base.1939" = type { %"class.absl::optional_internal::optional_data_dtor_base.1940" }
%"class.absl::optional_internal::optional_data_dtor_base.1940" = type { i8, %union.anon.1941 }
%union.anon.1941 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1942", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1942" = type { %"class.std::__1::__vector_base.1943" }
%"class.std::__1::__vector_base.1943" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1944" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1944" = type { %"struct.std::__1::__compressed_pair_elem.1945" }
%"struct.std::__1::__compressed_pair_elem.1945" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1816", %"class.std::__1::unique_ptr.1822", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1822" = type { %"class.std::__1::__compressed_pair.1823" }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1834" = type { %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1837", %"class.absl::optional.1837" }
%"class.absl::optional.1837" = type { %"class.absl::optional_internal::optional_data.1838" }
%"class.absl::optional_internal::optional_data.1838" = type { %"class.absl::optional_internal::optional_data_base.1839" }
%"class.absl::optional_internal::optional_data_base.1839" = type { %"class.absl::optional_internal::optional_data_dtor_base.1840" }
%"class.absl::optional_internal::optional_data_dtor_base.1840" = type { i8, [3 x i8], %union.anon.1841 }
%union.anon.1841 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1779"*, %"class.absl::optional.1847", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1847" = type { %"class.absl::optional_internal::optional_data.1848" }
%"class.absl::optional_internal::optional_data.1848" = type { %"class.absl::optional_internal::optional_data_base.1849" }
%"class.absl::optional_internal::optional_data_base.1849" = type { %"class.absl::optional_internal::optional_data_dtor_base.1850" }
%"class.absl::optional_internal::optional_data_dtor_base.1850" = type { i8, %union.anon.1851 }
%union.anon.1851 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1852", %"class.WTF::Vector.1857" }
%"class.WTF::Vector.1852" = type { %"class.WTF::VectorBuffer.1853" }
%"class.WTF::VectorBuffer.1853" = type { %"class.WTF::VectorBufferBase.1854", [128 x i8] }
%"class.WTF::VectorBufferBase.1854" = type { i32*, i32, i32 }
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859", [128 x i8] }
%"class.WTF::VectorBufferBase.1859" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1862" = type { %"class.WTF::VectorBuffer.1863" }
%"class.WTF::VectorBuffer.1863" = type { %"class.WTF::VectorBufferBase.1864" }
%"class.WTF::VectorBufferBase.1864" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1867" = type { %"class.WTF::HashTable.1868" }
%"class.WTF::HashTable.1868" = type <{ %"struct.WTF::KeyValuePair.1871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1871" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1872", %"class.WTF::Vector.1877" }
%"class.WTF::HashMap.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"struct.WTF::KeyValuePair.1876"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1876" = type opaque
%"class.WTF::Vector.1877" = type { %"class.WTF::VectorBuffer.1878" }
%"class.WTF::VectorBuffer.1878" = type { %"class.WTF::VectorBufferBase.1879" }
%"class.WTF::VectorBufferBase.1879" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1885" = type { %"class.std::__1::__compressed_pair.1886" }
%"class.std::__1::__compressed_pair.1886" = type { %"struct.std::__1::__compressed_pair_elem.1887" }
%"struct.std::__1::__compressed_pair_elem.1887" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1891" = type { %"class.WTF::VectorBuffer.1892" }
%"class.WTF::VectorBuffer.1892" = type { %"class.WTF::VectorBufferBase.1893" }
%"class.WTF::VectorBufferBase.1893" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1896 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1899" = type { %"class.blink::MemberBase.1900" }
%"class.blink::MemberBase.1900" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.blink::HeapHashSet.1910" = type { %"class.WTF::HashSet.1913" }
%"class.WTF::HashSet.1913" = type { %"class.WTF::HashTable.1914" }
%"class.WTF::HashTable.1914" = type <{ %"class.blink::WeakMember.1916"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1916" = type opaque
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1923" = type { %"class.std::__1::__compressed_pair.1924" }
%"class.std::__1::__compressed_pair.1924" = type { %"struct.std::__1::__compressed_pair_elem.1925" }
%"struct.std::__1::__compressed_pair_elem.1925" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.673", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1929" = type { %"class.WTF::VectorBuffer.1930" }
%"class.WTF::VectorBuffer.1930" = type { %"class.WTF::VectorBufferBase.1931" }
%"class.WTF::VectorBufferBase.1931" = type { %"class.base::OnceCallback.150"*, i32, i32 }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1136" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1061", %"class.blink::Member.1061" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1061", %"class.blink::Member.1063", %"class.blink::Member.1061", %"class.blink::Member.1061", %"class.blink::Member.1065" }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1114", %"class.blink::Member.929", %"class.blink::Member.1063", %"class.blink::Member.1116", %"class.blink::Member.1116", %"class.blink::Member.1158", %"class.blink::Member.1160", %"class.blink::Member.1162", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1167", %"class.blink::HeapVector.1169" }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1120" }
%"class.blink::HeapHashMap.1120" = type { %"class.WTF::HashMap.1123" }
%"class.WTF::HashMap.1123" = type { %"class.WTF::HashTable.1124" }
%"class.WTF::HashTable.1124" = type <{ %"struct.WTF::KeyValuePair.1126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1126" = type { %"class.WTF::AtomicString", %"class.blink::Member.1127" }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1131", i32, %"class.blink::HeapVector.1151" }
%"class.blink::HeapVector.1151" = type { %"class.WTF::Vector.1154" }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { %"class.blink::Member.1131"*, i32, i32 }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1164" }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::HeapHashMap.1166"* }
%"class.blink::HeapHashMap.1166" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1169" = type { %"class.WTF::Vector.1172" }
%"class.WTF::Vector.1172" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174" }
%"class.WTF::VectorBufferBase.1174" = type { %"class.blink::Member.1175"*, i32, i32 }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1177", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1179, %"class.WTF::Vector.1180", %"class.WTF::Vector.1180", %"class.blink::Member.1061", %"class.blink::Member.1185", %"class.blink::HeapHashSet.1189", %"class.blink::Member.929", %"class.WTF::HashSet.1196", %"class.WTF::TextPosition", %"class.blink::Member.1200", %"class.blink::HeapVector.1202", %"class.blink::Member.1209" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1179 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182" }
%"class.WTF::VectorBufferBase.1182" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1187" }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1189" = type { %"class.WTF::HashSet.1192" }
%"class.WTF::HashSet.1192" = type { %"class.WTF::HashTable.1193" }
%"class.WTF::HashTable.1193" = type <{ %"class.blink::WeakMember.1195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1195" = type { %"class.blink::MemberBase.1064" }
%"class.WTF::HashSet.1196" = type { %"class.WTF::HashTable.1197" }
%"class.WTF::HashTable.1197" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1185"*, i32, i32 }
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1133 }
%class.scoped_refptr.1133 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1134", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1134" = type { %"class.base::RefCounted.1135" }
%"class.base::RefCounted.1135" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1140", %"class.blink::Member.1142", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1140" = type { %"class.WTF::SingleThreadedBitField.1141" }
%"class.WTF::SingleThreadedBitField.1141" = type { i32 }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1144 }
%class.scoped_refptr.1144 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1145", %"class.WTF::AtomicString", %"class.WTF::Vector.1147" }
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.663", [32 x i8] }
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1302", %"class.blink::HeapListHashSet.1313", %"class.blink::HeapListHashSet.1324", %"class.blink::HeapListHashSet.1335", %"class.blink::HeapListHashSet.1346", %"class.blink::HeapListHashSet.1357", %"class.blink::HeapListHashSet.1368", %"class.blink::HeapListHashSet.1379", %"class.blink::HeapListHashSet.1390", %"class.blink::HeapListHashSet.1401", %"class.blink::HeapListHashSet.1412", %"class.blink::HeapListHashSet.1423", %"class.blink::HeapListHashSet.1434", %"class.blink::HeapListHashSet.1445", %"class.blink::HeapListHashSet.1456", %"class.blink::HeapListHashSet.1467", %"class.blink::HeapListHashSet.1478", %"class.blink::HeapListHashSet.1489", %"class.blink::HeapListHashSet.1500" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1298", %"class.blink::Member.1300", %"class.blink::Member.1300", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1298" = type <{ %"class.blink::Member.1300"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1514", %"class.blink::Member.1300", %"class.blink::Member.1300" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1302" = type { %"class.WTF::ListHashSet.base.1312", [7 x i8] }
%"class.WTF::ListHashSet.base.1312" = type <{ %"class.WTF::HashTable.1307", %"class.blink::Member.1309", %"class.blink::Member.1309", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1307" = type <{ %"class.blink::Member.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::HeapListHashSetNode.1311"* }
%"class.blink::HeapListHashSetNode.1311" = type { %"class.blink::Member.1680", %"class.blink::Member.1309", %"class.blink::Member.1309" }
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1313" = type { %"class.WTF::ListHashSet.base.1323", [7 x i8] }
%"class.WTF::ListHashSet.base.1323" = type <{ %"class.WTF::HashTable.1318", %"class.blink::Member.1320", %"class.blink::Member.1320", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1318" = type <{ %"class.blink::Member.1320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HeapListHashSetNode.1322"* }
%"class.blink::HeapListHashSetNode.1322" = type { %"class.blink::Member.1676", %"class.blink::Member.1320", %"class.blink::Member.1320" }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1324" = type { %"class.WTF::ListHashSet.base.1334", [7 x i8] }
%"class.WTF::ListHashSet.base.1334" = type <{ %"class.WTF::HashTable.1329", %"class.blink::Member.1331", %"class.blink::Member.1331", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1329" = type <{ %"class.blink::Member.1331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::HeapListHashSetNode.1333"* }
%"class.blink::HeapListHashSetNode.1333" = type { %"class.blink::Member.1672", %"class.blink::Member.1331", %"class.blink::Member.1331" }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1335" = type { %"class.WTF::ListHashSet.base.1345", [7 x i8] }
%"class.WTF::ListHashSet.base.1345" = type <{ %"class.WTF::HashTable.1340", %"class.blink::Member.1342", %"class.blink::Member.1342", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1340" = type <{ %"class.blink::Member.1342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::HeapListHashSetNode.1344"* }
%"class.blink::HeapListHashSetNode.1344" = type { %"class.blink::Member.1668", %"class.blink::Member.1342", %"class.blink::Member.1342" }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1346" = type { %"class.WTF::ListHashSet.base.1356", [7 x i8] }
%"class.WTF::ListHashSet.base.1356" = type <{ %"class.WTF::HashTable.1351", %"class.blink::Member.1353", %"class.blink::Member.1353", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1351" = type <{ %"class.blink::Member.1353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::HeapListHashSetNode.1355"* }
%"class.blink::HeapListHashSetNode.1355" = type { %"class.blink::Member.1664", %"class.blink::Member.1353", %"class.blink::Member.1353" }
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1357" = type { %"class.WTF::ListHashSet.base.1367", [7 x i8] }
%"class.WTF::ListHashSet.base.1367" = type <{ %"class.WTF::HashTable.1362", %"class.blink::Member.1364", %"class.blink::Member.1364", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1362" = type <{ %"class.blink::Member.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::HeapListHashSetNode.1366"* }
%"class.blink::HeapListHashSetNode.1366" = type { %"class.blink::Member.1660", %"class.blink::Member.1364", %"class.blink::Member.1364" }
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1368" = type { %"class.WTF::ListHashSet.base.1378", [7 x i8] }
%"class.WTF::ListHashSet.base.1378" = type <{ %"class.WTF::HashTable.1373", %"class.blink::Member.1375", %"class.blink::Member.1375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1373" = type <{ %"class.blink::Member.1375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::HeapListHashSetNode.1377"* }
%"class.blink::HeapListHashSetNode.1377" = type { %"class.blink::Member.1656", %"class.blink::Member.1375", %"class.blink::Member.1375" }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1379" = type { %"class.WTF::ListHashSet.base.1389", [7 x i8] }
%"class.WTF::ListHashSet.base.1389" = type <{ %"class.WTF::HashTable.1384", %"class.blink::Member.1386", %"class.blink::Member.1386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1384" = type <{ %"class.blink::Member.1386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::HeapListHashSetNode.1388"* }
%"class.blink::HeapListHashSetNode.1388" = type { %"class.blink::Member.1652", %"class.blink::Member.1386", %"class.blink::Member.1386" }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1390" = type { %"class.WTF::ListHashSet.base.1400", [7 x i8] }
%"class.WTF::ListHashSet.base.1400" = type <{ %"class.WTF::HashTable.1395", %"class.blink::Member.1397", %"class.blink::Member.1397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1395" = type <{ %"class.blink::Member.1397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::HeapListHashSetNode.1399"* }
%"class.blink::HeapListHashSetNode.1399" = type { %"class.blink::Member.1648", %"class.blink::Member.1397", %"class.blink::Member.1397" }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1401" = type { %"class.WTF::ListHashSet.base.1411", [7 x i8] }
%"class.WTF::ListHashSet.base.1411" = type <{ %"class.WTF::HashTable.1406", %"class.blink::Member.1408", %"class.blink::Member.1408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1406" = type <{ %"class.blink::Member.1408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::HeapListHashSetNode.1410"* }
%"class.blink::HeapListHashSetNode.1410" = type { %"class.blink::Member.1527", %"class.blink::Member.1408", %"class.blink::Member.1408" }
%"class.blink::HeapListHashSet.1412" = type { %"class.WTF::ListHashSet.base.1422", [7 x i8] }
%"class.WTF::ListHashSet.base.1422" = type <{ %"class.WTF::HashTable.1417", %"class.blink::Member.1419", %"class.blink::Member.1419", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::HeapListHashSetNode.1421"* }
%"class.blink::HeapListHashSetNode.1421" = type { %"class.blink::Member.1642", %"class.blink::Member.1419", %"class.blink::Member.1419" }
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1423" = type { %"class.WTF::ListHashSet.base.1433", [7 x i8] }
%"class.WTF::ListHashSet.base.1433" = type <{ %"class.WTF::HashTable.1428", %"class.blink::Member.1430", %"class.blink::Member.1430", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1428" = type <{ %"class.blink::Member.1430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::HeapListHashSetNode.1432"* }
%"class.blink::HeapListHashSetNode.1432" = type { %"class.blink::Member.1638", %"class.blink::Member.1430", %"class.blink::Member.1430" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1434" = type { %"class.WTF::ListHashSet.base.1444", [7 x i8] }
%"class.WTF::ListHashSet.base.1444" = type <{ %"class.WTF::HashTable.1439", %"class.blink::Member.1441", %"class.blink::Member.1441", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1439" = type <{ %"class.blink::Member.1441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::HeapListHashSetNode.1443"* }
%"class.blink::HeapListHashSetNode.1443" = type { %"class.blink::Member.1634", %"class.blink::Member.1441", %"class.blink::Member.1441" }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1445" = type { %"class.WTF::ListHashSet.base.1455", [7 x i8] }
%"class.WTF::ListHashSet.base.1455" = type <{ %"class.WTF::HashTable.1450", %"class.blink::Member.1452", %"class.blink::Member.1452", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1450" = type <{ %"class.blink::Member.1452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::HeapListHashSetNode.1454"* }
%"class.blink::HeapListHashSetNode.1454" = type { %"class.blink::Member.1630", %"class.blink::Member.1452", %"class.blink::Member.1452" }
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1456" = type { %"class.WTF::ListHashSet.base.1466", [7 x i8] }
%"class.WTF::ListHashSet.base.1466" = type <{ %"class.WTF::HashTable.1461", %"class.blink::Member.1463", %"class.blink::Member.1463", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1461" = type <{ %"class.blink::Member.1463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::HeapListHashSetNode.1465"* }
%"class.blink::HeapListHashSetNode.1465" = type { %"class.blink::Member.1626", %"class.blink::Member.1463", %"class.blink::Member.1463" }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1467" = type { %"class.WTF::ListHashSet.base.1477", [7 x i8] }
%"class.WTF::ListHashSet.base.1477" = type <{ %"class.WTF::HashTable.1472", %"class.blink::Member.1474", %"class.blink::Member.1474", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1472" = type <{ %"class.blink::Member.1474"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::HeapListHashSetNode.1476"* }
%"class.blink::HeapListHashSetNode.1476" = type { %"class.blink::Member.1622", %"class.blink::Member.1474", %"class.blink::Member.1474" }
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1478" = type { %"class.WTF::ListHashSet.base.1488", [7 x i8] }
%"class.WTF::ListHashSet.base.1488" = type <{ %"class.WTF::HashTable.1483", %"class.blink::Member.1485", %"class.blink::Member.1485", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1483" = type <{ %"class.blink::Member.1485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::HeapListHashSetNode.1487"* }
%"class.blink::HeapListHashSetNode.1487" = type { %"class.blink::Member.1618", %"class.blink::Member.1485", %"class.blink::Member.1485" }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1489" = type { %"class.WTF::ListHashSet.base.1499", [7 x i8] }
%"class.WTF::ListHashSet.base.1499" = type <{ %"class.WTF::HashTable.1494", %"class.blink::Member.1496", %"class.blink::Member.1496", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1494" = type <{ %"class.blink::Member.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::HeapListHashSetNode.1498"* }
%"class.blink::HeapListHashSetNode.1498" = type { %"class.blink::Member.1529", %"class.blink::Member.1496", %"class.blink::Member.1496" }
%"class.blink::HeapListHashSet.1500" = type { %"class.WTF::ListHashSet.base.1510", [7 x i8] }
%"class.WTF::ListHashSet.base.1510" = type <{ %"class.WTF::HashTable.1505", %"class.blink::Member.1507", %"class.blink::Member.1507", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1505" = type <{ %"class.blink::Member.1507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::HeapListHashSetNode.1509"* }
%"class.blink::HeapListHashSetNode.1509" = type { %"class.blink::Member.1512", %"class.blink::Member.1507", %"class.blink::Member.1507" }
%class.scoped_refptr.1511 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1057", %"class.WTF::Vector.1100", i32, [4 x i8], %"class.blink::HeapHashMap.1518", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1518" = type { %"class.WTF::HashMap.1521" }
%"class.WTF::HashMap.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"struct.WTF::KeyValuePair.1524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1524" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1535" = type { %"class.blink::Member.1536" }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2955" }
%"class.mojo::Remote.2955" = type { %"class.mojo::internal::InterfacePtrState.2956" }
%"class.mojo::internal::InterfacePtrState.2956" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2957" }
%"class.std::__1::unique_ptr.2957" = type { %"class.std::__1::__compressed_pair.2958" }
%"class.std::__1::__compressed_pair.2958" = type { %"struct.std::__1::__compressed_pair_elem.2959" }
%"struct.std::__1::__compressed_pair_elem.2959" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1541, %"class.blink::WebVector.1543", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1541 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1542", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1542" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1551, i8, [7 x i8] }>
%class.scoped_refptr.1551 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1552", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1552" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1553" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1553" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1560" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1573" }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2965" }
%"class.mojo::AssociatedRemote.2965" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2966" }
%"class.mojo::internal::AssociatedInterfacePtrState.2966" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2967" }
%"class.std::__1::unique_ptr.2967" = type { %"class.std::__1::__compressed_pair.2968" }
%"class.std::__1::__compressed_pair.2968" = type { %"struct.std::__1::__compressed_pair_elem.2969" }
%"struct.std::__1::__compressed_pair_elem.2969" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1575" = type { %"class.blink::Member.1576" }
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2975" }
%"class.mojo::AssociatedRemote.2975" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2976" }
%"class.mojo::internal::AssociatedInterfacePtrState.2976" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2977" }
%"class.std::__1::unique_ptr.2977" = type { %"class.std::__1::__compressed_pair.2978" }
%"class.std::__1::__compressed_pair.2978" = type { %"struct.std::__1::__compressed_pair_elem.2979" }
%"struct.std::__1::__compressed_pair_elem.2979" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1578" }
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2985", %"class.blink::Member.1057", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2985" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2986" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.122" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2986" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1580" = type { %"class.blink::Member.1581" }
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2989", %"class.blink::Member.1057", %"class.mojo::AssociatedReceiver.2990" }
%"class.blink::ThreadState::PrefinalizerRegistration.2989" = type { i8 }
%"class.mojo::AssociatedReceiver.2990" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2991" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2991" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1583" }
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2994", %"class.blink::Member.1057", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2994" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.817, %"class.std::__1::unique_ptr.122", %"class.base::WeakPtrFactory.2995" }
%"class.base::WeakPtrFactory.2995" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1585" = type { %"class.blink::Member.1586" }
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2998", %"class.blink::Member.1057", %"class.mojo::AssociatedReceiver.2999" }
%"class.blink::ThreadState::PrefinalizerRegistration.2998" = type { i8 }
%"class.mojo::AssociatedReceiver.2999" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3000" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3000" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::HeapHashMap.1596"* }
%"class.blink::HeapHashMap.1596" = type opaque
%"class.mojo::StructPtr.1597" = type { %"class.std::__1::unique_ptr.1598" }
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1601", %"class.mojo::InlinedStructPtr.563" }
%"class.mojo::InlinedStructPtr.1601" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1607" = type { %"class.absl::optional_internal::optional_data.1608" }
%"class.absl::optional_internal::optional_data.1608" = type { %"class.absl::optional_internal::optional_data_base.1609" }
%"class.absl::optional_internal::optional_data_base.1609" = type { %"class.absl::optional_internal::optional_data_dtor_base.1610" }
%"class.absl::optional_internal::optional_data_dtor_base.1610" = type { i8, %union.anon.1611 }
%union.anon.1611 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.805", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1224" = type { %"class.base::internal::flat_tree.1225" }
%"class.base::internal::flat_tree.1225" = type { %"class.std::__1::vector.1226" }
%"class.std::__1::vector.1226" = type { %"class.std::__1::__vector_base.1227" }
%"class.std::__1::__vector_base.1227" = type { %"struct.std::__1::pair.1228"*, %"struct.std::__1::pair.1228"*, %"class.std::__1::__compressed_pair.1229" }
%"struct.std::__1::pair.1228" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"struct.std::__1::pair.1228"* }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1236" = type { %"class.absl::optional_internal::optional_data.1237" }
%"class.absl::optional_internal::optional_data.1237" = type { %"class.absl::optional_internal::optional_data_base.1238" }
%"class.absl::optional_internal::optional_data_base.1238" = type { %"class.absl::optional_internal::optional_data_dtor_base.1239" }
%"class.absl::optional_internal::optional_data_dtor_base.1239" = type { i8, %union.anon.1240 }
%union.anon.1240 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1241" }
%"class.blink::HeapHashSet.1241" = type { %"class.WTF::HashSet.1244" }
%"class.WTF::HashSet.1244" = type { %"class.WTF::HashTable.1245" }
%"class.WTF::HashTable.1245" = type <{ %"class.blink::WeakMember.1247"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1247" = type opaque
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.910" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Supplementable.918" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.919" }
%"class.blink::HeapHashMap.919" = type { %"class.WTF::HashMap.922" }
%"class.WTF::HashMap.922" = type { %"class.WTF::HashTable.923" }
%"class.WTF::HashTable.923" = type <{ %"struct.WTF::KeyValuePair.925"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.925" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.926" = type { i8 }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.2213", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1929", %"class.WTF::Vector.1929", i8, i32, %"class.blink::Member.1084", %"class.blink::Member", %"class.blink::Member.468", %"class.blink::Member.2150", %"class.blink::Member.2221", %"class.blink::Member.2223", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2225", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.2231", %"class.blink::Member.2233", %"class.blink::Member.1175", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.2235", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2240", %"class.blink::HeapVector.1151", %"class.blink::Member.1131", %"class.blink::Member.1076", %"class.blink::Member.1131", %"class.blink::Member.1131", %"class.blink::Member.1131", %"class.blink::UserActionElementSet", %"class.blink::Member.2249", double, double, i64, i64, %"class.blink::HeapHashSet.2251", %"class.blink::HeapHashSet.2258", i16, i8, %"class.blink::Member.2265", %"class.blink::Member.2267", %"class.blink::Member.2269", %"class.blink::Member.2271", %"class.blink::TextLinkColors", %"class.blink::Member.2273", i8, [7 x i8], %"class.blink::HeapHashMap.2275", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1131", %"class.WTF::Vector.2282", %"class.blink::Member.2287", %"class.blink::Member.2291", i8, %"class.blink::Member.1131", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2293", %"class.blink::HeapVector.2295", %"class.std::__1::unique_ptr.2303", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2309", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2322", %"class.WTF::Vector.2324", i8, i8, %"class.std::__1::unique_ptr.2329", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1151", %"class.blink::HeapVector.2335", i32, i8, %"class.blink::HeapTaskRunnerTimer.2240", %"class.blink::HeapTaskRunnerTimer.2240", %"class.blink::DocumentTiming", %"class.blink::Member.2343", i8, i32, %"class.blink::Member.2345", %"class.blink::Member.2347", %"class.blink::Member.2349", %"class.blink::HeapTaskRunnerTimer.2240", %"class.blink::Member.2351", %"class.WTF::HashMap.2353", %"class.blink::Member.2358", %"class.blink::Member.2360", %"class.blink::Member.2362", %"class.blink::Member.2364", %"class.blink::Member.929", %"class.blink::Member.929", %"class.blink::HeapTaskRunnerTimer.2240", %"class.blink::HeapHashSet.2366", i8, i32, %"class.blink::Member.2373", %"class.blink::Member.2375", i32, %"class.blink::Member.2377", %"class.blink::Member.2379", %"class.blink::Member.2381", %"class.std::__1::unique_ptr.2383", i64, %"class.std::__1::unique_ptr.2389", i32, i32, %"class.blink::Member.2395", %"class.blink::Member.2397", %"class.blink::Member.2399", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2401", %"class.WTF::Vector.1100", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2403", %"class.blink::Member.2410", %"class.std::__1::unique_ptr.2412", %"class.blink::Member.2418", i8, i8, %"class.WTF::String", %"class.blink::Member.2420", i8, [7 x i8], %"class.blink::HeapHashMap.2422", %"class.blink::HeapObserverSet.2429", %"class.blink::Member.2437", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2439", i32, i8, i8, %"class.blink::WeakMember.2441", %"class.blink::Member.2442" }
%"class.blink::Supplementable.2213" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2214" }
%"class.blink::HeapHashMap.2214" = type { %"class.WTF::HashMap.2217" }
%"class.WTF::HashMap.2217" = type { %"class.WTF::HashTable.2218" }
%"class.WTF::HashTable.2218" = type <{ %"struct.WTF::KeyValuePair.2220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2220" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.2225" = type { %"class.std::__1::__compressed_pair.2226" }
%"class.std::__1::__compressed_pair.2226" = type { %"struct.std::__1::__compressed_pair_elem.2227" }
%"struct.std::__1::__compressed_pair_elem.2227" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.2231" = type { %"class.blink::MemberBase.2232" }
%"class.blink::MemberBase.2232" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.2235" = type { %"class.WTF::VectorBuffer.2236" }
%"class.WTF::VectorBuffer.2236" = type { %"class.WTF::VectorBufferBase.2237" }
%"class.WTF::VectorBufferBase.2237" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.708 }
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.929", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1061", %"class.blink::Member.1061", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.2242" }
%"class.blink::HeapHashMap.2242" = type { %"class.WTF::HashMap.2245" }
%"class.WTF::HashMap.2245" = type { %"class.WTF::HashTable.2246" }
%"class.WTF::HashTable.2246" = type <{ %"struct.WTF::KeyValuePair.2248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2248" = type opaque
%"class.blink::Member.2249" = type { %"class.blink::MemberBase.2250" }
%"class.blink::MemberBase.2250" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.2251" = type { %"class.WTF::HashSet.2254" }
%"class.WTF::HashSet.2254" = type { %"class.WTF::HashTable.2255" }
%"class.WTF::HashTable.2255" = type <{ %"class.blink::WeakMember.2257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2257" = type opaque
%"class.blink::HeapHashSet.2258" = type { %"class.WTF::HashSet.2261" }
%"class.WTF::HashSet.2261" = type { %"class.WTF::HashTable.2262" }
%"class.WTF::HashTable.2262" = type <{ %"class.blink::WeakMember.2264"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2264" = type opaque
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2269" = type { %"class.blink::MemberBase.2270" }
%"class.blink::MemberBase.2270" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1063", %"class.blink::HeapVector.1169" }
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2273" = type { %"class.blink::MemberBase.2274" }
%"class.blink::MemberBase.2274" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2275" = type { %"class.WTF::HashMap.2278" }
%"class.WTF::HashMap.2278" = type { %"class.WTF::HashTable.2279" }
%"class.WTF::HashTable.2279" = type <{ %"struct.WTF::KeyValuePair.2281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2281" = type opaque
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.2284" }
%"class.WTF::VectorBufferBase.2284" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2287" = type { %"class.blink::MemberBase.2288" }
%"class.blink::MemberBase.2288" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.2291" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2295" = type { %"class.WTF::Vector.2298" }
%"class.WTF::Vector.2298" = type { %"class.WTF::VectorBuffer.2299" }
%"class.WTF::VectorBuffer.2299" = type { %"class.WTF::VectorBufferBase.2300" }
%"class.WTF::VectorBufferBase.2300" = type { %"class.blink::Member.2301"*, i32, i32 }
%"class.blink::Member.2301" = type opaque
%"class.std::__1::unique_ptr.2303" = type { %"class.std::__1::__compressed_pair.2304" }
%"class.std::__1::__compressed_pair.2304" = type { %"struct.std::__1::__compressed_pair_elem.2305" }
%"struct.std::__1::__compressed_pair_elem.2305" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2309" = type { %"class.WTF::HashSet.2312" }
%"class.WTF::HashSet.2312" = type { %"class.WTF::HashTable.2313" }
%"class.WTF::HashTable.2313" = type <{ %"class.blink::WeakMember.2315"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2315" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2316", i32, [4 x i8] }>
%"class.WTF::Vector.2316" = type { %"class.WTF::VectorBuffer.2317" }
%"class.WTF::VectorBuffer.2317" = type { %"class.WTF::VectorBufferBase.2318" }
%"class.WTF::VectorBufferBase.2318" = type { %"struct.std::__1::pair.2319"*, i32, i32 }
%"struct.std::__1::pair.2319" = type opaque
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2324" = type { %"class.WTF::VectorBuffer.2325" }
%"class.WTF::VectorBuffer.2325" = type { %"class.WTF::VectorBufferBase.2326" }
%"class.WTF::VectorBufferBase.2326" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.2329" = type { %"class.std::__1::__compressed_pair.2330" }
%"class.std::__1::__compressed_pair.2330" = type { %"struct.std::__1::__compressed_pair_elem.2331" }
%"struct.std::__1::__compressed_pair_elem.2331" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2335" = type { %"class.WTF::Vector.2338" }
%"class.WTF::Vector.2338" = type { %"class.WTF::VectorBuffer.2339" }
%"class.WTF::VectorBuffer.2339" = type { %"class.WTF::VectorBufferBase.2340" }
%"class.WTF::VectorBufferBase.2340" = type { %"class.blink::Member.2341"*, i32, i32 }
%"class.blink::Member.2341" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.929" }
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.2344" }
%"class.blink::MemberBase.2344" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2345" = type { %"class.blink::MemberBase.2346" }
%"class.blink::MemberBase.2346" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2349" = type { %"class.blink::MemberBase.2350" }
%"class.blink::MemberBase.2350" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2351" = type { %"class.blink::MemberBase.2352" }
%"class.blink::MemberBase.2352" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2353" = type { %"class.WTF::HashTable.2354" }
%"class.WTF::HashTable.2354" = type <{ %"struct.WTF::KeyValuePair.2357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2357" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.2240" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2241", { i64, i64 } }
%"class.blink::WeakMember.2241" = type { %"class.blink::MemberBase.930" }
%"class.blink::HeapHashSet.2366" = type { %"class.WTF::HashSet.2369" }
%"class.WTF::HashSet.2369" = type { %"class.WTF::HashTable.2370" }
%"class.WTF::HashTable.2370" = type <{ %"class.blink::Member.2372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2372" = type opaque
%"class.blink::Member.2373" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2381" = type { %"class.blink::MemberBase.2382" }
%"class.blink::MemberBase.2382" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2383" = type { %"class.std::__1::__compressed_pair.2384" }
%"class.std::__1::__compressed_pair.2384" = type { %"struct.std::__1::__compressed_pair_elem.2385" }
%"struct.std::__1::__compressed_pair_elem.2385" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2389" = type { %"class.std::__1::__compressed_pair.2390" }
%"class.std::__1::__compressed_pair.2390" = type { %"struct.std::__1::__compressed_pair_elem.2391" }
%"struct.std::__1::__compressed_pair_elem.2391" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.2403" = type { %"class.WTF::HashMap.2406" }
%"class.WTF::HashMap.2406" = type { %"class.WTF::HashTable.2407" }
%"class.WTF::HashTable.2407" = type <{ %"struct.WTF::KeyValuePair.2409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2409" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2412" = type { %"class.std::__1::__compressed_pair.2413" }
%"class.std::__1::__compressed_pair.2413" = type { %"struct.std::__1::__compressed_pair_elem.2414" }
%"struct.std::__1::__compressed_pair_elem.2414" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.2421" }
%"class.blink::MemberBase.2421" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2422" = type { %"class.WTF::HashMap.2425" }
%"class.WTF::HashMap.2425" = type { %"class.WTF::HashTable.2426" }
%"class.WTF::HashTable.2426" = type <{ %"struct.WTF::KeyValuePair.2428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2428" = type opaque
%"class.blink::HeapObserverSet.2429" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2430" }
%"class.blink::HeapHashSet.2430" = type { %"class.WTF::HashSet.2433" }
%"class.WTF::HashSet.2433" = type { %"class.WTF::HashTable.2434" }
%"class.WTF::HashTable.2434" = type <{ %"class.blink::WeakMember.2436"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2436" = type opaque
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2439" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.929", %"class.blink::HeapHashSet.2446", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2453", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2446" = type { %"class.WTF::HashSet.2449" }
%"class.WTF::HashSet.2449" = type { %"class.WTF::HashTable.2450" }
%"class.WTF::HashTable.2450" = type <{ %"class.blink::Member.2452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2452" = type opaque
%"class.blink::HeapTaskRunnerTimer.2453" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2454", { i64, i64 } }
%"class.blink::WeakMember.2454" = type { %"class.blink::MemberBase.2440" }
%"class.blink::WeakMember.2441" = type { %"class.blink::MemberBase.1062" }
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.949 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.951", i64, %"class.WTF::Vector.955", %"class.WTF::Vector.960", %"class.WTF::Vector.966", %"class.WTF::Vector.984", %class.scoped_refptr, %"class.WTF::HashMap.990", %"class.WTF::Vector.995", %"class.WTF::Vector.955", %"class.WTF::Vector.1001", %"class.WTF::HashMap.1007", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.950" }
%"class.base::RefCountedThreadSafe.950" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962", [8 x i8] }
%"class.WTF::VectorBufferBase.962" = type { %class.scoped_refptr.963*, i32, i32 }
%class.scoped_refptr.963 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.970", %"class.std::__1::unique_ptr.976" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.969 }
%class.scoped_refptr.969 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.987", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.987" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"struct.WTF::KeyValuePair.994"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.994" = type opaque
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.997" }
%"class.WTF::VectorBufferBase.997" = type { %"class.mojo::ScopedHandleBase.998"*, i32, i32 }
%"class.mojo::ScopedHandleBase.998" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.955" = type { %"class.WTF::VectorBuffer.956" }
%"class.WTF::VectorBuffer.956" = type { %"class.WTF::VectorBufferBase.957", [16 x i8] }
%"class.WTF::VectorBufferBase.957" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1001" = type { %"class.WTF::VectorBuffer.1002" }
%"class.WTF::VectorBuffer.1002" = type { %"class.WTF::VectorBufferBase.1003" }
%"class.WTF::VectorBufferBase.1003" = type { %"class.mojo::PendingRemote.1004"*, i32, i32 }
%"class.mojo::PendingRemote.1004" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.1007" = type { %"class.WTF::HashTable.1008" }
%"class.WTF::HashTable.1008" = type <{ %"struct.WTF::KeyValuePair.1011"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1011" = type { i8**, %"class.std::__1::unique_ptr.2934" }
%"class.std::__1::unique_ptr.2934" = type { %"class.std::__1::__compressed_pair.2935" }
%"class.std::__1::__compressed_pair.2935" = type { %"struct.std::__1::__compressed_pair_elem.2936" }
%"struct.std::__1::__compressed_pair_elem.2936" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1012" = type { %"class.WTF::HashSet.1015" }
%"class.WTF::HashSet.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"class.blink::WeakMember.1018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1018" = type opaque
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1026", %"class.blink::Member.1026", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1021" }
%"class.absl::optional.1021" = type { %"class.absl::optional_internal::optional_data.1022" }
%"class.absl::optional_internal::optional_data.1022" = type { %"class.absl::optional_internal::optional_data_base.1023" }
%"class.absl::optional_internal::optional_data_base.1023" = type { %"class.absl::optional_internal::optional_data_dtor_base.1024" }
%"class.absl::optional_internal::optional_data_dtor_base.1024" = type { i8, %union.anon.1025 }
%union.anon.1025 = type { i64 }
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::Event"* }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1032" = type { %"class.WTF::HashMap.1035" }
%"class.WTF::HashMap.1035" = type { %"class.WTF::HashTable.1036" }
%"class.WTF::HashTable.1036" = type <{ %"struct.WTF::KeyValuePair.1038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1038" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1057", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1076", %"class.blink::Member.1078", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1059", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1069", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1069" = type { %"class.WTF::HashMap.1072" }
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1075" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.1061", i32, i32 }
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088" }
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1084", %"class.blink::HeapMojoRemote.1094" }
%"class.blink::HeapMojoRemote.1094" = type { %"class.blink::Member.1095" }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::HeapHashMap.1099"* }
%"class.blink::HeapHashMap.1099" = type opaque
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias.816" }
%"class.base::StrongAlias.816" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1109" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113" }
%"class.WTF::VectorBufferBase.1113" = type { i64*, i32, i32 }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2463", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2463" = type { %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::SecurityPolicyViolationEventInit" = type { %"class.blink::EventInit.base", i8, i8, i8, %"class.WTF::String", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.WTF::String" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Persistent.2479" = type { %"class.blink::PersistentBase.2480" }
%"class.blink::PersistentBase.2480" = type { %"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.2481" = type { %"class.blink::PersistentBase.2482" }
%"class.blink::PersistentBase.2482" = type { %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.2483" = type { %"class.blink::PersistentBase.2484" }
%"class.blink::PersistentBase.2484" = type { %"class.blink::Element"*, %"class.blink::PersistentNodePtr.2485" }
%"class.blink::PersistentNodePtr.2485" = type { %"class.blink::PersistentNode"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142", [4 x i8] }>
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.3080", %"class.std::__1::__tuple_leaf.3081" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2479" }
%"class.std::__1::__tuple_leaf.3080" = type { %"class.blink::Persistent.2481" }
%"class.std::__1::__tuple_leaf.3081" = type { %"class.blink::Persistent.2483" }
%"class.blink::SecurityPolicyViolationEvent" = type <{ %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", i32, i32, i16, [6 x i8] }>
%"class.blink::CSPViolationReportBody" = type <{ %"class.blink::LocationReportBody", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, [6 x i8] }>
%"class.blink::LocationReportBody" = type { %"class.blink::ReportBody", %"class.WTF::String", %"class.absl::optional.2486", %"class.absl::optional.2486" }
%"class.blink::ReportBody" = type { %"class.blink::ScriptWrappable" }
%"class.absl::optional.2486" = type { %"class.absl::optional_internal::optional_data.2487" }
%"class.absl::optional_internal::optional_data.2487" = type { %"class.absl::optional_internal::optional_data_base.2488" }
%"class.absl::optional_internal::optional_data_base.2488" = type { %"class.absl::optional_internal::optional_data_dtor_base.2489" }
%"class.absl::optional_internal::optional_data_dtor_base.2489" = type { i8, %union.anon.2490 }
%union.anon.2490 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::Report" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.2491" }
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::ReportBody"* }
%"class.blink::ReportingContext" = type { %"class.blink::mojom::blink::ReportingObserver", %"class.blink::Supplement", %"class.blink::HeapListHashSet.2495", %"class.blink::HeapHashMap.2506", %"class.blink::Member", %"class.blink::HeapMojoRemote.1535", %"class.blink::HeapMojoReceiver.2513" }
%"class.blink::mojom::blink::ReportingObserver" = type { i32 (...)** }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::HeapListHashSet.2495" = type { %"class.WTF::ListHashSet.base.2505", [7 x i8] }
%"class.WTF::ListHashSet.base.2505" = type <{ %"class.WTF::HashTable.2500", %"class.blink::Member.2502", %"class.blink::Member.2502", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2500" = type <{ %"class.blink::Member.2502"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2502" = type { %"class.blink::MemberBase.2503" }
%"class.blink::MemberBase.2503" = type { %"class.blink::HeapListHashSetNode.2504"* }
%"class.blink::HeapListHashSetNode.2504" = type { %"class.blink::Member.2518", %"class.blink::Member.2502", %"class.blink::Member.2502" }
%"class.blink::Member.2518" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::ReportingObserver"* }
%"class.blink::ReportingObserver" = type opaque
%"class.blink::HeapHashMap.2506" = type { %"class.WTF::HashMap.2509" }
%"class.WTF::HashMap.2509" = type { %"class.WTF::HashTable.2510" }
%"class.WTF::HashTable.2510" = type <{ %"struct.WTF::KeyValuePair.2512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2512" = type opaque
%"class.blink::HeapMojoReceiver.2513" = type { %"class.blink::Member.2514" }
%"class.blink::Member.2514" = type { %"class.blink::MemberBase.2515" }
%"class.blink::MemberBase.2515" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::ConsoleMessage" = type opaque
%"class.mojo::StructPtr.2520" = type { %"class.std::__1::unique_ptr.2521" }
%"class.std::__1::unique_ptr.2521" = type { %"class.std::__1::__compressed_pair.2522" }
%"class.std::__1::__compressed_pair.2522" = type { %"struct.std::__1::__compressed_pair_elem.2523" }
%"struct.std::__1::__compressed_pair_elem.2523" = type { %"class.blink::mojom::blink::InspectorIssueInfo"* }
%"class.blink::mojom::blink::InspectorIssueInfo" = type { i32, %"class.mojo::StructPtr.2524" }
%"class.mojo::StructPtr.2524" = type { %"class.std::__1::unique_ptr.2525" }
%"class.std::__1::unique_ptr.2525" = type { %"class.std::__1::__compressed_pair.2526" }
%"class.std::__1::__compressed_pair.2526" = type { %"struct.std::__1::__compressed_pair_elem.2527" }
%"struct.std::__1::__compressed_pair_elem.2527" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.2528", %"class.mojo::StructPtr.2554", %"class.mojo::StructPtr.2563", %"class.mojo::StructPtr.2570", %"class.mojo::StructPtr.2579", %"class.mojo::StructPtr.2586", %"class.mojo::StructPtr.2593", %"class.mojo::StructPtr.2600" }
%"class.mojo::StructPtr.2528" = type { %"class.std::__1::unique_ptr.2529" }
%"class.std::__1::unique_ptr.2529" = type { %"class.std::__1::__compressed_pair.2530" }
%"class.std::__1::__compressed_pair.2530" = type { %"struct.std::__1::__compressed_pair_elem.2531" }
%"struct.std::__1::__compressed_pair_elem.2531" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr.2532", %"class.WTF::Vector.2534", %"class.WTF::Vector.2539", i32, %"class.absl::optional.2544", %"class.absl::optional.2544", %"class.mojo::InlinedStructPtr.2549" }
%"class.mojo::InlinedStructPtr.2532" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.2534" = type { %"class.WTF::VectorBuffer.2535" }
%"class.WTF::VectorBuffer.2535" = type { %"class.WTF::VectorBufferBase.2536" }
%"class.WTF::VectorBufferBase.2536" = type { i32*, i32, i32 }
%"class.WTF::Vector.2539" = type { %"class.WTF::VectorBuffer.2540" }
%"class.WTF::VectorBuffer.2540" = type { %"class.WTF::VectorBufferBase.2541" }
%"class.WTF::VectorBufferBase.2541" = type { i32*, i32, i32 }
%"class.absl::optional.2544" = type { %"class.absl::optional_internal::optional_data.2545" }
%"class.absl::optional_internal::optional_data.2545" = type { %"class.absl::optional_internal::optional_data_base.2546" }
%"class.absl::optional_internal::optional_data_base.2546" = type { %"class.absl::optional_internal::optional_data_dtor_base.2547" }
%"class.absl::optional_internal::optional_data_dtor_base.2547" = type { i8, %union.anon.2548 }
%union.anon.2548 = type { %"class.blink::KURL" }
%"class.mojo::InlinedStructPtr.2549" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.2554" = type { %"class.std::__1::unique_ptr.2555" }
%"class.std::__1::unique_ptr.2555" = type { %"class.std::__1::__compressed_pair.2556" }
%"class.std::__1::__compressed_pair.2556" = type { %"struct.std::__1::__compressed_pair_elem.2557" }
%"struct.std::__1::__compressed_pair_elem.2557" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.2549", %"class.mojo::InlinedStructPtr.2558" }
%"class.mojo::InlinedStructPtr.2558" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.2563" = type { %"class.std::__1::unique_ptr.2564" }
%"class.std::__1::unique_ptr.2564" = type { %"class.std::__1::__compressed_pair.2565" }
%"class.std::__1::__compressed_pair.2565" = type { %"struct.std::__1::__compressed_pair_elem.2566" }
%"struct.std::__1::__compressed_pair_elem.2566" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.2549", %"class.mojo::InlinedStructPtr.2558", %"class.mojo::InlinedStructPtr.2558", i32, [4 x i8] }
%"class.mojo::StructPtr.2570" = type { %"class.std::__1::unique_ptr.2571" }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional.2544", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.2558", %"class.mojo::InlinedStructPtr.2574", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.2574" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2579" = type { %"class.std::__1::unique_ptr.2580" }
%"class.std::__1::unique_ptr.2580" = type { %"class.std::__1::__compressed_pair.2581" }
%"class.std::__1::__compressed_pair.2581" = type { %"struct.std::__1::__compressed_pair_elem.2582" }
%"struct.std::__1::__compressed_pair_elem.2582" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.2574", i8, i32 }
%"class.mojo::StructPtr.2586" = type { %"class.std::__1::unique_ptr.2587" }
%"class.std::__1::unique_ptr.2587" = type { %"class.std::__1::__compressed_pair.2588" }
%"class.std::__1::__compressed_pair.2588" = type { %"struct.std::__1::__compressed_pair_elem.2589" }
%"struct.std::__1::__compressed_pair_elem.2589" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.2593" = type { %"class.std::__1::unique_ptr.2594" }
%"class.std::__1::unique_ptr.2594" = type { %"class.std::__1::__compressed_pair.2595" }
%"class.std::__1::__compressed_pair.2595" = type { %"struct.std::__1::__compressed_pair_elem.2596" }
%"struct.std::__1::__compressed_pair_elem.2596" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.2558" }
%"class.mojo::StructPtr.2600" = type { %"class.std::__1::unique_ptr.2601" }
%"class.std::__1::unique_ptr.2601" = type { %"class.std::__1::__compressed_pair.2602" }
%"class.std::__1::__compressed_pair.2602" = type { %"struct.std::__1::__compressed_pair_elem.2603" }
%"struct.std::__1::__compressed_pair_elem.2603" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"struct.blink::LocationReportBody::ReportLocation" = type { %"class.WTF::String", %"class.absl::optional.2486", %"class.absl::optional.2486" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3089, %"class.blink::Member.3090", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3135" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3089 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3090" = type { %"class.blink::MemberBase.3091" }
%"class.blink::MemberBase.3091" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.3094", %"class.blink::HeapHashMap.3101", %"class.std::__1::unique_ptr.3111", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.3123", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.3126" }
%"class.blink::HeapHashMap.3094" = type { %"class.WTF::HashMap.3097" }
%"class.WTF::HashMap.3097" = type { %"class.WTF::HashTable.3098" }
%"class.WTF::HashTable.3098" = type <{ %"struct.WTF::KeyValuePair.3100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3100" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.3101" = type { %"class.WTF::HashMap.3104" }
%"class.WTF::HashMap.3104" = type { %"class.WTF::HashTable.3105" }
%"class.WTF::HashTable.3105" = type <{ %"struct.WTF::KeyValuePair.3107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3107" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.3108" }
%"class.blink::TraceWrapperV8Reference.3108" = type { %"class.v8::TracedReference.3109" }
%"class.v8::TracedReference.3109" = type { %"class.v8::BasicTracedReference.3110" }
%"class.v8::BasicTracedReference.3110" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.3111" = type { %"class.std::__1::__compressed_pair.3112" }
%"class.std::__1::__compressed_pair.3112" = type { %"struct.std::__1::__compressed_pair_elem.3113" }
%"struct.std::__1::__compressed_pair_elem.3113" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.3114" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.3114" = type { %"class.std::__1::__compressed_pair.3115" }
%"class.std::__1::__compressed_pair.3115" = type { %"struct.std::__1::__compressed_pair_elem.3116" }
%"struct.std::__1::__compressed_pair_elem.3116" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.3123" = type { %"class.v8::Persistent.3124" }
%"class.v8::Persistent.3124" = type { %"class.v8::PersistentBase.3125" }
%"class.v8::PersistentBase.3125" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.3126" = type { %"class.WTF::HashMap.3129" }
%"class.WTF::HashMap.3129" = type { %"class.WTF::HashTable.3130" }
%"class.WTF::HashTable.3130" = type <{ %"struct.WTF::KeyValuePair.3132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3132" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3133" }
%"class.blink::Persistent.3133" = type { %"class.blink::PersistentBase.3134" }
%"class.blink::PersistentBase.3134" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.3135" = type { %"class.base::StrongAlias.3136" }
%"class.base::StrongAlias.3136" = type { %"class.base::UnguessableToken" }

$_ZZN7logging15CheckOpValueStrIN7network5mojom15WebSandboxFlagsEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjRjEENS_18HashTableAddResultIS6_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27ExecutionContextCSPDelegateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_32SecurityPolicyViolationEventInitELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_32SecurityPolicyViolationEventInitEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_7ElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS3_32SecurityPolicyViolationEventInitEPNS3_7ElementEEJNS3_10PersistentIS4_EENSC_IS6_EENSC_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS2_32SecurityPolicyViolationEventInitEPNS2_7ElementEEJNS2_10PersistentIS3_EENSB_IS5_EENSB_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEEC2IJLm0ELm1ELm2EEJS6_S9_SB_EJEJEJS6_S9_SB_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSF_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink22CSPViolationReportBodyC2ERKNS_32SecurityPolicyViolationEventInitE = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA14_KcRN3WTF6StringERPNS_22CSPViolationReportBodyEEEEPS1_DpOT_ = comdat any

$_ZN5blink6ReportD2Ev = comdat any

$_ZN5blink6ReportD0Ev = comdat any

$_ZNK5blink6Report5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink6Report18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink6ReportE = comdat any

@_ZTVN5blink27ExecutionContextCSPDelegateE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::Visitor"*)* @_ZNK5blink27ExecutionContextCSPDelegate5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZN5blink27ExecutionContextCSPDelegate17GetSecurityOriginEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZNK5blink27ExecutionContextCSPDelegate3UrlEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, i32)* @_ZN5blink27ExecutionContextCSPDelegate15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZN5blink27ExecutionContextCSPDelegate22SetRequireTrustedTypesEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, i32)* @_ZN5blink27ExecutionContextCSPDelegate24AddInsecureRequestPolicyENS_5mojom21InsecureRequestPolicyE to i8*), i8* bitcast (%"class.blink::SourceLocation"* (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZN5blink27ExecutionContextCSPDelegate17GetSourceLocationEv to i8*), i8* bitcast (i32 (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZN5blink27ExecutionContextCSPDelegate13GetStatusCodeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ExecutionContextCSPDelegate"*)* @_ZN5blink27ExecutionContextCSPDelegate19GetDocumentReferrerEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)* @_ZN5blink27ExecutionContextCSPDelegate22DispatchViolationEventERKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.WTF::String"*, i1, %"class.WTF::Vector.102"*, i1)* @_ZN5blink27ExecutionContextCSPDelegate19PostViolationReportERKNS_32SecurityPolicyViolationEventInitERKN3WTF6StringEbRKNS4_6VectorIS5_Lj0ENS4_18PartitionAllocatorEEEb to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, i32)* @_ZN5blink27ExecutionContextCSPDelegate5CountENS_5mojom10WebFeatureE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::ConsoleMessage"*)* @_ZN5blink27ExecutionContextCSPDelegate17AddConsoleMessageEPNS_14ConsoleMessageE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.mojo::StructPtr.2520"*)* @_ZN5blink27ExecutionContextCSPDelegate17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.WTF::String"*)* @_ZN5blink27ExecutionContextCSPDelegate11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.WTF::String"*)* @_ZN5blink27ExecutionContextCSPDelegate39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.WTF::Vector.78"*)* @_ZN5blink27ExecutionContextCSPDelegate29DidAddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"flags | mask == flags\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../third_party/blink/renderer/core/frame/csp/execution_context_csp_delegate.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"DispatchViolationEvent\00", align 1
@_ZN5blink10ReportType13kCSPViolationE = external constant [14 x i8], align 1
@_ZN5blink16event_type_names24kSecuritypolicyviolationE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZTVN5blink22CSPViolationReportBodyE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink18LocationReportBodyE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink6ReportE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD2Ev to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Report"*, %"class.blink::Visitor"*)* @_ZNK5blink6Report5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Report"*)* @_ZNK5blink6Report18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink6Report18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink27ExecutionContextCSPDelegateC1ERNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::ExecutionContext"*), void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::ExecutionContext"*)* @_ZN5blink27ExecutionContextCSPDelegateC2ERNS_16ExecutionContextE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink27ExecutionContextCSPDelegateC2ERNS_16ExecutionContextE(%"class.blink::ExecutionContextCSPDelegate"* nocapture, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink27ExecutionContextCSPDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27ExecutionContextCSPDelegate5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #12, !range !2
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #12
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink27ExecutionContextCSPDelegate17GetSecurityOriginEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %3) #12
  ret %"class.blink::SecurityOrigin"* %4
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink27ExecutionContextCSPDelegate3UrlEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = bitcast %"class.blink::ExecutionContext"* %3 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %5 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %5, i64 18
  %7 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call dereferenceable(112) %"class.blink::KURL"* %7(%"class.blink::ExecutionContext"* %3) #12
  ret %"class.blink::KURL"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %8, align 8
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::ExecutionContext"* %9 to i1 (%"class.blink::ExecutionContext"*)***
  %13 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, i64 3
  %15 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ExecutionContext"* nonnull %9) #12
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %12, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, i64 4
  %20 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ExecutionContext"* nonnull %9) #12
  br i1 %21, label %22, label %27

22:                                               ; preds = %11, %17
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 -1, i32 22
  %24 = icmp eq %"class.blink::DOMTimerCoordinator"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::DOMTimerCoordinator"* %23 to %"class.blink::WorkerOrWorkletGlobalScope"*
  tail call void @_ZN5blink26WorkerOrWorkletGlobalScope15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::WorkerOrWorkletGlobalScope"* nonnull %26, i32 %1) #12
  br label %27

27:                                               ; preds = %2, %17, %22, %25
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  %29 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %8, align 8
  %30 = tail call i32 @_ZNK5blink16ExecutionContext15GetSandboxFlagsEv(%"class.blink::ExecutionContext"* %29) #12
  store i32 %30, i32* %4, align 4
  %31 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  %34 = or i32 %30, %1
  store i32 %34, i32* %6, align 4
  %35 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = icmp eq i32 %34, %30
  br i1 %36, label %37, label %38

37:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* null, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  br label %47

38:                                               ; preds = %27
  %39 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %33, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN7network5mojom15WebSandboxFlagsEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %40 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN7network5mojom15WebSandboxFlagsEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %39, i8* %40) #12
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  store i8* %42, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 71, %"class.logging::CheckOpResult"* nonnull %5) #12
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  br label %47

47:                                               ; preds = %37, %38, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink26WorkerOrWorkletGlobalScope15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink16ExecutionContext15GetSandboxFlagsEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate22SetRequireTrustedTypesEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  tail call void @_ZN5blink16ExecutionContext22SetRequireTrustedTypesEv(%"class.blink::ExecutionContext"* %3) #12
  ret void
}

declare void @_ZN5blink16ExecutionContext22SetRequireTrustedTypesEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate24AddInsecureRequestPolicyENS_5mojom21InsecureRequestPolicyE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::Vector.2455", align 8
  %5 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ExecutionContext"* %6 to i1 (%"class.blink::ExecutionContext"*)***
  %10 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %10, i64 1
  %12 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ExecutionContext"* nonnull %6) #12
  br i1 %13, label %18, label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 6, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, %1
  store i32 %17, i32* %15, align 8
  br label %37

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 -1, i32 8
  %20 = bitcast i32* %19 to %"class.blink::LocalDOMWindow"*
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 6, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = or i32 %22, %1
  store i32 %23, i32* %21, align 8
  %24 = icmp eq i32* %19, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds i32, i32* %19, i64 18
  %27 = bitcast i32* %26 to %"class.blink::LocalFrame"**
  %28 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %27, align 8
  %29 = icmp eq %"class.blink::LocalFrame"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = tail call dereferenceable(8) %"class.blink::mojom::blink::LocalFrameHost"* @_ZNK5blink10LocalFrame23GetLocalFrameHostRemoteEv(%"class.blink::LocalFrame"* nonnull %28) #12
  %32 = load i32, i32* %21, align 8
  %33 = bitcast %"class.blink::mojom::blink::LocalFrameHost"* %31 to void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)***
  %34 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)**, void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)** %34, i64 18
  %36 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, i32)** %35, align 8
  tail call void %36(%"class.blink::mojom::blink::LocalFrameHost"* %31, i32 %32) #12
  br label %37

37:                                               ; preds = %18, %14, %25, %30
  %38 = phi i1 [ false, %14 ], [ true, %25 ], [ true, %30 ], [ false, %18 ]
  %39 = phi %"class.blink::LocalDOMWindow"* [ null, %14 ], [ %20, %25 ], [ %20, %30 ], [ null, %18 ]
  %40 = and i32 %1, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %135, label %42

42:                                               ; preds = %37
  %43 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %44 = icmp eq %"class.blink::ExecutionContext"* %43, null
  %45 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %43, i64 0, i32 3
  br i1 %44, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::UseCounter"* %45 to void (%"class.blink::UseCounter"*, i32)***
  %48 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %48, i64 3
  %50 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %49, align 8
  tail call void %50(%"class.blink::UseCounter"* nonnull %45, i32 740) #12
  br label %51

51:                                               ; preds = %42, %46
  br i1 %38, label %52, label %135

52:                                               ; preds = %51
  %53 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %54 = bitcast %"class.blink::ExecutionContext"* %53 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %55 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %55, i64 18
  %57 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %56, align 8
  %58 = tail call dereferenceable(112) %"class.blink::KURL"* %57(%"class.blink::ExecutionContext"* %53) #12
  %59 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %58) #12
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %135, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp ne i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %61
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %61
  %74 = phi i32 [ %72, %71 ], [ %70, %61 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br i1 %64, label %78, label %135

77:                                               ; preds = %73
  br i1 %64, label %78, label %135

78:                                               ; preds = %76, %77
  %79 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %80 = bitcast %"class.blink::ExecutionContext"* %79 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %81 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %81, i64 18
  %83 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %82, align 8
  %84 = tail call dereferenceable(112) %"class.blink::KURL"* %83(%"class.blink::ExecutionContext"* %79) #12
  %85 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %84) #12
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = lshr i32 %87, 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %78
  %91 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %85) #12
  br label %92

92:                                               ; preds = %78, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %78 ]
  %94 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %94, label %107, label %95

95:                                               ; preds = %92
  %96 = load atomic i32, i32* %86 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %95
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i32 [ %102, %101 ], [ %100, %95 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %107

107:                                              ; preds = %92, %103, %106
  %108 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108)
  store i32 %93, i32* %3, align 4
  %109 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 6, i32 10, i32 0
  %110 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjRjEENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.52"* %109, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108)
  %111 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %112 = bitcast %"class.blink::Frame"** %111 to %"class.blink::LocalFrame"**
  %113 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %112, align 8
  %114 = icmp eq %"class.blink::LocalFrame"* %113, null
  br i1 %114, label %135, label %115

115:                                              ; preds = %107
  %116 = call dereferenceable(8) %"class.blink::mojom::blink::LocalFrameHost"* @_ZNK5blink10LocalFrame23GetLocalFrameHostRemoteEv(%"class.blink::LocalFrame"* nonnull %113) #12
  %117 = bitcast %"class.WTF::Vector.2455"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #12
  %118 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %5, align 8
  %119 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %118, i64 0, i32 6, i32 10
  call void @_ZN5blink15SecurityContext30SerializeInsecureNavigationSetERKN3WTF7HashSetIjNS1_13AlreadyHashedENS1_10HashTraitsIjEENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.2455"* nonnull sret %4, %"class.WTF::HashSet.51"* dereferenceable(24) %119) #12
  %120 = bitcast %"class.blink::mojom::blink::LocalFrameHost"* %116 to void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)***
  %121 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)**, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)** %121, i64 19
  %123 = load void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)*, void (%"class.blink::mojom::blink::LocalFrameHost"*, %"class.WTF::Vector.2455"*)** %122, align 8
  call void %123(%"class.blink::mojom::blink::LocalFrameHost"* %116, %"class.WTF::Vector.2455"* nonnull dereferenceable(16) %4) #12
  %124 = getelementptr inbounds %"class.WTF::Vector.2455", %"class.WTF::Vector.2455"* %4, i64 0, i32 0, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  %127 = bitcast i32* %125 to i8*
  br i1 %126, label %134, label %128, !prof !3

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.WTF::Vector.2455", %"class.WTF::Vector.2455"* %4, i64 0, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132, !prof !4

132:                                              ; preds = %128
  store i32 0, i32* %129, align 4
  br label %133

133:                                              ; preds = %132, %128
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %127) #12
  store i32* null, i32** %124, align 8
  br label %134

134:                                              ; preds = %115, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #12
  br label %135

135:                                              ; preds = %52, %51, %76, %134, %107, %37, %77
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::SecurityContext"* @_ZN5blink27ExecutionContextCSPDelegate18GetSecurityContextEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %3, i64 0, i32 6
  ret %"class.blink::SecurityContext"* %4
}

declare dereferenceable(8) %"class.blink::mojom::blink::LocalFrameHost"* @_ZNK5blink10LocalFrame23GetLocalFrameHostRemoteEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate5CountENS_5mojom10WebFeatureE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %4, i64 0, i32 3
  %7 = icmp eq %"class.blink::UseCounter"* %6, null
  %8 = or i1 %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::UseCounter"* %6 to void (%"class.blink::UseCounter"*, i32)***
  %11 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %11, i64 3
  %13 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %12, align 8
  tail call void %13(%"class.blink::UseCounter"* nonnull %6, i32 %1) #12
  br label %14

14:                                               ; preds = %2, %9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink15SecurityContext30SerializeInsecureNavigationSetERKN3WTF7HashSetIjNS1_13AlreadyHashedENS1_10HashTraitsIjEENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.2455"* sret, %"class.WTF::HashSet.51"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SourceLocation"* @_ZN5blink27ExecutionContextCSPDelegate17GetSourceLocationEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %3) #12
  ret %"class.blink::SourceLocation"* %4
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27ExecutionContextCSPDelegate13GetStatusCodeEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = icmp eq %"class.blink::ExecutionContext"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ExecutionContext"* %3 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 1
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* nonnull %3) #12
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %3, i64 -1, i32 8
  %13 = bitcast i32* %12 to %"class.blink::LocalDOMWindow"*
  %14 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %13) #12
  %15 = icmp eq %"class.blink::Document"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = tail call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* nonnull %14) #12
  %18 = icmp eq %"class.blink::DocumentLoader"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* nonnull %14) #12
  %21 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %20, i64 0, i32 27
  %22 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %21) #12
  %23 = shl i32 %22, 16
  %24 = or i32 %23, 43520
  br label %25

25:                                               ; preds = %1, %5, %16, %11, %19
  %26 = phi i32 [ 0, %11 ], [ 0, %16 ], [ 1, %19 ], [ 0, %5 ], [ 0, %1 ]
  %27 = phi i32 [ -1431655936, %11 ], [ -1431655936, %16 ], [ %24, %19 ], [ -1431655936, %5 ], [ -1431655936, %1 ]
  %28 = or i32 %27, %26
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink27ExecutionContextCSPDelegate11GetDocumentEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = icmp eq %"class.blink::ExecutionContext"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ExecutionContext"* %3 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 1
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* nonnull %3) #12
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %3, i64 -1, i32 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = bitcast i32* %12 to %"class.blink::LocalDOMWindow"*
  %16 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %15) #12
  br label %17

17:                                               ; preds = %1, %5, %11, %14
  %18 = phi %"class.blink::Document"* [ %16, %14 ], [ null, %11 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::Document"* %18
}

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink27ExecutionContextCSPDelegate19GetDocumentReferrerEv(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %2, align 8
  %4 = icmp eq %"class.blink::ExecutionContext"* %3, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ExecutionContext"* %3 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 1
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* nonnull %3) #12
  br i1 %10, label %11, label %38

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %3, i64 -1, i32 8
  %13 = bitcast i32* %12 to %"class.blink::LocalDOMWindow"*
  %14 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %13) #12
  %15 = icmp eq %"class.blink::Document"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %11
  %17 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8Document8referrerEv(%"class.blink::Document"* nonnull %14) #12
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #12
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !4

35:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %16, %1, %5, %11
  %39 = phi %"class.WTF::StringImpl"* [ null, %11 ], [ null, %5 ], [ null, %1 ], [ null, %16 ], [ %19, %21 ], [ %19, %36 ]
  ret %"class.WTF::StringImpl"* %39
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8Document8referrerEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate22DispatchViolationEventERKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE(%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"* dereferenceable(120), %"class.blink::Element"*) unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.150", align 8
  %6 = alloca %"class.blink::Persistent.2479", align 8
  %7 = alloca %"class.blink::Persistent.2481", align 8
  %8 = alloca %"class.blink::Persistent.2483", align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 1
  %12 = bitcast %"class.blink::MojoBindingContext"* %11 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %12, align 8
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %13, i64 6
  %15 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %14, align 8
  %16 = tail call %"class.base::SingleThreadTaskRunner"* %15(%"class.blink::MojoBindingContext"* %11, i8 zeroext 3) #12
  %17 = bitcast %"class.base::SingleThreadTaskRunner"* %16 to %"class.base::TaskRunner"*
  %18 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 152) #12
  %19 = bitcast %"class.blink::Persistent.2479"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.blink::Persistent.2479", %"class.blink::Persistent.2479"* %6, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::Persistent.2479", %"class.blink::Persistent.2479"* %6, i64 0, i32 0, i32 0
  store %"class.blink::ExecutionContextCSPDelegate"* %0, %"class.blink::ExecutionContextCSPDelegate"** %21, align 8, !alias.scope !5
  %22 = getelementptr inbounds %"class.blink::Persistent.2479", %"class.blink::Persistent.2479"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8, !alias.scope !5
  %23 = ptrtoint %"class.blink::ExecutionContextCSPDelegate"* %0 to i64
  switch i64 %23, label %24 [
    i64 0, label %50
    i64 -1, label %50
  ]

24:                                               ; preds = %3
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !5
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #12, !noalias !5
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !4

29:                                               ; preds = %24
  %30 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #12
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8, !noalias !5
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %35, align 8, !noalias !5
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8, !noalias !5
  %39 = icmp eq %"class.blink::PersistentNode"* %38, null
  br i1 %39, label %40, label %43, !prof !4

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %41) #12
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi %"class.blink::PersistentNode"* [ %42, %40 ], [ %38, %31 ]
  %45 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !5
  %47 = bitcast %"class.blink::PersistentRegion"* %36 to i64*
  store i64 %46, i64* %47, align 8, !noalias !5
  %48 = bitcast %"class.blink::PersistentNode"* %44 to %"class.blink::PersistentBase.2480"**
  store %"class.blink::PersistentBase.2480"* %20, %"class.blink::PersistentBase.2480"** %48, align 8, !noalias !5
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27ExecutionContextCSPDelegateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %22, align 8, !alias.scope !5
  br label %50

50:                                               ; preds = %3, %3, %43
  %51 = bitcast %"class.blink::Persistent.2481"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.blink::Persistent.2481", %"class.blink::Persistent.2481"* %7, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::Persistent.2481", %"class.blink::Persistent.2481"* %7, i64 0, i32 0, i32 0
  store %"class.blink::SecurityPolicyViolationEventInit"* %1, %"class.blink::SecurityPolicyViolationEventInit"** %53, align 8, !alias.scope !8
  %54 = getelementptr inbounds %"class.blink::Persistent.2481", %"class.blink::Persistent.2481"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8, !alias.scope !8
  %55 = ptrtoint %"class.blink::SecurityPolicyViolationEventInit"* %1 to i64
  switch i64 %55, label %56 [
    i64 0, label %82
    i64 -1, label %82
  ]

56:                                               ; preds = %50
  %57 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !8
  %58 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %57, i64 0, i32 1
  %59 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %58) #12, !noalias !8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63, !prof !4

61:                                               ; preds = %56
  %62 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %58, i8* %62) #12
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i8* [ %62, %61 ], [ %59, %56 ]
  %65 = bitcast i8* %64 to %"class.blink::ThreadState"**
  %66 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %65, align 8, !noalias !8
  %67 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %67, align 8, !noalias !8
  %69 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8, !noalias !8
  %71 = icmp eq %"class.blink::PersistentNode"* %70, null
  br i1 %71, label %72, label %75, !prof !4

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %73) #12
  %74 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi %"class.blink::PersistentNode"* [ %74, %72 ], [ %70, %63 ]
  %77 = bitcast %"class.blink::PersistentNode"* %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !8
  %79 = bitcast %"class.blink::PersistentRegion"* %68 to i64*
  store i64 %78, i64* %79, align 8, !noalias !8
  %80 = bitcast %"class.blink::PersistentNode"* %76 to %"class.blink::PersistentBase.2482"**
  store %"class.blink::PersistentBase.2482"* %52, %"class.blink::PersistentBase.2482"** %80, align 8, !noalias !8
  %81 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %76, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_32SecurityPolicyViolationEventInitELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %81, align 8
  store %"class.blink::PersistentNode"* %76, %"class.blink::PersistentNode"** %54, align 8, !alias.scope !8
  br label %82

82:                                               ; preds = %50, %50, %75
  %83 = bitcast %"class.blink::Persistent.2483"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.blink::Persistent.2483", %"class.blink::Persistent.2483"* %8, i64 0, i32 0
  %85 = getelementptr inbounds %"class.blink::Persistent.2483", %"class.blink::Persistent.2483"* %8, i64 0, i32 0, i32 0
  store %"class.blink::Element"* %2, %"class.blink::Element"** %85, align 8, !alias.scope !11
  %86 = getelementptr inbounds %"class.blink::Persistent.2483", %"class.blink::Persistent.2483"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %86, align 8, !alias.scope !11
  %87 = ptrtoint %"class.blink::Element"* %2 to i64
  switch i64 %87, label %88 [
    i64 0, label %103
    i64 -1, label %103
  ]

88:                                               ; preds = %82
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !11
  %90 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %90, align 8, !noalias !11
  %92 = icmp eq %"class.blink::PersistentNode"* %91, null
  br i1 %92, label %93, label %96, !prof !4

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %94) #12
  %95 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %90, align 8
  br label %96

96:                                               ; preds = %93, %88
  %97 = phi %"class.blink::PersistentNode"* [ %95, %93 ], [ %91, %88 ]
  %98 = bitcast %"class.blink::PersistentNode"* %97 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !11
  %100 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  store i64 %99, i64* %100, align 8, !noalias !11
  %101 = bitcast %"class.blink::PersistentNode"* %97 to %"class.blink::PersistentBase.2484"**
  store %"class.blink::PersistentBase.2484"* %84, %"class.blink::PersistentBase.2484"** %101, align 8, !noalias !11
  %102 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_7ElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %102, align 8
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %86, align 8, !alias.scope !11
  br label %103

103:                                              ; preds = %82, %82, %96
  %104 = call i8* @_Znwm(i64 96) #13, !noalias !14
  %105 = bitcast i8* %104 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %105, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS3_32SecurityPolicyViolationEventInitEPNS3_7ElementEEJNS3_10PersistentIS4_EENSC_IS6_EENSC_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS2_32SecurityPolicyViolationEventInitEPNS2_7ElementEEJNS2_10PersistentIS3_EENSB_IS5_EENSB_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !14
  %106 = getelementptr inbounds i8, i8* %104, i64 32
  %107 = bitcast i8* %106 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)* @_ZN5blink27ExecutionContextCSPDelegate30DispatchViolationEventInternalEPKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE to i64), i64 0>, <2 x i64>* %107, align 8, !noalias !14
  %108 = getelementptr inbounds i8, i8* %104, i64 48
  %109 = bitcast i8* %108 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEEC2IJLm0ELm1ELm2EEJS6_S9_SB_EJEJEJS6_S9_SB_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSF_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %109, %"class.blink::Persistent.2479"* nonnull dereferenceable(16) %6, %"class.blink::Persistent.2481"* nonnull dereferenceable(16) %7, %"class.blink::Persistent.2483"* nonnull dereferenceable(16) %8) #12, !noalias !14
  %110 = bitcast %"class.base::OnceCallback.150"* %5 to i8**
  store i8* %104, i8** %110, align 8, !alias.scope !14
  %111 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %17, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.150"* nonnull %5) #12
  %112 = getelementptr inbounds %"class.base::OnceCallback.150", %"class.base::OnceCallback.150"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %112) #12
  %113 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %86, align 8
  %114 = icmp eq %"class.blink::PersistentNode"* %113, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %103
  %116 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %117 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.blink::PersistentRegion"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::PersistentNode"* %113 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %113, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %121, align 8
  store %"class.blink::PersistentNode"* %113, %"class.blink::PersistentNode"** %117, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %86, align 8
  br label %122

122:                                              ; preds = %103, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  %123 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %124 = icmp eq %"class.blink::PersistentNode"* %123, null
  br i1 %124, label %144, label %125

125:                                              ; preds = %122
  %126 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %127 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %126, i64 0, i32 1
  %128 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %127) #12
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %132, !prof !4

130:                                              ; preds = %125
  %131 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %127, i8* %131) #12
  br label %132

132:                                              ; preds = %130, %125
  %133 = phi i8* [ %131, %130 ], [ %128, %125 ]
  %134 = bitcast i8* %133 to %"class.blink::ThreadState"**
  %135 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %136, align 8
  %138 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %139 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %137, i64 0, i32 0, i32 0
  %140 = bitcast %"class.blink::PersistentRegion"* %137 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.blink::PersistentNode"* %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %138, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %143, align 8
  store %"class.blink::PersistentNode"* %138, %"class.blink::PersistentNode"** %139, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8
  br label %144

144:                                              ; preds = %122, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  %145 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %146 = icmp eq %"class.blink::PersistentNode"* %145, null
  br i1 %146, label %166, label %147

147:                                              ; preds = %144
  %148 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %149 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %148, i64 0, i32 1
  %150 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %149) #12
  %151 = icmp eq i8* %150, null
  br i1 %151, label %152, label %154, !prof !4

152:                                              ; preds = %147
  %153 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %149, i8* %153) #12
  br label %154

154:                                              ; preds = %152, %147
  %155 = phi i8* [ %153, %152 ], [ %150, %147 ]
  %156 = bitcast i8* %155 to %"class.blink::ThreadState"**
  %157 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %158, align 8
  %160 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %161 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %159, i64 0, i32 0, i32 0
  %162 = bitcast %"class.blink::PersistentRegion"* %159 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.blink::PersistentNode"* %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %160, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %165, align 8
  store %"class.blink::PersistentNode"* %160, %"class.blink::PersistentNode"** %161, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8
  br label %166

166:                                              ; preds = %144, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #12
  %167 = icmp eq %"class.base::SingleThreadTaskRunner"* %16, null
  br i1 %167, label %176, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %16, i64 0, i32 0, i32 0, i32 1
  %170 = getelementptr inbounds %"class.base::RefCountedThreadSafe.142", %"class.base::RefCountedThreadSafe.142"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw sub i32* %170, i32 1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %176

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.base::RefCountedThreadSafe.142", %"class.base::RefCountedThreadSafe.142"* %169, i64 -2
  %175 = bitcast %"class.base::RefCountedThreadSafe.142"* %174 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %175) #12
  br label %176

176:                                              ; preds = %166, %168, %173
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.150"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate30DispatchViolationEventInternalEPKNS_32SecurityPolicyViolationEventInitEPNS_7ElementE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*) #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %4, align 8
  %6 = bitcast %"class.blink::ExecutionContext"* %5 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 4
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* %5) #12
  br i1 %10, label %65, label %11

11:                                               ; preds = %3
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names24kSecuritypolicyviolationE, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #12
  %14 = bitcast i8* %13 to %"class.blink::SecurityPolicyViolationEvent"*
  tail call void @_ZN5blink28SecurityPolicyViolationEventC1ERKN3WTF12AtomicStringEPKNS_32SecurityPolicyViolationEventInitE(%"class.blink::SecurityPolicyViolationEvent"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.blink::SecurityPolicyViolationEventInit"* %1) #12
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %4, align 8
  %20 = icmp eq %"class.blink::ExecutionContext"* %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %11
  %22 = bitcast %"class.blink::ExecutionContext"* %19 to i1 (%"class.blink::ExecutionContext"*)***
  %23 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %23, i64 1
  %25 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ExecutionContext"* nonnull %19) #12
  br i1 %26, label %27, label %51

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 -1, i32 8
  %29 = bitcast i32* %28 to %"class.blink::LocalDOMWindow"*
  %30 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %29) #12
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = icmp eq %"class.blink::Element"* %2, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 256
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = icmp eq %"class.blink::Document"* %43, %30
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast i8* %13 to %"class.blink::Event"*
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %46, %"class.blink::Event"* dereferenceable(104) %47, i8 zeroext 23) #12
  br label %65

48:                                               ; preds = %34, %32, %39
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast i8* %13 to %"class.blink::Event"*
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %49, %"class.blink::Event"* dereferenceable(104) %50, i8 zeroext 23) #12
  br label %65

51:                                               ; preds = %11, %21, %27
  %52 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %4, align 8
  %53 = bitcast %"class.blink::ExecutionContext"* %52 to i1 (%"class.blink::ExecutionContext"*)***
  %54 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %54, i64 3
  %56 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::ExecutionContext"* %52) #12
  %58 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %52, i64 -1, i32 22
  %59 = icmp eq %"class.blink::DOMTimerCoordinator"* %58, null
  %60 = xor i1 %57, true
  %61 = or i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %51
  %63 = bitcast %"class.blink::DOMTimerCoordinator"* %58 to %"class.blink::EventTarget"*
  %64 = bitcast i8* %13 to %"class.blink::Event"*
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %63, %"class.blink::Event"* dereferenceable(104) %64, i8 zeroext 23) #12
  br label %65

65:                                               ; preds = %48, %45, %51, %62, %3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate19PostViolationReportERKNS_32SecurityPolicyViolationEventInitERKN3WTF6StringEbRKNS4_6VectorIS5_Lj0ENS4_18PartitionAllocatorEEEb(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.blink::SecurityPolicyViolationEventInit"* dereferenceable(120), %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.WTF::Vector.102"* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::CSPViolationReportBody"*, align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::Vector.102", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %12, align 8
  %14 = icmp eq %"class.blink::ExecutionContext"* %13, null
  br i1 %14, label %235, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.blink::ExecutionContext"* %13 to i1 (%"class.blink::ExecutionContext"*)***
  %17 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %17, i64 1
  %19 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::ExecutionContext"* nonnull %13) #12
  br i1 %20, label %21, label %235

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %13, i64 -1, i32 8
  %23 = bitcast i32* %22 to %"class.blink::LocalDOMWindow"*
  %24 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %23) #12
  %25 = icmp eq %"class.blink::Document"* %24, null
  br i1 %25, label %235, label %26

26:                                               ; preds = %21
  %27 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %24) #12
  %28 = icmp eq %"class.blink::LocalFrame"* %27, null
  br i1 %28, label %235, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* %2, i32 0) #12
  %31 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %30
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %33 to i64
  %41 = select i1 %34, i64 %39, i64 %40
  %42 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 %41, i8* %37) #12
  %43 = load i8, i8* %32, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %29
  %46 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %29, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %48 = bitcast %"class.blink::CSPViolationReportBody"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  store %"class.blink::CSPViolationReportBody"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSPViolationReportBody"*), %"class.blink::CSPViolationReportBody"** %8, align 8
  %49 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %50 = bitcast i8* %49 to %"class.blink::CSPViolationReportBody"*
  call void @_ZN5blink22CSPViolationReportBodyC2ERKNS_32SecurityPolicyViolationEventInitE(%"class.blink::CSPViolationReportBody"* %50, %"class.blink::SecurityPolicyViolationEventInit"* dereferenceable(120) %1) #12
  %51 = getelementptr inbounds i8, i8* %49, i64 -4
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = bitcast %"class.blink::CSPViolationReportBody"** %8 to i8**
  store i8* %49, i8** %55, align 8
  %56 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %57, align 8
  br i1 %3, label %58, label %60

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 7
  br label %68

60:                                               ; preds = %47
  %61 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %12, align 8
  %62 = bitcast %"class.blink::ExecutionContext"* %61 to %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)***
  %63 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)**, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %63, i64 18
  %65 = load %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)*, %"class.blink::KURL"* (%"class.blink::ExecutionContext"*)** %64, align 8
  %66 = call dereferenceable(112) %"class.blink::KURL"* %65(%"class.blink::ExecutionContext"* %61) #12
  %67 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %66, i64 0, i32 4
  br label %68

68:                                               ; preds = %60, %58
  %69 = phi %"class.WTF::String"* [ %59, %58 ], [ %67, %60 ]
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %57, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #12
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %78
  call void @llvm.trap() #12
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %68, %73, %88
  %91 = call %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA14_KcRN3WTF6StringERPNS_22CSPViolationReportBodyEEEEPS1_DpOT_([14 x i8]* nonnull dereferenceable(14) @_ZN5blink10ReportType13kCSPViolationE, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::CSPViolationReportBody"** nonnull dereferenceable(8) %8) #12
  %92 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %12, align 8
  %93 = call %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %92) #12
  %94 = bitcast %"class.WTF::Vector.102"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  br i1 %5, label %95, label %148

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %4, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %99, align 8
  %100 = icmp eq i32 %97, 0
  br i1 %100, label %110, label %101

101:                                              ; preds = %95
  %102 = zext i32 %97 to i64
  %103 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %102) #12
  %104 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %103, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %105 = ptrtoint i8* %104 to i64
  %106 = bitcast %"class.WTF::Vector.102"* %10 to i64*
  store atomic i64 %105, i64* %106 monotonic, align 8
  %107 = lshr i64 %103, 3
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %99, align 8
  %109 = bitcast i8* %104 to %"class.WTF::String"*
  br label %110

110:                                              ; preds = %101, %95
  %111 = phi %"class.WTF::String"* [ null, %95 ], [ %109, %101 ]
  %112 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %4, i64 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %4, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::String"*, %"class.WTF::String"** %115, align 8
  %117 = zext i32 %113 to i64
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 %117
  %119 = icmp eq i32 %113, 0
  br i1 %119, label %149, label %120

120:                                              ; preds = %110, %144
  %121 = phi %"class.WTF::String"* [ %145, %144 ], [ %111, %110 ]
  %122 = phi %"class.WTF::String"* [ %146, %144 ], [ %116, %110 ]
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %125, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %126, label %144, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #12
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !4

141:                                              ; preds = %132
  call void @llvm.trap() #12
  unreachable

142:                                              ; preds = %132
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %133, align 4
  br label %144

144:                                              ; preds = %142, %127, %120
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 1
  %147 = icmp eq %"class.WTF::String"* %146, %118
  br i1 %147, label %149, label %120

148:                                              ; preds = %90
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 16, i1 false) #12
  br label %149

149:                                              ; preds = %144, %110, %148
  %150 = bitcast %"class.blink::ReportingContext"* %93 to void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)***
  %151 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)**, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)** %151, i64 3
  %153 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.102"*)** %152, align 8
  call void %153(%"class.blink::ReportingContext"* %93, %"class.blink::Report"* %91, %"class.WTF::Vector.102"* nonnull dereferenceable(16) %10) #12
  %154 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %10, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::String"*, %"class.WTF::String"** %154, align 8
  %156 = icmp eq %"class.WTF::String"* %155, null
  br i1 %156, label %191, label %157, !prof !3

157:                                              ; preds = %149
  %158 = bitcast %"class.WTF::String"* %155 to i8*
  %159 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %10, i64 0, i32 0, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %189, label %162, !prof !4

162:                                              ; preds = %157
  %163 = zext i32 %160 to i64
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 %163
  br label %165

165:                                              ; preds = %183, %162
  %166 = phi %"class.WTF::String"* [ %184, %183 ], [ %155, %162 ]
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #12
  br label %183

183:                                              ; preds = %182, %179, %165
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %166, i64 1
  %185 = icmp eq %"class.WTF::String"* %184, %164
  br i1 %185, label %186, label %165

186:                                              ; preds = %183
  store i32 0, i32* %159, align 4
  %187 = bitcast %"class.WTF::Vector.102"* %10 to i8**
  %188 = load i8*, i8** %187, align 8
  br label %189

189:                                              ; preds = %186, %157
  %190 = phi i8* [ %188, %186 ], [ %158, %157 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %190) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %154, align 8
  br label %191

191:                                              ; preds = %149, %189
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  br i1 %5, label %210, label %192

192:                                              ; preds = %191
  %193 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %4, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::String"*, %"class.WTF::String"** %193, align 8
  %195 = getelementptr inbounds %"class.WTF::Vector.102", %"class.WTF::Vector.102"* %4, i64 0, i32 0, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %194, i64 %197
  %199 = icmp eq i32 %196, 0
  br i1 %199, label %210, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  %202 = icmp eq %"class.blink::EncodedFormData"* %42, null
  %203 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %42, i64 0, i32 0, i32 0, i32 0
  br label %204

204:                                              ; preds = %200, %207
  %205 = phi %"class.WTF::String"* [ %194, %200 ], [ %208, %207 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %201) #12
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %205) #12
  br i1 %202, label %207, label %206

206:                                              ; preds = %204
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %203) #12
  br label %207

207:                                              ; preds = %204, %206
  call void @_ZN5blink10PingLoader19SendViolationReportEPNS_10LocalFrameERKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::LocalFrame"* nonnull %27, %"class.blink::KURL"* nonnull dereferenceable(112) %11, %"class.blink::EncodedFormData"* %42) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %201) #12
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %205, i64 1
  %209 = icmp eq %"class.WTF::String"* %208, %198
  br i1 %209, label %210, label %204

210:                                              ; preds = %207, %192, %191
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #12
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  %227 = icmp eq %"class.blink::EncodedFormData"* %42, null
  br i1 %227, label %235, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %229) #12
  %230 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %228
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %42) #12
  %234 = bitcast %"class.blink::EncodedFormData"* %42 to i8*
  call void @free(i8* %234) #12
  br label %235

235:                                              ; preds = %6, %15, %233, %228, %226, %26, %21
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink10PingLoader19SendViolationReportEPNS_10LocalFrameERKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate17AddConsoleMessageEPNS_14ConsoleMessageE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.blink::ConsoleMessage"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = bitcast %"class.blink::ExecutionContext"* %4 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %6 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %6, i64 52
  %8 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %7, align 8
  tail call void %8(%"class.blink::ExecutionContext"* %4, %"class.blink::ConsoleMessage"* %1, i1 zeroext false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.mojo::StructPtr.2520"* nocapture) unnamed_addr #1 align 2 {
  %3 = alloca %"class.mojo::StructPtr.2520", align 8
  %4 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %4, align 8
  %6 = bitcast %"class.mojo::StructPtr.2520"* %3 to i64*
  %7 = getelementptr inbounds %"class.mojo::StructPtr.2520", %"class.mojo::StructPtr.2520"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.mojo::StructPtr.2520"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  store i64 0, i64* %8, align 8
  %10 = bitcast %"class.blink::ExecutionContext"* %5 to void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)***
  %11 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)**, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)** %11, i64 30
  %13 = load void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)*, void (%"class.blink::ExecutionContext"*, %"class.mojo::StructPtr.2520"*)** %12, align 8
  call void %13(%"class.blink::ExecutionContext"* %5, %"class.mojo::StructPtr.2520"* nonnull %3) #12
  %14 = load %"class.blink::mojom::blink::InspectorIssueInfo"*, %"class.blink::mojom::blink::InspectorIssueInfo"** %7, align 8
  store %"class.blink::mojom::blink::InspectorIssueInfo"* null, %"class.blink::mojom::blink::InspectorIssueInfo"** %7, align 8
  %15 = icmp eq %"class.blink::mojom::blink::InspectorIssueInfo"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"* nonnull %14) #12
  %17 = bitcast %"class.blink::mojom::blink::InspectorIssueInfo"* %14 to i8*
  call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate11DisableEvalERKN3WTF6StringE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = bitcast %"class.blink::ExecutionContext"* %4 to void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)***
  %6 = load void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)**, void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %6, i64 21
  %8 = load void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %7, align 8
  tail call void %8(%"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate39ReportBlockedScriptExecutionToInspectorERKN3WTF6StringE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = trunc i32 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5blink5probe31ScriptExecutionBlockedByCSPImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ExecutionContextCSPDelegate29DidAddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ExecutionContextCSPDelegate"* nocapture readonly, %"class.WTF::Vector.78"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ExecutionContextCSPDelegate", %"class.blink::ExecutionContextCSPDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  br i1 %5, label %67, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ExecutionContext"* %4 to i1 (%"class.blink::ExecutionContext"*)***
  %8 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, i64 1
  %10 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ExecutionContext"* nonnull %4) #12
  br i1 %11, label %12, label %67

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %4, i64 -1, i32 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %67, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 18
  %17 = bitcast i32* %16 to %"class.blink::LocalFrame"**
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %17, align 8
  %19 = icmp eq %"class.blink::LocalFrame"* %18, null
  br i1 %19, label %67, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %18, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %21) #12
  br i1 %22, label %23, label %67

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::Vector.78", %"class.WTF::Vector.78"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.mojo::StructPtr.81"*, %"class.mojo::StructPtr.81"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.78", %"class.WTF::Vector.78"* %1, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.mojo::StructPtr.81", %"class.mojo::StructPtr.81"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %23, %64
  %32 = phi %"class.mojo::StructPtr.81"* [ %65, %64 ], [ %25, %23 ]
  %33 = getelementptr inbounds %"class.mojo::StructPtr.81", %"class.mojo::StructPtr.81"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %33, align 8
  %35 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %34, i64 0, i32 7, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %64 [
    i32 0, label %37
    i32 1, label %46
    i32 2, label %55
  ]

37:                                               ; preds = %31
  %38 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %39 = icmp eq %"class.blink::ExecutionContext"* %38, null
  %40 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %38, i64 0, i32 3
  br i1 %39, label %64, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::UseCounter"* %40 to void (%"class.blink::UseCounter"*, i32)***
  %43 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %43, i64 3
  %45 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, align 8
  tail call void %45(%"class.blink::UseCounter"* nonnull %40, i32 3359) #12
  br label %64

46:                                               ; preds = %31
  %47 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %48 = icmp eq %"class.blink::ExecutionContext"* %47, null
  %49 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %47, i64 0, i32 3
  br i1 %48, label %64, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::UseCounter"* %49 to void (%"class.blink::UseCounter"*, i32)***
  %52 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %52, i64 3
  %54 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %53, align 8
  tail call void %54(%"class.blink::UseCounter"* nonnull %49, i32 3360) #12
  br label %64

55:                                               ; preds = %31
  %56 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %57 = icmp eq %"class.blink::ExecutionContext"* %56, null
  %58 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %56, i64 0, i32 3
  br i1 %57, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::UseCounter"* %58 to void (%"class.blink::UseCounter"*, i32)***
  %61 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %61, i64 3
  %63 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %62, align 8
  tail call void %63(%"class.blink::UseCounter"* nonnull %58, i32 3361) #12
  br label %64

64:                                               ; preds = %59, %55, %50, %46, %41, %37, %31
  %65 = getelementptr inbounds %"class.mojo::StructPtr.81", %"class.mojo::StructPtr.81"* %32, i64 1
  %66 = icmp eq %"class.mojo::StructPtr.81"* %65, %29
  br i1 %66, label %67, label %31

67:                                               ; preds = %64, %23, %2, %6, %15, %20, %12
  ret void
}

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104), i8 zeroext) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN7network5mojom15WebSandboxFlagsEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7network5mojomlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_15WebSandboxFlagsE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i32 %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7network5mojomlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_15WebSandboxFlagsE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjRjEENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.52"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.52"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %11, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %10
  %23 = xor i32 %16, -1
  %24 = lshr i32 %16, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %22, %43
  %37 = phi i32 [ %20, %22 ], [ %51, %43 ]
  %38 = phi i32* [ %19, %22 ], [ %50, %43 ]
  %39 = phi i32* [ null, %22 ], [ %45, %43 ]
  %40 = phi i64 [ %18, %22 ], [ %49, %43 ]
  %41 = phi i64 [ 0, %22 ], [ %47, %43 ]
  %42 = icmp eq i32 %37, %16
  br i1 %42, label %76, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %44, i32* %38, i32* %39
  %46 = icmp eq i64 %41, 0
  %47 = select i1 %46, i64 %35, i64 %41
  %48 = add i64 %47, %40
  %49 = and i64 %48, %15
  %50 = getelementptr inbounds i32, i32* %11, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %36

53:                                               ; preds = %43
  %54 = icmp eq i32* %45, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  store i32 0, i32* %45, align 4
  %56 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %10, %53, %55
  %63 = phi i32* [ %45, %55 ], [ %50, %53 ], [ %19, %10 ]
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 1
  %72 = load i32, i32* %12, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.52"* %0, i32* %63)
  br label %76

76:                                               ; preds = %36, %62, %74
  %77 = phi i8 [ 1, %62 ], [ 1, %74 ], [ 0, %36 ]
  %78 = phi i32* [ %63, %62 ], [ %75, %74 ], [ %38, %36 ]
  %79 = insertvalue { i32*, i8 } undef, i32* %78, 0
  %80 = insertvalue { i32*, i8 } %79, i8 %77, 1
  ret { i32*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.52"*, i32*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.52"* %0, i32* %36, i32 %32, i32* %1) #12
  ret i32* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.52"*, i32*, i32, i32*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.52"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %99
  %19 = bitcast %"class.WTF::HashTable.52"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %100, %18 ]
  %23 = phi i32* [ null, %10 ], [ %103, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.52", %"class.WTF::HashTable.52"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %99
  %32 = phi i64 [ %17, %13 ], [ %100, %99 ]
  %33 = phi i32 [ %7, %13 ], [ %101, %99 ]
  %34 = phi i32* [ %16, %13 ], [ %102, %99 ]
  %35 = phi i32* [ null, %13 ], [ %103, %99 ]
  %36 = phi i32 [ 0, %13 ], [ %104, %99 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %99, label %42

42:                                               ; preds = %31
  %43 = and i32 %39, %14
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = ptrtoint i32* %45 to i64
  %47 = load i32, i32* %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = xor i32 %39, -1
  %51 = lshr i32 %39, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %72

63:                                               ; preds = %79
  %64 = ptrtoint i32* %86 to i64
  %65 = inttoptr i64 %81 to i32*
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i64 [ %64, %63 ], [ %46, %42 ]
  %68 = phi i32* [ %65, %63 ], [ null, %42 ]
  %69 = icmp eq i32* %68, null
  %70 = ptrtoint i32* %68 to i64
  %71 = select i1 %69, i64 %67, i64 %70
  br label %90

72:                                               ; preds = %79, %49
  %73 = phi i64 [ 0, %49 ], [ %81, %79 ]
  %74 = phi i32 [ %47, %49 ], [ %88, %79 ]
  %75 = phi i64 [ %46, %49 ], [ %87, %79 ]
  %76 = phi i64 [ %44, %49 ], [ %85, %79 ]
  %77 = phi i64 [ 0, %49 ], [ %83, %79 ]
  %78 = icmp eq i32 %74, %39
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %74, -1
  %81 = select i1 %80, i64 %75, i64 %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %62, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds i32, i32* %1, i64 %85
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %86, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %63, label %72

90:                                               ; preds = %72, %66
  %91 = phi i64 [ %71, %66 ], [ %75, %72 ]
  %92 = inttoptr i64 %91 to i32*
  store i32 %39, i32* %92, align 4
  %93 = load i32*, i32** %9, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %37
  %95 = icmp eq i32* %94, %3
  %96 = select i1 %95, i32* %92, i32* %35
  %97 = load i32, i32* %6, align 8
  %98 = ptrtoint i32* %93 to i64
  br label %99

99:                                               ; preds = %31, %90
  %100 = phi i64 [ %32, %31 ], [ %98, %90 ]
  %101 = phi i32 [ %33, %31 ], [ %97, %90 ]
  %102 = phi i32* [ %34, %31 ], [ %93, %90 ]
  %103 = phi i32* [ %35, %31 ], [ %96, %90 ]
  %104 = add i32 %36, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18InspectorIssueInfoD1Ev(%"class.blink::mojom::blink::InspectorIssueInfo"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink5probe31ScriptExecutionBlockedByCSPImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink28SecurityPolicyViolationEventC1ERKN3WTF12AtomicStringEPKNS_32SecurityPolicyViolationEventInitE(%"class.blink::SecurityPolicyViolationEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::SecurityPolicyViolationEventInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #12
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %40, i8* %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #12
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27ExecutionContextCSPDelegateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ExecutionContextCSPDelegate"**
  %5 = load %"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::ExecutionContextCSPDelegate"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::ExecutionContextCSPDelegate"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ExecutionContextCSPDelegate"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27ExecutionContextCSPDelegateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #12, !range !2
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #12
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_32SecurityPolicyViolationEventInitELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SecurityPolicyViolationEventInit"**
  %5 = load %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::SecurityPolicyViolationEventInit"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::SecurityPolicyViolationEventInit"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SecurityPolicyViolationEventInit"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_32SecurityPolicyViolationEventInitEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_32SecurityPolicyViolationEventInitEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SecurityPolicyViolationEventInit"*
  %4 = bitcast i8* %1 to void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)**, void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)*, void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)*, void (%"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SecurityPolicyViolationEventInit"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_7ElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Element"**
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::Element"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Element"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS3_32SecurityPolicyViolationEventInitEPNS3_7ElementEEJNS3_10PersistentIS4_EENSC_IS6_EENSC_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ExecutionContextCSPDelegate"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)**
  %21 = load void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)*, void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ExecutionContextCSPDelegate"*, %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::Element"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::SecurityPolicyViolationEventInit"**
  %28 = load %"class.blink::SecurityPolicyViolationEventInit"*, %"class.blink::SecurityPolicyViolationEventInit"** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %29 to %"class.blink::Element"**
  %31 = load %"class.blink::Element"*, %"class.blink::Element"** %30, align 8
  tail call void %25(%"class.blink::ExecutionContextCSPDelegate"* %12, %"class.blink::SecurityPolicyViolationEventInit"* %28, %"class.blink::Element"* %31) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink27ExecutionContextCSPDelegateEFvPKNS2_32SecurityPolicyViolationEventInitEPNS2_7ElementEEJNS2_10PersistentIS3_EENSB_IS5_EENSB_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %7 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %6, i64 0, i32 0, i32 0
  %8 = bitcast %"class.blink::PersistentRegion"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::PersistentNode"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %11, align 8
  store %"class.blink::PersistentNode"* %3, %"class.blink::PersistentNode"** %7, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %12

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %14 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %13, align 8
  %15 = icmp eq %"class.blink::PersistentNode"* %14, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #12
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !4

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %13, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %31 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %30, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  br label %35

35:                                               ; preds = %12, %23
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #12
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !4

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #12
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %35, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27ExecutionContextCSPDelegateEEENS4_IKNS3_32SecurityPolicyViolationEventInitEEENS4_INS3_7ElementEEEEEC2IJLm0ELm1ELm2EEJS6_S9_SB_EJEJEJS6_S9_SB_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSF_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.blink::Persistent.2479"* dereferenceable(16), %"class.blink::Persistent.2481"* dereferenceable(16), %"class.blink::Persistent.2483"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::Persistent.2479"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.std::__1::__tuple_impl"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  switch i64 %7, label %10 [
    i64 0, label %36
    i64 -1, label %36
  ]

10:                                               ; preds = %4
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !4

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #12
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  %25 = icmp eq %"class.blink::PersistentNode"* %24, null
  br i1 %25, label %26, label %29, !prof !4

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %27) #12
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi %"class.blink::PersistentNode"* [ %28, %26 ], [ %24, %17 ]
  %31 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  store i64 %32, i64* %33, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to %"class.blink::PersistentBase.2480"**
  store %"class.blink::PersistentBase.2480"* %5, %"class.blink::PersistentBase.2480"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27ExecutionContextCSPDelegateELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %9, align 8
  br label %36

36:                                               ; preds = %4, %4, %29
  %37 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::__tuple_leaf.3080", %"class.std::__1::__tuple_leaf.3080"* %37, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Persistent.2481"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::__tuple_leaf.3080"* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %42, align 8
  switch i64 %40, label %43 [
    i64 0, label %69
    i64 -1, label %69
  ]

43:                                               ; preds = %36
  %44 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %45 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %44, i64 0, i32 1
  %46 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %45) #12
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50, !prof !4

48:                                               ; preds = %43
  %49 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %45, i8* %49) #12
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i8* [ %49, %48 ], [ %46, %43 ]
  %52 = bitcast i8* %51 to %"class.blink::ThreadState"**
  %53 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %58 = icmp eq %"class.blink::PersistentNode"* %57, null
  br i1 %58, label %59, label %62, !prof !4

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %55, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %60) #12
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  br label %62

62:                                               ; preds = %59, %50
  %63 = phi %"class.blink::PersistentNode"* [ %61, %59 ], [ %57, %50 ]
  %64 = bitcast %"class.blink::PersistentNode"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.blink::PersistentRegion"* %55 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast %"class.blink::PersistentNode"* %63 to %"class.blink::PersistentBase.2482"**
  store %"class.blink::PersistentBase.2482"* %38, %"class.blink::PersistentBase.2482"** %67, align 8
  %68 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %63, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_32SecurityPolicyViolationEventInitELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %68, align 8
  store %"class.blink::PersistentNode"* %63, %"class.blink::PersistentNode"** %42, align 8
  br label %69

69:                                               ; preds = %36, %36, %62
  %70 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2
  %71 = getelementptr inbounds %"class.std::__1::__tuple_leaf.3081", %"class.std::__1::__tuple_leaf.3081"* %70, i64 0, i32 0, i32 0
  %72 = bitcast %"class.blink::Persistent.2483"* %3 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::__tuple_leaf.3081"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %75, align 8
  switch i64 %73, label %76 [
    i64 0, label %91
    i64 -1, label %91
  ]

76:                                               ; preds = %69
  %77 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %78 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %78, align 8
  %80 = icmp eq %"class.blink::PersistentNode"* %79, null
  br i1 %80, label %81, label %84, !prof !4

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %77, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %82) #12
  %83 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %78, align 8
  br label %84

84:                                               ; preds = %81, %76
  %85 = phi %"class.blink::PersistentNode"* [ %83, %81 ], [ %79, %76 ]
  %86 = bitcast %"class.blink::PersistentNode"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::PersistentRegion"* %77 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast %"class.blink::PersistentNode"* %85 to %"class.blink::PersistentBase.2484"**
  store %"class.blink::PersistentBase.2484"* %71, %"class.blink::PersistentBase.2484"** %89, align 8
  %90 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %85, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_7ElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %90, align 8
  store %"class.blink::PersistentNode"* %85, %"class.blink::PersistentNode"** %75, align 8
  br label %91

91:                                               ; preds = %69, %69, %84
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22CSPViolationReportBodyC2ERKNS_32SecurityPolicyViolationEventInitE(%"class.blink::CSPViolationReportBody"*, %"class.blink::SecurityPolicyViolationEventInit"* dereferenceable(120)) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.blink::LocationReportBody::ReportLocation", align 8
  %4 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 13
  %5 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %6 to i64
  %10 = shl nuw i64 %9, 32
  %11 = or i64 %10, 1
  %12 = zext i32 %8 to i64
  %13 = shl nuw i64 %12, 32
  %14 = or i64 %13, 1
  %15 = bitcast %"struct.blink::LocationReportBody::ReportLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  call void @_ZN5blink18LocationReportBody20CreateReportLocationERKN3WTF6StringEN4absl8optionalIjEES7_(%"struct.blink::LocationReportBody::ReportLocation"* nonnull sret %3, %"class.WTF::String"* dereferenceable(8) %4, i64 %11, i64 %14) #12
  %16 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink18LocationReportBodyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"struct.blink::LocationReportBody::ReportLocation", %"struct.blink::LocationReportBody::ReportLocation"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #12
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !4

36:                                               ; preds = %27
  call void @llvm.trap() #12
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  br label %40

40:                                               ; preds = %37, %22, %2
  %41 = phi %"class.WTF::StringImpl"* [ null, %2 ], [ %19, %22 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.blink::LocationReportBody::ReportLocation", %"struct.blink::LocationReportBody::ReportLocation"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast i8* %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = bitcast i8* %42 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %61

61:                                               ; preds = %40, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink22CSPViolationReportBodyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %62 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 7, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %71
  call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %61, %66, %81
  %84 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 11, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %86, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #12
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !4

102:                                              ; preds = %93
  call void @llvm.trap() #12
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %83, %88, %103
  %106 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 4, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #12
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !4

124:                                              ; preds = %115
  call void @llvm.trap() #12
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %105, %110, %125
  %128 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 8, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %130, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #12
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !4

146:                                              ; preds = %137
  call void @llvm.trap() #12
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %149

149:                                              ; preds = %127, %132, %147
  %150 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 10, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %152, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %153, label %171, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #12
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !4

168:                                              ; preds = %159
  call void @llvm.trap() #12
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  br label %171

171:                                              ; preds = %149, %154, %169
  %172 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 12, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %175, label %193, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #12
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !4

190:                                              ; preds = %181
  call void @llvm.trap() #12
  unreachable

191:                                              ; preds = %181
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %171, %176, %191
  %194 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 6, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %196, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %197, label %215, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i33
  %207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %206, i33 1) #12
  %208 = extractvalue { i33, i1 } %207, 1
  %209 = extractvalue { i33, i1 } %207, 0
  %210 = icmp slt i33 %209, 0
  %211 = or i1 %208, %210
  br i1 %211, label %212, label %213, !prof !4

212:                                              ; preds = %203
  call void @llvm.trap() #12
  unreachable

213:                                              ; preds = %203
  %214 = trunc i33 %209 to i32
  store i32 %214, i32* %204, align 4
  br label %215

215:                                              ; preds = %193, %198, %213
  %216 = getelementptr inbounds %"class.blink::CSPViolationReportBody", %"class.blink::CSPViolationReportBody"* %0, i64 0, i32 8
  %217 = getelementptr inbounds %"class.blink::SecurityPolicyViolationEventInit", %"class.blink::SecurityPolicyViolationEventInit"* %1, i64 0, i32 14
  %218 = load i16, i16* %217, align 8
  store i16 %218, i16* %216, align 8
  ret void
}

declare void @_ZN5blink18LocationReportBody20CreateReportLocationERKN3WTF6StringEN4absl8optionalIjEES7_(%"struct.blink::LocationReportBody::ReportLocation"* sret, %"class.WTF::String"* dereferenceable(8), i64, i64) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA14_KcRN3WTF6StringERPNS_22CSPViolationReportBodyEEEEPS1_DpOT_([14 x i8]* dereferenceable(14), %"class.WTF::String"* dereferenceable(8), %"class.blink::CSPViolationReportBody"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #12
  %6 = bitcast i8* %5 to %"class.blink::Report"*
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds [14 x i8], [14 x i8]* %0, i64 0, i64 0
  %9 = icmp eq [14 x i8]* %0, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @strlen(i8* nonnull %8) #14
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %8, i64 %13) #12
  %14 = bitcast %"class.blink::CSPViolationReportBody"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %5 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %5, i64 8
  %18 = bitcast i8* %17 to i64**
  store i64* null, i64** %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #12
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %29
  call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %12
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds i8, i8* %5, i64 24
  %45 = bitcast i8* %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #12
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !4

61:                                               ; preds = %52
  call void @llvm.trap() #12
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %41, %47, %62
  %65 = getelementptr inbounds i8, i8* %5, i64 32
  %66 = bitcast i8* %65 to i64*
  store i64 %15, i64* %66, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #12
  br label %82

82:                                               ; preds = %64, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %83 = getelementptr inbounds i8, i8* %5, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  ret %"class.blink::Report"* %6
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD2Ev(%"class.blink::Report"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD0Ev(%"class.blink::Report"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink6Report5TraceEPNS_7VisitorE(%"class.blink::Report"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.2491"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink6Report18GetWrapperTypeInfoEv(%"class.blink::Report"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Report18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 24, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink22WrapPersistentInternalINS_27ExecutionContextCSPDelegateEEENS_10PersistentIT_EEPS3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink22WrapPersistentInternalINS_27ExecutionContextCSPDelegateEEENS_10PersistentIT_EEPS3_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink22WrapPersistentInternalIKNS_32SecurityPolicyViolationEventInitEEENS_10PersistentIT_EEPS4_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink22WrapPersistentInternalIKNS_32SecurityPolicyViolationEventInitEEENS_10PersistentIT_EEPS4_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink22WrapPersistentInternalINS_7ElementEEENS_10PersistentIT_EEPS3_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink22WrapPersistentInternalINS_7ElementEEENS_10PersistentIT_EEPS3_"}
!14 = !{!15, !17, !19}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27ExecutionContextCSPDelegateEFvPKNS3_32SecurityPolicyViolationEventInitEPNS3_7ElementEEJNS3_10PersistentIS4_EENSC_IS6_EENSC_IS8_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27ExecutionContextCSPDelegateEFvPKNS3_32SecurityPolicyViolationEventInitEPNS3_7ElementEEJNS3_10PersistentIS4_EENSC_IS6_EENSC_IS8_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIMN5blink27ExecutionContextCSPDelegateEFvPKNS1_32SecurityPolicyViolationEventInitEPNS1_7ElementEEJNS1_10PersistentIS2_EENSA_IS4_EENSA_IS6_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIMN5blink27ExecutionContextCSPDelegateEFvPKNS1_32SecurityPolicyViolationEventInitEPNS1_7ElementEEJNS1_10PersistentIS2_EENSA_IS4_EENSA_IS6_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!19 = distinct !{!19, !20, !"_ZN3WTF4BindIMN5blink27ExecutionContextCSPDelegateEFvPKNS1_32SecurityPolicyViolationEventInitEPNS1_7ElementEEJNS1_10PersistentIS2_EENSA_IS4_EENSA_IS6_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF4BindIMN5blink27ExecutionContextCSPDelegateEFvPKNS1_32SecurityPolicyViolationEventInitEPNS1_7ElementEEJNS1_10PersistentIS2_EENSA_IS4_EENSA_IS6_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
