; ModuleID = '../../third_party/openscreen/src/discovery/mdns/mdns_writer.cc'
source_filename = "../../third_party/openscreen/src/discovery/mdns/mdns_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.openscreen::discovery::MdnsWriter" = type { %"class.openscreen::BigEndianWriter", %"class.std::__1::unordered_map" }
%"class.openscreen::BigEndianWriter" = type { %"class.openscreen::BigEndianBuffer" }
%"class.openscreen::BigEndianBuffer" = type { i8*, i8*, i8* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.openscreen::discovery::DomainName" = type { i64, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i64*, i64*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64* }
%"struct.std::__1::pair.33" = type <{ i64, i16, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ i64, i16, [6 x i8] }>
%"class.openscreen::discovery::RawRecordRdata" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i8*, i8*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i8* }
%"class.openscreen::discovery::SrvRecordRdata" = type { i16, i16, i16, %"class.openscreen::discovery::DomainName" }
%"class.openscreen::discovery::ARecordRdata" = type { %"class.openscreen::IPAddress", i64 }
%"class.openscreen::IPAddress" = type { i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.openscreen::discovery::AAAARecordRdata" = type { %"class.openscreen::IPAddress", i64 }
%"class.openscreen::discovery::PtrRecordRdata" = type { %"class.openscreen::discovery::DomainName" }
%"class.openscreen::discovery::TxtRecordRdata" = type { i64, %"class.std::__1::vector" }
%"class.openscreen::discovery::NsecRecordRdata" = type { %"class.std::__1::vector.35", %"class.std::__1::vector.42", %"class.openscreen::discovery::DomainName" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { i16*, i16*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i16* }
%"class.openscreen::discovery::OptRecordRdata" = type { %"class.std::__1::vector.49", i64 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"class.std::__1::__compressed_pair.51" }
%"struct.openscreen::discovery::OptRecordRdata::Option" = type { i16, i16, %"class.std::__1::vector.35" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.openscreen::discovery::OptRecordRdata::Option"* }
%"class.openscreen::internal::LogMessage" = type { i32, i8*, i32, %"class.std::__1::basic_stringstream" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.openscreen::discovery::MdnsRecord" = type { %"class.openscreen::discovery::DomainName", i16, i16, i32, %"class.std::__1::chrono::duration", %"class.absl::variant" }
%"class.std::__1::chrono::duration" = type { i64 }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"union.absl::variant_internal::DestructibleUnionImpl.58" }
%"union.absl::variant_internal::DestructibleUnionImpl.58" = type { %"union.absl::variant_internal::DestructibleUnionImpl.59" }
%"union.absl::variant_internal::DestructibleUnionImpl.59" = type { %"union.absl::variant_internal::DestructibleUnionImpl.60" }
%"union.absl::variant_internal::DestructibleUnionImpl.60" = type { %"union.absl::variant_internal::DestructibleUnionImpl.61" }
%"union.absl::variant_internal::DestructibleUnionImpl.61" = type { %"class.openscreen::discovery::NsecRecordRdata" }
%"class.openscreen::discovery::MdnsQuestion" = type { %"class.openscreen::discovery::DomainName", i16, i16, i32 }
%"class.openscreen::discovery::MdnsMessage" = type { i64, i16, i8, i32, %"class.std::__1::vector.64", %"class.std::__1::vector.71", %"class.std::__1::vector.71", %"class.std::__1::vector.71" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.openscreen::discovery::MdnsQuestion"* }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.openscreen::discovery::MdnsRecord"* }
%"struct.openscreen::discovery::Header" = type { i16, i16, i16, i16, i16, i16 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN10openscreen8internal10LogMessageD2Ev = comdat any

$_ZN10openscreen9discovery10MdnsWriter5WriteINS0_10MdnsRecordEEEbRKNSt3__16vectorIT_NS4_9allocatorIS6_EEEE = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_4pairIKmtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJNS_4pairImtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

@.str = private unnamed_addr constant [63 x i8] c"../../third_party/openscreen/src/discovery/mdns/mdns_writer.cc\00", align 1
@__func__._ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataE = private unnamed_addr constant [6 x i8] c"Write\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c": UNIMPLEMENTED() hit.\00", align 1
@_ZZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataEE13needs_warning = internal unnamed_addr global i1 false, align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteEN4absl11string_viewE(%"class.openscreen::discovery::MdnsWriter"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i64 %2, 255
  br i1 %4, label %23, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  %11 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ugt i8* %10, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %16 = trunc i64 %2 to i8
  store i8* %10, i8** %6, align 8
  store i8 %16, i8* %9, align 1
  %17 = tail call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %15, i8* %1, i64 %2) #12
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = load i64, i64* %7, align 8
  br label %20

20:                                               ; preds = %5, %14, %18
  %21 = phi i64 [ %19, %18 ], [ %8, %14 ], [ %8, %5 ]
  %22 = phi i1 [ true, %18 ], [ false, %14 ], [ false, %5 ]
  store i64 %21, i64* %7, align 8
  br label %23

23:                                               ; preds = %3, %20
  %24 = phi i1 [ %22, %20 ], [ false, %3 ]
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.openscreen::discovery::MdnsWriter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp sgt i64 %12, -1
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %10
  tail call void @llvm.trap() #12
  unreachable

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ugt i64 %12, 255
  br i1 %18, label %39, label %19

19:                                               ; preds = %7, %15
  %20 = phi i8* [ %9, %7 ], [ %17, %15 ]
  %21 = phi i64 [ %8, %7 ], [ %12, %15 ]
  %22 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = inttoptr i64 %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ugt i8* %26, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %32 = trunc i64 %21 to i8
  store i8* %26, i8** %22, align 8
  store i8 %32, i8* %25, align 1
  %33 = tail call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %31, i8* %20, i64 %21) #12
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = load i64, i64* %23, align 8
  br label %36

36:                                               ; preds = %34, %30, %19
  %37 = phi i64 [ %35, %34 ], [ %24, %30 ], [ %24, %19 ]
  %38 = phi i1 [ true, %34 ], [ false, %30 ], [ false, %19 ]
  store i64 %37, i64* %23, align 8
  br label %39

39:                                               ; preds = %15, %36
  %40 = phi i1 [ %38, %36 ], [ false, %15 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::DomainName"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector.24", align 8
  %6 = alloca %"class.std::__1::unordered_map", align 8
  %7 = alloca { i64, i16 }, align 8
  %8 = bitcast { i64, i16 }* %7 to %"struct.std::__1::pair.33"*
  %9 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %10, %12
  %14 = ptrtoint %"class.std::__1::basic_string"* %12 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  br i1 %13, label %340, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.24"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %1, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %26 = bitcast %"class.std::__1::vector"* %24 to i64*
  %27 = sub i64 %14, %15
  %28 = sdiv exact i64 %27, 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #12, !alias.scope !3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %130, label %30

30:                                               ; preds = %16
  %31 = icmp ugt i64 %28, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.24"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %33) #13
  unreachable

34:                                               ; preds = %30
  %35 = shl nsw i64 %28, 3
  %36 = tail call i8* @_Znwm(i64 %35) #14
  %37 = bitcast i8* %36 to i64*
  %38 = bitcast %"class.std::__1::vector.24"* %5 to i8**
  store i8* %36, i8** %38, align 8, !alias.scope !3
  %39 = getelementptr inbounds i64, i64* %37, i64 %28
  store i64* %39, i64** %23, align 8, !alias.scope !3
  %40 = bitcast i64** %22 to i64*
  %41 = ptrtoint i8* %36 to i64
  %42 = add nsw i64 %28, -1
  %43 = getelementptr i64, i64* %37, i64 %42
  %44 = ptrtoint i64* %43 to i64
  %45 = sub i64 8, %41
  %46 = add i64 %45, %44
  %47 = and i64 %46, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 %47, i1 false) #12, !noalias !3
  %48 = ptrtoint i64* %39 to i64
  store i64 %48, i64* %40, align 8, !alias.scope !3
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  br label %57

57:                                               ; preds = %124, %34
  %58 = phi %"class.std::__1::basic_string"* [ %10, %34 ], [ %125, %124 ]
  %59 = phi i64 [ %28, %34 ], [ %61, %124 ]
  %60 = phi i64 [ -4348849565147123417, %34 ], [ %115, %124 ]
  %61 = add i64 %59, -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12, !noalias !3
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %57
  %68 = zext i8 %65 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %62 to i64
  br label %77

70:                                               ; preds = %57
  %71 = bitcast %"class.std::__1::basic_string"* %62 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %61, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp sgt i64 %74, -1
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %70, %67
  %78 = phi i64 [ %72, %70 ], [ %69, %67 ]
  %79 = phi i64 [ %74, %70 ], [ %68, %67 ]
  %80 = inttoptr i64 %78 to i8*
  %81 = icmp eq i64 %78, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #12, !alias.scope !6, !noalias !3
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #12, !alias.scope !9, !noalias !3
  br label %98

83:                                               ; preds = %77
  %84 = icmp ult i64 %79, 23
  br i1 %84, label %90, label %85

85:                                               ; preds = %83
  %86 = add nuw i64 %79, 16
  %87 = and i64 %86, -16
  %88 = call i8* @_Znwm(i64 %87) #14
  store i8* %88, i8** %51, align 8, !alias.scope !9, !noalias !3
  %89 = or i64 %87, -9223372036854775808
  store i64 %89, i64* %53, align 8, !alias.scope !9, !noalias !3
  store i64 %79, i64* %52, align 8, !alias.scope !9, !noalias !3
  br label %93

90:                                               ; preds = %83
  %91 = trunc i64 %79 to i8
  store i8 %91, i8* %55, align 1, !alias.scope !9, !noalias !3
  %92 = icmp eq i64 %79, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %90, %85
  %94 = phi i8* [ %88, %85 ], [ %49, %90 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* nonnull align 1 %80, i64 %79, i1 false) #12
  br label %95

95:                                               ; preds = %93, %90
  %96 = phi i8* [ %49, %90 ], [ %94, %93 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 %79
  store i8 0, i8* %97, align 1, !noalias !3
  br label %98

98:                                               ; preds = %95, %82
  call void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4) #12
  %99 = load i8, i8* %55, align 1, !noalias !3
  %100 = icmp slt i8 %99, 0
  %101 = load i8*, i8** %51, align 8, !noalias !3
  %102 = load i64, i64* %52, align 8, !noalias !3
  %103 = zext i8 %99 to i64
  %104 = select i1 %100, i8* %101, i8* %49
  %105 = select i1 %100, i64 %102, i64 %103
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #12, !noalias !3
  %106 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %104, i64 %105) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #12, !noalias !3
  %107 = xor i64 %106, %60
  %108 = mul i64 %107, -7070675565921424023
  %109 = lshr i64 %108, 47
  %110 = xor i64 %108, %60
  %111 = xor i64 %110, %109
  %112 = mul i64 %111, -7070675565921424023
  %113 = lshr i64 %112, 47
  %114 = xor i64 %113, %112
  %115 = mul i64 %114, -7070675565921424023
  %116 = load i8, i8* %55, align 1, !noalias !3
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %98
  %119 = load i8*, i8** %51, align 8, !noalias !3
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %118, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12, !noalias !3
  %121 = load i64*, i64** %21, align 8, !alias.scope !3
  %122 = getelementptr inbounds i64, i64* %121, i64 %61
  store i64 %115, i64* %122, align 8
  %123 = icmp eq i64 %61, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8, !noalias !3
  br label %57

126:                                              ; preds = %120
  %127 = load i64, i64* %25, align 8
  %128 = load i64, i64* %26, align 8
  %129 = inttoptr i64 %128 to %"class.std::__1::basic_string"*
  br label %130

130:                                              ; preds = %126, %16
  %131 = phi %"class.std::__1::basic_string"* [ %129, %126 ], [ %10, %16 ]
  %132 = phi i64 [ %128, %126 ], [ %15, %16 ]
  %133 = phi i64 [ %127, %126 ], [ %14, %16 ]
  %134 = bitcast %"class.std::__1::unordered_map"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %134) #12
  %135 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0, i32 4, i64 0
  %138 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0, i32 3
  %139 = bitcast %"class.std::__1::__compressed_pair.11"* %138 to i32*
  %140 = bitcast i8* %137 to i32*
  store i32 -1431655766, i32* %140, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %139, align 8
  %141 = icmp eq i64 %133, %132
  br i1 %141, label %293, label %142

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 1
  %144 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.openscreen::discovery::MdnsWriter"* %0 to i64*
  %147 = bitcast { i64, i16 }* %7 to i8*
  %148 = getelementptr inbounds { i64, i16 }, { i64, i16 }* %7, i64 0, i32 0
  %149 = getelementptr inbounds { i64, i16 }, { i64, i16 }* %7, i64 0, i32 1
  %150 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0
  %151 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  br label %161

154:                                              ; preds = %288
  %155 = load i64, i64* %25, align 8
  %156 = load i64, i64* %26, align 8
  %157 = sub i64 %155, %156
  %158 = sdiv exact i64 %157, 24
  %159 = icmp ult i64 %292, %158
  %160 = inttoptr i64 %156 to %"class.std::__1::basic_string"*
  br i1 %159, label %161, label %293

161:                                              ; preds = %142, %154
  %162 = phi %"class.std::__1::basic_string"* [ %131, %142 ], [ %160, %154 ]
  %163 = phi i64 [ 0, %142 ], [ %292, %154 ]
  %164 = load i64*, i64** %21, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 %163
  %166 = load i64, i64* %165, align 8
  %167 = load i64, i64* %144, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %243, label %169

169:                                              ; preds = %161
  %170 = call i64 @llvm.ctpop.i64(i64 %167) #12, !range !12
  %171 = icmp ugt i64 %170, 1
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = add i64 %167, -1
  %174 = and i64 %173, %166
  br label %179

175:                                              ; preds = %169
  %176 = icmp ult i64 %166, %167
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = urem i64 %166, %167
  br label %179

179:                                              ; preds = %177, %175, %172
  %180 = phi i64 [ %174, %172 ], [ %178, %177 ], [ %166, %175 ]
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %145, align 8
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %181, i64 %180
  %183 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base"* %183, null
  br i1 %184, label %243, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %183, i64 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base"* %187, null
  br i1 %188, label %243, label %189

189:                                              ; preds = %185
  %190 = add i64 %167, -1
  br label %191

191:                                              ; preds = %212, %189
  %192 = phi %"struct.std::__1::__hash_node_base"* [ %187, %189 ], [ %214, %212 ]
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %192, i64 1
  %194 = bitcast %"struct.std::__1::__hash_node_base"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = icmp eq i64 %195, %166
  br i1 %196, label %207, label %197

197:                                              ; preds = %191
  br i1 %171, label %200, label %198

198:                                              ; preds = %197
  %199 = and i64 %195, %190
  br label %204

200:                                              ; preds = %197
  %201 = icmp ult i64 %195, %167
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = urem i64 %195, %167
  br label %204

204:                                              ; preds = %202, %200, %198
  %205 = phi i64 [ %199, %198 ], [ %203, %202 ], [ %195, %200 ]
  %206 = icmp eq i64 %205, %180
  br i1 %206, label %212, label %243

207:                                              ; preds = %191
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %192, i64 2
  %209 = bitcast %"struct.std::__1::__hash_node_base"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = icmp eq i64 %210, %166
  br i1 %211, label %216, label %212

212:                                              ; preds = %207, %204
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %192, i64 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %213, align 8
  %215 = icmp eq %"struct.std::__1::__hash_node_base"* %214, null
  br i1 %215, label %243, label %191

216:                                              ; preds = %207
  %217 = load i8*, i8** %17, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 2
  %219 = load i8*, i8** %153, align 8
  %220 = icmp ugt i8* %218, %219
  br i1 %220, label %316, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %192, i64 3
  %223 = bitcast %"struct.std::__1::__hash_node_base"* %222 to i16*
  %224 = load i16, i16* %223, align 8
  store i8* %218, i8** %17, align 8
  %225 = call i16 @llvm.bswap.i16(i16 %224) #12
  %226 = bitcast i8* %217 to i16*
  store i16 %225, i16* %226, align 1
  %227 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %228 = icmp eq %"struct.std::__1::__hash_node_base"* %227, null
  br i1 %228, label %241, label %229

229:                                              ; preds = %221
  %230 = ptrtoint %"struct.std::__1::__hash_node_base"* %227 to i64
  %231 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %143, i64 0, i32 0
  br label %232

232:                                              ; preds = %232, %229
  %233 = phi i64 [ %230, %229 ], [ %239, %232 ]
  %234 = inttoptr i64 %233 to %"struct.std::__1::__hash_node"*
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %234, i64 0, i32 2, i32 0
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %235, i64 0, i32 0
  %237 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_4pairIKmtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %231, i64* dereferenceable(8) %236, %"struct.std::__1::pair"* dereferenceable(16) %235) #12
  %238 = inttoptr i64 %233 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %232

241:                                              ; preds = %232, %221
  %242 = load i64, i64* %18, align 8
  br label %316

243:                                              ; preds = %204, %212, %179, %161, %185
  %244 = load i64, i64* %18, align 8
  %245 = load i64, i64* %146, align 8
  %246 = sub i64 %244, %245
  %247 = icmp ult i64 %246, 16384
  br i1 %247, label %248, label %253

248:                                              ; preds = %243
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #12
  %249 = trunc i64 %246 to i16
  %250 = or i16 %249, -16384
  store i64 %166, i64* %148, align 8
  store i16 %250, i16* %149, align 8
  %251 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJNS_4pairImtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %150, i64* nonnull dereferenceable(8) %148, %"struct.std::__1::pair.33"* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #12
  %252 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %152, align 8
  br label %253

253:                                              ; preds = %248, %243
  %254 = phi %"class.std::__1::basic_string"* [ %252, %248 ], [ %162, %243 ]
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %254, i64 %163
  %256 = bitcast %"class.std::__1::basic_string"* %255 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %254, i64 %163, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %262 = load i64, i64* %261, align 8
  br label %265

263:                                              ; preds = %253
  %264 = zext i8 %258 to i64
  br label %265

265:                                              ; preds = %260, %263
  %266 = phi i64 [ %262, %260 ], [ %264, %263 ]
  %267 = load i8*, i8** %17, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 1
  %269 = load i8*, i8** %153, align 8
  %270 = icmp ugt i8* %268, %269
  br i1 %270, label %316, label %271

271:                                              ; preds = %265
  %272 = trunc i64 %266 to i8
  %273 = and i8 %272, 63
  store i8* %268, i8** %17, align 8
  store i8 %273, i8* %267, align 1
  %274 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %152, align 8
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 %163
  %276 = bitcast %"class.std::__1::basic_string"* %275 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %278 = load i8, i8* %277, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %285

280:                                              ; preds = %271
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %275, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %274, i64 %163, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  br label %288

285:                                              ; preds = %271
  %286 = bitcast %"class.std::__1::basic_string"* %275 to i8*
  %287 = zext i8 %278 to i64
  br label %288

288:                                              ; preds = %280, %285
  %289 = phi i8* [ %282, %280 ], [ %286, %285 ]
  %290 = phi i64 [ %284, %280 ], [ %287, %285 ]
  %291 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %151, i8* %289, i64 %290) #12
  %292 = add nuw i64 %163, 1
  br i1 %291, label %154, label %316

293:                                              ; preds = %154, %130
  %294 = load i8*, i8** %17, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %297 = load i8*, i8** %296, align 8
  %298 = icmp ugt i8* %295, %297
  br i1 %298, label %316, label %299

299:                                              ; preds = %293
  store i8* %295, i8** %17, align 8
  store i8 0, i8* %294, align 1
  %300 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %301 = icmp eq %"struct.std::__1::__hash_node_base"* %300, null
  br i1 %301, label %314, label %302

302:                                              ; preds = %299
  %303 = ptrtoint %"struct.std::__1::__hash_node_base"* %300 to i64
  %304 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 1, i32 0
  br label %305

305:                                              ; preds = %305, %302
  %306 = phi i64 [ %303, %302 ], [ %312, %305 ]
  %307 = inttoptr i64 %306 to %"struct.std::__1::__hash_node"*
  %308 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %307, i64 0, i32 2, i32 0
  %309 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %308, i64 0, i32 0
  %310 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_4pairIKmtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %304, i64* dereferenceable(8) %309, %"struct.std::__1::pair"* dereferenceable(16) %308) #12
  %311 = inttoptr i64 %306 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %305

314:                                              ; preds = %305, %299
  %315 = load i64, i64* %18, align 8
  br label %316

316:                                              ; preds = %265, %288, %293, %216, %241, %314
  %317 = phi i64 [ %315, %314 ], [ %19, %216 ], [ %242, %241 ], [ %19, %293 ], [ %19, %288 ], [ %19, %265 ]
  %318 = phi i1 [ true, %314 ], [ false, %216 ], [ true, %241 ], [ false, %293 ], [ false, %288 ], [ false, %265 ]
  %319 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %320 = icmp eq %"struct.std::__1::__hash_node_base"* %319, null
  br i1 %320, label %327, label %321

321:                                              ; preds = %316, %321
  %322 = phi %"struct.std::__1::__hash_node_base"* [ %324, %321 ], [ %319, %316 ]
  %323 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %322, i64 0, i32 0
  %324 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %323, align 8
  %325 = bitcast %"struct.std::__1::__hash_node_base"* %322 to i8*
  call void @_ZdlPv(i8* %325) #14
  %326 = icmp eq %"struct.std::__1::__hash_node_base"* %324, null
  br i1 %326, label %327, label %321

327:                                              ; preds = %321, %316
  %328 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %329 = icmp eq %"struct.std::__1::__hash_node_base"** %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  %331 = bitcast %"struct.std::__1::__hash_node_base"** %328 to i8*
  call void @_ZdlPv(i8* %331) #14
  br label %332

332:                                              ; preds = %327, %330
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %134) #12
  %333 = load i64*, i64** %21, align 8
  %334 = icmp eq i64* %333, null
  br i1 %334, label %339, label %335

335:                                              ; preds = %332
  %336 = ptrtoint i64* %333 to i64
  %337 = bitcast i64** %22 to i64*
  store i64 %336, i64* %337, align 8
  %338 = bitcast i64* %333 to i8*
  call void @_ZdlPv(i8* %338) #14
  br label %339

339:                                              ; preds = %332, %335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  store i64 %317, i64* %18, align 8
  br label %340

340:                                              ; preds = %2, %339
  %341 = phi i1 [ %318, %339 ], [ false, %2 ]
  ret i1 %341
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14RawRecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::RawRecordRdata"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::RawRecordRdata", %"class.openscreen::discovery::RawRecordRdata"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = inttoptr i64 %5 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ugt i8* %9, %11
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.openscreen::discovery::RawRecordRdata"* %1 to i64*
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %16 = load i64, i64* %7, align 8
  %17 = load i64, i64* %14, align 8
  %18 = sub i64 %16, %17
  %19 = trunc i64 %18 to i16
  store i8* %9, i8** %3, align 8
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #12
  %21 = inttoptr i64 %5 to i16*
  store i16 %20, i16* %21, align 1
  %22 = getelementptr inbounds %"class.openscreen::discovery::RawRecordRdata", %"class.openscreen::discovery::RawRecordRdata"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = load i64, i64* %7, align 8
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  %27 = and i64 %26, 65535
  %28 = tail call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %15, i8* %23, i64 %27) #12
  br i1 %28, label %29, label %31

29:                                               ; preds = %13
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %2, %13, %29
  %32 = phi i64 [ %30, %29 ], [ %5, %13 ], [ %5, %2 ]
  %33 = phi i1 [ true, %29 ], [ false, %13 ], [ false, %2 ]
  store i64 %32, i64* %4, align 8
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14SrvRecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::SrvRecordRdata"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %7, %9
  br i1 %10, label %49, label %11

11:                                               ; preds = %2
  store i8* %7, i8** %3, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  %13 = icmp ugt i8* %12, %9
  br i1 %13, label %49, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %1, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  store i8* %12, i8** %3, align 8
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #12
  %18 = bitcast i8* %7 to i16*
  store i16 %17, i16* %18, align 1
  %19 = load i8*, i8** %3, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8*, i8** %8, align 8
  %22 = icmp ugt i8* %20, %21
  br i1 %22, label %49, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %1, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  store i8* %20, i8** %3, align 8
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #12
  %27 = bitcast i8* %19 to i16*
  store i16 %26, i16* %27, align 1
  %28 = load i8*, i8** %3, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 2
  %30 = load i8*, i8** %8, align 8
  %31 = icmp ugt i8* %29, %30
  br i1 %31, label %49, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %1, i64 0, i32 2
  %34 = load i16, i16* %33, align 4
  store i8* %29, i8** %3, align 8
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #12
  %36 = bitcast i8* %28 to i16*
  store i16 %35, i16* %36, align 1
  %37 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %1, i64 0, i32 3
  %38 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %37)
  br i1 %38, label %39, label %49

39:                                               ; preds = %32
  %40 = load i64, i64* %4, align 8
  %41 = sub i64 %40, %5
  %42 = add i64 %41, -2
  %43 = icmp sgt i64 %42, 65535
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = trunc i64 %42 to i16
  %46 = tail call i16 @llvm.bswap.i16(i16 %45) #12
  %47 = inttoptr i64 %5 to i16*
  store i16 %46, i16* %47, align 1
  %48 = load i64, i64* %4, align 8
  br label %49

49:                                               ; preds = %39, %23, %14, %11, %2, %32, %44
  %50 = phi i64 [ %48, %44 ], [ %5, %32 ], [ %5, %2 ], [ %5, %11 ], [ %5, %14 ], [ %5, %23 ], [ %5, %39 ]
  %51 = phi i1 [ true, %44 ], [ false, %32 ], [ false, %2 ], [ false, %11 ], [ false, %14 ], [ false, %23 ], [ false, %39 ]
  store i64 %50, i64* %4, align 8
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_12ARecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::ARecordRdata"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %8 = inttoptr i64 %6 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ugt i8* %9, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %2
  store i8* %9, i8** %4, align 8
  %14 = inttoptr i64 %6 to i16*
  store i16 1024, i16* %14, align 1
  %15 = getelementptr inbounds %"class.openscreen::discovery::ARecordRdata", %"class.openscreen::discovery::ARecordRdata"* %1, i64 0, i32 0
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.openscreen::discovery::ARecordRdata", %"class.openscreen::discovery::ARecordRdata"* %1, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %21

20:                                               ; preds = %13
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %15, i8* nonnull %16) #12
  br label %22

21:                                               ; preds = %13
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %15, i8* nonnull %16) #12
  br label %22

22:                                               ; preds = %20, %21
  %23 = phi i64 [ 16, %20 ], [ 4, %21 ]
  %24 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %7, i8* nonnull %16, i64 %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load i64, i64* %5, align 8
  br label %27

27:                                               ; preds = %2, %22, %25
  %28 = phi i64 [ %26, %25 ], [ %6, %22 ], [ %6, %2 ]
  %29 = phi i1 [ true, %25 ], [ false, %22 ], [ false, %2 ]
  store i64 %28, i64* %5, align 8
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS_9IPAddressE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::IPAddress"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.openscreen::IPAddress", %"class.openscreen::IPAddress"* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 16, i1 false)
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %1, i8* nonnull %4) #12
  br label %10

9:                                                ; preds = %2
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %1, i8* nonnull %4) #12
  br label %10

10:                                               ; preds = %9, %8
  %11 = phi i64 [ 16, %8 ], [ 4, %9 ]
  %12 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %13 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %12, i8* nonnull %4, i64 %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_15AAAARecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::AAAARecordRdata"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %8 = inttoptr i64 %6 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ugt i8* %9, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %2
  store i8* %9, i8** %4, align 8
  %14 = inttoptr i64 %6 to i16*
  store i16 4096, i16* %14, align 1
  %15 = getelementptr inbounds %"class.openscreen::discovery::AAAARecordRdata", %"class.openscreen::discovery::AAAARecordRdata"* %1, i64 0, i32 0
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.openscreen::discovery::AAAARecordRdata", %"class.openscreen::discovery::AAAARecordRdata"* %1, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %21

20:                                               ; preds = %13
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %15, i8* nonnull %16) #12
  br label %22

21:                                               ; preds = %13
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %15, i8* nonnull %16) #12
  br label %22

22:                                               ; preds = %20, %21
  %23 = phi i64 [ 16, %20 ], [ 4, %21 ]
  %24 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %7, i8* nonnull %16, i64 %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load i64, i64* %5, align 8
  br label %27

27:                                               ; preds = %2, %22, %25
  %28 = phi i64 [ %26, %25 ], [ %6, %22 ], [ %6, %2 ]
  %29 = phi i1 [ true, %25 ], [ false, %22 ], [ false, %2 ]
  store i64 %28, i64* %5, align 8
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14PtrRecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::PtrRecordRdata"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  store i8* %7, i8** %3, align 8
  %12 = getelementptr inbounds %"class.openscreen::discovery::PtrRecordRdata", %"class.openscreen::discovery::PtrRecordRdata"* %1, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %12)
  br i1 %13, label %14, label %24

14:                                               ; preds = %11
  %15 = load i64, i64* %4, align 8
  %16 = sub i64 %15, %5
  %17 = add i64 %16, -2
  %18 = icmp sgt i64 %17, 65535
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = trunc i64 %17 to i16
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #12
  %22 = inttoptr i64 %5 to i16*
  store i16 %21, i16* %22, align 1
  %23 = load i64, i64* %4, align 8
  br label %24

24:                                               ; preds = %14, %2, %11, %19
  %25 = phi i64 [ %23, %19 ], [ %5, %11 ], [ %5, %2 ], [ %5, %14 ]
  %26 = phi i1 [ true, %19 ], [ false, %11 ], [ false, %2 ], [ false, %14 ]
  store i64 %25, i64* %4, align 8
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14TxtRecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::TxtRecordRdata"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %7, %9
  br i1 %10, label %79, label %11

11:                                               ; preds = %2
  store i8* %7, i8** %3, align 8
  %12 = getelementptr inbounds %"class.openscreen::discovery::TxtRecordRdata", %"class.openscreen::discovery::TxtRecordRdata"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.openscreen::discovery::TxtRecordRdata", %"class.openscreen::discovery::TxtRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  %19 = ptrtoint i8* %7 to i64
  %20 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %21 = inttoptr i64 %15 to %"class.std::__1::basic_string"*
  br i1 %18, label %64, label %22

22:                                               ; preds = %11
  %23 = icmp eq %"class.std::__1::basic_string"* %20, %21
  br i1 %23, label %61, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  br label %28

26:                                               ; preds = %54
  %27 = icmp eq %"class.std::__1::basic_string"* %57, %21
  br i1 %27, label %59, label %28

28:                                               ; preds = %26, %24
  %29 = phi %"class.std::__1::basic_string"* [ %20, %24 ], [ %57, %26 ]
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = zext i8 %32 to i64
  %36 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %46

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ugt i64 %39, 255
  br i1 %45, label %63, label %46

46:                                               ; preds = %42, %34
  %47 = phi i8* [ %36, %34 ], [ %44, %42 ]
  %48 = phi i64 [ %35, %34 ], [ %39, %42 ]
  %49 = load i64, i64* %4, align 8
  %50 = inttoptr i64 %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8*, i8** %8, align 8
  %53 = icmp ugt i8* %51, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = trunc i64 %48 to i8
  store i8* %51, i8** %3, align 8
  store i8 %55, i8* %50, align 1
  %56 = tail call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %25, i8* %47, i64 %48) #12
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  br i1 %56, label %26, label %58

58:                                               ; preds = %54, %46
  store i64 %49, i64* %4, align 8
  br label %63

59:                                               ; preds = %26
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %59, %22
  %62 = phi i64 [ %19, %22 ], [ %60, %59 ]
  store i64 %62, i64* %4, align 8
  br label %69

63:                                               ; preds = %42, %58
  store i64 %19, i64* %4, align 8
  br label %79

64:                                               ; preds = %11
  %65 = getelementptr inbounds i8, i8* %6, i64 3
  %66 = icmp ugt i8* %65, %9
  br i1 %66, label %79, label %67

67:                                               ; preds = %64
  store i8* %65, i8** %3, align 8
  store i8 0, i8* %7, align 1
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64 [ %68, %67 ], [ %62, %61 ]
  %71 = sub i64 %70, %5
  %72 = add i64 %71, -2
  %73 = icmp sgt i64 %72, 65535
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = trunc i64 %72 to i16
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #12
  %77 = inttoptr i64 %5 to i16*
  store i16 %76, i16* %77, align 1
  %78 = load i64, i64* %4, align 8
  br label %79

79:                                               ; preds = %69, %64, %63, %2, %74
  %80 = phi i64 [ %78, %74 ], [ %5, %63 ], [ %5, %2 ], [ %5, %64 ], [ %5, %69 ]
  %81 = phi i1 [ true, %74 ], [ false, %63 ], [ false, %2 ], [ false, %64 ], [ false, %69 ]
  store i64 %80, i64* %4, align 8
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_15NsecRecordRdataE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::NsecRecordRdata"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %7, %9
  br i1 %10, label %51, label %11

11:                                               ; preds = %2
  store i8* %7, i8** %3, align 8
  %12 = getelementptr inbounds %"class.openscreen::discovery::NsecRecordRdata", %"class.openscreen::discovery::NsecRecordRdata"* %1, i64 0, i32 2
  %13 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %12)
  br i1 %13, label %14, label %51

14:                                               ; preds = %11
  %15 = load i64, i64* %4, align 8
  %16 = getelementptr inbounds %"class.openscreen::discovery::NsecRecordRdata", %"class.openscreen::discovery::NsecRecordRdata"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.openscreen::discovery::NsecRecordRdata", %"class.openscreen::discovery::NsecRecordRdata"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %17, %19
  br i1 %20, label %41, label %21

21:                                               ; preds = %14
  %22 = inttoptr i64 %15 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = load i8*, i8** %8, align 8
  %25 = icmp ugt i8* %23, %24
  br i1 %25, label %40, label %26

26:                                               ; preds = %21, %33
  %27 = phi i8* [ %35, %33 ], [ %23, %21 ]
  %28 = phi i8* [ %31, %33 ], [ %17, %21 ]
  %29 = phi i8* [ %34, %33 ], [ %22, %21 ]
  %30 = load i8, i8* %28, align 1
  store i8* %27, i8** %3, align 8
  store i8 %30, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %28, i64 1
  %32 = icmp eq i8* %31, %19
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  %36 = load i8*, i8** %8, align 8
  %37 = icmp ugt i8* %35, %36
  br i1 %37, label %40, label %26

38:                                               ; preds = %26
  %39 = load i64, i64* %4, align 8
  br label %41

40:                                               ; preds = %33, %21
  store i64 %15, i64* %4, align 8
  br label %51

41:                                               ; preds = %38, %14
  %42 = phi i64 [ %15, %14 ], [ %39, %38 ]
  store i64 %42, i64* %4, align 8
  %43 = sub i64 %42, %5
  %44 = add i64 %43, -2
  %45 = icmp sgt i64 %44, 65535
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = trunc i64 %44 to i16
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #12
  %49 = inttoptr i64 %5 to i16*
  store i16 %48, i16* %49, align 1
  %50 = load i64, i64* %4, align 8
  br label %51

51:                                               ; preds = %41, %40, %2, %11, %46
  %52 = phi i64 [ %50, %46 ], [ %5, %40 ], [ %5, %11 ], [ %5, %2 ], [ %5, %41 ]
  %53 = phi i1 [ true, %46 ], [ false, %40 ], [ false, %11 ], [ false, %2 ], [ false, %41 ]
  store i64 %52, i64* %4, align 8
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataE(%"class.openscreen::discovery::MdnsWriter"* nocapture readnone, %"class.openscreen::discovery::OptRecordRdata"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.openscreen::internal::LogMessage", align 8
  %4 = alloca %"class.openscreen::internal::LogMessage", align 8
  %5 = tail call zeroext i1 @_ZN10openscreen11IsLoggingOnENS_8LogLevelEPKc(i32 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0)) #12
  br i1 %5, label %6, label %66

6:                                                ; preds = %2
  %7 = bitcast %"class.openscreen::internal::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 2
  store i32 212, i32* %10, align 8
  %11 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3
  %12 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_stringstream"* %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %20 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8**
  %21 = inttoptr i64 %17 to i8*
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = bitcast i8* %26 to i64*
  store i64 %19, i64* %27, align 8
  %28 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 0, i32 0, i32 1
  store i64 0, i64* %28, align 8
  %29 = load i8*, i8** %20, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 %32
  %34 = bitcast i8* %33 to %"class.std::__1::ios_base"*
  %35 = bitcast %"class.std::__1::basic_stringbuf"* %15 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %34, i8* %35) #12
  %36 = getelementptr inbounds i8, i8* %33, i64 136
  %37 = bitcast i8* %36 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 144
  %39 = bitcast i8* %38 to i32*
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 0, i32 1
  %41 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %40 to i64*
  store i64 %41, i64* %42, align 8
  %43 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %44 = inttoptr i64 %41 to i8*
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::basic_ostream.base"* %40 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = bitcast i8* %49 to i64*
  store i64 %43, i64* %50, align 8
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %51, i64* %18, align 8
  %52 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %53 = inttoptr i64 %51 to i8*
  %54 = getelementptr i8, i8* %53, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i8, i8* %25, i64 %56
  %58 = bitcast i8* %57 to i64*
  store i64 %52, i64* %58, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %16) #12
  %59 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 1, i32 1
  %61 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %3, i64 0, i32 3, i32 1, i32 3
  %62 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false) #12
  store i32 24, i32* %61, align 8
  %63 = bitcast %"class.std::__1::basic_ostream.base"* %40 to %"class.std::__1::basic_ostream"*
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__func__._ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataE, i64 0, i64 0), i64 5) #12
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22) #12
  call void @_ZN10openscreen8internal10LogMessageD2Ev(%"class.openscreen::internal::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %7) #12
  br label %131

66:                                               ; preds = %2
  %67 = load i1, i1* @_ZZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataEE13needs_warning, align 1
  br i1 %67, label %131, label %68

68:                                               ; preds = %66
  %69 = tail call zeroext i1 @_ZN10openscreen11IsLoggingOnENS_8LogLevelEPKc(i32 2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0)) #12
  br i1 %69, label %70, label %130

70:                                               ; preds = %68
  %71 = bitcast %"class.openscreen::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %71) #12
  %72 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 0
  store i32 2, i32* %72, align 8
  %73 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 2
  store i32 212, i32* %74, align 8
  %75 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3
  %76 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 2, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %75, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %76, align 8
  %78 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 1
  %80 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %79, i64 0, i32 0
  %81 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %82 = bitcast %"class.std::__1::basic_stringstream"* %75 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %84 = bitcast %"class.std::__1::basic_stringstream"* %75 to i8**
  %85 = inttoptr i64 %81 to i8*
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::basic_stringstream"* %75 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  %91 = bitcast i8* %90 to i64*
  store i64 %83, i64* %91, align 8
  %92 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 0, i32 0, i32 1
  store i64 0, i64* %92, align 8
  %93 = load i8*, i8** %84, align 8
  %94 = getelementptr i8, i8* %93, i64 -24
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds i8, i8* %89, i64 %96
  %98 = bitcast i8* %97 to %"class.std::__1::ios_base"*
  %99 = bitcast %"class.std::__1::basic_stringbuf"* %79 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %98, i8* %99) #12
  %100 = getelementptr inbounds i8, i8* %97, i64 136
  %101 = bitcast i8* %100 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %101, align 8
  %102 = getelementptr inbounds i8, i8* %97, i64 144
  %103 = bitcast i8* %102 to i32*
  store i32 -1, i32* %103, align 8
  %104 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 0, i32 1
  %105 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %106 = bitcast %"class.std::__1::basic_ostream.base"* %104 to i64*
  store i64 %105, i64* %106, align 8
  %107 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %108 = inttoptr i64 %105 to i8*
  %109 = getelementptr i8, i8* %108, i64 -24
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::basic_ostream.base"* %104 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  %114 = bitcast i8* %113 to i64*
  store i64 %107, i64* %114, align 8
  %115 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %115, i64* %82, align 8
  %116 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %117 = inttoptr i64 %115 to i8*
  %118 = getelementptr i8, i8* %117, i64 -24
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i8, i8* %89, i64 %120
  %122 = bitcast i8* %121 to i64*
  store i64 %116, i64* %122, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %77, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %76, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %78, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %80) #12
  %123 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %79, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 1, i32 1
  %125 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %4, i64 0, i32 3, i32 1, i32 3
  %126 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 32, i1 false) #12
  store i32 24, i32* %125, align 8
  %127 = bitcast %"class.std::__1::basic_ostream.base"* %104 to %"class.std::__1::basic_ostream"*
  %128 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__func__._ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataE, i64 0, i64 0), i64 5) #12
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %128, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22) #12
  call void @_ZN10openscreen8internal10LogMessageD2Ev(%"class.openscreen::internal::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %71) #12
  br label %130

130:                                              ; preds = %68, %70
  store i1 true, i1* @_ZZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataEE13needs_warning, align 1
  br label %131

131:                                              ; preds = %66, %130, %6
  ret i1 false
}

declare zeroext i1 @_ZN10openscreen11IsLoggingOnENS_8LogLevelEPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10openscreen8internal10LogMessageD2Ev(%"class.openscreen::internal::LogMessage"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_stringstream", align 8
  %3 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_stringstream"* %2 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %2 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_stringstream"* %2 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %22, align 8
  store i64 0, i64* %23, align 8
  %25 = load i8*, i8** %14, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 %28
  %30 = bitcast %"class.std::__1::basic_stringstream"* %9 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr i8, i8* %31, i64 -24
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_stringstream"* %9 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = bitcast i8* %29 to %"class.std::__1::ios_base"*
  %38 = bitcast i8* %36 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4moveERS0_(%"class.std::__1::ios_base"* %37, %"class.std::__1::ios_base"* dereferenceable(136) %38) #12
  %39 = getelementptr inbounds i8, i8* %36, i64 136
  %40 = bitcast i8* %39 to %"class.std::__1::basic_ostream"**
  %41 = bitcast i8* %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %29, i64 136
  %44 = bitcast i8* %43 to i64*
  store i64 %42, i64* %44, align 8
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %40, align 8
  %45 = getelementptr inbounds i8, i8* %36, i64 144
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds i8, i8* %29, i64 144
  %49 = bitcast i8* %48 to i32*
  store i32 %47, i32* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 0, i32 1
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %52 = bitcast %"class.std::__1::basic_ostream.base"* %50 to i64*
  store i64 %51, i64* %52, align 8
  %53 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %54 = inttoptr i64 %51 to i8*
  %55 = getelementptr i8, i8* %54, i64 -24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::basic_ostream.base"* %50 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  %60 = bitcast i8* %59 to i64*
  store i64 %53, i64* %60, align 8
  %61 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %61, i64* %12, align 8
  %62 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %63 = inttoptr i64 %61 to i8*
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %19, i64 %66
  %68 = bitcast i8* %67 to i64*
  store i64 %62, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %69, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 1
  %72 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3, i32 1
  call void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC1EOS5_(%"class.std::__1::basic_stringbuf"* %71, %"class.std::__1::basic_stringbuf"* dereferenceable(104) %72) #12
  %73 = load i8*, i8** %14, align 8
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %19, i64 %76
  %78 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %71, i64 0, i32 0
  %79 = getelementptr inbounds i8, i8* %77, i64 40
  %80 = bitcast i8* %79 to %"class.std::__1::basic_streambuf"**
  store %"class.std::__1::basic_streambuf"* %78, %"class.std::__1::basic_streambuf"** %80, align 8
  call void @_ZN10openscreen12LogWithLevelENS_8LogLevelEPKciNSt3__118basic_stringstreamIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i32 %4, i8* %6, i32 %8, %"class.std::__1::basic_stringstream"* nonnull %2) #12
  %81 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %81, i64* %12, align 8
  %82 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %83 = inttoptr i64 %81 to i8*
  %84 = getelementptr i8, i8* %83, i64 -24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %19, i64 %86
  %88 = bitcast i8* %87 to i64*
  store i64 %82, i64* %88, align 8
  %89 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %89, i64* %52, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %71, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 1, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %1
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %1, %96
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %78) #12
  %100 = bitcast %"class.std::__1::basic_stringstream"* %2 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %100, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %101 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %2, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_ios.base"* %101 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %102) #12
  %103 = load i32, i32* %3, align 8
  %104 = icmp eq i32 %103, 4
  br i1 %104, label %105, label %106

105:                                              ; preds = %99
  call void @_ZN10openscreen5BreakEv() #13
  unreachable

106:                                              ; preds = %99
  %107 = bitcast %"class.std::__1::basic_stringstream"* %9 to i64*
  store i64 %81, i64* %107, align 8
  %108 = load i64, i64* %85, align 8
  %109 = getelementptr inbounds i8, i8* %35, i64 %108
  %110 = bitcast i8* %109 to i64*
  store i64 %82, i64* %110, align 8
  %111 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3, i32 0, i32 1
  %112 = bitcast %"class.std::__1::basic_ostream.base"* %111 to i64*
  store i64 %89, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %72, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %114 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3, i32 1, i32 1
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %106, %119
  %123 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %72, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %123) #12
  %124 = bitcast %"class.std::__1::basic_stringstream"* %9 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* %124, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %125 = getelementptr inbounds %"class.openscreen::internal::LogMessage", %"class.openscreen::internal::LogMessage"* %0, i64 0, i32 3, i32 2
  %126 = bitcast %"class.std::__1::basic_ios.base"* %125 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %126) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10MdnsRecordE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::MdnsRecord"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %6)
  br i1 %7, label %8, label %47

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 2
  %11 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ugt i8* %10, %12
  br i1 %13, label %47, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  store i8* %10, i8** %3, align 8
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #12
  %18 = bitcast i8* %9 to i16*
  store i16 %17, i16* %18, align 1
  %19 = load i8*, i8** %3, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8*, i8** %11, align 8
  %22 = icmp ugt i8* %20, %21
  br i1 %22, label %47, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i16
  %27 = shl i16 %26, 15
  %28 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = or i16 %27, %29
  store i8* %20, i8** %3, align 8
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #12
  %32 = bitcast i8* %19 to i16*
  store i16 %31, i16* %32, align 1
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 4
  %35 = load i8*, i8** %11, align 8
  %36 = icmp ugt i8* %34, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 4, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  store i8* %34, i8** %3, align 8
  %41 = tail call i32 @llvm.bswap.i32(i32 %40) #12
  %42 = bitcast i8* %33 to i32*
  store i32 %41, i32* %42, align 1
  %43 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %1, i64 0, i32 5
  %44 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKN4absl7variantIJNS0_14RawRecordRdataENS0_14SrvRecordRdataENS0_12ARecordRdataENS0_15AAAARecordRdataENS0_14PtrRecordRdataENS0_14TxtRecordRdataENS0_15NsecRecordRdataENS0_14OptRecordRdataEEEE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.absl::variant"* dereferenceable(88) %43)
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %4, align 8
  br label %47

47:                                               ; preds = %2, %8, %14, %23, %37, %45
  %48 = phi i64 [ %46, %45 ], [ %5, %37 ], [ %5, %23 ], [ %5, %14 ], [ %5, %8 ], [ %5, %2 ]
  %49 = phi i1 [ true, %45 ], [ false, %37 ], [ false, %23 ], [ false, %14 ], [ false, %8 ], [ false, %2 ]
  store i64 %48, i64* %4, align 8
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKN4absl7variantIJNS0_14RawRecordRdataENS0_14SrvRecordRdataENS0_12ARecordRdataENS0_15AAAARecordRdataENS0_14PtrRecordRdataENS0_14TxtRecordRdataENS0_15NsecRecordRdataENS0_14OptRecordRdataEEEE(%"class.openscreen::discovery::MdnsWriter"*, %"class.absl::variant"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %226 [
    i64 0, label %6
    i64 1, label %38
    i64 2, label %90
    i64 3, label %117
    i64 4, label %144
    i64 5, label %169
    i64 6, label %172
    i64 7, label %224
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = inttoptr i64 %9 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 2
  %14 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %13, %15
  br i1 %16, label %35, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.absl::variant"* %1 to i64*
  %19 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %20 = load i64, i64* %11, align 8
  %21 = load i64, i64* %18, align 8
  %22 = sub i64 %20, %21
  %23 = trunc i64 %22 to i16
  store i8* %13, i8** %7, align 8
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #12
  %25 = inttoptr i64 %9 to i16*
  store i16 %24, i16* %25, align 1
  %26 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load i64, i64* %11, align 8
  %29 = ptrtoint i8* %27 to i64
  %30 = sub i64 %28, %29
  %31 = and i64 %30, 65535
  %32 = tail call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %19, i8* %27, i64 %31) #12
  br i1 %32, label %33, label %35

33:                                               ; preds = %17
  %34 = load i64, i64* %8, align 8
  br label %35

35:                                               ; preds = %33, %17, %6
  %36 = phi i64 [ %34, %33 ], [ %9, %17 ], [ %9, %6 ]
  %37 = phi i1 [ true, %33 ], [ false, %17 ], [ false, %6 ]
  store i64 %36, i64* %8, align 8
  br label %227

38:                                               ; preds = %2
  %39 = bitcast %"class.absl::variant"* %1 to %"class.openscreen::discovery::SrvRecordRdata"*
  %40 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 2
  %45 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ugt i8* %44, %46
  br i1 %47, label %87, label %48

48:                                               ; preds = %38
  store i8* %44, i8** %40, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 4
  %50 = icmp ugt i8* %49, %46
  br i1 %50, label %87, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.absl::variant"* %1 to i16*
  %53 = load i16, i16* %52, align 8
  store i8* %49, i8** %40, align 8
  %54 = tail call i16 @llvm.bswap.i16(i16 %53) #12
  %55 = bitcast i8* %44 to i16*
  store i16 %54, i16* %55, align 1
  %56 = load i8*, i8** %40, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 2
  %58 = load i8*, i8** %45, align 8
  %59 = icmp ugt i8* %57, %58
  br i1 %59, label %87, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %39, i64 0, i32 1
  %62 = load i16, i16* %61, align 2
  store i8* %57, i8** %40, align 8
  %63 = tail call i16 @llvm.bswap.i16(i16 %62) #12
  %64 = bitcast i8* %56 to i16*
  store i16 %63, i16* %64, align 1
  %65 = load i8*, i8** %40, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 2
  %67 = load i8*, i8** %45, align 8
  %68 = icmp ugt i8* %66, %67
  br i1 %68, label %87, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %39, i64 0, i32 2
  %71 = load i16, i16* %70, align 4
  store i8* %66, i8** %40, align 8
  %72 = tail call i16 @llvm.bswap.i16(i16 %71) #12
  %73 = bitcast i8* %65 to i16*
  store i16 %72, i16* %73, align 1
  %74 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i8** %74 to %"class.openscreen::discovery::DomainName"*
  %76 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %75) #12
  br i1 %76, label %77, label %87

77:                                               ; preds = %69
  %78 = load i64, i64* %41, align 8
  %79 = sub i64 %78, %42
  %80 = add i64 %79, -2
  %81 = icmp sgt i64 %80, 65535
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = trunc i64 %80 to i16
  %84 = tail call i16 @llvm.bswap.i16(i16 %83) #12
  %85 = inttoptr i64 %42 to i16*
  store i16 %84, i16* %85, align 1
  %86 = load i64, i64* %41, align 8
  br label %87

87:                                               ; preds = %82, %77, %69, %60, %51, %48, %38
  %88 = phi i64 [ %86, %82 ], [ %42, %69 ], [ %42, %38 ], [ %42, %48 ], [ %42, %51 ], [ %42, %60 ], [ %42, %77 ]
  %89 = phi i1 [ true, %82 ], [ false, %69 ], [ false, %38 ], [ false, %48 ], [ false, %51 ], [ false, %60 ], [ false, %77 ]
  store i64 %88, i64* %41, align 8
  br label %227

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast i8** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %95 = inttoptr i64 %93 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 2
  %97 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %98 = load i8*, i8** %97, align 8
  %99 = icmp ugt i8* %96, %98
  br i1 %99, label %114, label %100

100:                                              ; preds = %90
  store i8* %96, i8** %91, align 8
  %101 = inttoptr i64 %93 to i16*
  store i16 1024, i16* %101, align 1
  %102 = bitcast %"class.absl::variant"* %1 to %"class.openscreen::IPAddress"*
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #12
  %104 = bitcast %"class.absl::variant"* %1 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -86, i64 16, i1 false) #12
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %102, i8* nonnull %103) #12
  br label %109

108:                                              ; preds = %100
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %102, i8* nonnull %103) #12
  br label %109

109:                                              ; preds = %108, %107
  %110 = phi i64 [ 16, %107 ], [ 4, %108 ]
  %111 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %94, i8* nonnull %103, i64 %110) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #12
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i64, i64* %92, align 8
  br label %114

114:                                              ; preds = %112, %109, %90
  %115 = phi i64 [ %113, %112 ], [ %93, %109 ], [ %93, %90 ]
  %116 = phi i1 [ true, %112 ], [ false, %109 ], [ false, %90 ]
  store i64 %115, i64* %92, align 8
  br label %227

117:                                              ; preds = %2
  %118 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %119 = bitcast i8** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0
  %122 = inttoptr i64 %120 to i8*
  %123 = getelementptr inbounds i8, i8* %122, i64 2
  %124 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %125 = load i8*, i8** %124, align 8
  %126 = icmp ugt i8* %123, %125
  br i1 %126, label %141, label %127

127:                                              ; preds = %117
  store i8* %123, i8** %118, align 8
  %128 = inttoptr i64 %120 to i16*
  store i16 4096, i16* %128, align 1
  %129 = bitcast %"class.absl::variant"* %1 to %"class.openscreen::IPAddress"*
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #12
  %131 = bitcast %"class.absl::variant"* %1 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %130, i8 -86, i64 16, i1 false) #12
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  call void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"* %129, i8* nonnull %130) #12
  br label %136

135:                                              ; preds = %127
  call void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"* %129, i8* nonnull %130) #12
  br label %136

136:                                              ; preds = %135, %134
  %137 = phi i64 [ 16, %134 ], [ 4, %135 ]
  %138 = call zeroext i1 @_ZN10openscreen15BigEndianWriter5WriteEPKvm(%"class.openscreen::BigEndianWriter"* %121, i8* nonnull %130, i64 %137) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #12
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i64, i64* %119, align 8
  br label %141

141:                                              ; preds = %139, %136, %117
  %142 = phi i64 [ %140, %139 ], [ %120, %136 ], [ %120, %117 ]
  %143 = phi i1 [ true, %139 ], [ false, %136 ], [ false, %117 ]
  store i64 %142, i64* %119, align 8
  br label %227

144:                                              ; preds = %2
  %145 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %146 = bitcast i8** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = inttoptr i64 %147 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 2
  %150 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %151 = load i8*, i8** %150, align 8
  %152 = icmp ugt i8* %149, %151
  br i1 %152, label %166, label %153

153:                                              ; preds = %144
  store i8* %149, i8** %145, align 8
  %154 = bitcast %"class.absl::variant"* %1 to %"class.openscreen::discovery::DomainName"*
  %155 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %154) #12
  br i1 %155, label %156, label %166

156:                                              ; preds = %153
  %157 = load i64, i64* %146, align 8
  %158 = sub i64 %157, %147
  %159 = add i64 %158, -2
  %160 = icmp sgt i64 %159, 65535
  br i1 %160, label %166, label %161

161:                                              ; preds = %156
  %162 = trunc i64 %159 to i16
  %163 = tail call i16 @llvm.bswap.i16(i16 %162) #12
  %164 = inttoptr i64 %147 to i16*
  store i16 %163, i16* %164, align 1
  %165 = load i64, i64* %146, align 8
  br label %166

166:                                              ; preds = %161, %156, %153, %144
  %167 = phi i64 [ %165, %161 ], [ %147, %153 ], [ %147, %144 ], [ %147, %156 ]
  %168 = phi i1 [ true, %161 ], [ false, %153 ], [ false, %144 ], [ false, %156 ]
  store i64 %167, i64* %146, align 8
  br label %227

169:                                              ; preds = %2
  %170 = bitcast %"class.absl::variant"* %1 to %"class.openscreen::discovery::TxtRecordRdata"*
  %171 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14TxtRecordRdataE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::TxtRecordRdata"* dereferenceable(32) %170) #12
  br label %227

172:                                              ; preds = %2
  %173 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %174 = bitcast i8** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = inttoptr i64 %175 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 2
  %178 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %179 = load i8*, i8** %178, align 8
  %180 = icmp ugt i8* %177, %179
  br i1 %180, label %221, label %181

181:                                              ; preds = %172
  store i8* %177, i8** %173, align 8
  %182 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %183 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %182) #12
  br i1 %183, label %184, label %221

184:                                              ; preds = %181
  %185 = load i64, i64* %174, align 8
  %186 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %187, %189
  br i1 %190, label %211, label %191

191:                                              ; preds = %184
  %192 = inttoptr i64 %185 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 1
  %194 = load i8*, i8** %178, align 8
  %195 = icmp ugt i8* %193, %194
  br i1 %195, label %210, label %196

196:                                              ; preds = %191, %203
  %197 = phi i8* [ %205, %203 ], [ %193, %191 ]
  %198 = phi i8* [ %201, %203 ], [ %187, %191 ]
  %199 = phi i8* [ %204, %203 ], [ %192, %191 ]
  %200 = load i8, i8* %198, align 1
  store i8* %197, i8** %173, align 8
  store i8 %200, i8* %199, align 1
  %201 = getelementptr inbounds i8, i8* %198, i64 1
  %202 = icmp eq i8* %201, %189
  br i1 %202, label %208, label %203

203:                                              ; preds = %196
  %204 = load i8*, i8** %173, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 1
  %206 = load i8*, i8** %178, align 8
  %207 = icmp ugt i8* %205, %206
  br i1 %207, label %210, label %196

208:                                              ; preds = %196
  %209 = load i64, i64* %174, align 8
  br label %211

210:                                              ; preds = %203, %191
  store i64 %185, i64* %174, align 8
  br label %221

211:                                              ; preds = %208, %184
  %212 = phi i64 [ %185, %184 ], [ %209, %208 ]
  store i64 %212, i64* %174, align 8
  %213 = sub i64 %212, %175
  %214 = add i64 %213, -2
  %215 = icmp sgt i64 %214, 65535
  br i1 %215, label %221, label %216

216:                                              ; preds = %211
  %217 = trunc i64 %214 to i16
  %218 = tail call i16 @llvm.bswap.i16(i16 %217) #12
  %219 = inttoptr i64 %175 to i16*
  store i16 %218, i16* %219, align 1
  %220 = load i64, i64* %174, align 8
  br label %221

221:                                              ; preds = %216, %211, %210, %181, %172
  %222 = phi i64 [ %220, %216 ], [ %175, %210 ], [ %175, %181 ], [ %175, %172 ], [ %175, %211 ]
  %223 = phi i1 [ true, %216 ], [ false, %210 ], [ false, %181 ], [ false, %172 ], [ false, %211 ]
  store i64 %222, i64* %174, align 8
  br label %227

224:                                              ; preds = %2
  %225 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_14OptRecordRdataE(%"class.openscreen::discovery::MdnsWriter"* undef, %"class.openscreen::discovery::OptRecordRdata"* dereferenceable(32) undef) #12
  br label %227

226:                                              ; preds = %2
  tail call fastcc void @"_ZNK4absl16variant_internal17PerformVisitationIZN10openscreen9discovery10MdnsWriter5WriteERKNS_7variantIJNS3_14RawRecordRdataENS3_14SrvRecordRdataENS3_12ARecordRdataENS3_15AAAARecordRdataENS3_14PtrRecordRdataENS3_14TxtRecordRdataENS3_15NsecRecordRdataENS3_14OptRecordRdataEEEEE3$_0JSG_EEclIJLm18446744073709551615EEEEbDpNSt3__117integral_constantImXT_EEE"() #12
  unreachable

227:                                              ; preds = %35, %87, %114, %141, %166, %169, %221, %224
  %228 = phi i1 [ false, %224 ], [ %223, %221 ], [ %171, %169 ], [ %168, %166 ], [ %143, %141 ], [ %116, %114 ], [ %89, %87 ], [ %37, %35 ]
  ret i1 %228
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_12MdnsQuestionE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::MdnsQuestion"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %1, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %6)
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 2
  %11 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ugt i8* %10, %12
  br i1 %13, label %34, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %1, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  store i8* %10, i8** %3, align 8
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #12
  %18 = bitcast i8* %9 to i16*
  store i16 %17, i16* %18, align 1
  %19 = load i8*, i8** %3, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8*, i8** %11, align 8
  %22 = icmp ugt i8* %20, %21
  br i1 %22, label %34, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i16
  %27 = shl i16 %26, 15
  %28 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %1, i64 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = or i16 %27, %29
  store i8* %20, i8** %3, align 8
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #12
  %32 = bitcast i8* %19 to i16*
  store i16 %31, i16* %32, align 1
  %33 = load i64, i64* %4, align 8
  br label %34

34:                                               ; preds = %14, %8, %2, %23
  %35 = phi i64 [ %33, %23 ], [ %5, %2 ], [ %5, %8 ], [ %5, %14 ]
  %36 = phi i1 [ true, %23 ], [ false, %2 ], [ false, %8 ], [ false, %14 ]
  store i64 %35, i64* %4, align 8
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_11MdnsMessageE(%"class.openscreen::discovery::MdnsWriter"*, %"class.openscreen::discovery::MdnsMessage"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 2
  %9 = load i8, i8* %8, align 2, !range !13
  %10 = icmp eq i8 %9, 0
  %11 = icmp eq i32 %7, 1
  %12 = select i1 %11, i16 -31744, i16 0
  %13 = or i16 %12, 512
  %14 = select i1 %10, i16 %12, i16 %13
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast %"class.openscreen::discovery::MdnsQuestion"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.64"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 40
  %23 = trunc i64 %22 to i16
  %24 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 5
  %25 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 5, i32 0, i32 1
  %26 = bitcast %"class.openscreen::discovery::MdnsRecord"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.71"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 136
  %32 = trunc i64 %31 to i16
  %33 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 6
  %34 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 6, i32 0, i32 1
  %35 = bitcast %"class.openscreen::discovery::MdnsRecord"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.71"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = sdiv exact i64 %39, 136
  %41 = trunc i64 %40 to i16
  %42 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 7
  %43 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 7, i32 0, i32 1
  %44 = bitcast %"class.openscreen::discovery::MdnsRecord"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.71"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = sdiv exact i64 %48, 136
  %50 = trunc i64 %49 to i16
  %51 = inttoptr i64 %5 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 2
  %53 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ugt i8* %52, %54
  br i1 %55, label %93, label %56

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 1
  %58 = load i16, i16* %57, align 8
  store i8* %52, i8** %3, align 8
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #12
  %60 = inttoptr i64 %5 to i16*
  store i16 %59, i16* %60, align 1
  %61 = load i8*, i8** %3, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 2
  %63 = load i8*, i8** %53, align 8
  %64 = icmp ugt i8* %62, %63
  br i1 %64, label %93, label %65

65:                                               ; preds = %56
  store i8* %62, i8** %3, align 8
  %66 = tail call i16 @llvm.bswap.i16(i16 %14) #12
  %67 = bitcast i8* %61 to i16*
  store i16 %66, i16* %67, align 1
  %68 = load i8*, i8** %3, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 2
  %70 = load i8*, i8** %53, align 8
  %71 = icmp ugt i8* %69, %70
  br i1 %71, label %93, label %72

72:                                               ; preds = %65
  store i8* %69, i8** %3, align 8
  %73 = tail call i16 @llvm.bswap.i16(i16 %23) #12
  %74 = bitcast i8* %68 to i16*
  store i16 %73, i16* %74, align 1
  %75 = load i8*, i8** %3, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 2
  %77 = load i8*, i8** %53, align 8
  %78 = icmp ugt i8* %76, %77
  br i1 %78, label %93, label %79

79:                                               ; preds = %72
  store i8* %76, i8** %3, align 8
  %80 = tail call i16 @llvm.bswap.i16(i16 %32) #12
  %81 = bitcast i8* %75 to i16*
  store i16 %80, i16* %81, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 2
  %84 = load i8*, i8** %53, align 8
  %85 = icmp ugt i8* %83, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %79
  store i8* %83, i8** %3, align 8
  %87 = tail call i16 @llvm.bswap.i16(i16 %41) #12
  %88 = bitcast i8* %82 to i16*
  store i16 %87, i16* %88, align 1
  %89 = load i8*, i8** %3, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 2
  %91 = load i8*, i8** %53, align 8
  %92 = icmp ugt i8* %90, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %2, %56, %65, %72, %79, %86
  store i64 %5, i64* %4, align 8
  br label %144

94:                                               ; preds = %86
  store i8* %90, i8** %3, align 8
  %95 = tail call i16 @llvm.bswap.i16(i16 %50) #12
  %96 = bitcast i8* %89 to i16*
  store i16 %95, i16* %96, align 1
  %97 = load i64, i64* %4, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %15, i64 0, i32 0, i32 0
  %99 = load %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"** %98, align 8
  %100 = load %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"** %16, align 8
  %101 = icmp eq %"class.openscreen::discovery::MdnsQuestion"* %99, %100
  br i1 %101, label %135, label %102

102:                                              ; preds = %94, %120
  %103 = phi %"class.openscreen::discovery::MdnsQuestion"* [ %130, %120 ], [ %99, %94 ]
  %104 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %103, i64 0, i32 0
  %105 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %104) #12
  br i1 %105, label %106, label %132

106:                                              ; preds = %102
  %107 = load i8*, i8** %3, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 2
  %109 = load i8*, i8** %53, align 8
  %110 = icmp ugt i8* %108, %109
  br i1 %110, label %132, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %103, i64 0, i32 1
  %113 = load i16, i16* %112, align 8
  store i8* %108, i8** %3, align 8
  %114 = tail call i16 @llvm.bswap.i16(i16 %113) #12
  %115 = bitcast i8* %107 to i16*
  store i16 %114, i16* %115, align 1
  %116 = load i8*, i8** %3, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 2
  %118 = load i8*, i8** %53, align 8
  %119 = icmp ugt i8* %117, %118
  br i1 %119, label %132, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %103, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = trunc i32 %122 to i16
  %124 = shl i16 %123, 15
  %125 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %103, i64 0, i32 2
  %126 = load i16, i16* %125, align 2
  %127 = or i16 %124, %126
  store i8* %117, i8** %3, align 8
  %128 = tail call i16 @llvm.bswap.i16(i16 %127) #12
  %129 = bitcast i8* %116 to i16*
  store i16 %128, i16* %129, align 1
  %130 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %103, i64 1
  %131 = icmp eq %"class.openscreen::discovery::MdnsQuestion"* %130, %100
  br i1 %131, label %133, label %102

132:                                              ; preds = %102, %106, %111
  store i64 %97, i64* %4, align 8
  br label %144

133:                                              ; preds = %120
  %134 = load i64, i64* %4, align 8
  br label %135

135:                                              ; preds = %133, %94
  %136 = phi i64 [ %97, %94 ], [ %134, %133 ]
  store i64 %136, i64* %4, align 8
  %137 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteINS0_10MdnsRecordEEEbRKNSt3__16vectorIT_NS4_9allocatorIS6_EEEE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.std::__1::vector.71"* dereferenceable(24) %24)
  br i1 %137, label %138, label %144

138:                                              ; preds = %135
  %139 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteINS0_10MdnsRecordEEEbRKNSt3__16vectorIT_NS4_9allocatorIS6_EEEE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.std::__1::vector.71"* dereferenceable(24) %33)
  br i1 %139, label %140, label %144

140:                                              ; preds = %138
  %141 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteINS0_10MdnsRecordEEEbRKNSt3__16vectorIT_NS4_9allocatorIS6_EEEE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.std::__1::vector.71"* dereferenceable(24) %42)
  br i1 %141, label %142, label %144

142:                                              ; preds = %140
  %143 = load i64, i64* %4, align 8
  br label %144

144:                                              ; preds = %132, %93, %135, %138, %140, %142
  %145 = phi i64 [ %143, %142 ], [ %5, %140 ], [ %5, %138 ], [ %5, %135 ], [ %5, %132 ], [ %5, %93 ]
  %146 = phi i1 [ true, %142 ], [ false, %140 ], [ false, %138 ], [ false, %135 ], [ false, %132 ], [ false, %93 ]
  store i64 %145, i64* %4, align 8
  ret i1 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_6HeaderE(%"class.openscreen::discovery::MdnsWriter"*, %"struct.openscreen::discovery::Header"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %7, %9
  br i1 %10, label %62, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  store i8* %7, i8** %3, align 8
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #12
  %15 = inttoptr i64 %5 to i16*
  store i16 %14, i16* %15, align 1
  %16 = load i8*, i8** %3, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 2
  %18 = load i8*, i8** %8, align 8
  %19 = icmp ugt i8* %17, %18
  br i1 %19, label %62, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  store i8* %17, i8** %3, align 8
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #12
  %24 = bitcast i8* %16 to i16*
  store i16 %23, i16* %24, align 1
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 2
  %27 = load i8*, i8** %8, align 8
  %28 = icmp ugt i8* %26, %27
  br i1 %28, label %62, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 2
  %31 = load i16, i16* %30, align 2
  store i8* %26, i8** %3, align 8
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #12
  %33 = bitcast i8* %25 to i16*
  store i16 %32, i16* %33, align 1
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = load i8*, i8** %8, align 8
  %37 = icmp ugt i8* %35, %36
  br i1 %37, label %62, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 3
  %40 = load i16, i16* %39, align 2
  store i8* %35, i8** %3, align 8
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #12
  %42 = bitcast i8* %34 to i16*
  store i16 %41, i16* %42, align 1
  %43 = load i8*, i8** %3, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 2
  %45 = load i8*, i8** %8, align 8
  %46 = icmp ugt i8* %44, %45
  br i1 %46, label %62, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 4
  %49 = load i16, i16* %48, align 2
  store i8* %44, i8** %3, align 8
  %50 = tail call i16 @llvm.bswap.i16(i16 %49) #12
  %51 = bitcast i8* %43 to i16*
  store i16 %50, i16* %51, align 1
  %52 = load i8*, i8** %3, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 2
  %54 = load i8*, i8** %8, align 8
  %55 = icmp ugt i8* %53, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.openscreen::discovery::Header", %"struct.openscreen::discovery::Header"* %1, i64 0, i32 5
  %58 = load i16, i16* %57, align 2
  store i8* %53, i8** %3, align 8
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #12
  %60 = bitcast i8* %52 to i16*
  store i16 %59, i16* %60, align 1
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %47, %38, %29, %20, %11, %2, %56
  %63 = phi i64 [ %61, %56 ], [ %5, %2 ], [ %5, %11 ], [ %5, %20 ], [ %5, %29 ], [ %5, %38 ], [ %5, %47 ]
  %64 = phi i1 [ true, %56 ], [ false, %2 ], [ false, %11 ], [ false, %20 ], [ false, %29 ], [ false, %38 ], [ false, %47 ]
  store i64 %63, i64* %4, align 8
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteINS0_10MdnsRecordEEEbRKNSt3__16vectorIT_NS4_9allocatorIS6_EEEE(%"class.openscreen::discovery::MdnsWriter"*, %"class.std::__1::vector.71"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %8, align 8
  %10 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %7, %9
  br i1 %10, label %62, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.openscreen::discovery::MdnsWriter", %"class.openscreen::discovery::MdnsWriter"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %7, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %13) #12
  br i1 %14, label %21, label %60

15:                                               ; preds = %51
  %16 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %59, %9
  %17 = load i64, i64* %4, align 8
  br i1 %16, label %62, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %59, i64 0, i32 0
  %20 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKNS0_10DomainNameE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %19) #12
  br i1 %20, label %21, label %60

21:                                               ; preds = %11, %18
  %22 = phi %"class.openscreen::discovery::MdnsRecord"* [ %59, %18 ], [ %7, %11 ]
  %23 = phi i64 [ %17, %18 ], [ %5, %11 ]
  %24 = load i8*, i8** %3, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 2
  %26 = load i8*, i8** %12, align 8
  %27 = icmp ugt i8* %25, %26
  br i1 %27, label %60, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 0, i32 1
  %30 = load i16, i16* %29, align 8
  store i8* %25, i8** %3, align 8
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #12
  %32 = bitcast i8* %24 to i16*
  store i16 %31, i16* %32, align 1
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8*, i8** %12, align 8
  %36 = icmp ugt i8* %34, %35
  br i1 %36, label %60, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = shl i16 %40, 15
  %42 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 0, i32 2
  %43 = load i16, i16* %42, align 2
  %44 = or i16 %41, %43
  store i8* %34, i8** %3, align 8
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #12
  %46 = bitcast i8* %33 to i16*
  store i16 %45, i16* %46, align 1
  %47 = load i8*, i8** %3, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 4
  %49 = load i8*, i8** %12, align 8
  %50 = icmp ugt i8* %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 0, i32 4, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  store i8* %48, i8** %3, align 8
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #12
  %56 = bitcast i8* %47 to i32*
  store i32 %55, i32* %56, align 1
  %57 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 0, i32 5
  %58 = tail call zeroext i1 @_ZN10openscreen9discovery10MdnsWriter5WriteERKN4absl7variantIJNS0_14RawRecordRdataENS0_14SrvRecordRdataENS0_12ARecordRdataENS0_15AAAARecordRdataENS0_14PtrRecordRdataENS0_14TxtRecordRdataENS0_15NsecRecordRdataENS0_14OptRecordRdataEEEE(%"class.openscreen::discovery::MdnsWriter"* %0, %"class.absl::variant"* dereferenceable(88) %57) #12
  %59 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %22, i64 1
  br i1 %58, label %15, label %60

60:                                               ; preds = %51, %37, %28, %21, %18, %11
  %61 = phi i64 [ %5, %11 ], [ %23, %51 ], [ %23, %37 ], [ %23, %28 ], [ %23, %21 ], [ %17, %18 ]
  store i64 %61, i64* %4, align 8
  br label %62

62:                                               ; preds = %15, %2, %60
  %63 = phi i64 [ %5, %60 ], [ %5, %2 ], [ %17, %15 ]
  %64 = phi i1 [ false, %60 ], [ true, %2 ], [ true, %15 ]
  store i64 %63, i64* %4, align 8
  ret i1 %64
}

declare void @_ZNK10openscreen9IPAddress8CopyToV6EPh(%"class.openscreen::IPAddress"*, i8*) local_unnamed_addr #2

declare void @_ZNK10openscreen9IPAddress8CopyToV4EPh(%"class.openscreen::IPAddress"*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZN10openscreen12LogWithLevelENS_8LogLevelEPKciNSt3__118basic_stringstreamIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(i32, i8*, i32, %"class.std::__1::basic_stringstream"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN10openscreen5BreakEv() local_unnamed_addr #3

declare void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC1EOS5_(%"class.std::__1::basic_stringbuf"*, %"class.std::__1::basic_stringbuf"* dereferenceable(104)) unnamed_addr #2

declare void @_ZNSt3__18ios_base4moveERS0_(%"class.std::__1::ios_base"*, %"class.std::__1::ios_base"* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !13
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_4pairIKmtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !12
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %52, label %25

25:                                               ; preds = %18
  %26 = add i64 %6, -1
  br label %27

27:                                               ; preds = %25, %47
  %28 = phi %"struct.std::__1::__hash_node_base"* [ %30, %47 ], [ %23, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %26
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %38, %40, %42
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %47, label %52

47:                                               ; preds = %32, %44
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %4
  br i1 %51, label %138, label %27

52:                                               ; preds = %27, %44, %18, %3
  %53 = phi i64 [ %19, %18 ], [ -6148914691236517206, %3 ], [ %19, %44 ], [ %19, %27 ]
  %54 = tail call i8* @_Znwm(i64 32) #14, !noalias !14
  %55 = getelementptr inbounds i8, i8* %54, i64 16
  %56 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false) #12, !noalias !14
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to i64*
  store i64 %4, i64* %58, align 8, !noalias !14
  %59 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %59, align 8, !noalias !14
  %60 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  %63 = uitofp i64 %62 to float
  %64 = uitofp i64 %6 to float
  %65 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = load float, float* %65, align 4
  %67 = fmul float %66, %64
  %68 = fcmp olt float %67, %63
  %69 = or i1 %7, %68
  br i1 %69, label %70, label %93

70:                                               ; preds = %52
  %71 = shl i64 %6, 1
  %72 = icmp ult i64 %6, 3
  %73 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !12
  %74 = icmp ugt i64 %73, 1
  %75 = or i1 %72, %74
  %76 = zext i1 %75 to i64
  %77 = or i64 %71, %76
  %78 = fdiv float %63, %66
  %79 = tail call float @llvm.ceil.f32(float %78) #12
  %80 = fptoui float %79 to i64
  %81 = icmp ult i64 %77, %80
  %82 = select i1 %81, i64 %80, i64 %77
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %82)
  %83 = load i64, i64* %5, align 8
  %84 = tail call i64 @llvm.ctpop.i64(i64 %83) #12, !range !12
  %85 = icmp ugt i64 %84, 1
  br i1 %85, label %89, label %86

86:                                               ; preds = %70
  %87 = add i64 %83, -1
  %88 = and i64 %87, %4
  br label %93

89:                                               ; preds = %70
  %90 = icmp ult i64 %4, %83
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = urem i64 %4, %83
  br label %93

93:                                               ; preds = %91, %89, %86, %52
  %94 = phi i64 [ %6, %52 ], [ %83, %86 ], [ %83, %89 ], [ %83, %91 ]
  %95 = phi i64 [ %53, %52 ], [ %88, %86 ], [ %4, %89 ], [ %92, %91 ]
  %96 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, i64 %95
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %100, label %101, label %127

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %103 = bitcast %"struct.std::__1::__hash_node_base"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8* %54 to i64*
  store i64 %104, i64* %105, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %102 to i8**
  store i8* %54, i8** %106, align 8
  store %"struct.std::__1::__hash_node_base"* %102, %"struct.std::__1::__hash_node_base"** %98, align 8
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %134, label %109

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 1
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = tail call i64 @llvm.ctpop.i64(i64 %94) #12, !range !12
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = add i64 %94, -1
  %117 = and i64 %112, %116
  br label %122

118:                                              ; preds = %109
  %119 = icmp ult i64 %112, %94
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %112, %94
  br label %122

122:                                              ; preds = %115, %118, %120
  %123 = phi i64 [ %117, %115 ], [ %121, %120 ], [ %112, %118 ]
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %96, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %123
  %126 = bitcast %"struct.std::__1::__hash_node_base"** %125 to i8**
  br label %132

127:                                              ; preds = %93
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8* %54 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i8**
  br label %132

132:                                              ; preds = %122, %127
  %133 = phi i8** [ %131, %127 ], [ %126, %122 ]
  store i8* %54, i8** %133, align 8
  br label %134

134:                                              ; preds = %132, %101
  %135 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"*
  %136 = load i64, i64* %60, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %60, align 8
  br label %138

138:                                              ; preds = %47, %134
  %139 = phi i8 [ 1, %134 ], [ 0, %47 ]
  %140 = phi %"struct.std::__1::__hash_node_base"* [ %135, %134 ], [ %30, %47 ]
  %141 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %140, 0
  %142 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %141, i8 %139, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !17

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJNS_4pairImtEEEEENSF_INS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), %"struct.std::__1::pair.33"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !12
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %52, label %25

25:                                               ; preds = %18
  %26 = add i64 %6, -1
  br label %27

27:                                               ; preds = %25, %47
  %28 = phi %"struct.std::__1::__hash_node_base"* [ %30, %47 ], [ %23, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %26
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %38, %40, %42
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %47, label %52

47:                                               ; preds = %32, %44
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %4
  br i1 %51, label %144, label %27

52:                                               ; preds = %27, %44, %18, %3
  %53 = phi i64 [ %19, %18 ], [ -6148914691236517206, %3 ], [ %19, %44 ], [ %19, %27 ]
  %54 = tail call i8* @_Znwm(i64 32) #14, !noalias !19
  %55 = getelementptr inbounds i8, i8* %54, i64 16
  %56 = bitcast i8* %55 to i64*
  %57 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %2, i64 0, i32 0
  %58 = load i64, i64* %57, align 8, !noalias !19
  store i64 %58, i64* %56, align 8, !noalias !19
  %59 = getelementptr inbounds i8, i8* %54, i64 24
  %60 = bitcast i8* %59 to i16*
  %61 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %2, i64 0, i32 1
  %62 = load i16, i16* %61, align 2, !noalias !19
  store i16 %62, i16* %60, align 8, !noalias !19
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 %4, i64* %64, align 8, !noalias !19
  %65 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %65, align 8, !noalias !19
  %66 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = uitofp i64 %68 to float
  %70 = uitofp i64 %6 to float
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = fmul float %72, %70
  %74 = fcmp olt float %73, %69
  %75 = or i1 %7, %74
  br i1 %75, label %76, label %99

76:                                               ; preds = %52
  %77 = shl i64 %6, 1
  %78 = icmp ult i64 %6, 3
  %79 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !12
  %80 = icmp ugt i64 %79, 1
  %81 = or i1 %78, %80
  %82 = zext i1 %81 to i64
  %83 = or i64 %77, %82
  %84 = fdiv float %69, %72
  %85 = tail call float @llvm.ceil.f32(float %84) #12
  %86 = fptoui float %85 to i64
  %87 = icmp ult i64 %83, %86
  %88 = select i1 %87, i64 %86, i64 %83
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %88)
  %89 = load i64, i64* %5, align 8
  %90 = tail call i64 @llvm.ctpop.i64(i64 %89) #12, !range !12
  %91 = icmp ugt i64 %90, 1
  br i1 %91, label %95, label %92

92:                                               ; preds = %76
  %93 = add i64 %89, -1
  %94 = and i64 %93, %4
  br label %99

95:                                               ; preds = %76
  %96 = icmp ult i64 %4, %89
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = urem i64 %4, %89
  br label %99

99:                                               ; preds = %97, %95, %92, %52
  %100 = phi i64 [ %6, %52 ], [ %89, %92 ], [ %89, %95 ], [ %89, %97 ]
  %101 = phi i64 [ %53, %52 ], [ %94, %92 ], [ %4, %95 ], [ %98, %97 ]
  %102 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %101
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %107, label %133

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast i8* %54 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  store i8* %54, i8** %112, align 8
  store %"struct.std::__1::__hash_node_base"* %108, %"struct.std::__1::__hash_node_base"** %104, align 8
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 1
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = tail call i64 @llvm.ctpop.i64(i64 %100) #12, !range !12
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %115
  %122 = add i64 %100, -1
  %123 = and i64 %118, %122
  br label %128

124:                                              ; preds = %115
  %125 = icmp ult i64 %118, %100
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = urem i64 %118, %100
  br label %128

128:                                              ; preds = %121, %124, %126
  %129 = phi i64 [ %123, %121 ], [ %127, %126 ], [ %118, %124 ]
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %129
  %132 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8**
  br label %138

133:                                              ; preds = %99
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %54 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  br label %138

138:                                              ; preds = %128, %133
  %139 = phi i8** [ %137, %133 ], [ %132, %128 ]
  store i8* %54, i8** %139, align 8
  br label %140

140:                                              ; preds = %138, %107
  %141 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"*
  %142 = load i64, i64* %66, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %66, align 8
  br label %144

144:                                              ; preds = %47, %140
  %145 = phi i8 [ 1, %140 ], [ 0, %47 ]
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %141, %140 ], [ %30, %47 ]
  %147 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %146, 0
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %147, i8 %145, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %148
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @"_ZNK4absl16variant_internal17PerformVisitationIZN10openscreen9discovery10MdnsWriter5WriteERKNS_7variantIJNS3_14RawRecordRdataENS3_14SrvRecordRdataENS3_12ARecordRdataENS3_15AAAARecordRdataENS3_14PtrRecordRdataENS3_14TxtRecordRdataENS3_15NsecRecordRdataENS3_14OptRecordRdataEEEEE3$_0JSG_EEclIJLm18446744073709551615EEEEbDpNSt3__117integral_constantImXT_EEE"() unnamed_addr #11 align 2 {
  tail call fastcc void @"_ZNK4absl16variant_internal17PerformVisitationIZN10openscreen9discovery10MdnsWriter5WriteERKNS_7variantIJNS3_14RawRecordRdataENS3_14SrvRecordRdataENS3_12ARecordRdataENS3_15AAAARecordRdataENS3_14PtrRecordRdataENS3_14TxtRecordRdataENS3_15NsecRecordRdataENS3_14OptRecordRdataEEEEE3$_0JSG_EE3RunIJLm0EEJLm18446744073709551615EEEEbNSt3__117integral_constantIbLb1EEENS_16integer_sequenceImJXspT_EEEEDpNSL_ImXT0_EEE"() #15
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @"_ZNK4absl16variant_internal17PerformVisitationIZN10openscreen9discovery10MdnsWriter5WriteERKNS_7variantIJNS3_14RawRecordRdataENS3_14SrvRecordRdataENS3_12ARecordRdataENS3_15AAAARecordRdataENS3_14PtrRecordRdataENS3_14TxtRecordRdataENS3_15NsecRecordRdataENS3_14OptRecordRdataEEEEE3$_0JSG_EE3RunIJLm0EEJLm18446744073709551615EEEEbNSt3__117integral_constantIbLb1EEENS_16integer_sequenceImJXspT_EEEEDpNSL_ImXT0_EEE"() unnamed_addr #11 align 2 {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #13
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN10openscreen9discovery12_GLOBAL__N_126ComputeDomainNameSubhashesERKNS0_10DomainNameE: argument 0"}
!5 = distinct !{!5, !"_ZN10openscreen9discovery12_GLOBAL__N_126ComputeDomainNameSubhashesERKNS0_10DomainNameE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE: argument 0"}
!8 = distinct !{!8, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!12 = !{i64 0, i64 65}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_4pairIKmtEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_4pairIKmtEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISN_EEEEEEmOT_DpOT0_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairImtEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImtEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairImtEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_"}
